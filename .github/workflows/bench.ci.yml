name: Benchmark

on:
  push:
    branches:
      - stable
  pull_request:
    types: [opened, reopened, synchronize]

env:
  BUILDLESS_APIKEY: ${{ secrets.BUILDLESS_APIKEY }}

permissions:
  contents: read

jobs:
  ##
  ## Job: Benchmarks
  ##

  bench:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu]
        java: [20]
        engine: [graalvm]
        experimental: [false]
        include:
          - os: macos
            java: 20
            engine: graalvm
            experimental: false

    name: "JVM"
    runs-on: ${{ matrix.os }}-latest
    continue-on-error: ${{ matrix.experimental }}

    if: |
      (
        github.ref == 'refs/heads/stable' ||
        github.ref == 'refs/heads/v3' ||
        startsWith(github.ref, 'refs/tags/v') ||
        contains(github.event.pull_request.labels.*.name, 'ci:bench') ||
        contains(github.event.head_commit.message, 'ci:bench')
      )

    permissions:
      actions: "read"
      checks: "write"
      contents: "write"
      pull-requests: "write"

    defaults:
      run:
        shell: bash

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@cba0d00b1fc9a034e1e642ea0f1103c282990604 # v2.5.0
        with:
          egress-policy: audit

      - name: "Setup: Checkout"
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.3
      - name: "Setup: GraalVM"
        uses: graalvm/setup-graalvm@d1891786152ae96fee67f86c3a1eae596291bbed # v1.1.2
        if: ${{ matrix.engine == 'graalvm' }}
        with:
          components: "native-image,js,wasm"
          distribution: 'graalvm'
          java-version: ${{ matrix.java }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: "Setup: Zulu"
        uses: actions/setup-java@cd89f46ac9d01407894225f350157564c9c7cee2 # v3.12.0
        if: ${{ matrix.engine != 'graalvm' }}
        with:
          distribution: ${{ matrix.engine }}
          java-version: ${{ matrix.java }}
      - name: "Setup: Node"
        uses: actions/setup-node@e33196f7422957bea03ed53f6fbb155025ffc7b8 # v3.7.0
        with:
          node-version: 18
          cache: "yarn"
      - name: "Setup: Yarn"
        run: yarn
      - name: "Run Benchmarks"
        uses: gradle/gradle-build-action@a4cf152f482c7ca97ef56ead29bf08bcd953284c # v2.7.0
        id: gradlebench
        continue-on-error: ${{ matrix.experimental }}
        env:
          CI: true
          GRADLE_CACHE_PUSH: false
        with:
          cache-read-only: true
          arguments: |
            :benchmarks:core:benchmark
            :benchmarks:graalvm:benchmark
            :benchmarks:server:benchmark
            --no-daemon
            --warning-mode=none
            --dependency-verification=lenient
            -Pelide.ci=true
            -PbuildBenchmarks=true
            -PbuildSamples=false
            -PbuildDocs=false
            -Pversions.java.language=${{ matrix.java }}
      - name: "Locate Benchmark Report"
        id: benchreport
        run: |
          echo "BENCHMARK_REPORT=$(find benchmarks/server/build/reports/benchmarks/main -name "*.json" | head -n 1)" >> $GITHUB_OUTPUT
      - name: "Restore Previous Benchmark"
        uses: actions/cache@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8 # v3
        with:
          path: ./benchmark_reports
          key: ${{ runner.os }}-${{ matrix.engine }}-${{ matrix.java }}-benchmark
      - name: "Upload Benchmark Report"
        uses: benchmark-action/github-action-benchmark@70405016b032d44f409e4b1b451c40215cbe2393 # v1.18.0
        continue-on-error: true
        with:
          name: "Elide: Server (${{ matrix.os }}, ${{ matrix.engine }}, JDK ${{ matrix.java }})"
          tool: "jmh"
          auto-push: false
          external-data-json-path: benchmark_reports/benchmark-data.json
          comment-on-alert: true
          comment-always: ${{ !matrix.experimental }}
          output-file-path: ${{ steps.benchreport.outputs.BENCHMARK_REPORT }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          fail-on-alert: ${{ !matrix.experimental }}
