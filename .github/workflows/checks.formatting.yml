#
# Copyright (c) 2024 Elide Technologies, Inc.
#
# Licensed under the MIT license (the "License"); you may not use this file except in compliance
# with the License. You may obtain a copy of the License at
#
# https://opensource.org/license/mit/
#
# Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
# an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations under the License.
#

name: Formatting

"on":
  workflow_dispatch:
    inputs:
      ## Input: Artifact Name
      artifact:
        description: "Artifact"
        required: false
        type: string
        default: "elide-framework"

      ## Input: Ignore Failures
      ignore_failures:
        description: "Ignore failures"
        required: false
        type: boolean
        default: false

  workflow_call:
    inputs:
      artifact:
        description: "Artifact"
        required: false
        type: string
        default: "elide-framework"
      ignore_failures:
        description: "Ignore failures"
        required: false
        type: boolean
        default: false

    secrets:
      BUILDLESS_APIKEY:
        description: "Buildless API key"
        required: false
      GRADLE_CONFIGURATION_KEY:
        description: "Gradle cache key"
        required: false

permissions:
  contents: "read"

jobs:
  fmt-check:
    name: "Formatting"
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - name: "Setup: Harden Runner"
        uses: step-security/harden-runner@a4aa98b93cab29d9b1101a6143fb8bce00e2eac4 # v2.7.1
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            api.github.com:443
            download.oracle.com:443
            elide-snapshots.storage-download.googleapis.com:443
            github.com:443
            gradle.less.build:443
            gradle.pkg.st:443
            keyserver.ubuntu.com:443
            maven.pkg.jetbrains.space:443
            maven.pkg.st:443
            nodejs.org:443
            registry.npmjs.org:443
            repo.maven.apache.org:443
      - name: "Setup: Checkout"
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          fetch-depth: 0
          persist-credentials: false
      - name: "Setup: Cache Restore (Build)"
        id: cache-restore-build
        uses: actions/cache/restore@13aacd865c20de90d75de3b17ebe84f7a17d57d2 # v4.0.0
        with:
          key: elide-framework-v1-build-${{ hashFiles('gradle/elide.versions.toml') }}
          restore-keys: |
            elide-framework-v1-build-${{ hashFiles('gradle/elide.versions.toml') }}
            elide-framework-v1-build-
            elide-framework-v1-
            elide-framework-
          path: |
            .gradle/
            build/
            .codebase/
            ~/.konan
            .kotlin/
            packages/*/build/bin
            packages/*/build/classes
            packages/*/build/kotlin
            packages/*/build/klib
            packages/*/build/generated
            packages/*/build/generated-sources
            packages/proto/*/build/bin
            packages/proto/*/build/classes
            packages/proto/*/build/kotlin
            packages/proto/*/build/klib
            packages/proto/*/build/generated
            packages/proto/*/build/generated-sources
            tools/elide-build/build/bin
            tools/elide-build/build/classes
            tools/elide-build/build/kotlin
            tools/elide-build/build/klib
            tools/elide-build/build/generated
            tools/elide-build/build/generated-sources
      - name: "Setup: Node"
        uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4.0.2
        with:
          node-version: 22
      - name: "Setup: PNPM"
        uses: pnpm/action-setup@a3252b78c470c02df07e9d59298aecedc3ccdd6d # v3.0.0
        with:
          version: "9.0.6"
          run_install: |
            - recursive: true
              args: [--frozen-lockfile, --strict-peer-dependencies]
      - name: "Setup: Yarn"
        run: pnpm install -g yarn@1.22.19
      - name: "Setup: GraalVM (Java 22)"
        uses: graalvm/setup-graalvm@2f25c0caae5b220866f732832d5e3e29ff493338 # v1.2.1
        with:
          distribution: "graalvm"
          java-version: 22
          check-for-updates: false
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: "Setup: Artifacts"
        uses: actions/download-artifact@65a9edc5881444af0b9093a5e628f2fe47ea3b2e # v4.1.7
        continue-on-error: true
        with:
          merge-multiple: true
      - name: "Analysis: Formatting (Prettier)"
        run: pnpm run prettier --check .
      - name: "Analysis: Formatting (Spotless)"
        uses: gradle/actions/setup-gradle@db19848a5fa7950289d3668fb053140cf3028d43 # v3.3.2
        continue-on-error: ${{ inputs.ignore_failures }}
        env:
          CI: true
          BUILDLESS_APIKEY: ${{ secrets.BUILDLESS_APIKEY }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          cache-read-only: true
          cache-encryption-key: ${{ secrets.GRADLE_CONFIGURATION_KEY }}
          arguments: |
            spotlessCheck
            -x nativeCompile
            -x nativeOptimizedCompile
