#
# Copyright (c) 2024 Elide Technologies, Inc.
#
# Licensed under the MIT license (the "License"); you may not use this file except in compliance
# with the License. You may obtain a copy of the License at
#
# https://opensource.org/license/mit/
#
# Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
# an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations under the License.
#

name: Qodana

"on":
  workflow_dispatch:
    inputs:
      ## Input: Artifact Name
      artifact:
        description: "Artifact"
        required: false
        type: string
        default: "elide-framework"

  workflow_call:
    inputs:
      artifact:
        description: "Artifact"
        required: false
        type: string
        default: "elide-framework"

    secrets:
      QODANA_TOKEN:
        description: "Qodana token"
        required: true
      BUILDLESS_APIKEY:
        description: "Buildless API key"
        required: false
      GRADLE_CONFIGURATION_KEY:
        description: "Gradle cache key"
        required: false

permissions:
  contents: "read"

jobs:
  qodana:
    name: "Qodana"
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - name: "Setup: Harden Runner"
        uses: step-security/harden-runner@63c24ba6bd7ba022e95695ff85de572c04a18142 # v2.7.0
        with:
          egress-policy: audit
      - name: "Setup: Checkout"
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          persist-credentials: false
      - name: "Setup: Cache Restore"
        id: cache-restore
        uses: actions/cache/restore@13aacd865c20de90d75de3b17ebe84f7a17d57d2 # v4.0.0
        with:
          key: elide-framework-v1-build-${{ hashFiles('gradle/elide.versions.toml') }}
          restore-keys: |
            elide-framework-v1-build-${{ hashFiles('gradle/elide.versions.toml') }}
            elide-framework-v1-build-
            elide-framework-v1-
            elide-framework-
          path: |
            .gradle/
            build/
            .codebase/
            ~/.konan
            .kotlin/
            packages/*/build/bin
            packages/*/build/classes
            packages/*/build/kotlin
            packages/*/build/klib
            packages/*/build/generated
            packages/*/build/generated-sources
            packages/proto/*/build/bin
            packages/proto/*/build/classes
            packages/proto/*/build/kotlin
            packages/proto/*/build/klib
            packages/proto/*/build/generated
            packages/proto/*/build/generated-sources
            tools/elide-build/build/bin
            tools/elide-build/build/classes
            tools/elide-build/build/kotlin
            tools/elide-build/build/klib
            tools/elide-build/build/generated
            tools/elide-build/build/generated-sources
      - name: "Setup: GraalVM (Java 21)"
        uses: graalvm/setup-graalvm@d72e3dbf5f44eb0b78c4f8ec61a262d8bf9b94af # v1.1.7
        with:
          distribution: "graalvm"
          java-version: 21
          check-for-updates: false
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: "Setup: Artifacts"
        uses: actions/download-artifact@eaceaf801fd36c7dee90939fad912460b18a1ffe # v4.1.2
        continue-on-error: true
        with:
          merge-multiple: true
      - name: "Analysis: Build"
        uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0
        continue-on-error: true
        with:
          cache-read-only: true
          cache-encryption-key: ${{ secrets.GRADLE_CONFIGURATION_KEY }}
          arguments: |
            compileKotlin
            -x test
            -x check
            -x nativeCompile
            -x nativeOptimizedCompile
      - name: "Analysis: Qodana Scan"
        uses: JetBrains/qodana-action@9a71424636be05dccc139d34e7248de96fd15d9c # main
        continue-on-error: true
        env:
          QODANA_TOKEN: ${{ secrets.QODANA_TOKEN }}
          BUILDLESS_APIKEY: ${{ secrets.BUILDLESS_APIKEY }}
        with:
          args: --baseline,qodana.sarif.json
      - name: "Report: SARIF Upload"
        uses: github/codeql-action/upload-sarif@379614612a29c9e28f31f39a59013eb8012a51f0 # v3.24.3
        with:
          sarif_file: ${{ runner.temp }}/qodana/results/qodana.sarif.json
