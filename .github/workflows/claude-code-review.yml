name: Claude Code Review

on:
  workflow_dispatch:
    inputs:
      runner:
        description: "Runner"
        required: false
        default: "ubuntu-latest"
        type: string
  workflow_call:
    inputs:
      runner:
        description: "Runner"
        required: false
        default: "ubuntu-latest"
        type: string
    secrets:
      ANTHROPIC_API_KEY:
        description: "Anthropic API Key"
        required: true

permissions:
  contents: read

concurrency:
  group: claude-review-${{ github.event.pull_request.number }}
  cancel-in-progress: true

jobs:
  claude-review:
    name: "Claude Review"
    runs-on: ${{ inputs.runner || 'ubuntu-latest' }}
    timeout-minutes: 15
    permissions:
      contents: read
      pull-requests: read
      issues: read
      id-token: write
    if: |
      (github.event.pull_request.author_association == 'OWNER' ||
      github.event.pull_request.author_association == 'MEMBER' ||
      github.event.pull_request.author_association == 'COLLABORATOR') &&
      !contains(github.event.pull_request.title, '[skip-review]') &&
      !contains(github.event.pull_request.title, '[WIP]') &&
      github.event.pull_request.user.login != 'dependabot[bot]'
    steps:
      - name: "Setup: Harden Runner"
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          disable-sudo: true
          egress-policy: audit
      - name: "Setup: Checkout"
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: "Setup: GraalVM (Java 25)"
        uses: graalvm/setup-graalvm@eec48106e0bf45f2976c2ff0c3e22395cced8243 # v1.4.2
        with:
          distribution: "graalvm"
          java-version: "25"
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: "Setup: Node"
        uses: actions/setup-node@a0853c24544627f65ddf259abe73b1d18a591444 # v5.0.0
        with:
          node-version: 23
      - name: "Setup: Bun"
        uses: step-security/setup-bun@81c6b5758214d7e8b68a403c6a55a040e9b8879a # v2.0.3
        with:
          bun-version: "1.2.14"
      - name: "Setup: PNPM"
        uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4.1.0
        with:
          version: "10.6.2"
      - name: "Setup: Elide"
        uses: elide-dev/setup-elide@990b915b2974a70e7654acb1303607b4cd1d3538 # v2
        with:
          version: "1.0.0-beta10"
      - name: "Review: Claude"
        id: claude-review
        uses: anthropics/claude-code-action@777ffcbfc9d2e2b07f3cfec41b7c7eadedd1f0dc # beta
        with:
          anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}
          custom_instructions: |
            Consider the following facts about Elide:
            - Elide is a Node.js-like runtime (i.e. a binary on a user's machine)
            - Elide is powered by Oracle GraalVM and Native Image
            - Elide supports multiple interoperable langs: TypeScript, JS, Python, Kotlin, Java, and others
            - Elide is "batteries-included" with a package installer, builder, and test runner
            - Elide targets JVM and is written in Kotlin, Java, and Rust
            - Elide's native code (Rust and C libraries) is dispatched over JNI, usually
            - Kotlin and Java turn into JVM bytecode, which turns into native code via GraalVM Native Image

            Tools used by the project:
            - Cargo, Rust, Make
            - Gradle, Kotlin (K2), JVM
            - Oracle GraalVM at latest
          direct_prompt: |
            Please review this pull request and provide feedback on:
            - Code quality and best practices
            - Potential bugs or issues
            - Performance considerations
            - Security concerns
            - Test coverage

            Be constructive and helpful in your feedback.
            If the developer is a first-time contributor, or encounters issues on their PR, offer to link them
            to Elide's documentation or Discord. Consume from these sources as needed for context. Links:
            - Elide Docs: https://docs.elide.dev/
            - Elide Discord: https://elide.dev/discord
            Some notes about what to prioritize:
            - We don't care about test coverage on every PR; 40% is acceptable as a project-wide target
            - The team prefers to move fast while we are in beta, so don't be overly critical
            - Propose changes in your summary, keep your summary as concise as reasonably possible
            - Summarize the PR for human reviewers (and self-review), mostly you are looking for glaring bugs or flaws
          allowed_tools: |
            Bash(pnpm install)
            Bash(cargo check)
            Bash(cargo build --target=x86_64-unknown-linux-gnu)
            Bash(./gradlew build)
            Bash(./gradlew test)
            Bash(./gradlew check)
            Bash(./gradlew build test check)
            Bash(./gradlew -Pelide.abiValidate=true apiCheck)
