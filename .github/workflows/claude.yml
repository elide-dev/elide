name: Claude Code

on:
  issue_comment:
    types: [created]
  pull_request_review_comment:
    types: [created]
  issues:
    types: [opened, assigned]
  pull_request_review:
    types: [submitted]

permissions:
  contents: read

jobs:
  claude:
    name: "Claude"
    if: |
      (github.event.comment.author_association == 'OWNER' ||
      github.event.comment.author_association == 'MEMBER' ||
      github.event.comment.author_association == 'COLLABORATOR') &&
      (github.event_name == 'issue_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review' && contains(github.event.review.body, '@claude')) ||
      (github.event_name == 'issues' && (contains(github.event.issue.body, '@claude') || contains(github.event.issue.title, '@claude')))
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
      issues: read
      id-token: write
    steps:
      - name: "Setup: Harden Runner"
        uses: step-security/harden-runner@002fdce3c6a235733a90a27c80493a3241e56863 # v2.12.1
        with:
          disable-sudo: true
          egress-policy: audit
      - name: "Setup: Checkout"
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 1
      - name: "Setup: GraalVM (Java 24)"
        uses: graalvm/setup-graalvm@01ed653ac833fe80569f1ef9f25585ba2811baab # v1.3.3
        with:
          distribution: "graalvm"
          java-version: "24"
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: "Setup: Node"
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: 23
      - name: "Setup: Bun"
        uses: step-security/setup-bun@a961ff54612b97ac3259f517fb6a81be3b657a59 # v2.0.2
        with:
          bun-version: "1.2.14"
      - name: "Setup: PNPM"
        uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4.1.0
        with:
          version: "10.6.2"
      - name: "Setup: Elide"
        uses: elide-dev/setup-elide@990b915b2974a70e7654acb1303607b4cd1d3538 # v2
        with:
          version: "1.0.0-beta6"
      - name: "Check: Anthropic API Key"
        run: |
          if [ -z "${{ secrets.ANTHROPIC_API_KEY }}" ]; then
            echo "ANTHROPIC_API_KEY secret is not set"
            exit 1
          fi
      - name: "Run: Claude"
        id: claude
        uses: anthropics/claude-code-action@41dd0aa695a06b94f18ce26fd851bfd6ed9d8760 # beta
        with:
          anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}
          custom_instructions: |
            Consider the following facts about Elide:
            - Elide is a Node.js-like runtime (i.e. a binary on a user's machine)
            - Elide is powered by Oracle GraalVM and Native Image
            - Elide supports multiple interoperable langs: TypeScript, JS, Python, Kotlin, Java, and others
            - Elide is "batteries-included" with a package installer, builder, and test runner
            - Elide targets JVM and is written in Kotlin, Java, and Rust
            - Elide's native code (Rust and C libraries) is dispatched over JNI, usually
            - Kotlin and Java turn into JVM bytecode, which turns into native code via GraalVM Native Image

            Tools used by the project:
            - Cargo, Rust, Make
            - Gradle, Kotlin (K2), JVM
            - Oracle GraalVM at latest
          allowed_tools: |
            Bash(pnpm install)
            Bash(cargo check)
            Bash(cargo build --target=x86_64-unknown-linux-gnu)
            Bash(./gradlew build)
            Bash(./gradlew test)
            Bash(./gradlew check)
            Bash(./gradlew build test check)
            Bash(./gradlew -Pelide.abiValidate=true apiCheck)
