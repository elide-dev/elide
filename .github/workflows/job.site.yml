#
# Copyright (c) 2024 Elide Technologies, Inc.
#
# Licensed under the MIT license (the "License"); you may not use this file except in compliance
# with the License. You may obtain a copy of the License at
#
# https://opensource.org/license/mit/
#
# Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
# an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations under the License.
#

name: Site

"on":
  workflow_dispatch: {}
  workflow_call: {}

env:
  BUILDLESS_APIKEY: ${{ secrets.BUILDLESS_APIKEY }}

permissions:
  contents: read

jobs:
  ##
  ## Job: Site Build
  ##
  site-build:
    name: "Site: Build"
    runs-on: ubuntu-latest
    continue-on-error: false

    permissions:
      contents: "read"
      id-token: "write"
      checks: "write"
      pull-requests: "write"

    steps:
      - name: "Setup: Harden Runner"
        uses: step-security/harden-runner@4d991eb9b905ef189e4c376166672c3f2f230481 # v2.11.0
        with:
          egress-policy: audit
      - name: "Setup: Checkout"
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
          persist-credentials: false
      - name: "Setup: QEMU"
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3.6.0
      - name: "Setup: Docker Buildx"
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3.10.0
      - name: "Setup: GraalVM"
        uses: graalvm/setup-graalvm@aafbedb8d382ed0ca6167d3a051415f20c859274 # v1.2.8
        with:
          distribution: "graalvm"
          java-version: 23
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - id: "auth"
        name: "Setup: Authorize Service Account"
        uses: google-github-actions/auth@71f986410dfbc7added4569d411d040a91dc6935 # v2.1.8
        with:
          credentials_json: "${{ secrets.BUILDBOT_SERVICE_ACCOUNT }}"
          create_credentials_file: true
          export_environment_variables: true
          cleanup_credentials: true
      - name: "Setup: Setup Cloud SDK"
        uses: google-github-actions/setup-gcloud@77e7a554d41e2ee56fc945c52dfd3f33d12def9a # v2.1.4
        with:
          version: 389.0.0
          project_id: elide-fw
      - name: "Authorize Docker: GCP"
        run: |
          gcloud auth configure-docker us-docker.pkg.dev
      - name: "Authorize Docker: GHCR"
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
        with:
          registry: ghcr.io
          username: elidebot
          password: ${{ secrets.BUILDBOT_GHCR_TOKEN }}
      - name: "Setup: Node"
        uses: actions/setup-node@1d0ff469b7ec7b3cb9d8673fde0c81c44821de2a # v4.2.0
        with:
          node-version: 23
      - name: "Setup: Yarn"
        run: yarn
      - name: "Build: Reference Docs"
        env:
          CI: true
        run: |
          make docs reports CI=yes JVM=21
      - name: "Build: Site"
        uses: gradle/actions/setup-gradle@94baf225fe0a508e581a564467443d0e2379123b # v4.3.0
        env:
          CI: true
        with:
          cache-read-only: true
          cache-encryption-key: ${{ secrets.GRADLE_CONFIGURATION_KEY }}
          arguments: |
            :site:docs:app:build
            :site:docs:app:dockerBuild
            :site:docs:app:dockerPush
            --scan
            --warning-mode=none
            --dependency-verification=lenient
            -Pelide.ci=true
            -Pelide.release=true
            -PbuildSamples=false
            -PbuildDocs=true
            -Pversions.java.language=21
            -x test
            -x check
            -x apiCheck
            -x nativeTest
            -x nativeCompile
      - name: "Build: Compress Site"
        run: |
          tar -czf site.tar.gz build/site
      - name: "Upload: Manifest"
        uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 # v4.6.1
        with:
          name: site-tarball-phase1
          path: ./site.tar.gz
      - name: "Upload: Site"
        uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 # v4.6.1
        with:
          name: site-manifest
          path: ./site/docs/app/build/generated/ksp/main/resources/elide/runtime/generated/app.manifest.pb

  ##
  ## Job: SSG Compile
  ##
  ssg-compile:
    name: "Site: SSG Compile"
    needs: [site-build]
    runs-on: ubuntu-latest

    permissions:
      contents: "read"
      id-token: "write"
      checks: "write"
      pull-requests: "write"

    services:
      site:
        image: us-docker.pkg.dev/elide-fw/samples/site/docs/jvm:latest
        credentials:
          username: _json_key_base64
          password: ${{  secrets.BUILDBOT_SERVICE_ACCOUNT_B64 }}
        ports:
          - 8080:8080
          - 8443:8443
        options: >-
          --health-cmd "curl --fail http://localhost:8080/"
          --health-interval 10s
          --health-timeout 10s
          --health-retries 4

    steps:
      - name: "Setup: Harden Runner"
        uses: step-security/harden-runner@4d991eb9b905ef189e4c376166672c3f2f230481 # v2.11.0
        with:
          egress-policy: audit

      - name: "Setup: Checkout"
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: "Setup: QEMU"
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3.6.0
      - name: "Setup: Docker Buildx"
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3.10.0
      - name: "Setup: GraalVM"
        uses: graalvm/setup-graalvm@aafbedb8d382ed0ca6167d3a051415f20c859274 # v1.2.8
        with:
          components: "native-image,js,wasm"
          distribution: "graalvm"
          java-version: 20
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - id: "auth"
        name: "Setup: Authorize Service Account"
        uses: google-github-actions/auth@71f986410dfbc7added4569d411d040a91dc6935 # v2.1.8
        with:
          credentials_json: "${{ secrets.BUILDBOT_SERVICE_ACCOUNT }}"
          create_credentials_file: true
          export_environment_variables: true
          cleanup_credentials: true
      - name: "Setup: Setup Cloud SDK"
        uses: google-github-actions/setup-gcloud@77e7a554d41e2ee56fc945c52dfd3f33d12def9a # v2.1.4
        with:
          version: 389.0.0
          project_id: elide-fw
      - name: "Authorize Docker: GCP"
        run: |
          gcloud auth configure-docker us-docker.pkg.dev
      - name: "Authorize Docker: GHCR"
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
        with:
          registry: ghcr.io
          username: elidebot
          password: ${{ secrets.BUILDBOT_GHCR_TOKEN }}
      - name: "Setup: Node"
        uses: actions/setup-node@1d0ff469b7ec7b3cb9d8673fde0c81c44821de2a # v4.2.0
        with:
          node-version: 23
      - name: "Setup: Yarn"
        run: yarn
      - name: "Setup: Site Manifest"
        uses: actions/download-artifact@cc203385981b70ca67e1cc392babf9cc229d5806 # v4.1.9
        with:
          name: site-manifest
          path: ./artifacts/
      - name: "Setup: Site Tarball"
        uses: actions/download-artifact@cc203385981b70ca67e1cc392babf9cc229d5806 # v4.1.9
        with:
          name: site-tarball-phase1
          path: .
      - name: "Setup: Expand Site Tarball"
        run: |
          tar -xzf site.tar.gz
      - name: "Setup: Show Artifacts"
        run: ls -R
        working-directory: ./artifacts/
      - name: "Setup: Test Site Container"
        run: |
          curl -vv --fail http://localhost:8080/ || exit 1
      - name: "Build: Compile SSG Site"
        env:
          CI: true
        run: |
          rm -fv ./site/docs/app/build/ssg-site.zip;
          mkdir -p ./site/docs/app/build;
          ./gradlew \
            :packages:ssg:run \
            --warning-mode=none \
            --dependency-verification=lenient \
            -Pelide.ci=true \
            -Pelide.release=true \
            -PbuildSamples=false \
            -PbuildDocs=true \
            -Pversions.java.language=21 \
            --args="--http --ignore-cert-errors --verbose --no-crawl $PWD/artifacts/app.manifest.pb http://localhost:8080 $PWD/site/docs/app/build/ssg-site.zip"
      - name: "Build: Assemble Site"
        run: make site CI=yes JVM=21;
      - name: "Build: Compress Site"
        run: |
          rm -fv site.tar.gz;
          tar -czf site.tar.gz build/site;
      - name: "Upload: Site Tarball"
        uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 # v4.6.1
        with:
          name: site-tarball-phase2
          path: ./site.tar.gz
      - name: "Upload: Site Artifact"
        uses: actions/upload-pages-artifact@56afc609e74202658d3ffba0e8f6dda462b719fa # v3.0.1
        with:
          path: build/site

  ##
  ## Job: Site Deploy
  ##
  site-deploy:
    name: "Site: Deploy"
    runs-on: ubuntu-latest
    needs: [site-build, ssg-compile]
    environment: github-pages
    concurrency: "deploy-pages"
    if: |
      (
        github.ref == 'refs/heads/stable' ||
        github.ref == 'refs/heads/v3' ||
        contains(github.event.pull_request.labels.*.name, 'ci:deploy-site') ||
        contains(github.event.pull_request.labels.*.name, 'ci:deploy') ||
        contains(github.event.head_commit.message, 'ci:deploy-site') ||
        contains(github.event.head_commit.message, 'ci:deploy') ||
        startsWith(github.ref, 'refs/tags/v')
      )

    permissions:
      contents: "read"
      id-token: "write"
      checks: "write"
      pull-requests: "write"
      statuses: "write"
      deployments: "write"
      pages: "write"

    steps:
      - name: "Setup: Harden Runner"
        uses: step-security/harden-runner@4d991eb9b905ef189e4c376166672c3f2f230481 # v2.11.0
        with:
          egress-policy: audit

      - name: "Deploy Site: GitHub Pages"
        id: site-deploy
        uses: actions/deploy-pages@d6db90164ac5ed86f2b6aed7e0febac5b3c0c03e # v4.0.5
