#
# Copyright (c) 2024 Elide Technologies, Inc.
#
# Licensed under the MIT license (the "License"); you may not use this file except in compliance
# with the License. You may obtain a copy of the License at
#
# https://opensource.org/license/mit/
#
# Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
# an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations under the License.
#

name: Tests

"on":
  workflow_dispatch:
    inputs:
      ## Input: Enable Native Targets
      native:
        description: "Native"
        type: boolean
        default: false

      ## Input: Enable Release Targets
      release:
        description: "Release"
        type: boolean
        default: false

      ## Input: Publish Libraries
      publish:
        description: "Publish"
        type: boolean
        default: false

      ## Input: Deploy Samples
      deploy:
        description: "Deploy"
        type: boolean
        default: false

      ## Input: Enable Container Targets
      containers:
        description: "Containers"
        type: boolean
        default: false

      ## Input: Enable macOS
      macos:
        description: "Enable macOS"
        type: boolean
        default: false

      ## Input: Enable Windows
      windows:
        description: "Enable Windows"
        type: boolean
        default: false

      ## Input: Runner
      runner:
        description: "Runner"
        type: string
        default: ubuntu-latest

  workflow_call:
    inputs:
      native:
        description: "Native"
        type: boolean
        default: false
      release:
        description: "Release"
        type: boolean
        default: false
      containers:
        description: "Containers"
        type: boolean
        default: false
      publish:
        description: "Publish"
        type: boolean
        default: false
      deploy:
        description: "Deploy"
        type: boolean
        default: false
      macos:
        description: "Enable macOS"
        type: boolean
        default: false
      windows:
        description: "Enable Windows"
        type: boolean
        default: false
      runner:
        description: "Runner to use"
        type: string
        default: ubuntu-latest
      runner_large:
        description: "Runner (Large)"
        type: string
        default: ubuntu-latest-8-cores
      runner_large_macos:
        description: "Runner (Large, macOS)"
        type: string
        default: macos-13-xl
      runner_large_windows:
        description: "Runner (Large, Windows)"
        type: string
        default: windows-latest-8-cores

    secrets:
      BUILDLESS_APIKEY:
        required: false
        description: "Buildless API Key"
      HUGGINGFACE_TOKEN:
        required: true
        description: "HuggingFace Token"
      BUILDBOT_SERVICE_ACCOUNT:
        required: false
        description: "GCP Service Account"
      BUILDBOT_GHCR_TOKEN:
        required: false
        description: "GHCR Token"
      CODECOV_TOKEN:
        required: false
        description: "Codecov token"
      GRADLE_CONFIGURATION_KEY:
        required: false
        description: "Gradle cache key"
      SONAR_TOKEN:
        required: true
        description: "Sonar token"

permissions:
  contents: read

env:
  CI: "true"
  RUST_BACKTRACE: full
  ELIDE_VERSION: "1.0.0-beta2"
  SCCACHE_DIRECT: "true"
  RUSTC_WRAPPER: "sccache"

jobs:
  ##
  ## Job: Testsuite (JVM)
  ##
  tests:
    name: "Tests: All Suites"
    runs-on: ${{ inputs.runner }}

    permissions:
      contents: "read"
      id-token: "write"
      checks: "write"
      packages: "read"
      pull-requests: "write"

    steps:
      - name: "Setup: Harden Runner"
        uses: step-security/harden-runner@4d991eb9b905ef189e4c376166672c3f2f230481 # v2.11.0
        with:
          disable-sudo: false
          egress-policy: block
          allowed-endpoints: >
            agent.less.build:443
            androidx.dev:443
            api.codecov.io:443
            api.foojay.io:443
            api.github.com:443
            api.nuget.org:443
            api.sonarcloud.io:443
            apt.llvm.org:443
            apt.llvm.org:80
            azure.archive.ubuntu.com:80
            bun.sh:443
            cli.codecov.io:443
            cli.less.build:443
            crates.io:443
            d3ob9fqp587by1.cloudfront.net:443
            dc.services.visualstudio.com:443
            dl.elide.dev:443
            dl.google.com:443
            dl.less.build:443
            download-cdn.jetbrains.com:443
            download.jetbrains.com:443
            download.oracle.com:443
            downloads.gradle.org:443
            ea6ne4j2sb.execute-api.eu-central-1.amazonaws.com:443
            edge.pkg.st:443
            elide-snapshots.storage-download.googleapis.com:443
            elide.sh:80
            elide.zip:443
            esm.ubuntu.com:443
            files.pythonhosted.org:443
            github.com:22
            github.com:443
            global.less.build:443
            go.dev:443
            google.com:443
            gradle.less.build:443
            gradle.pkg.st:443
            ha.pool.sks-keyservers.net:11371
            httpbin.org:443
            index.crates.io:443
            ingest.codecov.io:443
            jcenter.bintray.com:443
            jitpack.io:443
            jpms.pkg.st:443
            keybase.io:443
            keys.openpgp.org:443
            keyserver.ubuntu.com:443
            local.less.build:443
            maven.elide.dev:443
            maven.pkg.jetbrains.space:443
            maven.pkg.st:443
            mirror.bazel.build:443
            motd.ubuntu.com:443
            nodejs.org:443
            npm.pkg.st:443
            o26192.ingest.us.sentry.io:443
            objects.githubusercontent.com:443
            oss.sonatype.org:443
            packages.microsoft.com:443
            pgp.mit.edu:443
            plugins-artifacts.gradle.org:443
            plugins.gradle.org:443
            projectlombok.org:443
            proxy.golang.org:443
            pypi.org:443
            raw.githubusercontent.com:443
            registry.npmjs.org:443
            registry.yarnpkg.com:443
            releases.bazel.build:443
            repo.maven.apache.org:443
            repo1.maven.org:443
            sc-cleancode-sensorcache-eu-central-1-prod.s3.amazonaws.com:443
            scanner.sonarcloud.io:443
            scans-in.gradle.com:443
            services.gradle.org:443
            sonarcloud.io:443
            static.crates.io:443
            static.rust-lang.org:443
            storage.googleapis.com:443
            www.google.com:443
            www.googleapis.com:443
            ziglang.org:443
      - name: "Setup: Checkout"
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
          submodules: true
          persist-credentials: false
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: "Setup: Cache Restore (Test)"
        id: cache-restore
        uses: buildjet/cache/restore@3e70d19e31d6a8030aeddf6ed8dbe601f94d09f4 # v4.0.2
        with:
          key: elide-v3-tests-${{ hashFiles('gradle/elide.versions.toml') }}
          path: |
            build/reports/kover/**/*.*
            packages/*/test-results/
            packages/proto/*/test-results/
            tools/elide-build/test-results/
            packages/*/reports/
            packages/proto/*/reports/
            tools/elide-build/reports/
            tools/elide-build/build/
            packages/*/build/**/*.*
            target/
            target/x86_64-unknown-linux-gnu/debug/*.a
            target/x86_64-unknown-linux-gnu/debug/*.so
            target/x86_64-unknown-linux-gnu/debug/*.a
            target/x86_64-unknown-linux-gnu/debug/*.so
            third_party/sqlite/install/
          restore-keys: |
            elide-v3-tests-${{ hashFiles('gradle/elide.versions.toml') }}
            elide-v3-
      - name: "Setup: Rust"
        uses: actions-rust-lang/setup-rust-toolchain@9399c7bb15d4c7d47b27263d024f0a4978346ba4 # v1.11.0
        with:
          toolchain: stable
          cache: false # handled by sccache
      - name: "Setup: SCCache"
        uses: mozilla-actions/sccache-action@65101d47ea8028ed0c98a1cdea8dd9182e9b5133 # v0.0.8
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: "Setup: Rust Caching"
        run: echo "RUSTC_WRAPPER=sccache" >> $GITHUB_ENV
      - name: "Setup: GraalVM (Java 23)"
        uses: graalvm/setup-graalvm@01ed653ac833fe80569f1ef9f25585ba2811baab # v1.3.3
        with:
          distribution: "graalvm"
          java-version: "23"
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: "Setup: Node"
        uses: actions/setup-node@cdca7365b2dadb8aad0a33bc7601856ffabcc48e # v4.3.0
        with:
          node-version: 23
      - name: "Setup: Bun"
        uses: oven-sh/setup-bun@4bc047ad259df6fc24a6c9b0f9a0cb08cf17fbe5 # v2.0.1
        with:
          bun-version-file: config/bun-version
      - name: "Setup: PNPM"
        uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4.1.0
        with:
          version: "10.6.2"
      - name: "Setup: Elide"
        uses: elide-dev/setup-elide@990b915b2974a70e7654acb1303607b4cd1d3538 # v2
        with:
          version: "1.0.0-beta2"
      - name: "Setup: Dependencies"
        run: |
          echo "Setting up venv..."
          uv venv
          echo "Activating venv..."
          . .venv/bin/activate
          echo "Installing dependencies via Pip..."
          uv pip install -r config/requirements.txt
          echo PATH=$PATH >> $GITHUB_ENV
          echo "Installing dependencies..."
          elide install
      - name: "Setup: Artifacts"
        uses: actions/download-artifact@95815c38cf2ff2164869cbab79da8d1f422bc89e # v4.2.1
        continue-on-error: true
        with:
          merge-multiple: true
      - name: "Setup: Gradle"
        uses: gradle/actions/setup-gradle@94baf225fe0a508e581a564467443d0e2379123b # v4.3.0
        env:
          CI: true
          BUILDLESS_APIKEY: ${{ secrets.BUILDLESS_APIKEY }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          TEST_EXCEPTIONS: true
        with:
          cache-read-only: false
          cache-encryption-key: ${{ secrets.GRADLE_CONFIGURATION_KEY }}
          dependency-graph: disabled
          gradle-home-cache-includes: binaryen
            caches
            jdks
            native
            native-build-tools
            nodejs
            notifications
            wrapper
            yarn
      - name: "Setup: Gradle Settings"
        run: cp -fv ./.github/workflows/gradle-ci.properties ~/.gradle/gradle.properties
      - name: "Build Environment"
        run: make info CI=yes 2>&1 | tee build-info.txt
      - name: "👨‍🔬 Test: Runtime"
        env:
          CI: true
          BUILDLESS_APIKEY: ${{ secrets.BUILDLESS_APIKEY }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          TEST_EXCEPTIONS: true
          HUGGINGFACE_TOKEN: ${{ secrets.HUGGINGFACE_TOKEN }}
        run: |
          ./gradlew \
            test \
            jvmTest \
            allTests \
            koverXmlReport \
            koverBinaryReport \
            koverVerify \
            -x nativeTest \
            --scan \
            --build-cache \
            --dependency-verification=off \
            -x apiCheck \
            -x spotlessCheck \
            -Pelide.ci=true \
            -PbuildDocs=false
      - name: "Analysis: Sonar"
        if: false
        continue-on-error: true
        env:
          CI: true
          BUILDLESS_APIKEY: ${{ secrets.BUILDLESS_APIKEY }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          TEST_EXCEPTIONS: true
        run: |
          ./gradlew \
              sonar \
              --build-cache \
              --dependency-verification=lenient \
              -x apiCheck \
              -Pelide.ci=true \
              -PbuildDocs=false
      - name: "Artifact: Reports"
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: test-reports-jvm
          path: |
            build-info.txt
            target/coverage-report.lcov
            target/coverage-report.json
            **/build/reports/jacoco/test/jacocoTestReport.xml
            **/build/reports/jacoco/testCodeCoverageReport/jacocoTestReport.xml
            **/build/reports/jacoco/testCodeCoverageReport/testCodeCoverageReport.xml
            build/reports/kover/**/*.*
            tools/reports/build/reports/**/*.xml
            tools/reports/build/test-results/**/*.xml
      - name: "Report: Codecov (Main)"
        uses: codecov/codecov-action@0565863a31f2c772f9f0395002a31e3f06189574 # v5.4.0
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./build/reports/kover/merged/xml/report.xml
          exclude: target
          name: elide
          flags: jvm,lib
          fail_ci_if_error: false
          verbose: true
      - name: "Report: Codecov (Native)"
        uses: codecov/codecov-action@0565863a31f2c772f9f0395002a31e3f06189574 # v5.4.0
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./target/coverage-report.lcov
          name: elide-native
          flags: native
          disable_search: true
          fail_ci_if_error: false
          verbose: true
      - name: "Artifact: Caches"
        uses: buildjet/cache/save@3e70d19e31d6a8030aeddf6ed8dbe601f94d09f4 # v4.0.2
        with:
          key: ${{ steps.cache-restore.outputs.cache-primary-key }}
          path: |
            build/reports/kover/**/*.*
            packages/*/test-results/
            packages/proto/*/test-results/
            tools/elide-build/test-results/
            packages/*/reports/
            packages/proto/*/reports/
            tools/elide-build/reports/
            tools/elide-build/build/**/*.*
            packages/*/build/**/*.*
            target/
            target/x86_64-unknown-linux-gnu/debug/*.a
            target/x86_64-unknown-linux-gnu/debug/*.so
            target/x86_64-unknown-linux-gnu/debug/*.a
            target/x86_64-unknown-linux-gnu/debug/*.so
            third_party/sqlite/install/

  ##
  ## Job: Testsuite (Native)
  ##
  tests-native:
    name: "Tests: Native"
    runs-on: ${{ inputs.runner_large || 'ubuntu-latest-8-cores' }}
    if: inputs.native
    steps:
      - name: "Setup: Harden Runner"
        uses: step-security/harden-runner@4d991eb9b905ef189e4c376166672c3f2f230481 # v2.11.0
        with:
          disable-sudo: false
          egress-policy: audit
          allowed-endpoints: >
            agent.less.build:443
            static.rust-lang.org:443
            androidx.dev:443
            api.codecov.io:443
            api.foojay.io:443
            api.github.com:443
            cli.codecov.io:443
            cli.less.build:443
            d3ob9fqp587by1.cloudfront.net:443
            dc.services.visualstudio.com:443
            dl.google.com:443
            dl.less.build:443
            download-cdn.jetbrains.com:443
            download.jetbrains.com:443
            download.oracle.com:443
            ea6ne4j2sb.execute-api.eu-central-1.amazonaws.com:443
            edge.pkg.st:443
            maven.elide.dev:443
            github.com:22
            github.com:443
            global.less.build:443
            gradle.pkg.st:443
            jpms.pkg.st:443
            keys.openpgp.org:443
            keyserver.ubuntu.com:443
            local.less.build:443
            maven.pkg.jetbrains.space:443
            maven.pkg.st:443
            nodejs.org:443
            npm.pkg.st:443
            objects.githubusercontent.com:443
            pgp.mit.edu:443
            registry.npmjs.org:443
            repo.maven.apache.org:443
            sc-cleancode-sensorcache-eu-central-1-prod.s3.amazonaws.com:443
            scanner.sonarcloud.io:443
            scans-in.gradle.com:443
            services.gradle.org:443
            sonarcloud.io:443
            storage.googleapis.com:443
      - name: "Setup: Apt Dependencies"
        run: sudo apt-get install -y libtool-bin build-essential libc6-dev
      - name: "Setup: LLVM 19"
        run: |
          wget https://apt.llvm.org/llvm.sh
          chmod +x llvm.sh
          sudo ./llvm.sh 19 all
          export LLVM_PATH=/usr/lib/llvm-19
          export PATH="$LLVM_PATH/bin:$PATH"
          export LD_LIBRARY_PATH="$LLVM_PATH/lib:$LD_LIBRARY_PATH"
          export LLVM_CONFIG="$LLVM_PATH/bin/llvm-config"
          echo LLVM_PATH=$LLVM_PATH >> $GITHUB_ENV
          echo LD_LIBRARY_PATH=$LD_LIBRARY_PATH >> $GITHUB_ENV
          echo LLVM_CONFIG=$LLVM_CONFIG >> $GITHUB_ENV
          echo PATH=$PATH >> $GITHUB_ENV
      - name: "Setup: Clear Tooling Cache"
        run: rm -rf /opt/hostedtoolcache
      - name: "Setup: Checkout"
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
          submodules: true
          persist-credentials: false
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: "Setup: Cache Restore (Test)"
        id: cache-restore
        uses: buildjet/cache/restore@3e70d19e31d6a8030aeddf6ed8dbe601f94d09f4 # v4.0.2
        with:
          key: elide-v3-tests-${{ hashFiles('gradle/elide.versions.toml') }}
          path: |
            build/reports/kover/**/*.*
            packages/*/test-results/
            packages/proto/*/test-results/
            tools/elide-build/test-results/
            packages/*/reports/
            packages/proto/*/reports/
            tools/elide-build/reports/
            tools/elide-build/build/
            packages/*/build/**/*.*
            target/
            target/x86_64-unknown-linux-gnu/debug/*.a
            target/x86_64-unknown-linux-gnu/debug/*.so
            target/x86_64-unknown-linux-gnu/debug/*.a
            target/x86_64-unknown-linux-gnu/debug/*.so
            third_party/sqlite/install/
          restore-keys: |
            elide-v3-tests-${{ hashFiles('gradle/elide.versions.toml') }}
            elide-v3-
      - name: "Setup: Rust"
        uses: actions-rust-lang/setup-rust-toolchain@9399c7bb15d4c7d47b27263d024f0a4978346ba4 # v1.11.0
        with:
          toolchain: stable
          target: wasm32-wasip1
          components: clippy,rustfmt
          cache: false
          rustflags: ""
      - name: "Setup: SCCache"
        uses: mozilla-actions/sccache-action@65101d47ea8028ed0c98a1cdea8dd9182e9b5133 # v0.0.8
      - name: "Setup: Rust Caching"
        run: |
          echo "RUSTC_WRAPPER=sccache" >> $GITHUB_ENV
      - name: "Setup: GraalVM (Java 23)"
        uses: graalvm/setup-graalvm@01ed653ac833fe80569f1ef9f25585ba2811baab # v1.3.3
        with:
          distribution: "graalvm"
          java-version: "23"
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: "Setup: Python (3.12)"
        uses: actions/setup-python@42375524e23c412d93fb67b49958b491fce71c38 # v5.4.0
        with:
          python-version: 3.12
      - name: "Setup: Node"
        uses: actions/setup-node@cdca7365b2dadb8aad0a33bc7601856ffabcc48e # v4.3.0
        with:
          node-version: 23
      - name: "Setup: PNPM"
        uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4.1.0
        with:
          version: "10.6.2"
          run_install: |
            - recursive: true
              args: [--frozen-lockfile, --strict-peer-dependencies]
      - name: "Setup: Dependencies"
        run: |
          cargo install cargo-fuzz cargo-insta rustfilt
          pnpm install -g yarn@1.22.19
          python -m pip install uv
          echo "Setting up venv..."
          uv venv
          echo "Installing dependencies via Pip..."
          uv pip install -r config/requirements.txt
          echo "Activating venv..."
          . .venv/bin/activate
          echo PATH=$PATH >> $GITHUB_ENV
      - name: "Setup: Artifacts"
        uses: actions/download-artifact@95815c38cf2ff2164869cbab79da8d1f422bc89e # v4.2.1
        continue-on-error: true
        with:
          merge-multiple: true
      - name: "Setup: Gradle"
        uses: gradle/actions/setup-gradle@94baf225fe0a508e581a564467443d0e2379123b # v4.3.0
        env:
          CI: true
          BUILDLESS_APIKEY: ${{ secrets.BUILDLESS_APIKEY }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          TEST_EXCEPTIONS: true
        with:
          cache-read-only: true
          cache-encryption-key: ${{ secrets.GRADLE_CONFIGURATION_KEY }}
          dependency-graph: disabled
          gradle-home-cache-includes: binaryen
            caches
            jdks
            native
            native-build-tools
            nodejs
            notifications
            wrapper
            yarn
      - name: "Build Environment"
        run: make info CI=yes 2>&1 | tee build-info.txt
      - name: "🛠️ Build Native"
        run: make setup && cargo build
      - name: "Run Tests (Native)"
        env:
          CI: true
          BUILDLESS_APIKEY: ${{ secrets.BUILDLESS_APIKEY }}
        run: |
          ./gradlew \
            nativeTest \
            check \
            jacocoTestReport \
            --scan \
            --daemon \
            --warning-mode=none \
            --dependency-verification=lenient \
            -x apiCheck \
            -x :packages:server:nativeTest \
            -Pelide.ci=true \
            -PbuildDocs=false
      - name: "Artifact: Reports"
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: test-reports-native
          path: |
            **/build/reports/jacoco/test/jacocoTestReport.xml
            **/build/reports/jacoco/testCodeCoverageReport/jacocoTestReport.xml
            **/build/reports/jacoco/testCodeCoverageReport/testCodeCoverageReport.xml
            tools/reports/build/reports/**/*.xml
            tools/reports/build/test-results/**/*.xml
