#
# Copyright (c) 2024 Elide Technologies, Inc.
#
# Licensed under the MIT license (the "License"); you may not use this file except in compliance
# with the License. You may obtain a copy of the License at
#
# https://opensource.org/license/mit/
#
# Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
# an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations under the License.
#

name: Checks

"on":
  workflow_dispatch: {}
  schedule:
    - cron: "0 0-23/6 * * *"

env:
  CC: clang-19
  LD: clang-19
  CXX: clang++-19
  AR: llvm-ar-19
  RANLIB: llvm-ranlib-19
  BUILDLESS_APIKEY: ${{ secrets.BUILDLESS_APIKEY }}

permissions:
  contents: read

jobs:
  ##
  ## Job: Check Repo Pull-ability
  ##
  check-repos:
    name: "Repositories: Clone Test"
    runs-on: "ubuntu-latest"
    continue-on-error: true
    permissions:
      contents: "read"
      id-token: "write"
      checks: "write"
      pull-requests: "write"
    steps:
      - name: "Setup: Harden Runner"
        uses: step-security/harden-runner@0634a2670c59f64b4a01f0f96f84700a4088b9f0 # v2.12.0
        with:
          egress-policy: audit

      - name: "Setup: Test Area"
        run: mkdir -p repos
      - name: "Clone: Elide"
        run: git clone https://github.com/elide-dev/v3.git ./repos/elide
      - name: "Clone: Runtime"
        continue-on-error: true
        run: git clone https://github.com/elide-dev/runtime.git ./repos/runtime
      - name: "Clone: Build Tools"
        run: git clone https://github.com/elide-dev/buildtools.git ./repos/buildtools

  ##
  ## Job: Check Image Pull-ability
  ##
  check-images:
    name: "Images: Pull Test"
    runs-on: "ubuntu-latest"
    permissions:
      contents: "read"
      id-token: "write"
      checks: "write"
      pull-requests: "write"
    steps:
      - name: "Setup: Harden Runner"
        uses: step-security/harden-runner@0634a2670c59f64b4a01f0f96f84700a4088b9f0 # v2.12.0
        with:
          egress-policy: audit

      - name: "Setup: Docker"
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3.10.0
        id: buildx
        with:
          install: true

      ## Image: CLI
      - name: "Pull: CLI (DockerHub)"
        run: docker pull elidetools/elide:latest
      - name: "Pull: CLI (GitHub)"
        run: docker pull ghcr.io/elide-dev/elide:latest

      ## Image: Base
      - name: "Pull: Base (DockerHub)"
        run: docker pull elidetools/base:latest
      - name: "Pull: Base (GitHub)"
        run: docker pull ghcr.io/elide-dev/base:latest

      ## Image: Base (Alpine)
      - name: "Pull: Base - Alpine (DockerHub)"
        run: docker pull elidetools/base-alpine:latest
      - name: "Pull: Base - Alpine (GitHub)"
        run: docker pull ghcr.io/elide-dev/base/alpine:latest

      ## Image: Runtime (JVM11)
      - name: "Pull: Runtime - JVM11 (DockerHub)"
        run: docker pull elidetools/jvm11:latest
      - name: "Pull: Runtime - JVM11 (GitHub)"
        run: docker pull ghcr.io/elide-dev/runtime/jvm11:latest

      ## Image: Runtime (JVM17)
      - name: "Pull: Runtime - JVM17 (DockerHub)"
        run: docker pull elidetools/jvm17:latest
      - name: "Pull: Runtime - JVM17 (GitHub)"
        run: docker pull ghcr.io/elide-dev/runtime/jvm17:latest

      ## Image: Runtime (JVM19)
      - name: "Pull: Runtime - JVM19 (DockerHub)"
        run: docker pull elidetools/jvm19:latest
      - name: "Pull: Runtime - JVM19 (GitHub)"
        run: docker pull ghcr.io/elide-dev/runtime/jvm19:latest

      ## Image: Runtime (Native)
      - name: "Pull: Runtime - Native (DockerHub)"
        run: docker pull elidetools/native:latest
      - name: "Pull: Runtime - Native (GitHub)"
        run: docker pull ghcr.io/elide-dev/runtime/native:latest

      ## Image: Runtime (Native Alpine)
      - name: "Pull: Runtime - Native Alpine (DockerHub)"
        run: docker pull elidetools/native-alpine:latest
      - name: "Pull: Runtime - Native Alpine (GitHub)"
        run: docker pull ghcr.io/elide-dev/runtime/native/alpine:latest

  ##
  ## Job: Check Cached Build
  ##
  check-build:
    name: "Quick-build"
    runs-on: "ubuntu-latest"
    permissions:
      contents: "read"
      id-token: "write"
      checks: "write"
      pull-requests: "write"
    defaults:
      run:
        shell: bash
    steps:
      - name: "Setup: Harden Runner"
        uses: step-security/harden-runner@0634a2670c59f64b4a01f0f96f84700a4088b9f0 # v2.12.0
        with:
          egress-policy: audit
      - name: "Setup: Checkout"
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: "Setup: Rust"
        uses: actions-rust-lang/setup-rust-toolchain@9399c7bb15d4c7d47b27263d024f0a4978346ba4 # v1.11.0
        with:
          toolchain: stable
          components: clippy,rustfmt
          rustflags: ""
      - name: "Setup: SCCache"
        uses: mozilla-actions/sccache-action@7d986dd989559c6ecdb630a3fd2557667be217ad # v0.0.9
      - name: "Setup: Rust Caching"
        run: |
          echo "SCCACHE_GHA_ENABLED=true" >> $GITHUB_ENV
          echo "RUSTC_WRAPPER=sccache" >> $GITHUB_ENV
      - name: "Setup: GraalVM (Java 24)"
        uses: graalvm/setup-graalvm@01ed653ac833fe80569f1ef9f25585ba2811baab # v1.3.3
        with:
          distribution: "graalvm"
          java-version: "24"
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: "Setup: Python (3.12)"
        uses: actions/setup-python@8d9ed9ac5c53483de85588cdf95a591a75ab9f55 # v5.5.0
        with:
          python-version: 3.12
      - name: "Setup: Buildless"
        if: false  # temporarily disabled
        uses: buildless/setup@30e82389418c7f17046606183bc4c78b2c8913e0 # v1.0.2
      - name: "Setup: Node"
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: 23
      - name: "Setup: PNPM"
        uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4.1.0
        with:
          version: "10.6.2"
          run_install: |
            - recursive: true
              args: [--frozen-lockfile, --strict-peer-dependencies]
      - name: "Setup: LLVM 19"
        run: |
          wget https://apt.llvm.org/llvm.sh
          chmod +x llvm.sh
          sudo ./llvm.sh 19 all
          export LLVM_PATH=/usr/lib/llvm-19
          export PATH="$LLVM_PATH/bin:$PATH"
          export LD_LIBRARY_PATH="$LLVM_PATH/lib:$LD_LIBRARY_PATH"
          export LLVM_CONFIG="$LLVM_PATH/bin/llvm-config"
          echo LLVM_PATH=$LLVM_PATH >> $GITHUB_ENV
          echo LD_LIBRARY_PATH=$LD_LIBRARY_PATH >> $GITHUB_ENV
          echo LLVM_CONFIG=$LLVM_CONFIG >> $GITHUB_ENV
          echo PATH=$PATH >> $GITHUB_ENV
      - name: "Setup: Dependencies"
        run: |
          cargo install cargo-fuzz cargo-insta rustfilt
          pnpm install -g yarn@1.22.19
          python -m pip install uv
          echo "Setting up venv..."
          uv venv
          echo "Installing dependencies via Pip..."
          uv pip install -r config/requirements.txt
          echo "Activating venv..."
          . .venv/bin/activate
          echo PATH=$PATH >> $GITHUB_ENV
      - name: "Setup: Gradle"
        uses: gradle/actions/setup-gradle@94baf225fe0a508e581a564467443d0e2379123b # v4.3.0
        id: gradlebuild
        continue-on-error: ${{ matrix.mode == 'labs' }}
        env:
          CI: true
        with:
          cache-read-only: true
      - name: "üõ†Ô∏è Build"
        run: |
          make setup natives && ./gradlew \
            build \
            -x check \
            -x test \
            -x jvmTest \
            -x jsTest \
            -x jsBrowserTest \
            -x nativeCompile \
            --scan \
            --no-daemon \
            --warning-mode=none \
            --dependency-verification=lenient \
            -Pelide.ci=true \
            -PbuildSamples=false \
            -PbuildDocs=false \
            -Pversions.java.minimum=11 \
            -Pversions.java.language=22
