[{"name":"BROTLI","description":"tools.elide.data.Data.CompressionMode.BROTLI","location":"packages/proto/proto-capnp/tools.elide.data/-data/-compression-mode/-b-r-o-t-l-i/index.html","searchKeys":["BROTLI","BROTLI","tools.elide.data.Data.CompressionMode.BROTLI"]},{"name":"DATA","description":"tools.elide.data.Data.DataContainerRef.Reference.Which.DATA","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-container-ref/-reference/-which/-d-a-t-a/index.html","searchKeys":["DATA","DATA","tools.elide.data.Data.DataContainerRef.Reference.Which.DATA"]},{"name":"DEFLATE","description":"tools.elide.data.Data.CompressionMode.DEFLATE","location":"packages/proto/proto-capnp/tools.elide.data/-data/-compression-mode/-d-e-f-l-a-t-e/index.html","searchKeys":["DEFLATE","DEFLATE","tools.elide.data.Data.CompressionMode.DEFLATE"]},{"name":"FILESYSTEM","description":"tools.elide.data.Data.DataContainerRef.Reference.Which.FILESYSTEM","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-container-ref/-reference/-which/-f-i-l-e-s-y-s-t-e-m/index.html","searchKeys":["FILESYSTEM","FILESYSTEM","tools.elide.data.Data.DataContainerRef.Reference.Which.FILESYSTEM"]},{"name":"GROOVY","description":"tools.elide.assets.Embedded.EmbeddedScriptLanguage.GROOVY","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-embedded-script-language/-g-r-o-o-v-y/index.html","searchKeys":["GROOVY","GROOVY","tools.elide.assets.Embedded.EmbeddedScriptLanguage.GROOVY"]},{"name":"GZIP","description":"tools.elide.data.Data.CompressionMode.GZIP","location":"packages/proto/proto-capnp/tools.elide.data/-data/-compression-mode/-g-z-i-p/index.html","searchKeys":["GZIP","GZIP","tools.elide.data.Data.CompressionMode.GZIP"]},{"name":"IDENTITY","description":"tools.elide.crypto.Crypto.HashAlgorithm.IDENTITY","location":"packages/proto/proto-capnp/tools.elide.crypto/-crypto/-hash-algorithm/-i-d-e-n-t-i-t-y/index.html","searchKeys":["IDENTITY","IDENTITY","tools.elide.crypto.Crypto.HashAlgorithm.IDENTITY"]},{"name":"IDENTITY","description":"tools.elide.data.Data.CompressionMode.IDENTITY","location":"packages/proto/proto-capnp/tools.elide.data/-data/-compression-mode/-i-d-e-n-t-i-t-y/index.html","searchKeys":["IDENTITY","IDENTITY","tools.elide.data.Data.CompressionMode.IDENTITY"]},{"name":"JAVASCRIPT","description":"tools.elide.assets.Embedded.EmbeddedScriptLanguage.JAVASCRIPT","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-embedded-script-language/-j-a-v-a-s-c-r-i-p-t/index.html","searchKeys":["JAVASCRIPT","JAVASCRIPT","tools.elide.assets.Embedded.EmbeddedScriptLanguage.JAVASCRIPT"]},{"name":"JAVASCRIPT","description":"tools.elide.assets.Embedded.EmbeddedScriptMetadata.Metadata.Which.JAVASCRIPT","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-embedded-script-metadata/-metadata/-which/-j-a-v-a-s-c-r-i-p-t/index.html","searchKeys":["JAVASCRIPT","JAVASCRIPT","tools.elide.assets.Embedded.EmbeddedScriptMetadata.Metadata.Which.JAVASCRIPT"]},{"name":"JVM","description":"tools.elide.assets.Embedded.EmbeddedScriptLanguage.JVM","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-embedded-script-language/-j-v-m/index.html","searchKeys":["JVM","JVM","tools.elide.assets.Embedded.EmbeddedScriptLanguage.JVM"]},{"name":"KOTLIN","description":"tools.elide.assets.Embedded.EmbeddedScriptLanguage.KOTLIN","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-embedded-script-language/-k-o-t-l-i-n/index.html","searchKeys":["KOTLIN","KOTLIN","tools.elide.assets.Embedded.EmbeddedScriptLanguage.KOTLIN"]},{"name":"LANGUAGE_UNSPECIFIED","description":"tools.elide.assets.Embedded.EmbeddedScriptLanguage.LANGUAGE_UNSPECIFIED","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-embedded-script-language/-l-a-n-g-u-a-g-e_-u-n-s-p-e-c-i-f-i-e-d/index.html","searchKeys":["LANGUAGE_UNSPECIFIED","LANGUAGE_UNSPECIFIED","tools.elide.assets.Embedded.EmbeddedScriptLanguage.LANGUAGE_UNSPECIFIED"]},{"name":"LLVM","description":"tools.elide.assets.Embedded.EmbeddedScriptLanguage.LLVM","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-embedded-script-language/-l-l-v-m/index.html","searchKeys":["LLVM","LLVM","tools.elide.assets.Embedded.EmbeddedScriptLanguage.LLVM"]},{"name":"MD5","description":"tools.elide.crypto.Crypto.HashAlgorithm.MD5","location":"packages/proto/proto-capnp/tools.elide.crypto/-crypto/-hash-algorithm/-m-d5/index.html","searchKeys":["MD5","MD5","tools.elide.crypto.Crypto.HashAlgorithm.MD5"]},{"name":"PYTHON","description":"tools.elide.assets.Embedded.EmbeddedScriptLanguage.PYTHON","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-embedded-script-language/-p-y-t-h-o-n/index.html","searchKeys":["PYTHON","PYTHON","tools.elide.assets.Embedded.EmbeddedScriptLanguage.PYTHON"]},{"name":"PYTHON","description":"tools.elide.assets.Embedded.EmbeddedScriptMetadata.Metadata.Which.PYTHON","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-embedded-script-metadata/-metadata/-which/-p-y-t-h-o-n/index.html","searchKeys":["PYTHON","PYTHON","tools.elide.assets.Embedded.EmbeddedScriptMetadata.Metadata.Which.PYTHON"]},{"name":"RESOURCE","description":"tools.elide.data.Data.DataContainerRef.Reference.Which.RESOURCE","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-container-ref/-reference/-which/-r-e-s-o-u-r-c-e/index.html","searchKeys":["RESOURCE","RESOURCE","tools.elide.data.Data.DataContainerRef.Reference.Which.RESOURCE"]},{"name":"RUBY","description":"tools.elide.assets.Embedded.EmbeddedScriptLanguage.RUBY","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-embedded-script-language/-r-u-b-y/index.html","searchKeys":["RUBY","RUBY","tools.elide.assets.Embedded.EmbeddedScriptLanguage.RUBY"]},{"name":"SCALA","description":"tools.elide.assets.Embedded.EmbeddedScriptLanguage.SCALA","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-embedded-script-language/-s-c-a-l-a/index.html","searchKeys":["SCALA","SCALA","tools.elide.assets.Embedded.EmbeddedScriptLanguage.SCALA"]},{"name":"SHA1","description":"tools.elide.crypto.Crypto.HashAlgorithm.SHA1","location":"packages/proto/proto-capnp/tools.elide.crypto/-crypto/-hash-algorithm/-s-h-a1/index.html","searchKeys":["SHA1","SHA1","tools.elide.crypto.Crypto.HashAlgorithm.SHA1"]},{"name":"SHA2","description":"tools.elide.crypto.Crypto.HashAlgorithm.SHA2","location":"packages/proto/proto-capnp/tools.elide.crypto/-crypto/-hash-algorithm/-s-h-a2/index.html","searchKeys":["SHA2","SHA2","tools.elide.crypto.Crypto.HashAlgorithm.SHA2"]},{"name":"SHA256","description":"tools.elide.crypto.Crypto.HashAlgorithm.SHA256","location":"packages/proto/proto-capnp/tools.elide.crypto/-crypto/-hash-algorithm/-s-h-a256/index.html","searchKeys":["SHA256","SHA256","tools.elide.crypto.Crypto.HashAlgorithm.SHA256"]},{"name":"SHA3224","description":"tools.elide.crypto.Crypto.HashAlgorithm.SHA3224","location":"packages/proto/proto-capnp/tools.elide.crypto/-crypto/-hash-algorithm/-s-h-a3224/index.html","searchKeys":["SHA3224","SHA3224","tools.elide.crypto.Crypto.HashAlgorithm.SHA3224"]},{"name":"SHA3256","description":"tools.elide.crypto.Crypto.HashAlgorithm.SHA3256","location":"packages/proto/proto-capnp/tools.elide.crypto/-crypto/-hash-algorithm/-s-h-a3256/index.html","searchKeys":["SHA3256","SHA3256","tools.elide.crypto.Crypto.HashAlgorithm.SHA3256"]},{"name":"SHA3512","description":"tools.elide.crypto.Crypto.HashAlgorithm.SHA3512","location":"packages/proto/proto-capnp/tools.elide.crypto/-crypto/-hash-algorithm/-s-h-a3512/index.html","searchKeys":["SHA3512","SHA3512","tools.elide.crypto.Crypto.HashAlgorithm.SHA3512"]},{"name":"SHA384","description":"tools.elide.crypto.Crypto.HashAlgorithm.SHA384","location":"packages/proto/proto-capnp/tools.elide.crypto/-crypto/-hash-algorithm/-s-h-a384/index.html","searchKeys":["SHA384","SHA384","tools.elide.crypto.Crypto.HashAlgorithm.SHA384"]},{"name":"SHA512","description":"tools.elide.crypto.Crypto.HashAlgorithm.SHA512","location":"packages/proto/proto-capnp/tools.elide.crypto/-crypto/-hash-algorithm/-s-h-a512/index.html","searchKeys":["SHA512","SHA512","tools.elide.crypto.Crypto.HashAlgorithm.SHA512"]},{"name":"SNAPPY","description":"tools.elide.data.Data.CompressionMode.SNAPPY","location":"packages/proto/proto-capnp/tools.elide.data/-data/-compression-mode/-s-n-a-p-p-y/index.html","searchKeys":["SNAPPY","SNAPPY","tools.elide.data.Data.CompressionMode.SNAPPY"]},{"name":"UTF16","description":"tools.elide.data.Encodings.Encoding.UTF16","location":"packages/proto/proto-capnp/tools.elide.data/-encodings/-encoding/-u-t-f16/index.html","searchKeys":["UTF16","UTF16","tools.elide.data.Encodings.Encoding.UTF16"]},{"name":"UTF32","description":"tools.elide.data.Encodings.Encoding.UTF32","location":"packages/proto/proto-capnp/tools.elide.data/-encodings/-encoding/-u-t-f32/index.html","searchKeys":["UTF32","UTF32","tools.elide.data.Encodings.Encoding.UTF32"]},{"name":"UTF8","description":"tools.elide.data.Encodings.Encoding.UTF8","location":"packages/proto/proto-capnp/tools.elide.data/-encodings/-encoding/-u-t-f8/index.html","searchKeys":["UTF8","UTF8","tools.elide.data.Encodings.Encoding.UTF8"]},{"name":"WASM","description":"tools.elide.assets.Embedded.EmbeddedScriptLanguage.WASM","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-embedded-script-language/-w-a-s-m/index.html","searchKeys":["WASM","WASM","tools.elide.assets.Embedded.EmbeddedScriptLanguage.WASM"]},{"name":"_NOT_IN_SCHEMA","description":"tools.elide.assets.Embedded.EmbeddedScriptLanguage._NOT_IN_SCHEMA","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-embedded-script-language/_-n-o-t_-i-n_-s-c-h-e-m-a/index.html","searchKeys":["_NOT_IN_SCHEMA","_NOT_IN_SCHEMA","tools.elide.assets.Embedded.EmbeddedScriptLanguage._NOT_IN_SCHEMA"]},{"name":"_NOT_IN_SCHEMA","description":"tools.elide.assets.Embedded.EmbeddedScriptMetadata.Metadata.Which._NOT_IN_SCHEMA","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-embedded-script-metadata/-metadata/-which/_-n-o-t_-i-n_-s-c-h-e-m-a/index.html","searchKeys":["_NOT_IN_SCHEMA","_NOT_IN_SCHEMA","tools.elide.assets.Embedded.EmbeddedScriptMetadata.Metadata.Which._NOT_IN_SCHEMA"]},{"name":"_NOT_IN_SCHEMA","description":"tools.elide.assets.Embedded.JsLanguageLevel._NOT_IN_SCHEMA","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-js-language-level/_-n-o-t_-i-n_-s-c-h-e-m-a/index.html","searchKeys":["_NOT_IN_SCHEMA","_NOT_IN_SCHEMA","tools.elide.assets.Embedded.JsLanguageLevel._NOT_IN_SCHEMA"]},{"name":"_NOT_IN_SCHEMA","description":"tools.elide.crypto.Crypto.HashAlgorithm._NOT_IN_SCHEMA","location":"packages/proto/proto-capnp/tools.elide.crypto/-crypto/-hash-algorithm/_-n-o-t_-i-n_-s-c-h-e-m-a/index.html","searchKeys":["_NOT_IN_SCHEMA","_NOT_IN_SCHEMA","tools.elide.crypto.Crypto.HashAlgorithm._NOT_IN_SCHEMA"]},{"name":"_NOT_IN_SCHEMA","description":"tools.elide.data.Data.CompressionMode._NOT_IN_SCHEMA","location":"packages/proto/proto-capnp/tools.elide.data/-data/-compression-mode/_-n-o-t_-i-n_-s-c-h-e-m-a/index.html","searchKeys":["_NOT_IN_SCHEMA","_NOT_IN_SCHEMA","tools.elide.data.Data.CompressionMode._NOT_IN_SCHEMA"]},{"name":"_NOT_IN_SCHEMA","description":"tools.elide.data.Data.DataContainerRef.Reference.Which._NOT_IN_SCHEMA","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-container-ref/-reference/-which/_-n-o-t_-i-n_-s-c-h-e-m-a/index.html","searchKeys":["_NOT_IN_SCHEMA","_NOT_IN_SCHEMA","tools.elide.data.Data.DataContainerRef.Reference.Which._NOT_IN_SCHEMA"]},{"name":"_NOT_IN_SCHEMA","description":"tools.elide.data.Encodings.Encoding._NOT_IN_SCHEMA","location":"packages/proto/proto-capnp/tools.elide.data/-encodings/-encoding/_-n-o-t_-i-n_-s-c-h-e-m-a/index.html","searchKeys":["_NOT_IN_SCHEMA","_NOT_IN_SCHEMA","tools.elide.data.Encodings.Encoding._NOT_IN_SCHEMA"]},{"name":"class Builder : StructBuilder","description":"tools.elide.assets.Embedded.EmbeddedScript.Builder","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-embedded-script/-builder/index.html","searchKeys":["Builder","class Builder : StructBuilder","tools.elide.assets.Embedded.EmbeddedScript.Builder"]},{"name":"class Builder : StructBuilder","description":"tools.elide.assets.Embedded.EmbeddedScriptMetadata.Builder","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-embedded-script-metadata/-builder/index.html","searchKeys":["Builder","class Builder : StructBuilder","tools.elide.assets.Embedded.EmbeddedScriptMetadata.Builder"]},{"name":"class Builder : StructBuilder","description":"tools.elide.assets.Embedded.EmbeddedScriptMetadata.Metadata.Builder","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-embedded-script-metadata/-metadata/-builder/index.html","searchKeys":["Builder","class Builder : StructBuilder","tools.elide.assets.Embedded.EmbeddedScriptMetadata.Metadata.Builder"]},{"name":"class Builder : StructBuilder","description":"tools.elide.assets.Embedded.JsScriptMetadata.Builder","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-js-script-metadata/-builder/index.html","searchKeys":["Builder","class Builder : StructBuilder","tools.elide.assets.Embedded.JsScriptMetadata.Builder"]},{"name":"class Builder : StructBuilder","description":"tools.elide.assets.Embedded.PyScriptMetadata.Builder","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-py-script-metadata/-builder/index.html","searchKeys":["Builder","class Builder : StructBuilder","tools.elide.assets.Embedded.PyScriptMetadata.Builder"]},{"name":"class Builder : StructBuilder","description":"tools.elide.data.Data.CompressedData.Builder","location":"packages/proto/proto-capnp/tools.elide.data/-data/-compressed-data/-builder/index.html","searchKeys":["Builder","class Builder : StructBuilder","tools.elide.data.Data.CompressedData.Builder"]},{"name":"class Builder : StructBuilder","description":"tools.elide.data.Data.DataContainer.Builder","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-container/-builder/index.html","searchKeys":["Builder","class Builder : StructBuilder","tools.elide.data.Data.DataContainer.Builder"]},{"name":"class Builder : StructBuilder","description":"tools.elide.data.Data.DataContainerRef.Builder","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-container-ref/-builder/index.html","searchKeys":["Builder","class Builder : StructBuilder","tools.elide.data.Data.DataContainerRef.Builder"]},{"name":"class Builder : StructBuilder","description":"tools.elide.data.Data.DataContainerRef.FingerprintPathPair.Builder","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-container-ref/-fingerprint-path-pair/-builder/index.html","searchKeys":["Builder","class Builder : StructBuilder","tools.elide.data.Data.DataContainerRef.FingerprintPathPair.Builder"]},{"name":"class Builder : StructBuilder","description":"tools.elide.data.Data.DataContainerRef.Reference.Builder","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-container-ref/-reference/-builder/index.html","searchKeys":["Builder","class Builder : StructBuilder","tools.elide.data.Data.DataContainerRef.Reference.Builder"]},{"name":"class Builder : StructBuilder","description":"tools.elide.data.Data.DataFingerprint.Builder","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-fingerprint/-builder/index.html","searchKeys":["Builder","class Builder : StructBuilder","tools.elide.data.Data.DataFingerprint.Builder"]},{"name":"class Builder : StructBuilder","description":"tools.elide.std.Temporal.Timestamp.Builder","location":"packages/proto/proto-capnp/tools.elide.std/-temporal/-timestamp/-builder/index.html","searchKeys":["Builder","class Builder : StructBuilder","tools.elide.std.Temporal.Timestamp.Builder"]},{"name":"class Crypto","description":"tools.elide.crypto.Crypto","location":"packages/proto/proto-capnp/tools.elide.crypto/-crypto/index.html","searchKeys":["Crypto","class Crypto","tools.elide.crypto.Crypto"]},{"name":"class Data","description":"tools.elide.data.Data","location":"packages/proto/proto-capnp/tools.elide.data/-data/index.html","searchKeys":["Data","class Data","tools.elide.data.Data"]},{"name":"class Embedded","description":"tools.elide.assets.Embedded","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/index.html","searchKeys":["Embedded","class Embedded","tools.elide.assets.Embedded"]},{"name":"class Encodings","description":"tools.elide.data.Encodings","location":"packages/proto/proto-capnp/tools.elide.data/-encodings/index.html","searchKeys":["Encodings","class Encodings","tools.elide.data.Encodings"]},{"name":"class Factory : StructFactory<Builder, Reader> ","description":"tools.elide.assets.Embedded.EmbeddedScript.Factory","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-embedded-script/-factory/index.html","searchKeys":["Factory","class Factory : StructFactory<Builder, Reader> ","tools.elide.assets.Embedded.EmbeddedScript.Factory"]},{"name":"class Factory : StructFactory<Builder, Reader> ","description":"tools.elide.assets.Embedded.EmbeddedScriptMetadata.Factory","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-embedded-script-metadata/-factory/index.html","searchKeys":["Factory","class Factory : StructFactory<Builder, Reader> ","tools.elide.assets.Embedded.EmbeddedScriptMetadata.Factory"]},{"name":"class Factory : StructFactory<Builder, Reader> ","description":"tools.elide.assets.Embedded.EmbeddedScriptMetadata.Metadata.Factory","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-embedded-script-metadata/-metadata/-factory/index.html","searchKeys":["Factory","class Factory : StructFactory<Builder, Reader> ","tools.elide.assets.Embedded.EmbeddedScriptMetadata.Metadata.Factory"]},{"name":"class Factory : StructFactory<Builder, Reader> ","description":"tools.elide.assets.Embedded.JsScriptMetadata.Factory","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-js-script-metadata/-factory/index.html","searchKeys":["Factory","class Factory : StructFactory<Builder, Reader> ","tools.elide.assets.Embedded.JsScriptMetadata.Factory"]},{"name":"class Factory : StructFactory<Builder, Reader> ","description":"tools.elide.assets.Embedded.PyScriptMetadata.Factory","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-py-script-metadata/-factory/index.html","searchKeys":["Factory","class Factory : StructFactory<Builder, Reader> ","tools.elide.assets.Embedded.PyScriptMetadata.Factory"]},{"name":"class Factory : StructFactory<Builder, Reader> ","description":"tools.elide.data.Data.CompressedData.Factory","location":"packages/proto/proto-capnp/tools.elide.data/-data/-compressed-data/-factory/index.html","searchKeys":["Factory","class Factory : StructFactory<Builder, Reader> ","tools.elide.data.Data.CompressedData.Factory"]},{"name":"class Factory : StructFactory<Builder, Reader> ","description":"tools.elide.data.Data.DataContainer.Factory","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-container/-factory/index.html","searchKeys":["Factory","class Factory : StructFactory<Builder, Reader> ","tools.elide.data.Data.DataContainer.Factory"]},{"name":"class Factory : StructFactory<Builder, Reader> ","description":"tools.elide.data.Data.DataContainerRef.Factory","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-container-ref/-factory/index.html","searchKeys":["Factory","class Factory : StructFactory<Builder, Reader> ","tools.elide.data.Data.DataContainerRef.Factory"]},{"name":"class Factory : StructFactory<Builder, Reader> ","description":"tools.elide.data.Data.DataContainerRef.FingerprintPathPair.Factory","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-container-ref/-fingerprint-path-pair/-factory/index.html","searchKeys":["Factory","class Factory : StructFactory<Builder, Reader> ","tools.elide.data.Data.DataContainerRef.FingerprintPathPair.Factory"]},{"name":"class Factory : StructFactory<Builder, Reader> ","description":"tools.elide.data.Data.DataContainerRef.Reference.Factory","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-container-ref/-reference/-factory/index.html","searchKeys":["Factory","class Factory : StructFactory<Builder, Reader> ","tools.elide.data.Data.DataContainerRef.Reference.Factory"]},{"name":"class Factory : StructFactory<Builder, Reader> ","description":"tools.elide.data.Data.DataFingerprint.Factory","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-fingerprint/-factory/index.html","searchKeys":["Factory","class Factory : StructFactory<Builder, Reader> ","tools.elide.data.Data.DataFingerprint.Factory"]},{"name":"class Factory : StructFactory<Builder, Reader> ","description":"tools.elide.std.Temporal.Timestamp.Factory","location":"packages/proto/proto-capnp/tools.elide.std/-temporal/-timestamp/-factory/index.html","searchKeys":["Factory","class Factory : StructFactory<Builder, Reader> ","tools.elide.std.Temporal.Timestamp.Factory"]},{"name":"class Reader : StructReader","description":"tools.elide.assets.Embedded.EmbeddedScript.Reader","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-embedded-script/-reader/index.html","searchKeys":["Reader","class Reader : StructReader","tools.elide.assets.Embedded.EmbeddedScript.Reader"]},{"name":"class Reader : StructReader","description":"tools.elide.assets.Embedded.EmbeddedScriptMetadata.Metadata.Reader","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-embedded-script-metadata/-metadata/-reader/index.html","searchKeys":["Reader","class Reader : StructReader","tools.elide.assets.Embedded.EmbeddedScriptMetadata.Metadata.Reader"]},{"name":"class Reader : StructReader","description":"tools.elide.assets.Embedded.EmbeddedScriptMetadata.Reader","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-embedded-script-metadata/-reader/index.html","searchKeys":["Reader","class Reader : StructReader","tools.elide.assets.Embedded.EmbeddedScriptMetadata.Reader"]},{"name":"class Reader : StructReader","description":"tools.elide.assets.Embedded.JsScriptMetadata.Reader","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-js-script-metadata/-reader/index.html","searchKeys":["Reader","class Reader : StructReader","tools.elide.assets.Embedded.JsScriptMetadata.Reader"]},{"name":"class Reader : StructReader","description":"tools.elide.assets.Embedded.PyScriptMetadata.Reader","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-py-script-metadata/-reader/index.html","searchKeys":["Reader","class Reader : StructReader","tools.elide.assets.Embedded.PyScriptMetadata.Reader"]},{"name":"class Reader : StructReader","description":"tools.elide.data.Data.CompressedData.Reader","location":"packages/proto/proto-capnp/tools.elide.data/-data/-compressed-data/-reader/index.html","searchKeys":["Reader","class Reader : StructReader","tools.elide.data.Data.CompressedData.Reader"]},{"name":"class Reader : StructReader","description":"tools.elide.data.Data.DataContainer.Reader","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-container/-reader/index.html","searchKeys":["Reader","class Reader : StructReader","tools.elide.data.Data.DataContainer.Reader"]},{"name":"class Reader : StructReader","description":"tools.elide.data.Data.DataContainerRef.FingerprintPathPair.Reader","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-container-ref/-fingerprint-path-pair/-reader/index.html","searchKeys":["Reader","class Reader : StructReader","tools.elide.data.Data.DataContainerRef.FingerprintPathPair.Reader"]},{"name":"class Reader : StructReader","description":"tools.elide.data.Data.DataContainerRef.Reader","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-container-ref/-reader/index.html","searchKeys":["Reader","class Reader : StructReader","tools.elide.data.Data.DataContainerRef.Reader"]},{"name":"class Reader : StructReader","description":"tools.elide.data.Data.DataContainerRef.Reference.Reader","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-container-ref/-reference/-reader/index.html","searchKeys":["Reader","class Reader : StructReader","tools.elide.data.Data.DataContainerRef.Reference.Reader"]},{"name":"class Reader : StructReader","description":"tools.elide.data.Data.DataFingerprint.Reader","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-fingerprint/-reader/index.html","searchKeys":["Reader","class Reader : StructReader","tools.elide.data.Data.DataFingerprint.Reader"]},{"name":"class Reader : StructReader","description":"tools.elide.std.Temporal.Timestamp.Reader","location":"packages/proto/proto-capnp/tools.elide.std/-temporal/-timestamp/-reader/index.html","searchKeys":["Reader","class Reader : StructReader","tools.elide.std.Temporal.Timestamp.Reader"]},{"name":"class Schemas","description":"tools.elide.assets.Embedded.Schemas","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-schemas/index.html","searchKeys":["Schemas","class Schemas","tools.elide.assets.Embedded.Schemas"]},{"name":"class Schemas","description":"tools.elide.crypto.Crypto.Schemas","location":"packages/proto/proto-capnp/tools.elide.crypto/-crypto/-schemas/index.html","searchKeys":["Schemas","class Schemas","tools.elide.crypto.Crypto.Schemas"]},{"name":"class Schemas","description":"tools.elide.data.Data.Schemas","location":"packages/proto/proto-capnp/tools.elide.data/-data/-schemas/index.html","searchKeys":["Schemas","class Schemas","tools.elide.data.Data.Schemas"]},{"name":"class Schemas","description":"tools.elide.data.Encodings.Schemas","location":"packages/proto/proto-capnp/tools.elide.data/-encodings/-schemas/index.html","searchKeys":["Schemas","class Schemas","tools.elide.data.Encodings.Schemas"]},{"name":"class Schemas","description":"tools.elide.std.Temporal.Schemas","location":"packages/proto/proto-capnp/tools.elide.std/-temporal/-schemas/index.html","searchKeys":["Schemas","class Schemas","tools.elide.std.Temporal.Schemas"]},{"name":"class Temporal","description":"tools.elide.std.Temporal","location":"packages/proto/proto-capnp/tools.elide.std/-temporal/index.html","searchKeys":["Temporal","class Temporal","tools.elide.std.Temporal"]},{"name":"constructor()","description":"tools.elide.assets.Embedded.Embedded","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-embedded.html","searchKeys":["Embedded","constructor()","tools.elide.assets.Embedded.Embedded"]},{"name":"constructor()","description":"tools.elide.assets.Embedded.EmbeddedScript.EmbeddedScript","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-embedded-script/-embedded-script.html","searchKeys":["EmbeddedScript","constructor()","tools.elide.assets.Embedded.EmbeddedScript.EmbeddedScript"]},{"name":"constructor()","description":"tools.elide.assets.Embedded.EmbeddedScript.Factory.Factory","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-embedded-script/-factory/-factory.html","searchKeys":["Factory","constructor()","tools.elide.assets.Embedded.EmbeddedScript.Factory.Factory"]},{"name":"constructor()","description":"tools.elide.assets.Embedded.EmbeddedScriptMetadata.EmbeddedScriptMetadata","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-embedded-script-metadata/-embedded-script-metadata.html","searchKeys":["EmbeddedScriptMetadata","constructor()","tools.elide.assets.Embedded.EmbeddedScriptMetadata.EmbeddedScriptMetadata"]},{"name":"constructor()","description":"tools.elide.assets.Embedded.EmbeddedScriptMetadata.Factory.Factory","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-embedded-script-metadata/-factory/-factory.html","searchKeys":["Factory","constructor()","tools.elide.assets.Embedded.EmbeddedScriptMetadata.Factory.Factory"]},{"name":"constructor()","description":"tools.elide.assets.Embedded.EmbeddedScriptMetadata.Metadata.Factory.Factory","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-embedded-script-metadata/-metadata/-factory/-factory.html","searchKeys":["Factory","constructor()","tools.elide.assets.Embedded.EmbeddedScriptMetadata.Metadata.Factory.Factory"]},{"name":"constructor()","description":"tools.elide.assets.Embedded.EmbeddedScriptMetadata.Metadata.Metadata","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-embedded-script-metadata/-metadata/-metadata.html","searchKeys":["Metadata","constructor()","tools.elide.assets.Embedded.EmbeddedScriptMetadata.Metadata.Metadata"]},{"name":"constructor()","description":"tools.elide.assets.Embedded.JsScriptMetadata.Factory.Factory","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-js-script-metadata/-factory/-factory.html","searchKeys":["Factory","constructor()","tools.elide.assets.Embedded.JsScriptMetadata.Factory.Factory"]},{"name":"constructor()","description":"tools.elide.assets.Embedded.JsScriptMetadata.JsScriptMetadata","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-js-script-metadata/-js-script-metadata.html","searchKeys":["JsScriptMetadata","constructor()","tools.elide.assets.Embedded.JsScriptMetadata.JsScriptMetadata"]},{"name":"constructor()","description":"tools.elide.assets.Embedded.PyScriptMetadata.Factory.Factory","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-py-script-metadata/-factory/-factory.html","searchKeys":["Factory","constructor()","tools.elide.assets.Embedded.PyScriptMetadata.Factory.Factory"]},{"name":"constructor()","description":"tools.elide.assets.Embedded.PyScriptMetadata.PyScriptMetadata","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-py-script-metadata/-py-script-metadata.html","searchKeys":["PyScriptMetadata","constructor()","tools.elide.assets.Embedded.PyScriptMetadata.PyScriptMetadata"]},{"name":"constructor()","description":"tools.elide.assets.Embedded.Schemas.Schemas","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-schemas/-schemas.html","searchKeys":["Schemas","constructor()","tools.elide.assets.Embedded.Schemas.Schemas"]},{"name":"constructor()","description":"tools.elide.crypto.Crypto.Crypto","location":"packages/proto/proto-capnp/tools.elide.crypto/-crypto/-crypto.html","searchKeys":["Crypto","constructor()","tools.elide.crypto.Crypto.Crypto"]},{"name":"constructor()","description":"tools.elide.crypto.Crypto.Schemas.Schemas","location":"packages/proto/proto-capnp/tools.elide.crypto/-crypto/-schemas/-schemas.html","searchKeys":["Schemas","constructor()","tools.elide.crypto.Crypto.Schemas.Schemas"]},{"name":"constructor()","description":"tools.elide.data.Data.CompressedData.CompressedData","location":"packages/proto/proto-capnp/tools.elide.data/-data/-compressed-data/-compressed-data.html","searchKeys":["CompressedData","constructor()","tools.elide.data.Data.CompressedData.CompressedData"]},{"name":"constructor()","description":"tools.elide.data.Data.CompressedData.Factory.Factory","location":"packages/proto/proto-capnp/tools.elide.data/-data/-compressed-data/-factory/-factory.html","searchKeys":["Factory","constructor()","tools.elide.data.Data.CompressedData.Factory.Factory"]},{"name":"constructor()","description":"tools.elide.data.Data.Data","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data.html","searchKeys":["Data","constructor()","tools.elide.data.Data.Data"]},{"name":"constructor()","description":"tools.elide.data.Data.DataContainer.DataContainer","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-container/-data-container.html","searchKeys":["DataContainer","constructor()","tools.elide.data.Data.DataContainer.DataContainer"]},{"name":"constructor()","description":"tools.elide.data.Data.DataContainer.Factory.Factory","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-container/-factory/-factory.html","searchKeys":["Factory","constructor()","tools.elide.data.Data.DataContainer.Factory.Factory"]},{"name":"constructor()","description":"tools.elide.data.Data.DataContainerRef.DataContainerRef","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-container-ref/-data-container-ref.html","searchKeys":["DataContainerRef","constructor()","tools.elide.data.Data.DataContainerRef.DataContainerRef"]},{"name":"constructor()","description":"tools.elide.data.Data.DataContainerRef.Factory.Factory","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-container-ref/-factory/-factory.html","searchKeys":["Factory","constructor()","tools.elide.data.Data.DataContainerRef.Factory.Factory"]},{"name":"constructor()","description":"tools.elide.data.Data.DataContainerRef.FingerprintPathPair.Factory.Factory","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-container-ref/-fingerprint-path-pair/-factory/-factory.html","searchKeys":["Factory","constructor()","tools.elide.data.Data.DataContainerRef.FingerprintPathPair.Factory.Factory"]},{"name":"constructor()","description":"tools.elide.data.Data.DataContainerRef.FingerprintPathPair.FingerprintPathPair","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-container-ref/-fingerprint-path-pair/-fingerprint-path-pair.html","searchKeys":["FingerprintPathPair","constructor()","tools.elide.data.Data.DataContainerRef.FingerprintPathPair.FingerprintPathPair"]},{"name":"constructor()","description":"tools.elide.data.Data.DataContainerRef.Reference.Factory.Factory","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-container-ref/-reference/-factory/-factory.html","searchKeys":["Factory","constructor()","tools.elide.data.Data.DataContainerRef.Reference.Factory.Factory"]},{"name":"constructor()","description":"tools.elide.data.Data.DataContainerRef.Reference.Reference","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-container-ref/-reference/-reference.html","searchKeys":["Reference","constructor()","tools.elide.data.Data.DataContainerRef.Reference.Reference"]},{"name":"constructor()","description":"tools.elide.data.Data.DataFingerprint.DataFingerprint","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-fingerprint/-data-fingerprint.html","searchKeys":["DataFingerprint","constructor()","tools.elide.data.Data.DataFingerprint.DataFingerprint"]},{"name":"constructor()","description":"tools.elide.data.Data.DataFingerprint.Factory.Factory","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-fingerprint/-factory/-factory.html","searchKeys":["Factory","constructor()","tools.elide.data.Data.DataFingerprint.Factory.Factory"]},{"name":"constructor()","description":"tools.elide.data.Data.Schemas.Schemas","location":"packages/proto/proto-capnp/tools.elide.data/-data/-schemas/-schemas.html","searchKeys":["Schemas","constructor()","tools.elide.data.Data.Schemas.Schemas"]},{"name":"constructor()","description":"tools.elide.data.Encodings.Encodings","location":"packages/proto/proto-capnp/tools.elide.data/-encodings/-encodings.html","searchKeys":["Encodings","constructor()","tools.elide.data.Encodings.Encodings"]},{"name":"constructor()","description":"tools.elide.data.Encodings.Schemas.Schemas","location":"packages/proto/proto-capnp/tools.elide.data/-encodings/-schemas/-schemas.html","searchKeys":["Schemas","constructor()","tools.elide.data.Encodings.Schemas.Schemas"]},{"name":"constructor()","description":"tools.elide.std.Temporal.Schemas.Schemas","location":"packages/proto/proto-capnp/tools.elide.std/-temporal/-schemas/-schemas.html","searchKeys":["Schemas","constructor()","tools.elide.std.Temporal.Schemas.Schemas"]},{"name":"constructor()","description":"tools.elide.std.Temporal.Temporal","location":"packages/proto/proto-capnp/tools.elide.std/-temporal/-temporal.html","searchKeys":["Temporal","constructor()","tools.elide.std.Temporal.Temporal"]},{"name":"constructor()","description":"tools.elide.std.Temporal.Timestamp.Factory.Factory","location":"packages/proto/proto-capnp/tools.elide.std/-temporal/-timestamp/-factory/-factory.html","searchKeys":["Factory","constructor()","tools.elide.std.Temporal.Timestamp.Factory.Factory"]},{"name":"constructor()","description":"tools.elide.std.Temporal.Timestamp.Timestamp","location":"packages/proto/proto-capnp/tools.elide.std/-temporal/-timestamp/-timestamp.html","searchKeys":["Timestamp","constructor()","tools.elide.std.Temporal.Timestamp.Timestamp"]},{"name":"enum CompressionMode","description":"tools.elide.data.Data.CompressionMode","location":"packages/proto/proto-capnp/tools.elide.data/-data/-compression-mode/index.html","searchKeys":["CompressionMode","enum CompressionMode","tools.elide.data.Data.CompressionMode"]},{"name":"enum EmbeddedScriptLanguage","description":"tools.elide.assets.Embedded.EmbeddedScriptLanguage","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-embedded-script-language/index.html","searchKeys":["EmbeddedScriptLanguage","enum EmbeddedScriptLanguage","tools.elide.assets.Embedded.EmbeddedScriptLanguage"]},{"name":"enum Encoding","description":"tools.elide.data.Encodings.Encoding","location":"packages/proto/proto-capnp/tools.elide.data/-encodings/-encoding/index.html","searchKeys":["Encoding","enum Encoding","tools.elide.data.Encodings.Encoding"]},{"name":"enum HashAlgorithm","description":"tools.elide.crypto.Crypto.HashAlgorithm","location":"packages/proto/proto-capnp/tools.elide.crypto/-crypto/-hash-algorithm/index.html","searchKeys":["HashAlgorithm","enum HashAlgorithm","tools.elide.crypto.Crypto.HashAlgorithm"]},{"name":"enum JsLanguageLevel","description":"tools.elide.assets.Embedded.JsLanguageLevel","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-js-language-level/index.html","searchKeys":["JsLanguageLevel","enum JsLanguageLevel","tools.elide.assets.Embedded.JsLanguageLevel"]},{"name":"enum Which","description":"tools.elide.assets.Embedded.EmbeddedScriptMetadata.Metadata.Which","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-embedded-script-metadata/-metadata/-which/index.html","searchKeys":["Which","enum Which","tools.elide.assets.Embedded.EmbeddedScriptMetadata.Metadata.Which"]},{"name":"enum Which","description":"tools.elide.data.Data.DataContainerRef.Reference.Which","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-container-ref/-reference/-which/index.html","searchKeys":["Which","enum Which","tools.elide.data.Data.DataContainerRef.Reference.Which"]},{"name":"fun asReader(): Data.CompressedData.Reader","description":"tools.elide.data.Data.CompressedData.Builder.asReader","location":"packages/proto/proto-capnp/tools.elide.data/-data/-compressed-data/-builder/as-reader.html","searchKeys":["asReader","fun asReader(): Data.CompressedData.Reader","tools.elide.data.Data.CompressedData.Builder.asReader"]},{"name":"fun asReader(): Data.DataContainer.Reader","description":"tools.elide.data.Data.DataContainer.Builder.asReader","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-container/-builder/as-reader.html","searchKeys":["asReader","fun asReader(): Data.DataContainer.Reader","tools.elide.data.Data.DataContainer.Builder.asReader"]},{"name":"fun asReader(): Data.DataContainerRef.FingerprintPathPair.Reader","description":"tools.elide.data.Data.DataContainerRef.FingerprintPathPair.Builder.asReader","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-container-ref/-fingerprint-path-pair/-builder/as-reader.html","searchKeys":["asReader","fun asReader(): Data.DataContainerRef.FingerprintPathPair.Reader","tools.elide.data.Data.DataContainerRef.FingerprintPathPair.Builder.asReader"]},{"name":"fun asReader(): Data.DataContainerRef.Reader","description":"tools.elide.data.Data.DataContainerRef.Builder.asReader","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-container-ref/-builder/as-reader.html","searchKeys":["asReader","fun asReader(): Data.DataContainerRef.Reader","tools.elide.data.Data.DataContainerRef.Builder.asReader"]},{"name":"fun asReader(): Data.DataContainerRef.Reference.Reader","description":"tools.elide.data.Data.DataContainerRef.Reference.Builder.asReader","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-container-ref/-reference/-builder/as-reader.html","searchKeys":["asReader","fun asReader(): Data.DataContainerRef.Reference.Reader","tools.elide.data.Data.DataContainerRef.Reference.Builder.asReader"]},{"name":"fun asReader(): Data.DataFingerprint.Reader","description":"tools.elide.data.Data.DataFingerprint.Builder.asReader","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-fingerprint/-builder/as-reader.html","searchKeys":["asReader","fun asReader(): Data.DataFingerprint.Reader","tools.elide.data.Data.DataFingerprint.Builder.asReader"]},{"name":"fun asReader(): Embedded.EmbeddedScript.Reader","description":"tools.elide.assets.Embedded.EmbeddedScript.Builder.asReader","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-embedded-script/-builder/as-reader.html","searchKeys":["asReader","fun asReader(): Embedded.EmbeddedScript.Reader","tools.elide.assets.Embedded.EmbeddedScript.Builder.asReader"]},{"name":"fun asReader(): Embedded.EmbeddedScriptMetadata.Metadata.Reader","description":"tools.elide.assets.Embedded.EmbeddedScriptMetadata.Metadata.Builder.asReader","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-embedded-script-metadata/-metadata/-builder/as-reader.html","searchKeys":["asReader","fun asReader(): Embedded.EmbeddedScriptMetadata.Metadata.Reader","tools.elide.assets.Embedded.EmbeddedScriptMetadata.Metadata.Builder.asReader"]},{"name":"fun asReader(): Embedded.EmbeddedScriptMetadata.Reader","description":"tools.elide.assets.Embedded.EmbeddedScriptMetadata.Builder.asReader","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-embedded-script-metadata/-builder/as-reader.html","searchKeys":["asReader","fun asReader(): Embedded.EmbeddedScriptMetadata.Reader","tools.elide.assets.Embedded.EmbeddedScriptMetadata.Builder.asReader"]},{"name":"fun asReader(): Embedded.JsScriptMetadata.Reader","description":"tools.elide.assets.Embedded.JsScriptMetadata.Builder.asReader","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-js-script-metadata/-builder/as-reader.html","searchKeys":["asReader","fun asReader(): Embedded.JsScriptMetadata.Reader","tools.elide.assets.Embedded.JsScriptMetadata.Builder.asReader"]},{"name":"fun asReader(): Embedded.PyScriptMetadata.Reader","description":"tools.elide.assets.Embedded.PyScriptMetadata.Builder.asReader","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-py-script-metadata/-builder/as-reader.html","searchKeys":["asReader","fun asReader(): Embedded.PyScriptMetadata.Reader","tools.elide.assets.Embedded.PyScriptMetadata.Builder.asReader"]},{"name":"fun asReader(): Temporal.Timestamp.Reader","description":"tools.elide.std.Temporal.Timestamp.Builder.asReader","location":"packages/proto/proto-capnp/tools.elide.std/-temporal/-timestamp/-builder/as-reader.html","searchKeys":["asReader","fun asReader(): Temporal.Timestamp.Reader","tools.elide.std.Temporal.Timestamp.Builder.asReader"]},{"name":"fun asReader(builder: Data.CompressedData.Builder): Data.CompressedData.Reader","description":"tools.elide.data.Data.CompressedData.Factory.asReader","location":"packages/proto/proto-capnp/tools.elide.data/-data/-compressed-data/-factory/as-reader.html","searchKeys":["asReader","fun asReader(builder: Data.CompressedData.Builder): Data.CompressedData.Reader","tools.elide.data.Data.CompressedData.Factory.asReader"]},{"name":"fun asReader(builder: Data.DataContainer.Builder): Data.DataContainer.Reader","description":"tools.elide.data.Data.DataContainer.Factory.asReader","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-container/-factory/as-reader.html","searchKeys":["asReader","fun asReader(builder: Data.DataContainer.Builder): Data.DataContainer.Reader","tools.elide.data.Data.DataContainer.Factory.asReader"]},{"name":"fun asReader(builder: Data.DataContainerRef.Builder): Data.DataContainerRef.Reader","description":"tools.elide.data.Data.DataContainerRef.Factory.asReader","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-container-ref/-factory/as-reader.html","searchKeys":["asReader","fun asReader(builder: Data.DataContainerRef.Builder): Data.DataContainerRef.Reader","tools.elide.data.Data.DataContainerRef.Factory.asReader"]},{"name":"fun asReader(builder: Data.DataContainerRef.FingerprintPathPair.Builder): Data.DataContainerRef.FingerprintPathPair.Reader","description":"tools.elide.data.Data.DataContainerRef.FingerprintPathPair.Factory.asReader","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-container-ref/-fingerprint-path-pair/-factory/as-reader.html","searchKeys":["asReader","fun asReader(builder: Data.DataContainerRef.FingerprintPathPair.Builder): Data.DataContainerRef.FingerprintPathPair.Reader","tools.elide.data.Data.DataContainerRef.FingerprintPathPair.Factory.asReader"]},{"name":"fun asReader(builder: Data.DataContainerRef.Reference.Builder): Data.DataContainerRef.Reference.Reader","description":"tools.elide.data.Data.DataContainerRef.Reference.Factory.asReader","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-container-ref/-reference/-factory/as-reader.html","searchKeys":["asReader","fun asReader(builder: Data.DataContainerRef.Reference.Builder): Data.DataContainerRef.Reference.Reader","tools.elide.data.Data.DataContainerRef.Reference.Factory.asReader"]},{"name":"fun asReader(builder: Data.DataFingerprint.Builder): Data.DataFingerprint.Reader","description":"tools.elide.data.Data.DataFingerprint.Factory.asReader","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-fingerprint/-factory/as-reader.html","searchKeys":["asReader","fun asReader(builder: Data.DataFingerprint.Builder): Data.DataFingerprint.Reader","tools.elide.data.Data.DataFingerprint.Factory.asReader"]},{"name":"fun asReader(builder: Embedded.EmbeddedScript.Builder): Embedded.EmbeddedScript.Reader","description":"tools.elide.assets.Embedded.EmbeddedScript.Factory.asReader","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-embedded-script/-factory/as-reader.html","searchKeys":["asReader","fun asReader(builder: Embedded.EmbeddedScript.Builder): Embedded.EmbeddedScript.Reader","tools.elide.assets.Embedded.EmbeddedScript.Factory.asReader"]},{"name":"fun asReader(builder: Embedded.EmbeddedScriptMetadata.Builder): Embedded.EmbeddedScriptMetadata.Reader","description":"tools.elide.assets.Embedded.EmbeddedScriptMetadata.Factory.asReader","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-embedded-script-metadata/-factory/as-reader.html","searchKeys":["asReader","fun asReader(builder: Embedded.EmbeddedScriptMetadata.Builder): Embedded.EmbeddedScriptMetadata.Reader","tools.elide.assets.Embedded.EmbeddedScriptMetadata.Factory.asReader"]},{"name":"fun asReader(builder: Embedded.EmbeddedScriptMetadata.Metadata.Builder): Embedded.EmbeddedScriptMetadata.Metadata.Reader","description":"tools.elide.assets.Embedded.EmbeddedScriptMetadata.Metadata.Factory.asReader","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-embedded-script-metadata/-metadata/-factory/as-reader.html","searchKeys":["asReader","fun asReader(builder: Embedded.EmbeddedScriptMetadata.Metadata.Builder): Embedded.EmbeddedScriptMetadata.Metadata.Reader","tools.elide.assets.Embedded.EmbeddedScriptMetadata.Metadata.Factory.asReader"]},{"name":"fun asReader(builder: Embedded.JsScriptMetadata.Builder): Embedded.JsScriptMetadata.Reader","description":"tools.elide.assets.Embedded.JsScriptMetadata.Factory.asReader","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-js-script-metadata/-factory/as-reader.html","searchKeys":["asReader","fun asReader(builder: Embedded.JsScriptMetadata.Builder): Embedded.JsScriptMetadata.Reader","tools.elide.assets.Embedded.JsScriptMetadata.Factory.asReader"]},{"name":"fun asReader(builder: Embedded.PyScriptMetadata.Builder): Embedded.PyScriptMetadata.Reader","description":"tools.elide.assets.Embedded.PyScriptMetadata.Factory.asReader","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-py-script-metadata/-factory/as-reader.html","searchKeys":["asReader","fun asReader(builder: Embedded.PyScriptMetadata.Builder): Embedded.PyScriptMetadata.Reader","tools.elide.assets.Embedded.PyScriptMetadata.Factory.asReader"]},{"name":"fun asReader(builder: Temporal.Timestamp.Builder): Temporal.Timestamp.Reader","description":"tools.elide.std.Temporal.Timestamp.Factory.asReader","location":"packages/proto/proto-capnp/tools.elide.std/-temporal/-timestamp/-factory/as-reader.html","searchKeys":["asReader","fun asReader(builder: Temporal.Timestamp.Builder): Temporal.Timestamp.Reader","tools.elide.std.Temporal.Timestamp.Factory.asReader"]},{"name":"fun constructBuilder(segment: SegmentBuilder, data: Int, pointers: Int, dataSize: Int, pointerCount: Short): Data.CompressedData.Builder","description":"tools.elide.data.Data.CompressedData.Factory.constructBuilder","location":"packages/proto/proto-capnp/tools.elide.data/-data/-compressed-data/-factory/construct-builder.html","searchKeys":["constructBuilder","fun constructBuilder(segment: SegmentBuilder, data: Int, pointers: Int, dataSize: Int, pointerCount: Short): Data.CompressedData.Builder","tools.elide.data.Data.CompressedData.Factory.constructBuilder"]},{"name":"fun constructBuilder(segment: SegmentBuilder, data: Int, pointers: Int, dataSize: Int, pointerCount: Short): Data.DataContainer.Builder","description":"tools.elide.data.Data.DataContainer.Factory.constructBuilder","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-container/-factory/construct-builder.html","searchKeys":["constructBuilder","fun constructBuilder(segment: SegmentBuilder, data: Int, pointers: Int, dataSize: Int, pointerCount: Short): Data.DataContainer.Builder","tools.elide.data.Data.DataContainer.Factory.constructBuilder"]},{"name":"fun constructBuilder(segment: SegmentBuilder, data: Int, pointers: Int, dataSize: Int, pointerCount: Short): Data.DataContainerRef.Builder","description":"tools.elide.data.Data.DataContainerRef.Factory.constructBuilder","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-container-ref/-factory/construct-builder.html","searchKeys":["constructBuilder","fun constructBuilder(segment: SegmentBuilder, data: Int, pointers: Int, dataSize: Int, pointerCount: Short): Data.DataContainerRef.Builder","tools.elide.data.Data.DataContainerRef.Factory.constructBuilder"]},{"name":"fun constructBuilder(segment: SegmentBuilder, data: Int, pointers: Int, dataSize: Int, pointerCount: Short): Data.DataContainerRef.FingerprintPathPair.Builder","description":"tools.elide.data.Data.DataContainerRef.FingerprintPathPair.Factory.constructBuilder","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-container-ref/-fingerprint-path-pair/-factory/construct-builder.html","searchKeys":["constructBuilder","fun constructBuilder(segment: SegmentBuilder, data: Int, pointers: Int, dataSize: Int, pointerCount: Short): Data.DataContainerRef.FingerprintPathPair.Builder","tools.elide.data.Data.DataContainerRef.FingerprintPathPair.Factory.constructBuilder"]},{"name":"fun constructBuilder(segment: SegmentBuilder, data: Int, pointers: Int, dataSize: Int, pointerCount: Short): Data.DataContainerRef.Reference.Builder","description":"tools.elide.data.Data.DataContainerRef.Reference.Factory.constructBuilder","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-container-ref/-reference/-factory/construct-builder.html","searchKeys":["constructBuilder","fun constructBuilder(segment: SegmentBuilder, data: Int, pointers: Int, dataSize: Int, pointerCount: Short): Data.DataContainerRef.Reference.Builder","tools.elide.data.Data.DataContainerRef.Reference.Factory.constructBuilder"]},{"name":"fun constructBuilder(segment: SegmentBuilder, data: Int, pointers: Int, dataSize: Int, pointerCount: Short): Data.DataFingerprint.Builder","description":"tools.elide.data.Data.DataFingerprint.Factory.constructBuilder","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-fingerprint/-factory/construct-builder.html","searchKeys":["constructBuilder","fun constructBuilder(segment: SegmentBuilder, data: Int, pointers: Int, dataSize: Int, pointerCount: Short): Data.DataFingerprint.Builder","tools.elide.data.Data.DataFingerprint.Factory.constructBuilder"]},{"name":"fun constructBuilder(segment: SegmentBuilder, data: Int, pointers: Int, dataSize: Int, pointerCount: Short): Embedded.EmbeddedScript.Builder","description":"tools.elide.assets.Embedded.EmbeddedScript.Factory.constructBuilder","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-embedded-script/-factory/construct-builder.html","searchKeys":["constructBuilder","fun constructBuilder(segment: SegmentBuilder, data: Int, pointers: Int, dataSize: Int, pointerCount: Short): Embedded.EmbeddedScript.Builder","tools.elide.assets.Embedded.EmbeddedScript.Factory.constructBuilder"]},{"name":"fun constructBuilder(segment: SegmentBuilder, data: Int, pointers: Int, dataSize: Int, pointerCount: Short): Embedded.EmbeddedScriptMetadata.Builder","description":"tools.elide.assets.Embedded.EmbeddedScriptMetadata.Factory.constructBuilder","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-embedded-script-metadata/-factory/construct-builder.html","searchKeys":["constructBuilder","fun constructBuilder(segment: SegmentBuilder, data: Int, pointers: Int, dataSize: Int, pointerCount: Short): Embedded.EmbeddedScriptMetadata.Builder","tools.elide.assets.Embedded.EmbeddedScriptMetadata.Factory.constructBuilder"]},{"name":"fun constructBuilder(segment: SegmentBuilder, data: Int, pointers: Int, dataSize: Int, pointerCount: Short): Embedded.EmbeddedScriptMetadata.Metadata.Builder","description":"tools.elide.assets.Embedded.EmbeddedScriptMetadata.Metadata.Factory.constructBuilder","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-embedded-script-metadata/-metadata/-factory/construct-builder.html","searchKeys":["constructBuilder","fun constructBuilder(segment: SegmentBuilder, data: Int, pointers: Int, dataSize: Int, pointerCount: Short): Embedded.EmbeddedScriptMetadata.Metadata.Builder","tools.elide.assets.Embedded.EmbeddedScriptMetadata.Metadata.Factory.constructBuilder"]},{"name":"fun constructBuilder(segment: SegmentBuilder, data: Int, pointers: Int, dataSize: Int, pointerCount: Short): Embedded.JsScriptMetadata.Builder","description":"tools.elide.assets.Embedded.JsScriptMetadata.Factory.constructBuilder","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-js-script-metadata/-factory/construct-builder.html","searchKeys":["constructBuilder","fun constructBuilder(segment: SegmentBuilder, data: Int, pointers: Int, dataSize: Int, pointerCount: Short): Embedded.JsScriptMetadata.Builder","tools.elide.assets.Embedded.JsScriptMetadata.Factory.constructBuilder"]},{"name":"fun constructBuilder(segment: SegmentBuilder, data: Int, pointers: Int, dataSize: Int, pointerCount: Short): Embedded.PyScriptMetadata.Builder","description":"tools.elide.assets.Embedded.PyScriptMetadata.Factory.constructBuilder","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-py-script-metadata/-factory/construct-builder.html","searchKeys":["constructBuilder","fun constructBuilder(segment: SegmentBuilder, data: Int, pointers: Int, dataSize: Int, pointerCount: Short): Embedded.PyScriptMetadata.Builder","tools.elide.assets.Embedded.PyScriptMetadata.Factory.constructBuilder"]},{"name":"fun constructBuilder(segment: SegmentBuilder, data: Int, pointers: Int, dataSize: Int, pointerCount: Short): Temporal.Timestamp.Builder","description":"tools.elide.std.Temporal.Timestamp.Factory.constructBuilder","location":"packages/proto/proto-capnp/tools.elide.std/-temporal/-timestamp/-factory/construct-builder.html","searchKeys":["constructBuilder","fun constructBuilder(segment: SegmentBuilder, data: Int, pointers: Int, dataSize: Int, pointerCount: Short): Temporal.Timestamp.Builder","tools.elide.std.Temporal.Timestamp.Factory.constructBuilder"]},{"name":"fun constructReader(segment: SegmentReader, data: Int, pointers: Int, dataSize: Int, pointerCount: Short, nestingLimit: Int): Data.CompressedData.Reader","description":"tools.elide.data.Data.CompressedData.Factory.constructReader","location":"packages/proto/proto-capnp/tools.elide.data/-data/-compressed-data/-factory/construct-reader.html","searchKeys":["constructReader","fun constructReader(segment: SegmentReader, data: Int, pointers: Int, dataSize: Int, pointerCount: Short, nestingLimit: Int): Data.CompressedData.Reader","tools.elide.data.Data.CompressedData.Factory.constructReader"]},{"name":"fun constructReader(segment: SegmentReader, data: Int, pointers: Int, dataSize: Int, pointerCount: Short, nestingLimit: Int): Data.DataContainer.Reader","description":"tools.elide.data.Data.DataContainer.Factory.constructReader","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-container/-factory/construct-reader.html","searchKeys":["constructReader","fun constructReader(segment: SegmentReader, data: Int, pointers: Int, dataSize: Int, pointerCount: Short, nestingLimit: Int): Data.DataContainer.Reader","tools.elide.data.Data.DataContainer.Factory.constructReader"]},{"name":"fun constructReader(segment: SegmentReader, data: Int, pointers: Int, dataSize: Int, pointerCount: Short, nestingLimit: Int): Data.DataContainerRef.FingerprintPathPair.Reader","description":"tools.elide.data.Data.DataContainerRef.FingerprintPathPair.Factory.constructReader","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-container-ref/-fingerprint-path-pair/-factory/construct-reader.html","searchKeys":["constructReader","fun constructReader(segment: SegmentReader, data: Int, pointers: Int, dataSize: Int, pointerCount: Short, nestingLimit: Int): Data.DataContainerRef.FingerprintPathPair.Reader","tools.elide.data.Data.DataContainerRef.FingerprintPathPair.Factory.constructReader"]},{"name":"fun constructReader(segment: SegmentReader, data: Int, pointers: Int, dataSize: Int, pointerCount: Short, nestingLimit: Int): Data.DataContainerRef.Reader","description":"tools.elide.data.Data.DataContainerRef.Factory.constructReader","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-container-ref/-factory/construct-reader.html","searchKeys":["constructReader","fun constructReader(segment: SegmentReader, data: Int, pointers: Int, dataSize: Int, pointerCount: Short, nestingLimit: Int): Data.DataContainerRef.Reader","tools.elide.data.Data.DataContainerRef.Factory.constructReader"]},{"name":"fun constructReader(segment: SegmentReader, data: Int, pointers: Int, dataSize: Int, pointerCount: Short, nestingLimit: Int): Data.DataContainerRef.Reference.Reader","description":"tools.elide.data.Data.DataContainerRef.Reference.Factory.constructReader","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-container-ref/-reference/-factory/construct-reader.html","searchKeys":["constructReader","fun constructReader(segment: SegmentReader, data: Int, pointers: Int, dataSize: Int, pointerCount: Short, nestingLimit: Int): Data.DataContainerRef.Reference.Reader","tools.elide.data.Data.DataContainerRef.Reference.Factory.constructReader"]},{"name":"fun constructReader(segment: SegmentReader, data: Int, pointers: Int, dataSize: Int, pointerCount: Short, nestingLimit: Int): Data.DataFingerprint.Reader","description":"tools.elide.data.Data.DataFingerprint.Factory.constructReader","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-fingerprint/-factory/construct-reader.html","searchKeys":["constructReader","fun constructReader(segment: SegmentReader, data: Int, pointers: Int, dataSize: Int, pointerCount: Short, nestingLimit: Int): Data.DataFingerprint.Reader","tools.elide.data.Data.DataFingerprint.Factory.constructReader"]},{"name":"fun constructReader(segment: SegmentReader, data: Int, pointers: Int, dataSize: Int, pointerCount: Short, nestingLimit: Int): Embedded.EmbeddedScript.Reader","description":"tools.elide.assets.Embedded.EmbeddedScript.Factory.constructReader","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-embedded-script/-factory/construct-reader.html","searchKeys":["constructReader","fun constructReader(segment: SegmentReader, data: Int, pointers: Int, dataSize: Int, pointerCount: Short, nestingLimit: Int): Embedded.EmbeddedScript.Reader","tools.elide.assets.Embedded.EmbeddedScript.Factory.constructReader"]},{"name":"fun constructReader(segment: SegmentReader, data: Int, pointers: Int, dataSize: Int, pointerCount: Short, nestingLimit: Int): Embedded.EmbeddedScriptMetadata.Metadata.Reader","description":"tools.elide.assets.Embedded.EmbeddedScriptMetadata.Metadata.Factory.constructReader","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-embedded-script-metadata/-metadata/-factory/construct-reader.html","searchKeys":["constructReader","fun constructReader(segment: SegmentReader, data: Int, pointers: Int, dataSize: Int, pointerCount: Short, nestingLimit: Int): Embedded.EmbeddedScriptMetadata.Metadata.Reader","tools.elide.assets.Embedded.EmbeddedScriptMetadata.Metadata.Factory.constructReader"]},{"name":"fun constructReader(segment: SegmentReader, data: Int, pointers: Int, dataSize: Int, pointerCount: Short, nestingLimit: Int): Embedded.EmbeddedScriptMetadata.Reader","description":"tools.elide.assets.Embedded.EmbeddedScriptMetadata.Factory.constructReader","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-embedded-script-metadata/-factory/construct-reader.html","searchKeys":["constructReader","fun constructReader(segment: SegmentReader, data: Int, pointers: Int, dataSize: Int, pointerCount: Short, nestingLimit: Int): Embedded.EmbeddedScriptMetadata.Reader","tools.elide.assets.Embedded.EmbeddedScriptMetadata.Factory.constructReader"]},{"name":"fun constructReader(segment: SegmentReader, data: Int, pointers: Int, dataSize: Int, pointerCount: Short, nestingLimit: Int): Embedded.JsScriptMetadata.Reader","description":"tools.elide.assets.Embedded.JsScriptMetadata.Factory.constructReader","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-js-script-metadata/-factory/construct-reader.html","searchKeys":["constructReader","fun constructReader(segment: SegmentReader, data: Int, pointers: Int, dataSize: Int, pointerCount: Short, nestingLimit: Int): Embedded.JsScriptMetadata.Reader","tools.elide.assets.Embedded.JsScriptMetadata.Factory.constructReader"]},{"name":"fun constructReader(segment: SegmentReader, data: Int, pointers: Int, dataSize: Int, pointerCount: Short, nestingLimit: Int): Embedded.PyScriptMetadata.Reader","description":"tools.elide.assets.Embedded.PyScriptMetadata.Factory.constructReader","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-py-script-metadata/-factory/construct-reader.html","searchKeys":["constructReader","fun constructReader(segment: SegmentReader, data: Int, pointers: Int, dataSize: Int, pointerCount: Short, nestingLimit: Int): Embedded.PyScriptMetadata.Reader","tools.elide.assets.Embedded.PyScriptMetadata.Factory.constructReader"]},{"name":"fun constructReader(segment: SegmentReader, data: Int, pointers: Int, dataSize: Int, pointerCount: Short, nestingLimit: Int): Temporal.Timestamp.Reader","description":"tools.elide.std.Temporal.Timestamp.Factory.constructReader","location":"packages/proto/proto-capnp/tools.elide.std/-temporal/-timestamp/-factory/construct-reader.html","searchKeys":["constructReader","fun constructReader(segment: SegmentReader, data: Int, pointers: Int, dataSize: Int, pointerCount: Short, nestingLimit: Int): Temporal.Timestamp.Reader","tools.elide.std.Temporal.Timestamp.Factory.constructReader"]},{"name":"fun getCompression(): Data.CompressionMode","description":"tools.elide.data.Data.CompressedData.Builder.getCompression","location":"packages/proto/proto-capnp/tools.elide.data/-data/-compressed-data/-builder/get-compression.html","searchKeys":["getCompression","fun getCompression(): Data.CompressionMode","tools.elide.data.Data.CompressedData.Builder.getCompression"]},{"name":"fun getCompression(): Data.CompressionMode","description":"tools.elide.data.Data.CompressedData.Reader.getCompression","location":"packages/proto/proto-capnp/tools.elide.data/-data/-compressed-data/-reader/get-compression.html","searchKeys":["getCompression","fun getCompression(): Data.CompressionMode","tools.elide.data.Data.CompressedData.Reader.getCompression"]},{"name":"fun getData(): Data.CompressedData.Builder","description":"tools.elide.data.Data.DataContainerRef.Reference.Builder.getData","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-container-ref/-reference/-builder/get-data.html","searchKeys":["getData","fun getData(): Data.CompressedData.Builder","tools.elide.data.Data.DataContainerRef.Reference.Builder.getData"]},{"name":"fun getData(): Data.DataContainer.Builder","description":"tools.elide.data.Data.CompressedData.Builder.getData","location":"packages/proto/proto-capnp/tools.elide.data/-data/-compressed-data/-builder/get-data.html","searchKeys":["getData","fun getData(): Data.DataContainer.Builder","tools.elide.data.Data.CompressedData.Builder.getData"]},{"name":"fun getDirectDependency(): TextList.Builder","description":"tools.elide.assets.Embedded.EmbeddedScript.Builder.getDirectDependency","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-embedded-script/-builder/get-direct-dependency.html","searchKeys":["getDirectDependency","fun getDirectDependency(): TextList.Builder","tools.elide.assets.Embedded.EmbeddedScript.Builder.getDirectDependency"]},{"name":"fun getDirectDependency(): TextList.Reader","description":"tools.elide.assets.Embedded.EmbeddedScript.Reader.getDirectDependency","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-embedded-script/-reader/get-direct-dependency.html","searchKeys":["getDirectDependency","fun getDirectDependency(): TextList.Reader","tools.elide.assets.Embedded.EmbeddedScript.Reader.getDirectDependency"]},{"name":"fun getEncoding(): Encodings.Encoding","description":"tools.elide.data.Data.DataContainer.Builder.getEncoding","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-container/-builder/get-encoding.html","searchKeys":["getEncoding","fun getEncoding(): Encodings.Encoding","tools.elide.data.Data.DataContainer.Builder.getEncoding"]},{"name":"fun getEncoding(): Encodings.Encoding","description":"tools.elide.data.Data.DataContainer.Reader.getEncoding","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-container/-reader/get-encoding.html","searchKeys":["getEncoding","fun getEncoding(): Encodings.Encoding","tools.elide.data.Data.DataContainer.Reader.getEncoding"]},{"name":"fun getEncoding(): Encodings.Encoding","description":"tools.elide.data.Data.DataFingerprint.Builder.getEncoding","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-fingerprint/-builder/get-encoding.html","searchKeys":["getEncoding","fun getEncoding(): Encodings.Encoding","tools.elide.data.Data.DataFingerprint.Builder.getEncoding"]},{"name":"fun getEncoding(): Encodings.Encoding","description":"tools.elide.data.Data.DataFingerprint.Reader.getEncoding","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-fingerprint/-reader/get-encoding.html","searchKeys":["getEncoding","fun getEncoding(): Encodings.Encoding","tools.elide.data.Data.DataFingerprint.Reader.getEncoding"]},{"name":"fun getFilename(): Text.Builder","description":"tools.elide.assets.Embedded.EmbeddedScript.Builder.getFilename","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-embedded-script/-builder/get-filename.html","searchKeys":["getFilename","fun getFilename(): Text.Builder","tools.elide.assets.Embedded.EmbeddedScript.Builder.getFilename"]},{"name":"fun getFilesystem(): Data.DataContainerRef.FingerprintPathPair.Builder","description":"tools.elide.data.Data.DataContainerRef.Reference.Builder.getFilesystem","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-container-ref/-reference/-builder/get-filesystem.html","searchKeys":["getFilesystem","fun getFilesystem(): Data.DataContainerRef.FingerprintPathPair.Builder","tools.elide.data.Data.DataContainerRef.Reference.Builder.getFilesystem"]},{"name":"fun getFingerprint(): Data.Builder","description":"tools.elide.data.Data.DataFingerprint.Builder.getFingerprint","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-fingerprint/-builder/get-fingerprint.html","searchKeys":["getFingerprint","fun getFingerprint(): Data.Builder","tools.elide.data.Data.DataFingerprint.Builder.getFingerprint"]},{"name":"fun getFingerprint(): Data.DataFingerprint.Builder","description":"tools.elide.data.Data.DataContainerRef.FingerprintPathPair.Builder.getFingerprint","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-container-ref/-fingerprint-path-pair/-builder/get-fingerprint.html","searchKeys":["getFingerprint","fun getFingerprint(): Data.DataFingerprint.Builder","tools.elide.data.Data.DataContainerRef.FingerprintPathPair.Builder.getFingerprint"]},{"name":"fun getHash(): Crypto.HashAlgorithm","description":"tools.elide.data.Data.DataFingerprint.Builder.getHash","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-fingerprint/-builder/get-hash.html","searchKeys":["getHash","fun getHash(): Crypto.HashAlgorithm","tools.elide.data.Data.DataFingerprint.Builder.getHash"]},{"name":"fun getHash(): Crypto.HashAlgorithm","description":"tools.elide.data.Data.DataFingerprint.Reader.getHash","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-fingerprint/-reader/get-hash.html","searchKeys":["getHash","fun getHash(): Crypto.HashAlgorithm","tools.elide.data.Data.DataFingerprint.Reader.getHash"]},{"name":"fun getIntegrity(): StructList.Builder<Data.DataFingerprint.Builder>","description":"tools.elide.data.Data.CompressedData.Builder.getIntegrity","location":"packages/proto/proto-capnp/tools.elide.data/-data/-compressed-data/-builder/get-integrity.html","searchKeys":["getIntegrity","fun getIntegrity(): StructList.Builder<Data.DataFingerprint.Builder>","tools.elide.data.Data.CompressedData.Builder.getIntegrity"]},{"name":"fun getIntegrity(): StructList.Builder<Data.DataFingerprint.Builder>","description":"tools.elide.data.Data.DataContainer.Builder.getIntegrity","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-container/-builder/get-integrity.html","searchKeys":["getIntegrity","fun getIntegrity(): StructList.Builder<Data.DataFingerprint.Builder>","tools.elide.data.Data.DataContainer.Builder.getIntegrity"]},{"name":"fun getIntegrity(): StructList.Reader<Data.DataFingerprint.Reader>","description":"tools.elide.data.Data.CompressedData.Reader.getIntegrity","location":"packages/proto/proto-capnp/tools.elide.data/-data/-compressed-data/-reader/get-integrity.html","searchKeys":["getIntegrity","fun getIntegrity(): StructList.Reader<Data.DataFingerprint.Reader>","tools.elide.data.Data.CompressedData.Reader.getIntegrity"]},{"name":"fun getIntegrity(): StructList.Reader<Data.DataFingerprint.Reader>","description":"tools.elide.data.Data.DataContainer.Reader.getIntegrity","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-container/-reader/get-integrity.html","searchKeys":["getIntegrity","fun getIntegrity(): StructList.Reader<Data.DataFingerprint.Reader>","tools.elide.data.Data.DataContainer.Reader.getIntegrity"]},{"name":"fun getJavascript(): Embedded.JsScriptMetadata.Builder","description":"tools.elide.assets.Embedded.EmbeddedScriptMetadata.Metadata.Builder.getJavascript","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-embedded-script-metadata/-metadata/-builder/get-javascript.html","searchKeys":["getJavascript","fun getJavascript(): Embedded.JsScriptMetadata.Builder","tools.elide.assets.Embedded.EmbeddedScriptMetadata.Metadata.Builder.getJavascript"]},{"name":"fun getLanguage(): Embedded.EmbeddedScriptLanguage","description":"tools.elide.assets.Embedded.EmbeddedScript.Builder.getLanguage","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-embedded-script/-builder/get-language.html","searchKeys":["getLanguage","fun getLanguage(): Embedded.EmbeddedScriptLanguage","tools.elide.assets.Embedded.EmbeddedScript.Builder.getLanguage"]},{"name":"fun getLanguage(): Embedded.EmbeddedScriptLanguage","description":"tools.elide.assets.Embedded.EmbeddedScript.Reader.getLanguage","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-embedded-script/-reader/get-language.html","searchKeys":["getLanguage","fun getLanguage(): Embedded.EmbeddedScriptLanguage","tools.elide.assets.Embedded.EmbeddedScript.Reader.getLanguage"]},{"name":"fun getLanguageLevel(): Embedded.JsLanguageLevel","description":"tools.elide.assets.Embedded.JsScriptMetadata.Builder.getLanguageLevel","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-js-script-metadata/-builder/get-language-level.html","searchKeys":["getLanguageLevel","fun getLanguageLevel(): Embedded.JsLanguageLevel","tools.elide.assets.Embedded.JsScriptMetadata.Builder.getLanguageLevel"]},{"name":"fun getLanguageLevel(): Embedded.JsLanguageLevel","description":"tools.elide.assets.Embedded.JsScriptMetadata.Reader.getLanguageLevel","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-js-script-metadata/-reader/get-language-level.html","searchKeys":["getLanguageLevel","fun getLanguageLevel(): Embedded.JsLanguageLevel","tools.elide.assets.Embedded.JsScriptMetadata.Reader.getLanguageLevel"]},{"name":"fun getLastModified(): Temporal.Timestamp.Builder","description":"tools.elide.assets.Embedded.EmbeddedScript.Builder.getLastModified","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-embedded-script/-builder/get-last-modified.html","searchKeys":["getLastModified","fun getLastModified(): Temporal.Timestamp.Builder","tools.elide.assets.Embedded.EmbeddedScript.Builder.getLastModified"]},{"name":"fun getMetadata(): Embedded.EmbeddedScriptMetadata.Builder","description":"tools.elide.assets.Embedded.EmbeddedScript.Builder.getMetadata","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-embedded-script/-builder/get-metadata.html","searchKeys":["getMetadata","fun getMetadata(): Embedded.EmbeddedScriptMetadata.Builder","tools.elide.assets.Embedded.EmbeddedScript.Builder.getMetadata"]},{"name":"fun getMetadata(): Embedded.EmbeddedScriptMetadata.Metadata.Builder","description":"tools.elide.assets.Embedded.EmbeddedScriptMetadata.Builder.getMetadata","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-embedded-script-metadata/-builder/get-metadata.html","searchKeys":["getMetadata","fun getMetadata(): Embedded.EmbeddedScriptMetadata.Metadata.Builder","tools.elide.assets.Embedded.EmbeddedScriptMetadata.Builder.getMetadata"]},{"name":"fun getModule(): Text.Builder","description":"tools.elide.assets.Embedded.EmbeddedScript.Builder.getModule","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-embedded-script/-builder/get-module.html","searchKeys":["getModule","fun getModule(): Text.Builder","tools.elide.assets.Embedded.EmbeddedScript.Builder.getModule"]},{"name":"fun getNanos(): Int","description":"tools.elide.std.Temporal.Timestamp.Builder.getNanos","location":"packages/proto/proto-capnp/tools.elide.std/-temporal/-timestamp/-builder/get-nanos.html","searchKeys":["getNanos","fun getNanos(): Int","tools.elide.std.Temporal.Timestamp.Builder.getNanos"]},{"name":"fun getNanos(): Int","description":"tools.elide.std.Temporal.Timestamp.Reader.getNanos","location":"packages/proto/proto-capnp/tools.elide.std/-temporal/-timestamp/-reader/get-nanos.html","searchKeys":["getNanos","fun getNanos(): Int","tools.elide.std.Temporal.Timestamp.Reader.getNanos"]},{"name":"fun getPath(): Text.Builder","description":"tools.elide.data.Data.DataContainerRef.FingerprintPathPair.Builder.getPath","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-container-ref/-fingerprint-path-pair/-builder/get-path.html","searchKeys":["getPath","fun getPath(): Text.Builder","tools.elide.data.Data.DataContainerRef.FingerprintPathPair.Builder.getPath"]},{"name":"fun getPrefix(): DataList.Builder","description":"tools.elide.data.Data.DataFingerprint.Builder.getPrefix","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-fingerprint/-builder/get-prefix.html","searchKeys":["getPrefix","fun getPrefix(): DataList.Builder","tools.elide.data.Data.DataFingerprint.Builder.getPrefix"]},{"name":"fun getPrefix(): DataList.Reader","description":"tools.elide.data.Data.DataFingerprint.Reader.getPrefix","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-fingerprint/-reader/get-prefix.html","searchKeys":["getPrefix","fun getPrefix(): DataList.Reader","tools.elide.data.Data.DataFingerprint.Reader.getPrefix"]},{"name":"fun getPython(): Embedded.PyScriptMetadata.Builder","description":"tools.elide.assets.Embedded.EmbeddedScriptMetadata.Metadata.Builder.getPython","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-embedded-script-metadata/-metadata/-builder/get-python.html","searchKeys":["getPython","fun getPython(): Embedded.PyScriptMetadata.Builder","tools.elide.assets.Embedded.EmbeddedScriptMetadata.Metadata.Builder.getPython"]},{"name":"fun getRaw(): DataList.Builder","description":"tools.elide.data.Data.DataContainer.Builder.getRaw","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-container/-builder/get-raw.html","searchKeys":["getRaw","fun getRaw(): DataList.Builder","tools.elide.data.Data.DataContainer.Builder.getRaw"]},{"name":"fun getRaw(): DataList.Reader","description":"tools.elide.data.Data.DataContainer.Reader.getRaw","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-container/-reader/get-raw.html","searchKeys":["getRaw","fun getRaw(): DataList.Reader","tools.elide.data.Data.DataContainer.Reader.getRaw"]},{"name":"fun getReference(): Data.DataContainerRef.Reference.Builder","description":"tools.elide.data.Data.DataContainerRef.Builder.getReference","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-container-ref/-builder/get-reference.html","searchKeys":["getReference","fun getReference(): Data.DataContainerRef.Reference.Builder","tools.elide.data.Data.DataContainerRef.Builder.getReference"]},{"name":"fun getResource(): Data.DataContainerRef.FingerprintPathPair.Builder","description":"tools.elide.data.Data.DataContainerRef.Reference.Builder.getResource","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-container-ref/-reference/-builder/get-resource.html","searchKeys":["getResource","fun getResource(): Data.DataContainerRef.FingerprintPathPair.Builder","tools.elide.data.Data.DataContainerRef.Reference.Builder.getResource"]},{"name":"fun getScript(): Data.DataContainerRef.Builder","description":"tools.elide.assets.Embedded.EmbeddedScript.Builder.getScript","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-embedded-script/-builder/get-script.html","searchKeys":["getScript","fun getScript(): Data.DataContainerRef.Builder","tools.elide.assets.Embedded.EmbeddedScript.Builder.getScript"]},{"name":"fun getSeconds(): Long","description":"tools.elide.std.Temporal.Timestamp.Builder.getSeconds","location":"packages/proto/proto-capnp/tools.elide.std/-temporal/-timestamp/-builder/get-seconds.html","searchKeys":["getSeconds","fun getSeconds(): Long","tools.elide.std.Temporal.Timestamp.Builder.getSeconds"]},{"name":"fun getSeconds(): Long","description":"tools.elide.std.Temporal.Timestamp.Reader.getSeconds","location":"packages/proto/proto-capnp/tools.elide.std/-temporal/-timestamp/-reader/get-seconds.html","searchKeys":["getSeconds","fun getSeconds(): Long","tools.elide.std.Temporal.Timestamp.Reader.getSeconds"]},{"name":"fun getSeparator(): Data.Builder","description":"tools.elide.data.Data.DataFingerprint.Builder.getSeparator","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-fingerprint/-builder/get-separator.html","searchKeys":["getSeparator","fun getSeparator(): Data.Builder","tools.elide.data.Data.DataFingerprint.Builder.getSeparator"]},{"name":"fun getSize(): Long","description":"tools.elide.data.Data.CompressedData.Builder.getSize","location":"packages/proto/proto-capnp/tools.elide.data/-data/-compressed-data/-builder/get-size.html","searchKeys":["getSize","fun getSize(): Long","tools.elide.data.Data.CompressedData.Builder.getSize"]},{"name":"fun getSize(): Long","description":"tools.elide.data.Data.CompressedData.Reader.getSize","location":"packages/proto/proto-capnp/tools.elide.data/-data/-compressed-data/-reader/get-size.html","searchKeys":["getSize","fun getSize(): Long","tools.elide.data.Data.CompressedData.Reader.getSize"]},{"name":"fun getSourcemap(): Data.DataContainerRef.Builder","description":"tools.elide.assets.Embedded.EmbeddedScript.Builder.getSourcemap","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-embedded-script/-builder/get-sourcemap.html","searchKeys":["getSourcemap","fun getSourcemap(): Data.DataContainerRef.Builder","tools.elide.assets.Embedded.EmbeddedScript.Builder.getSourcemap"]},{"name":"fun getSuffix(): DataList.Builder","description":"tools.elide.data.Data.DataFingerprint.Builder.getSuffix","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-fingerprint/-builder/get-suffix.html","searchKeys":["getSuffix","fun getSuffix(): DataList.Builder","tools.elide.data.Data.DataFingerprint.Builder.getSuffix"]},{"name":"fun getSuffix(): DataList.Reader","description":"tools.elide.data.Data.DataFingerprint.Reader.getSuffix","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-fingerprint/-reader/get-suffix.html","searchKeys":["getSuffix","fun getSuffix(): DataList.Reader","tools.elide.data.Data.DataFingerprint.Reader.getSuffix"]},{"name":"fun getTransitiveDependency(): TextList.Builder","description":"tools.elide.assets.Embedded.EmbeddedScript.Builder.getTransitiveDependency","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-embedded-script/-builder/get-transitive-dependency.html","searchKeys":["getTransitiveDependency","fun getTransitiveDependency(): TextList.Builder","tools.elide.assets.Embedded.EmbeddedScript.Builder.getTransitiveDependency"]},{"name":"fun getTransitiveDependency(): TextList.Reader","description":"tools.elide.assets.Embedded.EmbeddedScript.Reader.getTransitiveDependency","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-embedded-script/-reader/get-transitive-dependency.html","searchKeys":["getTransitiveDependency","fun getTransitiveDependency(): TextList.Reader","tools.elide.assets.Embedded.EmbeddedScript.Reader.getTransitiveDependency"]},{"name":"fun hasDirectDependency(): Boolean","description":"tools.elide.assets.Embedded.EmbeddedScript.Builder.hasDirectDependency","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-embedded-script/-builder/has-direct-dependency.html","searchKeys":["hasDirectDependency","fun hasDirectDependency(): Boolean","tools.elide.assets.Embedded.EmbeddedScript.Builder.hasDirectDependency"]},{"name":"fun hasDirectDependency(): Boolean","description":"tools.elide.assets.Embedded.EmbeddedScript.Reader.hasDirectDependency","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-embedded-script/-reader/has-direct-dependency.html","searchKeys":["hasDirectDependency","fun hasDirectDependency(): Boolean","tools.elide.assets.Embedded.EmbeddedScript.Reader.hasDirectDependency"]},{"name":"fun hasFilename(): Boolean","description":"tools.elide.assets.Embedded.EmbeddedScript.Builder.hasFilename","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-embedded-script/-builder/has-filename.html","searchKeys":["hasFilename","fun hasFilename(): Boolean","tools.elide.assets.Embedded.EmbeddedScript.Builder.hasFilename"]},{"name":"fun hasFingerprint(): Boolean","description":"tools.elide.data.Data.DataFingerprint.Builder.hasFingerprint","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-fingerprint/-builder/has-fingerprint.html","searchKeys":["hasFingerprint","fun hasFingerprint(): Boolean","tools.elide.data.Data.DataFingerprint.Builder.hasFingerprint"]},{"name":"fun hasIntegrity(): Boolean","description":"tools.elide.data.Data.CompressedData.Builder.hasIntegrity","location":"packages/proto/proto-capnp/tools.elide.data/-data/-compressed-data/-builder/has-integrity.html","searchKeys":["hasIntegrity","fun hasIntegrity(): Boolean","tools.elide.data.Data.CompressedData.Builder.hasIntegrity"]},{"name":"fun hasIntegrity(): Boolean","description":"tools.elide.data.Data.CompressedData.Reader.hasIntegrity","location":"packages/proto/proto-capnp/tools.elide.data/-data/-compressed-data/-reader/has-integrity.html","searchKeys":["hasIntegrity","fun hasIntegrity(): Boolean","tools.elide.data.Data.CompressedData.Reader.hasIntegrity"]},{"name":"fun hasIntegrity(): Boolean","description":"tools.elide.data.Data.DataContainer.Builder.hasIntegrity","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-container/-builder/has-integrity.html","searchKeys":["hasIntegrity","fun hasIntegrity(): Boolean","tools.elide.data.Data.DataContainer.Builder.hasIntegrity"]},{"name":"fun hasIntegrity(): Boolean","description":"tools.elide.data.Data.DataContainer.Reader.hasIntegrity","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-container/-reader/has-integrity.html","searchKeys":["hasIntegrity","fun hasIntegrity(): Boolean","tools.elide.data.Data.DataContainer.Reader.hasIntegrity"]},{"name":"fun hasModule(): Boolean","description":"tools.elide.assets.Embedded.EmbeddedScript.Builder.hasModule","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-embedded-script/-builder/has-module.html","searchKeys":["hasModule","fun hasModule(): Boolean","tools.elide.assets.Embedded.EmbeddedScript.Builder.hasModule"]},{"name":"fun hasPath(): Boolean","description":"tools.elide.data.Data.DataContainerRef.FingerprintPathPair.Builder.hasPath","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-container-ref/-fingerprint-path-pair/-builder/has-path.html","searchKeys":["hasPath","fun hasPath(): Boolean","tools.elide.data.Data.DataContainerRef.FingerprintPathPair.Builder.hasPath"]},{"name":"fun hasPrefix(): Boolean","description":"tools.elide.data.Data.DataFingerprint.Builder.hasPrefix","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-fingerprint/-builder/has-prefix.html","searchKeys":["hasPrefix","fun hasPrefix(): Boolean","tools.elide.data.Data.DataFingerprint.Builder.hasPrefix"]},{"name":"fun hasPrefix(): Boolean","description":"tools.elide.data.Data.DataFingerprint.Reader.hasPrefix","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-fingerprint/-reader/has-prefix.html","searchKeys":["hasPrefix","fun hasPrefix(): Boolean","tools.elide.data.Data.DataFingerprint.Reader.hasPrefix"]},{"name":"fun hasRaw(): Boolean","description":"tools.elide.data.Data.DataContainer.Builder.hasRaw","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-container/-builder/has-raw.html","searchKeys":["hasRaw","fun hasRaw(): Boolean","tools.elide.data.Data.DataContainer.Builder.hasRaw"]},{"name":"fun hasRaw(): Boolean","description":"tools.elide.data.Data.DataContainer.Reader.hasRaw","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-container/-reader/has-raw.html","searchKeys":["hasRaw","fun hasRaw(): Boolean","tools.elide.data.Data.DataContainer.Reader.hasRaw"]},{"name":"fun hasSeparator(): Boolean","description":"tools.elide.data.Data.DataFingerprint.Builder.hasSeparator","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-fingerprint/-builder/has-separator.html","searchKeys":["hasSeparator","fun hasSeparator(): Boolean","tools.elide.data.Data.DataFingerprint.Builder.hasSeparator"]},{"name":"fun hasSuffix(): Boolean","description":"tools.elide.data.Data.DataFingerprint.Builder.hasSuffix","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-fingerprint/-builder/has-suffix.html","searchKeys":["hasSuffix","fun hasSuffix(): Boolean","tools.elide.data.Data.DataFingerprint.Builder.hasSuffix"]},{"name":"fun hasSuffix(): Boolean","description":"tools.elide.data.Data.DataFingerprint.Reader.hasSuffix","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-fingerprint/-reader/has-suffix.html","searchKeys":["hasSuffix","fun hasSuffix(): Boolean","tools.elide.data.Data.DataFingerprint.Reader.hasSuffix"]},{"name":"fun hasTransitiveDependency(): Boolean","description":"tools.elide.assets.Embedded.EmbeddedScript.Builder.hasTransitiveDependency","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-embedded-script/-builder/has-transitive-dependency.html","searchKeys":["hasTransitiveDependency","fun hasTransitiveDependency(): Boolean","tools.elide.assets.Embedded.EmbeddedScript.Builder.hasTransitiveDependency"]},{"name":"fun hasTransitiveDependency(): Boolean","description":"tools.elide.assets.Embedded.EmbeddedScript.Reader.hasTransitiveDependency","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-embedded-script/-reader/has-transitive-dependency.html","searchKeys":["hasTransitiveDependency","fun hasTransitiveDependency(): Boolean","tools.elide.assets.Embedded.EmbeddedScript.Reader.hasTransitiveDependency"]},{"name":"fun initData(): Data.CompressedData.Builder","description":"tools.elide.data.Data.DataContainerRef.Reference.Builder.initData","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-container-ref/-reference/-builder/init-data.html","searchKeys":["initData","fun initData(): Data.CompressedData.Builder","tools.elide.data.Data.DataContainerRef.Reference.Builder.initData"]},{"name":"fun initData(): Data.DataContainer.Builder","description":"tools.elide.data.Data.CompressedData.Builder.initData","location":"packages/proto/proto-capnp/tools.elide.data/-data/-compressed-data/-builder/init-data.html","searchKeys":["initData","fun initData(): Data.DataContainer.Builder","tools.elide.data.Data.CompressedData.Builder.initData"]},{"name":"fun initDirectDependency(size: Int): TextList.Builder","description":"tools.elide.assets.Embedded.EmbeddedScript.Builder.initDirectDependency","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-embedded-script/-builder/init-direct-dependency.html","searchKeys":["initDirectDependency","fun initDirectDependency(size: Int): TextList.Builder","tools.elide.assets.Embedded.EmbeddedScript.Builder.initDirectDependency"]},{"name":"fun initFilename(size: Int): Text.Builder","description":"tools.elide.assets.Embedded.EmbeddedScript.Builder.initFilename","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-embedded-script/-builder/init-filename.html","searchKeys":["initFilename","fun initFilename(size: Int): Text.Builder","tools.elide.assets.Embedded.EmbeddedScript.Builder.initFilename"]},{"name":"fun initFilesystem(): Data.DataContainerRef.FingerprintPathPair.Builder","description":"tools.elide.data.Data.DataContainerRef.Reference.Builder.initFilesystem","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-container-ref/-reference/-builder/init-filesystem.html","searchKeys":["initFilesystem","fun initFilesystem(): Data.DataContainerRef.FingerprintPathPair.Builder","tools.elide.data.Data.DataContainerRef.Reference.Builder.initFilesystem"]},{"name":"fun initFingerprint(): Data.DataFingerprint.Builder","description":"tools.elide.data.Data.DataContainerRef.FingerprintPathPair.Builder.initFingerprint","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-container-ref/-fingerprint-path-pair/-builder/init-fingerprint.html","searchKeys":["initFingerprint","fun initFingerprint(): Data.DataFingerprint.Builder","tools.elide.data.Data.DataContainerRef.FingerprintPathPair.Builder.initFingerprint"]},{"name":"fun initFingerprint(size: Int): Data.Builder","description":"tools.elide.data.Data.DataFingerprint.Builder.initFingerprint","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-fingerprint/-builder/init-fingerprint.html","searchKeys":["initFingerprint","fun initFingerprint(size: Int): Data.Builder","tools.elide.data.Data.DataFingerprint.Builder.initFingerprint"]},{"name":"fun initIntegrity(size: Int): StructList.Builder<Data.DataFingerprint.Builder>","description":"tools.elide.data.Data.CompressedData.Builder.initIntegrity","location":"packages/proto/proto-capnp/tools.elide.data/-data/-compressed-data/-builder/init-integrity.html","searchKeys":["initIntegrity","fun initIntegrity(size: Int): StructList.Builder<Data.DataFingerprint.Builder>","tools.elide.data.Data.CompressedData.Builder.initIntegrity"]},{"name":"fun initIntegrity(size: Int): StructList.Builder<Data.DataFingerprint.Builder>","description":"tools.elide.data.Data.DataContainer.Builder.initIntegrity","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-container/-builder/init-integrity.html","searchKeys":["initIntegrity","fun initIntegrity(size: Int): StructList.Builder<Data.DataFingerprint.Builder>","tools.elide.data.Data.DataContainer.Builder.initIntegrity"]},{"name":"fun initJavascript(): Embedded.JsScriptMetadata.Builder","description":"tools.elide.assets.Embedded.EmbeddedScriptMetadata.Metadata.Builder.initJavascript","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-embedded-script-metadata/-metadata/-builder/init-javascript.html","searchKeys":["initJavascript","fun initJavascript(): Embedded.JsScriptMetadata.Builder","tools.elide.assets.Embedded.EmbeddedScriptMetadata.Metadata.Builder.initJavascript"]},{"name":"fun initLastModified(): Temporal.Timestamp.Builder","description":"tools.elide.assets.Embedded.EmbeddedScript.Builder.initLastModified","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-embedded-script/-builder/init-last-modified.html","searchKeys":["initLastModified","fun initLastModified(): Temporal.Timestamp.Builder","tools.elide.assets.Embedded.EmbeddedScript.Builder.initLastModified"]},{"name":"fun initMetadata(): Embedded.EmbeddedScriptMetadata.Builder","description":"tools.elide.assets.Embedded.EmbeddedScript.Builder.initMetadata","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-embedded-script/-builder/init-metadata.html","searchKeys":["initMetadata","fun initMetadata(): Embedded.EmbeddedScriptMetadata.Builder","tools.elide.assets.Embedded.EmbeddedScript.Builder.initMetadata"]},{"name":"fun initMetadata(): Embedded.EmbeddedScriptMetadata.Metadata.Builder","description":"tools.elide.assets.Embedded.EmbeddedScriptMetadata.Builder.initMetadata","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-embedded-script-metadata/-builder/init-metadata.html","searchKeys":["initMetadata","fun initMetadata(): Embedded.EmbeddedScriptMetadata.Metadata.Builder","tools.elide.assets.Embedded.EmbeddedScriptMetadata.Builder.initMetadata"]},{"name":"fun initModule(size: Int): Text.Builder","description":"tools.elide.assets.Embedded.EmbeddedScript.Builder.initModule","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-embedded-script/-builder/init-module.html","searchKeys":["initModule","fun initModule(size: Int): Text.Builder","tools.elide.assets.Embedded.EmbeddedScript.Builder.initModule"]},{"name":"fun initPath(size: Int): Text.Builder","description":"tools.elide.data.Data.DataContainerRef.FingerprintPathPair.Builder.initPath","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-container-ref/-fingerprint-path-pair/-builder/init-path.html","searchKeys":["initPath","fun initPath(size: Int): Text.Builder","tools.elide.data.Data.DataContainerRef.FingerprintPathPair.Builder.initPath"]},{"name":"fun initPrefix(size: Int): DataList.Builder","description":"tools.elide.data.Data.DataFingerprint.Builder.initPrefix","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-fingerprint/-builder/init-prefix.html","searchKeys":["initPrefix","fun initPrefix(size: Int): DataList.Builder","tools.elide.data.Data.DataFingerprint.Builder.initPrefix"]},{"name":"fun initPython(): Embedded.PyScriptMetadata.Builder","description":"tools.elide.assets.Embedded.EmbeddedScriptMetadata.Metadata.Builder.initPython","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-embedded-script-metadata/-metadata/-builder/init-python.html","searchKeys":["initPython","fun initPython(): Embedded.PyScriptMetadata.Builder","tools.elide.assets.Embedded.EmbeddedScriptMetadata.Metadata.Builder.initPython"]},{"name":"fun initRaw(size: Int): DataList.Builder","description":"tools.elide.data.Data.DataContainer.Builder.initRaw","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-container/-builder/init-raw.html","searchKeys":["initRaw","fun initRaw(size: Int): DataList.Builder","tools.elide.data.Data.DataContainer.Builder.initRaw"]},{"name":"fun initReference(): Data.DataContainerRef.Reference.Builder","description":"tools.elide.data.Data.DataContainerRef.Builder.initReference","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-container-ref/-builder/init-reference.html","searchKeys":["initReference","fun initReference(): Data.DataContainerRef.Reference.Builder","tools.elide.data.Data.DataContainerRef.Builder.initReference"]},{"name":"fun initResource(): Data.DataContainerRef.FingerprintPathPair.Builder","description":"tools.elide.data.Data.DataContainerRef.Reference.Builder.initResource","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-container-ref/-reference/-builder/init-resource.html","searchKeys":["initResource","fun initResource(): Data.DataContainerRef.FingerprintPathPair.Builder","tools.elide.data.Data.DataContainerRef.Reference.Builder.initResource"]},{"name":"fun initScript(): Data.DataContainerRef.Builder","description":"tools.elide.assets.Embedded.EmbeddedScript.Builder.initScript","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-embedded-script/-builder/init-script.html","searchKeys":["initScript","fun initScript(): Data.DataContainerRef.Builder","tools.elide.assets.Embedded.EmbeddedScript.Builder.initScript"]},{"name":"fun initSeparator(size: Int): Data.Builder","description":"tools.elide.data.Data.DataFingerprint.Builder.initSeparator","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-fingerprint/-builder/init-separator.html","searchKeys":["initSeparator","fun initSeparator(size: Int): Data.Builder","tools.elide.data.Data.DataFingerprint.Builder.initSeparator"]},{"name":"fun initSourcemap(): Data.DataContainerRef.Builder","description":"tools.elide.assets.Embedded.EmbeddedScript.Builder.initSourcemap","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-embedded-script/-builder/init-sourcemap.html","searchKeys":["initSourcemap","fun initSourcemap(): Data.DataContainerRef.Builder","tools.elide.assets.Embedded.EmbeddedScript.Builder.initSourcemap"]},{"name":"fun initSuffix(size: Int): DataList.Builder","description":"tools.elide.data.Data.DataFingerprint.Builder.initSuffix","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-fingerprint/-builder/init-suffix.html","searchKeys":["initSuffix","fun initSuffix(size: Int): DataList.Builder","tools.elide.data.Data.DataFingerprint.Builder.initSuffix"]},{"name":"fun initTransitiveDependency(size: Int): TextList.Builder","description":"tools.elide.assets.Embedded.EmbeddedScript.Builder.initTransitiveDependency","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-embedded-script/-builder/init-transitive-dependency.html","searchKeys":["initTransitiveDependency","fun initTransitiveDependency(size: Int): TextList.Builder","tools.elide.assets.Embedded.EmbeddedScript.Builder.initTransitiveDependency"]},{"name":"fun isData(): Boolean","description":"tools.elide.data.Data.DataContainerRef.Reference.Builder.isData","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-container-ref/-reference/-builder/is-data.html","searchKeys":["isData","fun isData(): Boolean","tools.elide.data.Data.DataContainerRef.Reference.Builder.isData"]},{"name":"fun isData(): Boolean","description":"tools.elide.data.Data.DataContainerRef.Reference.Reader.isData","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-container-ref/-reference/-reader/is-data.html","searchKeys":["isData","fun isData(): Boolean","tools.elide.data.Data.DataContainerRef.Reference.Reader.isData"]},{"name":"fun isFilesystem(): Boolean","description":"tools.elide.data.Data.DataContainerRef.Reference.Builder.isFilesystem","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-container-ref/-reference/-builder/is-filesystem.html","searchKeys":["isFilesystem","fun isFilesystem(): Boolean","tools.elide.data.Data.DataContainerRef.Reference.Builder.isFilesystem"]},{"name":"fun isFilesystem(): Boolean","description":"tools.elide.data.Data.DataContainerRef.Reference.Reader.isFilesystem","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-container-ref/-reference/-reader/is-filesystem.html","searchKeys":["isFilesystem","fun isFilesystem(): Boolean","tools.elide.data.Data.DataContainerRef.Reference.Reader.isFilesystem"]},{"name":"fun isJavascript(): Boolean","description":"tools.elide.assets.Embedded.EmbeddedScriptMetadata.Metadata.Builder.isJavascript","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-embedded-script-metadata/-metadata/-builder/is-javascript.html","searchKeys":["isJavascript","fun isJavascript(): Boolean","tools.elide.assets.Embedded.EmbeddedScriptMetadata.Metadata.Builder.isJavascript"]},{"name":"fun isJavascript(): Boolean","description":"tools.elide.assets.Embedded.EmbeddedScriptMetadata.Metadata.Reader.isJavascript","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-embedded-script-metadata/-metadata/-reader/is-javascript.html","searchKeys":["isJavascript","fun isJavascript(): Boolean","tools.elide.assets.Embedded.EmbeddedScriptMetadata.Metadata.Reader.isJavascript"]},{"name":"fun isPython(): Boolean","description":"tools.elide.assets.Embedded.EmbeddedScriptMetadata.Metadata.Builder.isPython","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-embedded-script-metadata/-metadata/-builder/is-python.html","searchKeys":["isPython","fun isPython(): Boolean","tools.elide.assets.Embedded.EmbeddedScriptMetadata.Metadata.Builder.isPython"]},{"name":"fun isPython(): Boolean","description":"tools.elide.assets.Embedded.EmbeddedScriptMetadata.Metadata.Reader.isPython","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-embedded-script-metadata/-metadata/-reader/is-python.html","searchKeys":["isPython","fun isPython(): Boolean","tools.elide.assets.Embedded.EmbeddedScriptMetadata.Metadata.Reader.isPython"]},{"name":"fun isResource(): Boolean","description":"tools.elide.data.Data.DataContainerRef.Reference.Builder.isResource","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-container-ref/-reference/-builder/is-resource.html","searchKeys":["isResource","fun isResource(): Boolean","tools.elide.data.Data.DataContainerRef.Reference.Builder.isResource"]},{"name":"fun isResource(): Boolean","description":"tools.elide.data.Data.DataContainerRef.Reference.Reader.isResource","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-container-ref/-reference/-reader/is-resource.html","searchKeys":["isResource","fun isResource(): Boolean","tools.elide.data.Data.DataContainerRef.Reference.Reader.isResource"]},{"name":"fun setCompression(value: Data.CompressionMode)","description":"tools.elide.data.Data.CompressedData.Builder.setCompression","location":"packages/proto/proto-capnp/tools.elide.data/-data/-compressed-data/-builder/set-compression.html","searchKeys":["setCompression","fun setCompression(value: Data.CompressionMode)","tools.elide.data.Data.CompressedData.Builder.setCompression"]},{"name":"fun setData(value: Data.CompressedData.Reader)","description":"tools.elide.data.Data.DataContainerRef.Reference.Builder.setData","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-container-ref/-reference/-builder/set-data.html","searchKeys":["setData","fun setData(value: Data.CompressedData.Reader)","tools.elide.data.Data.DataContainerRef.Reference.Builder.setData"]},{"name":"fun setData(value: Data.DataContainer.Reader)","description":"tools.elide.data.Data.CompressedData.Builder.setData","location":"packages/proto/proto-capnp/tools.elide.data/-data/-compressed-data/-builder/set-data.html","searchKeys":["setData","fun setData(value: Data.DataContainer.Reader)","tools.elide.data.Data.CompressedData.Builder.setData"]},{"name":"fun setDirectDependency(value: TextList.Reader)","description":"tools.elide.assets.Embedded.EmbeddedScript.Builder.setDirectDependency","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-embedded-script/-builder/set-direct-dependency.html","searchKeys":["setDirectDependency","fun setDirectDependency(value: TextList.Reader)","tools.elide.assets.Embedded.EmbeddedScript.Builder.setDirectDependency"]},{"name":"fun setEncoding(value: Encodings.Encoding)","description":"tools.elide.data.Data.DataContainer.Builder.setEncoding","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-container/-builder/set-encoding.html","searchKeys":["setEncoding","fun setEncoding(value: Encodings.Encoding)","tools.elide.data.Data.DataContainer.Builder.setEncoding"]},{"name":"fun setEncoding(value: Encodings.Encoding)","description":"tools.elide.data.Data.DataFingerprint.Builder.setEncoding","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-fingerprint/-builder/set-encoding.html","searchKeys":["setEncoding","fun setEncoding(value: Encodings.Encoding)","tools.elide.data.Data.DataFingerprint.Builder.setEncoding"]},{"name":"fun setFilename(value: String)","description":"tools.elide.assets.Embedded.EmbeddedScript.Builder.setFilename","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-embedded-script/-builder/set-filename.html","searchKeys":["setFilename","fun setFilename(value: String)","tools.elide.assets.Embedded.EmbeddedScript.Builder.setFilename"]},{"name":"fun setFilename(value: Text.Reader)","description":"tools.elide.assets.Embedded.EmbeddedScript.Builder.setFilename","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-embedded-script/-builder/set-filename.html","searchKeys":["setFilename","fun setFilename(value: Text.Reader)","tools.elide.assets.Embedded.EmbeddedScript.Builder.setFilename"]},{"name":"fun setFilesystem(value: Data.DataContainerRef.FingerprintPathPair.Reader)","description":"tools.elide.data.Data.DataContainerRef.Reference.Builder.setFilesystem","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-container-ref/-reference/-builder/set-filesystem.html","searchKeys":["setFilesystem","fun setFilesystem(value: Data.DataContainerRef.FingerprintPathPair.Reader)","tools.elide.data.Data.DataContainerRef.Reference.Builder.setFilesystem"]},{"name":"fun setFingerprint(value: Array<Byte>)","description":"tools.elide.data.Data.DataFingerprint.Builder.setFingerprint","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-fingerprint/-builder/set-fingerprint.html","searchKeys":["setFingerprint","fun setFingerprint(value: Array<Byte>)","tools.elide.data.Data.DataFingerprint.Builder.setFingerprint"]},{"name":"fun setFingerprint(value: Data.DataFingerprint.Reader)","description":"tools.elide.data.Data.DataContainerRef.FingerprintPathPair.Builder.setFingerprint","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-container-ref/-fingerprint-path-pair/-builder/set-fingerprint.html","searchKeys":["setFingerprint","fun setFingerprint(value: Data.DataFingerprint.Reader)","tools.elide.data.Data.DataContainerRef.FingerprintPathPair.Builder.setFingerprint"]},{"name":"fun setFingerprint(value: Data.Reader)","description":"tools.elide.data.Data.DataFingerprint.Builder.setFingerprint","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-fingerprint/-builder/set-fingerprint.html","searchKeys":["setFingerprint","fun setFingerprint(value: Data.Reader)","tools.elide.data.Data.DataFingerprint.Builder.setFingerprint"]},{"name":"fun setHash(value: Crypto.HashAlgorithm)","description":"tools.elide.data.Data.DataFingerprint.Builder.setHash","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-fingerprint/-builder/set-hash.html","searchKeys":["setHash","fun setHash(value: Crypto.HashAlgorithm)","tools.elide.data.Data.DataFingerprint.Builder.setHash"]},{"name":"fun setIntegrity(value: StructList.Reader<Data.DataFingerprint.Reader>)","description":"tools.elide.data.Data.CompressedData.Builder.setIntegrity","location":"packages/proto/proto-capnp/tools.elide.data/-data/-compressed-data/-builder/set-integrity.html","searchKeys":["setIntegrity","fun setIntegrity(value: StructList.Reader<Data.DataFingerprint.Reader>)","tools.elide.data.Data.CompressedData.Builder.setIntegrity"]},{"name":"fun setIntegrity(value: StructList.Reader<Data.DataFingerprint.Reader>)","description":"tools.elide.data.Data.DataContainer.Builder.setIntegrity","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-container/-builder/set-integrity.html","searchKeys":["setIntegrity","fun setIntegrity(value: StructList.Reader<Data.DataFingerprint.Reader>)","tools.elide.data.Data.DataContainer.Builder.setIntegrity"]},{"name":"fun setJavascript(value: Embedded.JsScriptMetadata.Reader)","description":"tools.elide.assets.Embedded.EmbeddedScriptMetadata.Metadata.Builder.setJavascript","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-embedded-script-metadata/-metadata/-builder/set-javascript.html","searchKeys":["setJavascript","fun setJavascript(value: Embedded.JsScriptMetadata.Reader)","tools.elide.assets.Embedded.EmbeddedScriptMetadata.Metadata.Builder.setJavascript"]},{"name":"fun setLanguage(value: Embedded.EmbeddedScriptLanguage)","description":"tools.elide.assets.Embedded.EmbeddedScript.Builder.setLanguage","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-embedded-script/-builder/set-language.html","searchKeys":["setLanguage","fun setLanguage(value: Embedded.EmbeddedScriptLanguage)","tools.elide.assets.Embedded.EmbeddedScript.Builder.setLanguage"]},{"name":"fun setLanguageLevel(value: Embedded.JsLanguageLevel)","description":"tools.elide.assets.Embedded.JsScriptMetadata.Builder.setLanguageLevel","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-js-script-metadata/-builder/set-language-level.html","searchKeys":["setLanguageLevel","fun setLanguageLevel(value: Embedded.JsLanguageLevel)","tools.elide.assets.Embedded.JsScriptMetadata.Builder.setLanguageLevel"]},{"name":"fun setLastModified(value: Temporal.Timestamp.Reader)","description":"tools.elide.assets.Embedded.EmbeddedScript.Builder.setLastModified","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-embedded-script/-builder/set-last-modified.html","searchKeys":["setLastModified","fun setLastModified(value: Temporal.Timestamp.Reader)","tools.elide.assets.Embedded.EmbeddedScript.Builder.setLastModified"]},{"name":"fun setMetadata(value: Embedded.EmbeddedScriptMetadata.Reader)","description":"tools.elide.assets.Embedded.EmbeddedScript.Builder.setMetadata","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-embedded-script/-builder/set-metadata.html","searchKeys":["setMetadata","fun setMetadata(value: Embedded.EmbeddedScriptMetadata.Reader)","tools.elide.assets.Embedded.EmbeddedScript.Builder.setMetadata"]},{"name":"fun setModule(value: String)","description":"tools.elide.assets.Embedded.EmbeddedScript.Builder.setModule","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-embedded-script/-builder/set-module.html","searchKeys":["setModule","fun setModule(value: String)","tools.elide.assets.Embedded.EmbeddedScript.Builder.setModule"]},{"name":"fun setModule(value: Text.Reader)","description":"tools.elide.assets.Embedded.EmbeddedScript.Builder.setModule","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-embedded-script/-builder/set-module.html","searchKeys":["setModule","fun setModule(value: Text.Reader)","tools.elide.assets.Embedded.EmbeddedScript.Builder.setModule"]},{"name":"fun setNanos(value: Int)","description":"tools.elide.std.Temporal.Timestamp.Builder.setNanos","location":"packages/proto/proto-capnp/tools.elide.std/-temporal/-timestamp/-builder/set-nanos.html","searchKeys":["setNanos","fun setNanos(value: Int)","tools.elide.std.Temporal.Timestamp.Builder.setNanos"]},{"name":"fun setPath(value: String)","description":"tools.elide.data.Data.DataContainerRef.FingerprintPathPair.Builder.setPath","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-container-ref/-fingerprint-path-pair/-builder/set-path.html","searchKeys":["setPath","fun setPath(value: String)","tools.elide.data.Data.DataContainerRef.FingerprintPathPair.Builder.setPath"]},{"name":"fun setPath(value: Text.Reader)","description":"tools.elide.data.Data.DataContainerRef.FingerprintPathPair.Builder.setPath","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-container-ref/-fingerprint-path-pair/-builder/set-path.html","searchKeys":["setPath","fun setPath(value: Text.Reader)","tools.elide.data.Data.DataContainerRef.FingerprintPathPair.Builder.setPath"]},{"name":"fun setPrefix(value: DataList.Reader)","description":"tools.elide.data.Data.DataFingerprint.Builder.setPrefix","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-fingerprint/-builder/set-prefix.html","searchKeys":["setPrefix","fun setPrefix(value: DataList.Reader)","tools.elide.data.Data.DataFingerprint.Builder.setPrefix"]},{"name":"fun setPython(value: Embedded.PyScriptMetadata.Reader)","description":"tools.elide.assets.Embedded.EmbeddedScriptMetadata.Metadata.Builder.setPython","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-embedded-script-metadata/-metadata/-builder/set-python.html","searchKeys":["setPython","fun setPython(value: Embedded.PyScriptMetadata.Reader)","tools.elide.assets.Embedded.EmbeddedScriptMetadata.Metadata.Builder.setPython"]},{"name":"fun setRaw(value: DataList.Reader)","description":"tools.elide.data.Data.DataContainer.Builder.setRaw","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-container/-builder/set-raw.html","searchKeys":["setRaw","fun setRaw(value: DataList.Reader)","tools.elide.data.Data.DataContainer.Builder.setRaw"]},{"name":"fun setResource(value: Data.DataContainerRef.FingerprintPathPair.Reader)","description":"tools.elide.data.Data.DataContainerRef.Reference.Builder.setResource","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-container-ref/-reference/-builder/set-resource.html","searchKeys":["setResource","fun setResource(value: Data.DataContainerRef.FingerprintPathPair.Reader)","tools.elide.data.Data.DataContainerRef.Reference.Builder.setResource"]},{"name":"fun setScript(value: Data.DataContainerRef.Reader)","description":"tools.elide.assets.Embedded.EmbeddedScript.Builder.setScript","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-embedded-script/-builder/set-script.html","searchKeys":["setScript","fun setScript(value: Data.DataContainerRef.Reader)","tools.elide.assets.Embedded.EmbeddedScript.Builder.setScript"]},{"name":"fun setSeconds(value: Long)","description":"tools.elide.std.Temporal.Timestamp.Builder.setSeconds","location":"packages/proto/proto-capnp/tools.elide.std/-temporal/-timestamp/-builder/set-seconds.html","searchKeys":["setSeconds","fun setSeconds(value: Long)","tools.elide.std.Temporal.Timestamp.Builder.setSeconds"]},{"name":"fun setSeparator(value: Array<Byte>)","description":"tools.elide.data.Data.DataFingerprint.Builder.setSeparator","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-fingerprint/-builder/set-separator.html","searchKeys":["setSeparator","fun setSeparator(value: Array<Byte>)","tools.elide.data.Data.DataFingerprint.Builder.setSeparator"]},{"name":"fun setSeparator(value: Data.Reader)","description":"tools.elide.data.Data.DataFingerprint.Builder.setSeparator","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-fingerprint/-builder/set-separator.html","searchKeys":["setSeparator","fun setSeparator(value: Data.Reader)","tools.elide.data.Data.DataFingerprint.Builder.setSeparator"]},{"name":"fun setSize(value: Long)","description":"tools.elide.data.Data.CompressedData.Builder.setSize","location":"packages/proto/proto-capnp/tools.elide.data/-data/-compressed-data/-builder/set-size.html","searchKeys":["setSize","fun setSize(value: Long)","tools.elide.data.Data.CompressedData.Builder.setSize"]},{"name":"fun setSourcemap(value: Data.DataContainerRef.Reader)","description":"tools.elide.assets.Embedded.EmbeddedScript.Builder.setSourcemap","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-embedded-script/-builder/set-sourcemap.html","searchKeys":["setSourcemap","fun setSourcemap(value: Data.DataContainerRef.Reader)","tools.elide.assets.Embedded.EmbeddedScript.Builder.setSourcemap"]},{"name":"fun setSuffix(value: DataList.Reader)","description":"tools.elide.data.Data.DataFingerprint.Builder.setSuffix","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-fingerprint/-builder/set-suffix.html","searchKeys":["setSuffix","fun setSuffix(value: DataList.Reader)","tools.elide.data.Data.DataFingerprint.Builder.setSuffix"]},{"name":"fun setTransitiveDependency(value: TextList.Reader)","description":"tools.elide.assets.Embedded.EmbeddedScript.Builder.setTransitiveDependency","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-embedded-script/-builder/set-transitive-dependency.html","searchKeys":["setTransitiveDependency","fun setTransitiveDependency(value: TextList.Reader)","tools.elide.assets.Embedded.EmbeddedScript.Builder.setTransitiveDependency"]},{"name":"fun structSize(): StructSize","description":"tools.elide.assets.Embedded.EmbeddedScript.Factory.structSize","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-embedded-script/-factory/struct-size.html","searchKeys":["structSize","fun structSize(): StructSize","tools.elide.assets.Embedded.EmbeddedScript.Factory.structSize"]},{"name":"fun structSize(): StructSize","description":"tools.elide.assets.Embedded.EmbeddedScriptMetadata.Factory.structSize","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-embedded-script-metadata/-factory/struct-size.html","searchKeys":["structSize","fun structSize(): StructSize","tools.elide.assets.Embedded.EmbeddedScriptMetadata.Factory.structSize"]},{"name":"fun structSize(): StructSize","description":"tools.elide.assets.Embedded.EmbeddedScriptMetadata.Metadata.Factory.structSize","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-embedded-script-metadata/-metadata/-factory/struct-size.html","searchKeys":["structSize","fun structSize(): StructSize","tools.elide.assets.Embedded.EmbeddedScriptMetadata.Metadata.Factory.structSize"]},{"name":"fun structSize(): StructSize","description":"tools.elide.assets.Embedded.JsScriptMetadata.Factory.structSize","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-js-script-metadata/-factory/struct-size.html","searchKeys":["structSize","fun structSize(): StructSize","tools.elide.assets.Embedded.JsScriptMetadata.Factory.structSize"]},{"name":"fun structSize(): StructSize","description":"tools.elide.assets.Embedded.PyScriptMetadata.Factory.structSize","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-py-script-metadata/-factory/struct-size.html","searchKeys":["structSize","fun structSize(): StructSize","tools.elide.assets.Embedded.PyScriptMetadata.Factory.structSize"]},{"name":"fun structSize(): StructSize","description":"tools.elide.data.Data.CompressedData.Factory.structSize","location":"packages/proto/proto-capnp/tools.elide.data/-data/-compressed-data/-factory/struct-size.html","searchKeys":["structSize","fun structSize(): StructSize","tools.elide.data.Data.CompressedData.Factory.structSize"]},{"name":"fun structSize(): StructSize","description":"tools.elide.data.Data.DataContainer.Factory.structSize","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-container/-factory/struct-size.html","searchKeys":["structSize","fun structSize(): StructSize","tools.elide.data.Data.DataContainer.Factory.structSize"]},{"name":"fun structSize(): StructSize","description":"tools.elide.data.Data.DataContainerRef.Factory.structSize","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-container-ref/-factory/struct-size.html","searchKeys":["structSize","fun structSize(): StructSize","tools.elide.data.Data.DataContainerRef.Factory.structSize"]},{"name":"fun structSize(): StructSize","description":"tools.elide.data.Data.DataContainerRef.FingerprintPathPair.Factory.structSize","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-container-ref/-fingerprint-path-pair/-factory/struct-size.html","searchKeys":["structSize","fun structSize(): StructSize","tools.elide.data.Data.DataContainerRef.FingerprintPathPair.Factory.structSize"]},{"name":"fun structSize(): StructSize","description":"tools.elide.data.Data.DataContainerRef.Reference.Factory.structSize","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-container-ref/-reference/-factory/struct-size.html","searchKeys":["structSize","fun structSize(): StructSize","tools.elide.data.Data.DataContainerRef.Reference.Factory.structSize"]},{"name":"fun structSize(): StructSize","description":"tools.elide.data.Data.DataFingerprint.Factory.structSize","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-fingerprint/-factory/struct-size.html","searchKeys":["structSize","fun structSize(): StructSize","tools.elide.data.Data.DataFingerprint.Factory.structSize"]},{"name":"fun structSize(): StructSize","description":"tools.elide.std.Temporal.Timestamp.Factory.structSize","location":"packages/proto/proto-capnp/tools.elide.std/-temporal/-timestamp/-factory/struct-size.html","searchKeys":["structSize","fun structSize(): StructSize","tools.elide.std.Temporal.Timestamp.Factory.structSize"]},{"name":"open class CompressedData","description":"tools.elide.data.Data.CompressedData","location":"packages/proto/proto-capnp/tools.elide.data/-data/-compressed-data/index.html","searchKeys":["CompressedData","open class CompressedData","tools.elide.data.Data.CompressedData"]},{"name":"open class DataContainer","description":"tools.elide.data.Data.DataContainer","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-container/index.html","searchKeys":["DataContainer","open class DataContainer","tools.elide.data.Data.DataContainer"]},{"name":"open class DataContainerRef","description":"tools.elide.data.Data.DataContainerRef","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-container-ref/index.html","searchKeys":["DataContainerRef","open class DataContainerRef","tools.elide.data.Data.DataContainerRef"]},{"name":"open class DataFingerprint","description":"tools.elide.data.Data.DataFingerprint","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-fingerprint/index.html","searchKeys":["DataFingerprint","open class DataFingerprint","tools.elide.data.Data.DataFingerprint"]},{"name":"open class EmbeddedScript","description":"tools.elide.assets.Embedded.EmbeddedScript","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-embedded-script/index.html","searchKeys":["EmbeddedScript","open class EmbeddedScript","tools.elide.assets.Embedded.EmbeddedScript"]},{"name":"open class EmbeddedScriptMetadata","description":"tools.elide.assets.Embedded.EmbeddedScriptMetadata","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-embedded-script-metadata/index.html","searchKeys":["EmbeddedScriptMetadata","open class EmbeddedScriptMetadata","tools.elide.assets.Embedded.EmbeddedScriptMetadata"]},{"name":"open class FingerprintPathPair","description":"tools.elide.data.Data.DataContainerRef.FingerprintPathPair","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-container-ref/-fingerprint-path-pair/index.html","searchKeys":["FingerprintPathPair","open class FingerprintPathPair","tools.elide.data.Data.DataContainerRef.FingerprintPathPair"]},{"name":"open class JsScriptMetadata","description":"tools.elide.assets.Embedded.JsScriptMetadata","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-js-script-metadata/index.html","searchKeys":["JsScriptMetadata","open class JsScriptMetadata","tools.elide.assets.Embedded.JsScriptMetadata"]},{"name":"open class Metadata","description":"tools.elide.assets.Embedded.EmbeddedScriptMetadata.Metadata","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-embedded-script-metadata/-metadata/index.html","searchKeys":["Metadata","open class Metadata","tools.elide.assets.Embedded.EmbeddedScriptMetadata.Metadata"]},{"name":"open class PyScriptMetadata","description":"tools.elide.assets.Embedded.PyScriptMetadata","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-py-script-metadata/index.html","searchKeys":["PyScriptMetadata","open class PyScriptMetadata","tools.elide.assets.Embedded.PyScriptMetadata"]},{"name":"open class Reference","description":"tools.elide.data.Data.DataContainerRef.Reference","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-container-ref/-reference/index.html","searchKeys":["Reference","open class Reference","tools.elide.data.Data.DataContainerRef.Reference"]},{"name":"open class Timestamp","description":"tools.elide.std.Temporal.Timestamp","location":"packages/proto/proto-capnp/tools.elide.std/-temporal/-timestamp/index.html","searchKeys":["Timestamp","open class Timestamp","tools.elide.std.Temporal.Timestamp"]},{"name":"open fun getData(): Data.CompressedData.Reader","description":"tools.elide.data.Data.DataContainerRef.Reference.Reader.getData","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-container-ref/-reference/-reader/get-data.html","searchKeys":["getData","open fun getData(): Data.CompressedData.Reader","tools.elide.data.Data.DataContainerRef.Reference.Reader.getData"]},{"name":"open fun getData(): Data.DataContainer.Reader","description":"tools.elide.data.Data.CompressedData.Reader.getData","location":"packages/proto/proto-capnp/tools.elide.data/-data/-compressed-data/-reader/get-data.html","searchKeys":["getData","open fun getData(): Data.DataContainer.Reader","tools.elide.data.Data.CompressedData.Reader.getData"]},{"name":"open fun getFilename(): Text.Reader","description":"tools.elide.assets.Embedded.EmbeddedScript.Reader.getFilename","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-embedded-script/-reader/get-filename.html","searchKeys":["getFilename","open fun getFilename(): Text.Reader","tools.elide.assets.Embedded.EmbeddedScript.Reader.getFilename"]},{"name":"open fun getFilesystem(): Data.DataContainerRef.FingerprintPathPair.Reader","description":"tools.elide.data.Data.DataContainerRef.Reference.Reader.getFilesystem","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-container-ref/-reference/-reader/get-filesystem.html","searchKeys":["getFilesystem","open fun getFilesystem(): Data.DataContainerRef.FingerprintPathPair.Reader","tools.elide.data.Data.DataContainerRef.Reference.Reader.getFilesystem"]},{"name":"open fun getFingerprint(): Data.DataFingerprint.Reader","description":"tools.elide.data.Data.DataContainerRef.FingerprintPathPair.Reader.getFingerprint","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-container-ref/-fingerprint-path-pair/-reader/get-fingerprint.html","searchKeys":["getFingerprint","open fun getFingerprint(): Data.DataFingerprint.Reader","tools.elide.data.Data.DataContainerRef.FingerprintPathPair.Reader.getFingerprint"]},{"name":"open fun getFingerprint(): Data.Reader","description":"tools.elide.data.Data.DataFingerprint.Reader.getFingerprint","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-fingerprint/-reader/get-fingerprint.html","searchKeys":["getFingerprint","open fun getFingerprint(): Data.Reader","tools.elide.data.Data.DataFingerprint.Reader.getFingerprint"]},{"name":"open fun getJavascript(): Embedded.JsScriptMetadata.Reader","description":"tools.elide.assets.Embedded.EmbeddedScriptMetadata.Metadata.Reader.getJavascript","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-embedded-script-metadata/-metadata/-reader/get-javascript.html","searchKeys":["getJavascript","open fun getJavascript(): Embedded.JsScriptMetadata.Reader","tools.elide.assets.Embedded.EmbeddedScriptMetadata.Metadata.Reader.getJavascript"]},{"name":"open fun getLastModified(): Temporal.Timestamp.Reader","description":"tools.elide.assets.Embedded.EmbeddedScript.Reader.getLastModified","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-embedded-script/-reader/get-last-modified.html","searchKeys":["getLastModified","open fun getLastModified(): Temporal.Timestamp.Reader","tools.elide.assets.Embedded.EmbeddedScript.Reader.getLastModified"]},{"name":"open fun getMetadata(): Embedded.EmbeddedScriptMetadata.Metadata.Reader","description":"tools.elide.assets.Embedded.EmbeddedScriptMetadata.Reader.getMetadata","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-embedded-script-metadata/-reader/get-metadata.html","searchKeys":["getMetadata","open fun getMetadata(): Embedded.EmbeddedScriptMetadata.Metadata.Reader","tools.elide.assets.Embedded.EmbeddedScriptMetadata.Reader.getMetadata"]},{"name":"open fun getMetadata(): Embedded.EmbeddedScriptMetadata.Reader","description":"tools.elide.assets.Embedded.EmbeddedScript.Reader.getMetadata","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-embedded-script/-reader/get-metadata.html","searchKeys":["getMetadata","open fun getMetadata(): Embedded.EmbeddedScriptMetadata.Reader","tools.elide.assets.Embedded.EmbeddedScript.Reader.getMetadata"]},{"name":"open fun getModule(): Text.Reader","description":"tools.elide.assets.Embedded.EmbeddedScript.Reader.getModule","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-embedded-script/-reader/get-module.html","searchKeys":["getModule","open fun getModule(): Text.Reader","tools.elide.assets.Embedded.EmbeddedScript.Reader.getModule"]},{"name":"open fun getPath(): Text.Reader","description":"tools.elide.data.Data.DataContainerRef.FingerprintPathPair.Reader.getPath","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-container-ref/-fingerprint-path-pair/-reader/get-path.html","searchKeys":["getPath","open fun getPath(): Text.Reader","tools.elide.data.Data.DataContainerRef.FingerprintPathPair.Reader.getPath"]},{"name":"open fun getPython(): Embedded.PyScriptMetadata.Reader","description":"tools.elide.assets.Embedded.EmbeddedScriptMetadata.Metadata.Reader.getPython","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-embedded-script-metadata/-metadata/-reader/get-python.html","searchKeys":["getPython","open fun getPython(): Embedded.PyScriptMetadata.Reader","tools.elide.assets.Embedded.EmbeddedScriptMetadata.Metadata.Reader.getPython"]},{"name":"open fun getReference(): Data.DataContainerRef.Reference.Reader","description":"tools.elide.data.Data.DataContainerRef.Reader.getReference","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-container-ref/-reader/get-reference.html","searchKeys":["getReference","open fun getReference(): Data.DataContainerRef.Reference.Reader","tools.elide.data.Data.DataContainerRef.Reader.getReference"]},{"name":"open fun getResource(): Data.DataContainerRef.FingerprintPathPair.Reader","description":"tools.elide.data.Data.DataContainerRef.Reference.Reader.getResource","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-container-ref/-reference/-reader/get-resource.html","searchKeys":["getResource","open fun getResource(): Data.DataContainerRef.FingerprintPathPair.Reader","tools.elide.data.Data.DataContainerRef.Reference.Reader.getResource"]},{"name":"open fun getScript(): Data.DataContainerRef.Reader","description":"tools.elide.assets.Embedded.EmbeddedScript.Reader.getScript","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-embedded-script/-reader/get-script.html","searchKeys":["getScript","open fun getScript(): Data.DataContainerRef.Reader","tools.elide.assets.Embedded.EmbeddedScript.Reader.getScript"]},{"name":"open fun getSeparator(): Data.Reader","description":"tools.elide.data.Data.DataFingerprint.Reader.getSeparator","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-fingerprint/-reader/get-separator.html","searchKeys":["getSeparator","open fun getSeparator(): Data.Reader","tools.elide.data.Data.DataFingerprint.Reader.getSeparator"]},{"name":"open fun getSourcemap(): Data.DataContainerRef.Reader","description":"tools.elide.assets.Embedded.EmbeddedScript.Reader.getSourcemap","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-embedded-script/-reader/get-sourcemap.html","searchKeys":["getSourcemap","open fun getSourcemap(): Data.DataContainerRef.Reader","tools.elide.assets.Embedded.EmbeddedScript.Reader.getSourcemap"]},{"name":"open fun hasData(): Boolean","description":"tools.elide.data.Data.CompressedData.Reader.hasData","location":"packages/proto/proto-capnp/tools.elide.data/-data/-compressed-data/-reader/has-data.html","searchKeys":["hasData","open fun hasData(): Boolean","tools.elide.data.Data.CompressedData.Reader.hasData"]},{"name":"open fun hasData(): Boolean","description":"tools.elide.data.Data.DataContainerRef.Reference.Reader.hasData","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-container-ref/-reference/-reader/has-data.html","searchKeys":["hasData","open fun hasData(): Boolean","tools.elide.data.Data.DataContainerRef.Reference.Reader.hasData"]},{"name":"open fun hasFilename(): Boolean","description":"tools.elide.assets.Embedded.EmbeddedScript.Reader.hasFilename","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-embedded-script/-reader/has-filename.html","searchKeys":["hasFilename","open fun hasFilename(): Boolean","tools.elide.assets.Embedded.EmbeddedScript.Reader.hasFilename"]},{"name":"open fun hasFilesystem(): Boolean","description":"tools.elide.data.Data.DataContainerRef.Reference.Reader.hasFilesystem","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-container-ref/-reference/-reader/has-filesystem.html","searchKeys":["hasFilesystem","open fun hasFilesystem(): Boolean","tools.elide.data.Data.DataContainerRef.Reference.Reader.hasFilesystem"]},{"name":"open fun hasFingerprint(): Boolean","description":"tools.elide.data.Data.DataContainerRef.FingerprintPathPair.Reader.hasFingerprint","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-container-ref/-fingerprint-path-pair/-reader/has-fingerprint.html","searchKeys":["hasFingerprint","open fun hasFingerprint(): Boolean","tools.elide.data.Data.DataContainerRef.FingerprintPathPair.Reader.hasFingerprint"]},{"name":"open fun hasFingerprint(): Boolean","description":"tools.elide.data.Data.DataFingerprint.Reader.hasFingerprint","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-fingerprint/-reader/has-fingerprint.html","searchKeys":["hasFingerprint","open fun hasFingerprint(): Boolean","tools.elide.data.Data.DataFingerprint.Reader.hasFingerprint"]},{"name":"open fun hasJavascript(): Boolean","description":"tools.elide.assets.Embedded.EmbeddedScriptMetadata.Metadata.Reader.hasJavascript","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-embedded-script-metadata/-metadata/-reader/has-javascript.html","searchKeys":["hasJavascript","open fun hasJavascript(): Boolean","tools.elide.assets.Embedded.EmbeddedScriptMetadata.Metadata.Reader.hasJavascript"]},{"name":"open fun hasLastModified(): Boolean","description":"tools.elide.assets.Embedded.EmbeddedScript.Reader.hasLastModified","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-embedded-script/-reader/has-last-modified.html","searchKeys":["hasLastModified","open fun hasLastModified(): Boolean","tools.elide.assets.Embedded.EmbeddedScript.Reader.hasLastModified"]},{"name":"open fun hasMetadata(): Boolean","description":"tools.elide.assets.Embedded.EmbeddedScript.Reader.hasMetadata","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-embedded-script/-reader/has-metadata.html","searchKeys":["hasMetadata","open fun hasMetadata(): Boolean","tools.elide.assets.Embedded.EmbeddedScript.Reader.hasMetadata"]},{"name":"open fun hasModule(): Boolean","description":"tools.elide.assets.Embedded.EmbeddedScript.Reader.hasModule","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-embedded-script/-reader/has-module.html","searchKeys":["hasModule","open fun hasModule(): Boolean","tools.elide.assets.Embedded.EmbeddedScript.Reader.hasModule"]},{"name":"open fun hasPath(): Boolean","description":"tools.elide.data.Data.DataContainerRef.FingerprintPathPair.Reader.hasPath","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-container-ref/-fingerprint-path-pair/-reader/has-path.html","searchKeys":["hasPath","open fun hasPath(): Boolean","tools.elide.data.Data.DataContainerRef.FingerprintPathPair.Reader.hasPath"]},{"name":"open fun hasPython(): Boolean","description":"tools.elide.assets.Embedded.EmbeddedScriptMetadata.Metadata.Reader.hasPython","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-embedded-script-metadata/-metadata/-reader/has-python.html","searchKeys":["hasPython","open fun hasPython(): Boolean","tools.elide.assets.Embedded.EmbeddedScriptMetadata.Metadata.Reader.hasPython"]},{"name":"open fun hasResource(): Boolean","description":"tools.elide.data.Data.DataContainerRef.Reference.Reader.hasResource","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-container-ref/-reference/-reader/has-resource.html","searchKeys":["hasResource","open fun hasResource(): Boolean","tools.elide.data.Data.DataContainerRef.Reference.Reader.hasResource"]},{"name":"open fun hasScript(): Boolean","description":"tools.elide.assets.Embedded.EmbeddedScript.Reader.hasScript","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-embedded-script/-reader/has-script.html","searchKeys":["hasScript","open fun hasScript(): Boolean","tools.elide.assets.Embedded.EmbeddedScript.Reader.hasScript"]},{"name":"open fun hasSeparator(): Boolean","description":"tools.elide.data.Data.DataFingerprint.Reader.hasSeparator","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-fingerprint/-reader/has-separator.html","searchKeys":["hasSeparator","open fun hasSeparator(): Boolean","tools.elide.data.Data.DataFingerprint.Reader.hasSeparator"]},{"name":"open fun hasSourcemap(): Boolean","description":"tools.elide.assets.Embedded.EmbeddedScript.Reader.hasSourcemap","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-embedded-script/-reader/has-sourcemap.html","searchKeys":["hasSourcemap","open fun hasSourcemap(): Boolean","tools.elide.assets.Embedded.EmbeddedScript.Reader.hasSourcemap"]},{"name":"open fun valueOf(name: String): Crypto.HashAlgorithm","description":"tools.elide.crypto.Crypto.HashAlgorithm.valueOf","location":"packages/proto/proto-capnp/tools.elide.crypto/-crypto/-hash-algorithm/value-of.html","searchKeys":["valueOf","open fun valueOf(name: String): Crypto.HashAlgorithm","tools.elide.crypto.Crypto.HashAlgorithm.valueOf"]},{"name":"open fun valueOf(name: String): Data.CompressionMode","description":"tools.elide.data.Data.CompressionMode.valueOf","location":"packages/proto/proto-capnp/tools.elide.data/-data/-compression-mode/value-of.html","searchKeys":["valueOf","open fun valueOf(name: String): Data.CompressionMode","tools.elide.data.Data.CompressionMode.valueOf"]},{"name":"open fun valueOf(name: String): Data.DataContainerRef.Reference.Which","description":"tools.elide.data.Data.DataContainerRef.Reference.Which.valueOf","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-container-ref/-reference/-which/value-of.html","searchKeys":["valueOf","open fun valueOf(name: String): Data.DataContainerRef.Reference.Which","tools.elide.data.Data.DataContainerRef.Reference.Which.valueOf"]},{"name":"open fun valueOf(name: String): Embedded.EmbeddedScriptLanguage","description":"tools.elide.assets.Embedded.EmbeddedScriptLanguage.valueOf","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-embedded-script-language/value-of.html","searchKeys":["valueOf","open fun valueOf(name: String): Embedded.EmbeddedScriptLanguage","tools.elide.assets.Embedded.EmbeddedScriptLanguage.valueOf"]},{"name":"open fun valueOf(name: String): Embedded.EmbeddedScriptMetadata.Metadata.Which","description":"tools.elide.assets.Embedded.EmbeddedScriptMetadata.Metadata.Which.valueOf","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-embedded-script-metadata/-metadata/-which/value-of.html","searchKeys":["valueOf","open fun valueOf(name: String): Embedded.EmbeddedScriptMetadata.Metadata.Which","tools.elide.assets.Embedded.EmbeddedScriptMetadata.Metadata.Which.valueOf"]},{"name":"open fun valueOf(name: String): Embedded.JsLanguageLevel","description":"tools.elide.assets.Embedded.JsLanguageLevel.valueOf","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-js-language-level/value-of.html","searchKeys":["valueOf","open fun valueOf(name: String): Embedded.JsLanguageLevel","tools.elide.assets.Embedded.JsLanguageLevel.valueOf"]},{"name":"open fun valueOf(name: String): Encodings.Encoding","description":"tools.elide.data.Encodings.Encoding.valueOf","location":"packages/proto/proto-capnp/tools.elide.data/-encodings/-encoding/value-of.html","searchKeys":["valueOf","open fun valueOf(name: String): Encodings.Encoding","tools.elide.data.Encodings.Encoding.valueOf"]},{"name":"open fun values(): Array<Crypto.HashAlgorithm>","description":"tools.elide.crypto.Crypto.HashAlgorithm.values","location":"packages/proto/proto-capnp/tools.elide.crypto/-crypto/-hash-algorithm/values.html","searchKeys":["values","open fun values(): Array<Crypto.HashAlgorithm>","tools.elide.crypto.Crypto.HashAlgorithm.values"]},{"name":"open fun values(): Array<Data.CompressionMode>","description":"tools.elide.data.Data.CompressionMode.values","location":"packages/proto/proto-capnp/tools.elide.data/-data/-compression-mode/values.html","searchKeys":["values","open fun values(): Array<Data.CompressionMode>","tools.elide.data.Data.CompressionMode.values"]},{"name":"open fun values(): Array<Data.DataContainerRef.Reference.Which>","description":"tools.elide.data.Data.DataContainerRef.Reference.Which.values","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-container-ref/-reference/-which/values.html","searchKeys":["values","open fun values(): Array<Data.DataContainerRef.Reference.Which>","tools.elide.data.Data.DataContainerRef.Reference.Which.values"]},{"name":"open fun values(): Array<Embedded.EmbeddedScriptLanguage>","description":"tools.elide.assets.Embedded.EmbeddedScriptLanguage.values","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-embedded-script-language/values.html","searchKeys":["values","open fun values(): Array<Embedded.EmbeddedScriptLanguage>","tools.elide.assets.Embedded.EmbeddedScriptLanguage.values"]},{"name":"open fun values(): Array<Embedded.EmbeddedScriptMetadata.Metadata.Which>","description":"tools.elide.assets.Embedded.EmbeddedScriptMetadata.Metadata.Which.values","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-embedded-script-metadata/-metadata/-which/values.html","searchKeys":["values","open fun values(): Array<Embedded.EmbeddedScriptMetadata.Metadata.Which>","tools.elide.assets.Embedded.EmbeddedScriptMetadata.Metadata.Which.values"]},{"name":"open fun values(): Array<Embedded.JsLanguageLevel>","description":"tools.elide.assets.Embedded.JsLanguageLevel.values","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-js-language-level/values.html","searchKeys":["values","open fun values(): Array<Embedded.JsLanguageLevel>","tools.elide.assets.Embedded.JsLanguageLevel.values"]},{"name":"open fun values(): Array<Encodings.Encoding>","description":"tools.elide.data.Encodings.Encoding.values","location":"packages/proto/proto-capnp/tools.elide.data/-encodings/-encoding/values.html","searchKeys":["values","open fun values(): Array<Encodings.Encoding>","tools.elide.data.Encodings.Encoding.values"]},{"name":"open fun which(): Data.DataContainerRef.Reference.Which","description":"tools.elide.data.Data.DataContainerRef.Reference.Builder.which","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-container-ref/-reference/-builder/which.html","searchKeys":["which","open fun which(): Data.DataContainerRef.Reference.Which","tools.elide.data.Data.DataContainerRef.Reference.Builder.which"]},{"name":"open fun which(): Data.DataContainerRef.Reference.Which","description":"tools.elide.data.Data.DataContainerRef.Reference.Reader.which","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-container-ref/-reference/-reader/which.html","searchKeys":["which","open fun which(): Data.DataContainerRef.Reference.Which","tools.elide.data.Data.DataContainerRef.Reference.Reader.which"]},{"name":"open fun which(): Embedded.EmbeddedScriptMetadata.Metadata.Which","description":"tools.elide.assets.Embedded.EmbeddedScriptMetadata.Metadata.Builder.which","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-embedded-script-metadata/-metadata/-builder/which.html","searchKeys":["which","open fun which(): Embedded.EmbeddedScriptMetadata.Metadata.Which","tools.elide.assets.Embedded.EmbeddedScriptMetadata.Metadata.Builder.which"]},{"name":"open fun which(): Embedded.EmbeddedScriptMetadata.Metadata.Which","description":"tools.elide.assets.Embedded.EmbeddedScriptMetadata.Metadata.Reader.which","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-embedded-script-metadata/-metadata/-reader/which.html","searchKeys":["which","open fun which(): Embedded.EmbeddedScriptMetadata.Metadata.Which","tools.elide.assets.Embedded.EmbeddedScriptMetadata.Metadata.Reader.which"]},{"name":"val STRUCT_SIZE: StructSize","description":"tools.elide.assets.Embedded.EmbeddedScript.STRUCT_SIZE","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-embedded-script/-s-t-r-u-c-t_-s-i-z-e.html","searchKeys":["STRUCT_SIZE","val STRUCT_SIZE: StructSize","tools.elide.assets.Embedded.EmbeddedScript.STRUCT_SIZE"]},{"name":"val STRUCT_SIZE: StructSize","description":"tools.elide.assets.Embedded.EmbeddedScriptMetadata.Metadata.STRUCT_SIZE","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-embedded-script-metadata/-metadata/-s-t-r-u-c-t_-s-i-z-e.html","searchKeys":["STRUCT_SIZE","val STRUCT_SIZE: StructSize","tools.elide.assets.Embedded.EmbeddedScriptMetadata.Metadata.STRUCT_SIZE"]},{"name":"val STRUCT_SIZE: StructSize","description":"tools.elide.assets.Embedded.EmbeddedScriptMetadata.STRUCT_SIZE","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-embedded-script-metadata/-s-t-r-u-c-t_-s-i-z-e.html","searchKeys":["STRUCT_SIZE","val STRUCT_SIZE: StructSize","tools.elide.assets.Embedded.EmbeddedScriptMetadata.STRUCT_SIZE"]},{"name":"val STRUCT_SIZE: StructSize","description":"tools.elide.assets.Embedded.JsScriptMetadata.STRUCT_SIZE","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-js-script-metadata/-s-t-r-u-c-t_-s-i-z-e.html","searchKeys":["STRUCT_SIZE","val STRUCT_SIZE: StructSize","tools.elide.assets.Embedded.JsScriptMetadata.STRUCT_SIZE"]},{"name":"val STRUCT_SIZE: StructSize","description":"tools.elide.assets.Embedded.PyScriptMetadata.STRUCT_SIZE","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-py-script-metadata/-s-t-r-u-c-t_-s-i-z-e.html","searchKeys":["STRUCT_SIZE","val STRUCT_SIZE: StructSize","tools.elide.assets.Embedded.PyScriptMetadata.STRUCT_SIZE"]},{"name":"val STRUCT_SIZE: StructSize","description":"tools.elide.data.Data.CompressedData.STRUCT_SIZE","location":"packages/proto/proto-capnp/tools.elide.data/-data/-compressed-data/-s-t-r-u-c-t_-s-i-z-e.html","searchKeys":["STRUCT_SIZE","val STRUCT_SIZE: StructSize","tools.elide.data.Data.CompressedData.STRUCT_SIZE"]},{"name":"val STRUCT_SIZE: StructSize","description":"tools.elide.data.Data.DataContainer.STRUCT_SIZE","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-container/-s-t-r-u-c-t_-s-i-z-e.html","searchKeys":["STRUCT_SIZE","val STRUCT_SIZE: StructSize","tools.elide.data.Data.DataContainer.STRUCT_SIZE"]},{"name":"val STRUCT_SIZE: StructSize","description":"tools.elide.data.Data.DataContainerRef.FingerprintPathPair.STRUCT_SIZE","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-container-ref/-fingerprint-path-pair/-s-t-r-u-c-t_-s-i-z-e.html","searchKeys":["STRUCT_SIZE","val STRUCT_SIZE: StructSize","tools.elide.data.Data.DataContainerRef.FingerprintPathPair.STRUCT_SIZE"]},{"name":"val STRUCT_SIZE: StructSize","description":"tools.elide.data.Data.DataContainerRef.Reference.STRUCT_SIZE","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-container-ref/-reference/-s-t-r-u-c-t_-s-i-z-e.html","searchKeys":["STRUCT_SIZE","val STRUCT_SIZE: StructSize","tools.elide.data.Data.DataContainerRef.Reference.STRUCT_SIZE"]},{"name":"val STRUCT_SIZE: StructSize","description":"tools.elide.data.Data.DataContainerRef.STRUCT_SIZE","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-container-ref/-s-t-r-u-c-t_-s-i-z-e.html","searchKeys":["STRUCT_SIZE","val STRUCT_SIZE: StructSize","tools.elide.data.Data.DataContainerRef.STRUCT_SIZE"]},{"name":"val STRUCT_SIZE: StructSize","description":"tools.elide.data.Data.DataFingerprint.STRUCT_SIZE","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-fingerprint/-s-t-r-u-c-t_-s-i-z-e.html","searchKeys":["STRUCT_SIZE","val STRUCT_SIZE: StructSize","tools.elide.data.Data.DataFingerprint.STRUCT_SIZE"]},{"name":"val STRUCT_SIZE: StructSize","description":"tools.elide.std.Temporal.Timestamp.STRUCT_SIZE","location":"packages/proto/proto-capnp/tools.elide.std/-temporal/-timestamp/-s-t-r-u-c-t_-s-i-z-e.html","searchKeys":["STRUCT_SIZE","val STRUCT_SIZE: StructSize","tools.elide.std.Temporal.Timestamp.STRUCT_SIZE"]},{"name":"val b_84a5836f9a7bcf87: SegmentReader","description":"tools.elide.data.Encodings.Schemas.b_84a5836f9a7bcf87","location":"packages/proto/proto-capnp/tools.elide.data/-encodings/-schemas/b_84a5836f9a7bcf87.html","searchKeys":["b_84a5836f9a7bcf87","val b_84a5836f9a7bcf87: SegmentReader","tools.elide.data.Encodings.Schemas.b_84a5836f9a7bcf87"]},{"name":"val b_9d66b4bfd514f842: SegmentReader","description":"tools.elide.data.Data.Schemas.b_9d66b4bfd514f842","location":"packages/proto/proto-capnp/tools.elide.data/-data/-schemas/b_9d66b4bfd514f842.html","searchKeys":["b_9d66b4bfd514f842","val b_9d66b4bfd514f842: SegmentReader","tools.elide.data.Data.Schemas.b_9d66b4bfd514f842"]},{"name":"val b_a243adc34f1c37cb: SegmentReader","description":"tools.elide.data.Data.Schemas.b_a243adc34f1c37cb","location":"packages/proto/proto-capnp/tools.elide.data/-data/-schemas/b_a243adc34f1c37cb.html","searchKeys":["b_a243adc34f1c37cb","val b_a243adc34f1c37cb: SegmentReader","tools.elide.data.Data.Schemas.b_a243adc34f1c37cb"]},{"name":"val b_ad14563c6ae73c76: SegmentReader","description":"tools.elide.assets.Embedded.Schemas.b_ad14563c6ae73c76","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-schemas/b_ad14563c6ae73c76.html","searchKeys":["b_ad14563c6ae73c76","val b_ad14563c6ae73c76: SegmentReader","tools.elide.assets.Embedded.Schemas.b_ad14563c6ae73c76"]},{"name":"val b_b0beda8255788ee7: SegmentReader","description":"tools.elide.assets.Embedded.Schemas.b_b0beda8255788ee7","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-schemas/b_b0beda8255788ee7.html","searchKeys":["b_b0beda8255788ee7","val b_b0beda8255788ee7: SegmentReader","tools.elide.assets.Embedded.Schemas.b_b0beda8255788ee7"]},{"name":"val b_b1862cdf396f9c3a: SegmentReader","description":"tools.elide.data.Data.Schemas.b_b1862cdf396f9c3a","location":"packages/proto/proto-capnp/tools.elide.data/-data/-schemas/b_b1862cdf396f9c3a.html","searchKeys":["b_b1862cdf396f9c3a","val b_b1862cdf396f9c3a: SegmentReader","tools.elide.data.Data.Schemas.b_b1862cdf396f9c3a"]},{"name":"val b_b94e6245869e1c07: SegmentReader","description":"tools.elide.data.Data.Schemas.b_b94e6245869e1c07","location":"packages/proto/proto-capnp/tools.elide.data/-data/-schemas/b_b94e6245869e1c07.html","searchKeys":["b_b94e6245869e1c07","val b_b94e6245869e1c07: SegmentReader","tools.elide.data.Data.Schemas.b_b94e6245869e1c07"]},{"name":"val b_c44010948997e2a9: SegmentReader","description":"tools.elide.crypto.Crypto.Schemas.b_c44010948997e2a9","location":"packages/proto/proto-capnp/tools.elide.crypto/-crypto/-schemas/b_c44010948997e2a9.html","searchKeys":["b_c44010948997e2a9","val b_c44010948997e2a9: SegmentReader","tools.elide.crypto.Crypto.Schemas.b_c44010948997e2a9"]},{"name":"val b_c6b31851c82171b9: SegmentReader","description":"tools.elide.assets.Embedded.Schemas.b_c6b31851c82171b9","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-schemas/b_c6b31851c82171b9.html","searchKeys":["b_c6b31851c82171b9","val b_c6b31851c82171b9: SegmentReader","tools.elide.assets.Embedded.Schemas.b_c6b31851c82171b9"]},{"name":"val b_d6a320098300a406: SegmentReader","description":"tools.elide.assets.Embedded.Schemas.b_d6a320098300a406","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-schemas/b_d6a320098300a406.html","searchKeys":["b_d6a320098300a406","val b_d6a320098300a406: SegmentReader","tools.elide.assets.Embedded.Schemas.b_d6a320098300a406"]},{"name":"val b_d94f5c93604fd9fd: SegmentReader","description":"tools.elide.std.Temporal.Schemas.b_d94f5c93604fd9fd","location":"packages/proto/proto-capnp/tools.elide.std/-temporal/-schemas/b_d94f5c93604fd9fd.html","searchKeys":["b_d94f5c93604fd9fd","val b_d94f5c93604fd9fd: SegmentReader","tools.elide.std.Temporal.Schemas.b_d94f5c93604fd9fd"]},{"name":"val b_e398ce44dcb9a6d3: SegmentReader","description":"tools.elide.assets.Embedded.Schemas.b_e398ce44dcb9a6d3","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-schemas/b_e398ce44dcb9a6d3.html","searchKeys":["b_e398ce44dcb9a6d3","val b_e398ce44dcb9a6d3: SegmentReader","tools.elide.assets.Embedded.Schemas.b_e398ce44dcb9a6d3"]},{"name":"val b_e5cab5f700ec7647: SegmentReader","description":"tools.elide.data.Data.Schemas.b_e5cab5f700ec7647","location":"packages/proto/proto-capnp/tools.elide.data/-data/-schemas/b_e5cab5f700ec7647.html","searchKeys":["b_e5cab5f700ec7647","val b_e5cab5f700ec7647: SegmentReader","tools.elide.data.Data.Schemas.b_e5cab5f700ec7647"]},{"name":"val b_ea3181bc9315330c: SegmentReader","description":"tools.elide.data.Data.Schemas.b_ea3181bc9315330c","location":"packages/proto/proto-capnp/tools.elide.data/-data/-schemas/b_ea3181bc9315330c.html","searchKeys":["b_ea3181bc9315330c","val b_ea3181bc9315330c: SegmentReader","tools.elide.data.Data.Schemas.b_ea3181bc9315330c"]},{"name":"val b_f2ac679e83230f42: SegmentReader","description":"tools.elide.data.Data.Schemas.b_f2ac679e83230f42","location":"packages/proto/proto-capnp/tools.elide.data/-data/-schemas/b_f2ac679e83230f42.html","searchKeys":["b_f2ac679e83230f42","val b_f2ac679e83230f42: SegmentReader","tools.elide.data.Data.Schemas.b_f2ac679e83230f42"]},{"name":"val b_f60c5800da34b539: SegmentReader","description":"tools.elide.assets.Embedded.Schemas.b_f60c5800da34b539","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-schemas/b_f60c5800da34b539.html","searchKeys":["b_f60c5800da34b539","val b_f60c5800da34b539: SegmentReader","tools.elide.assets.Embedded.Schemas.b_f60c5800da34b539"]},{"name":"val b_ff55d0bd7804e3d0: SegmentReader","description":"tools.elide.assets.Embedded.Schemas.b_ff55d0bd7804e3d0","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-schemas/b_ff55d0bd7804e3d0.html","searchKeys":["b_ff55d0bd7804e3d0","val b_ff55d0bd7804e3d0: SegmentReader","tools.elide.assets.Embedded.Schemas.b_ff55d0bd7804e3d0"]},{"name":"val factory: Data.CompressedData.Factory","description":"tools.elide.data.Data.CompressedData.factory","location":"packages/proto/proto-capnp/tools.elide.data/-data/-compressed-data/factory.html","searchKeys":["factory","val factory: Data.CompressedData.Factory","tools.elide.data.Data.CompressedData.factory"]},{"name":"val factory: Data.DataContainer.Factory","description":"tools.elide.data.Data.DataContainer.factory","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-container/factory.html","searchKeys":["factory","val factory: Data.DataContainer.Factory","tools.elide.data.Data.DataContainer.factory"]},{"name":"val factory: Data.DataContainerRef.Factory","description":"tools.elide.data.Data.DataContainerRef.factory","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-container-ref/factory.html","searchKeys":["factory","val factory: Data.DataContainerRef.Factory","tools.elide.data.Data.DataContainerRef.factory"]},{"name":"val factory: Data.DataContainerRef.FingerprintPathPair.Factory","description":"tools.elide.data.Data.DataContainerRef.FingerprintPathPair.factory","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-container-ref/-fingerprint-path-pair/factory.html","searchKeys":["factory","val factory: Data.DataContainerRef.FingerprintPathPair.Factory","tools.elide.data.Data.DataContainerRef.FingerprintPathPair.factory"]},{"name":"val factory: Data.DataContainerRef.Reference.Factory","description":"tools.elide.data.Data.DataContainerRef.Reference.factory","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-container-ref/-reference/factory.html","searchKeys":["factory","val factory: Data.DataContainerRef.Reference.Factory","tools.elide.data.Data.DataContainerRef.Reference.factory"]},{"name":"val factory: Data.DataFingerprint.Factory","description":"tools.elide.data.Data.DataFingerprint.factory","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-fingerprint/factory.html","searchKeys":["factory","val factory: Data.DataFingerprint.Factory","tools.elide.data.Data.DataFingerprint.factory"]},{"name":"val factory: Embedded.EmbeddedScript.Factory","description":"tools.elide.assets.Embedded.EmbeddedScript.factory","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-embedded-script/factory.html","searchKeys":["factory","val factory: Embedded.EmbeddedScript.Factory","tools.elide.assets.Embedded.EmbeddedScript.factory"]},{"name":"val factory: Embedded.EmbeddedScriptMetadata.Factory","description":"tools.elide.assets.Embedded.EmbeddedScriptMetadata.factory","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-embedded-script-metadata/factory.html","searchKeys":["factory","val factory: Embedded.EmbeddedScriptMetadata.Factory","tools.elide.assets.Embedded.EmbeddedScriptMetadata.factory"]},{"name":"val factory: Embedded.EmbeddedScriptMetadata.Metadata.Factory","description":"tools.elide.assets.Embedded.EmbeddedScriptMetadata.Metadata.factory","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-embedded-script-metadata/-metadata/factory.html","searchKeys":["factory","val factory: Embedded.EmbeddedScriptMetadata.Metadata.Factory","tools.elide.assets.Embedded.EmbeddedScriptMetadata.Metadata.factory"]},{"name":"val factory: Embedded.JsScriptMetadata.Factory","description":"tools.elide.assets.Embedded.JsScriptMetadata.factory","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-js-script-metadata/factory.html","searchKeys":["factory","val factory: Embedded.JsScriptMetadata.Factory","tools.elide.assets.Embedded.JsScriptMetadata.factory"]},{"name":"val factory: Embedded.PyScriptMetadata.Factory","description":"tools.elide.assets.Embedded.PyScriptMetadata.factory","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-py-script-metadata/factory.html","searchKeys":["factory","val factory: Embedded.PyScriptMetadata.Factory","tools.elide.assets.Embedded.PyScriptMetadata.factory"]},{"name":"val factory: Temporal.Timestamp.Factory","description":"tools.elide.std.Temporal.Timestamp.factory","location":"packages/proto/proto-capnp/tools.elide.std/-temporal/-timestamp/factory.html","searchKeys":["factory","val factory: Temporal.Timestamp.Factory","tools.elide.std.Temporal.Timestamp.factory"]},{"name":"val listFactory: StructList.Factory<Data.CompressedData.Builder, Data.CompressedData.Reader>","description":"tools.elide.data.Data.CompressedData.listFactory","location":"packages/proto/proto-capnp/tools.elide.data/-data/-compressed-data/list-factory.html","searchKeys":["listFactory","val listFactory: StructList.Factory<Data.CompressedData.Builder, Data.CompressedData.Reader>","tools.elide.data.Data.CompressedData.listFactory"]},{"name":"val listFactory: StructList.Factory<Data.DataContainer.Builder, Data.DataContainer.Reader>","description":"tools.elide.data.Data.DataContainer.listFactory","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-container/list-factory.html","searchKeys":["listFactory","val listFactory: StructList.Factory<Data.DataContainer.Builder, Data.DataContainer.Reader>","tools.elide.data.Data.DataContainer.listFactory"]},{"name":"val listFactory: StructList.Factory<Data.DataContainerRef.Builder, Data.DataContainerRef.Reader>","description":"tools.elide.data.Data.DataContainerRef.listFactory","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-container-ref/list-factory.html","searchKeys":["listFactory","val listFactory: StructList.Factory<Data.DataContainerRef.Builder, Data.DataContainerRef.Reader>","tools.elide.data.Data.DataContainerRef.listFactory"]},{"name":"val listFactory: StructList.Factory<Data.DataContainerRef.FingerprintPathPair.Builder, Data.DataContainerRef.FingerprintPathPair.Reader>","description":"tools.elide.data.Data.DataContainerRef.FingerprintPathPair.listFactory","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-container-ref/-fingerprint-path-pair/list-factory.html","searchKeys":["listFactory","val listFactory: StructList.Factory<Data.DataContainerRef.FingerprintPathPair.Builder, Data.DataContainerRef.FingerprintPathPair.Reader>","tools.elide.data.Data.DataContainerRef.FingerprintPathPair.listFactory"]},{"name":"val listFactory: StructList.Factory<Data.DataContainerRef.Reference.Builder, Data.DataContainerRef.Reference.Reader>","description":"tools.elide.data.Data.DataContainerRef.Reference.listFactory","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-container-ref/-reference/list-factory.html","searchKeys":["listFactory","val listFactory: StructList.Factory<Data.DataContainerRef.Reference.Builder, Data.DataContainerRef.Reference.Reader>","tools.elide.data.Data.DataContainerRef.Reference.listFactory"]},{"name":"val listFactory: StructList.Factory<Data.DataFingerprint.Builder, Data.DataFingerprint.Reader>","description":"tools.elide.data.Data.DataFingerprint.listFactory","location":"packages/proto/proto-capnp/tools.elide.data/-data/-data-fingerprint/list-factory.html","searchKeys":["listFactory","val listFactory: StructList.Factory<Data.DataFingerprint.Builder, Data.DataFingerprint.Reader>","tools.elide.data.Data.DataFingerprint.listFactory"]},{"name":"val listFactory: StructList.Factory<Embedded.EmbeddedScript.Builder, Embedded.EmbeddedScript.Reader>","description":"tools.elide.assets.Embedded.EmbeddedScript.listFactory","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-embedded-script/list-factory.html","searchKeys":["listFactory","val listFactory: StructList.Factory<Embedded.EmbeddedScript.Builder, Embedded.EmbeddedScript.Reader>","tools.elide.assets.Embedded.EmbeddedScript.listFactory"]},{"name":"val listFactory: StructList.Factory<Embedded.EmbeddedScriptMetadata.Builder, Embedded.EmbeddedScriptMetadata.Reader>","description":"tools.elide.assets.Embedded.EmbeddedScriptMetadata.listFactory","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-embedded-script-metadata/list-factory.html","searchKeys":["listFactory","val listFactory: StructList.Factory<Embedded.EmbeddedScriptMetadata.Builder, Embedded.EmbeddedScriptMetadata.Reader>","tools.elide.assets.Embedded.EmbeddedScriptMetadata.listFactory"]},{"name":"val listFactory: StructList.Factory<Embedded.EmbeddedScriptMetadata.Metadata.Builder, Embedded.EmbeddedScriptMetadata.Metadata.Reader>","description":"tools.elide.assets.Embedded.EmbeddedScriptMetadata.Metadata.listFactory","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-embedded-script-metadata/-metadata/list-factory.html","searchKeys":["listFactory","val listFactory: StructList.Factory<Embedded.EmbeddedScriptMetadata.Metadata.Builder, Embedded.EmbeddedScriptMetadata.Metadata.Reader>","tools.elide.assets.Embedded.EmbeddedScriptMetadata.Metadata.listFactory"]},{"name":"val listFactory: StructList.Factory<Embedded.JsScriptMetadata.Builder, Embedded.JsScriptMetadata.Reader>","description":"tools.elide.assets.Embedded.JsScriptMetadata.listFactory","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-js-script-metadata/list-factory.html","searchKeys":["listFactory","val listFactory: StructList.Factory<Embedded.JsScriptMetadata.Builder, Embedded.JsScriptMetadata.Reader>","tools.elide.assets.Embedded.JsScriptMetadata.listFactory"]},{"name":"val listFactory: StructList.Factory<Embedded.PyScriptMetadata.Builder, Embedded.PyScriptMetadata.Reader>","description":"tools.elide.assets.Embedded.PyScriptMetadata.listFactory","location":"packages/proto/proto-capnp/tools.elide.assets/-embedded/-py-script-metadata/list-factory.html","searchKeys":["listFactory","val listFactory: StructList.Factory<Embedded.PyScriptMetadata.Builder, Embedded.PyScriptMetadata.Reader>","tools.elide.assets.Embedded.PyScriptMetadata.listFactory"]},{"name":"val listFactory: StructList.Factory<Temporal.Timestamp.Builder, Temporal.Timestamp.Reader>","description":"tools.elide.std.Temporal.Timestamp.listFactory","location":"packages/proto/proto-capnp/tools.elide.std/-temporal/-timestamp/list-factory.html","searchKeys":["listFactory","val listFactory: StructList.Factory<Temporal.Timestamp.Builder, Temporal.Timestamp.Reader>","tools.elide.std.Temporal.Timestamp.listFactory"]},{"name":"BOOL","description":"lib.protobuf.FieldType.BOOL","location":"packages/frontend/lib.protobuf/-field-type/-b-o-o-l/index.html","searchKeys":["BOOL","BOOL","lib.protobuf.FieldType.BOOL"]},{"name":"BYTES","description":"lib.protobuf.FieldType.BYTES","location":"packages/frontend/lib.protobuf/-field-type/-b-y-t-e-s/index.html","searchKeys":["BYTES","BYTES","lib.protobuf.FieldType.BYTES"]},{"name":"DELIMITED","description":"lib.protobuf.WireType.DELIMITED","location":"packages/frontend/lib.protobuf/-wire-type/-d-e-l-i-m-i-t-e-d/index.html","searchKeys":["DELIMITED","DELIMITED","lib.protobuf.WireType.DELIMITED"]},{"name":"DOUBLE","description":"lib.protobuf.FieldType.DOUBLE","location":"packages/frontend/lib.protobuf/-field-type/-d-o-u-b-l-e/index.html","searchKeys":["DOUBLE","DOUBLE","lib.protobuf.FieldType.DOUBLE"]},{"name":"END_GROUP","description":"lib.protobuf.WireType.END_GROUP","location":"packages/frontend/lib.protobuf/-wire-type/-e-n-d_-g-r-o-u-p/index.html","searchKeys":["END_GROUP","END_GROUP","lib.protobuf.WireType.END_GROUP"]},{"name":"ENUM","description":"lib.protobuf.FieldType.ENUM","location":"packages/frontend/lib.protobuf/-field-type/-e-n-u-m/index.html","searchKeys":["ENUM","ENUM","lib.protobuf.FieldType.ENUM"]},{"name":"FHASH64","description":"lib.protobuf.FieldType.FHASH64","location":"packages/frontend/lib.protobuf/-field-type/-f-h-a-s-h64/index.html","searchKeys":["FHASH64","FHASH64","lib.protobuf.FieldType.FHASH64"]},{"name":"FIXED32","description":"lib.protobuf.FieldType.FIXED32","location":"packages/frontend/lib.protobuf/-field-type/-f-i-x-e-d32/index.html","searchKeys":["FIXED32","FIXED32","lib.protobuf.FieldType.FIXED32"]},{"name":"FIXED32","description":"lib.protobuf.WireType.FIXED32","location":"packages/frontend/lib.protobuf/-wire-type/-f-i-x-e-d32/index.html","searchKeys":["FIXED32","FIXED32","lib.protobuf.WireType.FIXED32"]},{"name":"FIXED64","description":"lib.protobuf.FieldType.FIXED64","location":"packages/frontend/lib.protobuf/-field-type/-f-i-x-e-d64/index.html","searchKeys":["FIXED64","FIXED64","lib.protobuf.FieldType.FIXED64"]},{"name":"FIXED64","description":"lib.protobuf.WireType.FIXED64","location":"packages/frontend/lib.protobuf/-wire-type/-f-i-x-e-d64/index.html","searchKeys":["FIXED64","FIXED64","lib.protobuf.WireType.FIXED64"]},{"name":"FLOAT","description":"lib.protobuf.FieldType.FLOAT","location":"packages/frontend/lib.protobuf/-field-type/-f-l-o-a-t/index.html","searchKeys":["FLOAT","FLOAT","lib.protobuf.FieldType.FLOAT"]},{"name":"GROUP","description":"lib.protobuf.FieldType.GROUP","location":"packages/frontend/lib.protobuf/-field-type/-g-r-o-u-p/index.html","searchKeys":["GROUP","GROUP","lib.protobuf.FieldType.GROUP"]},{"name":"INT32","description":"lib.protobuf.FieldType.INT32","location":"packages/frontend/lib.protobuf/-field-type/-i-n-t32/index.html","searchKeys":["INT32","INT32","lib.protobuf.FieldType.INT32"]},{"name":"INT64","description":"lib.protobuf.FieldType.INT64","location":"packages/frontend/lib.protobuf/-field-type/-i-n-t64/index.html","searchKeys":["INT64","INT64","lib.protobuf.FieldType.INT64"]},{"name":"INVALID","description":"lib.protobuf.FieldType.INVALID","location":"packages/frontend/lib.protobuf/-field-type/-i-n-v-a-l-i-d/index.html","searchKeys":["INVALID","INVALID","lib.protobuf.FieldType.INVALID"]},{"name":"INVALID","description":"lib.protobuf.WireType.INVALID","location":"packages/frontend/lib.protobuf/-wire-type/-i-n-v-a-l-i-d/index.html","searchKeys":["INVALID","INVALID","lib.protobuf.WireType.INVALID"]},{"name":"MESSAGE","description":"lib.protobuf.FieldType.MESSAGE","location":"packages/frontend/lib.protobuf/-field-type/-m-e-s-s-a-g-e/index.html","searchKeys":["MESSAGE","MESSAGE","lib.protobuf.FieldType.MESSAGE"]},{"name":"SFIXED32","description":"lib.protobuf.FieldType.SFIXED32","location":"packages/frontend/lib.protobuf/-field-type/-s-f-i-x-e-d32/index.html","searchKeys":["SFIXED32","SFIXED32","lib.protobuf.FieldType.SFIXED32"]},{"name":"SFIXED64","description":"lib.protobuf.FieldType.SFIXED64","location":"packages/frontend/lib.protobuf/-field-type/-s-f-i-x-e-d64/index.html","searchKeys":["SFIXED64","SFIXED64","lib.protobuf.FieldType.SFIXED64"]},{"name":"SINT32","description":"lib.protobuf.FieldType.SINT32","location":"packages/frontend/lib.protobuf/-field-type/-s-i-n-t32/index.html","searchKeys":["SINT32","SINT32","lib.protobuf.FieldType.SINT32"]},{"name":"SINT64","description":"lib.protobuf.FieldType.SINT64","location":"packages/frontend/lib.protobuf/-field-type/-s-i-n-t64/index.html","searchKeys":["SINT64","SINT64","lib.protobuf.FieldType.SINT64"]},{"name":"START_GROUP","description":"lib.protobuf.WireType.START_GROUP","location":"packages/frontend/lib.protobuf/-wire-type/-s-t-a-r-t_-g-r-o-u-p/index.html","searchKeys":["START_GROUP","START_GROUP","lib.protobuf.WireType.START_GROUP"]},{"name":"STRING","description":"lib.protobuf.FieldType.STRING","location":"packages/frontend/lib.protobuf/-field-type/-s-t-r-i-n-g/index.html","searchKeys":["STRING","STRING","lib.protobuf.FieldType.STRING"]},{"name":"UINT32","description":"lib.protobuf.FieldType.UINT32","location":"packages/frontend/lib.protobuf/-field-type/-u-i-n-t32/index.html","searchKeys":["UINT32","UINT32","lib.protobuf.FieldType.UINT32"]},{"name":"UINT64","description":"lib.protobuf.FieldType.UINT64","location":"packages/frontend/lib.protobuf/-field-type/-u-i-n-t64/index.html","searchKeys":["UINT64","UINT64","lib.protobuf.FieldType.UINT64"]},{"name":"VARINT","description":"lib.protobuf.WireType.VARINT","location":"packages/frontend/lib.protobuf/-wire-type/-v-a-r-i-n-t/index.html","searchKeys":["VARINT","VARINT","lib.protobuf.WireType.VARINT"]},{"name":"VHASH64","description":"lib.protobuf.FieldType.VHASH64","location":"packages/frontend/lib.protobuf/-field-type/-v-h-a-s-h64/index.html","searchKeys":["VHASH64","VHASH64","lib.protobuf.FieldType.VHASH64"]},{"name":"abstract fun <T> all(values: Array<Any?>): Promise<Array<T>>","description":"lib.tsstdlib.PromiseConstructor.all","location":"packages/frontend/lib.tsstdlib/-promise-constructor/all.html","searchKeys":["all","abstract fun <T> all(values: Array<Any?>): Promise<Array<T>>","lib.tsstdlib.PromiseConstructor.all"]},{"name":"abstract fun <T> all(values: Iterable<Any?>): Promise<Array<T>>","description":"lib.tsstdlib.PromiseConstructor.all","location":"packages/frontend/lib.tsstdlib/-promise-constructor/all.html","searchKeys":["all","abstract fun <T> all(values: Iterable<Any?>): Promise<Array<T>>","lib.tsstdlib.PromiseConstructor.all"]},{"name":"abstract fun <T> race(values: Array<T>): Promise<Any>","description":"lib.tsstdlib.PromiseConstructor.race","location":"packages/frontend/lib.tsstdlib/-promise-constructor/race.html","searchKeys":["race","abstract fun <T> race(values: Array<T>): Promise<Any>","lib.tsstdlib.PromiseConstructor.race"]},{"name":"abstract fun <T> race(values: Iterable<Any?>): Promise<T>","description":"lib.tsstdlib.PromiseConstructor.race","location":"packages/frontend/lib.tsstdlib/-promise-constructor/race.html","searchKeys":["race","abstract fun <T> race(values: Iterable<Any?>): Promise<T>","lib.tsstdlib.PromiseConstructor.race"]},{"name":"abstract fun <T> race(values: Iterable<T>): Promise<Any>","description":"lib.tsstdlib.PromiseConstructor.race","location":"packages/frontend/lib.tsstdlib/-promise-constructor/race.html","searchKeys":["race","abstract fun <T> race(values: Iterable<T>): Promise<Any>","lib.tsstdlib.PromiseConstructor.race"]},{"name":"abstract fun <T> reject(reason: Any = definedExternally): Promise<T>","description":"lib.tsstdlib.PromiseConstructor.reject","location":"packages/frontend/lib.tsstdlib/-promise-constructor/reject.html","searchKeys":["reject","abstract fun <T> reject(reason: Any = definedExternally): Promise<T>","lib.tsstdlib.PromiseConstructor.reject"]},{"name":"abstract fun <T> resolve(value: PromiseLike<T>): Promise<T>","description":"lib.tsstdlib.PromiseConstructor.resolve","location":"packages/frontend/lib.tsstdlib/-promise-constructor/resolve.html","searchKeys":["resolve","abstract fun <T> resolve(value: PromiseLike<T>): Promise<T>","lib.tsstdlib.PromiseConstructor.resolve"]},{"name":"abstract fun <T> resolve(value: T): Promise<T>","description":"lib.tsstdlib.PromiseConstructor.resolve","location":"packages/frontend/lib.tsstdlib/-promise-constructor/resolve.html","searchKeys":["resolve","abstract fun <T> resolve(value: T): Promise<T>","lib.tsstdlib.PromiseConstructor.resolve"]},{"name":"abstract fun UTC(year: Number, month: Number, date: Number = definedExternally, hours: Number = definedExternally, minutes: Number = definedExternally, seconds: Number = definedExternally, ms: Number = definedExternally): Number","description":"lib.tsstdlib.DateConstructor.UTC","location":"packages/frontend/lib.tsstdlib/-date-constructor/-u-t-c.html","searchKeys":["UTC","abstract fun UTC(year: Number, month: Number, date: Number = definedExternally, hours: Number = definedExternally, minutes: Number = definedExternally, seconds: Number = definedExternally, ms: Number = definedExternally): Number","lib.tsstdlib.DateConstructor.UTC"]},{"name":"abstract fun all(values: Any): Promise<dynamic>","description":"lib.tsstdlib.PromiseConstructor.all","location":"packages/frontend/lib.tsstdlib/-promise-constructor/all.html","searchKeys":["all","abstract fun all(values: Any): Promise<dynamic>","lib.tsstdlib.PromiseConstructor.all"]},{"name":"abstract fun compare(x: String, y: String): Number","description":"lib.tsstdlib.intl.Collator.compare","location":"packages/frontend/lib.tsstdlib.intl/-collator/compare.html","searchKeys":["compare","abstract fun compare(x: String, y: String): Number","lib.tsstdlib.intl.Collator.compare"]},{"name":"abstract fun format(): String","description":"lib.tsstdlib.intl.DateTimeFormat.format","location":"packages/frontend/lib.tsstdlib.intl/-date-time-format/format.html","searchKeys":["format","abstract fun format(): String","lib.tsstdlib.intl.DateTimeFormat.format"]},{"name":"abstract fun format(date: Date = definedExternally): String","description":"lib.tsstdlib.intl.DateTimeFormat.format","location":"packages/frontend/lib.tsstdlib.intl/-date-time-format/format.html","searchKeys":["format","abstract fun format(date: Date = definedExternally): String","lib.tsstdlib.intl.DateTimeFormat.format"]},{"name":"abstract fun format(date: Number = definedExternally): String","description":"lib.tsstdlib.intl.DateTimeFormat.format","location":"packages/frontend/lib.tsstdlib.intl/-date-time-format/format.html","searchKeys":["format","abstract fun format(date: Number = definedExternally): String","lib.tsstdlib.intl.DateTimeFormat.format"]},{"name":"abstract fun format(value: Number): String","description":"lib.tsstdlib.intl.NumberFormat.format","location":"packages/frontend/lib.tsstdlib.intl/-number-format/format.html","searchKeys":["format","abstract fun format(value: Number): String","lib.tsstdlib.intl.NumberFormat.format"]},{"name":"abstract fun next(): Map.IteratorResult<T>","description":"lib.protobuf.Map.Iterator.next","location":"packages/frontend/lib.protobuf/-map/-iterator/next.html","searchKeys":["next","abstract fun next(): Map.IteratorResult<T>","lib.protobuf.Map.Iterator.next"]},{"name":"abstract fun next(vararg args: Any): dynamic","description":"lib.tsstdlib.Iterator.next","location":"packages/frontend/lib.tsstdlib/-iterator/next.html","searchKeys":["next","abstract fun next(vararg args: Any): dynamic","lib.tsstdlib.Iterator.next"]},{"name":"abstract fun now(): Number","description":"lib.tsstdlib.DateConstructor.now","location":"packages/frontend/lib.tsstdlib/-date-constructor/now.html","searchKeys":["now","abstract fun now(): Number","lib.tsstdlib.DateConstructor.now"]},{"name":"abstract fun parse(s: String): Number","description":"lib.tsstdlib.DateConstructor.parse","location":"packages/frontend/lib.tsstdlib/-date-constructor/parse.html","searchKeys":["parse","abstract fun parse(s: String): Number","lib.tsstdlib.DateConstructor.parse"]},{"name":"abstract fun resolve(): Promise<Unit>","description":"lib.tsstdlib.PromiseConstructor.resolve","location":"packages/frontend/lib.tsstdlib/-promise-constructor/resolve.html","searchKeys":["resolve","abstract fun resolve(): Promise<Unit>","lib.tsstdlib.PromiseConstructor.resolve"]},{"name":"abstract fun resolvedOptions(): ResolvedCollatorOptions","description":"lib.tsstdlib.intl.Collator.resolvedOptions","location":"packages/frontend/lib.tsstdlib.intl/-collator/resolved-options.html","searchKeys":["resolvedOptions","abstract fun resolvedOptions(): ResolvedCollatorOptions","lib.tsstdlib.intl.Collator.resolvedOptions"]},{"name":"abstract fun resolvedOptions(): ResolvedDateTimeFormatOptions","description":"lib.tsstdlib.intl.DateTimeFormat.resolvedOptions","location":"packages/frontend/lib.tsstdlib.intl/-date-time-format/resolved-options.html","searchKeys":["resolvedOptions","abstract fun resolvedOptions(): ResolvedDateTimeFormatOptions","lib.tsstdlib.intl.DateTimeFormat.resolvedOptions"]},{"name":"abstract fun resolvedOptions(): ResolvedNumberFormatOptions","description":"lib.tsstdlib.intl.NumberFormat.resolvedOptions","location":"packages/frontend/lib.tsstdlib.intl/-number-format/resolved-options.html","searchKeys":["resolvedOptions","abstract fun resolvedOptions(): ResolvedNumberFormatOptions","lib.tsstdlib.intl.NumberFormat.resolvedOptions"]},{"name":"abstract fun then(onfulfilled: (value: T) -> Any?? = definedExternally, onrejected: (reason: Any) -> Any?? = definedExternally): PromiseLike<dynamic>","description":"lib.tsstdlib.PromiseLike.then","location":"packages/frontend/lib.tsstdlib/-promise-like/then.html","searchKeys":["then","abstract fun then(onfulfilled: (value: T) -> Any?? = definedExternally, onrejected: (reason: Any) -> Any?? = definedExternally): PromiseLike<dynamic>","lib.tsstdlib.PromiseLike.then"]},{"name":"abstract operator fun get(key: Number): ExtensionFieldBinaryInfo<Message>?","description":"lib.protobuf.T$1.get","location":"packages/frontend/lib.protobuf/-t$1/get.html","searchKeys":["get","abstract operator fun get(key: Number): ExtensionFieldBinaryInfo<Message>?","lib.protobuf.T$1.get"]},{"name":"abstract operator fun get(key: Number): ExtensionFieldInfo<Message>?","description":"lib.protobuf.T$0.get","location":"packages/frontend/lib.protobuf/-t$0/get.html","searchKeys":["get","abstract operator fun get(key: Number): ExtensionFieldInfo<Message>?","lib.protobuf.T$0.get"]},{"name":"abstract operator fun get(key: String): Number?","description":"lib.protobuf.T$2.get","location":"packages/frontend/lib.protobuf/-t$2/get.html","searchKeys":["get","abstract operator fun get(key: String): Number?","lib.protobuf.T$2.get"]},{"name":"abstract operator fun invoke(message: String = definedExternally): Error","description":"lib.tsstdlib.ErrorConstructor.invoke","location":"packages/frontend/lib.tsstdlib/-error-constructor/invoke.html","searchKeys":["invoke","abstract operator fun invoke(message: String = definedExternally): Error","lib.tsstdlib.ErrorConstructor.invoke"]},{"name":"abstract operator fun set(key: Number, value: ExtensionFieldBinaryInfo<Message>)","description":"lib.protobuf.T$1.set","location":"packages/frontend/lib.protobuf/-t$1/set.html","searchKeys":["set","abstract operator fun set(key: Number, value: ExtensionFieldBinaryInfo<Message>)","lib.protobuf.T$1.set"]},{"name":"abstract operator fun set(key: Number, value: ExtensionFieldInfo<Message>)","description":"lib.protobuf.T$0.set","location":"packages/frontend/lib.protobuf/-t$0/set.html","searchKeys":["set","abstract operator fun set(key: Number, value: ExtensionFieldInfo<Message>)","lib.protobuf.T$0.set"]},{"name":"abstract operator fun set(key: String, value: Number)","description":"lib.protobuf.T$2.set","location":"packages/frontend/lib.protobuf/-t$2/set.html","searchKeys":["set","abstract operator fun set(key: String, value: Number)","lib.protobuf.T$2.set"]},{"name":"abstract val return: (value: TReturn) -> dynamic?","description":"lib.tsstdlib.Iterator.return","location":"packages/frontend/lib.tsstdlib/-iterator/return.html","searchKeys":["return","abstract val return: (value: TReturn) -> dynamic?","lib.tsstdlib.Iterator.return"]},{"name":"abstract val throw: (e: Any) -> dynamic?","description":"lib.tsstdlib.Iterator.throw","location":"packages/frontend/lib.tsstdlib/-iterator/throw.html","searchKeys":["throw","abstract val throw: (e: Any) -> dynamic?","lib.tsstdlib.Iterator.throw"]},{"name":"abstract var DNS: String","description":"lib.uuid.v3Static.DNS","location":"packages/frontend/lib.uuid/v3-static/-d-n-s.html","searchKeys":["DNS","abstract var DNS: String","lib.uuid.v3Static.DNS"]},{"name":"abstract var DNS: String","description":"lib.uuid.v5Static.DNS","location":"packages/frontend/lib.uuid/v5-static/-d-n-s.html","searchKeys":["DNS","abstract var DNS: String","lib.uuid.v5Static.DNS"]},{"name":"abstract var URL: String","description":"lib.uuid.v3Static.URL","location":"packages/frontend/lib.uuid/v3-static/-u-r-l.html","searchKeys":["URL","abstract var URL: String","lib.uuid.v3Static.URL"]},{"name":"abstract var URL: String","description":"lib.uuid.v5Static.URL","location":"packages/frontend/lib.uuid/v5-static/-u-r-l.html","searchKeys":["URL","abstract var URL: String","lib.uuid.v5Static.URL"]},{"name":"abstract var calendar: String","description":"lib.tsstdlib.intl.ResolvedDateTimeFormatOptions.calendar","location":"packages/frontend/lib.tsstdlib.intl/-resolved-date-time-format-options/calendar.html","searchKeys":["calendar","abstract var calendar: String","lib.tsstdlib.intl.ResolvedDateTimeFormatOptions.calendar"]},{"name":"abstract var caseFirst: String","description":"lib.tsstdlib.intl.ResolvedCollatorOptions.caseFirst","location":"packages/frontend/lib.tsstdlib.intl/-resolved-collator-options/case-first.html","searchKeys":["caseFirst","abstract var caseFirst: String","lib.tsstdlib.intl.ResolvedCollatorOptions.caseFirst"]},{"name":"abstract var collation: String","description":"lib.tsstdlib.intl.ResolvedCollatorOptions.collation","location":"packages/frontend/lib.tsstdlib.intl/-resolved-collator-options/collation.html","searchKeys":["collation","abstract var collation: String","lib.tsstdlib.intl.ResolvedCollatorOptions.collation"]},{"name":"abstract var done: Boolean","description":"lib.protobuf.Map.IteratorResult.done","location":"packages/frontend/lib.protobuf/-map/-iterator-result/done.html","searchKeys":["done","abstract var done: Boolean","lib.protobuf.Map.IteratorResult.done"]},{"name":"abstract var done: Boolean","description":"lib.tsstdlib.IteratorReturnResult.done","location":"packages/frontend/lib.tsstdlib/-iterator-return-result/done.html","searchKeys":["done","abstract var done: Boolean","lib.tsstdlib.IteratorReturnResult.done"]},{"name":"abstract var ignorePunctuation: Boolean","description":"lib.tsstdlib.intl.ResolvedCollatorOptions.ignorePunctuation","location":"packages/frontend/lib.tsstdlib.intl/-resolved-collator-options/ignore-punctuation.html","searchKeys":["ignorePunctuation","abstract var ignorePunctuation: Boolean","lib.tsstdlib.intl.ResolvedCollatorOptions.ignorePunctuation"]},{"name":"abstract var length: Number","description":"lib.tsstdlib.ArrayLike.length","location":"packages/frontend/lib.tsstdlib/-array-like/length.html","searchKeys":["length","abstract var length: Number","lib.tsstdlib.ArrayLike.length"]},{"name":"abstract var locale: String","description":"lib.tsstdlib.intl.ResolvedCollatorOptions.locale","location":"packages/frontend/lib.tsstdlib.intl/-resolved-collator-options/locale.html","searchKeys":["locale","abstract var locale: String","lib.tsstdlib.intl.ResolvedCollatorOptions.locale"]},{"name":"abstract var locale: String","description":"lib.tsstdlib.intl.ResolvedDateTimeFormatOptions.locale","location":"packages/frontend/lib.tsstdlib.intl/-resolved-date-time-format-options/locale.html","searchKeys":["locale","abstract var locale: String","lib.tsstdlib.intl.ResolvedDateTimeFormatOptions.locale"]},{"name":"abstract var locale: String","description":"lib.tsstdlib.intl.ResolvedNumberFormatOptions.locale","location":"packages/frontend/lib.tsstdlib.intl/-resolved-number-format-options/locale.html","searchKeys":["locale","abstract var locale: String","lib.tsstdlib.intl.ResolvedNumberFormatOptions.locale"]},{"name":"abstract var maximumFractionDigits: Number","description":"lib.tsstdlib.intl.ResolvedNumberFormatOptions.maximumFractionDigits","location":"packages/frontend/lib.tsstdlib.intl/-resolved-number-format-options/maximum-fraction-digits.html","searchKeys":["maximumFractionDigits","abstract var maximumFractionDigits: Number","lib.tsstdlib.intl.ResolvedNumberFormatOptions.maximumFractionDigits"]},{"name":"abstract var minimumFractionDigits: Number","description":"lib.tsstdlib.intl.ResolvedNumberFormatOptions.minimumFractionDigits","location":"packages/frontend/lib.tsstdlib.intl/-resolved-number-format-options/minimum-fraction-digits.html","searchKeys":["minimumFractionDigits","abstract var minimumFractionDigits: Number","lib.tsstdlib.intl.ResolvedNumberFormatOptions.minimumFractionDigits"]},{"name":"abstract var minimumIntegerDigits: Number","description":"lib.tsstdlib.intl.ResolvedNumberFormatOptions.minimumIntegerDigits","location":"packages/frontend/lib.tsstdlib.intl/-resolved-number-format-options/minimum-integer-digits.html","searchKeys":["minimumIntegerDigits","abstract var minimumIntegerDigits: Number","lib.tsstdlib.intl.ResolvedNumberFormatOptions.minimumIntegerDigits"]},{"name":"abstract var numberingSystem: String","description":"lib.tsstdlib.intl.ResolvedDateTimeFormatOptions.numberingSystem","location":"packages/frontend/lib.tsstdlib.intl/-resolved-date-time-format-options/numbering-system.html","searchKeys":["numberingSystem","abstract var numberingSystem: String","lib.tsstdlib.intl.ResolvedDateTimeFormatOptions.numberingSystem"]},{"name":"abstract var numberingSystem: String","description":"lib.tsstdlib.intl.ResolvedNumberFormatOptions.numberingSystem","location":"packages/frontend/lib.tsstdlib.intl/-resolved-number-format-options/numbering-system.html","searchKeys":["numberingSystem","abstract var numberingSystem: String","lib.tsstdlib.intl.ResolvedNumberFormatOptions.numberingSystem"]},{"name":"abstract var numeric: Boolean","description":"lib.tsstdlib.intl.ResolvedCollatorOptions.numeric","location":"packages/frontend/lib.tsstdlib.intl/-resolved-collator-options/numeric.html","searchKeys":["numeric","abstract var numeric: Boolean","lib.tsstdlib.intl.ResolvedCollatorOptions.numeric"]},{"name":"abstract var prototype: Date","description":"lib.tsstdlib.DateConstructor.prototype","location":"packages/frontend/lib.tsstdlib/-date-constructor/prototype.html","searchKeys":["prototype","abstract var prototype: Date","lib.tsstdlib.DateConstructor.prototype"]},{"name":"abstract var prototype: Error","description":"lib.tsstdlib.ErrorConstructor.prototype","location":"packages/frontend/lib.tsstdlib/-error-constructor/prototype.html","searchKeys":["prototype","abstract var prototype: Error","lib.tsstdlib.ErrorConstructor.prototype"]},{"name":"abstract var prototype: Promise<Any>","description":"lib.tsstdlib.PromiseConstructor.prototype","location":"packages/frontend/lib.tsstdlib/-promise-constructor/prototype.html","searchKeys":["prototype","abstract var prototype: Promise<Any>","lib.tsstdlib.PromiseConstructor.prototype"]},{"name":"abstract var sensitivity: String","description":"lib.tsstdlib.intl.ResolvedCollatorOptions.sensitivity","location":"packages/frontend/lib.tsstdlib.intl/-resolved-collator-options/sensitivity.html","searchKeys":["sensitivity","abstract var sensitivity: String","lib.tsstdlib.intl.ResolvedCollatorOptions.sensitivity"]},{"name":"abstract var style: String","description":"lib.tsstdlib.intl.ResolvedNumberFormatOptions.style","location":"packages/frontend/lib.tsstdlib.intl/-resolved-number-format-options/style.html","searchKeys":["style","abstract var style: String","lib.tsstdlib.intl.ResolvedNumberFormatOptions.style"]},{"name":"abstract var timeZone: String","description":"lib.tsstdlib.intl.ResolvedDateTimeFormatOptions.timeZone","location":"packages/frontend/lib.tsstdlib.intl/-resolved-date-time-format-options/time-zone.html","searchKeys":["timeZone","abstract var timeZone: String","lib.tsstdlib.intl.ResolvedDateTimeFormatOptions.timeZone"]},{"name":"abstract var usage: String","description":"lib.tsstdlib.intl.ResolvedCollatorOptions.usage","location":"packages/frontend/lib.tsstdlib.intl/-resolved-collator-options/usage.html","searchKeys":["usage","abstract var usage: String","lib.tsstdlib.intl.ResolvedCollatorOptions.usage"]},{"name":"abstract var useGrouping: Boolean","description":"lib.tsstdlib.intl.ResolvedNumberFormatOptions.useGrouping","location":"packages/frontend/lib.tsstdlib.intl/-resolved-number-format-options/use-grouping.html","searchKeys":["useGrouping","abstract var useGrouping: Boolean","lib.tsstdlib.intl.ResolvedNumberFormatOptions.useGrouping"]},{"name":"abstract var value: T","description":"lib.protobuf.Map.IteratorResult.value","location":"packages/frontend/lib.protobuf/-map/-iterator-result/value.html","searchKeys":["value","abstract var value: T","lib.protobuf.Map.IteratorResult.value"]},{"name":"abstract var value: TReturn","description":"lib.tsstdlib.IteratorReturnResult.value","location":"packages/frontend/lib.tsstdlib/-iterator-return-result/value.html","searchKeys":["value","abstract var value: TReturn","lib.tsstdlib.IteratorReturnResult.value"]},{"name":"abstract var value: TYield","description":"lib.tsstdlib.IteratorYieldResult.value","location":"packages/frontend/lib.tsstdlib/-iterator-yield-result/value.html","searchKeys":["value","abstract var value: TYield","lib.tsstdlib.IteratorYieldResult.value"]},{"name":"constructor()","description":"lib.protobuf.BinaryDecoder.BinaryDecoder","location":"packages/frontend/lib.protobuf/-binary-decoder/-binary-decoder.html","searchKeys":["BinaryDecoder","constructor()","lib.protobuf.BinaryDecoder.BinaryDecoder"]},{"name":"constructor()","description":"lib.protobuf.BinaryEncoder.BinaryEncoder","location":"packages/frontend/lib.protobuf/-binary-encoder/-binary-encoder.html","searchKeys":["BinaryEncoder","constructor()","lib.protobuf.BinaryEncoder.BinaryEncoder"]},{"name":"constructor()","description":"lib.protobuf.BinaryReader.BinaryReader","location":"packages/frontend/lib.protobuf/-binary-reader/-binary-reader.html","searchKeys":["BinaryReader","constructor()","lib.protobuf.BinaryReader.BinaryReader"]},{"name":"constructor()","description":"lib.protobuf.BinaryWriter.BinaryWriter","location":"packages/frontend/lib.protobuf/-binary-writer/-binary-writer.html","searchKeys":["BinaryWriter","constructor()","lib.protobuf.BinaryWriter.BinaryWriter"]},{"name":"constructor()","description":"lib.protobuf.Message.Message","location":"packages/frontend/lib.protobuf/-message/-message.html","searchKeys":["Message","constructor()","lib.protobuf.Message.Message"]},{"name":"constructor()","description":"lib.tsstdlib.VarDate.VarDate","location":"packages/frontend/lib.tsstdlib/-var-date/-var-date.html","searchKeys":["VarDate","constructor()","lib.tsstdlib.VarDate.VarDate"]},{"name":"constructor(arr: Array<Any>, valueCtor: Any = definedExternally)","description":"lib.protobuf.Map.Map","location":"packages/frontend/lib.protobuf/-map/-map.html","searchKeys":["Map","constructor(arr: Array<Any>, valueCtor: Any = definedExternally)","lib.protobuf.Map.Map"]},{"name":"constructor(bytes: Array<Number> = definedExternally)","description":"lib.protobuf.BinaryDecoder.BinaryDecoder","location":"packages/frontend/lib.protobuf/-binary-decoder/-binary-decoder.html","searchKeys":["BinaryDecoder","constructor(bytes: Array<Number> = definedExternally)","lib.protobuf.BinaryDecoder.BinaryDecoder"]},{"name":"constructor(bytes: Array<Number> = definedExternally)","description":"lib.protobuf.BinaryReader.BinaryReader","location":"packages/frontend/lib.protobuf/-binary-reader/-binary-reader.html","searchKeys":["BinaryReader","constructor(bytes: Array<Number> = definedExternally)","lib.protobuf.BinaryReader.BinaryReader"]},{"name":"constructor(bytes: Array<Number> = definedExternally, start: Number = definedExternally)","description":"lib.protobuf.BinaryDecoder.BinaryDecoder","location":"packages/frontend/lib.protobuf/-binary-decoder/-binary-decoder.html","searchKeys":["BinaryDecoder","constructor(bytes: Array<Number> = definedExternally, start: Number = definedExternally)","lib.protobuf.BinaryDecoder.BinaryDecoder"]},{"name":"constructor(bytes: Array<Number> = definedExternally, start: Number = definedExternally)","description":"lib.protobuf.BinaryReader.BinaryReader","location":"packages/frontend/lib.protobuf/-binary-reader/-binary-reader.html","searchKeys":["BinaryReader","constructor(bytes: Array<Number> = definedExternally, start: Number = definedExternally)","lib.protobuf.BinaryReader.BinaryReader"]},{"name":"constructor(bytes: Array<Number> = definedExternally, start: Number = definedExternally, length: Number = definedExternally)","description":"lib.protobuf.BinaryDecoder.BinaryDecoder","location":"packages/frontend/lib.protobuf/-binary-decoder/-binary-decoder.html","searchKeys":["BinaryDecoder","constructor(bytes: Array<Number> = definedExternally, start: Number = definedExternally, length: Number = definedExternally)","lib.protobuf.BinaryDecoder.BinaryDecoder"]},{"name":"constructor(bytes: Array<Number> = definedExternally, start: Number = definedExternally, length: Number = definedExternally)","description":"lib.protobuf.BinaryReader.BinaryReader","location":"packages/frontend/lib.protobuf/-binary-reader/-binary-reader.html","searchKeys":["BinaryReader","constructor(bytes: Array<Number> = definedExternally, start: Number = definedExternally, length: Number = definedExternally)","lib.protobuf.BinaryReader.BinaryReader"]},{"name":"constructor(bytes: ArrayBuffer = definedExternally)","description":"lib.protobuf.BinaryDecoder.BinaryDecoder","location":"packages/frontend/lib.protobuf/-binary-decoder/-binary-decoder.html","searchKeys":["BinaryDecoder","constructor(bytes: ArrayBuffer = definedExternally)","lib.protobuf.BinaryDecoder.BinaryDecoder"]},{"name":"constructor(bytes: ArrayBuffer = definedExternally)","description":"lib.protobuf.BinaryReader.BinaryReader","location":"packages/frontend/lib.protobuf/-binary-reader/-binary-reader.html","searchKeys":["BinaryReader","constructor(bytes: ArrayBuffer = definedExternally)","lib.protobuf.BinaryReader.BinaryReader"]},{"name":"constructor(bytes: ArrayBuffer = definedExternally, start: Number = definedExternally)","description":"lib.protobuf.BinaryDecoder.BinaryDecoder","location":"packages/frontend/lib.protobuf/-binary-decoder/-binary-decoder.html","searchKeys":["BinaryDecoder","constructor(bytes: ArrayBuffer = definedExternally, start: Number = definedExternally)","lib.protobuf.BinaryDecoder.BinaryDecoder"]},{"name":"constructor(bytes: ArrayBuffer = definedExternally, start: Number = definedExternally)","description":"lib.protobuf.BinaryReader.BinaryReader","location":"packages/frontend/lib.protobuf/-binary-reader/-binary-reader.html","searchKeys":["BinaryReader","constructor(bytes: ArrayBuffer = definedExternally, start: Number = definedExternally)","lib.protobuf.BinaryReader.BinaryReader"]},{"name":"constructor(bytes: ArrayBuffer = definedExternally, start: Number = definedExternally, length: Number = definedExternally)","description":"lib.protobuf.BinaryDecoder.BinaryDecoder","location":"packages/frontend/lib.protobuf/-binary-decoder/-binary-decoder.html","searchKeys":["BinaryDecoder","constructor(bytes: ArrayBuffer = definedExternally, start: Number = definedExternally, length: Number = definedExternally)","lib.protobuf.BinaryDecoder.BinaryDecoder"]},{"name":"constructor(bytes: ArrayBuffer = definedExternally, start: Number = definedExternally, length: Number = definedExternally)","description":"lib.protobuf.BinaryReader.BinaryReader","location":"packages/frontend/lib.protobuf/-binary-reader/-binary-reader.html","searchKeys":["BinaryReader","constructor(bytes: ArrayBuffer = definedExternally, start: Number = definedExternally, length: Number = definedExternally)","lib.protobuf.BinaryReader.BinaryReader"]},{"name":"constructor(bytes: String = definedExternally)","description":"lib.protobuf.BinaryDecoder.BinaryDecoder","location":"packages/frontend/lib.protobuf/-binary-decoder/-binary-decoder.html","searchKeys":["BinaryDecoder","constructor(bytes: String = definedExternally)","lib.protobuf.BinaryDecoder.BinaryDecoder"]},{"name":"constructor(bytes: String = definedExternally)","description":"lib.protobuf.BinaryReader.BinaryReader","location":"packages/frontend/lib.protobuf/-binary-reader/-binary-reader.html","searchKeys":["BinaryReader","constructor(bytes: String = definedExternally)","lib.protobuf.BinaryReader.BinaryReader"]},{"name":"constructor(bytes: String = definedExternally, start: Number = definedExternally)","description":"lib.protobuf.BinaryDecoder.BinaryDecoder","location":"packages/frontend/lib.protobuf/-binary-decoder/-binary-decoder.html","searchKeys":["BinaryDecoder","constructor(bytes: String = definedExternally, start: Number = definedExternally)","lib.protobuf.BinaryDecoder.BinaryDecoder"]},{"name":"constructor(bytes: String = definedExternally, start: Number = definedExternally)","description":"lib.protobuf.BinaryReader.BinaryReader","location":"packages/frontend/lib.protobuf/-binary-reader/-binary-reader.html","searchKeys":["BinaryReader","constructor(bytes: String = definedExternally, start: Number = definedExternally)","lib.protobuf.BinaryReader.BinaryReader"]},{"name":"constructor(bytes: String = definedExternally, start: Number = definedExternally, length: Number = definedExternally)","description":"lib.protobuf.BinaryDecoder.BinaryDecoder","location":"packages/frontend/lib.protobuf/-binary-decoder/-binary-decoder.html","searchKeys":["BinaryDecoder","constructor(bytes: String = definedExternally, start: Number = definedExternally, length: Number = definedExternally)","lib.protobuf.BinaryDecoder.BinaryDecoder"]},{"name":"constructor(bytes: String = definedExternally, start: Number = definedExternally, length: Number = definedExternally)","description":"lib.protobuf.BinaryReader.BinaryReader","location":"packages/frontend/lib.protobuf/-binary-reader/-binary-reader.html","searchKeys":["BinaryReader","constructor(bytes: String = definedExternally, start: Number = definedExternally, length: Number = definedExternally)","lib.protobuf.BinaryReader.BinaryReader"]},{"name":"constructor(bytes: Uint8Array = definedExternally)","description":"lib.protobuf.BinaryDecoder.BinaryDecoder","location":"packages/frontend/lib.protobuf/-binary-decoder/-binary-decoder.html","searchKeys":["BinaryDecoder","constructor(bytes: Uint8Array = definedExternally)","lib.protobuf.BinaryDecoder.BinaryDecoder"]},{"name":"constructor(bytes: Uint8Array = definedExternally)","description":"lib.protobuf.BinaryReader.BinaryReader","location":"packages/frontend/lib.protobuf/-binary-reader/-binary-reader.html","searchKeys":["BinaryReader","constructor(bytes: Uint8Array = definedExternally)","lib.protobuf.BinaryReader.BinaryReader"]},{"name":"constructor(bytes: Uint8Array = definedExternally, start: Number = definedExternally)","description":"lib.protobuf.BinaryDecoder.BinaryDecoder","location":"packages/frontend/lib.protobuf/-binary-decoder/-binary-decoder.html","searchKeys":["BinaryDecoder","constructor(bytes: Uint8Array = definedExternally, start: Number = definedExternally)","lib.protobuf.BinaryDecoder.BinaryDecoder"]},{"name":"constructor(bytes: Uint8Array = definedExternally, start: Number = definedExternally)","description":"lib.protobuf.BinaryReader.BinaryReader","location":"packages/frontend/lib.protobuf/-binary-reader/-binary-reader.html","searchKeys":["BinaryReader","constructor(bytes: Uint8Array = definedExternally, start: Number = definedExternally)","lib.protobuf.BinaryReader.BinaryReader"]},{"name":"constructor(bytes: Uint8Array = definedExternally, start: Number = definedExternally, length: Number = definedExternally)","description":"lib.protobuf.BinaryDecoder.BinaryDecoder","location":"packages/frontend/lib.protobuf/-binary-decoder/-binary-decoder.html","searchKeys":["BinaryDecoder","constructor(bytes: Uint8Array = definedExternally, start: Number = definedExternally, length: Number = definedExternally)","lib.protobuf.BinaryDecoder.BinaryDecoder"]},{"name":"constructor(bytes: Uint8Array = definedExternally, start: Number = definedExternally, length: Number = definedExternally)","description":"lib.protobuf.BinaryReader.BinaryReader","location":"packages/frontend/lib.protobuf/-binary-reader/-binary-reader.html","searchKeys":["BinaryReader","constructor(bytes: Uint8Array = definedExternally, start: Number = definedExternally, length: Number = definedExternally)","lib.protobuf.BinaryReader.BinaryReader"]},{"name":"constructor(decoder: BinaryDecoder = definedExternally, next: () -> Any? = definedExternally, elements: Array<Any> = definedExternally)","description":"lib.protobuf.BinaryIterator.BinaryIterator","location":"packages/frontend/lib.protobuf/-binary-iterator/-binary-iterator.html","searchKeys":["BinaryIterator","constructor(decoder: BinaryDecoder = definedExternally, next: () -> Any? = definedExternally, elements: Array<Any> = definedExternally)","lib.protobuf.BinaryIterator.BinaryIterator"]},{"name":"constructor(fieldIndex: Number, fieldName: T$2, ctor: Any, toObjectFn: StaticToObject, isRepeated: Number)","description":"lib.protobuf.ExtensionFieldInfo.ExtensionFieldInfo","location":"packages/frontend/lib.protobuf/-extension-field-info/-extension-field-info.html","searchKeys":["ExtensionFieldInfo","constructor(fieldIndex: Number, fieldName: T$2, ctor: Any, toObjectFn: StaticToObject, isRepeated: Number)","lib.protobuf.ExtensionFieldInfo.ExtensionFieldInfo"]},{"name":"constructor(fieldInfo: ExtensionFieldInfo<T>, binaryReaderFn: BinaryRead, binaryWriterFn: BinaryWrite, opt_binaryMessageSerializeFn: (msg: Message, writer: BinaryWriter) -> Unit, opt_binaryMessageDeserializeFn: (msg: Message, reader: BinaryReader) -> Message, opt_isPacked: Boolean)","description":"lib.protobuf.ExtensionFieldBinaryInfo.ExtensionFieldBinaryInfo","location":"packages/frontend/lib.protobuf/-extension-field-binary-info/-extension-field-binary-info.html","searchKeys":["ExtensionFieldBinaryInfo","constructor(fieldInfo: ExtensionFieldInfo<T>, binaryReaderFn: BinaryRead, binaryWriterFn: BinaryWrite, opt_binaryMessageSerializeFn: (msg: Message, writer: BinaryWriter) -> Unit, opt_binaryMessageDeserializeFn: (msg: Message, reader: BinaryReader) -> Message, opt_isPacked: Boolean)","lib.protobuf.ExtensionFieldBinaryInfo.ExtensionFieldBinaryInfo"]},{"name":"constructor(lo: Number, hi: Number)","description":"lib.protobuf.Int64.Int64","location":"packages/frontend/lib.protobuf/-int64/-int64.html","searchKeys":["Int64","constructor(lo: Number, hi: Number)","lib.protobuf.Int64.Int64"]},{"name":"constructor(lo: Number, hi: Number)","description":"lib.protobuf.UInt64.UInt64","location":"packages/frontend/lib.protobuf/-u-int64/-u-int64.html","searchKeys":["UInt64","constructor(lo: Number, hi: Number)","lib.protobuf.UInt64.UInt64"]},{"name":"external enum FieldType : Enum<FieldType> ","description":"lib.protobuf.FieldType","location":"packages/frontend/lib.protobuf/-field-type/index.html","searchKeys":["FieldType","external enum FieldType : Enum<FieldType> ","lib.protobuf.FieldType"]},{"name":"external enum WireType : Enum<WireType> ","description":"lib.protobuf.WireType","location":"packages/frontend/lib.protobuf/-wire-type/index.html","searchKeys":["WireType","external enum WireType : Enum<WireType> ","lib.protobuf.WireType"]},{"name":"external interface ArrayLike<T>","description":"lib.tsstdlib.ArrayLike","location":"packages/frontend/lib.tsstdlib/-array-like/index.html","searchKeys":["ArrayLike","external interface ArrayLike<T>","lib.tsstdlib.ArrayLike"]},{"name":"external interface Collator","description":"lib.tsstdlib.intl.Collator","location":"packages/frontend/lib.tsstdlib.intl/-collator/index.html","searchKeys":["Collator","external interface Collator","lib.tsstdlib.intl.Collator"]},{"name":"external interface CollatorOptions","description":"lib.tsstdlib.intl.CollatorOptions","location":"packages/frontend/lib.tsstdlib.intl/-collator-options/index.html","searchKeys":["CollatorOptions","external interface CollatorOptions","lib.tsstdlib.intl.CollatorOptions"]},{"name":"external interface DateConstructor","description":"lib.tsstdlib.DateConstructor","location":"packages/frontend/lib.tsstdlib/-date-constructor/index.html","searchKeys":["DateConstructor","external interface DateConstructor","lib.tsstdlib.DateConstructor"]},{"name":"external interface DateTimeFormat","description":"lib.tsstdlib.intl.DateTimeFormat","location":"packages/frontend/lib.tsstdlib.intl/-date-time-format/index.html","searchKeys":["DateTimeFormat","external interface DateTimeFormat","lib.tsstdlib.intl.DateTimeFormat"]},{"name":"external interface DateTimeFormatOptions","description":"lib.tsstdlib.intl.DateTimeFormatOptions","location":"packages/frontend/lib.tsstdlib.intl/-date-time-format-options/index.html","searchKeys":["DateTimeFormatOptions","external interface DateTimeFormatOptions","lib.tsstdlib.intl.DateTimeFormatOptions"]},{"name":"external interface ErrorConstructor","description":"lib.tsstdlib.ErrorConstructor","location":"packages/frontend/lib.tsstdlib/-error-constructor/index.html","searchKeys":["ErrorConstructor","external interface ErrorConstructor","lib.tsstdlib.ErrorConstructor"]},{"name":"external interface Iterable<T>","description":"lib.tsstdlib.Iterable","location":"packages/frontend/lib.tsstdlib/-iterable/index.html","searchKeys":["Iterable","external interface Iterable<T>","lib.tsstdlib.Iterable"]},{"name":"external interface Iterator<T, TReturn, TNext>","description":"lib.tsstdlib.Iterator","location":"packages/frontend/lib.tsstdlib/-iterator/index.html","searchKeys":["Iterator","external interface Iterator<T, TReturn, TNext>","lib.tsstdlib.Iterator"]},{"name":"external interface IteratorReturnResult<TReturn>","description":"lib.tsstdlib.IteratorReturnResult","location":"packages/frontend/lib.tsstdlib/-iterator-return-result/index.html","searchKeys":["IteratorReturnResult","external interface IteratorReturnResult<TReturn>","lib.tsstdlib.IteratorReturnResult"]},{"name":"external interface IteratorYieldResult<TYield>","description":"lib.tsstdlib.IteratorYieldResult","location":"packages/frontend/lib.tsstdlib/-iterator-yield-result/index.html","searchKeys":["IteratorYieldResult","external interface IteratorYieldResult<TYield>","lib.tsstdlib.IteratorYieldResult"]},{"name":"external interface NumberFormat","description":"lib.tsstdlib.intl.NumberFormat","location":"packages/frontend/lib.tsstdlib.intl/-number-format/index.html","searchKeys":["NumberFormat","external interface NumberFormat","lib.tsstdlib.intl.NumberFormat"]},{"name":"external interface NumberFormatOptions","description":"lib.tsstdlib.intl.NumberFormatOptions","location":"packages/frontend/lib.tsstdlib.intl/-number-format-options/index.html","searchKeys":["NumberFormatOptions","external interface NumberFormatOptions","lib.tsstdlib.intl.NumberFormatOptions"]},{"name":"external interface PromiseConstructor","description":"lib.tsstdlib.PromiseConstructor","location":"packages/frontend/lib.tsstdlib/-promise-constructor/index.html","searchKeys":["PromiseConstructor","external interface PromiseConstructor","lib.tsstdlib.PromiseConstructor"]},{"name":"external interface PromiseLike<T>","description":"lib.tsstdlib.PromiseLike","location":"packages/frontend/lib.tsstdlib/-promise-like/index.html","searchKeys":["PromiseLike","external interface PromiseLike<T>","lib.tsstdlib.PromiseLike"]},{"name":"external interface RandomOptions","description":"lib.uuid.RandomOptions","location":"packages/frontend/lib.uuid/-random-options/index.html","searchKeys":["RandomOptions","external interface RandomOptions","lib.uuid.RandomOptions"]},{"name":"external interface ResolvedCollatorOptions","description":"lib.tsstdlib.intl.ResolvedCollatorOptions","location":"packages/frontend/lib.tsstdlib.intl/-resolved-collator-options/index.html","searchKeys":["ResolvedCollatorOptions","external interface ResolvedCollatorOptions","lib.tsstdlib.intl.ResolvedCollatorOptions"]},{"name":"external interface ResolvedDateTimeFormatOptions","description":"lib.tsstdlib.intl.ResolvedDateTimeFormatOptions","location":"packages/frontend/lib.tsstdlib.intl/-resolved-date-time-format-options/index.html","searchKeys":["ResolvedDateTimeFormatOptions","external interface ResolvedDateTimeFormatOptions","lib.tsstdlib.intl.ResolvedDateTimeFormatOptions"]},{"name":"external interface ResolvedNumberFormatOptions","description":"lib.tsstdlib.intl.ResolvedNumberFormatOptions","location":"packages/frontend/lib.tsstdlib.intl/-resolved-number-format-options/index.html","searchKeys":["ResolvedNumberFormatOptions","external interface ResolvedNumberFormatOptions","lib.tsstdlib.intl.ResolvedNumberFormatOptions"]},{"name":"external interface RngOptions","description":"lib.uuid.RngOptions","location":"packages/frontend/lib.uuid/-rng-options/index.html","searchKeys":["RngOptions","external interface RngOptions","lib.uuid.RngOptions"]},{"name":"external interface T$0","description":"lib.protobuf.T$0","location":"packages/frontend/lib.protobuf/-t$0/index.html","searchKeys":["T$0","external interface T$0","lib.protobuf.T$0"]},{"name":"external interface T$1","description":"lib.protobuf.T$1","location":"packages/frontend/lib.protobuf/-t$1/index.html","searchKeys":["T$1","external interface T$1","lib.protobuf.T$1"]},{"name":"external interface T$2","description":"lib.protobuf.T$2","location":"packages/frontend/lib.protobuf/-t$2/index.html","searchKeys":["T$2","external interface T$2","lib.protobuf.T$2"]},{"name":"external interface V1BaseOptions","description":"lib.uuid.V1BaseOptions","location":"packages/frontend/lib.uuid/-v1-base-options/index.html","searchKeys":["V1BaseOptions","external interface V1BaseOptions","lib.uuid.V1BaseOptions"]},{"name":"external interface V1RandomOptions : V1BaseOptions, RandomOptions","description":"lib.uuid.V1RandomOptions","location":"packages/frontend/lib.uuid/-v1-random-options/index.html","searchKeys":["V1RandomOptions","external interface V1RandomOptions : V1BaseOptions, RandomOptions","lib.uuid.V1RandomOptions"]},{"name":"external interface V1RngOptions : V1BaseOptions, RngOptions","description":"lib.uuid.V1RngOptions","location":"packages/frontend/lib.uuid/-v1-rng-options/index.html","searchKeys":["V1RngOptions","external interface V1RngOptions : V1BaseOptions, RngOptions","lib.uuid.V1RngOptions"]},{"name":"external interface v3Static","description":"lib.uuid.v3Static","location":"packages/frontend/lib.uuid/v3-static/index.html","searchKeys":["v3Static","external interface v3Static","lib.uuid.v3Static"]},{"name":"external interface v5Static","description":"lib.uuid.v5Static","location":"packages/frontend/lib.uuid/v5-static/index.html","searchKeys":["v5Static","external interface v5Static","lib.uuid.v5Static"]},{"name":"external var FLOAT32_EPS: Number","description":"lib.protobuf.FLOAT32_EPS","location":"packages/frontend/lib.protobuf/-f-l-o-a-t32_-e-p-s.html","searchKeys":["FLOAT32_EPS","external var FLOAT32_EPS: Number","lib.protobuf.FLOAT32_EPS"]},{"name":"external var FLOAT32_MAX: Number","description":"lib.protobuf.FLOAT32_MAX","location":"packages/frontend/lib.protobuf/-f-l-o-a-t32_-m-a-x.html","searchKeys":["FLOAT32_MAX","external var FLOAT32_MAX: Number","lib.protobuf.FLOAT32_MAX"]},{"name":"external var FLOAT32_MIN: Number","description":"lib.protobuf.FLOAT32_MIN","location":"packages/frontend/lib.protobuf/-f-l-o-a-t32_-m-i-n.html","searchKeys":["FLOAT32_MIN","external var FLOAT32_MIN: Number","lib.protobuf.FLOAT32_MIN"]},{"name":"external var FLOAT64_EPS: Number","description":"lib.protobuf.FLOAT64_EPS","location":"packages/frontend/lib.protobuf/-f-l-o-a-t64_-e-p-s.html","searchKeys":["FLOAT64_EPS","external var FLOAT64_EPS: Number","lib.protobuf.FLOAT64_EPS"]},{"name":"external var FLOAT64_MAX: Number","description":"lib.protobuf.FLOAT64_MAX","location":"packages/frontend/lib.protobuf/-f-l-o-a-t64_-m-a-x.html","searchKeys":["FLOAT64_MAX","external var FLOAT64_MAX: Number","lib.protobuf.FLOAT64_MAX"]},{"name":"external var FLOAT64_MIN: Number","description":"lib.protobuf.FLOAT64_MIN","location":"packages/frontend/lib.protobuf/-f-l-o-a-t64_-m-i-n.html","searchKeys":["FLOAT64_MIN","external var FLOAT64_MIN: Number","lib.protobuf.FLOAT64_MIN"]},{"name":"external var FieldTypeToWireType: (fieldType: FieldType) -> WireType","description":"lib.protobuf.FieldTypeToWireType","location":"packages/frontend/lib.protobuf/-field-type-to-wire-type.html","searchKeys":["FieldTypeToWireType","external var FieldTypeToWireType: (fieldType: FieldType) -> WireType","lib.protobuf.FieldTypeToWireType"]},{"name":"external var INVALID_FIELD_NUMBER: Number","description":"lib.protobuf.INVALID_FIELD_NUMBER","location":"packages/frontend/lib.protobuf/-i-n-v-a-l-i-d_-f-i-e-l-d_-n-u-m-b-e-r.html","searchKeys":["INVALID_FIELD_NUMBER","external var INVALID_FIELD_NUMBER: Number","lib.protobuf.INVALID_FIELD_NUMBER"]},{"name":"external var NIL: String","description":"lib.uuid.NIL","location":"packages/frontend/lib.uuid/-n-i-l.html","searchKeys":["NIL","external var NIL: String","lib.uuid.NIL"]},{"name":"external var TWO_TO_20: Number","description":"lib.protobuf.TWO_TO_20","location":"packages/frontend/lib.protobuf/-t-w-o_-t-o_20.html","searchKeys":["TWO_TO_20","external var TWO_TO_20: Number","lib.protobuf.TWO_TO_20"]},{"name":"external var TWO_TO_23: Number","description":"lib.protobuf.TWO_TO_23","location":"packages/frontend/lib.protobuf/-t-w-o_-t-o_23.html","searchKeys":["TWO_TO_23","external var TWO_TO_23: Number","lib.protobuf.TWO_TO_23"]},{"name":"external var TWO_TO_31: Number","description":"lib.protobuf.TWO_TO_31","location":"packages/frontend/lib.protobuf/-t-w-o_-t-o_31.html","searchKeys":["TWO_TO_31","external var TWO_TO_31: Number","lib.protobuf.TWO_TO_31"]},{"name":"external var TWO_TO_32: Number","description":"lib.protobuf.TWO_TO_32","location":"packages/frontend/lib.protobuf/-t-w-o_-t-o_32.html","searchKeys":["TWO_TO_32","external var TWO_TO_32: Number","lib.protobuf.TWO_TO_32"]},{"name":"external var TWO_TO_52: Number","description":"lib.protobuf.TWO_TO_52","location":"packages/frontend/lib.protobuf/-t-w-o_-t-o_52.html","searchKeys":["TWO_TO_52","external var TWO_TO_52: Number","lib.protobuf.TWO_TO_52"]},{"name":"external var TWO_TO_63: Number","description":"lib.protobuf.TWO_TO_63","location":"packages/frontend/lib.protobuf/-t-w-o_-t-o_63.html","searchKeys":["TWO_TO_63","external var TWO_TO_63: Number","lib.protobuf.TWO_TO_63"]},{"name":"external var TWO_TO_64: Number","description":"lib.protobuf.TWO_TO_64","location":"packages/frontend/lib.protobuf/-t-w-o_-t-o_64.html","searchKeys":["TWO_TO_64","external var TWO_TO_64: Number","lib.protobuf.TWO_TO_64"]},{"name":"external var ZERO_HASH: String","description":"lib.protobuf.ZERO_HASH","location":"packages/frontend/lib.protobuf/-z-e-r-o_-h-a-s-h.html","searchKeys":["ZERO_HASH","external var ZERO_HASH: String","lib.protobuf.ZERO_HASH"]},{"name":"external var parse: (uuid: String) -> ArrayLike<Number>","description":"lib.uuid.parse","location":"packages/frontend/lib.uuid/parse.html","searchKeys":["parse","external var parse: (uuid: String) -> ArrayLike<Number>","lib.uuid.parse"]},{"name":"external var stringify: (buffer: ArrayLike<Number>, offset: Number) -> String","description":"lib.uuid.stringify","location":"packages/frontend/lib.uuid/stringify.html","searchKeys":["stringify","external var stringify: (buffer: ArrayLike<Number>, offset: Number) -> String","lib.uuid.stringify"]},{"name":"external var v1: (dynamic) -> String","description":"lib.uuid.v1","location":"packages/frontend/lib.uuid/v1.html","searchKeys":["v1","external var v1: (dynamic) -> String","lib.uuid.v1"]},{"name":"external var v3: (dynamic, dynamic) -> String","description":"lib.uuid.v3","location":"packages/frontend/lib.uuid/v3.html","searchKeys":["v3","external var v3: (dynamic, dynamic) -> String","lib.uuid.v3"]},{"name":"external var v4: (dynamic) -> String","description":"lib.uuid.v4","location":"packages/frontend/lib.uuid/v4.html","searchKeys":["v4","external var v4: (dynamic) -> String","lib.uuid.v4"]},{"name":"external var v5: (dynamic, dynamic) -> String","description":"lib.uuid.v5","location":"packages/frontend/lib.uuid/v5.html","searchKeys":["v5","external var v5: (dynamic, dynamic) -> String","lib.uuid.v5"]},{"name":"external var validate: (uuid: String) -> Boolean","description":"lib.uuid.validate","location":"packages/frontend/lib.uuid/validate.html","searchKeys":["validate","external var validate: (uuid: String) -> Boolean","lib.uuid.validate"]},{"name":"external var version: (uuid: String) -> Number","description":"lib.uuid.version","location":"packages/frontend/lib.uuid/version.html","searchKeys":["version","external var version: (uuid: String) -> Number","lib.uuid.version"]},{"name":"fun <K, V> deserializeBinary(map: Map<K, V>, reader: BinaryReader, keyReaderFn: (reader: BinaryReader) -> K, valueReaderFn: (reader: BinaryReader, value: Any, BinaryReadCallback) -> V, readCallback: BinaryReadCallback = definedExternally, defaultKey: K = definedExternally, defaultValue: V = definedExternally)","description":"lib.protobuf.Map.Companion.deserializeBinary","location":"packages/frontend/lib.protobuf/-map/-companion/deserialize-binary.html","searchKeys":["deserializeBinary","fun <K, V> deserializeBinary(map: Map<K, V>, reader: BinaryReader, keyReaderFn: (reader: BinaryReader) -> K, valueReaderFn: (reader: BinaryReader, value: Any, BinaryReadCallback) -> V, readCallback: BinaryReadCallback = definedExternally, defaultKey: K = definedExternally, defaultValue: V = definedExternally)","lib.protobuf.Map.Companion.deserializeBinary"]},{"name":"fun <T : Message> addToRepeatedWrapperField(msg: Message, fieldNumber: Number, value: T?, ctor: Any, index: Number = definedExternally): T","description":"lib.protobuf.Message.Companion.addToRepeatedWrapperField","location":"packages/frontend/lib.protobuf/-message/-companion/add-to-repeated-wrapper-field.html","searchKeys":["addToRepeatedWrapperField","fun <T : Message> addToRepeatedWrapperField(msg: Message, fieldNumber: Number, value: T?, ctor: Any, index: Number = definedExternally): T","lib.protobuf.Message.Companion.addToRepeatedWrapperField"]},{"name":"fun <T : Message> clone(msg: T): T","description":"lib.protobuf.Message.Companion.clone","location":"packages/frontend/lib.protobuf/-message/-companion/clone.html","searchKeys":["clone","fun <T : Message> clone(msg: T): T","lib.protobuf.Message.Companion.clone"]},{"name":"fun <T : Message> cloneMessage(msg: T): T","description":"lib.protobuf.Message.Companion.cloneMessage","location":"packages/frontend/lib.protobuf/-message/-companion/clone-message.html","searchKeys":["cloneMessage","fun <T : Message> cloneMessage(msg: T): T","lib.protobuf.Message.Companion.cloneMessage"]},{"name":"fun <T : Message> difference(m1: T, m2: T): T","description":"lib.protobuf.Message.Companion.difference","location":"packages/frontend/lib.protobuf/-message/-companion/difference.html","searchKeys":["difference","fun <T : Message> difference(m1: T, m2: T): T","lib.protobuf.Message.Companion.difference"]},{"name":"fun <T : Message> getRepeatedWrapperField(msg: Message, ctor: Any, fieldNumber: Number): Array<T>","description":"lib.protobuf.Message.Companion.getRepeatedWrapperField","location":"packages/frontend/lib.protobuf/-message/-companion/get-repeated-wrapper-field.html","searchKeys":["getRepeatedWrapperField","fun <T : Message> getRepeatedWrapperField(msg: Message, ctor: Any, fieldNumber: Number): Array<T>","lib.protobuf.Message.Companion.getRepeatedWrapperField"]},{"name":"fun <T : Message> getWrapperField(msg: Message, ctor: Any, fieldNumber: Number, required: Number = definedExternally): T","description":"lib.protobuf.Message.Companion.getWrapperField","location":"packages/frontend/lib.protobuf/-message/-companion/get-wrapper-field.html","searchKeys":["getWrapperField","fun <T : Message> getWrapperField(msg: Message, ctor: Any, fieldNumber: Number, required: Number = definedExternally): T","lib.protobuf.Message.Companion.getWrapperField"]},{"name":"fun <T : Message> setRepeatedWrapperField(msg: Message, fieldNumber: Number, value: Array<T> = definedExternally)","description":"lib.protobuf.Message.Companion.setRepeatedWrapperField","location":"packages/frontend/lib.protobuf/-message/-companion/set-repeated-wrapper-field.html","searchKeys":["setRepeatedWrapperField","fun <T : Message> setRepeatedWrapperField(msg: Message, fieldNumber: Number, value: Array<T> = definedExternally)","lib.protobuf.Message.Companion.setRepeatedWrapperField"]},{"name":"fun <T : Message> setWrapperField(msg: Message, fieldNumber: Number, value: Map<Any, Any> = definedExternally)","description":"lib.protobuf.Message.Companion.setWrapperField","location":"packages/frontend/lib.protobuf/-message/-companion/set-wrapper-field.html","searchKeys":["setWrapperField","fun <T : Message> setWrapperField(msg: Message, fieldNumber: Number, value: Map<Any, Any> = definedExternally)","lib.protobuf.Message.Companion.setWrapperField"]},{"name":"fun <T : Message> setWrapperField(msg: Message, fieldNumber: Number, value: T = definedExternally)","description":"lib.protobuf.Message.Companion.setWrapperField","location":"packages/frontend/lib.protobuf/-message/-companion/set-wrapper-field.html","searchKeys":["setWrapperField","fun <T : Message> setWrapperField(msg: Message, fieldNumber: Number, value: T = definedExternally)","lib.protobuf.Message.Companion.setWrapperField"]},{"name":"fun <T : Message> toObjectList(field: Array<T>, toObjectFn: (includeInstance: Boolean, data: T) -> Any, includeInstance: Boolean = definedExternally): Array<Any>","description":"lib.protobuf.Message.Companion.toObjectList","location":"packages/frontend/lib.protobuf/-message/-companion/to-object-list.html","searchKeys":["toObjectList","fun <T : Message> toObjectList(field: Array<T>, toObjectFn: (includeInstance: Boolean, data: T) -> Any, includeInstance: Boolean = definedExternally): Array<Any>","lib.protobuf.Message.Companion.toObjectList"]},{"name":"fun <T> getFieldWithDefault(msg: Message, fieldNumber: Number, defaultValue: T): T","description":"lib.protobuf.Message.Companion.getFieldWithDefault","location":"packages/frontend/lib.protobuf/-message/-companion/get-field-with-default.html","searchKeys":["getFieldWithDefault","fun <T> getFieldWithDefault(msg: Message, fieldNumber: Number, defaultValue: T): T","lib.protobuf.Message.Companion.getFieldWithDefault"]},{"name":"fun <TK, TV> fromObject(entries: Array<Any>, valueCtor: Any, valueFromObject: Any): Map<TK, TV>","description":"lib.protobuf.Map.Companion.fromObject","location":"packages/frontend/lib.protobuf/-map/-companion/from-object.html","searchKeys":["fromObject","fun <TK, TV> fromObject(entries: Array<Any>, valueCtor: Any, valueFromObject: Any): Map<TK, TV>","lib.protobuf.Map.Companion.fromObject"]},{"name":"fun addToRepeatedField(msg: Message, fieldNumber: Number, value: Any, index: Number = definedExternally)","description":"lib.protobuf.Message.Companion.addToRepeatedField","location":"packages/frontend/lib.protobuf/-message/-companion/add-to-repeated-field.html","searchKeys":["addToRepeatedField","fun addToRepeatedField(msg: Message, fieldNumber: Number, value: Any, index: Number = definedExternally)","lib.protobuf.Message.Companion.addToRepeatedField"]},{"name":"fun alloc(bytes: Array<Number> = definedExternally, start: Number = definedExternally, length: Number = definedExternally): BinaryDecoder","description":"lib.protobuf.BinaryDecoder.Companion.alloc","location":"packages/frontend/lib.protobuf/-binary-decoder/-companion/alloc.html","searchKeys":["alloc","fun alloc(bytes: Array<Number> = definedExternally, start: Number = definedExternally, length: Number = definedExternally): BinaryDecoder","lib.protobuf.BinaryDecoder.Companion.alloc"]},{"name":"fun alloc(bytes: Array<Number> = definedExternally, start: Number = definedExternally, length: Number = definedExternally): BinaryReader","description":"lib.protobuf.BinaryReader.Companion.alloc","location":"packages/frontend/lib.protobuf/-binary-reader/-companion/alloc.html","searchKeys":["alloc","fun alloc(bytes: Array<Number> = definedExternally, start: Number = definedExternally, length: Number = definedExternally): BinaryReader","lib.protobuf.BinaryReader.Companion.alloc"]},{"name":"fun alloc(bytes: ArrayBuffer = definedExternally, start: Number = definedExternally, length: Number = definedExternally): BinaryDecoder","description":"lib.protobuf.BinaryDecoder.Companion.alloc","location":"packages/frontend/lib.protobuf/-binary-decoder/-companion/alloc.html","searchKeys":["alloc","fun alloc(bytes: ArrayBuffer = definedExternally, start: Number = definedExternally, length: Number = definedExternally): BinaryDecoder","lib.protobuf.BinaryDecoder.Companion.alloc"]},{"name":"fun alloc(bytes: ArrayBuffer = definedExternally, start: Number = definedExternally, length: Number = definedExternally): BinaryReader","description":"lib.protobuf.BinaryReader.Companion.alloc","location":"packages/frontend/lib.protobuf/-binary-reader/-companion/alloc.html","searchKeys":["alloc","fun alloc(bytes: ArrayBuffer = definedExternally, start: Number = definedExternally, length: Number = definedExternally): BinaryReader","lib.protobuf.BinaryReader.Companion.alloc"]},{"name":"fun alloc(bytes: String = definedExternally, start: Number = definedExternally, length: Number = definedExternally): BinaryDecoder","description":"lib.protobuf.BinaryDecoder.Companion.alloc","location":"packages/frontend/lib.protobuf/-binary-decoder/-companion/alloc.html","searchKeys":["alloc","fun alloc(bytes: String = definedExternally, start: Number = definedExternally, length: Number = definedExternally): BinaryDecoder","lib.protobuf.BinaryDecoder.Companion.alloc"]},{"name":"fun alloc(bytes: String = definedExternally, start: Number = definedExternally, length: Number = definedExternally): BinaryReader","description":"lib.protobuf.BinaryReader.Companion.alloc","location":"packages/frontend/lib.protobuf/-binary-reader/-companion/alloc.html","searchKeys":["alloc","fun alloc(bytes: String = definedExternally, start: Number = definedExternally, length: Number = definedExternally): BinaryReader","lib.protobuf.BinaryReader.Companion.alloc"]},{"name":"fun alloc(bytes: Uint8Array = definedExternally, start: Number = definedExternally, length: Number = definedExternally): BinaryDecoder","description":"lib.protobuf.BinaryDecoder.Companion.alloc","location":"packages/frontend/lib.protobuf/-binary-decoder/-companion/alloc.html","searchKeys":["alloc","fun alloc(bytes: Uint8Array = definedExternally, start: Number = definedExternally, length: Number = definedExternally): BinaryDecoder","lib.protobuf.BinaryDecoder.Companion.alloc"]},{"name":"fun alloc(bytes: Uint8Array = definedExternally, start: Number = definedExternally, length: Number = definedExternally): BinaryReader","description":"lib.protobuf.BinaryReader.Companion.alloc","location":"packages/frontend/lib.protobuf/-binary-reader/-companion/alloc.html","searchKeys":["alloc","fun alloc(bytes: Uint8Array = definedExternally, start: Number = definedExternally, length: Number = definedExternally): BinaryReader","lib.protobuf.BinaryReader.Companion.alloc"]},{"name":"fun alloc(decoder: BinaryDecoder = definedExternally, next: () -> Any? = definedExternally, elements: Array<Any> = definedExternally): BinaryIterator","description":"lib.protobuf.BinaryIterator.Companion.alloc","location":"packages/frontend/lib.protobuf/-binary-iterator/-companion/alloc.html","searchKeys":["alloc","fun alloc(decoder: BinaryDecoder = definedExternally, next: () -> Any? = definedExternally, elements: Array<Any> = definedExternally): BinaryIterator","lib.protobuf.BinaryIterator.Companion.alloc"]},{"name":"fun bytesAsB64(bytes: Uint8Array): String","description":"lib.protobuf.Message.Companion.bytesAsB64","location":"packages/frontend/lib.protobuf/-message/-companion/bytes-as-b64.html","searchKeys":["bytesAsB64","fun bytesAsB64(bytes: Uint8Array): String","lib.protobuf.Message.Companion.bytesAsB64"]},{"name":"fun bytesAsU8(str: String): Uint8Array","description":"lib.protobuf.Message.Companion.bytesAsU8","location":"packages/frontend/lib.protobuf/-message/-companion/bytes-as-u8.html","searchKeys":["bytesAsU8","fun bytesAsU8(str: String): Uint8Array","lib.protobuf.Message.Companion.bytesAsU8"]},{"name":"fun bytesListAsB64(bytesList: Array<Uint8Array>): Array<String>","description":"lib.protobuf.Message.Companion.bytesListAsB64","location":"packages/frontend/lib.protobuf/-message/-companion/bytes-list-as-b64.html","searchKeys":["bytesListAsB64","fun bytesListAsB64(bytesList: Array<Uint8Array>): Array<String>","lib.protobuf.Message.Companion.bytesListAsB64"]},{"name":"fun bytesListAsU8(strList: Array<String>): Array<Uint8Array>","description":"lib.protobuf.Message.Companion.bytesListAsU8","location":"packages/frontend/lib.protobuf/-message/-companion/bytes-list-as-u8.html","searchKeys":["bytesListAsU8","fun bytesListAsU8(strList: Array<String>): Array<Uint8Array>","lib.protobuf.Message.Companion.bytesListAsU8"]},{"name":"fun compareExtensions(extension1: Any, extension2: Any): Boolean","description":"lib.protobuf.Message.Companion.compareExtensions","location":"packages/frontend/lib.protobuf/-message/-companion/compare-extensions.html","searchKeys":["compareExtensions","fun compareExtensions(extension1: Any, extension2: Any): Boolean","lib.protobuf.Message.Companion.compareExtensions"]},{"name":"fun compareFields(field1: Any, field2: Any): Boolean","description":"lib.protobuf.Message.Companion.compareFields","location":"packages/frontend/lib.protobuf/-message/-companion/compare-fields.html","searchKeys":["compareFields","fun compareFields(field1: Any, field2: Any): Boolean","lib.protobuf.Message.Companion.compareFields"]},{"name":"fun computeOneofCase(msg: Message, oneof: Array<Number>): Number","description":"lib.protobuf.Message.Companion.computeOneofCase","location":"packages/frontend/lib.protobuf/-message/-companion/compute-oneof-case.html","searchKeys":["computeOneofCase","fun computeOneofCase(msg: Message, oneof: Array<Number>): Number","lib.protobuf.Message.Companion.computeOneofCase"]},{"name":"fun copyInto(fromMessage: Message, toMessage: Message)","description":"lib.protobuf.Message.Companion.copyInto","location":"packages/frontend/lib.protobuf/-message/-companion/copy-into.html","searchKeys":["copyInto","fun copyInto(fromMessage: Message, toMessage: Message)","lib.protobuf.Message.Companion.copyInto"]},{"name":"fun deserializeBinary(bytes: Uint8Array): Message","description":"lib.protobuf.Message.Companion.deserializeBinary","location":"packages/frontend/lib.protobuf/-message/-companion/deserialize-binary.html","searchKeys":["deserializeBinary","fun deserializeBinary(bytes: Uint8Array): Message","lib.protobuf.Message.Companion.deserializeBinary"]},{"name":"fun deserializeBinaryFromReader(message: Message, reader: BinaryReader): Message","description":"lib.protobuf.Message.Companion.deserializeBinaryFromReader","location":"packages/frontend/lib.protobuf/-message/-companion/deserialize-binary-from-reader.html","searchKeys":["deserializeBinaryFromReader","fun deserializeBinaryFromReader(message: Message, reader: BinaryReader): Message","lib.protobuf.Message.Companion.deserializeBinaryFromReader"]},{"name":"fun equals(m1: Message, m2: Message): Boolean","description":"lib.protobuf.Message.Companion.equals","location":"packages/frontend/lib.protobuf/-message/-companion/equals.html","searchKeys":["equals","fun equals(m1: Message, m2: Message): Boolean","lib.protobuf.Message.Companion.equals"]},{"name":"fun fromString(str: String): Int64","description":"lib.protobuf.Int64.Companion.fromString","location":"packages/frontend/lib.protobuf/-int64/-companion/from-string.html","searchKeys":["fromString","fun fromString(str: String): Int64","lib.protobuf.Int64.Companion.fromString"]},{"name":"fun fromString(str: String): UInt64","description":"lib.protobuf.UInt64.Companion.fromString","location":"packages/frontend/lib.protobuf/-u-int64/-companion/from-string.html","searchKeys":["fromString","fun fromString(str: String): UInt64","lib.protobuf.UInt64.Companion.fromString"]},{"name":"fun getField(msg: Message, fieldNumber: Number): dynamic","description":"lib.protobuf.Message.Companion.getField","location":"packages/frontend/lib.protobuf/-message/-companion/get-field.html","searchKeys":["getField","fun getField(msg: Message, fieldNumber: Number): dynamic","lib.protobuf.Message.Companion.getField"]},{"name":"fun getMapField(msg: Message, fieldNumber: Number, noLazyCreate: Boolean, valueCtor: Any = definedExternally): Map<Any, Any>","description":"lib.protobuf.Message.Companion.getMapField","location":"packages/frontend/lib.protobuf/-message/-companion/get-map-field.html","searchKeys":["getMapField","fun getMapField(msg: Message, fieldNumber: Number, noLazyCreate: Boolean, valueCtor: Any = definedExternally): Map<Any, Any>","lib.protobuf.Message.Companion.getMapField"]},{"name":"fun getOptionalFloatingPointField(msg: Message, fieldNumber: Number): Number?","description":"lib.protobuf.Message.Companion.getOptionalFloatingPointField","location":"packages/frontend/lib.protobuf/-message/-companion/get-optional-floating-point-field.html","searchKeys":["getOptionalFloatingPointField","fun getOptionalFloatingPointField(msg: Message, fieldNumber: Number): Number?","lib.protobuf.Message.Companion.getOptionalFloatingPointField"]},{"name":"fun getRepeatedFloatingPointField(msg: Message, fieldNumber: Number): Array<Number>","description":"lib.protobuf.Message.Companion.getRepeatedFloatingPointField","location":"packages/frontend/lib.protobuf/-message/-companion/get-repeated-floating-point-field.html","searchKeys":["getRepeatedFloatingPointField","fun getRepeatedFloatingPointField(msg: Message, fieldNumber: Number): Array<Number>","lib.protobuf.Message.Companion.getRepeatedFloatingPointField"]},{"name":"fun initialize(msg: Message, data: MessageArray, messageId: Number, suggestedPivot: Number, repeatedFields: Array<Number>? = definedExternally, oneofFields: Array<Array<Number>>? = definedExternally)","description":"lib.protobuf.Message.Companion.initialize","location":"packages/frontend/lib.protobuf/-message/-companion/initialize.html","searchKeys":["initialize","fun initialize(msg: Message, data: MessageArray, messageId: Number, suggestedPivot: Number, repeatedFields: Array<Number>? = definedExternally, oneofFields: Array<Array<Number>>? = definedExternally)","lib.protobuf.Message.Companion.initialize"]},{"name":"fun initialize(msg: Message, data: MessageArray, messageId: String, suggestedPivot: Number, repeatedFields: Array<Number>? = definedExternally, oneofFields: Array<Array<Number>>? = definedExternally)","description":"lib.protobuf.Message.Companion.initialize","location":"packages/frontend/lib.protobuf/-message/-companion/initialize.html","searchKeys":["initialize","fun initialize(msg: Message, data: MessageArray, messageId: String, suggestedPivot: Number, repeatedFields: Array<Number>? = definedExternally, oneofFields: Array<Array<Number>>? = definedExternally)","lib.protobuf.Message.Companion.initialize"]},{"name":"fun mul32x32(a: Number, b: Number): UInt64","description":"lib.protobuf.UInt64.Companion.mul32x32","location":"packages/frontend/lib.protobuf/-u-int64/-companion/mul32x32.html","searchKeys":["mul32x32","fun mul32x32(a: Number, b: Number): UInt64","lib.protobuf.UInt64.Companion.mul32x32"]},{"name":"fun registerMessageType(id: Number, constructor: Any)","description":"lib.protobuf.Message.Companion.registerMessageType","location":"packages/frontend/lib.protobuf/-message/-companion/register-message-type.html","searchKeys":["registerMessageType","fun registerMessageType(id: Number, constructor: Any)","lib.protobuf.Message.Companion.registerMessageType"]},{"name":"fun serializeBinaryToWriter(message: Message, writer: BinaryWriter)","description":"lib.protobuf.Message.Companion.serializeBinaryToWriter","location":"packages/frontend/lib.protobuf/-message/-companion/serialize-binary-to-writer.html","searchKeys":["serializeBinaryToWriter","fun serializeBinaryToWriter(message: Message, writer: BinaryWriter)","lib.protobuf.Message.Companion.serializeBinaryToWriter"]},{"name":"fun setField(msg: Message, fieldNumber: Number, value: Boolean?)","description":"lib.protobuf.Message.Companion.setField","location":"packages/frontend/lib.protobuf/-message/-companion/set-field.html","searchKeys":["setField","fun setField(msg: Message, fieldNumber: Number, value: Boolean?)","lib.protobuf.Message.Companion.setField"]},{"name":"fun setField(msg: Message, fieldNumber: Number, value: FieldValueArray?)","description":"lib.protobuf.Message.Companion.setField","location":"packages/frontend/lib.protobuf/-message/-companion/set-field.html","searchKeys":["setField","fun setField(msg: Message, fieldNumber: Number, value: FieldValueArray?)","lib.protobuf.Message.Companion.setField"]},{"name":"fun setField(msg: Message, fieldNumber: Number, value: Number?)","description":"lib.protobuf.Message.Companion.setField","location":"packages/frontend/lib.protobuf/-message/-companion/set-field.html","searchKeys":["setField","fun setField(msg: Message, fieldNumber: Number, value: Number?)","lib.protobuf.Message.Companion.setField"]},{"name":"fun setField(msg: Message, fieldNumber: Number, value: String?)","description":"lib.protobuf.Message.Companion.setField","location":"packages/frontend/lib.protobuf/-message/-companion/set-field.html","searchKeys":["setField","fun setField(msg: Message, fieldNumber: Number, value: String?)","lib.protobuf.Message.Companion.setField"]},{"name":"fun setField(msg: Message, fieldNumber: Number, value: Uint8Array?)","description":"lib.protobuf.Message.Companion.setField","location":"packages/frontend/lib.protobuf/-message/-companion/set-field.html","searchKeys":["setField","fun setField(msg: Message, fieldNumber: Number, value: Uint8Array?)","lib.protobuf.Message.Companion.setField"]},{"name":"fun setOneofField(msg: Message, fieldNumber: Number, oneof: Array<Number>, value: Boolean?)","description":"lib.protobuf.Message.Companion.setOneofField","location":"packages/frontend/lib.protobuf/-message/-companion/set-oneof-field.html","searchKeys":["setOneofField","fun setOneofField(msg: Message, fieldNumber: Number, oneof: Array<Number>, value: Boolean?)","lib.protobuf.Message.Companion.setOneofField"]},{"name":"fun setOneofField(msg: Message, fieldNumber: Number, oneof: Array<Number>, value: FieldValueArray?)","description":"lib.protobuf.Message.Companion.setOneofField","location":"packages/frontend/lib.protobuf/-message/-companion/set-oneof-field.html","searchKeys":["setOneofField","fun setOneofField(msg: Message, fieldNumber: Number, oneof: Array<Number>, value: FieldValueArray?)","lib.protobuf.Message.Companion.setOneofField"]},{"name":"fun setOneofField(msg: Message, fieldNumber: Number, oneof: Array<Number>, value: Number?)","description":"lib.protobuf.Message.Companion.setOneofField","location":"packages/frontend/lib.protobuf/-message/-companion/set-oneof-field.html","searchKeys":["setOneofField","fun setOneofField(msg: Message, fieldNumber: Number, oneof: Array<Number>, value: Number?)","lib.protobuf.Message.Companion.setOneofField"]},{"name":"fun setOneofField(msg: Message, fieldNumber: Number, oneof: Array<Number>, value: String?)","description":"lib.protobuf.Message.Companion.setOneofField","location":"packages/frontend/lib.protobuf/-message/-companion/set-oneof-field.html","searchKeys":["setOneofField","fun setOneofField(msg: Message, fieldNumber: Number, oneof: Array<Number>, value: String?)","lib.protobuf.Message.Companion.setOneofField"]},{"name":"fun setOneofField(msg: Message, fieldNumber: Number, oneof: Array<Number>, value: Uint8Array?)","description":"lib.protobuf.Message.Companion.setOneofField","location":"packages/frontend/lib.protobuf/-message/-companion/set-oneof-field.html","searchKeys":["setOneofField","fun setOneofField(msg: Message, fieldNumber: Number, oneof: Array<Number>, value: Uint8Array?)","lib.protobuf.Message.Companion.setOneofField"]},{"name":"fun setOneofWrapperField(msg: Message, fieldNumber: Number, oneof: Array<Number>, value: Any)","description":"lib.protobuf.Message.Companion.setOneofWrapperField","location":"packages/frontend/lib.protobuf/-message/-companion/set-oneof-wrapper-field.html","searchKeys":["setOneofWrapperField","fun setOneofWrapperField(msg: Message, fieldNumber: Number, oneof: Array<Number>, value: Any)","lib.protobuf.Message.Companion.setOneofWrapperField"]},{"name":"fun supportedLocalesOf(locales: Any, options: CollatorOptions = definedExternally): Array<String>","description":"lib.tsstdlib.intl.Collator.Companion.supportedLocalesOf","location":"packages/frontend/lib.tsstdlib.intl/-collator/-companion/supported-locales-of.html","searchKeys":["supportedLocalesOf","fun supportedLocalesOf(locales: Any, options: CollatorOptions = definedExternally): Array<String>","lib.tsstdlib.intl.Collator.Companion.supportedLocalesOf"]},{"name":"fun supportedLocalesOf(locales: Any, options: DateTimeFormatOptions = definedExternally): Array<String>","description":"lib.tsstdlib.intl.DateTimeFormat.Companion.supportedLocalesOf","location":"packages/frontend/lib.tsstdlib.intl/-date-time-format/-companion/supported-locales-of.html","searchKeys":["supportedLocalesOf","fun supportedLocalesOf(locales: Any, options: DateTimeFormatOptions = definedExternally): Array<String>","lib.tsstdlib.intl.DateTimeFormat.Companion.supportedLocalesOf"]},{"name":"fun supportedLocalesOf(locales: Any, options: NumberFormatOptions = definedExternally): Array<String>","description":"lib.tsstdlib.intl.NumberFormat.Companion.supportedLocalesOf","location":"packages/frontend/lib.tsstdlib.intl/-number-format/-companion/supported-locales-of.html","searchKeys":["supportedLocalesOf","fun supportedLocalesOf(locales: Any, options: NumberFormatOptions = definedExternally): Array<String>","lib.tsstdlib.intl.NumberFormat.Companion.supportedLocalesOf"]},{"name":"fun toMap(field: Array<Any>, mapKeyGetterFn: (field: Any) -> String, toObjectFn: StaticToObject = definedExternally, includeInstance: Boolean = definedExternally)","description":"lib.protobuf.Message.Companion.toMap","location":"packages/frontend/lib.protobuf/-message/-companion/to-map.html","searchKeys":["toMap","fun toMap(field: Array<Any>, mapKeyGetterFn: (field: Any) -> String, toObjectFn: StaticToObject = definedExternally, includeInstance: Boolean = definedExternally)","lib.protobuf.Message.Companion.toMap"]},{"name":"fun toObject(includeInstance: Boolean, msg: Message): Any","description":"lib.protobuf.Message.Companion.toObject","location":"packages/frontend/lib.protobuf/-message/-companion/to-object.html","searchKeys":["toObject","fun toObject(includeInstance: Boolean, msg: Message): Any","lib.protobuf.Message.Companion.toObject"]},{"name":"fun toObjectExtension(msg: Message, obj: Any, extensions: T$0, getExtensionFn: (fieldInfo: ExtensionFieldInfo<Message>) -> Message, includeInstance: Boolean = definedExternally)","description":"lib.protobuf.Message.Companion.toObjectExtension","location":"packages/frontend/lib.protobuf/-message/-companion/to-object-extension.html","searchKeys":["toObjectExtension","fun toObjectExtension(msg: Message, obj: Any, extensions: T$0, getExtensionFn: (fieldInfo: ExtensionFieldInfo<Message>) -> Message, includeInstance: Boolean = definedExternally)","lib.protobuf.Message.Companion.toObjectExtension"]},{"name":"fun valueOf(value: String): FieldType","description":"lib.protobuf.FieldType.valueOf","location":"packages/frontend/lib.protobuf/-field-type/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): FieldType","lib.protobuf.FieldType.valueOf"]},{"name":"fun valueOf(value: String): WireType","description":"lib.protobuf.WireType.valueOf","location":"packages/frontend/lib.protobuf/-wire-type/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): WireType","lib.protobuf.WireType.valueOf"]},{"name":"fun values(): Array<FieldType>","description":"lib.protobuf.FieldType.values","location":"packages/frontend/lib.protobuf/-field-type/values.html","searchKeys":["values","fun values(): Array<FieldType>","lib.protobuf.FieldType.values"]},{"name":"fun values(): Array<WireType>","description":"lib.protobuf.WireType.values","location":"packages/frontend/lib.protobuf/-wire-type/values.html","searchKeys":["values","fun values(): Array<WireType>","lib.protobuf.WireType.values"]},{"name":"inline operator fun <T> ArrayLike<T>.get(n: Number): T?","description":"lib.tsstdlib.get","location":"packages/frontend/lib.tsstdlib/get.html","searchKeys":["get","inline operator fun <T> ArrayLike<T>.get(n: Number): T?","lib.tsstdlib.get"]},{"name":"inline operator fun <T> ArrayLike<T>.set(n: Number, value: T)","description":"lib.tsstdlib.set","location":"packages/frontend/lib.tsstdlib/set.html","searchKeys":["set","inline operator fun <T> ArrayLike<T>.set(n: Number, value: T)","lib.tsstdlib.set"]},{"name":"inline operator fun DateConstructor.invoke(): String","description":"lib.tsstdlib.invoke","location":"packages/frontend/lib.tsstdlib/invoke.html","searchKeys":["invoke","inline operator fun DateConstructor.invoke(): String","lib.tsstdlib.invoke"]},{"name":"interface Iterator<T>","description":"lib.protobuf.Map.Iterator","location":"packages/frontend/lib.protobuf/-map/-iterator/index.html","searchKeys":["Iterator","interface Iterator<T>","lib.protobuf.Map.Iterator"]},{"name":"interface IteratorResult<T>","description":"lib.protobuf.Map.IteratorResult","location":"packages/frontend/lib.protobuf/-map/-iterator-result/index.html","searchKeys":["IteratorResult","interface IteratorResult<T>","lib.protobuf.Map.IteratorResult"]},{"name":"object Companion","description":"lib.protobuf.BinaryDecoder.Companion","location":"packages/frontend/lib.protobuf/-binary-decoder/-companion/index.html","searchKeys":["Companion","object Companion","lib.protobuf.BinaryDecoder.Companion"]},{"name":"object Companion","description":"lib.protobuf.BinaryIterator.Companion","location":"packages/frontend/lib.protobuf/-binary-iterator/-companion/index.html","searchKeys":["Companion","object Companion","lib.protobuf.BinaryIterator.Companion"]},{"name":"object Companion","description":"lib.protobuf.BinaryReader.Companion","location":"packages/frontend/lib.protobuf/-binary-reader/-companion/index.html","searchKeys":["Companion","object Companion","lib.protobuf.BinaryReader.Companion"]},{"name":"object Companion","description":"lib.protobuf.Int64.Companion","location":"packages/frontend/lib.protobuf/-int64/-companion/index.html","searchKeys":["Companion","object Companion","lib.protobuf.Int64.Companion"]},{"name":"object Companion","description":"lib.protobuf.Map.Companion","location":"packages/frontend/lib.protobuf/-map/-companion/index.html","searchKeys":["Companion","object Companion","lib.protobuf.Map.Companion"]},{"name":"object Companion","description":"lib.protobuf.Message.Companion","location":"packages/frontend/lib.protobuf/-message/-companion/index.html","searchKeys":["Companion","object Companion","lib.protobuf.Message.Companion"]},{"name":"object Companion","description":"lib.protobuf.UInt64.Companion","location":"packages/frontend/lib.protobuf/-u-int64/-companion/index.html","searchKeys":["Companion","object Companion","lib.protobuf.UInt64.Companion"]},{"name":"object Companion","description":"lib.tsstdlib.intl.Collator.Companion","location":"packages/frontend/lib.tsstdlib.intl/-collator/-companion/index.html","searchKeys":["Companion","object Companion","lib.tsstdlib.intl.Collator.Companion"]},{"name":"object Companion","description":"lib.tsstdlib.intl.DateTimeFormat.Companion","location":"packages/frontend/lib.tsstdlib.intl/-date-time-format/-companion/index.html","searchKeys":["Companion","object Companion","lib.tsstdlib.intl.DateTimeFormat.Companion"]},{"name":"object Companion","description":"lib.tsstdlib.intl.NumberFormat.Companion","location":"packages/frontend/lib.tsstdlib.intl/-number-format/-companion/index.html","searchKeys":["Companion","object Companion","lib.tsstdlib.intl.NumberFormat.Companion"]},{"name":"open external class BinaryDecoder","description":"lib.protobuf.BinaryDecoder","location":"packages/frontend/lib.protobuf/-binary-decoder/index.html","searchKeys":["BinaryDecoder","open external class BinaryDecoder","lib.protobuf.BinaryDecoder"]},{"name":"open external class BinaryEncoder","description":"lib.protobuf.BinaryEncoder","location":"packages/frontend/lib.protobuf/-binary-encoder/index.html","searchKeys":["BinaryEncoder","open external class BinaryEncoder","lib.protobuf.BinaryEncoder"]},{"name":"open external class BinaryIterator(decoder: BinaryDecoder = definedExternally, next: () -> Any? = definedExternally, elements: Array<Any> = definedExternally)","description":"lib.protobuf.BinaryIterator","location":"packages/frontend/lib.protobuf/-binary-iterator/index.html","searchKeys":["BinaryIterator","open external class BinaryIterator(decoder: BinaryDecoder = definedExternally, next: () -> Any? = definedExternally, elements: Array<Any> = definedExternally)","lib.protobuf.BinaryIterator"]},{"name":"open external class BinaryReader","description":"lib.protobuf.BinaryReader","location":"packages/frontend/lib.protobuf/-binary-reader/index.html","searchKeys":["BinaryReader","open external class BinaryReader","lib.protobuf.BinaryReader"]},{"name":"open external class BinaryWriter","description":"lib.protobuf.BinaryWriter","location":"packages/frontend/lib.protobuf/-binary-writer/index.html","searchKeys":["BinaryWriter","open external class BinaryWriter","lib.protobuf.BinaryWriter"]},{"name":"open external class ExtensionFieldBinaryInfo<T>(fieldInfo: ExtensionFieldInfo<T>, binaryReaderFn: BinaryRead, binaryWriterFn: BinaryWrite, opt_binaryMessageSerializeFn: (msg: Message, writer: BinaryWriter) -> Unit, opt_binaryMessageDeserializeFn: (msg: Message, reader: BinaryReader) -> Message, opt_isPacked: Boolean)","description":"lib.protobuf.ExtensionFieldBinaryInfo","location":"packages/frontend/lib.protobuf/-extension-field-binary-info/index.html","searchKeys":["ExtensionFieldBinaryInfo","open external class ExtensionFieldBinaryInfo<T>(fieldInfo: ExtensionFieldInfo<T>, binaryReaderFn: BinaryRead, binaryWriterFn: BinaryWrite, opt_binaryMessageSerializeFn: (msg: Message, writer: BinaryWriter) -> Unit, opt_binaryMessageDeserializeFn: (msg: Message, reader: BinaryReader) -> Message, opt_isPacked: Boolean)","lib.protobuf.ExtensionFieldBinaryInfo"]},{"name":"open external class ExtensionFieldInfo<T>(fieldIndex: Number, fieldName: T$2, ctor: Any, toObjectFn: StaticToObject, isRepeated: Number)","description":"lib.protobuf.ExtensionFieldInfo","location":"packages/frontend/lib.protobuf/-extension-field-info/index.html","searchKeys":["ExtensionFieldInfo","open external class ExtensionFieldInfo<T>(fieldIndex: Number, fieldName: T$2, ctor: Any, toObjectFn: StaticToObject, isRepeated: Number)","lib.protobuf.ExtensionFieldInfo"]},{"name":"open external class Int64(lo: Number, hi: Number)","description":"lib.protobuf.Int64","location":"packages/frontend/lib.protobuf/-int64/index.html","searchKeys":["Int64","open external class Int64(lo: Number, hi: Number)","lib.protobuf.Int64"]},{"name":"open external class Map<K, V>(arr: Array<Any>, valueCtor: Any = definedExternally)","description":"lib.protobuf.Map","location":"packages/frontend/lib.protobuf/-map/index.html","searchKeys":["Map","open external class Map<K, V>(arr: Array<Any>, valueCtor: Any = definedExternally)","lib.protobuf.Map"]},{"name":"open external class Message","description":"lib.protobuf.Message","location":"packages/frontend/lib.protobuf/-message/index.html","searchKeys":["Message","open external class Message","lib.protobuf.Message"]},{"name":"open external class UInt64(lo: Number, hi: Number)","description":"lib.protobuf.UInt64","location":"packages/frontend/lib.protobuf/-u-int64/index.html","searchKeys":["UInt64","open external class UInt64(lo: Number, hi: Number)","lib.protobuf.UInt64"]},{"name":"open external class VarDate","description":"lib.tsstdlib.VarDate","location":"packages/frontend/lib.tsstdlib/-var-date/index.html","searchKeys":["VarDate","open external class VarDate","lib.tsstdlib.VarDate"]},{"name":"open fun <T> getExtension(fieldInfo: ExtensionFieldInfo<T>): T","description":"lib.protobuf.Message.getExtension","location":"packages/frontend/lib.protobuf/-message/get-extension.html","searchKeys":["getExtension","open fun <T> getExtension(fieldInfo: ExtensionFieldInfo<T>): T","lib.protobuf.Message.getExtension"]},{"name":"open fun <T> readBinaryExtension(proto: Message, reader: BinaryReader, extensions: T$1, setExtensionFn: (fieldInfo: ExtensionFieldInfo<T>, param_val: T) -> Unit)","description":"lib.protobuf.Message.readBinaryExtension","location":"packages/frontend/lib.protobuf/-message/read-binary-extension.html","searchKeys":["readBinaryExtension","open fun <T> readBinaryExtension(proto: Message, reader: BinaryReader, extensions: T$1, setExtensionFn: (fieldInfo: ExtensionFieldInfo<T>, param_val: T) -> Unit)","lib.protobuf.Message.readBinaryExtension"]},{"name":"open fun <T> serializeBinaryExtensions(proto: Message, writer: BinaryWriter, extensions: T$1, getExtensionFn: (fieldInfo: ExtensionFieldInfo<T>) -> T)","description":"lib.protobuf.Message.serializeBinaryExtensions","location":"packages/frontend/lib.protobuf/-message/serialize-binary-extensions.html","searchKeys":["serializeBinaryExtensions","open fun <T> serializeBinaryExtensions(proto: Message, writer: BinaryWriter, extensions: T$1, getExtensionFn: (fieldInfo: ExtensionFieldInfo<T>) -> T)","lib.protobuf.Message.serializeBinaryExtensions"]},{"name":"open fun <T> setExtension(fieldInfo: ExtensionFieldInfo<T>, value: T)","description":"lib.protobuf.Message.setExtension","location":"packages/frontend/lib.protobuf/-message/set-extension.html","searchKeys":["setExtension","open fun <T> setExtension(fieldInfo: ExtensionFieldInfo<T>, value: T)","lib.protobuf.Message.setExtension"]},{"name":"open fun <VO> toObject(includeInstance: Boolean, valueToObject: (includeInstance: Boolean, valueWrapper: V) -> VO): Array<dynamic>","description":"lib.protobuf.Map.toObject","location":"packages/frontend/lib.protobuf/-map/to-object.html","searchKeys":["toObject","open fun <VO> toObject(includeInstance: Boolean, valueToObject: (includeInstance: Boolean, valueWrapper: V) -> VO): Array<dynamic>","lib.protobuf.Map.toObject"]},{"name":"open fun add(other: Int64): Int64","description":"lib.protobuf.Int64.add","location":"packages/frontend/lib.protobuf/-int64/add.html","searchKeys":["add","open fun add(other: Int64): Int64","lib.protobuf.Int64.add"]},{"name":"open fun add(other: UInt64): UInt64","description":"lib.protobuf.UInt64.add","location":"packages/frontend/lib.protobuf/-u-int64/add.html","searchKeys":["add","open fun add(other: UInt64): UInt64","lib.protobuf.UInt64.add"]},{"name":"open fun advance(count: Number)","description":"lib.protobuf.BinaryDecoder.advance","location":"packages/frontend/lib.protobuf/-binary-decoder/advance.html","searchKeys":["advance","open fun advance(count: Number)","lib.protobuf.BinaryDecoder.advance"]},{"name":"open fun advance(count: Number)","description":"lib.protobuf.BinaryReader.advance","location":"packages/frontend/lib.protobuf/-binary-reader/advance.html","searchKeys":["advance","open fun advance(count: Number)","lib.protobuf.BinaryReader.advance"]},{"name":"open fun alloc(): BinaryReader","description":"lib.protobuf.BinaryReader.alloc","location":"packages/frontend/lib.protobuf/-binary-reader/alloc.html","searchKeys":["alloc","open fun alloc(): BinaryReader","lib.protobuf.BinaryReader.alloc"]},{"name":"open fun alloc(bytes: Array<Number> = definedExternally): BinaryReader","description":"lib.protobuf.BinaryReader.alloc","location":"packages/frontend/lib.protobuf/-binary-reader/alloc.html","searchKeys":["alloc","open fun alloc(bytes: Array<Number> = definedExternally): BinaryReader","lib.protobuf.BinaryReader.alloc"]},{"name":"open fun alloc(bytes: Array<Number> = definedExternally, start: Number = definedExternally): BinaryReader","description":"lib.protobuf.BinaryReader.alloc","location":"packages/frontend/lib.protobuf/-binary-reader/alloc.html","searchKeys":["alloc","open fun alloc(bytes: Array<Number> = definedExternally, start: Number = definedExternally): BinaryReader","lib.protobuf.BinaryReader.alloc"]},{"name":"open fun alloc(bytes: Array<Number> = definedExternally, start: Number = definedExternally, length: Number = definedExternally): BinaryReader","description":"lib.protobuf.BinaryReader.alloc","location":"packages/frontend/lib.protobuf/-binary-reader/alloc.html","searchKeys":["alloc","open fun alloc(bytes: Array<Number> = definedExternally, start: Number = definedExternally, length: Number = definedExternally): BinaryReader","lib.protobuf.BinaryReader.alloc"]},{"name":"open fun alloc(bytes: ArrayBuffer = definedExternally): BinaryReader","description":"lib.protobuf.BinaryReader.alloc","location":"packages/frontend/lib.protobuf/-binary-reader/alloc.html","searchKeys":["alloc","open fun alloc(bytes: ArrayBuffer = definedExternally): BinaryReader","lib.protobuf.BinaryReader.alloc"]},{"name":"open fun alloc(bytes: ArrayBuffer = definedExternally, start: Number = definedExternally): BinaryReader","description":"lib.protobuf.BinaryReader.alloc","location":"packages/frontend/lib.protobuf/-binary-reader/alloc.html","searchKeys":["alloc","open fun alloc(bytes: ArrayBuffer = definedExternally, start: Number = definedExternally): BinaryReader","lib.protobuf.BinaryReader.alloc"]},{"name":"open fun alloc(bytes: ArrayBuffer = definedExternally, start: Number = definedExternally, length: Number = definedExternally): BinaryReader","description":"lib.protobuf.BinaryReader.alloc","location":"packages/frontend/lib.protobuf/-binary-reader/alloc.html","searchKeys":["alloc","open fun alloc(bytes: ArrayBuffer = definedExternally, start: Number = definedExternally, length: Number = definedExternally): BinaryReader","lib.protobuf.BinaryReader.alloc"]},{"name":"open fun alloc(bytes: String = definedExternally): BinaryReader","description":"lib.protobuf.BinaryReader.alloc","location":"packages/frontend/lib.protobuf/-binary-reader/alloc.html","searchKeys":["alloc","open fun alloc(bytes: String = definedExternally): BinaryReader","lib.protobuf.BinaryReader.alloc"]},{"name":"open fun alloc(bytes: String = definedExternally, start: Number = definedExternally): BinaryReader","description":"lib.protobuf.BinaryReader.alloc","location":"packages/frontend/lib.protobuf/-binary-reader/alloc.html","searchKeys":["alloc","open fun alloc(bytes: String = definedExternally, start: Number = definedExternally): BinaryReader","lib.protobuf.BinaryReader.alloc"]},{"name":"open fun alloc(bytes: String = definedExternally, start: Number = definedExternally, length: Number = definedExternally): BinaryReader","description":"lib.protobuf.BinaryReader.alloc","location":"packages/frontend/lib.protobuf/-binary-reader/alloc.html","searchKeys":["alloc","open fun alloc(bytes: String = definedExternally, start: Number = definedExternally, length: Number = definedExternally): BinaryReader","lib.protobuf.BinaryReader.alloc"]},{"name":"open fun alloc(bytes: Uint8Array = definedExternally): BinaryReader","description":"lib.protobuf.BinaryReader.alloc","location":"packages/frontend/lib.protobuf/-binary-reader/alloc.html","searchKeys":["alloc","open fun alloc(bytes: Uint8Array = definedExternally): BinaryReader","lib.protobuf.BinaryReader.alloc"]},{"name":"open fun alloc(bytes: Uint8Array = definedExternally, start: Number = definedExternally): BinaryReader","description":"lib.protobuf.BinaryReader.alloc","location":"packages/frontend/lib.protobuf/-binary-reader/alloc.html","searchKeys":["alloc","open fun alloc(bytes: Uint8Array = definedExternally, start: Number = definedExternally): BinaryReader","lib.protobuf.BinaryReader.alloc"]},{"name":"open fun alloc(bytes: Uint8Array = definedExternally, start: Number = definedExternally, length: Number = definedExternally): BinaryReader","description":"lib.protobuf.BinaryReader.alloc","location":"packages/frontend/lib.protobuf/-binary-reader/alloc.html","searchKeys":["alloc","open fun alloc(bytes: Uint8Array = definedExternally, start: Number = definedExternally, length: Number = definedExternally): BinaryReader","lib.protobuf.BinaryReader.alloc"]},{"name":"open fun atEnd(): Boolean","description":"lib.protobuf.BinaryDecoder.atEnd","location":"packages/frontend/lib.protobuf/-binary-decoder/at-end.html","searchKeys":["atEnd","open fun atEnd(): Boolean","lib.protobuf.BinaryDecoder.atEnd"]},{"name":"open fun atEnd(): Boolean","description":"lib.protobuf.BinaryIterator.atEnd","location":"packages/frontend/lib.protobuf/-binary-iterator/at-end.html","searchKeys":["atEnd","open fun atEnd(): Boolean","lib.protobuf.BinaryIterator.atEnd"]},{"name":"open fun beginSubMessage(field: Number)","description":"lib.protobuf.BinaryWriter.beginSubMessage","location":"packages/frontend/lib.protobuf/-binary-writer/begin-sub-message.html","searchKeys":["beginSubMessage","open fun beginSubMessage(field: Number)","lib.protobuf.BinaryWriter.beginSubMessage"]},{"name":"open fun clear()","description":"lib.protobuf.BinaryDecoder.clear","location":"packages/frontend/lib.protobuf/-binary-decoder/clear.html","searchKeys":["clear","open fun clear()","lib.protobuf.BinaryDecoder.clear"]},{"name":"open fun clear()","description":"lib.protobuf.BinaryIterator.clear","location":"packages/frontend/lib.protobuf/-binary-iterator/clear.html","searchKeys":["clear","open fun clear()","lib.protobuf.BinaryIterator.clear"]},{"name":"open fun clear()","description":"lib.protobuf.Map.clear","location":"packages/frontend/lib.protobuf/-map/clear.html","searchKeys":["clear","open fun clear()","lib.protobuf.Map.clear"]},{"name":"open fun clone(): BinaryDecoder","description":"lib.protobuf.BinaryDecoder.clone","location":"packages/frontend/lib.protobuf/-binary-decoder/clone.html","searchKeys":["clone","open fun clone(): BinaryDecoder","lib.protobuf.BinaryDecoder.clone"]},{"name":"open fun clone(): Int64","description":"lib.protobuf.Int64.clone","location":"packages/frontend/lib.protobuf/-int64/clone.html","searchKeys":["clone","open fun clone(): Int64","lib.protobuf.Int64.clone"]},{"name":"open fun clone(): Message","description":"lib.protobuf.Message.clone","location":"packages/frontend/lib.protobuf/-message/clone.html","searchKeys":["clone","open fun clone(): Message","lib.protobuf.Message.clone"]},{"name":"open fun clone(): UInt64","description":"lib.protobuf.UInt64.clone","location":"packages/frontend/lib.protobuf/-u-int64/clone.html","searchKeys":["clone","open fun clone(): UInt64","lib.protobuf.UInt64.clone"]},{"name":"open fun cloneMessage(): Message","description":"lib.protobuf.Message.cloneMessage","location":"packages/frontend/lib.protobuf/-message/clone-message.html","searchKeys":["cloneMessage","open fun cloneMessage(): Message","lib.protobuf.Message.cloneMessage"]},{"name":"open fun cmp(other: UInt64): Number","description":"lib.protobuf.UInt64.cmp","location":"packages/frontend/lib.protobuf/-u-int64/cmp.html","searchKeys":["cmp","open fun cmp(other: UInt64): Number","lib.protobuf.UInt64.cmp"]},{"name":"open fun del(key: K): Boolean","description":"lib.protobuf.Map.del","location":"packages/frontend/lib.protobuf/-map/del.html","searchKeys":["del","open fun del(key: K): Boolean","lib.protobuf.Map.del"]},{"name":"open fun div(divisor: Number): dynamic","description":"lib.protobuf.UInt64.div","location":"packages/frontend/lib.protobuf/-u-int64/div.html","searchKeys":["div","open fun div(divisor: Number): dynamic","lib.protobuf.UInt64.div"]},{"name":"open fun end(): Array<Number>","description":"lib.protobuf.BinaryEncoder.end","location":"packages/frontend/lib.protobuf/-binary-encoder/end.html","searchKeys":["end","open fun end(): Array<Number>","lib.protobuf.BinaryEncoder.end"]},{"name":"open fun endSubMessage(field: Number)","description":"lib.protobuf.BinaryWriter.endSubMessage","location":"packages/frontend/lib.protobuf/-binary-writer/end-sub-message.html","searchKeys":["endSubMessage","open fun endSubMessage(field: Number)","lib.protobuf.BinaryWriter.endSubMessage"]},{"name":"open fun entries(): Map.Iterator<dynamic>","description":"lib.protobuf.Map.entries","location":"packages/frontend/lib.protobuf/-map/entries.html","searchKeys":["entries","open fun entries(): Map.Iterator<dynamic>","lib.protobuf.Map.entries"]},{"name":"open fun forEach(callback: (entry: V, key: K) -> Unit, thisArg: Any = definedExternally)","description":"lib.protobuf.Map.forEach","location":"packages/frontend/lib.protobuf/-map/for-each.html","searchKeys":["forEach","open fun forEach(callback: (entry: V, key: K) -> Unit, thisArg: Any = definedExternally)","lib.protobuf.Map.forEach"]},{"name":"open fun free()","description":"lib.protobuf.BinaryDecoder.free","location":"packages/frontend/lib.protobuf/-binary-decoder/free.html","searchKeys":["free","open fun free()","lib.protobuf.BinaryDecoder.free"]},{"name":"open fun free()","description":"lib.protobuf.BinaryIterator.free","location":"packages/frontend/lib.protobuf/-binary-iterator/free.html","searchKeys":["free","open fun free()","lib.protobuf.BinaryIterator.free"]},{"name":"open fun free()","description":"lib.protobuf.BinaryReader.free","location":"packages/frontend/lib.protobuf/-binary-reader/free.html","searchKeys":["free","open fun free()","lib.protobuf.BinaryReader.free"]},{"name":"open fun get(): dynamic","description":"lib.protobuf.BinaryIterator.get","location":"packages/frontend/lib.protobuf/-binary-iterator/get.html","searchKeys":["get","open fun get(): dynamic","lib.protobuf.BinaryIterator.get"]},{"name":"open fun get(key: K): V?","description":"lib.protobuf.Map.get","location":"packages/frontend/lib.protobuf/-map/get.html","searchKeys":["get","open fun get(key: K): V?","lib.protobuf.Map.get"]},{"name":"open fun getBuffer(): Uint8Array","description":"lib.protobuf.BinaryDecoder.getBuffer","location":"packages/frontend/lib.protobuf/-binary-decoder/get-buffer.html","searchKeys":["getBuffer","open fun getBuffer(): Uint8Array","lib.protobuf.BinaryDecoder.getBuffer"]},{"name":"open fun getBuffer(): Uint8Array","description":"lib.protobuf.BinaryReader.getBuffer","location":"packages/frontend/lib.protobuf/-binary-reader/get-buffer.html","searchKeys":["getBuffer","open fun getBuffer(): Uint8Array","lib.protobuf.BinaryReader.getBuffer"]},{"name":"open fun getCursor(): Number","description":"lib.protobuf.BinaryDecoder.getCursor","location":"packages/frontend/lib.protobuf/-binary-decoder/get-cursor.html","searchKeys":["getCursor","open fun getCursor(): Number","lib.protobuf.BinaryDecoder.getCursor"]},{"name":"open fun getCursor(): Number","description":"lib.protobuf.BinaryReader.getCursor","location":"packages/frontend/lib.protobuf/-binary-reader/get-cursor.html","searchKeys":["getCursor","open fun getCursor(): Number","lib.protobuf.BinaryReader.getCursor"]},{"name":"open fun getEnd(): Number","description":"lib.protobuf.BinaryDecoder.getEnd","location":"packages/frontend/lib.protobuf/-binary-decoder/get-end.html","searchKeys":["getEnd","open fun getEnd(): Number","lib.protobuf.BinaryDecoder.getEnd"]},{"name":"open fun getEntryList(): Array<dynamic>","description":"lib.protobuf.Map.getEntryList","location":"packages/frontend/lib.protobuf/-map/get-entry-list.html","searchKeys":["getEntryList","open fun getEntryList(): Array<dynamic>","lib.protobuf.Map.getEntryList"]},{"name":"open fun getError(): Boolean","description":"lib.protobuf.BinaryDecoder.getError","location":"packages/frontend/lib.protobuf/-binary-decoder/get-error.html","searchKeys":["getError","open fun getError(): Boolean","lib.protobuf.BinaryDecoder.getError"]},{"name":"open fun getError(): Boolean","description":"lib.protobuf.BinaryReader.getError","location":"packages/frontend/lib.protobuf/-binary-reader/get-error.html","searchKeys":["getError","open fun getError(): Boolean","lib.protobuf.BinaryReader.getError"]},{"name":"open fun getFieldCursor(): Number","description":"lib.protobuf.BinaryReader.getFieldCursor","location":"packages/frontend/lib.protobuf/-binary-reader/get-field-cursor.html","searchKeys":["getFieldCursor","open fun getFieldCursor(): Number","lib.protobuf.BinaryReader.getFieldCursor"]},{"name":"open fun getFieldDecoder(): BinaryDecoder","description":"lib.protobuf.BinaryReader.getFieldDecoder","location":"packages/frontend/lib.protobuf/-binary-reader/get-field-decoder.html","searchKeys":["getFieldDecoder","open fun getFieldDecoder(): BinaryDecoder","lib.protobuf.BinaryReader.getFieldDecoder"]},{"name":"open fun getFieldNumber(): Number","description":"lib.protobuf.BinaryReader.getFieldNumber","location":"packages/frontend/lib.protobuf/-binary-reader/get-field-number.html","searchKeys":["getFieldNumber","open fun getFieldNumber(): Number","lib.protobuf.BinaryReader.getFieldNumber"]},{"name":"open fun getJsPbMessageId(): String?","description":"lib.protobuf.Message.getJsPbMessageId","location":"packages/frontend/lib.protobuf/-message/get-js-pb-message-id.html","searchKeys":["getJsPbMessageId","open fun getJsPbMessageId(): String?","lib.protobuf.Message.getJsPbMessageId"]},{"name":"open fun getLength(): Number","description":"lib.protobuf.Map.getLength","location":"packages/frontend/lib.protobuf/-map/get-length.html","searchKeys":["getLength","open fun getLength(): Number","lib.protobuf.Map.getLength"]},{"name":"open fun getResultBase64String(): String","description":"lib.protobuf.BinaryWriter.getResultBase64String","location":"packages/frontend/lib.protobuf/-binary-writer/get-result-base64-string.html","searchKeys":["getResultBase64String","open fun getResultBase64String(): String","lib.protobuf.BinaryWriter.getResultBase64String"]},{"name":"open fun getResultBuffer(): Uint8Array","description":"lib.protobuf.BinaryWriter.getResultBuffer","location":"packages/frontend/lib.protobuf/-binary-writer/get-result-buffer.html","searchKeys":["getResultBuffer","open fun getResultBuffer(): Uint8Array","lib.protobuf.BinaryWriter.getResultBuffer"]},{"name":"open fun getWireType(): WireType","description":"lib.protobuf.BinaryReader.getWireType","location":"packages/frontend/lib.protobuf/-binary-reader/get-wire-type.html","searchKeys":["getWireType","open fun getWireType(): WireType","lib.protobuf.BinaryReader.getWireType"]},{"name":"open fun has(key: K): Boolean","description":"lib.protobuf.Map.has","location":"packages/frontend/lib.protobuf/-map/has.html","searchKeys":["has","open fun has(key: K): Boolean","lib.protobuf.Map.has"]},{"name":"open fun isDelimited(): Boolean","description":"lib.protobuf.BinaryReader.isDelimited","location":"packages/frontend/lib.protobuf/-binary-reader/is-delimited.html","searchKeys":["isDelimited","open fun isDelimited(): Boolean","lib.protobuf.BinaryReader.isDelimited"]},{"name":"open fun isEndGroup(): Boolean","description":"lib.protobuf.BinaryReader.isEndGroup","location":"packages/frontend/lib.protobuf/-binary-reader/is-end-group.html","searchKeys":["isEndGroup","open fun isEndGroup(): Boolean","lib.protobuf.BinaryReader.isEndGroup"]},{"name":"open fun isMessageType(): Boolean","description":"lib.protobuf.ExtensionFieldInfo.isMessageType","location":"packages/frontend/lib.protobuf/-extension-field-info/is-message-type.html","searchKeys":["isMessageType","open fun isMessageType(): Boolean","lib.protobuf.ExtensionFieldInfo.isMessageType"]},{"name":"open fun keys(): Map.Iterator<K>","description":"lib.protobuf.Map.keys","location":"packages/frontend/lib.protobuf/-map/keys.html","searchKeys":["keys","open fun keys(): Map.Iterator<K>","lib.protobuf.Map.keys"]},{"name":"open fun leftShift(): UInt64","description":"lib.protobuf.UInt64.leftShift","location":"packages/frontend/lib.protobuf/-u-int64/left-shift.html","searchKeys":["leftShift","open fun leftShift(): UInt64","lib.protobuf.UInt64.leftShift"]},{"name":"open fun length(): Number","description":"lib.protobuf.BinaryEncoder.length","location":"packages/frontend/lib.protobuf/-binary-encoder/length.html","searchKeys":["length","open fun length(): Number","lib.protobuf.BinaryEncoder.length"]},{"name":"open fun lsb(): Boolean","description":"lib.protobuf.UInt64.lsb","location":"packages/frontend/lib.protobuf/-u-int64/lsb.html","searchKeys":["lsb","open fun lsb(): Boolean","lib.protobuf.UInt64.lsb"]},{"name":"open fun maybeWriteSerializedMessage(bytes: Uint8Array = definedExternally, start: Number = definedExternally, end: Number = definedExternally)","description":"lib.protobuf.BinaryWriter.maybeWriteSerializedMessage","location":"packages/frontend/lib.protobuf/-binary-writer/maybe-write-serialized-message.html","searchKeys":["maybeWriteSerializedMessage","open fun maybeWriteSerializedMessage(bytes: Uint8Array = definedExternally, start: Number = definedExternally, end: Number = definedExternally)","lib.protobuf.BinaryWriter.maybeWriteSerializedMessage"]},{"name":"open fun msb(): Boolean","description":"lib.protobuf.UInt64.msb","location":"packages/frontend/lib.protobuf/-u-int64/msb.html","searchKeys":["msb","open fun msb(): Boolean","lib.protobuf.UInt64.msb"]},{"name":"open fun mul(a: Number): UInt64","description":"lib.protobuf.UInt64.mul","location":"packages/frontend/lib.protobuf/-u-int64/mul.html","searchKeys":["mul","open fun mul(a: Number): UInt64","lib.protobuf.UInt64.mul"]},{"name":"open fun next(): dynamic","description":"lib.protobuf.BinaryIterator.next","location":"packages/frontend/lib.protobuf/-binary-iterator/next.html","searchKeys":["next","open fun next(): dynamic","lib.protobuf.BinaryIterator.next"]},{"name":"open fun nextField(): Boolean","description":"lib.protobuf.BinaryReader.nextField","location":"packages/frontend/lib.protobuf/-binary-reader/next-field.html","searchKeys":["nextField","open fun nextField(): Boolean","lib.protobuf.BinaryReader.nextField"]},{"name":"open fun pastEnd(): Boolean","description":"lib.protobuf.BinaryDecoder.pastEnd","location":"packages/frontend/lib.protobuf/-binary-decoder/past-end.html","searchKeys":["pastEnd","open fun pastEnd(): Boolean","lib.protobuf.BinaryDecoder.pastEnd"]},{"name":"open fun readAny(fieldType: FieldType): dynamic","description":"lib.protobuf.BinaryReader.readAny","location":"packages/frontend/lib.protobuf/-binary-reader/read-any.html","searchKeys":["readAny","open fun readAny(fieldType: FieldType): dynamic","lib.protobuf.BinaryReader.readAny"]},{"name":"open fun readBool(): Boolean","description":"lib.protobuf.BinaryDecoder.readBool","location":"packages/frontend/lib.protobuf/-binary-decoder/read-bool.html","searchKeys":["readBool","open fun readBool(): Boolean","lib.protobuf.BinaryDecoder.readBool"]},{"name":"open fun readBool(): Boolean","description":"lib.protobuf.BinaryReader.readBool","location":"packages/frontend/lib.protobuf/-binary-reader/read-bool.html","searchKeys":["readBool","open fun readBool(): Boolean","lib.protobuf.BinaryReader.readBool"]},{"name":"open fun readBytes(): Uint8Array","description":"lib.protobuf.BinaryReader.readBytes","location":"packages/frontend/lib.protobuf/-binary-reader/read-bytes.html","searchKeys":["readBytes","open fun readBytes(): Uint8Array","lib.protobuf.BinaryReader.readBytes"]},{"name":"open fun readBytes(length: Number): Uint8Array","description":"lib.protobuf.BinaryDecoder.readBytes","location":"packages/frontend/lib.protobuf/-binary-decoder/read-bytes.html","searchKeys":["readBytes","open fun readBytes(length: Number): Uint8Array","lib.protobuf.BinaryDecoder.readBytes"]},{"name":"open fun readDouble(): Number","description":"lib.protobuf.BinaryDecoder.readDouble","location":"packages/frontend/lib.protobuf/-binary-decoder/read-double.html","searchKeys":["readDouble","open fun readDouble(): Number","lib.protobuf.BinaryDecoder.readDouble"]},{"name":"open fun readDouble(): Number","description":"lib.protobuf.BinaryReader.readDouble","location":"packages/frontend/lib.protobuf/-binary-reader/read-double.html","searchKeys":["readDouble","open fun readDouble(): Number","lib.protobuf.BinaryReader.readDouble"]},{"name":"open fun readEnum(): Number","description":"lib.protobuf.BinaryDecoder.readEnum","location":"packages/frontend/lib.protobuf/-binary-decoder/read-enum.html","searchKeys":["readEnum","open fun readEnum(): Number","lib.protobuf.BinaryDecoder.readEnum"]},{"name":"open fun readEnum(): Number","description":"lib.protobuf.BinaryReader.readEnum","location":"packages/frontend/lib.protobuf/-binary-reader/read-enum.html","searchKeys":["readEnum","open fun readEnum(): Number","lib.protobuf.BinaryReader.readEnum"]},{"name":"open fun readFixed32(): Number","description":"lib.protobuf.BinaryReader.readFixed32","location":"packages/frontend/lib.protobuf/-binary-reader/read-fixed32.html","searchKeys":["readFixed32","open fun readFixed32(): Number","lib.protobuf.BinaryReader.readFixed32"]},{"name":"open fun readFixed64(): Number","description":"lib.protobuf.BinaryReader.readFixed64","location":"packages/frontend/lib.protobuf/-binary-reader/read-fixed64.html","searchKeys":["readFixed64","open fun readFixed64(): Number","lib.protobuf.BinaryReader.readFixed64"]},{"name":"open fun readFixed64String(): String","description":"lib.protobuf.BinaryReader.readFixed64String","location":"packages/frontend/lib.protobuf/-binary-reader/read-fixed64-string.html","searchKeys":["readFixed64String","open fun readFixed64String(): String","lib.protobuf.BinaryReader.readFixed64String"]},{"name":"open fun readFixedHash64(): String","description":"lib.protobuf.BinaryDecoder.readFixedHash64","location":"packages/frontend/lib.protobuf/-binary-decoder/read-fixed-hash64.html","searchKeys":["readFixedHash64","open fun readFixedHash64(): String","lib.protobuf.BinaryDecoder.readFixedHash64"]},{"name":"open fun readFixedHash64(): String","description":"lib.protobuf.BinaryReader.readFixedHash64","location":"packages/frontend/lib.protobuf/-binary-reader/read-fixed-hash64.html","searchKeys":["readFixedHash64","open fun readFixedHash64(): String","lib.protobuf.BinaryReader.readFixedHash64"]},{"name":"open fun readFloat(): Number","description":"lib.protobuf.BinaryDecoder.readFloat","location":"packages/frontend/lib.protobuf/-binary-decoder/read-float.html","searchKeys":["readFloat","open fun readFloat(): Number","lib.protobuf.BinaryDecoder.readFloat"]},{"name":"open fun readFloat(): Number","description":"lib.protobuf.BinaryReader.readFloat","location":"packages/frontend/lib.protobuf/-binary-reader/read-float.html","searchKeys":["readFloat","open fun readFloat(): Number","lib.protobuf.BinaryReader.readFloat"]},{"name":"open fun readGroup(field: Number, message: Message, reader: BinaryReadReader)","description":"lib.protobuf.BinaryReader.readGroup","location":"packages/frontend/lib.protobuf/-binary-reader/read-group.html","searchKeys":["readGroup","open fun readGroup(field: Number, message: Message, reader: BinaryReadReader)","lib.protobuf.BinaryReader.readGroup"]},{"name":"open fun readInt16(): Number","description":"lib.protobuf.BinaryDecoder.readInt16","location":"packages/frontend/lib.protobuf/-binary-decoder/read-int16.html","searchKeys":["readInt16","open fun readInt16(): Number","lib.protobuf.BinaryDecoder.readInt16"]},{"name":"open fun readInt32(): Number","description":"lib.protobuf.BinaryDecoder.readInt32","location":"packages/frontend/lib.protobuf/-binary-decoder/read-int32.html","searchKeys":["readInt32","open fun readInt32(): Number","lib.protobuf.BinaryDecoder.readInt32"]},{"name":"open fun readInt32(): Number","description":"lib.protobuf.BinaryReader.readInt32","location":"packages/frontend/lib.protobuf/-binary-reader/read-int32.html","searchKeys":["readInt32","open fun readInt32(): Number","lib.protobuf.BinaryReader.readInt32"]},{"name":"open fun readInt32String(): String","description":"lib.protobuf.BinaryReader.readInt32String","location":"packages/frontend/lib.protobuf/-binary-reader/read-int32-string.html","searchKeys":["readInt32String","open fun readInt32String(): String","lib.protobuf.BinaryReader.readInt32String"]},{"name":"open fun readInt64(): Number","description":"lib.protobuf.BinaryDecoder.readInt64","location":"packages/frontend/lib.protobuf/-binary-decoder/read-int64.html","searchKeys":["readInt64","open fun readInt64(): Number","lib.protobuf.BinaryDecoder.readInt64"]},{"name":"open fun readInt64(): Number","description":"lib.protobuf.BinaryReader.readInt64","location":"packages/frontend/lib.protobuf/-binary-reader/read-int64.html","searchKeys":["readInt64","open fun readInt64(): Number","lib.protobuf.BinaryReader.readInt64"]},{"name":"open fun readInt64String(): String","description":"lib.protobuf.BinaryDecoder.readInt64String","location":"packages/frontend/lib.protobuf/-binary-decoder/read-int64-string.html","searchKeys":["readInt64String","open fun readInt64String(): String","lib.protobuf.BinaryDecoder.readInt64String"]},{"name":"open fun readInt64String(): String","description":"lib.protobuf.BinaryReader.readInt64String","location":"packages/frontend/lib.protobuf/-binary-reader/read-int64-string.html","searchKeys":["readInt64String","open fun readInt64String(): String","lib.protobuf.BinaryReader.readInt64String"]},{"name":"open fun readInt8(): Number","description":"lib.protobuf.BinaryDecoder.readInt8","location":"packages/frontend/lib.protobuf/-binary-decoder/read-int8.html","searchKeys":["readInt8","open fun readInt8(): Number","lib.protobuf.BinaryDecoder.readInt8"]},{"name":"open fun readPackedBool(): Array<Boolean>","description":"lib.protobuf.BinaryReader.readPackedBool","location":"packages/frontend/lib.protobuf/-binary-reader/read-packed-bool.html","searchKeys":["readPackedBool","open fun readPackedBool(): Array<Boolean>","lib.protobuf.BinaryReader.readPackedBool"]},{"name":"open fun readPackedDouble(): Array<Number>","description":"lib.protobuf.BinaryReader.readPackedDouble","location":"packages/frontend/lib.protobuf/-binary-reader/read-packed-double.html","searchKeys":["readPackedDouble","open fun readPackedDouble(): Array<Number>","lib.protobuf.BinaryReader.readPackedDouble"]},{"name":"open fun readPackedEnum(): Array<Number>","description":"lib.protobuf.BinaryReader.readPackedEnum","location":"packages/frontend/lib.protobuf/-binary-reader/read-packed-enum.html","searchKeys":["readPackedEnum","open fun readPackedEnum(): Array<Number>","lib.protobuf.BinaryReader.readPackedEnum"]},{"name":"open fun readPackedFixed32(): Array<Number>","description":"lib.protobuf.BinaryReader.readPackedFixed32","location":"packages/frontend/lib.protobuf/-binary-reader/read-packed-fixed32.html","searchKeys":["readPackedFixed32","open fun readPackedFixed32(): Array<Number>","lib.protobuf.BinaryReader.readPackedFixed32"]},{"name":"open fun readPackedFixed64(): Array<Number>","description":"lib.protobuf.BinaryReader.readPackedFixed64","location":"packages/frontend/lib.protobuf/-binary-reader/read-packed-fixed64.html","searchKeys":["readPackedFixed64","open fun readPackedFixed64(): Array<Number>","lib.protobuf.BinaryReader.readPackedFixed64"]},{"name":"open fun readPackedFixed64String(): Array<String>","description":"lib.protobuf.BinaryReader.readPackedFixed64String","location":"packages/frontend/lib.protobuf/-binary-reader/read-packed-fixed64-string.html","searchKeys":["readPackedFixed64String","open fun readPackedFixed64String(): Array<String>","lib.protobuf.BinaryReader.readPackedFixed64String"]},{"name":"open fun readPackedFixedHash64(): Array<String>","description":"lib.protobuf.BinaryReader.readPackedFixedHash64","location":"packages/frontend/lib.protobuf/-binary-reader/read-packed-fixed-hash64.html","searchKeys":["readPackedFixedHash64","open fun readPackedFixedHash64(): Array<String>","lib.protobuf.BinaryReader.readPackedFixedHash64"]},{"name":"open fun readPackedFloat(): Array<Number>","description":"lib.protobuf.BinaryReader.readPackedFloat","location":"packages/frontend/lib.protobuf/-binary-reader/read-packed-float.html","searchKeys":["readPackedFloat","open fun readPackedFloat(): Array<Number>","lib.protobuf.BinaryReader.readPackedFloat"]},{"name":"open fun readPackedInt32(): Array<Number>","description":"lib.protobuf.BinaryReader.readPackedInt32","location":"packages/frontend/lib.protobuf/-binary-reader/read-packed-int32.html","searchKeys":["readPackedInt32","open fun readPackedInt32(): Array<Number>","lib.protobuf.BinaryReader.readPackedInt32"]},{"name":"open fun readPackedInt32String(): Array<String>","description":"lib.protobuf.BinaryReader.readPackedInt32String","location":"packages/frontend/lib.protobuf/-binary-reader/read-packed-int32-string.html","searchKeys":["readPackedInt32String","open fun readPackedInt32String(): Array<String>","lib.protobuf.BinaryReader.readPackedInt32String"]},{"name":"open fun readPackedInt64(): Array<Number>","description":"lib.protobuf.BinaryReader.readPackedInt64","location":"packages/frontend/lib.protobuf/-binary-reader/read-packed-int64.html","searchKeys":["readPackedInt64","open fun readPackedInt64(): Array<Number>","lib.protobuf.BinaryReader.readPackedInt64"]},{"name":"open fun readPackedInt64String(): Array<String>","description":"lib.protobuf.BinaryReader.readPackedInt64String","location":"packages/frontend/lib.protobuf/-binary-reader/read-packed-int64-string.html","searchKeys":["readPackedInt64String","open fun readPackedInt64String(): Array<String>","lib.protobuf.BinaryReader.readPackedInt64String"]},{"name":"open fun readPackedSfixed32(): Array<Number>","description":"lib.protobuf.BinaryReader.readPackedSfixed32","location":"packages/frontend/lib.protobuf/-binary-reader/read-packed-sfixed32.html","searchKeys":["readPackedSfixed32","open fun readPackedSfixed32(): Array<Number>","lib.protobuf.BinaryReader.readPackedSfixed32"]},{"name":"open fun readPackedSfixed64(): Array<Number>","description":"lib.protobuf.BinaryReader.readPackedSfixed64","location":"packages/frontend/lib.protobuf/-binary-reader/read-packed-sfixed64.html","searchKeys":["readPackedSfixed64","open fun readPackedSfixed64(): Array<Number>","lib.protobuf.BinaryReader.readPackedSfixed64"]},{"name":"open fun readPackedSfixed64String(): Array<String>","description":"lib.protobuf.BinaryReader.readPackedSfixed64String","location":"packages/frontend/lib.protobuf/-binary-reader/read-packed-sfixed64-string.html","searchKeys":["readPackedSfixed64String","open fun readPackedSfixed64String(): Array<String>","lib.protobuf.BinaryReader.readPackedSfixed64String"]},{"name":"open fun readPackedSint32(): Array<Number>","description":"lib.protobuf.BinaryReader.readPackedSint32","location":"packages/frontend/lib.protobuf/-binary-reader/read-packed-sint32.html","searchKeys":["readPackedSint32","open fun readPackedSint32(): Array<Number>","lib.protobuf.BinaryReader.readPackedSint32"]},{"name":"open fun readPackedSint64(): Array<Number>","description":"lib.protobuf.BinaryReader.readPackedSint64","location":"packages/frontend/lib.protobuf/-binary-reader/read-packed-sint64.html","searchKeys":["readPackedSint64","open fun readPackedSint64(): Array<Number>","lib.protobuf.BinaryReader.readPackedSint64"]},{"name":"open fun readPackedSint64String(): Array<String>","description":"lib.protobuf.BinaryReader.readPackedSint64String","location":"packages/frontend/lib.protobuf/-binary-reader/read-packed-sint64-string.html","searchKeys":["readPackedSint64String","open fun readPackedSint64String(): Array<String>","lib.protobuf.BinaryReader.readPackedSint64String"]},{"name":"open fun readPackedUint32(): Array<Number>","description":"lib.protobuf.BinaryReader.readPackedUint32","location":"packages/frontend/lib.protobuf/-binary-reader/read-packed-uint32.html","searchKeys":["readPackedUint32","open fun readPackedUint32(): Array<Number>","lib.protobuf.BinaryReader.readPackedUint32"]},{"name":"open fun readPackedUint32String(): Array<String>","description":"lib.protobuf.BinaryReader.readPackedUint32String","location":"packages/frontend/lib.protobuf/-binary-reader/read-packed-uint32-string.html","searchKeys":["readPackedUint32String","open fun readPackedUint32String(): Array<String>","lib.protobuf.BinaryReader.readPackedUint32String"]},{"name":"open fun readPackedUint64(): Array<Number>","description":"lib.protobuf.BinaryReader.readPackedUint64","location":"packages/frontend/lib.protobuf/-binary-reader/read-packed-uint64.html","searchKeys":["readPackedUint64","open fun readPackedUint64(): Array<Number>","lib.protobuf.BinaryReader.readPackedUint64"]},{"name":"open fun readPackedUint64String(): Array<String>","description":"lib.protobuf.BinaryReader.readPackedUint64String","location":"packages/frontend/lib.protobuf/-binary-reader/read-packed-uint64-string.html","searchKeys":["readPackedUint64String","open fun readPackedUint64String(): Array<String>","lib.protobuf.BinaryReader.readPackedUint64String"]},{"name":"open fun readPackedVarintHash64(): Array<String>","description":"lib.protobuf.BinaryReader.readPackedVarintHash64","location":"packages/frontend/lib.protobuf/-binary-reader/read-packed-varint-hash64.html","searchKeys":["readPackedVarintHash64","open fun readPackedVarintHash64(): Array<String>","lib.protobuf.BinaryReader.readPackedVarintHash64"]},{"name":"open fun readSfixed32(): Number","description":"lib.protobuf.BinaryReader.readSfixed32","location":"packages/frontend/lib.protobuf/-binary-reader/read-sfixed32.html","searchKeys":["readSfixed32","open fun readSfixed32(): Number","lib.protobuf.BinaryReader.readSfixed32"]},{"name":"open fun readSfixed32String(): String","description":"lib.protobuf.BinaryReader.readSfixed32String","location":"packages/frontend/lib.protobuf/-binary-reader/read-sfixed32-string.html","searchKeys":["readSfixed32String","open fun readSfixed32String(): String","lib.protobuf.BinaryReader.readSfixed32String"]},{"name":"open fun readSfixed64(): Number","description":"lib.protobuf.BinaryReader.readSfixed64","location":"packages/frontend/lib.protobuf/-binary-reader/read-sfixed64.html","searchKeys":["readSfixed64","open fun readSfixed64(): Number","lib.protobuf.BinaryReader.readSfixed64"]},{"name":"open fun readSfixed64String(): String","description":"lib.protobuf.BinaryReader.readSfixed64String","location":"packages/frontend/lib.protobuf/-binary-reader/read-sfixed64-string.html","searchKeys":["readSfixed64String","open fun readSfixed64String(): String","lib.protobuf.BinaryReader.readSfixed64String"]},{"name":"open fun readSignedVarint32(): Number","description":"lib.protobuf.BinaryDecoder.readSignedVarint32","location":"packages/frontend/lib.protobuf/-binary-decoder/read-signed-varint32.html","searchKeys":["readSignedVarint32","open fun readSignedVarint32(): Number","lib.protobuf.BinaryDecoder.readSignedVarint32"]},{"name":"open fun readSignedVarint32String(): Number","description":"lib.protobuf.BinaryDecoder.readSignedVarint32String","location":"packages/frontend/lib.protobuf/-binary-decoder/read-signed-varint32-string.html","searchKeys":["readSignedVarint32String","open fun readSignedVarint32String(): Number","lib.protobuf.BinaryDecoder.readSignedVarint32String"]},{"name":"open fun readSignedVarint64(): Number","description":"lib.protobuf.BinaryDecoder.readSignedVarint64","location":"packages/frontend/lib.protobuf/-binary-decoder/read-signed-varint64.html","searchKeys":["readSignedVarint64","open fun readSignedVarint64(): Number","lib.protobuf.BinaryDecoder.readSignedVarint64"]},{"name":"open fun readSignedVarint64String(): Number","description":"lib.protobuf.BinaryDecoder.readSignedVarint64String","location":"packages/frontend/lib.protobuf/-binary-decoder/read-signed-varint64-string.html","searchKeys":["readSignedVarint64String","open fun readSignedVarint64String(): Number","lib.protobuf.BinaryDecoder.readSignedVarint64String"]},{"name":"open fun readSint32(): Number","description":"lib.protobuf.BinaryReader.readSint32","location":"packages/frontend/lib.protobuf/-binary-reader/read-sint32.html","searchKeys":["readSint32","open fun readSint32(): Number","lib.protobuf.BinaryReader.readSint32"]},{"name":"open fun readSint64(): Number","description":"lib.protobuf.BinaryReader.readSint64","location":"packages/frontend/lib.protobuf/-binary-reader/read-sint64.html","searchKeys":["readSint64","open fun readSint64(): Number","lib.protobuf.BinaryReader.readSint64"]},{"name":"open fun readSint64String(): String","description":"lib.protobuf.BinaryReader.readSint64String","location":"packages/frontend/lib.protobuf/-binary-reader/read-sint64-string.html","searchKeys":["readSint64String","open fun readSint64String(): String","lib.protobuf.BinaryReader.readSint64String"]},{"name":"open fun readString(): String","description":"lib.protobuf.BinaryReader.readString","location":"packages/frontend/lib.protobuf/-binary-reader/read-string.html","searchKeys":["readString","open fun readString(): String","lib.protobuf.BinaryReader.readString"]},{"name":"open fun readString(length: Number): String","description":"lib.protobuf.BinaryDecoder.readString","location":"packages/frontend/lib.protobuf/-binary-decoder/read-string.html","searchKeys":["readString","open fun readString(length: Number): String","lib.protobuf.BinaryDecoder.readString"]},{"name":"open fun readStringWithLength(): String","description":"lib.protobuf.BinaryDecoder.readStringWithLength","location":"packages/frontend/lib.protobuf/-binary-decoder/read-string-with-length.html","searchKeys":["readStringWithLength","open fun readStringWithLength(): String","lib.protobuf.BinaryDecoder.readStringWithLength"]},{"name":"open fun readUint16(): Number","description":"lib.protobuf.BinaryDecoder.readUint16","location":"packages/frontend/lib.protobuf/-binary-decoder/read-uint16.html","searchKeys":["readUint16","open fun readUint16(): Number","lib.protobuf.BinaryDecoder.readUint16"]},{"name":"open fun readUint32(): Number","description":"lib.protobuf.BinaryDecoder.readUint32","location":"packages/frontend/lib.protobuf/-binary-decoder/read-uint32.html","searchKeys":["readUint32","open fun readUint32(): Number","lib.protobuf.BinaryDecoder.readUint32"]},{"name":"open fun readUint32(): Number","description":"lib.protobuf.BinaryReader.readUint32","location":"packages/frontend/lib.protobuf/-binary-reader/read-uint32.html","searchKeys":["readUint32","open fun readUint32(): Number","lib.protobuf.BinaryReader.readUint32"]},{"name":"open fun readUint32String(): String","description":"lib.protobuf.BinaryReader.readUint32String","location":"packages/frontend/lib.protobuf/-binary-reader/read-uint32-string.html","searchKeys":["readUint32String","open fun readUint32String(): String","lib.protobuf.BinaryReader.readUint32String"]},{"name":"open fun readUint64(): Number","description":"lib.protobuf.BinaryDecoder.readUint64","location":"packages/frontend/lib.protobuf/-binary-decoder/read-uint64.html","searchKeys":["readUint64","open fun readUint64(): Number","lib.protobuf.BinaryDecoder.readUint64"]},{"name":"open fun readUint64(): Number","description":"lib.protobuf.BinaryReader.readUint64","location":"packages/frontend/lib.protobuf/-binary-reader/read-uint64.html","searchKeys":["readUint64","open fun readUint64(): Number","lib.protobuf.BinaryReader.readUint64"]},{"name":"open fun readUint64String(): String","description":"lib.protobuf.BinaryDecoder.readUint64String","location":"packages/frontend/lib.protobuf/-binary-decoder/read-uint64-string.html","searchKeys":["readUint64String","open fun readUint64String(): String","lib.protobuf.BinaryDecoder.readUint64String"]},{"name":"open fun readUint64String(): String","description":"lib.protobuf.BinaryReader.readUint64String","location":"packages/frontend/lib.protobuf/-binary-reader/read-uint64-string.html","searchKeys":["readUint64String","open fun readUint64String(): String","lib.protobuf.BinaryReader.readUint64String"]},{"name":"open fun readUint8(): Number","description":"lib.protobuf.BinaryDecoder.readUint8","location":"packages/frontend/lib.protobuf/-binary-decoder/read-uint8.html","searchKeys":["readUint8","open fun readUint8(): Number","lib.protobuf.BinaryDecoder.readUint8"]},{"name":"open fun readUnsignedVarint32(): Number","description":"lib.protobuf.BinaryDecoder.readUnsignedVarint32","location":"packages/frontend/lib.protobuf/-binary-decoder/read-unsigned-varint32.html","searchKeys":["readUnsignedVarint32","open fun readUnsignedVarint32(): Number","lib.protobuf.BinaryDecoder.readUnsignedVarint32"]},{"name":"open fun readUnsignedVarint32String(): Number","description":"lib.protobuf.BinaryDecoder.readUnsignedVarint32String","location":"packages/frontend/lib.protobuf/-binary-decoder/read-unsigned-varint32-string.html","searchKeys":["readUnsignedVarint32String","open fun readUnsignedVarint32String(): Number","lib.protobuf.BinaryDecoder.readUnsignedVarint32String"]},{"name":"open fun readUnsignedVarint64(): Number","description":"lib.protobuf.BinaryDecoder.readUnsignedVarint64","location":"packages/frontend/lib.protobuf/-binary-decoder/read-unsigned-varint64.html","searchKeys":["readUnsignedVarint64","open fun readUnsignedVarint64(): Number","lib.protobuf.BinaryDecoder.readUnsignedVarint64"]},{"name":"open fun readUnsignedVarint64String(): Number","description":"lib.protobuf.BinaryDecoder.readUnsignedVarint64String","location":"packages/frontend/lib.protobuf/-binary-decoder/read-unsigned-varint64-string.html","searchKeys":["readUnsignedVarint64String","open fun readUnsignedVarint64String(): Number","lib.protobuf.BinaryDecoder.readUnsignedVarint64String"]},{"name":"open fun readVarintHash64(): String","description":"lib.protobuf.BinaryDecoder.readVarintHash64","location":"packages/frontend/lib.protobuf/-binary-decoder/read-varint-hash64.html","searchKeys":["readVarintHash64","open fun readVarintHash64(): String","lib.protobuf.BinaryDecoder.readVarintHash64"]},{"name":"open fun readVarintHash64(): String","description":"lib.protobuf.BinaryReader.readVarintHash64","location":"packages/frontend/lib.protobuf/-binary-reader/read-varint-hash64.html","searchKeys":["readVarintHash64","open fun readVarintHash64(): String","lib.protobuf.BinaryReader.readVarintHash64"]},{"name":"open fun readZigzagVarint32(): Number","description":"lib.protobuf.BinaryDecoder.readZigzagVarint32","location":"packages/frontend/lib.protobuf/-binary-decoder/read-zigzag-varint32.html","searchKeys":["readZigzagVarint32","open fun readZigzagVarint32(): Number","lib.protobuf.BinaryDecoder.readZigzagVarint32"]},{"name":"open fun readZigzagVarint64(): Number","description":"lib.protobuf.BinaryDecoder.readZigzagVarint64","location":"packages/frontend/lib.protobuf/-binary-decoder/read-zigzag-varint64.html","searchKeys":["readZigzagVarint64","open fun readZigzagVarint64(): Number","lib.protobuf.BinaryDecoder.readZigzagVarint64"]},{"name":"open fun readZigzagVarint64String(): Number","description":"lib.protobuf.BinaryDecoder.readZigzagVarint64String","location":"packages/frontend/lib.protobuf/-binary-decoder/read-zigzag-varint64-string.html","searchKeys":["readZigzagVarint64String","open fun readZigzagVarint64String(): Number","lib.protobuf.BinaryDecoder.readZigzagVarint64String"]},{"name":"open fun registerReadCallback(callbackName: String, callback: (binaryReader: BinaryReader) -> Any)","description":"lib.protobuf.BinaryReader.registerReadCallback","location":"packages/frontend/lib.protobuf/-binary-reader/register-read-callback.html","searchKeys":["registerReadCallback","open fun registerReadCallback(callbackName: String, callback: (binaryReader: BinaryReader) -> Any)","lib.protobuf.BinaryReader.registerReadCallback"]},{"name":"open fun reset()","description":"lib.protobuf.BinaryDecoder.reset","location":"packages/frontend/lib.protobuf/-binary-decoder/reset.html","searchKeys":["reset","open fun reset()","lib.protobuf.BinaryDecoder.reset"]},{"name":"open fun reset()","description":"lib.protobuf.BinaryReader.reset","location":"packages/frontend/lib.protobuf/-binary-reader/reset.html","searchKeys":["reset","open fun reset()","lib.protobuf.BinaryReader.reset"]},{"name":"open fun reset()","description":"lib.protobuf.BinaryWriter.reset","location":"packages/frontend/lib.protobuf/-binary-writer/reset.html","searchKeys":["reset","open fun reset()","lib.protobuf.BinaryWriter.reset"]},{"name":"open fun rightShift(): UInt64","description":"lib.protobuf.UInt64.rightShift","location":"packages/frontend/lib.protobuf/-u-int64/right-shift.html","searchKeys":["rightShift","open fun rightShift(): UInt64","lib.protobuf.UInt64.rightShift"]},{"name":"open fun runReadCallback(callbackName: String): Any","description":"lib.protobuf.BinaryReader.runReadCallback","location":"packages/frontend/lib.protobuf/-binary-reader/run-read-callback.html","searchKeys":["runReadCallback","open fun runReadCallback(callbackName: String): Any","lib.protobuf.BinaryReader.runReadCallback"]},{"name":"open fun serializeBinary(): Uint8Array","description":"lib.protobuf.Message.serializeBinary","location":"packages/frontend/lib.protobuf/-message/serialize-binary.html","searchKeys":["serializeBinary","open fun serializeBinary(): Uint8Array","lib.protobuf.Message.serializeBinary"]},{"name":"open fun serializeBinary(fieldNumber: Number, writer: BinaryWriter, keyWriterFn: (field: Number, key: K) -> Unit, valueWriterFn: (field: Number, value: V, BinaryWriteCallback) -> Unit, writeCallback: BinaryWriteCallback = definedExternally)","description":"lib.protobuf.Map.serializeBinary","location":"packages/frontend/lib.protobuf/-map/serialize-binary.html","searchKeys":["serializeBinary","open fun serializeBinary(fieldNumber: Number, writer: BinaryWriter, keyWriterFn: (field: Number, key: K) -> Unit, valueWriterFn: (field: Number, value: V, BinaryWriteCallback) -> Unit, writeCallback: BinaryWriteCallback = definedExternally)","lib.protobuf.Map.serializeBinary"]},{"name":"open fun set(key: K, value: V): Map<K, V>","description":"lib.protobuf.Map.set","location":"packages/frontend/lib.protobuf/-map/set.html","searchKeys":["set","open fun set(key: K, value: V): Map<K, V>","lib.protobuf.Map.set"]},{"name":"open fun setBlock()","description":"lib.protobuf.BinaryReader.setBlock","location":"packages/frontend/lib.protobuf/-binary-reader/set-block.html","searchKeys":["setBlock","open fun setBlock()","lib.protobuf.BinaryReader.setBlock"]},{"name":"open fun setBlock(bytes: Array<Number> = definedExternally)","description":"lib.protobuf.BinaryReader.setBlock","location":"packages/frontend/lib.protobuf/-binary-reader/set-block.html","searchKeys":["setBlock","open fun setBlock(bytes: Array<Number> = definedExternally)","lib.protobuf.BinaryReader.setBlock"]},{"name":"open fun setBlock(bytes: Array<Number> = definedExternally, start: Number = definedExternally)","description":"lib.protobuf.BinaryReader.setBlock","location":"packages/frontend/lib.protobuf/-binary-reader/set-block.html","searchKeys":["setBlock","open fun setBlock(bytes: Array<Number> = definedExternally, start: Number = definedExternally)","lib.protobuf.BinaryReader.setBlock"]},{"name":"open fun setBlock(bytes: Array<Number> = definedExternally, start: Number = definedExternally, length: Number = definedExternally)","description":"lib.protobuf.BinaryReader.setBlock","location":"packages/frontend/lib.protobuf/-binary-reader/set-block.html","searchKeys":["setBlock","open fun setBlock(bytes: Array<Number> = definedExternally, start: Number = definedExternally, length: Number = definedExternally)","lib.protobuf.BinaryReader.setBlock"]},{"name":"open fun setBlock(bytes: ArrayBuffer = definedExternally)","description":"lib.protobuf.BinaryReader.setBlock","location":"packages/frontend/lib.protobuf/-binary-reader/set-block.html","searchKeys":["setBlock","open fun setBlock(bytes: ArrayBuffer = definedExternally)","lib.protobuf.BinaryReader.setBlock"]},{"name":"open fun setBlock(bytes: ArrayBuffer = definedExternally, start: Number = definedExternally)","description":"lib.protobuf.BinaryReader.setBlock","location":"packages/frontend/lib.protobuf/-binary-reader/set-block.html","searchKeys":["setBlock","open fun setBlock(bytes: ArrayBuffer = definedExternally, start: Number = definedExternally)","lib.protobuf.BinaryReader.setBlock"]},{"name":"open fun setBlock(bytes: ArrayBuffer = definedExternally, start: Number = definedExternally, length: Number = definedExternally)","description":"lib.protobuf.BinaryReader.setBlock","location":"packages/frontend/lib.protobuf/-binary-reader/set-block.html","searchKeys":["setBlock","open fun setBlock(bytes: ArrayBuffer = definedExternally, start: Number = definedExternally, length: Number = definedExternally)","lib.protobuf.BinaryReader.setBlock"]},{"name":"open fun setBlock(bytes: String = definedExternally)","description":"lib.protobuf.BinaryReader.setBlock","location":"packages/frontend/lib.protobuf/-binary-reader/set-block.html","searchKeys":["setBlock","open fun setBlock(bytes: String = definedExternally)","lib.protobuf.BinaryReader.setBlock"]},{"name":"open fun setBlock(bytes: String = definedExternally, start: Number = definedExternally)","description":"lib.protobuf.BinaryReader.setBlock","location":"packages/frontend/lib.protobuf/-binary-reader/set-block.html","searchKeys":["setBlock","open fun setBlock(bytes: String = definedExternally, start: Number = definedExternally)","lib.protobuf.BinaryReader.setBlock"]},{"name":"open fun setBlock(bytes: String = definedExternally, start: Number = definedExternally, length: Number = definedExternally)","description":"lib.protobuf.BinaryReader.setBlock","location":"packages/frontend/lib.protobuf/-binary-reader/set-block.html","searchKeys":["setBlock","open fun setBlock(bytes: String = definedExternally, start: Number = definedExternally, length: Number = definedExternally)","lib.protobuf.BinaryReader.setBlock"]},{"name":"open fun setBlock(bytes: Uint8Array = definedExternally)","description":"lib.protobuf.BinaryReader.setBlock","location":"packages/frontend/lib.protobuf/-binary-reader/set-block.html","searchKeys":["setBlock","open fun setBlock(bytes: Uint8Array = definedExternally)","lib.protobuf.BinaryReader.setBlock"]},{"name":"open fun setBlock(bytes: Uint8Array = definedExternally, start: Number = definedExternally)","description":"lib.protobuf.BinaryReader.setBlock","location":"packages/frontend/lib.protobuf/-binary-reader/set-block.html","searchKeys":["setBlock","open fun setBlock(bytes: Uint8Array = definedExternally, start: Number = definedExternally)","lib.protobuf.BinaryReader.setBlock"]},{"name":"open fun setBlock(bytes: Uint8Array = definedExternally, start: Number = definedExternally, length: Number = definedExternally)","description":"lib.protobuf.BinaryReader.setBlock","location":"packages/frontend/lib.protobuf/-binary-reader/set-block.html","searchKeys":["setBlock","open fun setBlock(bytes: Uint8Array = definedExternally, start: Number = definedExternally, length: Number = definedExternally)","lib.protobuf.BinaryReader.setBlock"]},{"name":"open fun setBlock(data: Array<Number>)","description":"lib.protobuf.BinaryDecoder.setBlock","location":"packages/frontend/lib.protobuf/-binary-decoder/set-block.html","searchKeys":["setBlock","open fun setBlock(data: Array<Number>)","lib.protobuf.BinaryDecoder.setBlock"]},{"name":"open fun setBlock(data: Array<Number>, start: Number = definedExternally)","description":"lib.protobuf.BinaryDecoder.setBlock","location":"packages/frontend/lib.protobuf/-binary-decoder/set-block.html","searchKeys":["setBlock","open fun setBlock(data: Array<Number>, start: Number = definedExternally)","lib.protobuf.BinaryDecoder.setBlock"]},{"name":"open fun setBlock(data: Array<Number>, start: Number = definedExternally, length: Number = definedExternally)","description":"lib.protobuf.BinaryDecoder.setBlock","location":"packages/frontend/lib.protobuf/-binary-decoder/set-block.html","searchKeys":["setBlock","open fun setBlock(data: Array<Number>, start: Number = definedExternally, length: Number = definedExternally)","lib.protobuf.BinaryDecoder.setBlock"]},{"name":"open fun setBlock(data: ArrayBuffer)","description":"lib.protobuf.BinaryDecoder.setBlock","location":"packages/frontend/lib.protobuf/-binary-decoder/set-block.html","searchKeys":["setBlock","open fun setBlock(data: ArrayBuffer)","lib.protobuf.BinaryDecoder.setBlock"]},{"name":"open fun setBlock(data: ArrayBuffer, start: Number = definedExternally)","description":"lib.protobuf.BinaryDecoder.setBlock","location":"packages/frontend/lib.protobuf/-binary-decoder/set-block.html","searchKeys":["setBlock","open fun setBlock(data: ArrayBuffer, start: Number = definedExternally)","lib.protobuf.BinaryDecoder.setBlock"]},{"name":"open fun setBlock(data: ArrayBuffer, start: Number = definedExternally, length: Number = definedExternally)","description":"lib.protobuf.BinaryDecoder.setBlock","location":"packages/frontend/lib.protobuf/-binary-decoder/set-block.html","searchKeys":["setBlock","open fun setBlock(data: ArrayBuffer, start: Number = definedExternally, length: Number = definedExternally)","lib.protobuf.BinaryDecoder.setBlock"]},{"name":"open fun setBlock(data: String)","description":"lib.protobuf.BinaryDecoder.setBlock","location":"packages/frontend/lib.protobuf/-binary-decoder/set-block.html","searchKeys":["setBlock","open fun setBlock(data: String)","lib.protobuf.BinaryDecoder.setBlock"]},{"name":"open fun setBlock(data: String, start: Number = definedExternally)","description":"lib.protobuf.BinaryDecoder.setBlock","location":"packages/frontend/lib.protobuf/-binary-decoder/set-block.html","searchKeys":["setBlock","open fun setBlock(data: String, start: Number = definedExternally)","lib.protobuf.BinaryDecoder.setBlock"]},{"name":"open fun setBlock(data: String, start: Number = definedExternally, length: Number = definedExternally)","description":"lib.protobuf.BinaryDecoder.setBlock","location":"packages/frontend/lib.protobuf/-binary-decoder/set-block.html","searchKeys":["setBlock","open fun setBlock(data: String, start: Number = definedExternally, length: Number = definedExternally)","lib.protobuf.BinaryDecoder.setBlock"]},{"name":"open fun setBlock(data: Uint8Array)","description":"lib.protobuf.BinaryDecoder.setBlock","location":"packages/frontend/lib.protobuf/-binary-decoder/set-block.html","searchKeys":["setBlock","open fun setBlock(data: Uint8Array)","lib.protobuf.BinaryDecoder.setBlock"]},{"name":"open fun setBlock(data: Uint8Array, start: Number = definedExternally)","description":"lib.protobuf.BinaryDecoder.setBlock","location":"packages/frontend/lib.protobuf/-binary-decoder/set-block.html","searchKeys":["setBlock","open fun setBlock(data: Uint8Array, start: Number = definedExternally)","lib.protobuf.BinaryDecoder.setBlock"]},{"name":"open fun setBlock(data: Uint8Array, start: Number = definedExternally, length: Number = definedExternally)","description":"lib.protobuf.BinaryDecoder.setBlock","location":"packages/frontend/lib.protobuf/-binary-decoder/set-block.html","searchKeys":["setBlock","open fun setBlock(data: Uint8Array, start: Number = definedExternally, length: Number = definedExternally)","lib.protobuf.BinaryDecoder.setBlock"]},{"name":"open fun setCursor(cursor: Number)","description":"lib.protobuf.BinaryDecoder.setCursor","location":"packages/frontend/lib.protobuf/-binary-decoder/set-cursor.html","searchKeys":["setCursor","open fun setCursor(cursor: Number)","lib.protobuf.BinaryDecoder.setCursor"]},{"name":"open fun setEnd(end: Number)","description":"lib.protobuf.BinaryDecoder.setEnd","location":"packages/frontend/lib.protobuf/-binary-decoder/set-end.html","searchKeys":["setEnd","open fun setEnd(end: Number)","lib.protobuf.BinaryDecoder.setEnd"]},{"name":"open fun skipDelimitedField()","description":"lib.protobuf.BinaryReader.skipDelimitedField","location":"packages/frontend/lib.protobuf/-binary-reader/skip-delimited-field.html","searchKeys":["skipDelimitedField","open fun skipDelimitedField()","lib.protobuf.BinaryReader.skipDelimitedField"]},{"name":"open fun skipField()","description":"lib.protobuf.BinaryReader.skipField","location":"packages/frontend/lib.protobuf/-binary-reader/skip-field.html","searchKeys":["skipField","open fun skipField()","lib.protobuf.BinaryReader.skipField"]},{"name":"open fun skipFixed32Field()","description":"lib.protobuf.BinaryReader.skipFixed32Field","location":"packages/frontend/lib.protobuf/-binary-reader/skip-fixed32-field.html","searchKeys":["skipFixed32Field","open fun skipFixed32Field()","lib.protobuf.BinaryReader.skipFixed32Field"]},{"name":"open fun skipFixed64Field()","description":"lib.protobuf.BinaryReader.skipFixed64Field","location":"packages/frontend/lib.protobuf/-binary-reader/skip-fixed64-field.html","searchKeys":["skipFixed64Field","open fun skipFixed64Field()","lib.protobuf.BinaryReader.skipFixed64Field"]},{"name":"open fun skipGroup()","description":"lib.protobuf.BinaryReader.skipGroup","location":"packages/frontend/lib.protobuf/-binary-reader/skip-group.html","searchKeys":["skipGroup","open fun skipGroup()","lib.protobuf.BinaryReader.skipGroup"]},{"name":"open fun skipMatchingFields()","description":"lib.protobuf.BinaryReader.skipMatchingFields","location":"packages/frontend/lib.protobuf/-binary-reader/skip-matching-fields.html","searchKeys":["skipMatchingFields","open fun skipMatchingFields()","lib.protobuf.BinaryReader.skipMatchingFields"]},{"name":"open fun skipVarint()","description":"lib.protobuf.BinaryDecoder.skipVarint","location":"packages/frontend/lib.protobuf/-binary-decoder/skip-varint.html","searchKeys":["skipVarint","open fun skipVarint()","lib.protobuf.BinaryDecoder.skipVarint"]},{"name":"open fun skipVarintField()","description":"lib.protobuf.BinaryReader.skipVarintField","location":"packages/frontend/lib.protobuf/-binary-reader/skip-varint-field.html","searchKeys":["skipVarintField","open fun skipVarintField()","lib.protobuf.BinaryReader.skipVarintField"]},{"name":"open fun sub(other: Int64): Int64","description":"lib.protobuf.Int64.sub","location":"packages/frontend/lib.protobuf/-int64/sub.html","searchKeys":["sub","open fun sub(other: Int64): Int64","lib.protobuf.Int64.sub"]},{"name":"open fun sub(other: UInt64): UInt64","description":"lib.protobuf.UInt64.sub","location":"packages/frontend/lib.protobuf/-u-int64/sub.html","searchKeys":["sub","open fun sub(other: UInt64): UInt64","lib.protobuf.UInt64.sub"]},{"name":"open fun toArray(): Array<dynamic>","description":"lib.protobuf.Map.toArray","location":"packages/frontend/lib.protobuf/-map/to-array.html","searchKeys":["toArray","open fun toArray(): Array<dynamic>","lib.protobuf.Map.toArray"]},{"name":"open fun toArray(): MessageArray","description":"lib.protobuf.Message.toArray","location":"packages/frontend/lib.protobuf/-message/to-array.html","searchKeys":["toArray","open fun toArray(): MessageArray","lib.protobuf.Message.toArray"]},{"name":"open fun toObject(): Array<dynamic>","description":"lib.protobuf.Map.toObject","location":"packages/frontend/lib.protobuf/-map/to-object.html","searchKeys":["toObject","open fun toObject(): Array<dynamic>","lib.protobuf.Map.toObject"]},{"name":"open fun toObject(includeInstance: Boolean = definedExternally): Any","description":"lib.protobuf.Message.toObject","location":"packages/frontend/lib.protobuf/-message/to-object.html","searchKeys":["toObject","open fun toObject(includeInstance: Boolean = definedExternally): Any","lib.protobuf.Message.toObject"]},{"name":"open fun toObject(includeInstance: Boolean = definedExternally): Array<dynamic>","description":"lib.protobuf.Map.toObject","location":"packages/frontend/lib.protobuf/-map/to-object.html","searchKeys":["toObject","open fun toObject(includeInstance: Boolean = definedExternally): Array<dynamic>","lib.protobuf.Map.toObject"]},{"name":"open fun unskipHeader()","description":"lib.protobuf.BinaryReader.unskipHeader","location":"packages/frontend/lib.protobuf/-binary-reader/unskip-header.html","searchKeys":["unskipHeader","open fun unskipHeader()","lib.protobuf.BinaryReader.unskipHeader"]},{"name":"open fun unskipVarint(value: Number)","description":"lib.protobuf.BinaryDecoder.unskipVarint","location":"packages/frontend/lib.protobuf/-binary-decoder/unskip-varint.html","searchKeys":["unskipVarint","open fun unskipVarint(value: Number)","lib.protobuf.BinaryDecoder.unskipVarint"]},{"name":"open fun values(): Map.Iterator<V>","description":"lib.protobuf.Map.values","location":"packages/frontend/lib.protobuf/-map/values.html","searchKeys":["values","open fun values(): Map.Iterator<V>","lib.protobuf.Map.values"]},{"name":"open fun writeAny(fieldType: FieldType, field: Number, value: Array<Any>)","description":"lib.protobuf.BinaryWriter.writeAny","location":"packages/frontend/lib.protobuf/-binary-writer/write-any.html","searchKeys":["writeAny","open fun writeAny(fieldType: FieldType, field: Number, value: Array<Any>)","lib.protobuf.BinaryWriter.writeAny"]},{"name":"open fun writeAny(fieldType: FieldType, field: Number, value: Array<Uint8Array>)","description":"lib.protobuf.BinaryWriter.writeAny","location":"packages/frontend/lib.protobuf/-binary-writer/write-any.html","searchKeys":["writeAny","open fun writeAny(fieldType: FieldType, field: Number, value: Array<Uint8Array>)","lib.protobuf.BinaryWriter.writeAny"]},{"name":"open fun writeAny(fieldType: FieldType, field: Number, value: Boolean)","description":"lib.protobuf.BinaryWriter.writeAny","location":"packages/frontend/lib.protobuf/-binary-writer/write-any.html","searchKeys":["writeAny","open fun writeAny(fieldType: FieldType, field: Number, value: Boolean)","lib.protobuf.BinaryWriter.writeAny"]},{"name":"open fun writeAny(fieldType: FieldType, field: Number, value: Number)","description":"lib.protobuf.BinaryWriter.writeAny","location":"packages/frontend/lib.protobuf/-binary-writer/write-any.html","searchKeys":["writeAny","open fun writeAny(fieldType: FieldType, field: Number, value: Number)","lib.protobuf.BinaryWriter.writeAny"]},{"name":"open fun writeAny(fieldType: FieldType, field: Number, value: String)","description":"lib.protobuf.BinaryWriter.writeAny","location":"packages/frontend/lib.protobuf/-binary-writer/write-any.html","searchKeys":["writeAny","open fun writeAny(fieldType: FieldType, field: Number, value: String)","lib.protobuf.BinaryWriter.writeAny"]},{"name":"open fun writeAny(fieldType: FieldType, field: Number, value: Uint8Array)","description":"lib.protobuf.BinaryWriter.writeAny","location":"packages/frontend/lib.protobuf/-binary-writer/write-any.html","searchKeys":["writeAny","open fun writeAny(fieldType: FieldType, field: Number, value: Uint8Array)","lib.protobuf.BinaryWriter.writeAny"]},{"name":"open fun writeBool(field: Number, value: Boolean = definedExternally)","description":"lib.protobuf.BinaryWriter.writeBool","location":"packages/frontend/lib.protobuf/-binary-writer/write-bool.html","searchKeys":["writeBool","open fun writeBool(field: Number, value: Boolean = definedExternally)","lib.protobuf.BinaryWriter.writeBool"]},{"name":"open fun writeBool(value: Boolean)","description":"lib.protobuf.BinaryEncoder.writeBool","location":"packages/frontend/lib.protobuf/-binary-encoder/write-bool.html","searchKeys":["writeBool","open fun writeBool(value: Boolean)","lib.protobuf.BinaryEncoder.writeBool"]},{"name":"open fun writeBytes(bytes: Uint8Array)","description":"lib.protobuf.BinaryEncoder.writeBytes","location":"packages/frontend/lib.protobuf/-binary-encoder/write-bytes.html","searchKeys":["writeBytes","open fun writeBytes(bytes: Uint8Array)","lib.protobuf.BinaryEncoder.writeBytes"]},{"name":"open fun writeBytes(field: Number)","description":"lib.protobuf.BinaryWriter.writeBytes","location":"packages/frontend/lib.protobuf/-binary-writer/write-bytes.html","searchKeys":["writeBytes","open fun writeBytes(field: Number)","lib.protobuf.BinaryWriter.writeBytes"]},{"name":"open fun writeBytes(field: Number, value: Array<Number> = definedExternally)","description":"lib.protobuf.BinaryWriter.writeBytes","location":"packages/frontend/lib.protobuf/-binary-writer/write-bytes.html","searchKeys":["writeBytes","open fun writeBytes(field: Number, value: Array<Number> = definedExternally)","lib.protobuf.BinaryWriter.writeBytes"]},{"name":"open fun writeBytes(field: Number, value: ArrayBuffer = definedExternally)","description":"lib.protobuf.BinaryWriter.writeBytes","location":"packages/frontend/lib.protobuf/-binary-writer/write-bytes.html","searchKeys":["writeBytes","open fun writeBytes(field: Number, value: ArrayBuffer = definedExternally)","lib.protobuf.BinaryWriter.writeBytes"]},{"name":"open fun writeBytes(field: Number, value: String = definedExternally)","description":"lib.protobuf.BinaryWriter.writeBytes","location":"packages/frontend/lib.protobuf/-binary-writer/write-bytes.html","searchKeys":["writeBytes","open fun writeBytes(field: Number, value: String = definedExternally)","lib.protobuf.BinaryWriter.writeBytes"]},{"name":"open fun writeBytes(field: Number, value: Uint8Array = definedExternally)","description":"lib.protobuf.BinaryWriter.writeBytes","location":"packages/frontend/lib.protobuf/-binary-writer/write-bytes.html","searchKeys":["writeBytes","open fun writeBytes(field: Number, value: Uint8Array = definedExternally)","lib.protobuf.BinaryWriter.writeBytes"]},{"name":"open fun writeDouble(field: Number, value: Number = definedExternally)","description":"lib.protobuf.BinaryWriter.writeDouble","location":"packages/frontend/lib.protobuf/-binary-writer/write-double.html","searchKeys":["writeDouble","open fun writeDouble(field: Number, value: Number = definedExternally)","lib.protobuf.BinaryWriter.writeDouble"]},{"name":"open fun writeDouble(value: Number)","description":"lib.protobuf.BinaryEncoder.writeDouble","location":"packages/frontend/lib.protobuf/-binary-encoder/write-double.html","searchKeys":["writeDouble","open fun writeDouble(value: Number)","lib.protobuf.BinaryEncoder.writeDouble"]},{"name":"open fun writeEnum(field: Number, value: Number = definedExternally)","description":"lib.protobuf.BinaryWriter.writeEnum","location":"packages/frontend/lib.protobuf/-binary-writer/write-enum.html","searchKeys":["writeEnum","open fun writeEnum(field: Number, value: Number = definedExternally)","lib.protobuf.BinaryWriter.writeEnum"]},{"name":"open fun writeEnum(value: Number)","description":"lib.protobuf.BinaryEncoder.writeEnum","location":"packages/frontend/lib.protobuf/-binary-encoder/write-enum.html","searchKeys":["writeEnum","open fun writeEnum(value: Number)","lib.protobuf.BinaryEncoder.writeEnum"]},{"name":"open fun writeFixed32(field: Number, value: Number = definedExternally)","description":"lib.protobuf.BinaryWriter.writeFixed32","location":"packages/frontend/lib.protobuf/-binary-writer/write-fixed32.html","searchKeys":["writeFixed32","open fun writeFixed32(field: Number, value: Number = definedExternally)","lib.protobuf.BinaryWriter.writeFixed32"]},{"name":"open fun writeFixed64(field: Number, value: Number = definedExternally)","description":"lib.protobuf.BinaryWriter.writeFixed64","location":"packages/frontend/lib.protobuf/-binary-writer/write-fixed64.html","searchKeys":["writeFixed64","open fun writeFixed64(field: Number, value: Number = definedExternally)","lib.protobuf.BinaryWriter.writeFixed64"]},{"name":"open fun writeFixed64String(field: Number, value: String = definedExternally)","description":"lib.protobuf.BinaryWriter.writeFixed64String","location":"packages/frontend/lib.protobuf/-binary-writer/write-fixed64-string.html","searchKeys":["writeFixed64String","open fun writeFixed64String(field: Number, value: String = definedExternally)","lib.protobuf.BinaryWriter.writeFixed64String"]},{"name":"open fun writeFixedHash64(field: Number, value: String = definedExternally)","description":"lib.protobuf.BinaryWriter.writeFixedHash64","location":"packages/frontend/lib.protobuf/-binary-writer/write-fixed-hash64.html","searchKeys":["writeFixedHash64","open fun writeFixedHash64(field: Number, value: String = definedExternally)","lib.protobuf.BinaryWriter.writeFixedHash64"]},{"name":"open fun writeFixedHash64(hash: String)","description":"lib.protobuf.BinaryEncoder.writeFixedHash64","location":"packages/frontend/lib.protobuf/-binary-encoder/write-fixed-hash64.html","searchKeys":["writeFixedHash64","open fun writeFixedHash64(hash: String)","lib.protobuf.BinaryEncoder.writeFixedHash64"]},{"name":"open fun writeFloat(field: Number, value: Number = definedExternally)","description":"lib.protobuf.BinaryWriter.writeFloat","location":"packages/frontend/lib.protobuf/-binary-writer/write-float.html","searchKeys":["writeFloat","open fun writeFloat(field: Number, value: Number = definedExternally)","lib.protobuf.BinaryWriter.writeFloat"]},{"name":"open fun writeFloat(value: Number)","description":"lib.protobuf.BinaryEncoder.writeFloat","location":"packages/frontend/lib.protobuf/-binary-encoder/write-float.html","searchKeys":["writeFloat","open fun writeFloat(value: Number)","lib.protobuf.BinaryEncoder.writeFloat"]},{"name":"open fun writeGroup(field: Number, value: Any, writeCallback: BinaryWriteCallback)","description":"lib.protobuf.BinaryWriter.writeGroup","location":"packages/frontend/lib.protobuf/-binary-writer/write-group.html","searchKeys":["writeGroup","open fun writeGroup(field: Number, value: Any, writeCallback: BinaryWriteCallback)","lib.protobuf.BinaryWriter.writeGroup"]},{"name":"open fun writeInt16(value: Number)","description":"lib.protobuf.BinaryEncoder.writeInt16","location":"packages/frontend/lib.protobuf/-binary-encoder/write-int16.html","searchKeys":["writeInt16","open fun writeInt16(value: Number)","lib.protobuf.BinaryEncoder.writeInt16"]},{"name":"open fun writeInt32(field: Number, value: Number = definedExternally)","description":"lib.protobuf.BinaryWriter.writeInt32","location":"packages/frontend/lib.protobuf/-binary-writer/write-int32.html","searchKeys":["writeInt32","open fun writeInt32(field: Number, value: Number = definedExternally)","lib.protobuf.BinaryWriter.writeInt32"]},{"name":"open fun writeInt32(value: Number)","description":"lib.protobuf.BinaryEncoder.writeInt32","location":"packages/frontend/lib.protobuf/-binary-encoder/write-int32.html","searchKeys":["writeInt32","open fun writeInt32(value: Number)","lib.protobuf.BinaryEncoder.writeInt32"]},{"name":"open fun writeInt32String(field: Number, value: String = definedExternally)","description":"lib.protobuf.BinaryWriter.writeInt32String","location":"packages/frontend/lib.protobuf/-binary-writer/write-int32-string.html","searchKeys":["writeInt32String","open fun writeInt32String(field: Number, value: String = definedExternally)","lib.protobuf.BinaryWriter.writeInt32String"]},{"name":"open fun writeInt64(field: Number, value: Number = definedExternally)","description":"lib.protobuf.BinaryWriter.writeInt64","location":"packages/frontend/lib.protobuf/-binary-writer/write-int64.html","searchKeys":["writeInt64","open fun writeInt64(field: Number, value: Number = definedExternally)","lib.protobuf.BinaryWriter.writeInt64"]},{"name":"open fun writeInt64(value: Number)","description":"lib.protobuf.BinaryEncoder.writeInt64","location":"packages/frontend/lib.protobuf/-binary-encoder/write-int64.html","searchKeys":["writeInt64","open fun writeInt64(value: Number)","lib.protobuf.BinaryEncoder.writeInt64"]},{"name":"open fun writeInt64String(field: Number, value: String = definedExternally)","description":"lib.protobuf.BinaryWriter.writeInt64String","location":"packages/frontend/lib.protobuf/-binary-writer/write-int64-string.html","searchKeys":["writeInt64String","open fun writeInt64String(field: Number, value: String = definedExternally)","lib.protobuf.BinaryWriter.writeInt64String"]},{"name":"open fun writeInt64String(value: String)","description":"lib.protobuf.BinaryEncoder.writeInt64String","location":"packages/frontend/lib.protobuf/-binary-encoder/write-int64-string.html","searchKeys":["writeInt64String","open fun writeInt64String(value: String)","lib.protobuf.BinaryEncoder.writeInt64String"]},{"name":"open fun writeInt8(value: Number)","description":"lib.protobuf.BinaryEncoder.writeInt8","location":"packages/frontend/lib.protobuf/-binary-encoder/write-int8.html","searchKeys":["writeInt8","open fun writeInt8(value: Number)","lib.protobuf.BinaryEncoder.writeInt8"]},{"name":"open fun writePackedBool(field: Number, value: Array<Boolean> = definedExternally)","description":"lib.protobuf.BinaryWriter.writePackedBool","location":"packages/frontend/lib.protobuf/-binary-writer/write-packed-bool.html","searchKeys":["writePackedBool","open fun writePackedBool(field: Number, value: Array<Boolean> = definedExternally)","lib.protobuf.BinaryWriter.writePackedBool"]},{"name":"open fun writePackedDouble(field: Number, value: Array<Number> = definedExternally)","description":"lib.protobuf.BinaryWriter.writePackedDouble","location":"packages/frontend/lib.protobuf/-binary-writer/write-packed-double.html","searchKeys":["writePackedDouble","open fun writePackedDouble(field: Number, value: Array<Number> = definedExternally)","lib.protobuf.BinaryWriter.writePackedDouble"]},{"name":"open fun writePackedEnum(field: Number, value: Array<Number> = definedExternally)","description":"lib.protobuf.BinaryWriter.writePackedEnum","location":"packages/frontend/lib.protobuf/-binary-writer/write-packed-enum.html","searchKeys":["writePackedEnum","open fun writePackedEnum(field: Number, value: Array<Number> = definedExternally)","lib.protobuf.BinaryWriter.writePackedEnum"]},{"name":"open fun writePackedFixed32(field: Number, value: Array<Number> = definedExternally)","description":"lib.protobuf.BinaryWriter.writePackedFixed32","location":"packages/frontend/lib.protobuf/-binary-writer/write-packed-fixed32.html","searchKeys":["writePackedFixed32","open fun writePackedFixed32(field: Number, value: Array<Number> = definedExternally)","lib.protobuf.BinaryWriter.writePackedFixed32"]},{"name":"open fun writePackedFixed64(field: Number, value: Array<Number> = definedExternally)","description":"lib.protobuf.BinaryWriter.writePackedFixed64","location":"packages/frontend/lib.protobuf/-binary-writer/write-packed-fixed64.html","searchKeys":["writePackedFixed64","open fun writePackedFixed64(field: Number, value: Array<Number> = definedExternally)","lib.protobuf.BinaryWriter.writePackedFixed64"]},{"name":"open fun writePackedFixed64String(field: Number, value: Array<String> = definedExternally)","description":"lib.protobuf.BinaryWriter.writePackedFixed64String","location":"packages/frontend/lib.protobuf/-binary-writer/write-packed-fixed64-string.html","searchKeys":["writePackedFixed64String","open fun writePackedFixed64String(field: Number, value: Array<String> = definedExternally)","lib.protobuf.BinaryWriter.writePackedFixed64String"]},{"name":"open fun writePackedFixedHash64(field: Number, value: Array<String> = definedExternally)","description":"lib.protobuf.BinaryWriter.writePackedFixedHash64","location":"packages/frontend/lib.protobuf/-binary-writer/write-packed-fixed-hash64.html","searchKeys":["writePackedFixedHash64","open fun writePackedFixedHash64(field: Number, value: Array<String> = definedExternally)","lib.protobuf.BinaryWriter.writePackedFixedHash64"]},{"name":"open fun writePackedFloat(field: Number, value: Array<Number> = definedExternally)","description":"lib.protobuf.BinaryWriter.writePackedFloat","location":"packages/frontend/lib.protobuf/-binary-writer/write-packed-float.html","searchKeys":["writePackedFloat","open fun writePackedFloat(field: Number, value: Array<Number> = definedExternally)","lib.protobuf.BinaryWriter.writePackedFloat"]},{"name":"open fun writePackedInt32(field: Number, value: Array<Number> = definedExternally)","description":"lib.protobuf.BinaryWriter.writePackedInt32","location":"packages/frontend/lib.protobuf/-binary-writer/write-packed-int32.html","searchKeys":["writePackedInt32","open fun writePackedInt32(field: Number, value: Array<Number> = definedExternally)","lib.protobuf.BinaryWriter.writePackedInt32"]},{"name":"open fun writePackedInt32String(field: Number, value: Array<String> = definedExternally)","description":"lib.protobuf.BinaryWriter.writePackedInt32String","location":"packages/frontend/lib.protobuf/-binary-writer/write-packed-int32-string.html","searchKeys":["writePackedInt32String","open fun writePackedInt32String(field: Number, value: Array<String> = definedExternally)","lib.protobuf.BinaryWriter.writePackedInt32String"]},{"name":"open fun writePackedInt64(field: Number, value: Array<Number> = definedExternally)","description":"lib.protobuf.BinaryWriter.writePackedInt64","location":"packages/frontend/lib.protobuf/-binary-writer/write-packed-int64.html","searchKeys":["writePackedInt64","open fun writePackedInt64(field: Number, value: Array<Number> = definedExternally)","lib.protobuf.BinaryWriter.writePackedInt64"]},{"name":"open fun writePackedInt64String(field: Number, value: Array<String> = definedExternally)","description":"lib.protobuf.BinaryWriter.writePackedInt64String","location":"packages/frontend/lib.protobuf/-binary-writer/write-packed-int64-string.html","searchKeys":["writePackedInt64String","open fun writePackedInt64String(field: Number, value: Array<String> = definedExternally)","lib.protobuf.BinaryWriter.writePackedInt64String"]},{"name":"open fun writePackedSfixed32(field: Number, value: Array<Number> = definedExternally)","description":"lib.protobuf.BinaryWriter.writePackedSfixed32","location":"packages/frontend/lib.protobuf/-binary-writer/write-packed-sfixed32.html","searchKeys":["writePackedSfixed32","open fun writePackedSfixed32(field: Number, value: Array<Number> = definedExternally)","lib.protobuf.BinaryWriter.writePackedSfixed32"]},{"name":"open fun writePackedSfixed64(field: Number, value: Array<Number> = definedExternally)","description":"lib.protobuf.BinaryWriter.writePackedSfixed64","location":"packages/frontend/lib.protobuf/-binary-writer/write-packed-sfixed64.html","searchKeys":["writePackedSfixed64","open fun writePackedSfixed64(field: Number, value: Array<Number> = definedExternally)","lib.protobuf.BinaryWriter.writePackedSfixed64"]},{"name":"open fun writePackedSfixed64String(field: Number, value: Array<String> = definedExternally)","description":"lib.protobuf.BinaryWriter.writePackedSfixed64String","location":"packages/frontend/lib.protobuf/-binary-writer/write-packed-sfixed64-string.html","searchKeys":["writePackedSfixed64String","open fun writePackedSfixed64String(field: Number, value: Array<String> = definedExternally)","lib.protobuf.BinaryWriter.writePackedSfixed64String"]},{"name":"open fun writePackedSint32(field: Number, value: Array<Number> = definedExternally)","description":"lib.protobuf.BinaryWriter.writePackedSint32","location":"packages/frontend/lib.protobuf/-binary-writer/write-packed-sint32.html","searchKeys":["writePackedSint32","open fun writePackedSint32(field: Number, value: Array<Number> = definedExternally)","lib.protobuf.BinaryWriter.writePackedSint32"]},{"name":"open fun writePackedSint64(field: Number, value: Array<Number> = definedExternally)","description":"lib.protobuf.BinaryWriter.writePackedSint64","location":"packages/frontend/lib.protobuf/-binary-writer/write-packed-sint64.html","searchKeys":["writePackedSint64","open fun writePackedSint64(field: Number, value: Array<Number> = definedExternally)","lib.protobuf.BinaryWriter.writePackedSint64"]},{"name":"open fun writePackedSint64String(field: Number, value: Array<String> = definedExternally)","description":"lib.protobuf.BinaryWriter.writePackedSint64String","location":"packages/frontend/lib.protobuf/-binary-writer/write-packed-sint64-string.html","searchKeys":["writePackedSint64String","open fun writePackedSint64String(field: Number, value: Array<String> = definedExternally)","lib.protobuf.BinaryWriter.writePackedSint64String"]},{"name":"open fun writePackedUint32(field: Number, value: Array<Number> = definedExternally)","description":"lib.protobuf.BinaryWriter.writePackedUint32","location":"packages/frontend/lib.protobuf/-binary-writer/write-packed-uint32.html","searchKeys":["writePackedUint32","open fun writePackedUint32(field: Number, value: Array<Number> = definedExternally)","lib.protobuf.BinaryWriter.writePackedUint32"]},{"name":"open fun writePackedUint32String(field: Number, value: Array<String> = definedExternally)","description":"lib.protobuf.BinaryWriter.writePackedUint32String","location":"packages/frontend/lib.protobuf/-binary-writer/write-packed-uint32-string.html","searchKeys":["writePackedUint32String","open fun writePackedUint32String(field: Number, value: Array<String> = definedExternally)","lib.protobuf.BinaryWriter.writePackedUint32String"]},{"name":"open fun writePackedUint64(field: Number, value: Array<Number> = definedExternally)","description":"lib.protobuf.BinaryWriter.writePackedUint64","location":"packages/frontend/lib.protobuf/-binary-writer/write-packed-uint64.html","searchKeys":["writePackedUint64","open fun writePackedUint64(field: Number, value: Array<Number> = definedExternally)","lib.protobuf.BinaryWriter.writePackedUint64"]},{"name":"open fun writePackedUint64String(field: Number, value: Array<String> = definedExternally)","description":"lib.protobuf.BinaryWriter.writePackedUint64String","location":"packages/frontend/lib.protobuf/-binary-writer/write-packed-uint64-string.html","searchKeys":["writePackedUint64String","open fun writePackedUint64String(field: Number, value: Array<String> = definedExternally)","lib.protobuf.BinaryWriter.writePackedUint64String"]},{"name":"open fun writePackedVarintHash64(field: Number, value: Array<String> = definedExternally)","description":"lib.protobuf.BinaryWriter.writePackedVarintHash64","location":"packages/frontend/lib.protobuf/-binary-writer/write-packed-varint-hash64.html","searchKeys":["writePackedVarintHash64","open fun writePackedVarintHash64(field: Number, value: Array<String> = definedExternally)","lib.protobuf.BinaryWriter.writePackedVarintHash64"]},{"name":"open fun writeRepeatedBool(field: Number, value: Array<Boolean> = definedExternally)","description":"lib.protobuf.BinaryWriter.writeRepeatedBool","location":"packages/frontend/lib.protobuf/-binary-writer/write-repeated-bool.html","searchKeys":["writeRepeatedBool","open fun writeRepeatedBool(field: Number, value: Array<Boolean> = definedExternally)","lib.protobuf.BinaryWriter.writeRepeatedBool"]},{"name":"open fun writeRepeatedBytes(field: Number, value: Array<Any> = definedExternally)","description":"lib.protobuf.BinaryWriter.writeRepeatedBytes","location":"packages/frontend/lib.protobuf/-binary-writer/write-repeated-bytes.html","searchKeys":["writeRepeatedBytes","open fun writeRepeatedBytes(field: Number, value: Array<Any> = definedExternally)","lib.protobuf.BinaryWriter.writeRepeatedBytes"]},{"name":"open fun writeRepeatedDouble(field: Number, value: Array<Number> = definedExternally)","description":"lib.protobuf.BinaryWriter.writeRepeatedDouble","location":"packages/frontend/lib.protobuf/-binary-writer/write-repeated-double.html","searchKeys":["writeRepeatedDouble","open fun writeRepeatedDouble(field: Number, value: Array<Number> = definedExternally)","lib.protobuf.BinaryWriter.writeRepeatedDouble"]},{"name":"open fun writeRepeatedEnum(field: Number, value: Array<Number> = definedExternally)","description":"lib.protobuf.BinaryWriter.writeRepeatedEnum","location":"packages/frontend/lib.protobuf/-binary-writer/write-repeated-enum.html","searchKeys":["writeRepeatedEnum","open fun writeRepeatedEnum(field: Number, value: Array<Number> = definedExternally)","lib.protobuf.BinaryWriter.writeRepeatedEnum"]},{"name":"open fun writeRepeatedFixed32(field: Number, value: Array<Number> = definedExternally)","description":"lib.protobuf.BinaryWriter.writeRepeatedFixed32","location":"packages/frontend/lib.protobuf/-binary-writer/write-repeated-fixed32.html","searchKeys":["writeRepeatedFixed32","open fun writeRepeatedFixed32(field: Number, value: Array<Number> = definedExternally)","lib.protobuf.BinaryWriter.writeRepeatedFixed32"]},{"name":"open fun writeRepeatedFixed64(field: Number, value: Array<Number> = definedExternally)","description":"lib.protobuf.BinaryWriter.writeRepeatedFixed64","location":"packages/frontend/lib.protobuf/-binary-writer/write-repeated-fixed64.html","searchKeys":["writeRepeatedFixed64","open fun writeRepeatedFixed64(field: Number, value: Array<Number> = definedExternally)","lib.protobuf.BinaryWriter.writeRepeatedFixed64"]},{"name":"open fun writeRepeatedFixed64String(field: Number, value: Array<String> = definedExternally)","description":"lib.protobuf.BinaryWriter.writeRepeatedFixed64String","location":"packages/frontend/lib.protobuf/-binary-writer/write-repeated-fixed64-string.html","searchKeys":["writeRepeatedFixed64String","open fun writeRepeatedFixed64String(field: Number, value: Array<String> = definedExternally)","lib.protobuf.BinaryWriter.writeRepeatedFixed64String"]},{"name":"open fun writeRepeatedFixedHash64(field: Number, value: Array<String> = definedExternally)","description":"lib.protobuf.BinaryWriter.writeRepeatedFixedHash64","location":"packages/frontend/lib.protobuf/-binary-writer/write-repeated-fixed-hash64.html","searchKeys":["writeRepeatedFixedHash64","open fun writeRepeatedFixedHash64(field: Number, value: Array<String> = definedExternally)","lib.protobuf.BinaryWriter.writeRepeatedFixedHash64"]},{"name":"open fun writeRepeatedFloat(field: Number, value: Array<Number> = definedExternally)","description":"lib.protobuf.BinaryWriter.writeRepeatedFloat","location":"packages/frontend/lib.protobuf/-binary-writer/write-repeated-float.html","searchKeys":["writeRepeatedFloat","open fun writeRepeatedFloat(field: Number, value: Array<Number> = definedExternally)","lib.protobuf.BinaryWriter.writeRepeatedFloat"]},{"name":"open fun writeRepeatedGroup(field: Number, value: Array<Message>, writerCallback: BinaryWriteCallback)","description":"lib.protobuf.BinaryWriter.writeRepeatedGroup","location":"packages/frontend/lib.protobuf/-binary-writer/write-repeated-group.html","searchKeys":["writeRepeatedGroup","open fun writeRepeatedGroup(field: Number, value: Array<Message>, writerCallback: BinaryWriteCallback)","lib.protobuf.BinaryWriter.writeRepeatedGroup"]},{"name":"open fun writeRepeatedInt32(field: Number, value: Array<Number> = definedExternally)","description":"lib.protobuf.BinaryWriter.writeRepeatedInt32","location":"packages/frontend/lib.protobuf/-binary-writer/write-repeated-int32.html","searchKeys":["writeRepeatedInt32","open fun writeRepeatedInt32(field: Number, value: Array<Number> = definedExternally)","lib.protobuf.BinaryWriter.writeRepeatedInt32"]},{"name":"open fun writeRepeatedInt32String(field: Number, value: Array<String> = definedExternally)","description":"lib.protobuf.BinaryWriter.writeRepeatedInt32String","location":"packages/frontend/lib.protobuf/-binary-writer/write-repeated-int32-string.html","searchKeys":["writeRepeatedInt32String","open fun writeRepeatedInt32String(field: Number, value: Array<String> = definedExternally)","lib.protobuf.BinaryWriter.writeRepeatedInt32String"]},{"name":"open fun writeRepeatedInt64(field: Number, value: Array<Number> = definedExternally)","description":"lib.protobuf.BinaryWriter.writeRepeatedInt64","location":"packages/frontend/lib.protobuf/-binary-writer/write-repeated-int64.html","searchKeys":["writeRepeatedInt64","open fun writeRepeatedInt64(field: Number, value: Array<Number> = definedExternally)","lib.protobuf.BinaryWriter.writeRepeatedInt64"]},{"name":"open fun writeRepeatedInt64String(field: Number, value: Array<String> = definedExternally)","description":"lib.protobuf.BinaryWriter.writeRepeatedInt64String","location":"packages/frontend/lib.protobuf/-binary-writer/write-repeated-int64-string.html","searchKeys":["writeRepeatedInt64String","open fun writeRepeatedInt64String(field: Number, value: Array<String> = definedExternally)","lib.protobuf.BinaryWriter.writeRepeatedInt64String"]},{"name":"open fun writeRepeatedMessage(field: Number, value: Array<Message>, writerCallback: BinaryWriteCallback)","description":"lib.protobuf.BinaryWriter.writeRepeatedMessage","location":"packages/frontend/lib.protobuf/-binary-writer/write-repeated-message.html","searchKeys":["writeRepeatedMessage","open fun writeRepeatedMessage(field: Number, value: Array<Message>, writerCallback: BinaryWriteCallback)","lib.protobuf.BinaryWriter.writeRepeatedMessage"]},{"name":"open fun writeRepeatedSfixed32(field: Number, value: Array<Number> = definedExternally)","description":"lib.protobuf.BinaryWriter.writeRepeatedSfixed32","location":"packages/frontend/lib.protobuf/-binary-writer/write-repeated-sfixed32.html","searchKeys":["writeRepeatedSfixed32","open fun writeRepeatedSfixed32(field: Number, value: Array<Number> = definedExternally)","lib.protobuf.BinaryWriter.writeRepeatedSfixed32"]},{"name":"open fun writeRepeatedSfixed64(field: Number, value: Array<Number> = definedExternally)","description":"lib.protobuf.BinaryWriter.writeRepeatedSfixed64","location":"packages/frontend/lib.protobuf/-binary-writer/write-repeated-sfixed64.html","searchKeys":["writeRepeatedSfixed64","open fun writeRepeatedSfixed64(field: Number, value: Array<Number> = definedExternally)","lib.protobuf.BinaryWriter.writeRepeatedSfixed64"]},{"name":"open fun writeRepeatedSfixed64String(field: Number, value: Array<String> = definedExternally)","description":"lib.protobuf.BinaryWriter.writeRepeatedSfixed64String","location":"packages/frontend/lib.protobuf/-binary-writer/write-repeated-sfixed64-string.html","searchKeys":["writeRepeatedSfixed64String","open fun writeRepeatedSfixed64String(field: Number, value: Array<String> = definedExternally)","lib.protobuf.BinaryWriter.writeRepeatedSfixed64String"]},{"name":"open fun writeRepeatedSint32(field: Number, value: Array<Number> = definedExternally)","description":"lib.protobuf.BinaryWriter.writeRepeatedSint32","location":"packages/frontend/lib.protobuf/-binary-writer/write-repeated-sint32.html","searchKeys":["writeRepeatedSint32","open fun writeRepeatedSint32(field: Number, value: Array<Number> = definedExternally)","lib.protobuf.BinaryWriter.writeRepeatedSint32"]},{"name":"open fun writeRepeatedSint64(field: Number, value: Array<Number> = definedExternally)","description":"lib.protobuf.BinaryWriter.writeRepeatedSint64","location":"packages/frontend/lib.protobuf/-binary-writer/write-repeated-sint64.html","searchKeys":["writeRepeatedSint64","open fun writeRepeatedSint64(field: Number, value: Array<Number> = definedExternally)","lib.protobuf.BinaryWriter.writeRepeatedSint64"]},{"name":"open fun writeRepeatedSint64String(field: Number, value: Array<String> = definedExternally)","description":"lib.protobuf.BinaryWriter.writeRepeatedSint64String","location":"packages/frontend/lib.protobuf/-binary-writer/write-repeated-sint64-string.html","searchKeys":["writeRepeatedSint64String","open fun writeRepeatedSint64String(field: Number, value: Array<String> = definedExternally)","lib.protobuf.BinaryWriter.writeRepeatedSint64String"]},{"name":"open fun writeRepeatedString(field: Number, value: Array<String> = definedExternally)","description":"lib.protobuf.BinaryWriter.writeRepeatedString","location":"packages/frontend/lib.protobuf/-binary-writer/write-repeated-string.html","searchKeys":["writeRepeatedString","open fun writeRepeatedString(field: Number, value: Array<String> = definedExternally)","lib.protobuf.BinaryWriter.writeRepeatedString"]},{"name":"open fun writeRepeatedUint32(field: Number, value: Array<Number> = definedExternally)","description":"lib.protobuf.BinaryWriter.writeRepeatedUint32","location":"packages/frontend/lib.protobuf/-binary-writer/write-repeated-uint32.html","searchKeys":["writeRepeatedUint32","open fun writeRepeatedUint32(field: Number, value: Array<Number> = definedExternally)","lib.protobuf.BinaryWriter.writeRepeatedUint32"]},{"name":"open fun writeRepeatedUint32String(field: Number, value: Array<String> = definedExternally)","description":"lib.protobuf.BinaryWriter.writeRepeatedUint32String","location":"packages/frontend/lib.protobuf/-binary-writer/write-repeated-uint32-string.html","searchKeys":["writeRepeatedUint32String","open fun writeRepeatedUint32String(field: Number, value: Array<String> = definedExternally)","lib.protobuf.BinaryWriter.writeRepeatedUint32String"]},{"name":"open fun writeRepeatedUint64(field: Number, value: Array<Number> = definedExternally)","description":"lib.protobuf.BinaryWriter.writeRepeatedUint64","location":"packages/frontend/lib.protobuf/-binary-writer/write-repeated-uint64.html","searchKeys":["writeRepeatedUint64","open fun writeRepeatedUint64(field: Number, value: Array<Number> = definedExternally)","lib.protobuf.BinaryWriter.writeRepeatedUint64"]},{"name":"open fun writeRepeatedUint64String(field: Number, value: Array<String> = definedExternally)","description":"lib.protobuf.BinaryWriter.writeRepeatedUint64String","location":"packages/frontend/lib.protobuf/-binary-writer/write-repeated-uint64-string.html","searchKeys":["writeRepeatedUint64String","open fun writeRepeatedUint64String(field: Number, value: Array<String> = definedExternally)","lib.protobuf.BinaryWriter.writeRepeatedUint64String"]},{"name":"open fun writeRepeatedVarintHash64(field: Number, value: Array<String> = definedExternally)","description":"lib.protobuf.BinaryWriter.writeRepeatedVarintHash64","location":"packages/frontend/lib.protobuf/-binary-writer/write-repeated-varint-hash64.html","searchKeys":["writeRepeatedVarintHash64","open fun writeRepeatedVarintHash64(field: Number, value: Array<String> = definedExternally)","lib.protobuf.BinaryWriter.writeRepeatedVarintHash64"]},{"name":"open fun writeSerializedMessage(bytes: Uint8Array, start: Number, end: Number)","description":"lib.protobuf.BinaryWriter.writeSerializedMessage","location":"packages/frontend/lib.protobuf/-binary-writer/write-serialized-message.html","searchKeys":["writeSerializedMessage","open fun writeSerializedMessage(bytes: Uint8Array, start: Number, end: Number)","lib.protobuf.BinaryWriter.writeSerializedMessage"]},{"name":"open fun writeSfixed32(field: Number, value: Number = definedExternally)","description":"lib.protobuf.BinaryWriter.writeSfixed32","location":"packages/frontend/lib.protobuf/-binary-writer/write-sfixed32.html","searchKeys":["writeSfixed32","open fun writeSfixed32(field: Number, value: Number = definedExternally)","lib.protobuf.BinaryWriter.writeSfixed32"]},{"name":"open fun writeSfixed64(field: Number, value: Number = definedExternally)","description":"lib.protobuf.BinaryWriter.writeSfixed64","location":"packages/frontend/lib.protobuf/-binary-writer/write-sfixed64.html","searchKeys":["writeSfixed64","open fun writeSfixed64(field: Number, value: Number = definedExternally)","lib.protobuf.BinaryWriter.writeSfixed64"]},{"name":"open fun writeSfixed64String(field: Number, value: String = definedExternally)","description":"lib.protobuf.BinaryWriter.writeSfixed64String","location":"packages/frontend/lib.protobuf/-binary-writer/write-sfixed64-string.html","searchKeys":["writeSfixed64String","open fun writeSfixed64String(field: Number, value: String = definedExternally)","lib.protobuf.BinaryWriter.writeSfixed64String"]},{"name":"open fun writeSignedVarint32(value: Number)","description":"lib.protobuf.BinaryEncoder.writeSignedVarint32","location":"packages/frontend/lib.protobuf/-binary-encoder/write-signed-varint32.html","searchKeys":["writeSignedVarint32","open fun writeSignedVarint32(value: Number)","lib.protobuf.BinaryEncoder.writeSignedVarint32"]},{"name":"open fun writeSignedVarint64(value: Number)","description":"lib.protobuf.BinaryEncoder.writeSignedVarint64","location":"packages/frontend/lib.protobuf/-binary-encoder/write-signed-varint64.html","searchKeys":["writeSignedVarint64","open fun writeSignedVarint64(value: Number)","lib.protobuf.BinaryEncoder.writeSignedVarint64"]},{"name":"open fun writeSint32(field: Number, value: Number = definedExternally)","description":"lib.protobuf.BinaryWriter.writeSint32","location":"packages/frontend/lib.protobuf/-binary-writer/write-sint32.html","searchKeys":["writeSint32","open fun writeSint32(field: Number, value: Number = definedExternally)","lib.protobuf.BinaryWriter.writeSint32"]},{"name":"open fun writeSint64(field: Number, value: Number = definedExternally)","description":"lib.protobuf.BinaryWriter.writeSint64","location":"packages/frontend/lib.protobuf/-binary-writer/write-sint64.html","searchKeys":["writeSint64","open fun writeSint64(field: Number, value: Number = definedExternally)","lib.protobuf.BinaryWriter.writeSint64"]},{"name":"open fun writeSint64String(field: Number, value: String = definedExternally)","description":"lib.protobuf.BinaryWriter.writeSint64String","location":"packages/frontend/lib.protobuf/-binary-writer/write-sint64-string.html","searchKeys":["writeSint64String","open fun writeSint64String(field: Number, value: String = definedExternally)","lib.protobuf.BinaryWriter.writeSint64String"]},{"name":"open fun writeSplitFixed64(lowBits: Number, highBits: Number)","description":"lib.protobuf.BinaryEncoder.writeSplitFixed64","location":"packages/frontend/lib.protobuf/-binary-encoder/write-split-fixed64.html","searchKeys":["writeSplitFixed64","open fun writeSplitFixed64(lowBits: Number, highBits: Number)","lib.protobuf.BinaryEncoder.writeSplitFixed64"]},{"name":"open fun writeSplitVarint64(lowBits: Number, highBits: Number)","description":"lib.protobuf.BinaryEncoder.writeSplitVarint64","location":"packages/frontend/lib.protobuf/-binary-encoder/write-split-varint64.html","searchKeys":["writeSplitVarint64","open fun writeSplitVarint64(lowBits: Number, highBits: Number)","lib.protobuf.BinaryEncoder.writeSplitVarint64"]},{"name":"open fun writeString(field: Number, value: String = definedExternally)","description":"lib.protobuf.BinaryWriter.writeString","location":"packages/frontend/lib.protobuf/-binary-writer/write-string.html","searchKeys":["writeString","open fun writeString(field: Number, value: String = definedExternally)","lib.protobuf.BinaryWriter.writeString"]},{"name":"open fun writeString(value: String): Number","description":"lib.protobuf.BinaryEncoder.writeString","location":"packages/frontend/lib.protobuf/-binary-encoder/write-string.html","searchKeys":["writeString","open fun writeString(value: String): Number","lib.protobuf.BinaryEncoder.writeString"]},{"name":"open fun writeUint16(value: Number)","description":"lib.protobuf.BinaryEncoder.writeUint16","location":"packages/frontend/lib.protobuf/-binary-encoder/write-uint16.html","searchKeys":["writeUint16","open fun writeUint16(value: Number)","lib.protobuf.BinaryEncoder.writeUint16"]},{"name":"open fun writeUint32(field: Number, value: Number = definedExternally)","description":"lib.protobuf.BinaryWriter.writeUint32","location":"packages/frontend/lib.protobuf/-binary-writer/write-uint32.html","searchKeys":["writeUint32","open fun writeUint32(field: Number, value: Number = definedExternally)","lib.protobuf.BinaryWriter.writeUint32"]},{"name":"open fun writeUint32(value: Number)","description":"lib.protobuf.BinaryEncoder.writeUint32","location":"packages/frontend/lib.protobuf/-binary-encoder/write-uint32.html","searchKeys":["writeUint32","open fun writeUint32(value: Number)","lib.protobuf.BinaryEncoder.writeUint32"]},{"name":"open fun writeUint32String(field: Number, value: String = definedExternally)","description":"lib.protobuf.BinaryWriter.writeUint32String","location":"packages/frontend/lib.protobuf/-binary-writer/write-uint32-string.html","searchKeys":["writeUint32String","open fun writeUint32String(field: Number, value: String = definedExternally)","lib.protobuf.BinaryWriter.writeUint32String"]},{"name":"open fun writeUint64(field: Number, value: Number = definedExternally)","description":"lib.protobuf.BinaryWriter.writeUint64","location":"packages/frontend/lib.protobuf/-binary-writer/write-uint64.html","searchKeys":["writeUint64","open fun writeUint64(field: Number, value: Number = definedExternally)","lib.protobuf.BinaryWriter.writeUint64"]},{"name":"open fun writeUint64(value: Number)","description":"lib.protobuf.BinaryEncoder.writeUint64","location":"packages/frontend/lib.protobuf/-binary-encoder/write-uint64.html","searchKeys":["writeUint64","open fun writeUint64(value: Number)","lib.protobuf.BinaryEncoder.writeUint64"]},{"name":"open fun writeUint64String(field: Number, value: String = definedExternally)","description":"lib.protobuf.BinaryWriter.writeUint64String","location":"packages/frontend/lib.protobuf/-binary-writer/write-uint64-string.html","searchKeys":["writeUint64String","open fun writeUint64String(field: Number, value: String = definedExternally)","lib.protobuf.BinaryWriter.writeUint64String"]},{"name":"open fun writeUint8(value: Number)","description":"lib.protobuf.BinaryEncoder.writeUint8","location":"packages/frontend/lib.protobuf/-binary-encoder/write-uint8.html","searchKeys":["writeUint8","open fun writeUint8(value: Number)","lib.protobuf.BinaryEncoder.writeUint8"]},{"name":"open fun writeUnsignedVarint32(value: Number)","description":"lib.protobuf.BinaryEncoder.writeUnsignedVarint32","location":"packages/frontend/lib.protobuf/-binary-encoder/write-unsigned-varint32.html","searchKeys":["writeUnsignedVarint32","open fun writeUnsignedVarint32(value: Number)","lib.protobuf.BinaryEncoder.writeUnsignedVarint32"]},{"name":"open fun writeUnsignedVarint64(value: Number)","description":"lib.protobuf.BinaryEncoder.writeUnsignedVarint64","location":"packages/frontend/lib.protobuf/-binary-encoder/write-unsigned-varint64.html","searchKeys":["writeUnsignedVarint64","open fun writeUnsignedVarint64(value: Number)","lib.protobuf.BinaryEncoder.writeUnsignedVarint64"]},{"name":"open fun writeVarintHash64(field: Number, value: String = definedExternally)","description":"lib.protobuf.BinaryWriter.writeVarintHash64","location":"packages/frontend/lib.protobuf/-binary-writer/write-varint-hash64.html","searchKeys":["writeVarintHash64","open fun writeVarintHash64(field: Number, value: String = definedExternally)","lib.protobuf.BinaryWriter.writeVarintHash64"]},{"name":"open fun writeVarintHash64(hash: String)","description":"lib.protobuf.BinaryEncoder.writeVarintHash64","location":"packages/frontend/lib.protobuf/-binary-encoder/write-varint-hash64.html","searchKeys":["writeVarintHash64","open fun writeVarintHash64(hash: String)","lib.protobuf.BinaryEncoder.writeVarintHash64"]},{"name":"open fun writeZigzagVarint32(value: Number)","description":"lib.protobuf.BinaryEncoder.writeZigzagVarint32","location":"packages/frontend/lib.protobuf/-binary-encoder/write-zigzag-varint32.html","searchKeys":["writeZigzagVarint32","open fun writeZigzagVarint32(value: Number)","lib.protobuf.BinaryEncoder.writeZigzagVarint32"]},{"name":"open fun writeZigzagVarint64(value: Number)","description":"lib.protobuf.BinaryEncoder.writeZigzagVarint64","location":"packages/frontend/lib.protobuf/-binary-encoder/write-zigzag-varint64.html","searchKeys":["writeZigzagVarint64","open fun writeZigzagVarint64(value: Number)","lib.protobuf.BinaryEncoder.writeZigzagVarint64"]},{"name":"open fun writeZigzagVarint64String(value: String)","description":"lib.protobuf.BinaryEncoder.writeZigzagVarint64String","location":"packages/frontend/lib.protobuf/-binary-encoder/write-zigzag-varint64-string.html","searchKeys":["writeZigzagVarint64String","open fun writeZigzagVarint64String(value: String)","lib.protobuf.BinaryEncoder.writeZigzagVarint64String"]},{"name":"open fun zero(): Boolean","description":"lib.protobuf.UInt64.zero","location":"packages/frontend/lib.protobuf/-u-int64/zero.html","searchKeys":["zero","open fun zero(): Boolean","lib.protobuf.UInt64.zero"]},{"name":"open override fun toString(): String","description":"lib.protobuf.Int64.toString","location":"packages/frontend/lib.protobuf/-int64/to-string.html","searchKeys":["toString","open override fun toString(): String","lib.protobuf.Int64.toString"]},{"name":"open override fun toString(): String","description":"lib.protobuf.Message.toString","location":"packages/frontend/lib.protobuf/-message/to-string.html","searchKeys":["toString","open override fun toString(): String","lib.protobuf.Message.toString"]},{"name":"open override fun toString(): String","description":"lib.protobuf.UInt64.toString","location":"packages/frontend/lib.protobuf/-u-int64/to-string.html","searchKeys":["toString","open override fun toString(): String","lib.protobuf.UInt64.toString"]},{"name":"open var VarDate_typekey: VarDate","description":"lib.tsstdlib.VarDate.VarDate_typekey","location":"packages/frontend/lib.tsstdlib/-var-date/-var-date_typekey.html","searchKeys":["VarDate_typekey","open var VarDate_typekey: VarDate","lib.tsstdlib.VarDate.VarDate_typekey"]},{"name":"open var binaryReaderFn: BinaryRead","description":"lib.protobuf.ExtensionFieldBinaryInfo.binaryReaderFn","location":"packages/frontend/lib.protobuf/-extension-field-binary-info/binary-reader-fn.html","searchKeys":["binaryReaderFn","open var binaryReaderFn: BinaryRead","lib.protobuf.ExtensionFieldBinaryInfo.binaryReaderFn"]},{"name":"open var binaryWriterFn: BinaryWrite","description":"lib.protobuf.ExtensionFieldBinaryInfo.binaryWriterFn","location":"packages/frontend/lib.protobuf/-extension-field-binary-info/binary-writer-fn.html","searchKeys":["binaryWriterFn","open var binaryWriterFn: BinaryWrite","lib.protobuf.ExtensionFieldBinaryInfo.binaryWriterFn"]},{"name":"open var caseFirst: String?","description":"lib.tsstdlib.intl.CollatorOptions.caseFirst","location":"packages/frontend/lib.tsstdlib.intl/-collator-options/case-first.html","searchKeys":["caseFirst","open var caseFirst: String?","lib.tsstdlib.intl.CollatorOptions.caseFirst"]},{"name":"open var clockseq: Number?","description":"lib.uuid.V1BaseOptions.clockseq","location":"packages/frontend/lib.uuid/-v1-base-options/clockseq.html","searchKeys":["clockseq","open var clockseq: Number?","lib.uuid.V1BaseOptions.clockseq"]},{"name":"open var ctor: Any","description":"lib.protobuf.ExtensionFieldInfo.ctor","location":"packages/frontend/lib.protobuf/-extension-field-info/ctor.html","searchKeys":["ctor","open var ctor: Any","lib.protobuf.ExtensionFieldInfo.ctor"]},{"name":"open var currency: String?","description":"lib.tsstdlib.intl.NumberFormatOptions.currency","location":"packages/frontend/lib.tsstdlib.intl/-number-format-options/currency.html","searchKeys":["currency","open var currency: String?","lib.tsstdlib.intl.NumberFormatOptions.currency"]},{"name":"open var currency: String?","description":"lib.tsstdlib.intl.ResolvedNumberFormatOptions.currency","location":"packages/frontend/lib.tsstdlib.intl/-resolved-number-format-options/currency.html","searchKeys":["currency","open var currency: String?","lib.tsstdlib.intl.ResolvedNumberFormatOptions.currency"]},{"name":"open var currencyDisplay: String?","description":"lib.tsstdlib.intl.NumberFormatOptions.currencyDisplay","location":"packages/frontend/lib.tsstdlib.intl/-number-format-options/currency-display.html","searchKeys":["currencyDisplay","open var currencyDisplay: String?","lib.tsstdlib.intl.NumberFormatOptions.currencyDisplay"]},{"name":"open var currencyDisplay: String?","description":"lib.tsstdlib.intl.ResolvedNumberFormatOptions.currencyDisplay","location":"packages/frontend/lib.tsstdlib.intl/-resolved-number-format-options/currency-display.html","searchKeys":["currencyDisplay","open var currencyDisplay: String?","lib.tsstdlib.intl.ResolvedNumberFormatOptions.currencyDisplay"]},{"name":"open var day: String?","description":"lib.tsstdlib.intl.DateTimeFormatOptions.day","location":"packages/frontend/lib.tsstdlib.intl/-date-time-format-options/day.html","searchKeys":["day","open var day: String?","lib.tsstdlib.intl.DateTimeFormatOptions.day"]},{"name":"open var day: String?","description":"lib.tsstdlib.intl.ResolvedDateTimeFormatOptions.day","location":"packages/frontend/lib.tsstdlib.intl/-resolved-date-time-format-options/day.html","searchKeys":["day","open var day: String?","lib.tsstdlib.intl.ResolvedDateTimeFormatOptions.day"]},{"name":"open var done: Boolean?","description":"lib.tsstdlib.IteratorYieldResult.done","location":"packages/frontend/lib.tsstdlib/-iterator-yield-result/done.html","searchKeys":["done","open var done: Boolean?","lib.tsstdlib.IteratorYieldResult.done"]},{"name":"open var era: String?","description":"lib.tsstdlib.intl.DateTimeFormatOptions.era","location":"packages/frontend/lib.tsstdlib.intl/-date-time-format-options/era.html","searchKeys":["era","open var era: String?","lib.tsstdlib.intl.DateTimeFormatOptions.era"]},{"name":"open var era: String?","description":"lib.tsstdlib.intl.ResolvedDateTimeFormatOptions.era","location":"packages/frontend/lib.tsstdlib.intl/-resolved-date-time-format-options/era.html","searchKeys":["era","open var era: String?","lib.tsstdlib.intl.ResolvedDateTimeFormatOptions.era"]},{"name":"open var fieldIndex: Number","description":"lib.protobuf.ExtensionFieldInfo.fieldIndex","location":"packages/frontend/lib.protobuf/-extension-field-info/field-index.html","searchKeys":["fieldIndex","open var fieldIndex: Number","lib.protobuf.ExtensionFieldInfo.fieldIndex"]},{"name":"open var fieldInfo: ExtensionFieldInfo<T>","description":"lib.protobuf.ExtensionFieldBinaryInfo.fieldInfo","location":"packages/frontend/lib.protobuf/-extension-field-binary-info/field-info.html","searchKeys":["fieldInfo","open var fieldInfo: ExtensionFieldInfo<T>","lib.protobuf.ExtensionFieldBinaryInfo.fieldInfo"]},{"name":"open var fieldName: Number","description":"lib.protobuf.ExtensionFieldInfo.fieldName","location":"packages/frontend/lib.protobuf/-extension-field-info/field-name.html","searchKeys":["fieldName","open var fieldName: Number","lib.protobuf.ExtensionFieldInfo.fieldName"]},{"name":"open var formatMatcher: String?","description":"lib.tsstdlib.intl.DateTimeFormatOptions.formatMatcher","location":"packages/frontend/lib.tsstdlib.intl/-date-time-format-options/format-matcher.html","searchKeys":["formatMatcher","open var formatMatcher: String?","lib.tsstdlib.intl.DateTimeFormatOptions.formatMatcher"]},{"name":"open var hi: Number","description":"lib.protobuf.Int64.hi","location":"packages/frontend/lib.protobuf/-int64/hi.html","searchKeys":["hi","open var hi: Number","lib.protobuf.Int64.hi"]},{"name":"open var hi: Number","description":"lib.protobuf.UInt64.hi","location":"packages/frontend/lib.protobuf/-u-int64/hi.html","searchKeys":["hi","open var hi: Number","lib.protobuf.UInt64.hi"]},{"name":"open var hour12: Boolean?","description":"lib.tsstdlib.intl.DateTimeFormatOptions.hour12","location":"packages/frontend/lib.tsstdlib.intl/-date-time-format-options/hour12.html","searchKeys":["hour12","open var hour12: Boolean?","lib.tsstdlib.intl.DateTimeFormatOptions.hour12"]},{"name":"open var hour12: Boolean?","description":"lib.tsstdlib.intl.ResolvedDateTimeFormatOptions.hour12","location":"packages/frontend/lib.tsstdlib.intl/-resolved-date-time-format-options/hour12.html","searchKeys":["hour12","open var hour12: Boolean?","lib.tsstdlib.intl.ResolvedDateTimeFormatOptions.hour12"]},{"name":"open var hour: String?","description":"lib.tsstdlib.intl.DateTimeFormatOptions.hour","location":"packages/frontend/lib.tsstdlib.intl/-date-time-format-options/hour.html","searchKeys":["hour","open var hour: String?","lib.tsstdlib.intl.DateTimeFormatOptions.hour"]},{"name":"open var hour: String?","description":"lib.tsstdlib.intl.ResolvedDateTimeFormatOptions.hour","location":"packages/frontend/lib.tsstdlib.intl/-resolved-date-time-format-options/hour.html","searchKeys":["hour","open var hour: String?","lib.tsstdlib.intl.ResolvedDateTimeFormatOptions.hour"]},{"name":"open var ignorePunctuation: Boolean?","description":"lib.tsstdlib.intl.CollatorOptions.ignorePunctuation","location":"packages/frontend/lib.tsstdlib.intl/-collator-options/ignore-punctuation.html","searchKeys":["ignorePunctuation","open var ignorePunctuation: Boolean?","lib.tsstdlib.intl.CollatorOptions.ignorePunctuation"]},{"name":"open var isRepeated: Number","description":"lib.protobuf.ExtensionFieldInfo.isRepeated","location":"packages/frontend/lib.protobuf/-extension-field-info/is-repeated.html","searchKeys":["isRepeated","open var isRepeated: Number","lib.protobuf.ExtensionFieldInfo.isRepeated"]},{"name":"open var lo: Number","description":"lib.protobuf.Int64.lo","location":"packages/frontend/lib.protobuf/-int64/lo.html","searchKeys":["lo","open var lo: Number","lib.protobuf.Int64.lo"]},{"name":"open var lo: Number","description":"lib.protobuf.UInt64.lo","location":"packages/frontend/lib.protobuf/-u-int64/lo.html","searchKeys":["lo","open var lo: Number","lib.protobuf.UInt64.lo"]},{"name":"open var localeMatcher: String?","description":"lib.tsstdlib.intl.CollatorOptions.localeMatcher","location":"packages/frontend/lib.tsstdlib.intl/-collator-options/locale-matcher.html","searchKeys":["localeMatcher","open var localeMatcher: String?","lib.tsstdlib.intl.CollatorOptions.localeMatcher"]},{"name":"open var localeMatcher: String?","description":"lib.tsstdlib.intl.DateTimeFormatOptions.localeMatcher","location":"packages/frontend/lib.tsstdlib.intl/-date-time-format-options/locale-matcher.html","searchKeys":["localeMatcher","open var localeMatcher: String?","lib.tsstdlib.intl.DateTimeFormatOptions.localeMatcher"]},{"name":"open var localeMatcher: String?","description":"lib.tsstdlib.intl.NumberFormatOptions.localeMatcher","location":"packages/frontend/lib.tsstdlib.intl/-number-format-options/locale-matcher.html","searchKeys":["localeMatcher","open var localeMatcher: String?","lib.tsstdlib.intl.NumberFormatOptions.localeMatcher"]},{"name":"open var maximumFractionDigits: Number?","description":"lib.tsstdlib.intl.NumberFormatOptions.maximumFractionDigits","location":"packages/frontend/lib.tsstdlib.intl/-number-format-options/maximum-fraction-digits.html","searchKeys":["maximumFractionDigits","open var maximumFractionDigits: Number?","lib.tsstdlib.intl.NumberFormatOptions.maximumFractionDigits"]},{"name":"open var maximumSignificantDigits: Number?","description":"lib.tsstdlib.intl.NumberFormatOptions.maximumSignificantDigits","location":"packages/frontend/lib.tsstdlib.intl/-number-format-options/maximum-significant-digits.html","searchKeys":["maximumSignificantDigits","open var maximumSignificantDigits: Number?","lib.tsstdlib.intl.NumberFormatOptions.maximumSignificantDigits"]},{"name":"open var maximumSignificantDigits: Number?","description":"lib.tsstdlib.intl.ResolvedNumberFormatOptions.maximumSignificantDigits","location":"packages/frontend/lib.tsstdlib.intl/-resolved-number-format-options/maximum-significant-digits.html","searchKeys":["maximumSignificantDigits","open var maximumSignificantDigits: Number?","lib.tsstdlib.intl.ResolvedNumberFormatOptions.maximumSignificantDigits"]},{"name":"open var minimumFractionDigits: Number?","description":"lib.tsstdlib.intl.NumberFormatOptions.minimumFractionDigits","location":"packages/frontend/lib.tsstdlib.intl/-number-format-options/minimum-fraction-digits.html","searchKeys":["minimumFractionDigits","open var minimumFractionDigits: Number?","lib.tsstdlib.intl.NumberFormatOptions.minimumFractionDigits"]},{"name":"open var minimumIntegerDigits: Number?","description":"lib.tsstdlib.intl.NumberFormatOptions.minimumIntegerDigits","location":"packages/frontend/lib.tsstdlib.intl/-number-format-options/minimum-integer-digits.html","searchKeys":["minimumIntegerDigits","open var minimumIntegerDigits: Number?","lib.tsstdlib.intl.NumberFormatOptions.minimumIntegerDigits"]},{"name":"open var minimumSignificantDigits: Number?","description":"lib.tsstdlib.intl.NumberFormatOptions.minimumSignificantDigits","location":"packages/frontend/lib.tsstdlib.intl/-number-format-options/minimum-significant-digits.html","searchKeys":["minimumSignificantDigits","open var minimumSignificantDigits: Number?","lib.tsstdlib.intl.NumberFormatOptions.minimumSignificantDigits"]},{"name":"open var minimumSignificantDigits: Number?","description":"lib.tsstdlib.intl.ResolvedNumberFormatOptions.minimumSignificantDigits","location":"packages/frontend/lib.tsstdlib.intl/-resolved-number-format-options/minimum-significant-digits.html","searchKeys":["minimumSignificantDigits","open var minimumSignificantDigits: Number?","lib.tsstdlib.intl.ResolvedNumberFormatOptions.minimumSignificantDigits"]},{"name":"open var minute: String?","description":"lib.tsstdlib.intl.DateTimeFormatOptions.minute","location":"packages/frontend/lib.tsstdlib.intl/-date-time-format-options/minute.html","searchKeys":["minute","open var minute: String?","lib.tsstdlib.intl.DateTimeFormatOptions.minute"]},{"name":"open var minute: String?","description":"lib.tsstdlib.intl.ResolvedDateTimeFormatOptions.minute","location":"packages/frontend/lib.tsstdlib.intl/-resolved-date-time-format-options/minute.html","searchKeys":["minute","open var minute: String?","lib.tsstdlib.intl.ResolvedDateTimeFormatOptions.minute"]},{"name":"open var month: String?","description":"lib.tsstdlib.intl.DateTimeFormatOptions.month","location":"packages/frontend/lib.tsstdlib.intl/-date-time-format-options/month.html","searchKeys":["month","open var month: String?","lib.tsstdlib.intl.DateTimeFormatOptions.month"]},{"name":"open var month: String?","description":"lib.tsstdlib.intl.ResolvedDateTimeFormatOptions.month","location":"packages/frontend/lib.tsstdlib.intl/-resolved-date-time-format-options/month.html","searchKeys":["month","open var month: String?","lib.tsstdlib.intl.ResolvedDateTimeFormatOptions.month"]},{"name":"open var msecs: dynamic","description":"lib.uuid.V1BaseOptions.msecs","location":"packages/frontend/lib.uuid/-v1-base-options/msecs.html","searchKeys":["msecs","open var msecs: dynamic","lib.uuid.V1BaseOptions.msecs"]},{"name":"open var node: ArrayLike<Number>?","description":"lib.uuid.V1BaseOptions.node","location":"packages/frontend/lib.uuid/-v1-base-options/node.html","searchKeys":["node","open var node: ArrayLike<Number>?","lib.uuid.V1BaseOptions.node"]},{"name":"open var nsecs: Number?","description":"lib.uuid.V1BaseOptions.nsecs","location":"packages/frontend/lib.uuid/-v1-base-options/nsecs.html","searchKeys":["nsecs","open var nsecs: Number?","lib.uuid.V1BaseOptions.nsecs"]},{"name":"open var numeric: Boolean?","description":"lib.tsstdlib.intl.CollatorOptions.numeric","location":"packages/frontend/lib.tsstdlib.intl/-collator-options/numeric.html","searchKeys":["numeric","open var numeric: Boolean?","lib.tsstdlib.intl.CollatorOptions.numeric"]},{"name":"open var opt_binaryMessageDeserializeFn: (msg: Message, reader: BinaryReader) -> Message","description":"lib.protobuf.ExtensionFieldBinaryInfo.opt_binaryMessageDeserializeFn","location":"packages/frontend/lib.protobuf/-extension-field-binary-info/opt_binary-message-deserialize-fn.html","searchKeys":["opt_binaryMessageDeserializeFn","open var opt_binaryMessageDeserializeFn: (msg: Message, reader: BinaryReader) -> Message","lib.protobuf.ExtensionFieldBinaryInfo.opt_binaryMessageDeserializeFn"]},{"name":"open var opt_binaryMessageSerializeFn: (msg: Message, writer: BinaryWriter) -> Unit","description":"lib.protobuf.ExtensionFieldBinaryInfo.opt_binaryMessageSerializeFn","location":"packages/frontend/lib.protobuf/-extension-field-binary-info/opt_binary-message-serialize-fn.html","searchKeys":["opt_binaryMessageSerializeFn","open var opt_binaryMessageSerializeFn: (msg: Message, writer: BinaryWriter) -> Unit","lib.protobuf.ExtensionFieldBinaryInfo.opt_binaryMessageSerializeFn"]},{"name":"open var opt_isPacked: Boolean","description":"lib.protobuf.ExtensionFieldBinaryInfo.opt_isPacked","location":"packages/frontend/lib.protobuf/-extension-field-binary-info/opt_is-packed.html","searchKeys":["opt_isPacked","open var opt_isPacked: Boolean","lib.protobuf.ExtensionFieldBinaryInfo.opt_isPacked"]},{"name":"open var random: ArrayLike<Number>?","description":"lib.uuid.RandomOptions.random","location":"packages/frontend/lib.uuid/-random-options/random.html","searchKeys":["random","open var random: ArrayLike<Number>?","lib.uuid.RandomOptions.random"]},{"name":"open var readMessage: BinaryRead","description":"lib.protobuf.BinaryReader.readMessage","location":"packages/frontend/lib.protobuf/-binary-reader/read-message.html","searchKeys":["readMessage","open var readMessage: BinaryRead","lib.protobuf.BinaryReader.readMessage"]},{"name":"open var rng: () -> ArrayLike<Number>?","description":"lib.uuid.RngOptions.rng","location":"packages/frontend/lib.uuid/-rng-options/rng.html","searchKeys":["rng","open var rng: () -> ArrayLike<Number>?","lib.uuid.RngOptions.rng"]},{"name":"open var second: String?","description":"lib.tsstdlib.intl.DateTimeFormatOptions.second","location":"packages/frontend/lib.tsstdlib.intl/-date-time-format-options/second.html","searchKeys":["second","open var second: String?","lib.tsstdlib.intl.DateTimeFormatOptions.second"]},{"name":"open var second: String?","description":"lib.tsstdlib.intl.ResolvedDateTimeFormatOptions.second","location":"packages/frontend/lib.tsstdlib.intl/-resolved-date-time-format-options/second.html","searchKeys":["second","open var second: String?","lib.tsstdlib.intl.ResolvedDateTimeFormatOptions.second"]},{"name":"open var sensitivity: String?","description":"lib.tsstdlib.intl.CollatorOptions.sensitivity","location":"packages/frontend/lib.tsstdlib.intl/-collator-options/sensitivity.html","searchKeys":["sensitivity","open var sensitivity: String?","lib.tsstdlib.intl.CollatorOptions.sensitivity"]},{"name":"open var style: String?","description":"lib.tsstdlib.intl.NumberFormatOptions.style","location":"packages/frontend/lib.tsstdlib.intl/-number-format-options/style.html","searchKeys":["style","open var style: String?","lib.tsstdlib.intl.NumberFormatOptions.style"]},{"name":"open var timeZone: String?","description":"lib.tsstdlib.intl.DateTimeFormatOptions.timeZone","location":"packages/frontend/lib.tsstdlib.intl/-date-time-format-options/time-zone.html","searchKeys":["timeZone","open var timeZone: String?","lib.tsstdlib.intl.DateTimeFormatOptions.timeZone"]},{"name":"open var timeZoneName: String?","description":"lib.tsstdlib.intl.DateTimeFormatOptions.timeZoneName","location":"packages/frontend/lib.tsstdlib.intl/-date-time-format-options/time-zone-name.html","searchKeys":["timeZoneName","open var timeZoneName: String?","lib.tsstdlib.intl.DateTimeFormatOptions.timeZoneName"]},{"name":"open var timeZoneName: String?","description":"lib.tsstdlib.intl.ResolvedDateTimeFormatOptions.timeZoneName","location":"packages/frontend/lib.tsstdlib.intl/-resolved-date-time-format-options/time-zone-name.html","searchKeys":["timeZoneName","open var timeZoneName: String?","lib.tsstdlib.intl.ResolvedDateTimeFormatOptions.timeZoneName"]},{"name":"open var toObjectFn: StaticToObject","description":"lib.protobuf.ExtensionFieldInfo.toObjectFn","location":"packages/frontend/lib.protobuf/-extension-field-info/to-object-fn.html","searchKeys":["toObjectFn","open var toObjectFn: StaticToObject","lib.protobuf.ExtensionFieldInfo.toObjectFn"]},{"name":"open var usage: String?","description":"lib.tsstdlib.intl.CollatorOptions.usage","location":"packages/frontend/lib.tsstdlib.intl/-collator-options/usage.html","searchKeys":["usage","open var usage: String?","lib.tsstdlib.intl.CollatorOptions.usage"]},{"name":"open var useGrouping: Boolean?","description":"lib.tsstdlib.intl.NumberFormatOptions.useGrouping","location":"packages/frontend/lib.tsstdlib.intl/-number-format-options/use-grouping.html","searchKeys":["useGrouping","open var useGrouping: Boolean?","lib.tsstdlib.intl.NumberFormatOptions.useGrouping"]},{"name":"open var weekday: String?","description":"lib.tsstdlib.intl.DateTimeFormatOptions.weekday","location":"packages/frontend/lib.tsstdlib.intl/-date-time-format-options/weekday.html","searchKeys":["weekday","open var weekday: String?","lib.tsstdlib.intl.DateTimeFormatOptions.weekday"]},{"name":"open var weekday: String?","description":"lib.tsstdlib.intl.ResolvedDateTimeFormatOptions.weekday","location":"packages/frontend/lib.tsstdlib.intl/-resolved-date-time-format-options/weekday.html","searchKeys":["weekday","open var weekday: String?","lib.tsstdlib.intl.ResolvedDateTimeFormatOptions.weekday"]},{"name":"open var writeMessage: BinaryWrite","description":"lib.protobuf.BinaryWriter.writeMessage","location":"packages/frontend/lib.protobuf/-binary-writer/write-message.html","searchKeys":["writeMessage","open var writeMessage: BinaryWrite","lib.protobuf.BinaryWriter.writeMessage"]},{"name":"open var year: String?","description":"lib.tsstdlib.intl.DateTimeFormatOptions.year","location":"packages/frontend/lib.tsstdlib.intl/-date-time-format-options/year.html","searchKeys":["year","open var year: String?","lib.tsstdlib.intl.DateTimeFormatOptions.year"]},{"name":"open var year: String?","description":"lib.tsstdlib.intl.ResolvedDateTimeFormatOptions.year","location":"packages/frontend/lib.tsstdlib.intl/-resolved-date-time-format-options/year.html","searchKeys":["year","open var year: String?","lib.tsstdlib.intl.ResolvedDateTimeFormatOptions.year"]},{"name":"operator fun invoke(locales: Any = definedExternally, options: CollatorOptions = definedExternally): Collator","description":"lib.tsstdlib.intl.Collator.Companion.invoke","location":"packages/frontend/lib.tsstdlib.intl/-collator/-companion/invoke.html","searchKeys":["invoke","operator fun invoke(locales: Any = definedExternally, options: CollatorOptions = definedExternally): Collator","lib.tsstdlib.intl.Collator.Companion.invoke"]},{"name":"operator fun invoke(locales: Any = definedExternally, options: DateTimeFormatOptions = definedExternally): DateTimeFormat","description":"lib.tsstdlib.intl.DateTimeFormat.Companion.invoke","location":"packages/frontend/lib.tsstdlib.intl/-date-time-format/-companion/invoke.html","searchKeys":["invoke","operator fun invoke(locales: Any = definedExternally, options: DateTimeFormatOptions = definedExternally): DateTimeFormat","lib.tsstdlib.intl.DateTimeFormat.Companion.invoke"]},{"name":"operator fun invoke(locales: Any = definedExternally, options: NumberFormatOptions = definedExternally): NumberFormat","description":"lib.tsstdlib.intl.NumberFormat.Companion.invoke","location":"packages/frontend/lib.tsstdlib.intl/-number-format/-companion/invoke.html","searchKeys":["invoke","operator fun invoke(locales: Any = definedExternally, options: NumberFormatOptions = definedExternally): NumberFormat","lib.tsstdlib.intl.NumberFormat.Companion.invoke"]},{"name":"typealias BinaryRead = (msg: Any, reader: BinaryReadReader) -> Any","description":"lib.protobuf.BinaryRead","location":"packages/frontend/lib.protobuf/-binary-read/index.html","searchKeys":["BinaryRead","typealias BinaryRead = (msg: Any, reader: BinaryReadReader) -> Any","lib.protobuf.BinaryRead"]},{"name":"typealias BinaryReadCallback = (value: Any, binaryReader: BinaryReader) -> Unit","description":"lib.protobuf.BinaryReadCallback","location":"packages/frontend/lib.protobuf/-binary-read-callback/index.html","searchKeys":["BinaryReadCallback","typealias BinaryReadCallback = (value: Any, binaryReader: BinaryReader) -> Unit","lib.protobuf.BinaryReadCallback"]},{"name":"typealias BinaryReadReader = (msg: Any, binaryReader: BinaryReader) -> Unit","description":"lib.protobuf.BinaryReadReader","location":"packages/frontend/lib.protobuf/-binary-read-reader/index.html","searchKeys":["BinaryReadReader","typealias BinaryReadReader = (msg: Any, binaryReader: BinaryReader) -> Unit","lib.protobuf.BinaryReadReader"]},{"name":"typealias BinaryWrite = (fieldNumber: Number, value: Any, writerCallback: BinaryWriteCallback) -> Unit","description":"lib.protobuf.BinaryWrite","location":"packages/frontend/lib.protobuf/-binary-write/index.html","searchKeys":["BinaryWrite","typealias BinaryWrite = (fieldNumber: Number, value: Any, writerCallback: BinaryWriteCallback) -> Unit","lib.protobuf.BinaryWrite"]},{"name":"typealias BinaryWriteCallback = (value: Any, binaryWriter: BinaryWriter) -> Unit","description":"lib.protobuf.BinaryWriteCallback","location":"packages/frontend/lib.protobuf/-binary-write-callback/index.html","searchKeys":["BinaryWriteCallback","typealias BinaryWriteCallback = (value: Any, binaryWriter: BinaryWriter) -> Unit","lib.protobuf.BinaryWriteCallback"]},{"name":"typealias FieldValueArray = Array<dynamic>","description":"lib.protobuf.FieldValueArray","location":"packages/frontend/lib.protobuf/-field-value-array/index.html","searchKeys":["FieldValueArray","typealias FieldValueArray = Array<dynamic>","lib.protobuf.FieldValueArray"]},{"name":"typealias MessageArray = Array<Any>","description":"lib.protobuf.MessageArray","location":"packages/frontend/lib.protobuf/-message-array/index.html","searchKeys":["MessageArray","typealias MessageArray = Array<Any>","lib.protobuf.MessageArray"]},{"name":"typealias StaticToObject = (includeInstance: Boolean, msg: Message) -> Any","description":"lib.protobuf.StaticToObject","location":"packages/frontend/lib.protobuf/-static-to-object/index.html","searchKeys":["StaticToObject","typealias StaticToObject = (includeInstance: Boolean, msg: Message) -> Any","lib.protobuf.StaticToObject"]},{"name":"val entries: EnumEntries<FieldType>","description":"lib.protobuf.FieldType.entries","location":"packages/frontend/lib.protobuf/-field-type/entries.html","searchKeys":["entries","val entries: EnumEntries<FieldType>","lib.protobuf.FieldType.entries"]},{"name":"val entries: EnumEntries<WireType>","description":"lib.protobuf.WireType.entries","location":"packages/frontend/lib.protobuf/-wire-type/entries.html","searchKeys":["entries","val entries: EnumEntries<WireType>","lib.protobuf.WireType.entries"]},{"name":"var extensions: T$0","description":"lib.protobuf.Message.Companion.extensions","location":"packages/frontend/lib.protobuf/-message/-companion/extensions.html","searchKeys":["extensions","var extensions: T$0","lib.protobuf.Message.Companion.extensions"]},{"name":"var extensionsBinary: T$1","description":"lib.protobuf.Message.Companion.extensionsBinary","location":"packages/frontend/lib.protobuf/-message/-companion/extensions-binary.html","searchKeys":["extensionsBinary","var extensionsBinary: T$1","lib.protobuf.Message.Companion.extensionsBinary"]},{"name":"abstract fun constructStyleTagsFromChunks(criticalData: EmotionCriticalToChunks): String","description":"emotion.server.EmotionServer.constructStyleTagsFromChunks","location":"packages/graalvm-js/emotion.server/-emotion-server/construct-style-tags-from-chunks.html","searchKeys":["constructStyleTagsFromChunks","abstract fun constructStyleTagsFromChunks(criticalData: EmotionCriticalToChunks): String","emotion.server.EmotionServer.constructStyleTagsFromChunks"]},{"name":"abstract fun context(): dynamic","description":"elide.frontend.ssr.SSRStateContainer.context","location":"packages/graalvm-js/elide.frontend.ssr/-s-s-r-state-container/context.html","searchKeys":["context","abstract fun context(): dynamic","elide.frontend.ssr.SSRStateContainer.context"]},{"name":"abstract fun extractCritical(html: String): EmotionCritical","description":"emotion.server.EmotionServer.extractCritical","location":"packages/graalvm-js/emotion.server/-emotion-server/extract-critical.html","searchKeys":["extractCritical","abstract fun extractCritical(html: String): EmotionCritical","emotion.server.EmotionServer.extractCritical"]},{"name":"abstract fun extractCriticalToChunks(html: String): EmotionCriticalToChunks","description":"emotion.server.EmotionServer.extractCriticalToChunks","location":"packages/graalvm-js/emotion.server/-emotion-server/extract-critical-to-chunks.html","searchKeys":["extractCriticalToChunks","abstract fun extractCriticalToChunks(html: String): EmotionCriticalToChunks","emotion.server.EmotionServer.extractCriticalToChunks"]},{"name":"abstract fun path(): String","description":"elide.frontend.ssr.SSRStateContainer.path","location":"packages/graalvm-js/elide.frontend.ssr/-s-s-r-state-container/path.html","searchKeys":["path","abstract fun path(): String","elide.frontend.ssr.SSRStateContainer.path"]},{"name":"abstract fun renderStylesToString(html: String): String","description":"emotion.server.EmotionServer.renderStylesToString","location":"packages/graalvm-js/emotion.server/-emotion-server/render-styles-to-string.html","searchKeys":["renderStylesToString","abstract fun renderStylesToString(html: String): String","emotion.server.EmotionServer.renderStylesToString"]},{"name":"abstract fun state(): State?","description":"elide.frontend.ssr.SSRStateContainer.state","location":"packages/graalvm-js/elide.frontend.ssr/-s-s-r-state-container/state.html","searchKeys":["state","abstract fun state(): State?","elide.frontend.ssr.SSRStateContainer.state"]},{"name":"abstract val path: String","description":"elide.frontend.ssr.SSRContext.RequestInfo.path","location":"packages/graalvm-js/elide.frontend.ssr/-s-s-r-context/-request-info/path.html","searchKeys":["path","abstract val path: String","elide.frontend.ssr.SSRContext.RequestInfo.path"]},{"name":"abstract var basename: String?","description":"react.router.dom.server.StaticRouterProps.basename","location":"packages/graalvm-js/react.router.dom.server/-static-router-props/basename.html","searchKeys":["basename","abstract var basename: String?","react.router.dom.server.StaticRouterProps.basename"]},{"name":"abstract var basename: String?","description":"remix.run.router.StaticRouterProps.basename","location":"packages/graalvm-js/remix.run.router/-static-router-props/basename.html","searchKeys":["basename","abstract var basename: String?","remix.run.router.StaticRouterProps.basename"]},{"name":"abstract var bootstrapModules: List<String>?","description":"react.dom.server.ReadableStreamRenderOptions.bootstrapModules","location":"packages/graalvm-js/react.dom.server/-readable-stream-render-options/bootstrap-modules.html","searchKeys":["bootstrapModules","abstract var bootstrapModules: List<String>?","react.dom.server.ReadableStreamRenderOptions.bootstrapModules"]},{"name":"abstract var bootstrapScriptContent: String?","description":"react.dom.server.ReadableStreamRenderOptions.bootstrapScriptContent","location":"packages/graalvm-js/react.dom.server/-readable-stream-render-options/bootstrap-script-content.html","searchKeys":["bootstrapScriptContent","abstract var bootstrapScriptContent: String?","react.dom.server.ReadableStreamRenderOptions.bootstrapScriptContent"]},{"name":"abstract var bootstrapScripts: List<String>?","description":"react.dom.server.ReadableStreamRenderOptions.bootstrapScripts","location":"packages/graalvm-js/react.dom.server/-readable-stream-render-options/bootstrap-scripts.html","searchKeys":["bootstrapScripts","abstract var bootstrapScripts: List<String>?","react.dom.server.ReadableStreamRenderOptions.bootstrapScripts"]},{"name":"abstract var content: String?","description":"elide.frontend.ssr.ResponseChunk.content","location":"packages/graalvm-js/elide.frontend.ssr/-response-chunk/content.html","searchKeys":["content","abstract var content: String?","elide.frontend.ssr.ResponseChunk.content"]},{"name":"abstract var context: StaticHandlerContext","description":"react.router.dom.server.StaticRouterProviderProps.context","location":"packages/graalvm-js/react.router.dom.server/-static-router-provider-props/context.html","searchKeys":["context","abstract var context: StaticHandlerContext","react.router.dom.server.StaticRouterProviderProps.context"]},{"name":"abstract var context: StaticHandlerContext","description":"remix.run.router.StaticRouterProviderProps.context","location":"packages/graalvm-js/remix.run.router/-static-router-provider-props/context.html","searchKeys":["context","abstract var context: StaticHandlerContext","remix.run.router.StaticRouterProviderProps.context"]},{"name":"abstract var css: String","description":"emotion.server.EmotionCritical.css","location":"packages/graalvm-js/emotion.server/-emotion-critical/css.html","searchKeys":["css","abstract var css: String","emotion.server.EmotionCritical.css"]},{"name":"abstract var css: String","description":"emotion.server.EmotionStyleChunk.css","location":"packages/graalvm-js/emotion.server/-emotion-style-chunk/css.html","searchKeys":["css","abstract var css: String","emotion.server.EmotionStyleChunk.css"]},{"name":"abstract var css: String?","description":"elide.frontend.ssr.ResponseChunk.css","location":"packages/graalvm-js/elide.frontend.ssr/-response-chunk/css.html","searchKeys":["css","abstract var css: String?","elide.frontend.ssr.ResponseChunk.css"]},{"name":"abstract var fin: Boolean","description":"elide.frontend.ssr.ResponseChunk.fin","location":"packages/graalvm-js/elide.frontend.ssr/-response-chunk/fin.html","searchKeys":["fin","abstract var fin: Boolean","elide.frontend.ssr.ResponseChunk.fin"]},{"name":"abstract var hasContent: Boolean","description":"elide.frontend.ssr.ResponseChunk.hasContent","location":"packages/graalvm-js/elide.frontend.ssr/-response-chunk/has-content.html","searchKeys":["hasContent","abstract var hasContent: Boolean","elide.frontend.ssr.ResponseChunk.hasContent"]},{"name":"abstract var headers: Map<String, String>?","description":"elide.frontend.ssr.ResponseChunk.headers","location":"packages/graalvm-js/elide.frontend.ssr/-response-chunk/headers.html","searchKeys":["headers","abstract var headers: Map<String, String>?","elide.frontend.ssr.ResponseChunk.headers"]},{"name":"abstract var html: String","description":"emotion.server.EmotionCritical.html","location":"packages/graalvm-js/emotion.server/-emotion-critical/html.html","searchKeys":["html","abstract var html: String","emotion.server.EmotionCritical.html"]},{"name":"abstract var html: String","description":"emotion.server.EmotionCriticalToChunks.html","location":"packages/graalvm-js/emotion.server/-emotion-critical-to-chunks/html.html","searchKeys":["html","abstract var html: String","emotion.server.EmotionCriticalToChunks.html"]},{"name":"abstract var hydrate: Boolean?","description":"react.router.dom.server.StaticRouterProviderProps.hydrate","location":"packages/graalvm-js/react.router.dom.server/-static-router-provider-props/hydrate.html","searchKeys":["hydrate","abstract var hydrate: Boolean?","react.router.dom.server.StaticRouterProviderProps.hydrate"]},{"name":"abstract var hydrate: Boolean?","description":"remix.run.router.StaticRouterProviderProps.hydrate","location":"packages/graalvm-js/remix.run.router/-static-router-provider-props/hydrate.html","searchKeys":["hydrate","abstract var hydrate: Boolean?","remix.run.router.StaticRouterProviderProps.hydrate"]},{"name":"abstract var identifierPrefix: String?","description":"react.dom.server.ReadableStreamRenderOptions.identifierPrefix","location":"packages/graalvm-js/react.dom.server/-readable-stream-render-options/identifier-prefix.html","searchKeys":["identifierPrefix","abstract var identifierPrefix: String?","react.dom.server.ReadableStreamRenderOptions.identifierPrefix"]},{"name":"abstract var ids: Array<String>","description":"emotion.server.EmotionCritical.ids","location":"packages/graalvm-js/emotion.server/-emotion-critical/ids.html","searchKeys":["ids","abstract var ids: Array<String>","emotion.server.EmotionCritical.ids"]},{"name":"abstract var ids: Array<String>","description":"emotion.server.EmotionStyleChunk.ids","location":"packages/graalvm-js/emotion.server/-emotion-style-chunk/ids.html","searchKeys":["ids","abstract var ids: Array<String>","emotion.server.EmotionStyleChunk.ids"]},{"name":"abstract var key: String","description":"emotion.server.EmotionStyleChunk.key","location":"packages/graalvm-js/emotion.server/-emotion-style-chunk/key.html","searchKeys":["key","abstract var key: String","emotion.server.EmotionStyleChunk.key"]},{"name":"abstract var location: PartialLocation","description":"react.router.dom.server.StaticRouterProps.location","location":"packages/graalvm-js/react.router.dom.server/-static-router-props/location.html","searchKeys":["location","abstract var location: PartialLocation","react.router.dom.server.StaticRouterProps.location"]},{"name":"abstract var location: PartialLocation","description":"remix.run.router.StaticRouterProps.location","location":"packages/graalvm-js/remix.run.router/-static-router-props/location.html","searchKeys":["location","abstract var location: PartialLocation","remix.run.router.StaticRouterProps.location"]},{"name":"abstract var namespaceURI: String?","description":"react.dom.server.ReadableStreamRenderOptions.namespaceURI","location":"packages/graalvm-js/react.dom.server/-readable-stream-render-options/namespace-u-r-i.html","searchKeys":["namespaceURI","abstract var namespaceURI: String?","react.dom.server.ReadableStreamRenderOptions.namespaceURI"]},{"name":"abstract var nonce: String?","description":"react.dom.server.ReadableStreamRenderOptions.nonce","location":"packages/graalvm-js/react.dom.server/-readable-stream-render-options/nonce.html","searchKeys":["nonce","abstract var nonce: String?","react.dom.server.ReadableStreamRenderOptions.nonce"]},{"name":"abstract var nonce: String?","description":"react.router.dom.server.StaticRouterProviderProps.nonce","location":"packages/graalvm-js/react.router.dom.server/-static-router-provider-props/nonce.html","searchKeys":["nonce","abstract var nonce: String?","react.router.dom.server.StaticRouterProviderProps.nonce"]},{"name":"abstract var nonce: String?","description":"remix.run.router.StaticRouterProviderProps.nonce","location":"packages/graalvm-js/remix.run.router/-static-router-provider-props/nonce.html","searchKeys":["nonce","abstract var nonce: String?","remix.run.router.StaticRouterProviderProps.nonce"]},{"name":"abstract var onError: (dynamic) -> Unit","description":"react.dom.server.ReadableStreamRenderOptions.onError","location":"packages/graalvm-js/react.dom.server/-readable-stream-render-options/on-error.html","searchKeys":["onError","abstract var onError: (dynamic) -> Unit","react.dom.server.ReadableStreamRenderOptions.onError"]},{"name":"abstract var progressiveChunkSize: Int?","description":"react.dom.server.ReadableStreamRenderOptions.progressiveChunkSize","location":"packages/graalvm-js/react.dom.server/-readable-stream-render-options/progressive-chunk-size.html","searchKeys":["progressiveChunkSize","abstract var progressiveChunkSize: Int?","react.dom.server.ReadableStreamRenderOptions.progressiveChunkSize"]},{"name":"abstract var router: Router","description":"react.router.dom.server.StaticRouterProviderProps.router","location":"packages/graalvm-js/react.router.dom.server/-static-router-provider-props/router.html","searchKeys":["router","abstract var router: Router","react.router.dom.server.StaticRouterProviderProps.router"]},{"name":"abstract var router: Router","description":"remix.run.router.StaticRouterProviderProps.router","location":"packages/graalvm-js/remix.run.router/-static-router-provider-props/router.html","searchKeys":["router","abstract var router: Router","remix.run.router.StaticRouterProviderProps.router"]},{"name":"abstract var signal: AbortSignal?","description":"react.dom.server.ReadableStreamRenderOptions.signal","location":"packages/graalvm-js/react.dom.server/-readable-stream-render-options/signal.html","searchKeys":["signal","abstract var signal: AbortSignal?","react.dom.server.ReadableStreamRenderOptions.signal"]},{"name":"abstract var status: Int?","description":"elide.frontend.ssr.ResponseChunk.status","location":"packages/graalvm-js/elide.frontend.ssr/-response-chunk/status.html","searchKeys":["status","abstract var status: Int?","elide.frontend.ssr.ResponseChunk.status"]},{"name":"abstract var styles: Array<EmotionStyleChunk>","description":"emotion.server.EmotionCriticalToChunks.styles","location":"packages/graalvm-js/emotion.server/-emotion-critical-to-chunks/styles.html","searchKeys":["styles","abstract var styles: Array<EmotionStyleChunk>","emotion.server.EmotionCriticalToChunks.styles"]},{"name":"class ApplicationBuffer(app: ReactElement<*>, stream: Boolean = true)","description":"elide.frontend.ssr.ApplicationBuffer","location":"packages/graalvm-js/elide.frontend.ssr/-application-buffer/index.html","searchKeys":["ApplicationBuffer","class ApplicationBuffer(app: ReactElement<*>, stream: Boolean = true)","elide.frontend.ssr.ApplicationBuffer"]},{"name":"class SSRContext<State : Any>","description":"elide.frontend.ssr.SSRContext","location":"packages/graalvm-js/elide.frontend.ssr/-s-s-r-context/index.html","searchKeys":["SSRContext","class SSRContext<State : Any>","elide.frontend.ssr.SSRContext"]},{"name":"const val CONTEXT: String","description":"elide.frontend.ssr.SSRContext.Companion.CONTEXT","location":"packages/graalvm-js/elide.frontend.ssr/-s-s-r-context/-companion/-c-o-n-t-e-x-t.html","searchKeys":["CONTEXT","const val CONTEXT: String","elide.frontend.ssr.SSRContext.Companion.CONTEXT"]},{"name":"const val STATE: String","description":"elide.frontend.ssr.SSRContext.Companion.STATE","location":"packages/graalvm-js/elide.frontend.ssr/-s-s-r-context/-companion/-s-t-a-t-e.html","searchKeys":["STATE","const val STATE: String","elide.frontend.ssr.SSRContext.Companion.STATE"]},{"name":"constructor(app: ReactElement<*>, stream: Boolean = true)","description":"elide.frontend.ssr.ApplicationBuffer.ApplicationBuffer","location":"packages/graalvm-js/elide.frontend.ssr/-application-buffer/-application-buffer.html","searchKeys":["ApplicationBuffer","constructor(app: ReactElement<*>, stream: Boolean = true)","elide.frontend.ssr.ApplicationBuffer.ApplicationBuffer"]},{"name":"external fun createCache(config: dynamic): dynamic","description":"emotion.cache.createCache","location":"packages/graalvm-js/emotion.cache/create-cache.html","searchKeys":["createCache","external fun createCache(config: dynamic): dynamic","emotion.cache.createCache"]},{"name":"external fun createEmotionServer(cache: dynamic): EmotionServer","description":"emotion.server.createEmotionServer","location":"packages/graalvm-js/emotion.server/create-emotion-server.html","searchKeys":["createEmotionServer","external fun createEmotionServer(cache: dynamic): EmotionServer","emotion.server.createEmotionServer"]},{"name":"external fun render(initialChildren: ReactNode): String","description":"preact.ssr.render","location":"packages/graalvm-js/preact.ssr/render.html","searchKeys":["render","external fun render(initialChildren: ReactNode): String","preact.ssr.render"]},{"name":"external fun renderToReadableStream(initialChildren: ReactNode, options: ReadableStreamRenderOptions = definedExternally): Promise<ReadableStream<ByteArray>>","description":"react.dom.server.renderToReadableStream","location":"packages/graalvm-js/react.dom.server/render-to-readable-stream.html","searchKeys":["renderToReadableStream","external fun renderToReadableStream(initialChildren: ReactNode, options: ReadableStreamRenderOptions = definedExternally): Promise<ReadableStream<ByteArray>>","react.dom.server.renderToReadableStream"]},{"name":"external fun require(module: String): dynamic","description":"elide.runtime.js.require","location":"packages/graalvm-js/elide.runtime.js/require.html","searchKeys":["require","external fun require(module: String): dynamic","elide.runtime.js.require"]},{"name":"external interface EmotionCritical","description":"emotion.server.EmotionCritical","location":"packages/graalvm-js/emotion.server/-emotion-critical/index.html","searchKeys":["EmotionCritical","external interface EmotionCritical","emotion.server.EmotionCritical"]},{"name":"external interface EmotionCriticalToChunks","description":"emotion.server.EmotionCriticalToChunks","location":"packages/graalvm-js/emotion.server/-emotion-critical-to-chunks/index.html","searchKeys":["EmotionCriticalToChunks","external interface EmotionCriticalToChunks","emotion.server.EmotionCriticalToChunks"]},{"name":"external interface EmotionServer","description":"emotion.server.EmotionServer","location":"packages/graalvm-js/emotion.server/-emotion-server/index.html","searchKeys":["EmotionServer","external interface EmotionServer","emotion.server.EmotionServer"]},{"name":"external interface EmotionStyleChunk","description":"emotion.server.EmotionStyleChunk","location":"packages/graalvm-js/emotion.server/-emotion-style-chunk/index.html","searchKeys":["EmotionStyleChunk","external interface EmotionStyleChunk","emotion.server.EmotionStyleChunk"]},{"name":"external interface ReadableStreamRenderOptions","description":"react.dom.server.ReadableStreamRenderOptions","location":"packages/graalvm-js/react.dom.server/-readable-stream-render-options/index.html","searchKeys":["ReadableStreamRenderOptions","external interface ReadableStreamRenderOptions","react.dom.server.ReadableStreamRenderOptions"]},{"name":"external interface ResponseChunk","description":"elide.frontend.ssr.ResponseChunk","location":"packages/graalvm-js/elide.frontend.ssr/-response-chunk/index.html","searchKeys":["ResponseChunk","external interface ResponseChunk","elide.frontend.ssr.ResponseChunk"]},{"name":"external interface Router","description":"react.router.dom.server.Router","location":"packages/graalvm-js/react.router.dom.server/-router/index.html","searchKeys":["Router","external interface Router","react.router.dom.server.Router"]},{"name":"external interface Router","description":"remix.run.router.Router","location":"packages/graalvm-js/remix.run.router/-router/index.html","searchKeys":["Router","external interface Router","remix.run.router.Router"]},{"name":"external interface SSRStateContainer<State : Any>","description":"elide.frontend.ssr.SSRStateContainer","location":"packages/graalvm-js/elide.frontend.ssr/-s-s-r-state-container/index.html","searchKeys":["SSRStateContainer","external interface SSRStateContainer<State : Any>","elide.frontend.ssr.SSRStateContainer"]},{"name":"external interface StaticHandlerContext","description":"react.router.dom.server.StaticHandlerContext","location":"packages/graalvm-js/react.router.dom.server/-static-handler-context/index.html","searchKeys":["StaticHandlerContext","external interface StaticHandlerContext","react.router.dom.server.StaticHandlerContext"]},{"name":"external interface StaticHandlerContext","description":"remix.run.router.StaticHandlerContext","location":"packages/graalvm-js/remix.run.router/-static-handler-context/index.html","searchKeys":["StaticHandlerContext","external interface StaticHandlerContext","remix.run.router.StaticHandlerContext"]},{"name":"external interface StaticRouterProps : PropsWithChildren","description":"react.router.dom.server.StaticRouterProps","location":"packages/graalvm-js/react.router.dom.server/-static-router-props/index.html","searchKeys":["StaticRouterProps","external interface StaticRouterProps : PropsWithChildren","react.router.dom.server.StaticRouterProps"]},{"name":"external interface StaticRouterProps : PropsWithChildren","description":"remix.run.router.StaticRouterProps","location":"packages/graalvm-js/remix.run.router/-static-router-props/index.html","searchKeys":["StaticRouterProps","external interface StaticRouterProps : PropsWithChildren","remix.run.router.StaticRouterProps"]},{"name":"external interface StaticRouterProviderProps : Props","description":"react.router.dom.server.StaticRouterProviderProps","location":"packages/graalvm-js/react.router.dom.server/-static-router-provider-props/index.html","searchKeys":["StaticRouterProviderProps","external interface StaticRouterProviderProps : Props","react.router.dom.server.StaticRouterProviderProps"]},{"name":"external interface StaticRouterProviderProps : Props","description":"remix.run.router.StaticRouterProviderProps","location":"packages/graalvm-js/remix.run.router/-static-router-provider-props/index.html","searchKeys":["StaticRouterProviderProps","external interface StaticRouterProviderProps : Props","remix.run.router.StaticRouterProviderProps"]},{"name":"external val StaticRouter: FC<StaticRouterProps>","description":"react.router.dom.server.StaticRouter","location":"packages/graalvm-js/react.router.dom.server/-static-router.html","searchKeys":["StaticRouter","external val StaticRouter: FC<StaticRouterProps>","react.router.dom.server.StaticRouter"]},{"name":"external val StaticRouter: FC<StaticRouterProps>","description":"remix.run.router.StaticRouter","location":"packages/graalvm-js/remix.run.router/-static-router.html","searchKeys":["StaticRouter","external val StaticRouter: FC<StaticRouterProps>","remix.run.router.StaticRouter"]},{"name":"external val StaticRouterProvider: FC<StaticRouterProviderProps>","description":"react.router.dom.server.StaticRouterProvider","location":"packages/graalvm-js/react.router.dom.server/-static-router-provider.html","searchKeys":["StaticRouterProvider","external val StaticRouterProvider: FC<StaticRouterProviderProps>","react.router.dom.server.StaticRouterProvider"]},{"name":"external val StaticRouterProvider: FC<StaticRouterProviderProps>","description":"remix.run.router.StaticRouterProvider","location":"packages/graalvm-js/remix.run.router/-static-router-provider.html","searchKeys":["StaticRouterProvider","external val StaticRouterProvider: FC<StaticRouterProviderProps>","remix.run.router.StaticRouterProvider"]},{"name":"fun <R : Any> entrypoint(op: () -> R): R","description":"elide.runtime.gvm.entrypoint","location":"packages/graalvm-js/elide.runtime.gvm/entrypoint.html","searchKeys":["entrypoint","fun <R : Any> entrypoint(op: () -> R): R","elide.runtime.gvm.entrypoint"]},{"name":"fun <R> execute(fn: SSRContext<State>.() -> R): R","description":"elide.frontend.ssr.SSRContext.execute","location":"packages/graalvm-js/elide.frontend.ssr/-s-s-r-context/execute.html","searchKeys":["execute","fun <R> execute(fn: SSRContext<State>.() -> R): R","elide.frontend.ssr.SSRContext.execute"]},{"name":"fun <State : Any> typed(ctx: dynamic = null, request: Request? = null): SSRContext<State>","description":"elide.frontend.ssr.SSRContext.Companion.typed","location":"packages/graalvm-js/elide.frontend.ssr/-s-s-r-context/-companion/typed.html","searchKeys":["typed","fun <State : Any> typed(ctx: dynamic = null, request: Request? = null): SSRContext<State>","elide.frontend.ssr.SSRContext.Companion.typed"]},{"name":"fun <T : Any> import(path: String): Promise<T>","description":"elide.runtime.js.import","location":"packages/graalvm-js/elide.runtime.js/import.html","searchKeys":["import","fun <T : Any> import(path: String): Promise<T>","elide.runtime.js.import"]},{"name":"fun execute(callback: (ResponseChunk) -> Unit): Promise<*>","description":"elide.frontend.ssr.ApplicationBuffer.execute","location":"packages/graalvm-js/elide.frontend.ssr/-application-buffer/execute.html","searchKeys":["execute","fun execute(callback: (ResponseChunk) -> Unit): Promise<*>","elide.frontend.ssr.ApplicationBuffer.execute"]},{"name":"fun installStreams()","description":"webstreams.polyfill.installStreams","location":"packages/graalvm-js/webstreams.polyfill/install-streams.html","searchKeys":["installStreams","fun installStreams()","webstreams.polyfill.installStreams"]},{"name":"fun isExecuting(): Boolean","description":"elide.frontend.ssr.ApplicationBuffer.isExecuting","location":"packages/graalvm-js/elide.frontend.ssr/-application-buffer/is-executing.html","searchKeys":["isExecuting","fun isExecuting(): Boolean","elide.frontend.ssr.ApplicationBuffer.isExecuting"]},{"name":"fun of(ctx: dynamic = null, request: Request? = null): SSRContext<Any>","description":"elide.frontend.ssr.SSRContext.Companion.of","location":"packages/graalvm-js/elide.frontend.ssr/-s-s-r-context/-companion/of.html","searchKeys":["of","fun of(ctx: dynamic = null, request: Request? = null): SSRContext<Any>","elide.frontend.ssr.SSRContext.Companion.of"]},{"name":"interface RequestContext : SSRContext.RequestInfo","description":"elide.frontend.ssr.SSRContext.RequestContext","location":"packages/graalvm-js/elide.frontend.ssr/-s-s-r-context/-request-context/index.html","searchKeys":["RequestContext","interface RequestContext : SSRContext.RequestInfo","elide.frontend.ssr.SSRContext.RequestContext"]},{"name":"interface RequestInfo","description":"elide.frontend.ssr.SSRContext.RequestInfo","location":"packages/graalvm-js/elide.frontend.ssr/-s-s-r-context/-request-info/index.html","searchKeys":["RequestInfo","interface RequestInfo","elide.frontend.ssr.SSRContext.RequestInfo"]},{"name":"object Companion","description":"elide.frontend.ssr.SSRContext.Companion","location":"packages/graalvm-js/elide.frontend.ssr/-s-s-r-context/-companion/index.html","searchKeys":["Companion","object Companion","elide.frontend.ssr.SSRContext.Companion"]},{"name":"typealias RenderCallback = (ResponseChunk) -> Unit","description":"elide.frontend.ssr.RenderCallback","location":"packages/graalvm-js/elide.frontend.ssr/-render-callback/index.html","searchKeys":["RenderCallback","typealias RenderCallback = (ResponseChunk) -> Unit","elide.frontend.ssr.RenderCallback"]},{"name":"val context: dynamic","description":"elide.frontend.ssr.SSRContext.context","location":"packages/graalvm-js/elide.frontend.ssr/-s-s-r-context/context.html","searchKeys":["context","val context: dynamic","elide.frontend.ssr.SSRContext.context"]},{"name":"val request: Request?","description":"elide.frontend.ssr.SSRContext.request","location":"packages/graalvm-js/elide.frontend.ssr/-s-s-r-context/request.html","searchKeys":["request","val request: Request?","elide.frontend.ssr.SSRContext.request"]},{"name":"val state: State?","description":"elide.frontend.ssr.SSRContext.state","location":"packages/graalvm-js/elide.frontend.ssr/-s-s-r-context/state.html","searchKeys":["state","val state: State?","elide.frontend.ssr.SSRContext.state"]},{"name":"class Python(config: PythonConfig, resources: AbstractLanguagePlugin.LanguagePluginManifest)","description":"elide.runtime.plugins.python.Python","location":"packages/graalvm-py/elide.runtime.plugins.python/-python/index.html","searchKeys":["Python","class Python(config: PythonConfig, resources: AbstractLanguagePlugin.LanguagePluginManifest)","elide.runtime.plugins.python.Python"]},{"name":"class PythonConfig : AbstractLanguageConfig","description":"elide.runtime.plugins.python.PythonConfig","location":"packages/graalvm-py/elide.runtime.plugins.python/-python-config/index.html","searchKeys":["PythonConfig","class PythonConfig : AbstractLanguageConfig","elide.runtime.plugins.python.PythonConfig"]},{"name":"class PythonRuntimeConfig : Toggleable, GuestRuntimeConfiguration","description":"elide.runtime.gvm.python.cfg.PythonRuntimeConfig","location":"packages/graalvm-py/elide.runtime.gvm.python.cfg/-python-runtime-config/index.html","searchKeys":["PythonRuntimeConfig","class PythonRuntimeConfig : Toggleable, GuestRuntimeConfiguration","elide.runtime.gvm.python.cfg.PythonRuntimeConfig"]},{"name":"class PythonServerAdapter","description":"elide.runtime.gvm.internals.python.PythonServerAdapter","location":"packages/graalvm-py/elide.runtime.gvm.internals.python/-python-server-adapter/index.html","searchKeys":["PythonServerAdapter","class PythonServerAdapter","elide.runtime.gvm.internals.python.PythonServerAdapter"]},{"name":"const val DEFAULT_ENABLED: Boolean = true","description":"elide.runtime.gvm.python.cfg.PythonRuntimeConfig.Companion.DEFAULT_ENABLED","location":"packages/graalvm-py/elide.runtime.gvm.python.cfg/-python-runtime-config/-companion/-d-e-f-a-u-l-t_-e-n-a-b-l-e-d.html","searchKeys":["DEFAULT_ENABLED","const val DEFAULT_ENABLED: Boolean = true","elide.runtime.gvm.python.cfg.PythonRuntimeConfig.Companion.DEFAULT_ENABLED"]},{"name":"constructor()","description":"elide.runtime.gvm.internals.python.PythonServerAdapter.PythonServerAdapter","location":"packages/graalvm-py/elide.runtime.gvm.internals.python/-python-server-adapter/-python-server-adapter.html","searchKeys":["PythonServerAdapter","constructor()","elide.runtime.gvm.internals.python.PythonServerAdapter.PythonServerAdapter"]},{"name":"constructor()","description":"elide.runtime.gvm.python.cfg.PythonRuntimeConfig.PythonRuntimeConfig","location":"packages/graalvm-py/elide.runtime.gvm.python.cfg/-python-runtime-config/-python-runtime-config.html","searchKeys":["PythonRuntimeConfig","constructor()","elide.runtime.gvm.python.cfg.PythonRuntimeConfig.PythonRuntimeConfig"]},{"name":"constructor()","description":"elide.runtime.plugins.python.PythonConfig.PythonConfig","location":"packages/graalvm-py/elide.runtime.plugins.python/-python-config/-python-config.html","searchKeys":["PythonConfig","constructor()","elide.runtime.plugins.python.PythonConfig.PythonConfig"]},{"name":"constructor(config: PythonConfig, resources: AbstractLanguagePlugin.LanguagePluginManifest)","description":"elide.runtime.plugins.python.Python.Python","location":"packages/graalvm-py/elide.runtime.plugins.python/-python/-python.html","searchKeys":["Python","constructor(config: PythonConfig, resources: AbstractLanguagePlugin.LanguagePluginManifest)","elide.runtime.plugins.python.Python.Python"]},{"name":"fun PolyglotContext.python(source: String, name: String? = null): PolyglotValue","description":"elide.runtime.plugins.python.python","location":"packages/graalvm-py/elide.runtime.plugins.python/python.html","searchKeys":["python","fun PolyglotContext.python(source: String, name: String? = null): PolyglotValue","elide.runtime.plugins.python.python"]},{"name":"object Companion","description":"elide.runtime.gvm.python.cfg.PythonRuntimeConfig.Companion","location":"packages/graalvm-py/elide.runtime.gvm.python.cfg/-python-runtime-config/-companion/index.html","searchKeys":["Companion","object Companion","elide.runtime.gvm.python.cfg.PythonRuntimeConfig.Companion"]},{"name":"object Plugin : AbstractLanguagePlugin<PythonConfig, Python> ","description":"elide.runtime.plugins.python.Python.Plugin","location":"packages/graalvm-py/elide.runtime.plugins.python/-python/-plugin/index.html","searchKeys":["Plugin","object Plugin : AbstractLanguagePlugin<PythonConfig, Python> ","elide.runtime.plugins.python.Python.Plugin"]},{"name":"object Python","description":"elide.runtime.gvm.python.Python","location":"packages/graalvm-py/elide.runtime.gvm.python/-python/index.html","searchKeys":["Python","object Python","elide.runtime.gvm.python.Python"]},{"name":"open override fun install(scope: EnginePlugin.InstallationScope, configuration: PythonConfig.() -> Unit): Python","description":"elide.runtime.plugins.python.Python.Plugin.install","location":"packages/graalvm-py/elide.runtime.plugins.python/-python/-plugin/install.html","searchKeys":["install","open override fun install(scope: EnginePlugin.InstallationScope, configuration: PythonConfig.() -> Unit): Python","elide.runtime.plugins.python.Python.Plugin.install"]},{"name":"open override fun isEnabled(): Boolean","description":"elide.runtime.gvm.python.cfg.PythonRuntimeConfig.isEnabled","location":"packages/graalvm-py/elide.runtime.gvm.python.cfg/-python-runtime-config/is-enabled.html","searchKeys":["isEnabled","open override fun isEnabled(): Boolean","elide.runtime.gvm.python.cfg.PythonRuntimeConfig.isEnabled"]},{"name":"open override val key: EnginePlugin.Key<Python>","description":"elide.runtime.plugins.python.Python.Plugin.key","location":"packages/graalvm-py/elide.runtime.plugins.python/-python/-plugin/key.html","searchKeys":["key","open override val key: EnginePlugin.Key<Python>","elide.runtime.plugins.python.Python.Plugin.key"]},{"name":"open override val languageId: String","description":"elide.runtime.plugins.python.Python.Plugin.languageId","location":"packages/graalvm-py/elide.runtime.plugins.python/-python/-plugin/language-id.html","searchKeys":["languageId","open override val languageId: String","elide.runtime.plugins.python.Python.Plugin.languageId"]},{"name":"val DEFAULT_CHARSET: Charset","description":"elide.runtime.gvm.python.cfg.PythonRuntimeConfig.Companion.DEFAULT_CHARSET","location":"packages/graalvm-py/elide.runtime.gvm.python.cfg/-python-runtime-config/-companion/-d-e-f-a-u-l-t_-c-h-a-r-s-e-t.html","searchKeys":["DEFAULT_CHARSET","val DEFAULT_CHARSET: Charset","elide.runtime.gvm.python.cfg.PythonRuntimeConfig.Companion.DEFAULT_CHARSET"]},{"name":"val DEFAULT_LOCALE: Locale","description":"elide.runtime.gvm.python.cfg.PythonRuntimeConfig.Companion.DEFAULT_LOCALE","location":"packages/graalvm-py/elide.runtime.gvm.python.cfg/-python-runtime-config/-companion/-d-e-f-a-u-l-t_-l-o-c-a-l-e.html","searchKeys":["DEFAULT_LOCALE","val DEFAULT_LOCALE: Locale","elide.runtime.gvm.python.cfg.PythonRuntimeConfig.Companion.DEFAULT_LOCALE"]},{"name":"val DEFAULT_TIMEZONE: ZoneId","description":"elide.runtime.gvm.python.cfg.PythonRuntimeConfig.Companion.DEFAULT_TIMEZONE","location":"packages/graalvm-py/elide.runtime.gvm.python.cfg/-python-runtime-config/-companion/-d-e-f-a-u-l-t_-t-i-m-e-z-o-n-e.html","searchKeys":["DEFAULT_TIMEZONE","val DEFAULT_TIMEZONE: ZoneId","elide.runtime.gvm.python.cfg.PythonRuntimeConfig.Companion.DEFAULT_TIMEZONE"]},{"name":"val charset: Charset?","description":"elide.runtime.gvm.python.cfg.PythonRuntimeConfig.charset","location":"packages/graalvm-py/elide.runtime.gvm.python.cfg/-python-runtime-config/charset.html","searchKeys":["charset","val charset: Charset?","elide.runtime.gvm.python.cfg.PythonRuntimeConfig.charset"]},{"name":"val defaultLocale: Locale?","description":"elide.runtime.gvm.python.cfg.PythonRuntimeConfig.defaultLocale","location":"packages/graalvm-py/elide.runtime.gvm.python.cfg/-python-runtime-config/default-locale.html","searchKeys":["defaultLocale","val defaultLocale: Locale?","elide.runtime.gvm.python.cfg.PythonRuntimeConfig.defaultLocale"]},{"name":"val locale: Locale?","description":"elide.runtime.gvm.python.cfg.PythonRuntimeConfig.locale","location":"packages/graalvm-py/elide.runtime.gvm.python.cfg/-python-runtime-config/locale.html","searchKeys":["locale","val locale: Locale?","elide.runtime.gvm.python.cfg.PythonRuntimeConfig.locale"]},{"name":"val timezone: ZoneId?","description":"elide.runtime.gvm.python.cfg.PythonRuntimeConfig.timezone","location":"packages/graalvm-py/elide.runtime.gvm.python.cfg/-python-runtime-config/timezone.html","searchKeys":["timezone","val timezone: ZoneId?","elide.runtime.gvm.python.cfg.PythonRuntimeConfig.timezone"]},{"name":"BINARY","description":"elide.proto.ElideProtocol.DialectType.BINARY","location":"packages/proto/proto-core/elide.proto/-elide-protocol/-dialect-type/-b-i-n-a-r-y/index.html","searchKeys":["BINARY","BINARY","elide.proto.ElideProtocol.DialectType.BINARY"]},{"name":"CUSTOM","description":"elide.proto.ElideProtocol.ImplementationLibrary.CUSTOM","location":"packages/proto/proto-core/elide.proto/-elide-protocol/-implementation-library/-c-u-s-t-o-m/index.html","searchKeys":["CUSTOM","CUSTOM","elide.proto.ElideProtocol.ImplementationLibrary.CUSTOM"]},{"name":"FLATBUFFERS","description":"elide.proto.ElideProtocol.Dialect.FLATBUFFERS","location":"packages/proto/proto-core/elide.proto/-elide-protocol/-dialect/-f-l-a-t-b-u-f-f-e-r-s/index.html","searchKeys":["FLATBUFFERS","FLATBUFFERS","elide.proto.ElideProtocol.Dialect.FLATBUFFERS"]},{"name":"FLATBUFFERS","description":"elide.proto.ElideProtocol.ImplementationLibrary.FLATBUFFERS","location":"packages/proto/proto-core/elide.proto/-elide-protocol/-implementation-library/-f-l-a-t-b-u-f-f-e-r-s/index.html","searchKeys":["FLATBUFFERS","FLATBUFFERS","elide.proto.ElideProtocol.ImplementationLibrary.FLATBUFFERS"]},{"name":"INTERNAL","description":"elide.proto.ElideProtocol.DialectType.INTERNAL","location":"packages/proto/proto-core/elide.proto/-elide-protocol/-dialect-type/-i-n-t-e-r-n-a-l/index.html","searchKeys":["INTERNAL","INTERNAL","elide.proto.ElideProtocol.DialectType.INTERNAL"]},{"name":"JSON","description":"elide.proto.ElideProtocol.Dialect.JSON","location":"packages/proto/proto-core/elide.proto/-elide-protocol/-dialect/-j-s-o-n/index.html","searchKeys":["JSON","JSON","elide.proto.ElideProtocol.Dialect.JSON"]},{"name":"KOTLINX","description":"elide.proto.ElideProtocol.ImplementationLibrary.KOTLINX","location":"packages/proto/proto-core/elide.proto/-elide-protocol/-implementation-library/-k-o-t-l-i-n-x/index.html","searchKeys":["KOTLINX","KOTLINX","elide.proto.ElideProtocol.ImplementationLibrary.KOTLINX"]},{"name":"MSGPACK","description":"elide.proto.ElideProtocol.Dialect.MSGPACK","location":"packages/proto/proto-core/elide.proto/-elide-protocol/-dialect/-m-s-g-p-a-c-k/index.html","searchKeys":["MSGPACK","MSGPACK","elide.proto.ElideProtocol.Dialect.MSGPACK"]},{"name":"PROTO","description":"elide.proto.ElideProtocol.Dialect.PROTO","location":"packages/proto/proto-core/elide.proto/-elide-protocol/-dialect/-p-r-o-t-o/index.html","searchKeys":["PROTO","PROTO","elide.proto.ElideProtocol.Dialect.PROTO"]},{"name":"PROTOBUF","description":"elide.proto.ElideProtocol.ImplementationLibrary.PROTOBUF","location":"packages/proto/proto-core/elide.proto/-elide-protocol/-implementation-library/-p-r-o-t-o-b-u-f/index.html","searchKeys":["PROTOBUF","PROTOBUF","elide.proto.ElideProtocol.ImplementationLibrary.PROTOBUF"]},{"name":"PROTOBUF_LITE","description":"elide.proto.ElideProtocol.ImplementationLibrary.PROTOBUF_LITE","location":"packages/proto/proto-core/elide.proto/-elide-protocol/-implementation-library/-p-r-o-t-o-b-u-f_-l-i-t-e/index.html","searchKeys":["PROTOBUF_LITE","PROTOBUF_LITE","elide.proto.ElideProtocol.ImplementationLibrary.PROTOBUF_LITE"]},{"name":"TEXT","description":"elide.proto.ElideProtocol.DialectType.TEXT","location":"packages/proto/proto-core/elide.proto/-elide-protocol/-dialect-type/-t-e-x-t/index.html","searchKeys":["TEXT","TEXT","elide.proto.ElideProtocol.DialectType.TEXT"]},{"name":"UNSPECIFIED","description":"elide.proto.ElideProtocol.Dialect.UNSPECIFIED","location":"packages/proto/proto-core/elide.proto/-elide-protocol/-dialect/-u-n-s-p-e-c-i-f-i-e-d/index.html","searchKeys":["UNSPECIFIED","UNSPECIFIED","elide.proto.ElideProtocol.Dialect.UNSPECIFIED"]},{"name":"abstract fun algorithm(): Algorithm","description":"elide.proto.api.data.DataFingerprint.algorithm","location":"packages/proto/proto-core/elide.proto.api.data/-data-fingerprint/algorithm.html","searchKeys":["algorithm","abstract fun algorithm(): Algorithm","elide.proto.api.data.DataFingerprint.algorithm"]},{"name":"abstract fun base(): KClass<*>?","description":"elide.proto.ElideProtocol.base","location":"packages/proto/proto-core/elide.proto/-elide-protocol/base.html","searchKeys":["base","abstract fun base(): KClass<*>?","elide.proto.ElideProtocol.base"]},{"name":"abstract fun build(): Timestamp","description":"elide.proto.api.wkt.Timestamp.IBuilder.build","location":"packages/proto/proto-core/elide.proto.api.wkt/-timestamp/-i-builder/build.html","searchKeys":["build","abstract fun build(): Timestamp","elide.proto.api.wkt.Timestamp.IBuilder.build"]},{"name":"abstract fun build(): Type","description":"elide.proto.api.Record.IBuilder.build","location":"packages/proto/proto-core/elide.proto.api/-record/-i-builder/build.html","searchKeys":["build","abstract fun build(): Type","elide.proto.api.Record.IBuilder.build"]},{"name":"abstract fun builder(): Builder","description":"elide.proto.api.Record.Factory.builder","location":"packages/proto/proto-core/elide.proto.api/-record/-factory/builder.html","searchKeys":["builder","abstract fun builder(): Builder","elide.proto.api.Record.Factory.builder"]},{"name":"abstract fun bytes(): ByteArray","description":"elide.proto.api.data.DataContainer.bytes","location":"packages/proto/proto-core/elide.proto.api.data/-data-container/bytes.html","searchKeys":["bytes","abstract fun bytes(): ByteArray","elide.proto.api.data.DataContainer.bytes"]},{"name":"abstract fun bytes(): ByteArray","description":"elide.proto.api.data.DataFingerprint.bytes","location":"packages/proto/proto-core/elide.proto.api.data/-data-fingerprint/bytes.html","searchKeys":["bytes","abstract fun bytes(): ByteArray","elide.proto.api.data.DataFingerprint.bytes"]},{"name":"abstract fun containers(): DataContainer.Factory<Container, ContainerB, Fingerprint, FingerprintB, HashAlgorithms, Encodings>","description":"elide.proto.api.data.DataModelStrategy.containers","location":"packages/proto/proto-core/elide.proto.api.data/-data-model-strategy/containers.html","searchKeys":["containers","abstract fun containers(): DataContainer.Factory<Container, ContainerB, Fingerprint, FingerprintB, HashAlgorithms, Encodings>","elide.proto.api.data.DataModelStrategy.containers"]},{"name":"abstract fun copy(model: Model): Model","description":"elide.proto.api.Record.Factory.copy","location":"packages/proto/proto-core/elide.proto.api/-record/-factory/copy.html","searchKeys":["copy","abstract fun copy(model: Model): Model","elide.proto.api.Record.Factory.copy"]},{"name":"abstract fun create(algorithm: Algorithm, base64: Base64Data): Concrete","description":"elide.proto.api.data.DataFingerprint.Factory.create","location":"packages/proto/proto-core/elide.proto.api.data/-data-fingerprint/-factory/create.html","searchKeys":["create","abstract fun create(algorithm: Algorithm, base64: Base64Data): Concrete","elide.proto.api.data.DataFingerprint.Factory.create"]},{"name":"abstract fun create(algorithm: Algorithm, data: ByteArray): Concrete","description":"elide.proto.api.data.DataFingerprint.Factory.create","location":"packages/proto/proto-core/elide.proto.api.data/-data-fingerprint/-factory/create.html","searchKeys":["create","abstract fun create(algorithm: Algorithm, data: ByteArray): Concrete","elide.proto.api.data.DataFingerprint.Factory.create"]},{"name":"abstract fun create(algorithm: Algorithm, data: String): Concrete","description":"elide.proto.api.data.DataFingerprint.Factory.create","location":"packages/proto/proto-core/elide.proto.api.data/-data-fingerprint/-factory/create.html","searchKeys":["create","abstract fun create(algorithm: Algorithm, data: String): Concrete","elide.proto.api.data.DataFingerprint.Factory.create"]},{"name":"abstract fun create(algorithm: Algorithm, data: String, encoding: Encoding): Concrete","description":"elide.proto.api.data.DataFingerprint.Factory.create","location":"packages/proto/proto-core/elide.proto.api.data/-data-fingerprint/-factory/create.html","searchKeys":["create","abstract fun create(algorithm: Algorithm, data: String, encoding: Encoding): Concrete","elide.proto.api.data.DataFingerprint.Factory.create"]},{"name":"abstract fun create(algorithm: Algorithm, hex: HexData): Concrete","description":"elide.proto.api.data.DataFingerprint.Factory.create","location":"packages/proto/proto-core/elide.proto.api.data/-data-fingerprint/-factory/create.html","searchKeys":["create","abstract fun create(algorithm: Algorithm, hex: HexData): Concrete","elide.proto.api.data.DataFingerprint.Factory.create"]},{"name":"abstract fun create(base64: Base64Data): Container","description":"elide.proto.api.data.DataContainer.Factory.create","location":"packages/proto/proto-core/elide.proto.api.data/-data-container/-factory/create.html","searchKeys":["create","abstract fun create(base64: Base64Data): Container","elide.proto.api.data.DataContainer.Factory.create"]},{"name":"abstract fun create(data: ByteArray): Container","description":"elide.proto.api.data.DataContainer.Factory.create","location":"packages/proto/proto-core/elide.proto.api.data/-data-container/-factory/create.html","searchKeys":["create","abstract fun create(data: ByteArray): Container","elide.proto.api.data.DataContainer.Factory.create"]},{"name":"abstract fun create(data: String): Container","description":"elide.proto.api.data.DataContainer.Factory.create","location":"packages/proto/proto-core/elide.proto.api.data/-data-container/-factory/create.html","searchKeys":["create","abstract fun create(data: String): Container","elide.proto.api.data.DataContainer.Factory.create"]},{"name":"abstract fun create(encoding: Encoding, data: ByteArray): Container","description":"elide.proto.api.data.DataContainer.Factory.create","location":"packages/proto/proto-core/elide.proto.api.data/-data-container/-factory/create.html","searchKeys":["create","abstract fun create(encoding: Encoding, data: ByteArray): Container","elide.proto.api.data.DataContainer.Factory.create"]},{"name":"abstract fun create(hex: HexData): Container","description":"elide.proto.api.data.DataContainer.Factory.create","location":"packages/proto/proto-core/elide.proto.api.data/-data-container/-factory/create.html","searchKeys":["create","abstract fun create(hex: HexData): Container","elide.proto.api.data.DataContainer.Factory.create"]},{"name":"abstract fun create(op: Builder.() -> Unit): Model","description":"elide.proto.api.Record.Factory.create","location":"packages/proto/proto-core/elide.proto.api/-record/-factory/create.html","searchKeys":["create","abstract fun create(op: Builder.() -> Unit): Model","elide.proto.api.Record.Factory.create"]},{"name":"abstract fun defaultInstance(): Model","description":"elide.proto.api.Record.Factory.defaultInstance","location":"packages/proto/proto-core/elide.proto.api/-record/-factory/default-instance.html","searchKeys":["defaultInstance","abstract fun defaultInstance(): Model","elide.proto.api.Record.Factory.defaultInstance"]},{"name":"abstract fun dialects(): Set<ElideProtocol.Dialect>","description":"elide.proto.ElideProtocol.dialects","location":"packages/proto/proto-core/elide.proto/-elide-protocol/dialects.html","searchKeys":["dialects","abstract fun dialects(): Set<ElideProtocol.Dialect>","elide.proto.ElideProtocol.dialects"]},{"name":"abstract fun empty(): Model","description":"elide.proto.api.Record.Factory.empty","location":"packages/proto/proto-core/elide.proto.api/-record/-factory/empty.html","searchKeys":["empty","abstract fun empty(): Model","elide.proto.api.Record.Factory.empty"]},{"name":"abstract fun encoding(): Encoding","description":"elide.proto.api.data.DataFingerprint.encoding","location":"packages/proto/proto-core/elide.proto.api.data/-data-fingerprint/encoding.html","searchKeys":["encoding","abstract fun encoding(): Encoding","elide.proto.api.data.DataFingerprint.encoding"]},{"name":"abstract fun encoding(): Encodings?","description":"elide.proto.api.data.DataContainer.encoding","location":"packages/proto/proto-core/elide.proto.api.data/-data-container/encoding.html","searchKeys":["encoding","abstract fun encoding(): Encodings?","elide.proto.api.data.DataContainer.encoding"]},{"name":"abstract fun engine(): ElideProtocol.ImplementationLibrary","description":"elide.proto.ElideProtocol.engine","location":"packages/proto/proto-core/elide.proto/-elide-protocol/engine.html","searchKeys":["engine","abstract fun engine(): ElideProtocol.ImplementationLibrary","elide.proto.ElideProtocol.engine"]},{"name":"abstract fun factory(): Record.Factory<out Model, Builder>","description":"elide.proto.api.Record.factory","location":"packages/proto/proto-core/elide.proto.api/-record/factory.html","searchKeys":["factory","abstract fun factory(): Record.Factory<out Model, Builder>","elide.proto.api.Record.factory"]},{"name":"abstract fun fingerprint(): DataFingerprint<*, *, *, *>?","description":"elide.proto.api.data.DataContainer.fingerprint","location":"packages/proto/proto-core/elide.proto.api.data/-data-container/fingerprint.html","searchKeys":["fingerprint","abstract fun fingerprint(): DataFingerprint<*, *, *, *>?","elide.proto.api.data.DataContainer.fingerprint"]},{"name":"abstract fun fingerprints(): DataFingerprint.Factory<Fingerprint, FingerprintB, HashAlgorithms, Encodings>","description":"elide.proto.api.data.DataModelStrategy.fingerprints","location":"packages/proto/proto-core/elide.proto.api.data/-data-model-strategy/fingerprints.html","searchKeys":["fingerprints","abstract fun fingerprints(): DataFingerprint.Factory<Fingerprint, FingerprintB, HashAlgorithms, Encodings>","elide.proto.api.data.DataModelStrategy.fingerprints"]},{"name":"abstract fun model(): DataModelStrategy<*, *, *, *, *, *, *, *>","description":"elide.proto.ElideProtocol.ModelAdapterStrategy.model","location":"packages/proto/proto-core/elide.proto/-elide-protocol/-model-adapter-strategy/model.html","searchKeys":["model","abstract fun model(): DataModelStrategy<*, *, *, *, *, *, *, *>","elide.proto.ElideProtocol.ModelAdapterStrategy.model"]},{"name":"abstract fun mutate(op: Builder.() -> Unit): Concrete","description":"elide.proto.api.data.DataContainer.mutate","location":"packages/proto/proto-core/elide.proto.api.data/-data-container/mutate.html","searchKeys":["mutate","abstract fun mutate(op: Builder.() -> Unit): Concrete","elide.proto.api.data.DataContainer.mutate"]},{"name":"abstract fun setAlgorithm(value: Algorithm): B","description":"elide.proto.api.data.DataFingerprint.IBuilder.setAlgorithm","location":"packages/proto/proto-core/elide.proto.api.data/-data-fingerprint/-i-builder/set-algorithm.html","searchKeys":["setAlgorithm","abstract fun setAlgorithm(value: Algorithm): B","elide.proto.api.data.DataFingerprint.IBuilder.setAlgorithm"]},{"name":"abstract fun setBase64(value: Base64Data): B","description":"elide.proto.api.data.DataContainer.IBuilder.setBase64","location":"packages/proto/proto-core/elide.proto.api.data/-data-container/-i-builder/set-base64.html","searchKeys":["setBase64","abstract fun setBase64(value: Base64Data): B","elide.proto.api.data.DataContainer.IBuilder.setBase64"]},{"name":"abstract fun setData(value: ByteArray): B","description":"elide.proto.api.data.DataContainer.IBuilder.setData","location":"packages/proto/proto-core/elide.proto.api.data/-data-container/-i-builder/set-data.html","searchKeys":["setData","abstract fun setData(value: ByteArray): B","elide.proto.api.data.DataContainer.IBuilder.setData"]},{"name":"abstract fun setData(value: String): B","description":"elide.proto.api.data.DataContainer.IBuilder.setData","location":"packages/proto/proto-core/elide.proto.api.data/-data-container/-i-builder/set-data.html","searchKeys":["setData","abstract fun setData(value: String): B","elide.proto.api.data.DataContainer.IBuilder.setData"]},{"name":"abstract fun setEncoding(value: Encoding): B","description":"elide.proto.api.data.DataFingerprint.IBuilder.setEncoding","location":"packages/proto/proto-core/elide.proto.api.data/-data-fingerprint/-i-builder/set-encoding.html","searchKeys":["setEncoding","abstract fun setEncoding(value: Encoding): B","elide.proto.api.data.DataFingerprint.IBuilder.setEncoding"]},{"name":"abstract fun setFingerprint(data: ByteArray): B","description":"elide.proto.api.data.DataFingerprint.IBuilder.setFingerprint","location":"packages/proto/proto-core/elide.proto.api.data/-data-fingerprint/-i-builder/set-fingerprint.html","searchKeys":["setFingerprint","abstract fun setFingerprint(data: ByteArray): B","elide.proto.api.data.DataFingerprint.IBuilder.setFingerprint"]},{"name":"abstract fun setFingerprint(data: ByteArray, withAlgorith: Algorithm): B","description":"elide.proto.api.data.DataFingerprint.IBuilder.setFingerprint","location":"packages/proto/proto-core/elide.proto.api.data/-data-fingerprint/-i-builder/set-fingerprint.html","searchKeys":["setFingerprint","abstract fun setFingerprint(data: ByteArray, withAlgorith: Algorithm): B","elide.proto.api.data.DataFingerprint.IBuilder.setFingerprint"]},{"name":"abstract fun setFingerprint(value: ByteArray, withAlgorith: Algorithm, withEncoding: Encoding): B","description":"elide.proto.api.data.DataFingerprint.IBuilder.setFingerprint","location":"packages/proto/proto-core/elide.proto.api.data/-data-fingerprint/-i-builder/set-fingerprint.html","searchKeys":["setFingerprint","abstract fun setFingerprint(value: ByteArray, withAlgorith: Algorithm, withEncoding: Encoding): B","elide.proto.api.data.DataFingerprint.IBuilder.setFingerprint"]},{"name":"abstract fun setHex(value: HexData): B","description":"elide.proto.api.data.DataContainer.IBuilder.setHex","location":"packages/proto/proto-core/elide.proto.api.data/-data-container/-i-builder/set-hex.html","searchKeys":["setHex","abstract fun setHex(value: HexData): B","elide.proto.api.data.DataContainer.IBuilder.setHex"]},{"name":"abstract fun strategy(): ElideProtocol.ModelAdapterStrategy","description":"elide.proto.ElideProtocol.strategy","location":"packages/proto/proto-core/elide.proto/-elide-protocol/strategy.html","searchKeys":["strategy","abstract fun strategy(): ElideProtocol.ModelAdapterStrategy","elide.proto.ElideProtocol.strategy"]},{"name":"abstract fun timestamps(): Timestamp.Factory<Stamp, StampB>","description":"elide.proto.api.data.DataModelStrategy.timestamps","location":"packages/proto/proto-core/elide.proto.api.data/-data-model-strategy/timestamps.html","searchKeys":["timestamps","abstract fun timestamps(): Timestamp.Factory<Stamp, StampB>","elide.proto.api.data.DataModelStrategy.timestamps"]},{"name":"abstract fun toBuilder(): Builder","description":"elide.proto.api.Record.toBuilder","location":"packages/proto/proto-core/elide.proto.api/-record/to-builder.html","searchKeys":["toBuilder","abstract fun toBuilder(): Builder","elide.proto.api.Record.toBuilder"]},{"name":"abstract fun toInstant(): <Error class: unknown class>","description":"elide.proto.api.wkt.Timestamp.toInstant","location":"packages/proto/proto-core/elide.proto.api.wkt/-timestamp/to-instant.html","searchKeys":["toInstant","abstract fun toInstant(): <Error class: unknown class>","elide.proto.api.wkt.Timestamp.toInstant"]},{"name":"abstract override fun build(): Concrete","description":"elide.proto.api.data.DataFingerprint.IBuilder.build","location":"packages/proto/proto-core/elide.proto.api.data/-data-fingerprint/-i-builder/build.html","searchKeys":["build","abstract override fun build(): Concrete","elide.proto.api.data.DataFingerprint.IBuilder.build"]},{"name":"abstract override fun build(): Container","description":"elide.proto.api.data.DataContainer.IBuilder.build","location":"packages/proto/proto-core/elide.proto.api.data/-data-container/-i-builder/build.html","searchKeys":["build","abstract override fun build(): Container","elide.proto.api.data.DataContainer.IBuilder.build"]},{"name":"abstract val name: String","description":"elide.proto.api.Named.name","location":"packages/proto/proto-core/elide.proto.api/-named/name.html","searchKeys":["name","abstract val name: String","elide.proto.api.Named.name"]},{"name":"abstract var algorithm: Algorithm","description":"elide.proto.api.data.DataFingerprint.IBuilder.algorithm","location":"packages/proto/proto-core/elide.proto.api.data/-data-fingerprint/-i-builder/algorithm.html","searchKeys":["algorithm","abstract var algorithm: Algorithm","elide.proto.api.data.DataFingerprint.IBuilder.algorithm"]},{"name":"abstract var data: ByteArray","description":"elide.proto.api.data.DataContainer.IBuilder.data","location":"packages/proto/proto-core/elide.proto.api.data/-data-container/-i-builder/data.html","searchKeys":["data","abstract var data: ByteArray","elide.proto.api.data.DataContainer.IBuilder.data"]},{"name":"abstract var encoding: Encoding","description":"elide.proto.api.data.DataFingerprint.IBuilder.encoding","location":"packages/proto/proto-core/elide.proto.api.data/-data-fingerprint/-i-builder/encoding.html","searchKeys":["encoding","abstract var encoding: Encoding","elide.proto.api.data.DataFingerprint.IBuilder.encoding"]},{"name":"abstract var encoding: Encodings","description":"elide.proto.api.data.DataContainer.IBuilder.encoding","location":"packages/proto/proto-core/elide.proto.api.data/-data-container/-i-builder/encoding.html","searchKeys":["encoding","abstract var encoding: Encodings","elide.proto.api.data.DataContainer.IBuilder.encoding"]},{"name":"abstract var fingerprint: ByteArray","description":"elide.proto.api.data.DataFingerprint.IBuilder.fingerprint","location":"packages/proto/proto-core/elide.proto.api.data/-data-fingerprint/-i-builder/fingerprint.html","searchKeys":["fingerprint","abstract var fingerprint: ByteArray","elide.proto.api.data.DataFingerprint.IBuilder.fingerprint"]},{"name":"abstract var nanos: <Error class: unknown class>","description":"elide.proto.api.wkt.Timestamp.IBuilder.nanos","location":"packages/proto/proto-core/elide.proto.api.wkt/-timestamp/-i-builder/nanos.html","searchKeys":["nanos","abstract var nanos: <Error class: unknown class>","elide.proto.api.wkt.Timestamp.IBuilder.nanos"]},{"name":"abstract var seconds: <Error class: unknown class>","description":"elide.proto.api.wkt.Timestamp.IBuilder.seconds","location":"packages/proto/proto-core/elide.proto.api.wkt/-timestamp/-i-builder/seconds.html","searchKeys":["seconds","abstract var seconds: <Error class: unknown class>","elide.proto.api.wkt.Timestamp.IBuilder.seconds"]},{"name":"annotation class Protocol(val value: ElideProtocol.ImplementationLibrary)","description":"elide.proto.internal.annotations.Protocol","location":"packages/proto/proto-core/elide.proto.internal.annotations/-protocol/index.html","searchKeys":["Protocol","annotation class Protocol(val value: ElideProtocol.ImplementationLibrary)","elide.proto.internal.annotations.Protocol"]},{"name":"class ProtoApi","description":"elide.proto.ProtoApi","location":"packages/proto/proto-core/elide.proto/-proto-api/index.html","searchKeys":["ProtoApi","class ProtoApi","elide.proto.ProtoApi"]},{"name":"enum Dialect : Enum<ElideProtocol.Dialect> ","description":"elide.proto.ElideProtocol.Dialect","location":"packages/proto/proto-core/elide.proto/-elide-protocol/-dialect/index.html","searchKeys":["Dialect","enum Dialect : Enum<ElideProtocol.Dialect> ","elide.proto.ElideProtocol.Dialect"]},{"name":"enum DialectType : Enum<ElideProtocol.DialectType> ","description":"elide.proto.ElideProtocol.DialectType","location":"packages/proto/proto-core/elide.proto/-elide-protocol/-dialect-type/index.html","searchKeys":["DialectType","enum DialectType : Enum<ElideProtocol.DialectType> ","elide.proto.ElideProtocol.DialectType"]},{"name":"enum ImplementationLibrary : Enum<ElideProtocol.ImplementationLibrary> ","description":"elide.proto.ElideProtocol.ImplementationLibrary","location":"packages/proto/proto-core/elide.proto/-elide-protocol/-implementation-library/index.html","searchKeys":["ImplementationLibrary","enum ImplementationLibrary : Enum<ElideProtocol.ImplementationLibrary> ","elide.proto.ElideProtocol.ImplementationLibrary"]},{"name":"fun acquire(impl: ElideProtocol.ImplementationLibrary? = null): ElideProtocol","description":"elide.proto.api.Protocol.acquire","location":"packages/proto/proto-core/elide.proto.api/-protocol/acquire.html","searchKeys":["acquire","fun acquire(impl: ElideProtocol.ImplementationLibrary? = null): ElideProtocol","elide.proto.api.Protocol.acquire"]},{"name":"fun valueOf(value: String): ElideProtocol.Dialect","description":"elide.proto.ElideProtocol.Dialect.valueOf","location":"packages/proto/proto-core/elide.proto/-elide-protocol/-dialect/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): ElideProtocol.Dialect","elide.proto.ElideProtocol.Dialect.valueOf"]},{"name":"fun valueOf(value: String): ElideProtocol.DialectType","description":"elide.proto.ElideProtocol.DialectType.valueOf","location":"packages/proto/proto-core/elide.proto/-elide-protocol/-dialect-type/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): ElideProtocol.DialectType","elide.proto.ElideProtocol.DialectType.valueOf"]},{"name":"fun valueOf(value: String): ElideProtocol.ImplementationLibrary","description":"elide.proto.ElideProtocol.ImplementationLibrary.valueOf","location":"packages/proto/proto-core/elide.proto/-elide-protocol/-implementation-library/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): ElideProtocol.ImplementationLibrary","elide.proto.ElideProtocol.ImplementationLibrary.valueOf"]},{"name":"fun values(): Array<ElideProtocol.Dialect>","description":"elide.proto.ElideProtocol.Dialect.values","location":"packages/proto/proto-core/elide.proto/-elide-protocol/-dialect/values.html","searchKeys":["values","fun values(): Array<ElideProtocol.Dialect>","elide.proto.ElideProtocol.Dialect.values"]},{"name":"fun values(): Array<ElideProtocol.DialectType>","description":"elide.proto.ElideProtocol.DialectType.values","location":"packages/proto/proto-core/elide.proto/-elide-protocol/-dialect-type/values.html","searchKeys":["values","fun values(): Array<ElideProtocol.DialectType>","elide.proto.ElideProtocol.DialectType.values"]},{"name":"fun values(): Array<ElideProtocol.ImplementationLibrary>","description":"elide.proto.ElideProtocol.ImplementationLibrary.values","location":"packages/proto/proto-core/elide.proto/-elide-protocol/-implementation-library/values.html","searchKeys":["values","fun values(): Array<ElideProtocol.ImplementationLibrary>","elide.proto.ElideProtocol.ImplementationLibrary.values"]},{"name":"interface DataContainer<Concrete, Builder : DataContainer.IBuilder<Concrete, Fingerprint, FingerprintBuilder, HashAlgorithms, Encodings, Builder>, Fingerprint : DataFingerprint<Fingerprint, FingerprintBuilder, HashAlgorithms, Encodings>, FingerprintBuilder : DataFingerprint.IBuilder<Fingerprint, HashAlgorithms, Encodings, FingerprintBuilder>, HashAlgorithms : Enum<HashAlgorithms>, Encodings : Enum<Encodings>> : Record<DataContainer<Concrete, Builder, Fingerprint, FingerprintBuilder, HashAlgorithms, Encodings>, Builder> ","description":"elide.proto.api.data.DataContainer","location":"packages/proto/proto-core/elide.proto.api.data/-data-container/index.html","searchKeys":["DataContainer","interface DataContainer<Concrete, Builder : DataContainer.IBuilder<Concrete, Fingerprint, FingerprintBuilder, HashAlgorithms, Encodings, Builder>, Fingerprint : DataFingerprint<Fingerprint, FingerprintBuilder, HashAlgorithms, Encodings>, FingerprintBuilder : DataFingerprint.IBuilder<Fingerprint, HashAlgorithms, Encodings, FingerprintBuilder>, HashAlgorithms : Enum<HashAlgorithms>, Encodings : Enum<Encodings>> : Record<DataContainer<Concrete, Builder, Fingerprint, FingerprintBuilder, HashAlgorithms, Encodings>, Builder> ","elide.proto.api.data.DataContainer"]},{"name":"interface DataFingerprint<Concrete, Builder : DataFingerprint.IBuilder<Concrete, Algorithm, Encoding, Builder>, Algorithm : Enum<Algorithm>, Encoding : Enum<Encoding>> : Record<DataFingerprint<Concrete, Builder, Algorithm, Encoding>, Builder> ","description":"elide.proto.api.data.DataFingerprint","location":"packages/proto/proto-core/elide.proto.api.data/-data-fingerprint/index.html","searchKeys":["DataFingerprint","interface DataFingerprint<Concrete, Builder : DataFingerprint.IBuilder<Concrete, Algorithm, Encoding, Builder>, Algorithm : Enum<Algorithm>, Encoding : Enum<Encoding>> : Record<DataFingerprint<Concrete, Builder, Algorithm, Encoding>, Builder> ","elide.proto.api.data.DataFingerprint"]},{"name":"interface DataModelStrategy<HashAlgorithms : Enum<HashAlgorithms>, Encodings : Enum<Encodings>, Container : DataContainer<Container, ContainerB, Fingerprint, FingerprintB, HashAlgorithms, Encodings>, ContainerB : DataContainer.IBuilder<Container, Fingerprint, FingerprintB, HashAlgorithms, Encodings, ContainerB>, Fingerprint : DataFingerprint<Fingerprint, FingerprintB, HashAlgorithms, Encodings>, FingerprintB : DataFingerprint.IBuilder<Fingerprint, HashAlgorithms, Encodings, FingerprintB>, Stamp, StampB : Timestamp.IBuilder<Stamp>>","description":"elide.proto.api.data.DataModelStrategy","location":"packages/proto/proto-core/elide.proto.api.data/-data-model-strategy/index.html","searchKeys":["DataModelStrategy","interface DataModelStrategy<HashAlgorithms : Enum<HashAlgorithms>, Encodings : Enum<Encodings>, Container : DataContainer<Container, ContainerB, Fingerprint, FingerprintB, HashAlgorithms, Encodings>, ContainerB : DataContainer.IBuilder<Container, Fingerprint, FingerprintB, HashAlgorithms, Encodings, ContainerB>, Fingerprint : DataFingerprint<Fingerprint, FingerprintB, HashAlgorithms, Encodings>, FingerprintB : DataFingerprint.IBuilder<Fingerprint, HashAlgorithms, Encodings, FingerprintB>, Stamp, StampB : Timestamp.IBuilder<Stamp>>","elide.proto.api.data.DataModelStrategy"]},{"name":"interface ElideProtocol","description":"elide.proto.ElideProtocol","location":"packages/proto/proto-core/elide.proto/-elide-protocol/index.html","searchKeys":["ElideProtocol","interface ElideProtocol","elide.proto.ElideProtocol"]},{"name":"interface Factory<Concrete, B : Timestamp.IBuilder<Concrete>>","description":"elide.proto.api.wkt.Timestamp.Factory","location":"packages/proto/proto-core/elide.proto.api.wkt/-timestamp/-factory/index.html","searchKeys":["Factory","interface Factory<Concrete, B : Timestamp.IBuilder<Concrete>>","elide.proto.api.wkt.Timestamp.Factory"]},{"name":"interface Factory<Concrete, Builder, Algorithm : Enum<Algorithm>, Encoding : Enum<Encoding>> : Record.Factory<Concrete, Builder> ","description":"elide.proto.api.data.DataFingerprint.Factory","location":"packages/proto/proto-core/elide.proto.api.data/-data-fingerprint/-factory/index.html","searchKeys":["Factory","interface Factory<Concrete, Builder, Algorithm : Enum<Algorithm>, Encoding : Enum<Encoding>> : Record.Factory<Concrete, Builder> ","elide.proto.api.data.DataFingerprint.Factory"]},{"name":"interface Factory<Container, Builder : DataContainer.IBuilder<Container, Fingerprint, FingerprintBuilder, HashAlgorithm, Encoding, Builder>, Fingerprint : DataFingerprint<Fingerprint, FingerprintBuilder, HashAlgorithm, Encoding>, FingerprintBuilder : DataFingerprint.IBuilder<Fingerprint, HashAlgorithm, Encoding, FingerprintBuilder>, HashAlgorithm : Enum<HashAlgorithm>, Encoding : Enum<Encoding>> : Record.Factory<Container, Builder> ","description":"elide.proto.api.data.DataContainer.Factory","location":"packages/proto/proto-core/elide.proto.api.data/-data-container/-factory/index.html","searchKeys":["Factory","interface Factory<Container, Builder : DataContainer.IBuilder<Container, Fingerprint, FingerprintBuilder, HashAlgorithm, Encoding, Builder>, Fingerprint : DataFingerprint<Fingerprint, FingerprintBuilder, HashAlgorithm, Encoding>, FingerprintBuilder : DataFingerprint.IBuilder<Fingerprint, HashAlgorithm, Encoding, FingerprintBuilder>, HashAlgorithm : Enum<HashAlgorithm>, Encoding : Enum<Encoding>> : Record.Factory<Container, Builder> ","elide.proto.api.data.DataContainer.Factory"]},{"name":"interface Factory<Model, Builder>","description":"elide.proto.api.Record.Factory","location":"packages/proto/proto-core/elide.proto.api/-record/-factory/index.html","searchKeys":["Factory","interface Factory<Model, Builder>","elide.proto.api.Record.Factory"]},{"name":"interface IBuilder<Concrete, Algorithm : Enum<Algorithm>, Encoding : Enum<Encoding>, B : DataFingerprint.IBuilder<Concrete, Algorithm, Encoding, B>> : Record.IBuilder<Concrete> ","description":"elide.proto.api.data.DataFingerprint.IBuilder","location":"packages/proto/proto-core/elide.proto.api.data/-data-fingerprint/-i-builder/index.html","searchKeys":["IBuilder","interface IBuilder<Concrete, Algorithm : Enum<Algorithm>, Encoding : Enum<Encoding>, B : DataFingerprint.IBuilder<Concrete, Algorithm, Encoding, B>> : Record.IBuilder<Concrete> ","elide.proto.api.data.DataFingerprint.IBuilder"]},{"name":"interface IBuilder<Container, Fingerprint : DataFingerprint<Fingerprint, FingerprintBuilder, HashAlgorithms, Encodings>, FingerprintBuilder : DataFingerprint.IBuilder<Fingerprint, HashAlgorithms, Encodings, FingerprintBuilder>, HashAlgorithms : Enum<HashAlgorithms>, Encodings : Enum<Encodings>, B : DataContainer.IBuilder<Container, Fingerprint, FingerprintBuilder, HashAlgorithms, Encodings, B>> : Record.IBuilder<Container> ","description":"elide.proto.api.data.DataContainer.IBuilder","location":"packages/proto/proto-core/elide.proto.api.data/-data-container/-i-builder/index.html","searchKeys":["IBuilder","interface IBuilder<Container, Fingerprint : DataFingerprint<Fingerprint, FingerprintBuilder, HashAlgorithms, Encodings>, FingerprintBuilder : DataFingerprint.IBuilder<Fingerprint, HashAlgorithms, Encodings, FingerprintBuilder>, HashAlgorithms : Enum<HashAlgorithms>, Encodings : Enum<Encodings>, B : DataContainer.IBuilder<Container, Fingerprint, FingerprintBuilder, HashAlgorithms, Encodings, B>> : Record.IBuilder<Container> ","elide.proto.api.data.DataContainer.IBuilder"]},{"name":"interface IBuilder<Timestamp>","description":"elide.proto.api.wkt.Timestamp.IBuilder","location":"packages/proto/proto-core/elide.proto.api.wkt/-timestamp/-i-builder/index.html","searchKeys":["IBuilder","interface IBuilder<Timestamp>","elide.proto.api.wkt.Timestamp.IBuilder"]},{"name":"interface IBuilder<Type>","description":"elide.proto.api.Record.IBuilder","location":"packages/proto/proto-core/elide.proto.api/-record/-i-builder/index.html","searchKeys":["IBuilder","interface IBuilder<Type>","elide.proto.api.Record.IBuilder"]},{"name":"interface ModelAdapterStrategy","description":"elide.proto.ElideProtocol.ModelAdapterStrategy","location":"packages/proto/proto-core/elide.proto/-elide-protocol/-model-adapter-strategy/index.html","searchKeys":["ModelAdapterStrategy","interface ModelAdapterStrategy","elide.proto.ElideProtocol.ModelAdapterStrategy"]},{"name":"interface Named","description":"elide.proto.api.Named","location":"packages/proto/proto-core/elide.proto.api/-named/index.html","searchKeys":["Named","interface Named","elide.proto.api.Named"]},{"name":"interface ProtocolModel","description":"elide.proto.ProtocolModel","location":"packages/proto/proto-core/elide.proto/-protocol-model/index.html","searchKeys":["ProtocolModel","interface ProtocolModel","elide.proto.ProtocolModel"]},{"name":"interface Record<Model : Record<Model, Builder>, Builder> : ProtocolModel","description":"elide.proto.api.Record","location":"packages/proto/proto-core/elide.proto.api/-record/index.html","searchKeys":["Record","interface Record<Model : Record<Model, Builder>, Builder> : ProtocolModel","elide.proto.api.Record"]},{"name":"interface Timestamp<Concrete, Builder : Timestamp.IBuilder<Concrete>> : Comparable<Timestamp<*, *>> , Record<Timestamp<Concrete, Builder>, Builder> ","description":"elide.proto.api.wkt.Timestamp","location":"packages/proto/proto-core/elide.proto.api.wkt/-timestamp/index.html","searchKeys":["Timestamp","interface Timestamp<Concrete, Builder : Timestamp.IBuilder<Concrete>> : Comparable<Timestamp<*, *>> , Record<Timestamp<Concrete, Builder>, Builder> ","elide.proto.api.wkt.Timestamp"]},{"name":"object Protocol : ServiceLoader.Provider<ElideProtocol> ","description":"elide.proto.api.Protocol","location":"packages/proto/proto-core/elide.proto.api/-protocol/index.html","searchKeys":["Protocol","object Protocol : ServiceLoader.Provider<ElideProtocol> ","elide.proto.api.Protocol"]},{"name":"open fun at(instantValue: <Error class: unknown class>): Concrete","description":"elide.proto.api.wkt.Timestamp.Factory.at","location":"packages/proto/proto-core/elide.proto.api.wkt/-timestamp/-factory/at.html","searchKeys":["at","open fun at(instantValue: <Error class: unknown class>): Concrete","elide.proto.api.wkt.Timestamp.Factory.at"]},{"name":"open fun atMilli(millisValue: <Error class: unknown class>): Concrete","description":"elide.proto.api.wkt.Timestamp.Factory.atMilli","location":"packages/proto/proto-core/elide.proto.api.wkt/-timestamp/-factory/at-milli.html","searchKeys":["atMilli","open fun atMilli(millisValue: <Error class: unknown class>): Concrete","elide.proto.api.wkt.Timestamp.Factory.atMilli"]},{"name":"open fun atSecond(secondsValue: <Error class: unknown class>): Concrete","description":"elide.proto.api.wkt.Timestamp.Factory.atSecond","location":"packages/proto/proto-core/elide.proto.api.wkt/-timestamp/-factory/at-second.html","searchKeys":["atSecond","open fun atSecond(secondsValue: <Error class: unknown class>): Concrete","elide.proto.api.wkt.Timestamp.Factory.atSecond"]},{"name":"open fun atSecond(secondsValue: <Error class: unknown class>, nanosValue: <Error class: unknown class>): Concrete","description":"elide.proto.api.wkt.Timestamp.Factory.atSecond","location":"packages/proto/proto-core/elide.proto.api.wkt/-timestamp/-factory/at-second.html","searchKeys":["atSecond","open fun atSecond(secondsValue: <Error class: unknown class>, nanosValue: <Error class: unknown class>): Concrete","elide.proto.api.wkt.Timestamp.Factory.atSecond"]},{"name":"open fun create(op: B.() -> <Error class: unknown class>): Concrete","description":"elide.proto.api.wkt.Timestamp.Factory.create","location":"packages/proto/proto-core/elide.proto.api.wkt/-timestamp/-factory/create.html","searchKeys":["create","open fun create(op: B.() -> <Error class: unknown class>): Concrete","elide.proto.api.wkt.Timestamp.Factory.create"]},{"name":"open fun fromNow(durationRelative: <Error class: unknown class>): Concrete","description":"elide.proto.api.wkt.Timestamp.Factory.fromNow","location":"packages/proto/proto-core/elide.proto.api.wkt/-timestamp/-factory/from-now.html","searchKeys":["fromNow","open fun fromNow(durationRelative: <Error class: unknown class>): Concrete","elide.proto.api.wkt.Timestamp.Factory.fromNow"]},{"name":"open fun millisFromNow(millisRelative: <Error class: unknown class>): Concrete","description":"elide.proto.api.wkt.Timestamp.Factory.millisFromNow","location":"packages/proto/proto-core/elide.proto.api.wkt/-timestamp/-factory/millis-from-now.html","searchKeys":["millisFromNow","open fun millisFromNow(millisRelative: <Error class: unknown class>): Concrete","elide.proto.api.wkt.Timestamp.Factory.millisFromNow"]},{"name":"open fun now(): Concrete","description":"elide.proto.api.wkt.Timestamp.Factory.now","location":"packages/proto/proto-core/elide.proto.api.wkt/-timestamp/-factory/now.html","searchKeys":["now","open fun now(): Concrete","elide.proto.api.wkt.Timestamp.Factory.now"]},{"name":"open fun secondsFromNow(secondsRelative: <Error class: unknown class>): Concrete","description":"elide.proto.api.wkt.Timestamp.Factory.secondsFromNow","location":"packages/proto/proto-core/elide.proto.api.wkt/-timestamp/-factory/seconds-from-now.html","searchKeys":["secondsFromNow","open fun secondsFromNow(secondsRelative: <Error class: unknown class>): Concrete","elide.proto.api.wkt.Timestamp.Factory.secondsFromNow"]},{"name":"open operator override fun compareTo(other: <Error class: unknown class><out <Error class: unknown class>, out <Error class: unknown class>>): <Error class: unknown class>","description":"elide.proto.api.wkt.Timestamp.compareTo","location":"packages/proto/proto-core/elide.proto.api.wkt/-timestamp/compare-to.html","searchKeys":["compareTo","open operator override fun compareTo(other: <Error class: unknown class><out <Error class: unknown class>, out <Error class: unknown class>>): <Error class: unknown class>","elide.proto.api.wkt.Timestamp.compareTo"]},{"name":"open override fun get(): ElideProtocol","description":"elide.proto.api.Protocol.get","location":"packages/proto/proto-core/elide.proto.api/-protocol/get.html","searchKeys":["get","open override fun get(): ElideProtocol","elide.proto.api.Protocol.get"]},{"name":"open override fun type(): Class<out ElideProtocol>","description":"elide.proto.api.Protocol.type","location":"packages/proto/proto-core/elide.proto.api/-protocol/type.html","searchKeys":["type","open override fun type(): Class<out ElideProtocol>","elide.proto.api.Protocol.type"]},{"name":"open val compression: Boolean","description":"elide.proto.ElideProtocol.compression","location":"packages/proto/proto-core/elide.proto/-elide-protocol/compression.html","searchKeys":["compression","open val compression: Boolean","elide.proto.ElideProtocol.compression"]},{"name":"open val millis: <Error class: unknown class>","description":"elide.proto.api.wkt.Timestamp.millis","location":"packages/proto/proto-core/elide.proto.api.wkt/-timestamp/millis.html","searchKeys":["millis","open val millis: <Error class: unknown class>","elide.proto.api.wkt.Timestamp.millis"]},{"name":"open val nanos: <Error class: unknown class>","description":"elide.proto.api.wkt.Timestamp.nanos","location":"packages/proto/proto-core/elide.proto.api.wkt/-timestamp/nanos.html","searchKeys":["nanos","open val nanos: <Error class: unknown class>","elide.proto.api.wkt.Timestamp.nanos"]},{"name":"open val reflection: Boolean","description":"elide.proto.ElideProtocol.reflection","location":"packages/proto/proto-core/elide.proto/-elide-protocol/reflection.html","searchKeys":["reflection","open val reflection: Boolean","elide.proto.ElideProtocol.reflection"]},{"name":"open val seconds: <Error class: unknown class>","description":"elide.proto.api.wkt.Timestamp.seconds","location":"packages/proto/proto-core/elide.proto.api.wkt/-timestamp/seconds.html","searchKeys":["seconds","open val seconds: <Error class: unknown class>","elide.proto.api.wkt.Timestamp.seconds"]},{"name":"val VERSION: String = \"v1\"","description":"elide.proto.ProtoApi.VERSION","location":"packages/proto/proto-core/elide.proto/-proto-api/-v-e-r-s-i-o-n.html","searchKeys":["VERSION","val VERSION: String = \"v1\"","elide.proto.ProtoApi.VERSION"]},{"name":"val entries: EnumEntries<ElideProtocol.Dialect>","description":"elide.proto.ElideProtocol.Dialect.entries","location":"packages/proto/proto-core/elide.proto/-elide-protocol/-dialect/entries.html","searchKeys":["entries","val entries: EnumEntries<ElideProtocol.Dialect>","elide.proto.ElideProtocol.Dialect.entries"]},{"name":"val entries: EnumEntries<ElideProtocol.DialectType>","description":"elide.proto.ElideProtocol.DialectType.entries","location":"packages/proto/proto-core/elide.proto/-elide-protocol/-dialect-type/entries.html","searchKeys":["entries","val entries: EnumEntries<ElideProtocol.DialectType>","elide.proto.ElideProtocol.DialectType.entries"]},{"name":"val entries: EnumEntries<ElideProtocol.ImplementationLibrary>","description":"elide.proto.ElideProtocol.ImplementationLibrary.entries","location":"packages/proto/proto-core/elide.proto/-elide-protocol/-implementation-library/entries.html","searchKeys":["entries","val entries: EnumEntries<ElideProtocol.ImplementationLibrary>","elide.proto.ElideProtocol.ImplementationLibrary.entries"]},{"name":"val value: ElideProtocol.ImplementationLibrary","description":"elide.proto.internal.annotations.Protocol.value","location":"packages/proto/proto-core/elide.proto.internal.annotations/-protocol/value.html","searchKeys":["value","val value: ElideProtocol.ImplementationLibrary","elide.proto.internal.annotations.Protocol.value"]},{"name":"class LLVM","description":"elide.runtime.plugins.llvm.LLVM","location":"packages/graalvm-llvm/elide.runtime.plugins.llvm/-l-l-v-m/index.html","searchKeys":["LLVM","class LLVM","elide.runtime.plugins.llvm.LLVM"]},{"name":"class LLVMConfig : AbstractLanguageConfig","description":"elide.runtime.plugins.llvm.LLVMConfig","location":"packages/graalvm-llvm/elide.runtime.plugins.llvm/-l-l-v-m-config/index.html","searchKeys":["LLVMConfig","class LLVMConfig : AbstractLanguageConfig","elide.runtime.plugins.llvm.LLVMConfig"]},{"name":"object LLVM","description":"elide.runtime.gvm.llvm.LLVM","location":"packages/graalvm-llvm/elide.runtime.gvm.llvm/-l-l-v-m/index.html","searchKeys":["LLVM","object LLVM","elide.runtime.gvm.llvm.LLVM"]},{"name":"object Plugin : AbstractLanguagePlugin<LLVMConfig, LLVM> ","description":"elide.runtime.plugins.llvm.LLVM.Plugin","location":"packages/graalvm-llvm/elide.runtime.plugins.llvm/-l-l-v-m/-plugin/index.html","searchKeys":["Plugin","object Plugin : AbstractLanguagePlugin<LLVMConfig, LLVM> ","elide.runtime.plugins.llvm.LLVM.Plugin"]},{"name":"open override fun install(scope: EnginePlugin.InstallationScope, configuration: LLVMConfig.() -> Unit): LLVM","description":"elide.runtime.plugins.llvm.LLVM.Plugin.install","location":"packages/graalvm-llvm/elide.runtime.plugins.llvm/-l-l-v-m/-plugin/install.html","searchKeys":["install","open override fun install(scope: EnginePlugin.InstallationScope, configuration: LLVMConfig.() -> Unit): LLVM","elide.runtime.plugins.llvm.LLVM.Plugin.install"]},{"name":"open override val key: EnginePlugin.Key<LLVM>","description":"elide.runtime.plugins.llvm.LLVM.Plugin.key","location":"packages/graalvm-llvm/elide.runtime.plugins.llvm/-l-l-v-m/-plugin/key.html","searchKeys":["key","open override val key: EnginePlugin.Key<LLVM>","elide.runtime.plugins.llvm.LLVM.Plugin.key"]},{"name":"open override val languageId: String","description":"elide.runtime.plugins.llvm.LLVM.Plugin.languageId","location":"packages/graalvm-llvm/elide.runtime.plugins.llvm/-l-l-v-m/-plugin/language-id.html","searchKeys":["languageId","open override val languageId: String","elide.runtime.plugins.llvm.LLVM.Plugin.languageId"]},{"name":"abstract class AbstractDataContainerTests<Container>","description":"elide.proto.test.data.AbstractDataContainerTests","location":"packages/proto/proto-test/elide.proto.test.data/-abstract-data-container-tests/index.html","searchKeys":["AbstractDataContainerTests","abstract class AbstractDataContainerTests<Container>","elide.proto.test.data.AbstractDataContainerTests"]},{"name":"abstract class AbstractModelTest","description":"elide.proto.test.AbstractModelTest","location":"packages/proto/proto-test/elide.proto.test/-abstract-model-test/index.html","searchKeys":["AbstractModelTest","abstract class AbstractModelTest","elide.proto.test.AbstractModelTest"]},{"name":"abstract class AbstractProtocolFacadeTest<Facade : ElideProtocol>","description":"elide.proto.test.AbstractProtocolFacadeTest","location":"packages/proto/proto-test/elide.proto.test/-abstract-protocol-facade-test/index.html","searchKeys":["AbstractProtocolFacadeTest","abstract class AbstractProtocolFacadeTest<Facade : ElideProtocol>","elide.proto.test.AbstractProtocolFacadeTest"]},{"name":"abstract class AbstractProtocolTest","description":"elide.proto.test.AbstractProtocolTest","location":"packages/proto/proto-test/elide.proto.test/-abstract-protocol-test/index.html","searchKeys":["AbstractProtocolTest","abstract class AbstractProtocolTest","elide.proto.test.AbstractProtocolTest"]},{"name":"abstract fun allocateContainer(): Container","description":"elide.proto.test.data.AbstractDataContainerTests.allocateContainer","location":"packages/proto/proto-test/elide.proto.test.data/-abstract-data-container-tests/allocate-container.html","searchKeys":["allocateContainer","abstract fun allocateContainer(): Container","elide.proto.test.data.AbstractDataContainerTests.allocateContainer"]},{"name":"abstract fun allocateContainer(data: ByteArray): Container","description":"elide.proto.test.data.AbstractDataContainerTests.allocateContainer","location":"packages/proto/proto-test/elide.proto.test.data/-abstract-data-container-tests/allocate-container.html","searchKeys":["allocateContainer","abstract fun allocateContainer(data: ByteArray): Container","elide.proto.test.data.AbstractDataContainerTests.allocateContainer"]},{"name":"abstract fun allocateContainer(data: String): Container","description":"elide.proto.test.data.AbstractDataContainerTests.allocateContainer","location":"packages/proto/proto-test/elide.proto.test.data/-abstract-data-container-tests/allocate-container.html","searchKeys":["allocateContainer","abstract fun allocateContainer(data: String): Container","elide.proto.test.data.AbstractDataContainerTests.allocateContainer"]},{"name":"abstract fun provide(): Facade","description":"elide.proto.test.AbstractProtocolFacadeTest.provide","location":"packages/proto/proto-test/elide.proto.test/-abstract-protocol-facade-test/provide.html","searchKeys":["provide","abstract fun provide(): Facade","elide.proto.test.AbstractProtocolFacadeTest.provide"]},{"name":"abstract fun testDataContainer()","description":"elide.proto.test.data.AbstractDataContainerTests.testDataContainer","location":"packages/proto/proto-test/elide.proto.test.data/-abstract-data-container-tests/test-data-container.html","searchKeys":["testDataContainer","abstract fun testDataContainer()","elide.proto.test.data.AbstractDataContainerTests.testDataContainer"]},{"name":"abstract fun testDataContainerJson()","description":"elide.proto.test.data.AbstractDataContainerTests.testDataContainerJson","location":"packages/proto/proto-test/elide.proto.test.data/-abstract-data-container-tests/test-data-container-json.html","searchKeys":["testDataContainerJson","abstract fun testDataContainerJson()","elide.proto.test.data.AbstractDataContainerTests.testDataContainerJson"]},{"name":"abstract fun testExpectedDialects()","description":"elide.proto.test.AbstractProtocolFacadeTest.testExpectedDialects","location":"packages/proto/proto-test/elide.proto.test/-abstract-protocol-facade-test/test-expected-dialects.html","searchKeys":["testExpectedDialects","abstract fun testExpectedDialects()","elide.proto.test.AbstractProtocolFacadeTest.testExpectedDialects"]},{"name":"abstract fun testExpectedLibrary()","description":"elide.proto.test.AbstractProtocolFacadeTest.testExpectedLibrary","location":"packages/proto/proto-test/elide.proto.test/-abstract-protocol-facade-test/test-expected-library.html","searchKeys":["testExpectedLibrary","abstract fun testExpectedLibrary()","elide.proto.test.AbstractProtocolFacadeTest.testExpectedLibrary"]},{"name":"constructor()","description":"elide.proto.test.AbstractModelTest.AbstractModelTest","location":"packages/proto/proto-test/elide.proto.test/-abstract-model-test/-abstract-model-test.html","searchKeys":["AbstractModelTest","constructor()","elide.proto.test.AbstractModelTest.AbstractModelTest"]},{"name":"constructor()","description":"elide.proto.test.AbstractProtocolFacadeTest.AbstractProtocolFacadeTest","location":"packages/proto/proto-test/elide.proto.test/-abstract-protocol-facade-test/-abstract-protocol-facade-test.html","searchKeys":["AbstractProtocolFacadeTest","constructor()","elide.proto.test.AbstractProtocolFacadeTest.AbstractProtocolFacadeTest"]},{"name":"constructor()","description":"elide.proto.test.AbstractProtocolTest.AbstractProtocolTest","location":"packages/proto/proto-test/elide.proto.test/-abstract-protocol-test/-abstract-protocol-test.html","searchKeys":["AbstractProtocolTest","constructor()","elide.proto.test.AbstractProtocolTest.AbstractProtocolTest"]},{"name":"constructor()","description":"elide.proto.test.data.AbstractDataContainerTests.AbstractDataContainerTests","location":"packages/proto/proto-test/elide.proto.test.data/-abstract-data-container-tests/-abstract-data-container-tests.html","searchKeys":["AbstractDataContainerTests","constructor()","elide.proto.test.data.AbstractDataContainerTests.AbstractDataContainerTests"]},{"name":"fun testDataContainerFactoryAcquire()","description":"elide.proto.test.AbstractProtocolFacadeTest.testDataContainerFactoryAcquire","location":"packages/proto/proto-test/elide.proto.test/-abstract-protocol-facade-test/test-data-container-factory-acquire.html","searchKeys":["testDataContainerFactoryAcquire","fun testDataContainerFactoryAcquire()","elide.proto.test.AbstractProtocolFacadeTest.testDataContainerFactoryAcquire"]},{"name":"fun testDataFingerprintFactoryAcquire()","description":"elide.proto.test.AbstractProtocolFacadeTest.testDataFingerprintFactoryAcquire","location":"packages/proto/proto-test/elide.proto.test/-abstract-protocol-facade-test/test-data-fingerprint-factory-acquire.html","searchKeys":["testDataFingerprintFactoryAcquire","fun testDataFingerprintFactoryAcquire()","elide.proto.test.AbstractProtocolFacadeTest.testDataFingerprintFactoryAcquire"]},{"name":"fun testDialectJSON()","description":"elide.proto.test.AbstractProtocolFacadeTest.testDialectJSON","location":"packages/proto/proto-test/elide.proto.test/-abstract-protocol-facade-test/test-dialect-j-s-o-n.html","searchKeys":["testDialectJSON","fun testDialectJSON()","elide.proto.test.AbstractProtocolFacadeTest.testDialectJSON"]},{"name":"fun testDialects()","description":"elide.proto.test.AbstractProtocolFacadeTest.testDialects","location":"packages/proto/proto-test/elide.proto.test/-abstract-protocol-facade-test/test-dialects.html","searchKeys":["testDialects","fun testDialects()","elide.proto.test.AbstractProtocolFacadeTest.testDialects"]},{"name":"fun testEngine()","description":"elide.proto.test.AbstractProtocolFacadeTest.testEngine","location":"packages/proto/proto-test/elide.proto.test/-abstract-protocol-facade-test/test-engine.html","searchKeys":["testEngine","fun testEngine()","elide.proto.test.AbstractProtocolFacadeTest.testEngine"]},{"name":"fun testLoader()","description":"elide.proto.test.AbstractProtocolFacadeTest.testLoader","location":"packages/proto/proto-test/elide.proto.test/-abstract-protocol-facade-test/test-loader.html","searchKeys":["testLoader","fun testLoader()","elide.proto.test.AbstractProtocolFacadeTest.testLoader"]},{"name":"fun testModelStrategy()","description":"elide.proto.test.AbstractProtocolFacadeTest.testModelStrategy","location":"packages/proto/proto-test/elide.proto.test/-abstract-protocol-facade-test/test-model-strategy.html","searchKeys":["testModelStrategy","fun testModelStrategy()","elide.proto.test.AbstractProtocolFacadeTest.testModelStrategy"]},{"name":"fun testModelStrategySingleton()","description":"elide.proto.test.AbstractProtocolFacadeTest.testModelStrategySingleton","location":"packages/proto/proto-test/elide.proto.test/-abstract-protocol-facade-test/test-model-strategy-singleton.html","searchKeys":["testModelStrategySingleton","fun testModelStrategySingleton()","elide.proto.test.AbstractProtocolFacadeTest.testModelStrategySingleton"]},{"name":"fun testTimestampFactoryAcquire()","description":"elide.proto.test.AbstractProtocolFacadeTest.testTimestampFactoryAcquire","location":"packages/proto/proto-test/elide.proto.test/-abstract-protocol-facade-test/test-timestamp-factory-acquire.html","searchKeys":["testTimestampFactoryAcquire","fun testTimestampFactoryAcquire()","elide.proto.test.AbstractProtocolFacadeTest.testTimestampFactoryAcquire"]},{"name":"BASELINE","description":"elide.embedded.api.Capability.BASELINE","location":"packages/embedded/elide.embedded.api/-capability/-b-a-s-e-l-i-n-e/index.html","searchKeys":["BASELINE","BASELINE","elide.embedded.api.Capability.BASELINE"]},{"name":"CAPNPROTO","description":"elide.embedded.api.ProtocolMode.CAPNPROTO","location":"packages/embedded/elide.embedded.api/-protocol-mode/-c-a-p-n-p-r-o-t-o/index.html","searchKeys":["CAPNPROTO","CAPNPROTO","elide.embedded.api.ProtocolMode.CAPNPROTO"]},{"name":"COMPLETED","description":"elide.embedded.api.InvocationStatus.COMPLETED","location":"packages/embedded/elide.embedded.api/-invocation-status/-c-o-m-p-l-e-t-e-d/index.html","searchKeys":["COMPLETED","COMPLETED","elide.embedded.api.InvocationStatus.COMPLETED"]},{"name":"CORDONED","description":"elide.embedded.api.EmbeddedApp.AppStatus.CORDONED","location":"packages/embedded/elide.embedded.api/-embedded-app/-app-status/-c-o-r-d-o-n-e-d/index.html","searchKeys":["CORDONED","CORDONED","elide.embedded.api.EmbeddedApp.AppStatus.CORDONED"]},{"name":"DRAINING","description":"elide.embedded.api.EmbeddedApp.AppStatus.DRAINING","location":"packages/embedded/elide.embedded.api/-embedded-app/-app-status/-d-r-a-i-n-i-n-g/index.html","searchKeys":["DRAINING","DRAINING","elide.embedded.api.EmbeddedApp.AppStatus.DRAINING"]},{"name":"ELIDE_BASELINE","description":"elide.embedded.NativeApi.Capability.ELIDE_BASELINE","location":"packages/embedded/elide.embedded/-native-api/-capability/-e-l-i-d-e_-b-a-s-e-l-i-n-e/index.html","searchKeys":["ELIDE_BASELINE","ELIDE_BASELINE","elide.embedded.NativeApi.Capability.ELIDE_BASELINE"]},{"name":"ELIDE_CAPNPROTO","description":"elide.embedded.NativeApi.ProtocolMode.ELIDE_CAPNPROTO","location":"packages/embedded/elide.embedded/-native-api/-protocol-mode/-e-l-i-d-e_-c-a-p-n-p-r-o-t-o/index.html","searchKeys":["ELIDE_CAPNPROTO","ELIDE_CAPNPROTO","elide.embedded.NativeApi.ProtocolMode.ELIDE_CAPNPROTO"]},{"name":"ELIDE_INFLIGHT_COMPLETED","description":"elide.embedded.NativeApi.InvocationStatus.ELIDE_INFLIGHT_COMPLETED","location":"packages/embedded/elide.embedded/-native-api/-invocation-status/-e-l-i-d-e_-i-n-f-l-i-g-h-t_-c-o-m-p-l-e-t-e-d/index.html","searchKeys":["ELIDE_INFLIGHT_COMPLETED","ELIDE_INFLIGHT_COMPLETED","elide.embedded.NativeApi.InvocationStatus.ELIDE_INFLIGHT_COMPLETED"]},{"name":"ELIDE_INFLIGHT_ERR","description":"elide.embedded.NativeApi.InvocationStatus.ELIDE_INFLIGHT_ERR","location":"packages/embedded/elide.embedded/-native-api/-invocation-status/-e-l-i-d-e_-i-n-f-l-i-g-h-t_-e-r-r/index.html","searchKeys":["ELIDE_INFLIGHT_ERR","ELIDE_INFLIGHT_ERR","elide.embedded.NativeApi.InvocationStatus.ELIDE_INFLIGHT_ERR"]},{"name":"ELIDE_INFLIGHT_EXECUTING","description":"elide.embedded.NativeApi.InvocationStatus.ELIDE_INFLIGHT_EXECUTING","location":"packages/embedded/elide.embedded/-native-api/-invocation-status/-e-l-i-d-e_-i-n-f-l-i-g-h-t_-e-x-e-c-u-t-i-n-g/index.html","searchKeys":["ELIDE_INFLIGHT_EXECUTING","ELIDE_INFLIGHT_EXECUTING","elide.embedded.NativeApi.InvocationStatus.ELIDE_INFLIGHT_EXECUTING"]},{"name":"ELIDE_INFLIGHT_PENDING","description":"elide.embedded.NativeApi.InvocationStatus.ELIDE_INFLIGHT_PENDING","location":"packages/embedded/elide.embedded/-native-api/-invocation-status/-e-l-i-d-e_-i-n-f-l-i-g-h-t_-p-e-n-d-i-n-g/index.html","searchKeys":["ELIDE_INFLIGHT_PENDING","ELIDE_INFLIGHT_PENDING","elide.embedded.NativeApi.InvocationStatus.ELIDE_INFLIGHT_PENDING"]},{"name":"ELIDE_PROTOBUF","description":"elide.embedded.NativeApi.ProtocolMode.ELIDE_PROTOBUF","location":"packages/embedded/elide.embedded/-native-api/-protocol-mode/-e-l-i-d-e_-p-r-o-t-o-b-u-f/index.html","searchKeys":["ELIDE_PROTOBUF","ELIDE_PROTOBUF","elide.embedded.NativeApi.ProtocolMode.ELIDE_PROTOBUF"]},{"name":"ERR","description":"elide.embedded.api.InvocationStatus.ERR","location":"packages/embedded/elide.embedded.api/-invocation-status/-e-r-r/index.html","searchKeys":["ERR","ERR","elide.embedded.api.InvocationStatus.ERR"]},{"name":"EXECUTING","description":"elide.embedded.api.InvocationStatus.EXECUTING","location":"packages/embedded/elide.embedded.api/-invocation-status/-e-x-e-c-u-t-i-n-g/index.html","searchKeys":["EXECUTING","EXECUTING","elide.embedded.api.InvocationStatus.EXECUTING"]},{"name":"PENDING","description":"elide.embedded.api.EmbeddedApp.AppStatus.PENDING","location":"packages/embedded/elide.embedded.api/-embedded-app/-app-status/-p-e-n-d-i-n-g/index.html","searchKeys":["PENDING","PENDING","elide.embedded.api.EmbeddedApp.AppStatus.PENDING"]},{"name":"PENDING","description":"elide.embedded.api.InvocationStatus.PENDING","location":"packages/embedded/elide.embedded.api/-invocation-status/-p-e-n-d-i-n-g/index.html","searchKeys":["PENDING","PENDING","elide.embedded.api.InvocationStatus.PENDING"]},{"name":"PROTOBUF","description":"elide.embedded.api.ProtocolMode.PROTOBUF","location":"packages/embedded/elide.embedded.api/-protocol-mode/-p-r-o-t-o-b-u-f/index.html","searchKeys":["PROTOBUF","PROTOBUF","elide.embedded.api.ProtocolMode.PROTOBUF"]},{"name":"RUNNING","description":"elide.embedded.api.EmbeddedApp.AppStatus.RUNNING","location":"packages/embedded/elide.embedded.api/-embedded-app/-app-status/-r-u-n-n-i-n-g/index.html","searchKeys":["RUNNING","RUNNING","elide.embedded.api.EmbeddedApp.AppStatus.RUNNING"]},{"name":"STARTING","description":"elide.embedded.api.EmbeddedApp.AppStatus.STARTING","location":"packages/embedded/elide.embedded.api/-embedded-app/-app-status/-s-t-a-r-t-i-n-g/index.html","searchKeys":["STARTING","STARTING","elide.embedded.api.EmbeddedApp.AppStatus.STARTING"]},{"name":"STOPPED","description":"elide.embedded.api.EmbeddedApp.AppStatus.STOPPED","location":"packages/embedded/elide.embedded.api/-embedded-app/-app-status/-s-t-o-p-p-e-d/index.html","searchKeys":["STOPPED","STOPPED","elide.embedded.api.EmbeddedApp.AppStatus.STOPPED"]},{"name":"STOPPING","description":"elide.embedded.api.EmbeddedApp.AppStatus.STOPPING","location":"packages/embedded/elide.embedded.api/-embedded-app/-app-status/-s-t-o-p-p-i-n-g/index.html","searchKeys":["STOPPING","STOPPING","elide.embedded.api.EmbeddedApp.AppStatus.STOPPING"]},{"name":"abstract class SystemStream<T>","description":"elide.embedded.Streams.SystemStream","location":"packages/embedded/elide.embedded/-streams/-system-stream/index.html","searchKeys":["SystemStream","abstract class SystemStream<T>","elide.embedded.Streams.SystemStream"]},{"name":"abstract fun allocateCallId(): Long","description":"elide.embedded.api.InFlightCallMediator.allocateCallId","location":"packages/embedded/elide.embedded.api/-in-flight-call-mediator/allocate-call-id.html","searchKeys":["allocateCallId","abstract fun allocateCallId(): Long","elide.embedded.api.InFlightCallMediator.allocateCallId"]},{"name":"abstract fun cyclePayload(): WordPointer","description":"elide.embedded.NativeApi.SerializedInvocation.cyclePayload","location":"packages/embedded/elide.embedded/-native-api/-serialized-invocation/cycle-payload.html","searchKeys":["cyclePayload","abstract fun cyclePayload(): WordPointer","elide.embedded.NativeApi.SerializedInvocation.cyclePayload"]},{"name":"abstract fun dispatcher(): EmbeddedRuntime.EmbeddedDispatcher","description":"elide.embedded.api.EmbeddedRuntime.dispatcher","location":"packages/embedded/elide.embedded.api/-embedded-runtime/dispatcher.html","searchKeys":["dispatcher","abstract fun dispatcher(): EmbeddedRuntime.EmbeddedDispatcher","elide.embedded.api.EmbeddedRuntime.dispatcher"]},{"name":"abstract fun enable(capability: Capability)","description":"elide.embedded.api.EmbeddedRuntime.enable","location":"packages/embedded/elide.embedded.api/-embedded-runtime/enable.html","searchKeys":["enable","abstract fun enable(capability: Capability)","elide.embedded.api.EmbeddedRuntime.enable"]},{"name":"abstract fun getCallHandle(): ObjectHandle","description":"elide.embedded.NativeApi.InFlightCall.getCallHandle","location":"packages/embedded/elide.embedded/-native-api/-in-flight-call/get-call-handle.html","searchKeys":["getCallHandle","abstract fun getCallHandle(): ObjectHandle","elide.embedded.NativeApi.InFlightCall.getCallHandle"]},{"name":"abstract fun getConfigByteConsumer(): NativeApi.ConfigByteConsumer","description":"elide.embedded.NativeApi.InstanceConfiguration.getConfigByteConsumer","location":"packages/embedded/elide.embedded/-native-api/-instance-configuration/get-config-byte-consumer.html","searchKeys":["getConfigByteConsumer","abstract fun getConfigByteConsumer(): NativeApi.ConfigByteConsumer","elide.embedded.NativeApi.InstanceConfiguration.getConfigByteConsumer"]},{"name":"abstract fun getConfigPayload(): WordPointer","description":"elide.embedded.NativeApi.InstanceConfiguration.getConfigPayload","location":"packages/embedded/elide.embedded/-native-api/-instance-configuration/get-config-payload.html","searchKeys":["getConfigPayload","abstract fun getConfigPayload(): WordPointer","elide.embedded.NativeApi.InstanceConfiguration.getConfigPayload"]},{"name":"abstract fun getConfigTipSupplier(): NativeApi.ConfigTipSupplier","description":"elide.embedded.NativeApi.InstanceConfiguration.getConfigTipSupplier","location":"packages/embedded/elide.embedded/-native-api/-instance-configuration/get-config-tip-supplier.html","searchKeys":["getConfigTipSupplier","abstract fun getConfigTipSupplier(): NativeApi.ConfigTipSupplier","elide.embedded.NativeApi.InstanceConfiguration.getConfigTipSupplier"]},{"name":"abstract fun getPayloadByteConsumer(): NativeApi.PayloadByteConsumer","description":"elide.embedded.NativeApi.SerializedInvocation.getPayloadByteConsumer","location":"packages/embedded/elide.embedded/-native-api/-serialized-invocation/get-payload-byte-consumer.html","searchKeys":["getPayloadByteConsumer","abstract fun getPayloadByteConsumer(): NativeApi.PayloadByteConsumer","elide.embedded.NativeApi.SerializedInvocation.getPayloadByteConsumer"]},{"name":"abstract fun getPayloadTipSupplier(): NativeApi.PayloadTipSupplier","description":"elide.embedded.NativeApi.SerializedInvocation.getPayloadTipSupplier","location":"packages/embedded/elide.embedded/-native-api/-serialized-invocation/get-payload-tip-supplier.html","searchKeys":["getPayloadTipSupplier","abstract fun getPayloadTipSupplier(): NativeApi.PayloadTipSupplier","elide.embedded.NativeApi.SerializedInvocation.getPayloadTipSupplier"]},{"name":"abstract fun getProtocolMode(): Int","description":"elide.embedded.NativeApi.InstanceConfiguration.getProtocolMode","location":"packages/embedded/elide.embedded/-native-api/-instance-configuration/get-protocol-mode.html","searchKeys":["getProtocolMode","abstract fun getProtocolMode(): Int","elide.embedded.NativeApi.InstanceConfiguration.getProtocolMode"]},{"name":"abstract fun getProtocolMode(): Int","description":"elide.embedded.NativeApi.SerializedInvocation.getProtocolMode","location":"packages/embedded/elide.embedded/-native-api/-serialized-invocation/get-protocol-mode.html","searchKeys":["getProtocolMode","abstract fun getProtocolMode(): Int","elide.embedded.NativeApi.SerializedInvocation.getProtocolMode"]},{"name":"abstract fun getProtocolVersion(): CCharPointer","description":"elide.embedded.NativeApi.InstanceConfiguration.getProtocolVersion","location":"packages/embedded/elide.embedded/-native-api/-instance-configuration/get-protocol-version.html","searchKeys":["getProtocolVersion","abstract fun getProtocolVersion(): CCharPointer","elide.embedded.NativeApi.InstanceConfiguration.getProtocolVersion"]},{"name":"abstract fun getRequestId(): Long","description":"elide.embedded.NativeApi.SerializedInvocation.getRequestId","location":"packages/embedded/elide.embedded/-native-api/-serialized-invocation/get-request-id.html","searchKeys":["getRequestId","abstract fun getRequestId(): Long","elide.embedded.NativeApi.SerializedInvocation.getRequestId"]},{"name":"abstract fun getSize(): Long","description":"elide.embedded.NativeApi.InstanceConfiguration.getSize","location":"packages/embedded/elide.embedded/-native-api/-instance-configuration/get-size.html","searchKeys":["getSize","abstract fun getSize(): Long","elide.embedded.NativeApi.InstanceConfiguration.getSize"]},{"name":"abstract fun getSize(): Long","description":"elide.embedded.NativeApi.SerializedInvocation.getSize","location":"packages/embedded/elide.embedded/-native-api/-serialized-invocation/get-size.html","searchKeys":["getSize","abstract fun getSize(): Long","elide.embedded.NativeApi.SerializedInvocation.getSize"]},{"name":"abstract fun getStatus(): Int","description":"elide.embedded.NativeApi.SerializedInvocation.getStatus","location":"packages/embedded/elide.embedded/-native-api/-serialized-invocation/get-status.html","searchKeys":["getStatus","abstract fun getStatus(): Int","elide.embedded.NativeApi.SerializedInvocation.getStatus"]},{"name":"abstract fun initialize()","description":"elide.embedded.api.EmbeddedRuntime.initialize","location":"packages/embedded/elide.embedded.api/-embedded-runtime/initialize.html","searchKeys":["initialize","abstract fun initialize()","elide.embedded.api.EmbeddedRuntime.initialize"]},{"name":"abstract fun invoke(thread: IsolateThread, call: NativeApi.SerializedInvocation): Int","description":"elide.embedded.NativeApi.CallbackPointer.invoke","location":"packages/embedded/elide.embedded/-native-api/-callback-pointer/invoke.html","searchKeys":["invoke","abstract fun invoke(thread: IsolateThread, call: NativeApi.SerializedInvocation): Int","elide.embedded.NativeApi.CallbackPointer.invoke"]},{"name":"abstract fun invoke(thread: IsolateThread, call: NativeApi.SerializedInvocation, callback: NativeApi.CallbackPointer): Int","description":"elide.embedded.NativeApi.EntryPointer.invoke","location":"packages/embedded/elide.embedded/-native-api/-entry-pointer/invoke.html","searchKeys":["invoke","abstract fun invoke(thread: IsolateThread, call: NativeApi.SerializedInvocation, callback: NativeApi.CallbackPointer): Int","elide.embedded.NativeApi.EntryPointer.invoke"]},{"name":"abstract fun invoke(thread: IsolateThread, cycle: NativeApi.InstanceConfiguration): WordPointer","description":"elide.embedded.NativeApi.ConfigTipSupplier.invoke","location":"packages/embedded/elide.embedded/-native-api/-config-tip-supplier/invoke.html","searchKeys":["invoke","abstract fun invoke(thread: IsolateThread, cycle: NativeApi.InstanceConfiguration): WordPointer","elide.embedded.NativeApi.ConfigTipSupplier.invoke"]},{"name":"abstract fun invoke(thread: IsolateThread, cycle: NativeApi.InstanceConfiguration, index: Int): Byte","description":"elide.embedded.NativeApi.ConfigByteConsumer.invoke","location":"packages/embedded/elide.embedded/-native-api/-config-byte-consumer/invoke.html","searchKeys":["invoke","abstract fun invoke(thread: IsolateThread, cycle: NativeApi.InstanceConfiguration, index: Int): Byte","elide.embedded.NativeApi.ConfigByteConsumer.invoke"]},{"name":"abstract fun invoke(thread: IsolateThread, cycle: NativeApi.SerializedInvocation): WordPointer","description":"elide.embedded.NativeApi.PayloadTipSupplier.invoke","location":"packages/embedded/elide.embedded/-native-api/-payload-tip-supplier/invoke.html","searchKeys":["invoke","abstract fun invoke(thread: IsolateThread, cycle: NativeApi.SerializedInvocation): WordPointer","elide.embedded.NativeApi.PayloadTipSupplier.invoke"]},{"name":"abstract fun invoke(thread: IsolateThread, cycle: NativeApi.SerializedInvocation, index: Int): Byte","description":"elide.embedded.NativeApi.PayloadByteConsumer.invoke","location":"packages/embedded/elide.embedded/-native-api/-payload-byte-consumer/invoke.html","searchKeys":["invoke","abstract fun invoke(thread: IsolateThread, cycle: NativeApi.SerializedInvocation, index: Int): Byte","elide.embedded.NativeApi.PayloadByteConsumer.invoke"]},{"name":"abstract fun notify(capabilities: Set<Capability>)","description":"elide.embedded.api.EmbeddedRuntime.notify","location":"packages/embedded/elide.embedded.api/-embedded-runtime/notify.html","searchKeys":["notify","abstract fun notify(capabilities: Set<Capability>)","elide.embedded.api.EmbeddedRuntime.notify"]},{"name":"abstract fun provide(): ActiveConfiguration","description":"elide.embedded.api.ConfigurationManager.provide","location":"packages/embedded/elide.embedded.api/-configuration-manager/provide.html","searchKeys":["provide","abstract fun provide(): ActiveConfiguration","elide.embedded.api.ConfigurationManager.provide"]},{"name":"abstract fun provide(): InstanceConfiguration?","description":"elide.embedded.api.InstanceConfigurationFactory.provide","location":"packages/embedded/elide.embedded.api/-instance-configuration-factory/provide.html","searchKeys":["provide","abstract fun provide(): InstanceConfiguration?","elide.embedded.api.InstanceConfigurationFactory.provide"]},{"name":"abstract fun resolveEnv(key: EnvVariableName): String?","description":"elide.embedded.env.EnvResolver.resolveEnv","location":"packages/embedded/elide.embedded.env/-env-resolver/resolve-env.html","searchKeys":["resolveEnv","abstract fun resolveEnv(key: EnvVariableName): String?","elide.embedded.env.EnvResolver.resolveEnv"]},{"name":"abstract fun resolveProperty(key: SystemPropertyName): String?","description":"elide.embedded.env.EnvResolver.resolveProperty","location":"packages/embedded/elide.embedded.env/-env-resolver/resolve-property.html","searchKeys":["resolveProperty","abstract fun resolveProperty(key: SystemPropertyName): String?","elide.embedded.env.EnvResolver.resolveProperty"]},{"name":"abstract fun setCallHandle(handle: ObjectHandle)","description":"elide.embedded.NativeApi.InFlightCall.setCallHandle","location":"packages/embedded/elide.embedded/-native-api/-in-flight-call/set-call-handle.html","searchKeys":["setCallHandle","abstract fun setCallHandle(handle: ObjectHandle)","elide.embedded.NativeApi.InFlightCall.setCallHandle"]},{"name":"abstract fun setStatus(status: Int)","description":"elide.embedded.NativeApi.SerializedInvocation.setStatus","location":"packages/embedded/elide.embedded/-native-api/-serialized-invocation/set-status.html","searchKeys":["setStatus","abstract fun setStatus(status: Int)","elide.embedded.NativeApi.SerializedInvocation.setStatus"]},{"name":"abstract fun start()","description":"elide.embedded.api.EmbeddedRuntime.start","location":"packages/embedded/elide.embedded.api/-embedded-runtime/start.html","searchKeys":["start","abstract fun start()","elide.embedded.api.EmbeddedRuntime.start"]},{"name":"abstract suspend fun handle(call: UnaryNativeCall)","description":"elide.embedded.api.EmbeddedRuntime.EmbeddedDispatcher.handle","location":"packages/embedded/elide.embedded.api/-embedded-runtime/-embedded-dispatcher/handle.html","searchKeys":["handle","abstract suspend fun handle(call: UnaryNativeCall)","elide.embedded.api.EmbeddedRuntime.EmbeddedDispatcher.handle"]},{"name":"abstract val appId: String","description":"elide.embedded.api.EmbeddedApp.appId","location":"packages/embedded/elide.embedded.api/-embedded-app/app-id.html","searchKeys":["appId","abstract val appId: String","elide.embedded.api.EmbeddedApp.appId"]},{"name":"abstract val envName: String","description":"elide.embedded.env.EnvKey.envName","location":"packages/embedded/elide.embedded.env/-env-key/env-name.html","searchKeys":["envName","abstract val envName: String","elide.embedded.env.EnvKey.envName"]},{"name":"abstract val host: HostConfiguration","description":"elide.embedded.api.ActiveConfiguration.host","location":"packages/embedded/elide.embedded.api/-active-configuration/host.html","searchKeys":["host","abstract val host: HostConfiguration","elide.embedded.api.ActiveConfiguration.host"]},{"name":"abstract val isConfigured: Boolean","description":"elide.embedded.api.EmbeddedRuntime.isConfigured","location":"packages/embedded/elide.embedded.api/-embedded-runtime/is-configured.html","searchKeys":["isConfigured","abstract val isConfigured: Boolean","elide.embedded.api.EmbeddedRuntime.isConfigured"]},{"name":"abstract val isRunning: Boolean","description":"elide.embedded.api.EmbeddedRuntime.isRunning","location":"packages/embedded/elide.embedded.api/-embedded-runtime/is-running.html","searchKeys":["isRunning","abstract val isRunning: Boolean","elide.embedded.api.EmbeddedRuntime.isRunning"]},{"name":"abstract val key: EnvKey","description":"elide.embedded.env.EnvValue.key","location":"packages/embedded/elide.embedded.env/-env-value/key.html","searchKeys":["key","abstract val key: EnvKey","elide.embedded.env.EnvValue.key"]},{"name":"abstract val propertyName: String","description":"elide.embedded.env.EnvKey.propertyName","location":"packages/embedded/elide.embedded.env/-env-key/property-name.html","searchKeys":["propertyName","abstract val propertyName: String","elide.embedded.env.EnvKey.propertyName"]},{"name":"abstract val resolved: Boolean","description":"elide.embedded.env.EnvValue.resolved","location":"packages/embedded/elide.embedded.env/-env-value/resolved.html","searchKeys":["resolved","abstract val resolved: Boolean","elide.embedded.env.EnvValue.resolved"]},{"name":"abstract val status: EmbeddedApp.AppStatus","description":"elide.embedded.api.EmbeddedApp.status","location":"packages/embedded/elide.embedded.api/-embedded-app/status.html","searchKeys":["status","abstract val status: EmbeddedApp.AppStatus","elide.embedded.api.EmbeddedApp.status"]},{"name":"abstract val stderr: PrintStream","description":"elide.embedded.Streams.StreamStub.stderr","location":"packages/embedded/elide.embedded/-streams/-stream-stub/stderr.html","searchKeys":["stderr","abstract val stderr: PrintStream","elide.embedded.Streams.StreamStub.stderr"]},{"name":"abstract val stdin: InputStream","description":"elide.embedded.Streams.StreamStub.stdin","location":"packages/embedded/elide.embedded/-streams/-stream-stub/stdin.html","searchKeys":["stdin","abstract val stdin: InputStream","elide.embedded.Streams.StreamStub.stdin"]},{"name":"abstract val stdout: PrintStream","description":"elide.embedded.Streams.StreamStub.stdout","location":"packages/embedded/elide.embedded/-streams/-stream-stub/stdout.html","searchKeys":["stdout","abstract val stdout: PrintStream","elide.embedded.Streams.StreamStub.stdout"]},{"name":"abstract val value: String?","description":"elide.embedded.env.EnvValue.value","location":"packages/embedded/elide.embedded.env/-env-value/value.html","searchKeys":["value","abstract val value: String?","elide.embedded.env.EnvValue.value"]},{"name":"class ElideEmbedded","description":"elide.embedded.ElideEmbedded","location":"packages/embedded/elide.embedded/-elide-embedded/index.html","searchKeys":["ElideEmbedded","class ElideEmbedded","elide.embedded.ElideEmbedded"]},{"name":"class ElideEmbeddedApi : CContext.Directives","description":"elide.embedded.NativeApi.ElideEmbeddedApi","location":"packages/embedded/elide.embedded/-native-api/-elide-embedded-api/index.html","searchKeys":["ElideEmbeddedApi","class ElideEmbeddedApi : CContext.Directives","elide.embedded.NativeApi.ElideEmbeddedApi"]},{"name":"class EmbeddedRuntime : Feature","description":"elide.embedded.feature.EmbeddedRuntime","location":"packages/embedded/elide.embedded.feature/-embedded-runtime/index.html","searchKeys":["EmbeddedRuntime","class EmbeddedRuntime : Feature","elide.embedded.feature.EmbeddedRuntime"]},{"name":"class GlobalErrHandler : Thread.UncaughtExceptionHandler","description":"elide.embedded.err.GlobalErrHandler","location":"packages/embedded/elide.embedded.err/-global-err-handler/index.html","searchKeys":["GlobalErrHandler","class GlobalErrHandler : Thread.UncaughtExceptionHandler","elide.embedded.err.GlobalErrHandler"]},{"name":"class InstanceConfiguration : HostConfigurationOrBuilder","description":"elide.embedded.api.InstanceConfiguration","location":"packages/embedded/elide.embedded.api/-instance-configuration/index.html","searchKeys":["InstanceConfiguration","class InstanceConfiguration : HostConfigurationOrBuilder","elide.embedded.api.InstanceConfiguration"]},{"name":"class NativeApi","description":"elide.embedded.NativeApi","location":"packages/embedded/elide.embedded/-native-api/index.html","searchKeys":["NativeApi","class NativeApi","elide.embedded.NativeApi"]},{"name":"class NativeConfigLoader : InstanceConfigurationFactory","description":"elide.embedded.cfg.NativeConfigLoader","location":"packages/embedded/elide.embedded.cfg/-native-config-loader/index.html","searchKeys":["NativeConfigLoader","class NativeConfigLoader : InstanceConfigurationFactory","elide.embedded.cfg.NativeConfigLoader"]},{"name":"class NativeConfiguration","description":"elide.embedded.api.NativeConfiguration","location":"packages/embedded/elide.embedded.api/-native-configuration/index.html","searchKeys":["NativeConfiguration","class NativeConfiguration","elide.embedded.api.NativeConfiguration"]},{"name":"class SystemInputStream : Streams.SystemStream<InputStream> , Closeable","description":"elide.embedded.Streams.SystemInputStream","location":"packages/embedded/elide.embedded/-streams/-system-input-stream/index.html","searchKeys":["SystemInputStream","class SystemInputStream : Streams.SystemStream<InputStream> , Closeable","elide.embedded.Streams.SystemInputStream"]},{"name":"class SystemOutputStream : Streams.SystemStream<PrintStream> , Closeable","description":"elide.embedded.Streams.SystemOutputStream","location":"packages/embedded/elide.embedded/-streams/-system-output-stream/index.html","searchKeys":["SystemOutputStream","class SystemOutputStream : Streams.SystemStream<PrintStream> , Closeable","elide.embedded.Streams.SystemOutputStream"]},{"name":"class UnaryNativeCall","description":"elide.embedded.api.UnaryNativeCall","location":"packages/embedded/elide.embedded.api/-unary-native-call/index.html","searchKeys":["UnaryNativeCall","class UnaryNativeCall","elide.embedded.api.UnaryNativeCall"]},{"name":"class UnaryNativeRequestBuilder(builder: UnaryInvocationRequest.Builder = UnaryInvocationRequest.newBuilder()) : UnaryInvocationRequestOrBuilder","description":"elide.embedded.api.UnaryNativeCall.UnaryNativeRequestBuilder","location":"packages/embedded/elide.embedded.api/-unary-native-call/-unary-native-request-builder/index.html","searchKeys":["UnaryNativeRequestBuilder","class UnaryNativeRequestBuilder(builder: UnaryInvocationRequest.Builder = UnaryInvocationRequest.newBuilder()) : UnaryInvocationRequestOrBuilder","elide.embedded.api.UnaryNativeCall.UnaryNativeRequestBuilder"]},{"name":"const val API_VERSION: String","description":"elide.embedded.api.Constants.API_VERSION","location":"packages/embedded/elide.embedded.api/-constants/-a-p-i_-v-e-r-s-i-o-n.html","searchKeys":["API_VERSION","const val API_VERSION: String","elide.embedded.api.Constants.API_VERSION"]},{"name":"const val BASELINE_NAME: String","description":"elide.embedded.api.BASELINE_NAME","location":"packages/embedded/elide.embedded.api/-b-a-s-e-l-i-n-e_-n-a-m-e.html","searchKeys":["BASELINE_NAME","const val BASELINE_NAME: String","elide.embedded.api.BASELINE_NAME"]},{"name":"const val COMPILATION: Boolean = true","description":"elide.embedded.api.Constants.Defaults.Engine.COMPILATION","location":"packages/embedded/elide.embedded.api/-constants/-defaults/-engine/-c-o-m-p-i-l-a-t-i-o-n.html","searchKeys":["COMPILATION","const val COMPILATION: Boolean = true","elide.embedded.api.Constants.Defaults.Engine.COMPILATION"]},{"name":"const val COMPILATION: String","description":"elide.embedded.api.Constants.Flag.COMPILATION","location":"packages/embedded/elide.embedded.api/-constants/-flag/-c-o-m-p-i-l-a-t-i-o-n.html","searchKeys":["COMPILATION","const val COMPILATION: String","elide.embedded.api.Constants.Flag.COMPILATION"]},{"name":"const val COMPILE_BACKGROUND: Boolean = true","description":"elide.embedded.api.Constants.Defaults.Engine.COMPILE_BACKGROUND","location":"packages/embedded/elide.embedded.api/-constants/-defaults/-engine/-c-o-m-p-i-l-e_-b-a-c-k-g-r-o-u-n-d.html","searchKeys":["COMPILE_BACKGROUND","const val COMPILE_BACKGROUND: Boolean = true","elide.embedded.api.Constants.Defaults.Engine.COMPILE_BACKGROUND"]},{"name":"const val COMPILE_BACKGROUND: String","description":"elide.embedded.api.Constants.Flag.COMPILE_BACKGROUND","location":"packages/embedded/elide.embedded.api/-constants/-flag/-c-o-m-p-i-l-e_-b-a-c-k-g-r-o-u-n-d.html","searchKeys":["COMPILE_BACKGROUND","const val COMPILE_BACKGROUND: String","elide.embedded.api.Constants.Flag.COMPILE_BACKGROUND"]},{"name":"const val DATACENTER: String","description":"elide.embedded.api.Constants.Defaults.DATACENTER","location":"packages/embedded/elide.embedded.api/-constants/-defaults/-d-a-t-a-c-e-n-t-e-r.html","searchKeys":["DATACENTER","const val DATACENTER: String","elide.embedded.api.Constants.Defaults.DATACENTER"]},{"name":"const val DATACENTER: String","description":"elide.embedded.api.Constants.Environment.DATACENTER","location":"packages/embedded/elide.embedded.api/-constants/-environment/-d-a-t-a-c-e-n-t-e-r.html","searchKeys":["DATACENTER","const val DATACENTER: String","elide.embedded.api.Constants.Environment.DATACENTER"]},{"name":"const val DATACENTER: String","description":"elide.embedded.api.Constants.SystemProperty.DATACENTER","location":"packages/embedded/elide.embedded.api/-constants/-system-property/-d-a-t-a-c-e-n-t-e-r.html","searchKeys":["DATACENTER","const val DATACENTER: String","elide.embedded.api.Constants.SystemProperty.DATACENTER"]},{"name":"const val DEFAULT_API_VERSION: String","description":"elide.embedded.api.NativeConfiguration.Companion.DEFAULT_API_VERSION","location":"packages/embedded/elide.embedded.api/-native-configuration/-companion/-d-e-f-a-u-l-t_-a-p-i_-v-e-r-s-i-o-n.html","searchKeys":["DEFAULT_API_VERSION","const val DEFAULT_API_VERSION: String","elide.embedded.api.NativeConfiguration.Companion.DEFAULT_API_VERSION"]},{"name":"const val MAX_ISOLATE_MEMORY: String","description":"elide.embedded.api.Constants.Defaults.Engine.MAX_ISOLATE_MEMORY","location":"packages/embedded/elide.embedded.api/-constants/-defaults/-engine/-m-a-x_-i-s-o-l-a-t-e_-m-e-m-o-r-y.html","searchKeys":["MAX_ISOLATE_MEMORY","const val MAX_ISOLATE_MEMORY: String","elide.embedded.api.Constants.Defaults.Engine.MAX_ISOLATE_MEMORY"]},{"name":"const val MAX_ISOLATE_MEMORY: String","description":"elide.embedded.api.Constants.Flag.MAX_ISOLATE_MEMORY","location":"packages/embedded/elide.embedded.api/-constants/-flag/-m-a-x_-i-s-o-l-a-t-e_-m-e-m-o-r-y.html","searchKeys":["MAX_ISOLATE_MEMORY","const val MAX_ISOLATE_MEMORY: String","elide.embedded.api.Constants.Flag.MAX_ISOLATE_MEMORY"]},{"name":"const val REGION: String","description":"elide.embedded.api.Constants.Defaults.REGION","location":"packages/embedded/elide.embedded.api/-constants/-defaults/-r-e-g-i-o-n.html","searchKeys":["REGION","const val REGION: String","elide.embedded.api.Constants.Defaults.REGION"]},{"name":"const val REGION: String","description":"elide.embedded.api.Constants.Environment.REGION","location":"packages/embedded/elide.embedded.api/-constants/-environment/-r-e-g-i-o-n.html","searchKeys":["REGION","const val REGION: String","elide.embedded.api.Constants.Environment.REGION"]},{"name":"const val REGION: String","description":"elide.embedded.api.Constants.SystemProperty.REGION","location":"packages/embedded/elide.embedded.api/-constants/-system-property/-r-e-g-i-o-n.html","searchKeys":["REGION","const val REGION: String","elide.embedded.api.Constants.SystemProperty.REGION"]},{"name":"const val SPAWN_ISOLATE: Boolean = false","description":"elide.embedded.api.Constants.Defaults.Engine.SPAWN_ISOLATE","location":"packages/embedded/elide.embedded.api/-constants/-defaults/-engine/-s-p-a-w-n_-i-s-o-l-a-t-e.html","searchKeys":["SPAWN_ISOLATE","const val SPAWN_ISOLATE: Boolean = false","elide.embedded.api.Constants.Defaults.Engine.SPAWN_ISOLATE"]},{"name":"const val SPAWN_ISOLATE: String","description":"elide.embedded.api.Constants.Flag.SPAWN_ISOLATE","location":"packages/embedded/elide.embedded.api/-constants/-flag/-s-p-a-w-n_-i-s-o-l-a-t-e.html","searchKeys":["SPAWN_ISOLATE","const val SPAWN_ISOLATE: String","elide.embedded.api.Constants.Flag.SPAWN_ISOLATE"]},{"name":"const val UNTRUSTED_CODE_MITIGATION: String","description":"elide.embedded.api.Constants.Defaults.Engine.UNTRUSTED_CODE_MITIGATION","location":"packages/embedded/elide.embedded.api/-constants/-defaults/-engine/-u-n-t-r-u-s-t-e-d_-c-o-d-e_-m-i-t-i-g-a-t-i-o-n.html","searchKeys":["UNTRUSTED_CODE_MITIGATION","const val UNTRUSTED_CODE_MITIGATION: String","elide.embedded.api.Constants.Defaults.Engine.UNTRUSTED_CODE_MITIGATION"]},{"name":"const val UNTRUSTED_CODE_MITIGATION: String","description":"elide.embedded.api.Constants.Flag.UNTRUSTED_CODE_MITIGATION","location":"packages/embedded/elide.embedded.api/-constants/-flag/-u-n-t-r-u-s-t-e-d_-c-o-d-e_-m-i-t-i-g-a-t-i-o-n.html","searchKeys":["UNTRUSTED_CODE_MITIGATION","const val UNTRUSTED_CODE_MITIGATION: String","elide.embedded.api.Constants.Flag.UNTRUSTED_CODE_MITIGATION"]},{"name":"constructor()","description":"elide.embedded.Entrypoint.Entrypoint","location":"packages/embedded/elide.embedded/-entrypoint/-entrypoint.html","searchKeys":["Entrypoint","constructor()","elide.embedded.Entrypoint.Entrypoint"]},{"name":"constructor()","description":"elide.embedded.NativeApi.ElideEmbeddedApi.ElideEmbeddedApi","location":"packages/embedded/elide.embedded/-native-api/-elide-embedded-api/-elide-embedded-api.html","searchKeys":["ElideEmbeddedApi","constructor()","elide.embedded.NativeApi.ElideEmbeddedApi.ElideEmbeddedApi"]},{"name":"constructor()","description":"elide.embedded.NativeApi.NativeApi","location":"packages/embedded/elide.embedded/-native-api/-native-api.html","searchKeys":["NativeApi","constructor()","elide.embedded.NativeApi.NativeApi"]},{"name":"constructor()","description":"elide.embedded.err.GlobalErrHandler.GlobalErrHandler","location":"packages/embedded/elide.embedded.err/-global-err-handler/-global-err-handler.html","searchKeys":["GlobalErrHandler","constructor()","elide.embedded.err.GlobalErrHandler.GlobalErrHandler"]},{"name":"constructor()","description":"elide.embedded.feature.EmbeddedRuntime.EmbeddedRuntime","location":"packages/embedded/elide.embedded.feature/-embedded-runtime/-embedded-runtime.html","searchKeys":["EmbeddedRuntime","constructor()","elide.embedded.feature.EmbeddedRuntime.EmbeddedRuntime"]},{"name":"constructor(builder: UnaryInvocationRequest.Builder = UnaryInvocationRequest.newBuilder())","description":"elide.embedded.api.UnaryNativeCall.UnaryNativeRequestBuilder.UnaryNativeRequestBuilder","location":"packages/embedded/elide.embedded.api/-unary-native-call/-unary-native-request-builder/-unary-native-request-builder.html","searchKeys":["UnaryNativeRequestBuilder","constructor(builder: UnaryInvocationRequest.Builder = UnaryInvocationRequest.newBuilder())","elide.embedded.api.UnaryNativeCall.UnaryNativeRequestBuilder.UnaryNativeRequestBuilder"]},{"name":"data class InFlightCallInfo : Record, Closeable, AutoCloseable","description":"elide.embedded.api.InFlightCallInfo","location":"packages/embedded/elide.embedded.api/-in-flight-call-info/index.html","searchKeys":["InFlightCallInfo","data class InFlightCallInfo : Record, Closeable, AutoCloseable","elide.embedded.api.InFlightCallInfo"]},{"name":"data object Constants","description":"elide.embedded.api.Constants","location":"packages/embedded/elide.embedded.api/-constants/index.html","searchKeys":["Constants","data object Constants","elide.embedded.api.Constants"]},{"name":"data object Defaults","description":"elide.embedded.api.Constants.Defaults","location":"packages/embedded/elide.embedded.api/-constants/-defaults/index.html","searchKeys":["Defaults","data object Defaults","elide.embedded.api.Constants.Defaults"]},{"name":"data object Engine","description":"elide.embedded.api.Constants.Defaults.Engine","location":"packages/embedded/elide.embedded.api/-constants/-defaults/-engine/index.html","searchKeys":["Engine","data object Engine","elide.embedded.api.Constants.Defaults.Engine"]},{"name":"data object Environment","description":"elide.embedded.api.Constants.Environment","location":"packages/embedded/elide.embedded.api/-constants/-environment/index.html","searchKeys":["Environment","data object Environment","elide.embedded.api.Constants.Environment"]},{"name":"data object Flag","description":"elide.embedded.api.Constants.Flag","location":"packages/embedded/elide.embedded.api/-constants/-flag/index.html","searchKeys":["Flag","data object Flag","elide.embedded.api.Constants.Flag"]},{"name":"data object SystemProperty","description":"elide.embedded.api.Constants.SystemProperty","location":"packages/embedded/elide.embedded.api/-constants/-system-property/index.html","searchKeys":["SystemProperty","data object SystemProperty","elide.embedded.api.Constants.SystemProperty"]},{"name":"enum AppStatus : Enum<EmbeddedApp.AppStatus> ","description":"elide.embedded.api.EmbeddedApp.AppStatus","location":"packages/embedded/elide.embedded.api/-embedded-app/-app-status/index.html","searchKeys":["AppStatus","enum AppStatus : Enum<EmbeddedApp.AppStatus> ","elide.embedded.api.EmbeddedApp.AppStatus"]},{"name":"enum Capability","description":"elide.embedded.NativeApi.Capability","location":"packages/embedded/elide.embedded/-native-api/-capability/index.html","searchKeys":["Capability","enum Capability","elide.embedded.NativeApi.Capability"]},{"name":"enum Capability : Enum<Capability> , Symbolic<NativeApi.Capability> ","description":"elide.embedded.api.Capability","location":"packages/embedded/elide.embedded.api/-capability/index.html","searchKeys":["Capability","enum Capability : Enum<Capability> , Symbolic<NativeApi.Capability> ","elide.embedded.api.Capability"]},{"name":"enum InitializationError : Enum<InitializationError> , Symbolic<Int> ","description":"elide.embedded.err.InitializationError","location":"packages/embedded/elide.embedded.err/-initialization-error/index.html","searchKeys":["InitializationError","enum InitializationError : Enum<InitializationError> , Symbolic<Int> ","elide.embedded.err.InitializationError"]},{"name":"enum InvocationStatus","description":"elide.embedded.NativeApi.InvocationStatus","location":"packages/embedded/elide.embedded/-native-api/-invocation-status/index.html","searchKeys":["InvocationStatus","enum InvocationStatus","elide.embedded.NativeApi.InvocationStatus"]},{"name":"enum InvocationStatus : Enum<InvocationStatus> , Symbolic<NativeApi.InvocationStatus> ","description":"elide.embedded.api.InvocationStatus","location":"packages/embedded/elide.embedded.api/-invocation-status/index.html","searchKeys":["InvocationStatus","enum InvocationStatus : Enum<InvocationStatus> , Symbolic<NativeApi.InvocationStatus> ","elide.embedded.api.InvocationStatus"]},{"name":"enum ProtocolMode","description":"elide.embedded.NativeApi.ProtocolMode","location":"packages/embedded/elide.embedded/-native-api/-protocol-mode/index.html","searchKeys":["ProtocolMode","enum ProtocolMode","elide.embedded.NativeApi.ProtocolMode"]},{"name":"enum ProtocolMode : Enum<ProtocolMode> , Symbolic<NativeApi.ProtocolMode> ","description":"elide.embedded.api.ProtocolMode","location":"packages/embedded/elide.embedded.api/-protocol-mode/index.html","searchKeys":["ProtocolMode","enum ProtocolMode : Enum<ProtocolMode> , Symbolic<NativeApi.ProtocolMode> ","elide.embedded.api.ProtocolMode"]},{"name":"fun <R> withLock(block: () -> R): R","description":"elide.embedded.api.InFlightCallInfo.withLock","location":"packages/embedded/elide.embedded.api/-in-flight-call-info/with-lock.html","searchKeys":["withLock","fun <R> withLock(block: () -> R): R","elide.embedded.api.InFlightCallInfo.withLock"]},{"name":"fun buildRequest(callId: InFlightCallID, mode: ProtocolMode, builder: UnaryNativeCall.UnaryNativeRequestBuilder.() -> Unit = {}): UnaryNativeCall","description":"elide.embedded.api.UnaryNativeCall.Companion.buildRequest","location":"packages/embedded/elide.embedded.api/-unary-native-call/-companion/build-request.html","searchKeys":["buildRequest","fun buildRequest(callId: InFlightCallID, mode: ProtocolMode, builder: UnaryNativeCall.UnaryNativeRequestBuilder.() -> Unit = {}): UnaryNativeCall","elide.embedded.api.UnaryNativeCall.Companion.buildRequest"]},{"name":"fun capability(capability: Capability): Int","description":"elide.embedded.ElideEmbedded.capability","location":"packages/embedded/elide.embedded/-elide-embedded/capability.html","searchKeys":["capability","fun capability(capability: Capability): Int","elide.embedded.ElideEmbedded.capability"]},{"name":"fun configure(version: String, config: InstanceConfiguration? = null): Int","description":"elide.embedded.ElideEmbedded.configure","location":"packages/embedded/elide.embedded/-elide-embedded/configure.html","searchKeys":["configure","fun configure(version: String, config: InstanceConfiguration? = null): Int","elide.embedded.ElideEmbedded.configure"]},{"name":"fun create(): ElideEmbedded","description":"elide.embedded.ElideEmbedded.Companion.create","location":"packages/embedded/elide.embedded/-elide-embedded/-companion/create.html","searchKeys":["create","fun create(): ElideEmbedded","elide.embedded.ElideEmbedded.Companion.create"]},{"name":"fun create(): NativeConfiguration","description":"elide.embedded.api.NativeConfiguration.Companion.create","location":"packages/embedded/elide.embedded.api/-native-configuration/-companion/create.html","searchKeys":["create","fun create(): NativeConfiguration","elide.embedded.api.NativeConfiguration.Companion.create"]},{"name":"fun create(callId: Long, mode: ProtocolMode): UnaryNativeCall","description":"elide.embedded.api.UnaryNativeCall.Companion.create","location":"packages/embedded/elide.embedded.api/-unary-native-call/-companion/create.html","searchKeys":["create","fun create(callId: Long, mode: ProtocolMode): UnaryNativeCall","elide.embedded.api.UnaryNativeCall.Companion.create"]},{"name":"fun create(config: Provider<NativeConfiguration>): NativeConfigLoader","description":"elide.embedded.cfg.NativeConfigLoader.Companion.create","location":"packages/embedded/elide.embedded.cfg/-native-config-loader/-companion/create.html","searchKeys":["create","fun create(config: Provider<NativeConfiguration>): NativeConfigLoader","elide.embedded.cfg.NativeConfigLoader.Companion.create"]},{"name":"fun create(stream: InputStream): Streams.SystemInputStream","description":"elide.embedded.Streams.SystemStream.Companion.create","location":"packages/embedded/elide.embedded/-streams/-system-stream/-companion/create.html","searchKeys":["create","fun create(stream: InputStream): Streams.SystemInputStream","elide.embedded.Streams.SystemStream.Companion.create"]},{"name":"fun create(stream: PrintStream): Streams.SystemOutputStream","description":"elide.embedded.Streams.SystemStream.Companion.create","location":"packages/embedded/elide.embedded/-streams/-system-stream/-companion/create.html","searchKeys":["create","fun create(stream: PrintStream): Streams.SystemOutputStream","elide.embedded.Streams.SystemStream.Companion.create"]},{"name":"fun createFrom(host: HostConfiguration): InstanceConfiguration","description":"elide.embedded.api.InstanceConfiguration.Companion.createFrom","location":"packages/embedded/elide.embedded.api/-instance-configuration/-companion/create-from.html","searchKeys":["createFrom","fun createFrom(host: HostConfiguration): InstanceConfiguration","elide.embedded.api.InstanceConfiguration.Companion.createFrom"]},{"name":"fun dispatchCancel(handle: InFlightCallInfo): Int","description":"elide.embedded.ElideEmbedded.dispatchCancel","location":"packages/embedded/elide.embedded/-elide-embedded/dispatch-cancel.html","searchKeys":["dispatchCancel","fun dispatchCancel(handle: InFlightCallInfo): Int","elide.embedded.ElideEmbedded.dispatchCancel"]},{"name":"fun dispatchPoll(handle: InFlightCallInfo): Int","description":"elide.embedded.ElideEmbedded.dispatchPoll","location":"packages/embedded/elide.embedded/-elide-embedded/dispatch-poll.html","searchKeys":["dispatchPoll","fun dispatchPoll(handle: InFlightCallInfo): Int","elide.embedded.ElideEmbedded.dispatchPoll"]},{"name":"fun enterDispatch(call: UnaryNativeCall, ticket: InFlightCallInfo): Int","description":"elide.embedded.ElideEmbedded.enterDispatch","location":"packages/embedded/elide.embedded/-elide-embedded/enter-dispatch.html","searchKeys":["enterDispatch","fun enterDispatch(call: UnaryNativeCall, ticket: InFlightCallInfo): Int","elide.embedded.ElideEmbedded.enterDispatch"]},{"name":"fun entry(args: Array<String>): Int","description":"elide.embedded.ElideEmbedded.entry","location":"packages/embedded/elide.embedded/-elide-embedded/entry.html","searchKeys":["entry","fun entry(args: Array<String>): Int","elide.embedded.ElideEmbedded.entry"]},{"name":"fun exitDispatch(call: UnaryNativeCall, ticket: InFlightCallInfo): Int","description":"elide.embedded.ElideEmbedded.exitDispatch","location":"packages/embedded/elide.embedded/-elide-embedded/exit-dispatch.html","searchKeys":["exitDispatch","fun exitDispatch(call: UnaryNativeCall, ticket: InFlightCallInfo): Int","elide.embedded.ElideEmbedded.exitDispatch"]},{"name":"fun initialize(protocol: ProtocolMode): Int","description":"elide.embedded.ElideEmbedded.initialize","location":"packages/embedded/elide.embedded/-elide-embedded/initialize.html","searchKeys":["initialize","fun initialize(protocol: ProtocolMode): Int","elide.embedded.ElideEmbedded.initialize"]},{"name":"fun interface InstanceConfigurationFactory","description":"elide.embedded.api.InstanceConfigurationFactory","location":"packages/embedded/elide.embedded.api/-instance-configuration-factory/index.html","searchKeys":["InstanceConfigurationFactory","fun interface InstanceConfigurationFactory","elide.embedded.api.InstanceConfigurationFactory"]},{"name":"fun isOpen(): Boolean","description":"elide.embedded.api.InFlightCallInfo.isOpen","location":"packages/embedded/elide.embedded.api/-in-flight-call-info/is-open.html","searchKeys":["isOpen","fun isOpen(): Boolean","elide.embedded.api.InFlightCallInfo.isOpen"]},{"name":"fun loadNative(native: NativeConfiguration): InstanceConfiguration","description":"elide.embedded.api.InstanceConfiguration.Companion.loadNative","location":"packages/embedded/elide.embedded.api/-instance-configuration/-companion/load-native.html","searchKeys":["loadNative","fun loadNative(native: NativeConfiguration): InstanceConfiguration","elide.embedded.api.InstanceConfiguration.Companion.loadNative"]},{"name":"fun main(args: Array<String>)","description":"elide.embedded.ElideEmbedded.Companion.main","location":"packages/embedded/elide.embedded/-elide-embedded/-companion/main.html","searchKeys":["main","fun main(args: Array<String>)","elide.embedded.ElideEmbedded.Companion.main"]},{"name":"fun obtain(): InFlightCallMediator","description":"elide.embedded.api.InFlightCallMediator.Companion.obtain","location":"packages/embedded/elide.embedded.api/-in-flight-call-mediator/-companion/obtain.html","searchKeys":["obtain","fun obtain(): InFlightCallMediator","elide.embedded.api.InFlightCallMediator.Companion.obtain"]},{"name":"fun of(callId: InFlightCallID, native: UnaryNativeCall? = null): InFlightCallInfo","description":"elide.embedded.api.InFlightCallInfo.Companion.of","location":"packages/embedded/elide.embedded.api/-in-flight-call-info/-companion/of.html","searchKeys":["of","fun of(callId: InFlightCallID, native: UnaryNativeCall? = null): InFlightCallInfo","elide.embedded.api.InFlightCallInfo.Companion.of"]},{"name":"fun of(callId: Long, mode: ProtocolMode, byteview: ByteBuffer): UnaryNativeCall","description":"elide.embedded.api.UnaryNativeCall.Companion.of","location":"packages/embedded/elide.embedded.api/-unary-native-call/-companion/of.html","searchKeys":["of","fun of(callId: Long, mode: ProtocolMode, byteview: ByteBuffer): UnaryNativeCall","elide.embedded.api.UnaryNativeCall.Companion.of"]},{"name":"fun of(version: String, mode: ProtocolMode, byteview: ByteBuffer): NativeConfiguration","description":"elide.embedded.api.NativeConfiguration.Companion.of","location":"packages/embedded/elide.embedded.api/-native-configuration/-companion/of.html","searchKeys":["of","fun of(version: String, mode: ProtocolMode, byteview: ByteBuffer): NativeConfiguration","elide.embedded.api.NativeConfiguration.Companion.of"]},{"name":"fun pack(call: UnaryInvocation): ByteBuffer","description":"elide.embedded.api.PackedCall.pack","location":"packages/embedded/elide.embedded.api/-packed-call/pack.html","searchKeys":["pack","fun pack(call: UnaryInvocation): ByteBuffer","elide.embedded.api.PackedCall.pack"]},{"name":"fun request(alarm: ScheduledInvocationRequest): UnaryNativeCall.UnaryNativeRequestBuilder","description":"elide.embedded.api.UnaryNativeCall.UnaryNativeRequestBuilder.request","location":"packages/embedded/elide.embedded.api/-unary-native-call/-unary-native-request-builder/request.html","searchKeys":["request","fun request(alarm: ScheduledInvocationRequest): UnaryNativeCall.UnaryNativeRequestBuilder","elide.embedded.api.UnaryNativeCall.UnaryNativeRequestBuilder.request"]},{"name":"fun request(http: FetchRequest): UnaryNativeCall.UnaryNativeRequestBuilder","description":"elide.embedded.api.UnaryNativeCall.UnaryNativeRequestBuilder.request","location":"packages/embedded/elide.embedded.api/-unary-native-call/-unary-native-request-builder/request.html","searchKeys":["request","fun request(http: FetchRequest): UnaryNativeCall.UnaryNativeRequestBuilder","elide.embedded.api.UnaryNativeCall.UnaryNativeRequestBuilder.request"]},{"name":"fun request(queue: QueueInvocationRequest): UnaryNativeCall.UnaryNativeRequestBuilder","description":"elide.embedded.api.UnaryNativeCall.UnaryNativeRequestBuilder.request","location":"packages/embedded/elide.embedded.api/-unary-native-call/-unary-native-request-builder/request.html","searchKeys":["request","fun request(queue: QueueInvocationRequest): UnaryNativeCall.UnaryNativeRequestBuilder","elide.embedded.api.UnaryNativeCall.UnaryNativeRequestBuilder.request"]},{"name":"fun respond(response: FetchResponse): UnaryInvocationResponse.Builder","description":"elide.embedded.api.UnaryNativeCall.respond","location":"packages/embedded/elide.embedded.api/-unary-native-call/respond.html","searchKeys":["respond","fun respond(response: FetchResponse): UnaryInvocationResponse.Builder","elide.embedded.api.UnaryNativeCall.respond"]},{"name":"fun respond(response: QueueInvocationResponse): UnaryInvocationResponse.Builder","description":"elide.embedded.api.UnaryNativeCall.respond","location":"packages/embedded/elide.embedded.api/-unary-native-call/respond.html","searchKeys":["respond","fun respond(response: QueueInvocationResponse): UnaryInvocationResponse.Builder","elide.embedded.api.UnaryNativeCall.respond"]},{"name":"fun respond(response: ScheduledInvocationResponse): UnaryInvocationResponse.Builder","description":"elide.embedded.api.UnaryNativeCall.respond","location":"packages/embedded/elide.embedded.api/-unary-native-call/respond.html","searchKeys":["respond","fun respond(response: ScheduledInvocationResponse): UnaryInvocationResponse.Builder","elide.embedded.api.UnaryNativeCall.respond"]},{"name":"fun response(call: UnaryNativeCall, ticket: InFlightCallInfo): UnaryInvocationResponse","description":"elide.embedded.ElideEmbedded.response","location":"packages/embedded/elide.embedded/-elide-embedded/response.html","searchKeys":["response","fun response(call: UnaryNativeCall, ticket: InFlightCallInfo): UnaryInvocationResponse","elide.embedded.ElideEmbedded.response"]},{"name":"fun start(args: List<String>? = null): Int","description":"elide.embedded.ElideEmbedded.start","location":"packages/embedded/elide.embedded/-elide-embedded/start.html","searchKeys":["start","fun start(args: List<String>? = null): Int","elide.embedded.ElideEmbedded.start"]},{"name":"fun stop(): Int","description":"elide.embedded.ElideEmbedded.stop","location":"packages/embedded/elide.embedded/-elide-embedded/stop.html","searchKeys":["stop","fun stop(): Int","elide.embedded.ElideEmbedded.stop"]},{"name":"fun teardown(): Int","description":"elide.embedded.ElideEmbedded.teardown","location":"packages/embedded/elide.embedded/-elide-embedded/teardown.html","searchKeys":["teardown","fun teardown(): Int","elide.embedded.ElideEmbedded.teardown"]},{"name":"fun valueOf(value: String): Capability","description":"elide.embedded.api.Capability.valueOf","location":"packages/embedded/elide.embedded.api/-capability/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): Capability","elide.embedded.api.Capability.valueOf"]},{"name":"fun valueOf(value: String): EmbeddedApp.AppStatus","description":"elide.embedded.api.EmbeddedApp.AppStatus.valueOf","location":"packages/embedded/elide.embedded.api/-embedded-app/-app-status/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): EmbeddedApp.AppStatus","elide.embedded.api.EmbeddedApp.AppStatus.valueOf"]},{"name":"fun valueOf(value: String): InitializationError","description":"elide.embedded.err.InitializationError.valueOf","location":"packages/embedded/elide.embedded.err/-initialization-error/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): InitializationError","elide.embedded.err.InitializationError.valueOf"]},{"name":"fun valueOf(value: String): InvocationStatus","description":"elide.embedded.api.InvocationStatus.valueOf","location":"packages/embedded/elide.embedded.api/-invocation-status/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): InvocationStatus","elide.embedded.api.InvocationStatus.valueOf"]},{"name":"fun valueOf(value: String): ProtocolMode","description":"elide.embedded.api.ProtocolMode.valueOf","location":"packages/embedded/elide.embedded.api/-protocol-mode/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): ProtocolMode","elide.embedded.api.ProtocolMode.valueOf"]},{"name":"fun values(): Array<Capability>","description":"elide.embedded.api.Capability.values","location":"packages/embedded/elide.embedded.api/-capability/values.html","searchKeys":["values","fun values(): Array<Capability>","elide.embedded.api.Capability.values"]},{"name":"fun values(): Array<EmbeddedApp.AppStatus>","description":"elide.embedded.api.EmbeddedApp.AppStatus.values","location":"packages/embedded/elide.embedded.api/-embedded-app/-app-status/values.html","searchKeys":["values","fun values(): Array<EmbeddedApp.AppStatus>","elide.embedded.api.EmbeddedApp.AppStatus.values"]},{"name":"fun values(): Array<InitializationError>","description":"elide.embedded.err.InitializationError.values","location":"packages/embedded/elide.embedded.err/-initialization-error/values.html","searchKeys":["values","fun values(): Array<InitializationError>","elide.embedded.err.InitializationError.values"]},{"name":"fun values(): Array<InvocationStatus>","description":"elide.embedded.api.InvocationStatus.values","location":"packages/embedded/elide.embedded.api/-invocation-status/values.html","searchKeys":["values","fun values(): Array<InvocationStatus>","elide.embedded.api.InvocationStatus.values"]},{"name":"fun values(): Array<ProtocolMode>","description":"elide.embedded.api.ProtocolMode.values","location":"packages/embedded/elide.embedded.api/-protocol-mode/values.html","searchKeys":["values","fun values(): Array<ProtocolMode>","elide.embedded.api.ProtocolMode.values"]},{"name":"interface ActiveConfiguration","description":"elide.embedded.api.ActiveConfiguration","location":"packages/embedded/elide.embedded.api/-active-configuration/index.html","searchKeys":["ActiveConfiguration","interface ActiveConfiguration","elide.embedded.api.ActiveConfiguration"]},{"name":"interface CallbackPointer : CFunctionPointer","description":"elide.embedded.NativeApi.CallbackPointer","location":"packages/embedded/elide.embedded/-native-api/-callback-pointer/index.html","searchKeys":["CallbackPointer","interface CallbackPointer : CFunctionPointer","elide.embedded.NativeApi.CallbackPointer"]},{"name":"interface ConfigByteConsumer : CFunctionPointer","description":"elide.embedded.NativeApi.ConfigByteConsumer","location":"packages/embedded/elide.embedded/-native-api/-config-byte-consumer/index.html","searchKeys":["ConfigByteConsumer","interface ConfigByteConsumer : CFunctionPointer","elide.embedded.NativeApi.ConfigByteConsumer"]},{"name":"interface ConfigTipSupplier : CFunctionPointer","description":"elide.embedded.NativeApi.ConfigTipSupplier","location":"packages/embedded/elide.embedded/-native-api/-config-tip-supplier/index.html","searchKeys":["ConfigTipSupplier","interface ConfigTipSupplier : CFunctionPointer","elide.embedded.NativeApi.ConfigTipSupplier"]},{"name":"interface ConfigurationManager","description":"elide.embedded.api.ConfigurationManager","location":"packages/embedded/elide.embedded.api/-configuration-manager/index.html","searchKeys":["ConfigurationManager","interface ConfigurationManager","elide.embedded.api.ConfigurationManager"]},{"name":"interface EmbeddedApp","description":"elide.embedded.api.EmbeddedApp","location":"packages/embedded/elide.embedded.api/-embedded-app/index.html","searchKeys":["EmbeddedApp","interface EmbeddedApp","elide.embedded.api.EmbeddedApp"]},{"name":"interface EmbeddedAppManager","description":"elide.embedded.api.EmbeddedAppManager","location":"packages/embedded/elide.embedded.api/-embedded-app-manager/index.html","searchKeys":["EmbeddedAppManager","interface EmbeddedAppManager","elide.embedded.api.EmbeddedAppManager"]},{"name":"interface EmbeddedDispatcher","description":"elide.embedded.api.EmbeddedRuntime.EmbeddedDispatcher","location":"packages/embedded/elide.embedded.api/-embedded-runtime/-embedded-dispatcher/index.html","searchKeys":["EmbeddedDispatcher","interface EmbeddedDispatcher","elide.embedded.api.EmbeddedRuntime.EmbeddedDispatcher"]},{"name":"interface EmbeddedRuntime","description":"elide.embedded.api.EmbeddedRuntime","location":"packages/embedded/elide.embedded.api/-embedded-runtime/index.html","searchKeys":["EmbeddedRuntime","interface EmbeddedRuntime","elide.embedded.api.EmbeddedRuntime"]},{"name":"interface EntryPointer : CFunctionPointer","description":"elide.embedded.NativeApi.EntryPointer","location":"packages/embedded/elide.embedded/-native-api/-entry-pointer/index.html","searchKeys":["EntryPointer","interface EntryPointer : CFunctionPointer","elide.embedded.NativeApi.EntryPointer"]},{"name":"interface EnvKey","description":"elide.embedded.env.EnvKey","location":"packages/embedded/elide.embedded.env/-env-key/index.html","searchKeys":["EnvKey","interface EnvKey","elide.embedded.env.EnvKey"]},{"name":"interface EnvResolver","description":"elide.embedded.env.EnvResolver","location":"packages/embedded/elide.embedded.env/-env-resolver/index.html","searchKeys":["EnvResolver","interface EnvResolver","elide.embedded.env.EnvResolver"]},{"name":"interface EnvValue","description":"elide.embedded.env.EnvValue","location":"packages/embedded/elide.embedded.env/-env-value/index.html","searchKeys":["EnvValue","interface EnvValue","elide.embedded.env.EnvValue"]},{"name":"interface InFlightCall : PointerBase","description":"elide.embedded.NativeApi.InFlightCall","location":"packages/embedded/elide.embedded/-native-api/-in-flight-call/index.html","searchKeys":["InFlightCall","interface InFlightCall : PointerBase","elide.embedded.NativeApi.InFlightCall"]},{"name":"interface InFlightCallMediator","description":"elide.embedded.api.InFlightCallMediator","location":"packages/embedded/elide.embedded.api/-in-flight-call-mediator/index.html","searchKeys":["InFlightCallMediator","interface InFlightCallMediator","elide.embedded.api.InFlightCallMediator"]},{"name":"interface InstanceConfiguration : PointerBase","description":"elide.embedded.NativeApi.InstanceConfiguration","location":"packages/embedded/elide.embedded/-native-api/-instance-configuration/index.html","searchKeys":["InstanceConfiguration","interface InstanceConfiguration : PointerBase","elide.embedded.NativeApi.InstanceConfiguration"]},{"name":"interface PayloadByteConsumer : CFunctionPointer","description":"elide.embedded.NativeApi.PayloadByteConsumer","location":"packages/embedded/elide.embedded/-native-api/-payload-byte-consumer/index.html","searchKeys":["PayloadByteConsumer","interface PayloadByteConsumer : CFunctionPointer","elide.embedded.NativeApi.PayloadByteConsumer"]},{"name":"interface PayloadTipSupplier : CFunctionPointer","description":"elide.embedded.NativeApi.PayloadTipSupplier","location":"packages/embedded/elide.embedded/-native-api/-payload-tip-supplier/index.html","searchKeys":["PayloadTipSupplier","interface PayloadTipSupplier : CFunctionPointer","elide.embedded.NativeApi.PayloadTipSupplier"]},{"name":"interface SerializedInvocation : PointerBase","description":"elide.embedded.NativeApi.SerializedInvocation","location":"packages/embedded/elide.embedded/-native-api/-serialized-invocation/index.html","searchKeys":["SerializedInvocation","interface SerializedInvocation : PointerBase","elide.embedded.NativeApi.SerializedInvocation"]},{"name":"interface StreamStub","description":"elide.embedded.Streams.StreamStub","location":"packages/embedded/elide.embedded/-streams/-stream-stub/index.html","searchKeys":["StreamStub","interface StreamStub","elide.embedded.Streams.StreamStub"]},{"name":"object Companion","description":"elide.embedded.ElideEmbedded.Companion","location":"packages/embedded/elide.embedded/-elide-embedded/-companion/index.html","searchKeys":["Companion","object Companion","elide.embedded.ElideEmbedded.Companion"]},{"name":"object Companion","description":"elide.embedded.Streams.SystemStream.Companion","location":"packages/embedded/elide.embedded/-streams/-system-stream/-companion/index.html","searchKeys":["Companion","object Companion","elide.embedded.Streams.SystemStream.Companion"]},{"name":"object Companion","description":"elide.embedded.api.InFlightCallInfo.Companion","location":"packages/embedded/elide.embedded.api/-in-flight-call-info/-companion/index.html","searchKeys":["Companion","object Companion","elide.embedded.api.InFlightCallInfo.Companion"]},{"name":"object Companion","description":"elide.embedded.api.InFlightCallMediator.Companion","location":"packages/embedded/elide.embedded.api/-in-flight-call-mediator/-companion/index.html","searchKeys":["Companion","object Companion","elide.embedded.api.InFlightCallMediator.Companion"]},{"name":"object Companion","description":"elide.embedded.api.InstanceConfiguration.Companion","location":"packages/embedded/elide.embedded.api/-instance-configuration/-companion/index.html","searchKeys":["Companion","object Companion","elide.embedded.api.InstanceConfiguration.Companion"]},{"name":"object Companion","description":"elide.embedded.api.NativeConfiguration.Companion","location":"packages/embedded/elide.embedded.api/-native-configuration/-companion/index.html","searchKeys":["Companion","object Companion","elide.embedded.api.NativeConfiguration.Companion"]},{"name":"object Companion","description":"elide.embedded.api.UnaryNativeCall.Companion","location":"packages/embedded/elide.embedded.api/-unary-native-call/-companion/index.html","searchKeys":["Companion","object Companion","elide.embedded.api.UnaryNativeCall.Companion"]},{"name":"object Companion","description":"elide.embedded.cfg.NativeConfigLoader.Companion","location":"packages/embedded/elide.embedded.cfg/-native-config-loader/-companion/index.html","searchKeys":["Companion","object Companion","elide.embedded.cfg.NativeConfigLoader.Companion"]},{"name":"object Companion : Symbolic.SealedResolver<NativeApi.Capability, Capability> ","description":"elide.embedded.api.Capability.Companion","location":"packages/embedded/elide.embedded.api/-capability/-companion/index.html","searchKeys":["Companion","object Companion : Symbolic.SealedResolver<NativeApi.Capability, Capability> ","elide.embedded.api.Capability.Companion"]},{"name":"object Companion : Symbolic.SealedResolver<NativeApi.InvocationStatus, InvocationStatus> ","description":"elide.embedded.api.InvocationStatus.Companion","location":"packages/embedded/elide.embedded.api/-invocation-status/-companion/index.html","searchKeys":["Companion","object Companion : Symbolic.SealedResolver<NativeApi.InvocationStatus, InvocationStatus> ","elide.embedded.api.InvocationStatus.Companion"]},{"name":"object Companion : Symbolic.SealedResolver<NativeApi.ProtocolMode, ProtocolMode> ","description":"elide.embedded.api.ProtocolMode.Companion","location":"packages/embedded/elide.embedded.api/-protocol-mode/-companion/index.html","searchKeys":["Companion","object Companion : Symbolic.SealedResolver<NativeApi.ProtocolMode, ProtocolMode> ","elide.embedded.api.ProtocolMode.Companion"]},{"name":"object PackedCall","description":"elide.embedded.api.PackedCall","location":"packages/embedded/elide.embedded.api/-packed-call/index.html","searchKeys":["PackedCall","object PackedCall","elide.embedded.api.PackedCall"]},{"name":"object StreamStubImpl : Streams.StreamStub","description":"elide.embedded.Streams.StreamStubImpl","location":"packages/embedded/elide.embedded/-streams/-stream-stub-impl/index.html","searchKeys":["StreamStubImpl","object StreamStubImpl : Streams.StreamStub","elide.embedded.Streams.StreamStubImpl"]},{"name":"object Streams","description":"elide.embedded.Streams","location":"packages/embedded/elide.embedded/-streams/index.html","searchKeys":["Streams","object Streams","elide.embedded.Streams"]},{"name":"open class Entrypoint","description":"elide.embedded.Entrypoint","location":"packages/embedded/elide.embedded/-entrypoint/index.html","searchKeys":["Entrypoint","open class Entrypoint","elide.embedded.Entrypoint"]},{"name":"open fun arg(thread: IsolateThread, arg: CCharPointer): Int","description":"elide.embedded.Entrypoint.arg","location":"packages/embedded/elide.embedded/-entrypoint/arg.html","searchKeys":["arg","open fun arg(thread: IsolateThread, arg: CCharPointer): Int","elide.embedded.Entrypoint.arg"]},{"name":"open fun cancel(thread: IsolateThread, inflight: NativeApi.InFlightCall): Int","description":"elide.embedded.Entrypoint.cancel","location":"packages/embedded/elide.embedded/-entrypoint/cancel.html","searchKeys":["cancel","open fun cancel(thread: IsolateThread, inflight: NativeApi.InFlightCall): Int","elide.embedded.Entrypoint.cancel"]},{"name":"open fun capability(thread: IsolateThread, capability: NativeApi.Capability): Int","description":"elide.embedded.Entrypoint.capability","location":"packages/embedded/elide.embedded/-entrypoint/capability.html","searchKeys":["capability","open fun capability(thread: IsolateThread, capability: NativeApi.Capability): Int","elide.embedded.Entrypoint.capability"]},{"name":"open fun configure(thread: IsolateThread, version: CCharPointer, config: NativeApi.InstanceConfiguration): Int","description":"elide.embedded.Entrypoint.configure","location":"packages/embedded/elide.embedded/-entrypoint/configure.html","searchKeys":["configure","open fun configure(thread: IsolateThread, version: CCharPointer, config: NativeApi.InstanceConfiguration): Int","elide.embedded.Entrypoint.configure"]},{"name":"open fun enter(thread: IsolateThread, call: NativeApi.SerializedInvocation, inflight: NativeApi.InFlightCall, cbk: NativeApi.CallbackPointer): Int","description":"elide.embedded.Entrypoint.enter","location":"packages/embedded/elide.embedded/-entrypoint/enter.html","searchKeys":["enter","open fun enter(thread: IsolateThread, call: NativeApi.SerializedInvocation, inflight: NativeApi.InFlightCall, cbk: NativeApi.CallbackPointer): Int","elide.embedded.Entrypoint.enter"]},{"name":"open fun exit(thread: IsolateThread, call: NativeApi.SerializedInvocation, inflight: NativeApi.InFlightCall): Int","description":"elide.embedded.Entrypoint.exit","location":"packages/embedded/elide.embedded/-entrypoint/exit.html","searchKeys":["exit","open fun exit(thread: IsolateThread, call: NativeApi.SerializedInvocation, inflight: NativeApi.InFlightCall): Int","elide.embedded.Entrypoint.exit"]},{"name":"open fun fromCValue(value: Int): NativeApi.Capability","description":"elide.embedded.NativeApi.Capability.fromCValue","location":"packages/embedded/elide.embedded/-native-api/-capability/from-c-value.html","searchKeys":["fromCValue","open fun fromCValue(value: Int): NativeApi.Capability","elide.embedded.NativeApi.Capability.fromCValue"]},{"name":"open fun fromCValue(value: Int): NativeApi.InvocationStatus","description":"elide.embedded.NativeApi.InvocationStatus.fromCValue","location":"packages/embedded/elide.embedded/-native-api/-invocation-status/from-c-value.html","searchKeys":["fromCValue","open fun fromCValue(value: Int): NativeApi.InvocationStatus","elide.embedded.NativeApi.InvocationStatus.fromCValue"]},{"name":"open fun fromCValue(value: Int): NativeApi.ProtocolMode","description":"elide.embedded.NativeApi.ProtocolMode.fromCValue","location":"packages/embedded/elide.embedded/-native-api/-protocol-mode/from-c-value.html","searchKeys":["fromCValue","open fun fromCValue(value: Int): NativeApi.ProtocolMode","elide.embedded.NativeApi.ProtocolMode.fromCValue"]},{"name":"open fun getCValue(): Int","description":"elide.embedded.NativeApi.Capability.getCValue","location":"packages/embedded/elide.embedded/-native-api/-capability/get-c-value.html","searchKeys":["getCValue","open fun getCValue(): Int","elide.embedded.NativeApi.Capability.getCValue"]},{"name":"open fun getCValue(): Int","description":"elide.embedded.NativeApi.InvocationStatus.getCValue","location":"packages/embedded/elide.embedded/-native-api/-invocation-status/get-c-value.html","searchKeys":["getCValue","open fun getCValue(): Int","elide.embedded.NativeApi.InvocationStatus.getCValue"]},{"name":"open fun getCValue(): Int","description":"elide.embedded.NativeApi.ProtocolMode.getCValue","location":"packages/embedded/elide.embedded/-native-api/-protocol-mode/get-c-value.html","searchKeys":["getCValue","open fun getCValue(): Int","elide.embedded.NativeApi.ProtocolMode.getCValue"]},{"name":"open fun getHeaderFiles(): List<String>","description":"elide.embedded.NativeApi.ElideEmbeddedApi.getHeaderFiles","location":"packages/embedded/elide.embedded/-native-api/-elide-embedded-api/get-header-files.html","searchKeys":["getHeaderFiles","open fun getHeaderFiles(): List<String>","elide.embedded.NativeApi.ElideEmbeddedApi.getHeaderFiles"]},{"name":"open fun initialize(thread: IsolateThread, mode: NativeApi.ProtocolMode): Int","description":"elide.embedded.Entrypoint.initialize","location":"packages/embedded/elide.embedded/-entrypoint/initialize.html","searchKeys":["initialize","open fun initialize(thread: IsolateThread, mode: NativeApi.ProtocolMode): Int","elide.embedded.Entrypoint.initialize"]},{"name":"open fun isInConfiguration(): Boolean","description":"elide.embedded.NativeApi.ElideEmbeddedApi.isInConfiguration","location":"packages/embedded/elide.embedded/-native-api/-elide-embedded-api/is-in-configuration.html","searchKeys":["isInConfiguration","open fun isInConfiguration(): Boolean","elide.embedded.NativeApi.ElideEmbeddedApi.isInConfiguration"]},{"name":"open fun main(args: Array<String>)","description":"elide.embedded.Entrypoint.main","location":"packages/embedded/elide.embedded/-entrypoint/main.html","searchKeys":["main","open fun main(args: Array<String>)","elide.embedded.Entrypoint.main"]},{"name":"open fun poll(thread: IsolateThread, inflight: NativeApi.InFlightCall): Int","description":"elide.embedded.Entrypoint.poll","location":"packages/embedded/elide.embedded/-entrypoint/poll.html","searchKeys":["poll","open fun poll(thread: IsolateThread, inflight: NativeApi.InFlightCall): Int","elide.embedded.Entrypoint.poll"]},{"name":"open fun resolve(keys: Pair<EnvVariableName, SystemPropertyName>): String?","description":"elide.embedded.env.EnvResolver.resolve","location":"packages/embedded/elide.embedded.env/-env-resolver/resolve.html","searchKeys":["resolve","open fun resolve(keys: Pair<EnvVariableName, SystemPropertyName>): String?","elide.embedded.env.EnvResolver.resolve"]},{"name":"open fun start(thread: IsolateThread): Int","description":"elide.embedded.Entrypoint.start","location":"packages/embedded/elide.embedded/-entrypoint/start.html","searchKeys":["start","open fun start(thread: IsolateThread): Int","elide.embedded.Entrypoint.start"]},{"name":"open fun stop(thread: IsolateThread): Int","description":"elide.embedded.Entrypoint.stop","location":"packages/embedded/elide.embedded/-entrypoint/stop.html","searchKeys":["stop","open fun stop(thread: IsolateThread): Int","elide.embedded.Entrypoint.stop"]},{"name":"open fun teardown(thread: IsolateThread): Int","description":"elide.embedded.Entrypoint.teardown","location":"packages/embedded/elide.embedded/-entrypoint/teardown.html","searchKeys":["teardown","open fun teardown(thread: IsolateThread): Int","elide.embedded.Entrypoint.teardown"]},{"name":"open fun valueOf(name: String): NativeApi.Capability","description":"elide.embedded.NativeApi.Capability.valueOf","location":"packages/embedded/elide.embedded/-native-api/-capability/value-of.html","searchKeys":["valueOf","open fun valueOf(name: String): NativeApi.Capability","elide.embedded.NativeApi.Capability.valueOf"]},{"name":"open fun valueOf(name: String): NativeApi.InvocationStatus","description":"elide.embedded.NativeApi.InvocationStatus.valueOf","location":"packages/embedded/elide.embedded/-native-api/-invocation-status/value-of.html","searchKeys":["valueOf","open fun valueOf(name: String): NativeApi.InvocationStatus","elide.embedded.NativeApi.InvocationStatus.valueOf"]},{"name":"open fun valueOf(name: String): NativeApi.ProtocolMode","description":"elide.embedded.NativeApi.ProtocolMode.valueOf","location":"packages/embedded/elide.embedded/-native-api/-protocol-mode/value-of.html","searchKeys":["valueOf","open fun valueOf(name: String): NativeApi.ProtocolMode","elide.embedded.NativeApi.ProtocolMode.valueOf"]},{"name":"open fun values(): Array<NativeApi.Capability>","description":"elide.embedded.NativeApi.Capability.values","location":"packages/embedded/elide.embedded/-native-api/-capability/values.html","searchKeys":["values","open fun values(): Array<NativeApi.Capability>","elide.embedded.NativeApi.Capability.values"]},{"name":"open fun values(): Array<NativeApi.InvocationStatus>","description":"elide.embedded.NativeApi.InvocationStatus.values","location":"packages/embedded/elide.embedded/-native-api/-invocation-status/values.html","searchKeys":["values","open fun values(): Array<NativeApi.InvocationStatus>","elide.embedded.NativeApi.InvocationStatus.values"]},{"name":"open fun values(): Array<NativeApi.ProtocolMode>","description":"elide.embedded.NativeApi.ProtocolMode.values","location":"packages/embedded/elide.embedded/-native-api/-protocol-mode/values.html","searchKeys":["values","open fun values(): Array<NativeApi.ProtocolMode>","elide.embedded.NativeApi.ProtocolMode.values"]},{"name":"open override fun beforeAnalysis(access: Feature.BeforeAnalysisAccess)","description":"elide.embedded.feature.EmbeddedRuntime.beforeAnalysis","location":"packages/embedded/elide.embedded.feature/-embedded-runtime/before-analysis.html","searchKeys":["beforeAnalysis","open override fun beforeAnalysis(access: Feature.BeforeAnalysisAccess)","elide.embedded.feature.EmbeddedRuntime.beforeAnalysis"]},{"name":"open override fun close()","description":"elide.embedded.api.InFlightCallInfo.close","location":"packages/embedded/elide.embedded.api/-in-flight-call-info/close.html","searchKeys":["close","open override fun close()","elide.embedded.api.InFlightCallInfo.close"]},{"name":"open override fun getDescription(): String","description":"elide.embedded.feature.EmbeddedRuntime.getDescription","location":"packages/embedded/elide.embedded.feature/-embedded-runtime/get-description.html","searchKeys":["getDescription","open override fun getDescription(): String","elide.embedded.feature.EmbeddedRuntime.getDescription"]},{"name":"open override fun getURL(): String","description":"elide.embedded.feature.EmbeddedRuntime.getURL","location":"packages/embedded/elide.embedded.feature/-embedded-runtime/get-u-r-l.html","searchKeys":["getURL","open override fun getURL(): String","elide.embedded.feature.EmbeddedRuntime.getURL"]},{"name":"open override fun isInConfiguration(access: Feature.IsInConfigurationAccess): Boolean","description":"elide.embedded.feature.EmbeddedRuntime.isInConfiguration","location":"packages/embedded/elide.embedded.feature/-embedded-runtime/is-in-configuration.html","searchKeys":["isInConfiguration","open override fun isInConfiguration(access: Feature.IsInConfigurationAccess): Boolean","elide.embedded.feature.EmbeddedRuntime.isInConfiguration"]},{"name":"open override fun provide(): InstanceConfiguration","description":"elide.embedded.cfg.NativeConfigLoader.provide","location":"packages/embedded/elide.embedded.cfg/-native-config-loader/provide.html","searchKeys":["provide","open override fun provide(): InstanceConfiguration","elide.embedded.cfg.NativeConfigLoader.provide"]},{"name":"open override fun resolve(symbol: NativeApi.Capability): Capability","description":"elide.embedded.api.Capability.Companion.resolve","location":"packages/embedded/elide.embedded.api/-capability/-companion/resolve.html","searchKeys":["resolve","open override fun resolve(symbol: NativeApi.Capability): Capability","elide.embedded.api.Capability.Companion.resolve"]},{"name":"open override fun resolve(symbol: NativeApi.InvocationStatus): InvocationStatus","description":"elide.embedded.api.InvocationStatus.Companion.resolve","location":"packages/embedded/elide.embedded.api/-invocation-status/-companion/resolve.html","searchKeys":["resolve","open override fun resolve(symbol: NativeApi.InvocationStatus): InvocationStatus","elide.embedded.api.InvocationStatus.Companion.resolve"]},{"name":"open override fun resolve(symbol: NativeApi.ProtocolMode): ProtocolMode","description":"elide.embedded.api.ProtocolMode.Companion.resolve","location":"packages/embedded/elide.embedded.api/-protocol-mode/-companion/resolve.html","searchKeys":["resolve","open override fun resolve(symbol: NativeApi.ProtocolMode): ProtocolMode","elide.embedded.api.ProtocolMode.Companion.resolve"]},{"name":"open override fun uncaughtException(t: Thread, e: Throwable)","description":"elide.embedded.err.GlobalErrHandler.uncaughtException","location":"packages/embedded/elide.embedded.err/-global-err-handler/uncaught-exception.html","searchKeys":["uncaughtException","open override fun uncaughtException(t: Thread, e: Throwable)","elide.embedded.err.GlobalErrHandler.uncaughtException"]},{"name":"open override val stderr: PrintStream","description":"elide.embedded.Streams.StreamStubImpl.stderr","location":"packages/embedded/elide.embedded/-streams/-stream-stub-impl/stderr.html","searchKeys":["stderr","open override val stderr: PrintStream","elide.embedded.Streams.StreamStubImpl.stderr"]},{"name":"open override val stdin: InputStream","description":"elide.embedded.Streams.StreamStubImpl.stdin","location":"packages/embedded/elide.embedded/-streams/-stream-stub-impl/stdin.html","searchKeys":["stdin","open override val stdin: InputStream","elide.embedded.Streams.StreamStubImpl.stdin"]},{"name":"open override val stdout: PrintStream","description":"elide.embedded.Streams.StreamStubImpl.stdout","location":"packages/embedded/elide.embedded/-streams/-stream-stub-impl/stdout.html","searchKeys":["stdout","open override val stdout: PrintStream","elide.embedded.Streams.StreamStubImpl.stdout"]},{"name":"open override val symbol: NativeApi.Capability","description":"elide.embedded.api.Capability.symbol","location":"packages/embedded/elide.embedded.api/-capability/symbol.html","searchKeys":["symbol","open override val symbol: NativeApi.Capability","elide.embedded.api.Capability.symbol"]},{"name":"open override val symbol: NativeApi.InvocationStatus","description":"elide.embedded.api.InvocationStatus.symbol","location":"packages/embedded/elide.embedded.api/-invocation-status/symbol.html","searchKeys":["symbol","open override val symbol: NativeApi.InvocationStatus","elide.embedded.api.InvocationStatus.symbol"]},{"name":"open override val symbol: NativeApi.ProtocolMode","description":"elide.embedded.api.ProtocolMode.symbol","location":"packages/embedded/elide.embedded.api/-protocol-mode/symbol.html","searchKeys":["symbol","open override val symbol: NativeApi.ProtocolMode","elide.embedded.api.ProtocolMode.symbol"]},{"name":"typealias EnvVariableName = String","description":"elide.embedded.env.EnvVariableName","location":"packages/embedded/elide.embedded.env/-env-variable-name/index.html","searchKeys":["EnvVariableName","typealias EnvVariableName = String","elide.embedded.env.EnvVariableName"]},{"name":"typealias ExitCode = UInt","description":"elide.embedded.api.ExitCode","location":"packages/embedded/elide.embedded.api/-exit-code/index.html","searchKeys":["ExitCode","typealias ExitCode = UInt","elide.embedded.api.ExitCode"]},{"name":"typealias InFlightCallID = Long","description":"elide.embedded.api.InFlightCallID","location":"packages/embedded/elide.embedded.api/-in-flight-call-i-d/index.html","searchKeys":["InFlightCallID","typealias InFlightCallID = Long","elide.embedded.api.InFlightCallID"]},{"name":"typealias SystemPropertyName = String","description":"elide.embedded.env.SystemPropertyName","location":"packages/embedded/elide.embedded.env/-system-property-name/index.html","searchKeys":["SystemPropertyName","typealias SystemPropertyName = String","elide.embedded.env.SystemPropertyName"]},{"name":"val DEFAULT_PROTOCOL_MODE: ProtocolMode","description":"elide.embedded.api.NativeConfiguration.Companion.DEFAULT_PROTOCOL_MODE","location":"packages/embedded/elide.embedded.api/-native-configuration/-companion/-d-e-f-a-u-l-t_-p-r-o-t-o-c-o-l_-m-o-d-e.html","searchKeys":["DEFAULT_PROTOCOL_MODE","val DEFAULT_PROTOCOL_MODE: ProtocolMode","elide.embedded.api.NativeConfiguration.Companion.DEFAULT_PROTOCOL_MODE"]},{"name":"val callId: InFlightCallID","description":"elide.embedded.api.InFlightCallInfo.callId","location":"packages/embedded/elide.embedded.api/-in-flight-call-info/call-id.html","searchKeys":["callId","val callId: InFlightCallID","elide.embedded.api.InFlightCallInfo.callId"]},{"name":"val callId: InFlightCallID","description":"elide.embedded.api.UnaryNativeCall.callId","location":"packages/embedded/elide.embedded.api/-unary-native-call/call-id.html","searchKeys":["callId","val callId: InFlightCallID","elide.embedded.api.UnaryNativeCall.callId"]},{"name":"val entries: EnumEntries<Capability>","description":"elide.embedded.api.Capability.entries","location":"packages/embedded/elide.embedded.api/-capability/entries.html","searchKeys":["entries","val entries: EnumEntries<Capability>","elide.embedded.api.Capability.entries"]},{"name":"val entries: EnumEntries<EmbeddedApp.AppStatus>","description":"elide.embedded.api.EmbeddedApp.AppStatus.entries","location":"packages/embedded/elide.embedded.api/-embedded-app/-app-status/entries.html","searchKeys":["entries","val entries: EnumEntries<EmbeddedApp.AppStatus>","elide.embedded.api.EmbeddedApp.AppStatus.entries"]},{"name":"val entries: EnumEntries<InitializationError>","description":"elide.embedded.err.InitializationError.entries","location":"packages/embedded/elide.embedded.err/-initialization-error/entries.html","searchKeys":["entries","val entries: EnumEntries<InitializationError>","elide.embedded.err.InitializationError.entries"]},{"name":"val entries: EnumEntries<InvocationStatus>","description":"elide.embedded.api.InvocationStatus.entries","location":"packages/embedded/elide.embedded.api/-invocation-status/entries.html","searchKeys":["entries","val entries: EnumEntries<InvocationStatus>","elide.embedded.api.InvocationStatus.entries"]},{"name":"val entries: EnumEntries<ProtocolMode>","description":"elide.embedded.api.ProtocolMode.entries","location":"packages/embedded/elide.embedded.api/-protocol-mode/entries.html","searchKeys":["entries","val entries: EnumEntries<ProtocolMode>","elide.embedded.api.ProtocolMode.entries"]},{"name":"val entryFunctionV1alpha1: CEntryPointLiteral<NativeApi.EntryPointer>","description":"elide.embedded.Entrypoint.entryFunctionV1alpha1","location":"packages/embedded/elide.embedded/-entrypoint/entry-function-v1alpha1.html","searchKeys":["entryFunctionV1alpha1","val entryFunctionV1alpha1: CEntryPointLiteral<NativeApi.EntryPointer>","elide.embedded.Entrypoint.entryFunctionV1alpha1"]},{"name":"val entrypointType: EntrypointType?","description":"elide.embedded.api.UnaryNativeCall.entrypointType","location":"packages/embedded/elide.embedded.api/-unary-native-call/entrypoint-type.html","searchKeys":["entrypointType","val entrypointType: EntrypointType?","elide.embedded.api.UnaryNativeCall.entrypointType"]},{"name":"val err: Streams.SystemStream<PrintStream>","description":"elide.embedded.Streams.err","location":"packages/embedded/elide.embedded/-streams/err.html","searchKeys":["err","val err: Streams.SystemStream<PrintStream>","elide.embedded.Streams.err"]},{"name":"val host: HostConfiguration","description":"elide.embedded.api.InstanceConfiguration.host","location":"packages/embedded/elide.embedded.api/-instance-configuration/host.html","searchKeys":["host","val host: HostConfiguration","elide.embedded.api.InstanceConfiguration.host"]},{"name":"val in: Streams.SystemStream<InputStream>","description":"elide.embedded.Streams.in","location":"packages/embedded/elide.embedded/-streams/in.html","searchKeys":["in","val in: Streams.SystemStream<InputStream>","elide.embedded.Streams.in"]},{"name":"val out: Streams.SystemStream<PrintStream>","description":"elide.embedded.Streams.out","location":"packages/embedded/elide.embedded/-streams/--out--.html","searchKeys":["out","val out: Streams.SystemStream<PrintStream>","elide.embedded.Streams.out"]},{"name":"val protocolMode: ProtocolMode","description":"elide.embedded.api.UnaryNativeCall.protocolMode","location":"packages/embedded/elide.embedded.api/-unary-native-call/protocol-mode.html","searchKeys":["protocolMode","val protocolMode: ProtocolMode","elide.embedded.api.UnaryNativeCall.protocolMode"]},{"name":"val ready: Boolean","description":"elide.embedded.api.UnaryNativeCall.ready","location":"packages/embedded/elide.embedded.api/-unary-native-call/ready.html","searchKeys":["ready","val ready: Boolean","elide.embedded.api.UnaryNativeCall.ready"]},{"name":"val request: UnaryInvocationRequest","description":"elide.embedded.api.UnaryNativeCall.request","location":"packages/embedded/elide.embedded.api/-unary-native-call/request.html","searchKeys":["request","val request: UnaryInvocationRequest","elide.embedded.api.UnaryNativeCall.request"]},{"name":"val stream: T","description":"elide.embedded.Streams.SystemStream.stream","location":"packages/embedded/elide.embedded/-streams/-system-stream/stream.html","searchKeys":["stream","val stream: T","elide.embedded.Streams.SystemStream.stream"]},{"name":"val stub: Streams.StreamStub","description":"elide.embedded.Streams.stub","location":"packages/embedded/elide.embedded/-streams/stub.html","searchKeys":["stub","val stub: Streams.StreamStub","elide.embedded.Streams.stub"]},{"name":"class RouteProcessor(codeGenerator: CodeGenerator, logger: KSPLogger, annotation: String) : SymbolProcessor","description":"elide.tools.processor.RouteProcessor","location":"tools/processor/elide.tools.processor/-route-processor/index.html","searchKeys":["RouteProcessor","class RouteProcessor(codeGenerator: CodeGenerator, logger: KSPLogger, annotation: String) : SymbolProcessor","elide.tools.processor.RouteProcessor"]},{"name":"class RouteProcessorFactory : SymbolProcessorProvider","description":"elide.tools.processor.RouteProcessor.RouteProcessorFactory","location":"tools/processor/elide.tools.processor/-route-processor/-route-processor-factory/index.html","searchKeys":["RouteProcessorFactory","class RouteProcessorFactory : SymbolProcessorProvider","elide.tools.processor.RouteProcessor.RouteProcessorFactory"]},{"name":"constructor()","description":"elide.tools.processor.RouteProcessor.RouteProcessorFactory.RouteProcessorFactory","location":"tools/processor/elide.tools.processor/-route-processor/-route-processor-factory/-route-processor-factory.html","searchKeys":["RouteProcessorFactory","constructor()","elide.tools.processor.RouteProcessor.RouteProcessorFactory.RouteProcessorFactory"]},{"name":"constructor(codeGenerator: CodeGenerator, logger: KSPLogger, annotation: String)","description":"elide.tools.processor.RouteProcessor.RouteProcessor","location":"tools/processor/elide.tools.processor/-route-processor/-route-processor.html","searchKeys":["RouteProcessor","constructor(codeGenerator: CodeGenerator, logger: KSPLogger, annotation: String)","elide.tools.processor.RouteProcessor.RouteProcessor"]},{"name":"open override fun create(environment: SymbolProcessorEnvironment): SymbolProcessor","description":"elide.tools.processor.RouteProcessor.RouteProcessorFactory.create","location":"tools/processor/elide.tools.processor/-route-processor/-route-processor-factory/create.html","searchKeys":["create","open override fun create(environment: SymbolProcessorEnvironment): SymbolProcessor","elide.tools.processor.RouteProcessor.RouteProcessorFactory.create"]},{"name":"open override fun finish()","description":"elide.tools.processor.RouteProcessor.finish","location":"tools/processor/elide.tools.processor/-route-processor/finish.html","searchKeys":["finish","open override fun finish()","elide.tools.processor.RouteProcessor.finish"]},{"name":"open override fun process(resolver: Resolver): List<KSAnnotated>","description":"elide.tools.processor.RouteProcessor.process","location":"tools/processor/elide.tools.processor/-route-processor/process.html","searchKeys":["process","open override fun process(resolver: Resolver): List<KSAnnotated>","elide.tools.processor.RouteProcessor.process"]},{"name":"BASE64","description":"elide.util.Encoding.BASE64","location":"packages/base/elide.util/-encoding/-b-a-s-e64/index.html","searchKeys":["BASE64","BASE64","elide.util.Encoding.BASE64"]},{"name":"DEBUG","description":"elide.runtime.LogLevel.DEBUG","location":"packages/base/elide.runtime/-log-level/-d-e-b-u-g/index.html","searchKeys":["DEBUG","DEBUG","elide.runtime.LogLevel.DEBUG"]},{"name":"ERROR","description":"elide.runtime.LogLevel.ERROR","location":"packages/base/elide.runtime/-log-level/-e-r-r-o-r/index.html","searchKeys":["ERROR","ERROR","elide.runtime.LogLevel.ERROR"]},{"name":"HEX","description":"elide.util.Encoding.HEX","location":"packages/base/elide.util/-encoding/-h-e-x/index.html","searchKeys":["HEX","HEX","elide.util.Encoding.HEX"]},{"name":"INFO","description":"elide.runtime.LogLevel.INFO","location":"packages/base/elide.runtime/-log-level/-i-n-f-o/index.html","searchKeys":["INFO","INFO","elide.runtime.LogLevel.INFO"]},{"name":"LIVE","description":"elide.AppEnvironment.LIVE","location":"packages/base/elide/-app-environment/-l-i-v-e/index.html","searchKeys":["LIVE","LIVE","elide.AppEnvironment.LIVE"]},{"name":"SANDBOX","description":"elide.AppEnvironment.SANDBOX","location":"packages/base/elide/-app-environment/-s-a-n-d-b-o-x/index.html","searchKeys":["SANDBOX","SANDBOX","elide.AppEnvironment.SANDBOX"]},{"name":"TRACE","description":"elide.runtime.LogLevel.TRACE","location":"packages/base/elide.runtime/-log-level/-t-r-a-c-e/index.html","searchKeys":["TRACE","TRACE","elide.runtime.LogLevel.TRACE"]},{"name":"UTF_8","description":"elide.util.Encoding.UTF_8","location":"packages/base/elide.util/-encoding/-u-t-f_8/index.html","searchKeys":["UTF_8","UTF_8","elide.util.Encoding.UTF_8"]},{"name":"WARN","description":"elide.runtime.LogLevel.WARN","location":"packages/base/elide.runtime/-log-level/-w-a-r-n/index.html","searchKeys":["WARN","WARN","elide.runtime.LogLevel.WARN"]},{"name":"abstract class AbstractTreeMap<Key : Comparable<Key>, Value> : SortedMap<Key, Value> ","description":"elide.struct.AbstractTreeMap","location":"packages/base/elide.struct/-abstract-tree-map/index.html","searchKeys":["AbstractTreeMap","abstract class AbstractTreeMap<Key : Comparable<Key>, Value> : SortedMap<Key, Value> ","elide.struct.AbstractTreeMap"]},{"name":"abstract fun decode(data: ByteArray): ByteArray","description":"elide.util.Encoder.decode","location":"packages/base/elide.util/-encoder/decode.html","searchKeys":["decode","abstract fun decode(data: ByteArray): ByteArray","elide.util.Encoder.decode"]},{"name":"abstract fun decode(string: String): ByteArray","description":"elide.util.Encoder.decode","location":"packages/base/elide.util/-encoder/decode.html","searchKeys":["decode","abstract fun decode(string: String): ByteArray","elide.util.Encoder.decode"]},{"name":"abstract fun decodeToString(data: ByteArray): String","description":"elide.util.Encoder.decodeToString","location":"packages/base/elide.util/-encoder/decode-to-string.html","searchKeys":["decodeToString","abstract fun decodeToString(data: ByteArray): String","elide.util.Encoder.decodeToString"]},{"name":"abstract fun decodeToString(string: String): String","description":"elide.util.Encoder.decodeToString","location":"packages/base/elide.util/-encoder/decode-to-string.html","searchKeys":["decodeToString","abstract fun decodeToString(string: String): String","elide.util.Encoder.decodeToString"]},{"name":"abstract fun encode(data: ByteArray): ByteArray","description":"elide.util.Encoder.encode","location":"packages/base/elide.util/-encoder/encode.html","searchKeys":["encode","abstract fun encode(data: ByteArray): ByteArray","elide.util.Encoder.encode"]},{"name":"abstract fun encode(string: String): ByteArray","description":"elide.util.Encoder.encode","location":"packages/base/elide.util/-encoder/encode.html","searchKeys":["encode","abstract fun encode(string: String): ByteArray","elide.util.Encoder.encode"]},{"name":"abstract fun encodeToString(data: ByteArray): String","description":"elide.util.Encoder.encodeToString","location":"packages/base/elide.util/-encoder/encode-to-string.html","searchKeys":["encodeToString","abstract fun encodeToString(data: ByteArray): String","elide.util.Encoder.encodeToString"]},{"name":"abstract fun encodeToString(string: String): String","description":"elide.util.Encoder.encodeToString","location":"packages/base/elide.util/-encoder/encode-to-string.html","searchKeys":["encodeToString","abstract fun encodeToString(string: String): String","elide.util.Encoder.encodeToString"]},{"name":"abstract fun encoding(): Encoding","description":"elide.util.Encoder.encoding","location":"packages/base/elide.util/-encoder/encoding.html","searchKeys":["encoding","abstract fun encoding(): Encoding","elide.util.Encoder.encoding"]},{"name":"abstract operator override fun get(key: Key): Value?","description":"elide.struct.api.SortedMap.get","location":"packages/base/elide.struct.api/-sorted-map/get.html","searchKeys":["get","abstract operator override fun get(key: Key): Value?","elide.struct.api.SortedMap.get"]},{"name":"annotation class API","description":"elide.annotations.API","location":"packages/base/elide.annotations/-a-p-i/index.html","searchKeys":["API","annotation class API","elide.annotations.API"]},{"name":"annotation class Eager","description":"elide.annotations.Eager","location":"packages/base/elide.annotations/-eager/index.html","searchKeys":["Eager","annotation class Eager","elide.annotations.Eager"]},{"name":"annotation class Endpoint","description":"elide.annotations.Endpoint","location":"packages/base/elide.annotations/-endpoint/index.html","searchKeys":["Endpoint","annotation class Endpoint","elide.annotations.Endpoint"]},{"name":"annotation class Experimental","description":"elide.annotations.base.Experimental","location":"packages/base/elide.annotations.base/-experimental/index.html","searchKeys":["Experimental","annotation class Experimental","elide.annotations.base.Experimental"]},{"name":"annotation class Experimental","description":"elide.annotations.core.Experimental","location":"packages/base/elide.annotations.core/-experimental/index.html","searchKeys":["Experimental","annotation class Experimental","elide.annotations.core.Experimental"]},{"name":"annotation class Generated","description":"elide.annotations.Generated","location":"packages/base/elide.annotations/-generated/index.html","searchKeys":["Generated","annotation class Generated","elide.annotations.Generated"]},{"name":"annotation class Internal","description":"elide.annotations.base.Internal","location":"packages/base/elide.annotations.base/-internal/index.html","searchKeys":["Internal","annotation class Internal","elide.annotations.base.Internal"]},{"name":"annotation class Internal","description":"elide.annotations.core.Internal","location":"packages/base/elide.annotations.core/-internal/index.html","searchKeys":["Internal","annotation class Internal","elide.annotations.core.Internal"]},{"name":"annotation class Logic","description":"elide.annotations.Logic","location":"packages/base/elide.annotations/-logic/index.html","searchKeys":["Logic","annotation class Logic","elide.annotations.Logic"]},{"name":"annotation class Sensitive","description":"elide.annotations.data.Sensitive","location":"packages/base/elide.annotations.data/-sensitive/index.html","searchKeys":["Sensitive","annotation class Sensitive","elide.annotations.data.Sensitive"]},{"name":"class Decoder","description":"elide.util.Base64Kt.Decoder","location":"packages/base/elide.util/-base64-kt/-decoder/index.html","searchKeys":["Decoder","class Decoder","elide.util.Base64Kt.Decoder"]},{"name":"class Encoder","description":"elide.util.Base64Kt.Encoder","location":"packages/base/elide.util/-base64-kt/-encoder/index.html","searchKeys":["Encoder","class Encoder","elide.util.Base64Kt.Encoder"]},{"name":"class Logger(logger: Logger) : Logger","description":"elide.runtime.jvm.Logger","location":"packages/base/elide.runtime.jvm/-logger/index.html","searchKeys":["Logger","class Logger(logger: Logger) : Logger","elide.runtime.jvm.Logger"]},{"name":"class MutablePresortedList<Value : Comparable<Value>> : MutableSortedList<Value> ","description":"elide.struct.MutablePresortedList","location":"packages/base/elide.struct/-mutable-presorted-list/index.html","searchKeys":["MutablePresortedList","class MutablePresortedList<Value : Comparable<Value>> : MutableSortedList<Value> ","elide.struct.MutablePresortedList"]},{"name":"class MutableTreeMap<Key : Comparable<Key>, Value> : AbstractTreeMap<Key, Value> , MutableSortedMap<Key, Value> ","description":"elide.struct.MutableTreeMap","location":"packages/base/elide.struct/-mutable-tree-map/index.html","searchKeys":["MutableTreeMap","class MutableTreeMap<Key : Comparable<Key>, Value> : AbstractTreeMap<Key, Value> , MutableSortedMap<Key, Value> ","elide.struct.MutableTreeMap"]},{"name":"class MutableTreeSet<Value : Comparable<Value>> : MutableSortedSet<Value> ","description":"elide.struct.MutableTreeSet","location":"packages/base/elide.struct/-mutable-tree-set/index.html","searchKeys":["MutableTreeSet","class MutableTreeSet<Value : Comparable<Value>> : MutableSortedSet<Value> ","elide.struct.MutableTreeSet"]},{"name":"class PresortedList<Value : Comparable<Value>> : SortedList<Value> ","description":"elide.struct.PresortedList","location":"packages/base/elide.struct/-presorted-list/index.html","searchKeys":["PresortedList","class PresortedList<Value : Comparable<Value>> : SortedList<Value> ","elide.struct.PresortedList"]},{"name":"class PresortedListCodec<V : Comparable<V>>(dataSerializer: KSerializer<V>) : KSerializer<PresortedList<V>> ","description":"elide.struct.codec.PresortedListCodec","location":"packages/base/elide.struct.codec/-presorted-list-codec/index.html","searchKeys":["PresortedListCodec","class PresortedListCodec<V : Comparable<V>>(dataSerializer: KSerializer<V>) : KSerializer<PresortedList<V>> ","elide.struct.codec.PresortedListCodec"]},{"name":"class PresortedMapCodec<K : Comparable<K>, V>(keySerializer: KSerializer<K>, valueSerializer: KSerializer<V>) : KSerializer<TreeMap<K, V>> ","description":"elide.struct.codec.PresortedMapCodec","location":"packages/base/elide.struct.codec/-presorted-map-codec/index.html","searchKeys":["PresortedMapCodec","class PresortedMapCodec<K : Comparable<K>, V>(keySerializer: KSerializer<K>, valueSerializer: KSerializer<V>) : KSerializer<TreeMap<K, V>> ","elide.struct.codec.PresortedMapCodec"]},{"name":"class PresortedMutableMapCodec<K : Comparable<K>, V>(keySerializer: KSerializer<K>, valueSerializer: KSerializer<V>) : KSerializer<MutableTreeMap<K, V>> ","description":"elide.struct.codec.PresortedMutableMapCodec","location":"packages/base/elide.struct.codec/-presorted-mutable-map-codec/index.html","searchKeys":["PresortedMutableMapCodec","class PresortedMutableMapCodec<K : Comparable<K>, V>(keySerializer: KSerializer<K>, valueSerializer: KSerializer<V>) : KSerializer<MutableTreeMap<K, V>> ","elide.struct.codec.PresortedMutableMapCodec"]},{"name":"class TreeMap<Key : Comparable<Key>, Value> : AbstractTreeMap<Key, Value> , SortedMap<Key, Value> ","description":"elide.struct.TreeMap","location":"packages/base/elide.struct/-tree-map/index.html","searchKeys":["TreeMap","class TreeMap<Key : Comparable<Key>, Value> : AbstractTreeMap<Key, Value> , SortedMap<Key, Value> ","elide.struct.TreeMap"]},{"name":"class TreeSet<Value : Comparable<Value>> : SortedSet<Value> ","description":"elide.struct.TreeSet","location":"packages/base/elide.struct/-tree-set/index.html","searchKeys":["TreeSet","class TreeSet<Value : Comparable<Value>> : SortedSet<Value> ","elide.struct.TreeSet"]},{"name":"const val DEFAULT_INSPECT_PORT: Int = 4200","description":"elide.util.RuntimeFlag.DEFAULT_INSPECT_PORT","location":"packages/base/elide.util/-runtime-flag/-d-e-f-a-u-l-t_-i-n-s-p-e-c-t_-p-o-r-t.html","searchKeys":["DEFAULT_INSPECT_PORT","const val DEFAULT_INSPECT_PORT: Int = 4200","elide.util.RuntimeFlag.DEFAULT_INSPECT_PORT"]},{"name":"const val generatedPackage: String","description":"elide.runtime.Runtime.generatedPackage","location":"packages/base/elide.runtime/-runtime/generated-package.html","searchKeys":["generatedPackage","const val generatedPackage: String","elide.runtime.Runtime.generatedPackage"]},{"name":"constructor()","description":"elide.runtime.Logging.Logging","location":"packages/base/elide.runtime/-logging/-logging.html","searchKeys":["Logging","constructor()","elide.runtime.Logging.Logging"]},{"name":"constructor()","description":"elide.struct.MutablePresortedList.MutablePresortedList","location":"packages/base/elide.struct/-mutable-presorted-list/-mutable-presorted-list.html","searchKeys":["MutablePresortedList","constructor()","elide.struct.MutablePresortedList.MutablePresortedList"]},{"name":"constructor()","description":"elide.struct.MutableTreeMap.MutableTreeMap","location":"packages/base/elide.struct/-mutable-tree-map/-mutable-tree-map.html","searchKeys":["MutableTreeMap","constructor()","elide.struct.MutableTreeMap.MutableTreeMap"]},{"name":"constructor()","description":"elide.struct.MutableTreeSet.MutableTreeSet","location":"packages/base/elide.struct/-mutable-tree-set/-mutable-tree-set.html","searchKeys":["MutableTreeSet","constructor()","elide.struct.MutableTreeSet.MutableTreeSet"]},{"name":"constructor()","description":"elide.struct.PresortedList.PresortedList","location":"packages/base/elide.struct/-presorted-list/-presorted-list.html","searchKeys":["PresortedList","constructor()","elide.struct.PresortedList.PresortedList"]},{"name":"constructor()","description":"elide.struct.TreeMap.TreeMap","location":"packages/base/elide.struct/-tree-map/-tree-map.html","searchKeys":["TreeMap","constructor()","elide.struct.TreeMap.TreeMap"]},{"name":"constructor()","description":"elide.struct.TreeSet.TreeSet","location":"packages/base/elide.struct/-tree-set/-tree-set.html","searchKeys":["TreeSet","constructor()","elide.struct.TreeSet.TreeSet"]},{"name":"constructor()","description":"elide.util.Base64Kt.Decoder.Decoder","location":"packages/base/elide.util/-base64-kt/-decoder/-decoder.html","searchKeys":["Decoder","constructor()","elide.util.Base64Kt.Decoder.Decoder"]},{"name":"constructor(comparator: Comparator<Value>)","description":"elide.struct.MutableTreeSet.MutableTreeSet","location":"packages/base/elide.struct/-mutable-tree-set/-mutable-tree-set.html","searchKeys":["MutableTreeSet","constructor(comparator: Comparator<Value>)","elide.struct.MutableTreeSet.MutableTreeSet"]},{"name":"constructor(comparator: Comparator<Value>?)","description":"elide.struct.MutablePresortedList.MutablePresortedList","location":"packages/base/elide.struct/-mutable-presorted-list/-mutable-presorted-list.html","searchKeys":["MutablePresortedList","constructor(comparator: Comparator<Value>?)","elide.struct.MutablePresortedList.MutablePresortedList"]},{"name":"constructor(dataSerializer: KSerializer<V>)","description":"elide.struct.codec.PresortedListCodec.PresortedListCodec","location":"packages/base/elide.struct.codec/-presorted-list-codec/-presorted-list-codec.html","searchKeys":["PresortedListCodec","constructor(dataSerializer: KSerializer<V>)","elide.struct.codec.PresortedListCodec.PresortedListCodec"]},{"name":"constructor(keySerializer: KSerializer<K>, valueSerializer: KSerializer<V>)","description":"elide.struct.codec.PresortedMapCodec.PresortedMapCodec","location":"packages/base/elide.struct.codec/-presorted-map-codec/-presorted-map-codec.html","searchKeys":["PresortedMapCodec","constructor(keySerializer: KSerializer<K>, valueSerializer: KSerializer<V>)","elide.struct.codec.PresortedMapCodec.PresortedMapCodec"]},{"name":"constructor(keySerializer: KSerializer<K>, valueSerializer: KSerializer<V>)","description":"elide.struct.codec.PresortedMutableMapCodec.PresortedMutableMapCodec","location":"packages/base/elide.struct.codec/-presorted-mutable-map-codec/-presorted-mutable-map-codec.html","searchKeys":["PresortedMutableMapCodec","constructor(keySerializer: KSerializer<K>, valueSerializer: KSerializer<V>)","elide.struct.codec.PresortedMutableMapCodec.PresortedMutableMapCodec"]},{"name":"constructor(logger: Logger)","description":"elide.runtime.jvm.Logger.Logger","location":"packages/base/elide.runtime.jvm/-logger/-logger.html","searchKeys":["Logger","constructor(logger: Logger)","elide.runtime.jvm.Logger.Logger"]},{"name":"constructor(map: Map<Key, Value>)","description":"elide.struct.MutableTreeMap.MutableTreeMap","location":"packages/base/elide.struct/-mutable-tree-map/-mutable-tree-map.html","searchKeys":["MutableTreeMap","constructor(map: Map<Key, Value>)","elide.struct.MutableTreeMap.MutableTreeMap"]},{"name":"constructor(map: Map<Key, Value>)","description":"elide.struct.TreeMap.TreeMap","location":"packages/base/elide.struct/-tree-map/-tree-map.html","searchKeys":["TreeMap","constructor(map: Map<Key, Value>)","elide.struct.TreeMap.TreeMap"]},{"name":"constructor(map: SortedMap<Key, Value>)","description":"elide.struct.TreeMap.TreeMap","location":"packages/base/elide.struct/-tree-map/-tree-map.html","searchKeys":["TreeMap","constructor(map: SortedMap<Key, Value>)","elide.struct.TreeMap.TreeMap"]},{"name":"constructor(name: String? = null)","description":"elide.runtime.js.Logger.Logger","location":"packages/base/elide.runtime.js/-logger/-logger.html","searchKeys":["Logger","constructor(name: String? = null)","elide.runtime.js.Logger.Logger"]},{"name":"constructor(name: String? = null)","description":"elide.runtime.wasm.Logger.Logger","location":"packages/base/elide.runtime.wasm/-logger/-logger.html","searchKeys":["Logger","constructor(name: String? = null)","elide.runtime.wasm.Logger.Logger"]},{"name":"constructor(pairs: Iterable<Pair<Key, Value>>)","description":"elide.struct.MutableTreeMap.MutableTreeMap","location":"packages/base/elide.struct/-mutable-tree-map/-mutable-tree-map.html","searchKeys":["MutableTreeMap","constructor(pairs: Iterable<Pair<Key, Value>>)","elide.struct.MutableTreeMap.MutableTreeMap"]},{"name":"constructor(pairs: Iterable<Pair<Key, Value>>)","description":"elide.struct.TreeMap.TreeMap","location":"packages/base/elide.struct/-tree-map/-tree-map.html","searchKeys":["TreeMap","constructor(pairs: Iterable<Pair<Key, Value>>)","elide.struct.TreeMap.TreeMap"]},{"name":"constructor(values: Collection<Value>)","description":"elide.struct.MutablePresortedList.MutablePresortedList","location":"packages/base/elide.struct/-mutable-presorted-list/-mutable-presorted-list.html","searchKeys":["MutablePresortedList","constructor(values: Collection<Value>)","elide.struct.MutablePresortedList.MutablePresortedList"]},{"name":"constructor(values: Collection<Value>)","description":"elide.struct.PresortedList.PresortedList","location":"packages/base/elide.struct/-presorted-list/-presorted-list.html","searchKeys":["PresortedList","constructor(values: Collection<Value>)","elide.struct.PresortedList.PresortedList"]},{"name":"constructor(values: Collection<Value>, comparator: Comparator<Value>?)","description":"elide.struct.MutablePresortedList.MutablePresortedList","location":"packages/base/elide.struct/-mutable-presorted-list/-mutable-presorted-list.html","searchKeys":["MutablePresortedList","constructor(values: Collection<Value>, comparator: Comparator<Value>?)","elide.struct.MutablePresortedList.MutablePresortedList"]},{"name":"constructor(values: Collection<Value>, comparator: Comparator<Value>?)","description":"elide.struct.PresortedList.PresortedList","location":"packages/base/elide.struct/-presorted-list/-presorted-list.html","searchKeys":["PresortedList","constructor(values: Collection<Value>, comparator: Comparator<Value>?)","elide.struct.PresortedList.PresortedList"]},{"name":"constructor(values: SortedList<Value>)","description":"elide.struct.PresortedList.PresortedList","location":"packages/base/elide.struct/-presorted-list/-presorted-list.html","searchKeys":["PresortedList","constructor(values: SortedList<Value>)","elide.struct.PresortedList.PresortedList"]},{"name":"data class Logger(val name: String? = null) : Logger","description":"elide.runtime.js.Logger","location":"packages/base/elide.runtime.js/-logger/index.html","searchKeys":["Logger","data class Logger(val name: String? = null) : Logger","elide.runtime.js.Logger"]},{"name":"data class Logger(val name: String? = null) : Logger","description":"elide.runtime.wasm.Logger","location":"packages/base/elide.runtime.wasm/-logger/index.html","searchKeys":["Logger","data class Logger(val name: String? = null) : Logger","elide.runtime.wasm.Logger"]},{"name":"enum AppEnvironment : Enum<AppEnvironment> ","description":"elide.AppEnvironment","location":"packages/base/elide/-app-environment/index.html","searchKeys":["AppEnvironment","enum AppEnvironment : Enum<AppEnvironment> ","elide.AppEnvironment"]},{"name":"enum Encoding : Enum<Encoding> ","description":"elide.util.Encoding","location":"packages/base/elide.util/-encoding/index.html","searchKeys":["Encoding","enum Encoding : Enum<Encoding> ","elide.util.Encoding"]},{"name":"enum LogLevel : Enum<LogLevel> ","description":"elide.runtime.LogLevel","location":"packages/base/elide.runtime/-log-level/index.html","searchKeys":["LogLevel","enum LogLevel : Enum<LogLevel> ","elide.runtime.LogLevel"]},{"name":"expect abstract fun isEnabled(level: LogLevel): Boolean","description":"elide.runtime.Logger.isEnabled","location":"packages/base/elide.runtime/-logger/is-enabled.html","searchKeys":["isEnabled","expect abstract fun isEnabled(level: LogLevel): Boolean","elide.runtime.Logger.isEnabled"]},{"name":"expect abstract fun log(level: LogLevel, message: List<Any>, levelChecked: Boolean = false)","description":"elide.runtime.Logger.log","location":"packages/base/elide.runtime/-logger/log.html","searchKeys":["log","expect abstract fun log(level: LogLevel, message: List<Any>, levelChecked: Boolean = false)","elide.runtime.Logger.log"]},{"name":"expect annotation class Component","description":"elide.annotations.Component","location":"packages/base/elide.annotations/-component/index.html","searchKeys":["Component","expect annotation class Component","elide.annotations.Component"]},{"name":"expect annotation class Context","description":"elide.annotations.Context","location":"packages/base/elide.annotations/-context/index.html","searchKeys":["Context","expect annotation class Context","elide.annotations.Context"]},{"name":"expect annotation class Factory","description":"elide.annotations.Factory","location":"packages/base/elide.annotations/-factory/index.html","searchKeys":["Factory","expect annotation class Factory","elide.annotations.Factory"]},{"name":"expect annotation class Inject","description":"elide.annotations.Inject","location":"packages/base/elide.annotations/-inject/index.html","searchKeys":["Inject","expect annotation class Inject","elide.annotations.Inject"]},{"name":"expect annotation class Named","description":"elide.annotations.Named","location":"packages/base/elide.annotations/-named/index.html","searchKeys":["Named","expect annotation class Named","elide.annotations.Named"]},{"name":"expect annotation class Qualifier","description":"elide.annotations.Qualifier","location":"packages/base/elide.annotations/-qualifier/index.html","searchKeys":["Qualifier","expect annotation class Qualifier","elide.annotations.Qualifier"]},{"name":"expect annotation class Singleton","description":"elide.annotations.Singleton","location":"packages/base/elide.annotations/-singleton/index.html","searchKeys":["Singleton","expect annotation class Singleton","elide.annotations.Singleton"]},{"name":"expect class Logging","description":"elide.runtime.Logging","location":"packages/base/elide.runtime/-logging/index.html","searchKeys":["Logging","expect class Logging","elide.runtime.Logging"]},{"name":"expect fun encodeWebSafe(data: ByteArray): ByteArray","description":"elide.util.Base64.encodeWebSafe","location":"packages/base/elide.util/-base64/encode-web-safe.html","searchKeys":["encodeWebSafe","expect fun encodeWebSafe(data: ByteArray): ByteArray","elide.util.Base64.encodeWebSafe"]},{"name":"expect fun encodeWebSafe(string: String): String","description":"elide.util.Base64.encodeWebSafe","location":"packages/base/elide.util/-base64/encode-web-safe.html","searchKeys":["encodeWebSafe","expect fun encodeWebSafe(string: String): String","elide.util.Base64.encodeWebSafe"]},{"name":"expect fun logger(): Logger","description":"elide.runtime.Logging.logger","location":"packages/base/elide.runtime/-logging/logger.html","searchKeys":["logger","expect fun logger(): Logger","elide.runtime.Logging.logger"]},{"name":"expect fun logger(name: String): Logger","description":"elide.runtime.Logging.logger","location":"packages/base/elide.runtime/-logging/logger.html","searchKeys":["logger","expect fun logger(name: String): Logger","elide.runtime.Logging.logger"]},{"name":"expect fun random(): String","description":"elide.util.UUID.random","location":"packages/base/elide.util/-u-u-i-d/random.html","searchKeys":["random","expect fun random(): String","elide.util.UUID.random"]},{"name":"expect interface Logger","description":"elide.runtime.Logger","location":"packages/base/elide.runtime/-logger/index.html","searchKeys":["Logger","expect interface Logger","elide.runtime.Logger"]},{"name":"expect object Base64 : Encoder","description":"elide.util.Base64","location":"packages/base/elide.util/-base64/index.html","searchKeys":["Base64","expect object Base64 : Encoder","elide.util.Base64"]},{"name":"expect object UUID","description":"elide.util.UUID","location":"packages/base/elide.util/-u-u-i-d/index.html","searchKeys":["UUID","expect object UUID","elide.util.UUID"]},{"name":"expect open fun debug(producer: () -> String)","description":"elide.runtime.Logger.debug","location":"packages/base/elide.runtime/-logger/debug.html","searchKeys":["debug","expect open fun debug(producer: () -> String)","elide.runtime.Logger.debug"]},{"name":"expect open fun debug(vararg message: Any)","description":"elide.runtime.Logger.debug","location":"packages/base/elide.runtime/-logger/debug.html","searchKeys":["debug","expect open fun debug(vararg message: Any)","elide.runtime.Logger.debug"]},{"name":"expect open fun error(producer: () -> String)","description":"elide.runtime.Logger.error","location":"packages/base/elide.runtime/-logger/error.html","searchKeys":["error","expect open fun error(producer: () -> String)","elide.runtime.Logger.error"]},{"name":"expect open fun error(vararg message: Any)","description":"elide.runtime.Logger.error","location":"packages/base/elide.runtime/-logger/error.html","searchKeys":["error","expect open fun error(vararg message: Any)","elide.runtime.Logger.error"]},{"name":"expect open fun info(producer: () -> String)","description":"elide.runtime.Logger.info","location":"packages/base/elide.runtime/-logger/info.html","searchKeys":["info","expect open fun info(producer: () -> String)","elide.runtime.Logger.info"]},{"name":"expect open fun info(vararg message: Any)","description":"elide.runtime.Logger.info","location":"packages/base/elide.runtime/-logger/info.html","searchKeys":["info","expect open fun info(vararg message: Any)","elide.runtime.Logger.info"]},{"name":"expect open fun trace(producer: () -> String)","description":"elide.runtime.Logger.trace","location":"packages/base/elide.runtime/-logger/trace.html","searchKeys":["trace","expect open fun trace(producer: () -> String)","elide.runtime.Logger.trace"]},{"name":"expect open fun trace(vararg message: Any)","description":"elide.runtime.Logger.trace","location":"packages/base/elide.runtime/-logger/trace.html","searchKeys":["trace","expect open fun trace(vararg message: Any)","elide.runtime.Logger.trace"]},{"name":"expect open fun warn(producer: () -> String)","description":"elide.runtime.Logger.warn","location":"packages/base/elide.runtime/-logger/warn.html","searchKeys":["warn","expect open fun warn(producer: () -> String)","elide.runtime.Logger.warn"]},{"name":"expect open fun warn(vararg message: Any)","description":"elide.runtime.Logger.warn","location":"packages/base/elide.runtime/-logger/warn.html","searchKeys":["warn","expect open fun warn(vararg message: Any)","elide.runtime.Logger.warn"]},{"name":"expect open fun warning(producer: () -> String)","description":"elide.runtime.Logger.warning","location":"packages/base/elide.runtime/-logger/warning.html","searchKeys":["warning","expect open fun warning(producer: () -> String)","elide.runtime.Logger.warning"]},{"name":"expect open fun warning(vararg message: Any)","description":"elide.runtime.Logger.warning","location":"packages/base/elide.runtime/-logger/warning.html","searchKeys":["warning","expect open fun warning(vararg message: Any)","elide.runtime.Logger.warning"]},{"name":"expect open override fun decode(data: ByteArray): ByteArray","description":"elide.util.Base64.decode","location":"packages/base/elide.util/-base64/decode.html","searchKeys":["decode","expect open override fun decode(data: ByteArray): ByteArray","elide.util.Base64.decode"]},{"name":"expect open override fun decode(string: String): ByteArray","description":"elide.util.Base64.decode","location":"packages/base/elide.util/-base64/decode.html","searchKeys":["decode","expect open override fun decode(string: String): ByteArray","elide.util.Base64.decode"]},{"name":"expect open override fun decodeToString(data: ByteArray): String","description":"elide.util.Base64.decodeToString","location":"packages/base/elide.util/-base64/decode-to-string.html","searchKeys":["decodeToString","expect open override fun decodeToString(data: ByteArray): String","elide.util.Base64.decodeToString"]},{"name":"expect open override fun decodeToString(string: String): String","description":"elide.util.Base64.decodeToString","location":"packages/base/elide.util/-base64/decode-to-string.html","searchKeys":["decodeToString","expect open override fun decodeToString(string: String): String","elide.util.Base64.decodeToString"]},{"name":"expect open override fun encode(data: ByteArray): ByteArray","description":"elide.util.Base64.encode","location":"packages/base/elide.util/-base64/encode.html","searchKeys":["encode","expect open override fun encode(data: ByteArray): ByteArray","elide.util.Base64.encode"]},{"name":"expect open override fun encode(string: String): ByteArray","description":"elide.util.Base64.encode","location":"packages/base/elide.util/-base64/encode.html","searchKeys":["encode","expect open override fun encode(string: String): ByteArray","elide.util.Base64.encode"]},{"name":"expect open override fun encodeToString(data: ByteArray): String","description":"elide.util.Base64.encodeToString","location":"packages/base/elide.util/-base64/encode-to-string.html","searchKeys":["encodeToString","expect open override fun encodeToString(data: ByteArray): String","elide.util.Base64.encodeToString"]},{"name":"expect open override fun encodeToString(string: String): String","description":"elide.util.Base64.encodeToString","location":"packages/base/elide.util/-base64/encode-to-string.html","searchKeys":["encodeToString","expect open override fun encodeToString(string: String): String","elide.util.Base64.encodeToString"]},{"name":"expect open override fun encoding(): Encoding","description":"elide.util.Base64.encoding","location":"packages/base/elide.util/-base64/encoding.html","searchKeys":["encoding","expect open override fun encoding(): Encoding","elide.util.Base64.encoding"]},{"name":"fun <K : Comparable<K>, V> mutableSortedMapOf(vararg pairs: Pair<K, V>): MutableSortedMap<K, V>","description":"elide.struct.mutableSortedMapOf","location":"packages/base/elide.struct/mutable-sorted-map-of.html","searchKeys":["mutableSortedMapOf","fun <K : Comparable<K>, V> mutableSortedMapOf(vararg pairs: Pair<K, V>): MutableSortedMap<K, V>","elide.struct.mutableSortedMapOf"]},{"name":"fun <K : Comparable<K>, V> sortedMapOf(): SortedMap<K, V>","description":"elide.struct.sortedMapOf","location":"packages/base/elide.struct/sorted-map-of.html","searchKeys":["sortedMapOf","fun <K : Comparable<K>, V> sortedMapOf(): SortedMap<K, V>","elide.struct.sortedMapOf"]},{"name":"fun <K : Comparable<K>, V> sortedMapOf(pairs: Collection<Pair<K, V>>): SortedMap<K, V>","description":"elide.struct.sortedMapOf","location":"packages/base/elide.struct/sorted-map-of.html","searchKeys":["sortedMapOf","fun <K : Comparable<K>, V> sortedMapOf(pairs: Collection<Pair<K, V>>): SortedMap<K, V>","elide.struct.sortedMapOf"]},{"name":"fun <K : Comparable<K>, V> sortedMapOf(vararg pairs: Pair<K, V>): SortedMap<K, V>","description":"elide.struct.sortedMapOf","location":"packages/base/elide.struct/sorted-map-of.html","searchKeys":["sortedMapOf","fun <K : Comparable<K>, V> sortedMapOf(vararg pairs: Pair<K, V>): SortedMap<K, V>","elide.struct.sortedMapOf"]},{"name":"fun <Key : Comparable<Key>, Value> copyOf(map: Map<Key, Value>): MutableTreeMap<Key, Value>","description":"elide.struct.MutableTreeMap.Companion.copyOf","location":"packages/base/elide.struct/-mutable-tree-map/-companion/copy-of.html","searchKeys":["copyOf","fun <Key : Comparable<Key>, Value> copyOf(map: Map<Key, Value>): MutableTreeMap<Key, Value>","elide.struct.MutableTreeMap.Companion.copyOf"]},{"name":"fun <Key : Comparable<Key>, Value> copyOf(map: Map<Key, Value>): TreeMap<Key, Value>","description":"elide.struct.TreeMap.Companion.copyOf","location":"packages/base/elide.struct/-tree-map/-companion/copy-of.html","searchKeys":["copyOf","fun <Key : Comparable<Key>, Value> copyOf(map: Map<Key, Value>): TreeMap<Key, Value>","elide.struct.TreeMap.Companion.copyOf"]},{"name":"fun <Key : Comparable<Key>, Value> create(): MutableTreeMap<Key, Value>","description":"elide.struct.MutableTreeMap.Companion.create","location":"packages/base/elide.struct/-mutable-tree-map/-companion/create.html","searchKeys":["create","fun <Key : Comparable<Key>, Value> create(): MutableTreeMap<Key, Value>","elide.struct.MutableTreeMap.Companion.create"]},{"name":"fun <Key : Comparable<Key>, Value> empty(): TreeMap<Key, Value>","description":"elide.struct.TreeMap.Companion.empty","location":"packages/base/elide.struct/-tree-map/-companion/empty.html","searchKeys":["empty","fun <Key : Comparable<Key>, Value> empty(): TreeMap<Key, Value>","elide.struct.TreeMap.Companion.empty"]},{"name":"fun <Key : Comparable<Key>, Value> of(pairs: Iterable<Pair<Key, Value>>): MutableTreeMap<Key, Value>","description":"elide.struct.MutableTreeMap.Companion.of","location":"packages/base/elide.struct/-mutable-tree-map/-companion/of.html","searchKeys":["of","fun <Key : Comparable<Key>, Value> of(pairs: Iterable<Pair<Key, Value>>): MutableTreeMap<Key, Value>","elide.struct.MutableTreeMap.Companion.of"]},{"name":"fun <Key : Comparable<Key>, Value> of(pairs: Iterable<Pair<Key, Value>>): TreeMap<Key, Value>","description":"elide.struct.TreeMap.Companion.of","location":"packages/base/elide.struct/-tree-map/-companion/of.html","searchKeys":["of","fun <Key : Comparable<Key>, Value> of(pairs: Iterable<Pair<Key, Value>>): TreeMap<Key, Value>","elide.struct.TreeMap.Companion.of"]},{"name":"fun <Key : Comparable<Key>, Value> of(vararg pairs: Pair<Key, Value>): MutableTreeMap<Key, Value>","description":"elide.struct.MutableTreeMap.Companion.of","location":"packages/base/elide.struct/-mutable-tree-map/-companion/of.html","searchKeys":["of","fun <Key : Comparable<Key>, Value> of(vararg pairs: Pair<Key, Value>): MutableTreeMap<Key, Value>","elide.struct.MutableTreeMap.Companion.of"]},{"name":"fun <Key : Comparable<Key>, Value> of(vararg pairs: Pair<Key, Value>): TreeMap<Key, Value>","description":"elide.struct.TreeMap.Companion.of","location":"packages/base/elide.struct/-tree-map/-companion/of.html","searchKeys":["of","fun <Key : Comparable<Key>, Value> of(vararg pairs: Pair<Key, Value>): TreeMap<Key, Value>","elide.struct.TreeMap.Companion.of"]},{"name":"fun <R> resolve(name: String, defaultValue: String, then: (String) -> R): R","description":"elide.util.RuntimeFlag.resolve","location":"packages/base/elide.util/-runtime-flag/resolve.html","searchKeys":["resolve","fun <R> resolve(name: String, defaultValue: String, then: (String) -> R): R","elide.util.RuntimeFlag.resolve"]},{"name":"fun <V : Comparable<V>> mutableSortedSetOf(vararg values: V): MutableSortedSet<V>","description":"elide.struct.mutableSortedSetOf","location":"packages/base/elide.struct/mutable-sorted-set-of.html","searchKeys":["mutableSortedSetOf","fun <V : Comparable<V>> mutableSortedSetOf(vararg values: V): MutableSortedSet<V>","elide.struct.mutableSortedSetOf"]},{"name":"fun <V : Comparable<V>> sortedSetOf(): SortedSet<V>","description":"elide.struct.sortedSetOf","location":"packages/base/elide.struct/sorted-set-of.html","searchKeys":["sortedSetOf","fun <V : Comparable<V>> sortedSetOf(): SortedSet<V>","elide.struct.sortedSetOf"]},{"name":"fun <V : Comparable<V>> sortedSetOf(vararg values: V): SortedSet<V>","description":"elide.struct.sortedSetOf","location":"packages/base/elide.struct/sorted-set-of.html","searchKeys":["sortedSetOf","fun <V : Comparable<V>> sortedSetOf(vararg values: V): SortedSet<V>","elide.struct.sortedSetOf"]},{"name":"fun <Value : Comparable<Value>> of(pairs: Collection<Value>): TreeSet<Value>","description":"elide.struct.TreeSet.Companion.of","location":"packages/base/elide.struct/-tree-set/-companion/of.html","searchKeys":["of","fun <Value : Comparable<Value>> of(pairs: Collection<Value>): TreeSet<Value>","elide.struct.TreeSet.Companion.of"]},{"name":"fun <Value : Comparable<Value>> of(vararg values: Value): TreeSet<Value>","description":"elide.struct.TreeSet.Companion.of","location":"packages/base/elide.struct/-tree-set/-companion/of.html","searchKeys":["of","fun <Value : Comparable<Value>> of(vararg values: Value): TreeSet<Value>","elide.struct.TreeSet.Companion.of"]},{"name":"fun ArrayBuffer.toByteArray(): ByteArray","description":"elide.runtime.js.toByteArray","location":"packages/base/elide.runtime.js/to-byte-array.html","searchKeys":["toByteArray","fun ArrayBuffer.toByteArray(): ByteArray","elide.runtime.js.toByteArray"]},{"name":"fun ArrayBuffer?.toByteArray(): ByteArray?","description":"elide.runtime.js.toByteArray","location":"packages/base/elide.runtime.js/to-byte-array.html","searchKeys":["toByteArray","fun ArrayBuffer?.toByteArray(): ByteArray?","elide.runtime.js.toByteArray"]},{"name":"fun ByteArray.toBase64(): ByteArray","description":"elide.util.toBase64","location":"packages/base/elide.util/to-base64.html","searchKeys":["toBase64","fun ByteArray.toBase64(): ByteArray","elide.util.toBase64"]},{"name":"fun ByteArray.toBase64String(): String","description":"elide.util.toBase64String","location":"packages/base/elide.util/to-base64-string.html","searchKeys":["toBase64String","fun ByteArray.toBase64String(): String","elide.util.toBase64String"]},{"name":"fun Int.asOrdinal(): Ordinal","description":"elide.struct.api.Ordinal.Companion.asOrdinal","location":"packages/base/elide.struct.api/-ordinal/-companion/as-ordinal.html","searchKeys":["asOrdinal","fun Int.asOrdinal(): Ordinal","elide.struct.api.Ordinal.Companion.asOrdinal"]},{"name":"fun LogLevel.isEnabled(logger: Logger): Boolean","description":"elide.runtime.jvm.isEnabled","location":"packages/base/elide.runtime.jvm/is-enabled.html","searchKeys":["isEnabled","fun LogLevel.isEnabled(logger: Logger): Boolean","elide.runtime.jvm.isEnabled"]},{"name":"fun LogLevel.resolve(logger: Logger): (String) -> Unit","description":"elide.runtime.jvm.resolve","location":"packages/base/elide.runtime.jvm/resolve.html","searchKeys":["resolve","fun LogLevel.resolve(logger: Logger): (String) -> Unit","elide.runtime.jvm.resolve"]},{"name":"fun String.toBase64(): ByteArray","description":"elide.util.toBase64","location":"packages/base/elide.util/to-base64.html","searchKeys":["toBase64","fun String.toBase64(): ByteArray","elide.util.toBase64"]},{"name":"fun String.toBase64String(): String","description":"elide.util.toBase64String","location":"packages/base/elide.util/to-base64-string.html","searchKeys":["toBase64String","fun String.toBase64String(): String","elide.util.toBase64String"]},{"name":"fun String.toHex(): ByteArray","description":"elide.util.toHex","location":"packages/base/elide.util/to-hex.html","searchKeys":["toHex","fun String.toHex(): ByteArray","elide.util.toHex"]},{"name":"fun String.toHexString(): String","description":"elide.util.toHexString","location":"packages/base/elide.util/to-hex-string.html","searchKeys":["toHexString","fun String.toHexString(): String","elide.util.toHexString"]},{"name":"fun UInt.asOrdinal(): Ordinal","description":"elide.struct.api.Ordinal.Companion.asOrdinal","location":"packages/base/elide.struct.api/-ordinal/-companion/as-ordinal.html","searchKeys":["asOrdinal","fun UInt.asOrdinal(): Ordinal","elide.struct.api.Ordinal.Companion.asOrdinal"]},{"name":"fun acquire(): Logger","description":"elide.runtime.Logging.Companion.acquire","location":"packages/base/elide.runtime/-logging/[js]-companion/acquire.html","searchKeys":["acquire","fun acquire(): Logger","elide.runtime.Logging.Companion.acquire"]},{"name":"fun acquire(): Logger","description":"elide.runtime.Logging.Companion.acquire","location":"packages/base/elide.runtime/-logging/[wasm]-companion/acquire.html","searchKeys":["acquire","fun acquire(): Logger","elide.runtime.Logging.Companion.acquire"]},{"name":"fun decode(src: ByteArray): ByteArray","description":"elide.util.Base64Kt.Decoder.decode","location":"packages/base/elide.util/-base64-kt/-decoder/decode.html","searchKeys":["decode","fun decode(src: ByteArray): ByteArray","elide.util.Base64Kt.Decoder.decode"]},{"name":"fun encode(src: ByteArray): ByteArray","description":"elide.util.Base64Kt.Encoder.encode","location":"packages/base/elide.util/-base64-kt/-encoder/encode.html","searchKeys":["encode","fun encode(src: ByteArray): ByteArray","elide.util.Base64Kt.Encoder.encode"]},{"name":"fun named(name: String): Logger","description":"elide.runtime.Logging.Companion.named","location":"packages/base/elide.runtime/-logging/[js]-companion/named.html","searchKeys":["named","fun named(name: String): Logger","elide.runtime.Logging.Companion.named"]},{"name":"fun named(name: String): Logger","description":"elide.runtime.Logging.Companion.named","location":"packages/base/elide.runtime/-logging/[jvm]-companion/named.html","searchKeys":["named","fun named(name: String): Logger","elide.runtime.Logging.Companion.named"]},{"name":"fun named(name: String): Logger","description":"elide.runtime.Logging.Companion.named","location":"packages/base/elide.runtime/-logging/[wasm]-companion/named.html","searchKeys":["named","fun named(name: String): Logger","elide.runtime.Logging.Companion.named"]},{"name":"fun of(index: Int): Ordinal","description":"elide.struct.api.Ordinal.Companion.of","location":"packages/base/elide.struct.api/-ordinal/-companion/of.html","searchKeys":["of","fun of(index: Int): Ordinal","elide.struct.api.Ordinal.Companion.of"]},{"name":"fun of(index: UInt): Ordinal","description":"elide.struct.api.Ordinal.Companion.of","location":"packages/base/elide.struct.api/-ordinal/-companion/of.html","searchKeys":["of","fun of(index: UInt): Ordinal","elide.struct.api.Ordinal.Companion.of"]},{"name":"fun of(target: Class<*>): Logger","description":"elide.runtime.Logging.Companion.of","location":"packages/base/elide.runtime/-logging/[jvm]-companion/of.html","searchKeys":["of","fun of(target: Class<*>): Logger","elide.runtime.Logging.Companion.of"]},{"name":"fun of(target: KClass<*>): Logger","description":"elide.runtime.Logging.Companion.of","location":"packages/base/elide.runtime/-logging/[js]-companion/of.html","searchKeys":["of","fun of(target: KClass<*>): Logger","elide.runtime.Logging.Companion.of"]},{"name":"fun of(target: KClass<*>): Logger","description":"elide.runtime.Logging.Companion.of","location":"packages/base/elide.runtime/-logging/[jvm]-companion/of.html","searchKeys":["of","fun of(target: KClass<*>): Logger","elide.runtime.Logging.Companion.of"]},{"name":"fun of(target: KClass<*>): Logger","description":"elide.runtime.Logging.Companion.of","location":"packages/base/elide.runtime/-logging/[wasm]-companion/of.html","searchKeys":["of","fun of(target: KClass<*>): Logger","elide.runtime.Logging.Companion.of"]},{"name":"fun root(): Logger","description":"elide.runtime.Logging.Companion.root","location":"packages/base/elide.runtime/-logging/[js]-companion/root.html","searchKeys":["root","fun root(): Logger","elide.runtime.Logging.Companion.root"]},{"name":"fun root(): Logger","description":"elide.runtime.Logging.Companion.root","location":"packages/base/elide.runtime/-logging/[jvm]-companion/root.html","searchKeys":["root","fun root(): Logger","elide.runtime.Logging.Companion.root"]},{"name":"fun root(): Logger","description":"elide.runtime.Logging.Companion.root","location":"packages/base/elide.runtime/-logging/[wasm]-companion/root.html","searchKeys":["root","fun root(): Logger","elide.runtime.Logging.Companion.root"]},{"name":"fun setArgs(args: Array<String>)","description":"elide.util.RuntimeFlag.setArgs","location":"packages/base/elide.util/-runtime-flag/set-args.html","searchKeys":["setArgs","fun setArgs(args: Array<String>)","elide.util.RuntimeFlag.setArgs"]},{"name":"fun toMutableList(): MutablePresortedList<Value>","description":"elide.struct.PresortedList.toMutableList","location":"packages/base/elide.struct/-presorted-list/to-mutable-list.html","searchKeys":["toMutableList","fun toMutableList(): MutablePresortedList<Value>","elide.struct.PresortedList.toMutableList"]},{"name":"fun valueOf(value: String): AppEnvironment","description":"elide.AppEnvironment.valueOf","location":"packages/base/elide/-app-environment/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): AppEnvironment","elide.AppEnvironment.valueOf"]},{"name":"fun valueOf(value: String): Encoding","description":"elide.util.Encoding.valueOf","location":"packages/base/elide.util/-encoding/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): Encoding","elide.util.Encoding.valueOf"]},{"name":"fun valueOf(value: String): LogLevel","description":"elide.runtime.LogLevel.valueOf","location":"packages/base/elide.runtime/-log-level/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): LogLevel","elide.runtime.LogLevel.valueOf"]},{"name":"fun values(): Array<AppEnvironment>","description":"elide.AppEnvironment.values","location":"packages/base/elide/-app-environment/values.html","searchKeys":["values","fun values(): Array<AppEnvironment>","elide.AppEnvironment.values"]},{"name":"fun values(): Array<Encoding>","description":"elide.util.Encoding.values","location":"packages/base/elide.util/-encoding/values.html","searchKeys":["values","fun values(): Array<Encoding>","elide.util.Encoding.values"]},{"name":"fun values(): Array<LogLevel>","description":"elide.runtime.LogLevel.values","location":"packages/base/elide.runtime/-log-level/values.html","searchKeys":["values","fun values(): Array<LogLevel>","elide.runtime.LogLevel.values"]},{"name":"interface Encoder","description":"elide.util.Encoder","location":"packages/base/elide.util/-encoder/index.html","searchKeys":["Encoder","interface Encoder","elide.util.Encoder"]},{"name":"interface MutableSortedList<Value : Comparable<Value>> : MutableList<Value> ","description":"elide.struct.api.MutableSortedList","location":"packages/base/elide.struct.api/-mutable-sorted-list/index.html","searchKeys":["MutableSortedList","interface MutableSortedList<Value : Comparable<Value>> : MutableList<Value> ","elide.struct.api.MutableSortedList"]},{"name":"interface MutableSortedMap<Key : Comparable<Key>, Value> : MutableMap<Key, Value> ","description":"elide.struct.api.MutableSortedMap","location":"packages/base/elide.struct.api/-mutable-sorted-map/index.html","searchKeys":["MutableSortedMap","interface MutableSortedMap<Key : Comparable<Key>, Value> : MutableMap<Key, Value> ","elide.struct.api.MutableSortedMap"]},{"name":"interface MutableSortedSet<Value : Comparable<Value>> : MutableSet<Value> ","description":"elide.struct.api.MutableSortedSet","location":"packages/base/elide.struct.api/-mutable-sorted-set/index.html","searchKeys":["MutableSortedSet","interface MutableSortedSet<Value : Comparable<Value>> : MutableSet<Value> ","elide.struct.api.MutableSortedSet"]},{"name":"interface SortedList<Value : Comparable<Value>> : List<Value> ","description":"elide.struct.api.SortedList","location":"packages/base/elide.struct.api/-sorted-list/index.html","searchKeys":["SortedList","interface SortedList<Value : Comparable<Value>> : List<Value> ","elide.struct.api.SortedList"]},{"name":"interface SortedMap<Key : Comparable<Key>, out Value> : Map<Key, Value> ","description":"elide.struct.api.SortedMap","location":"packages/base/elide.struct.api/-sorted-map/index.html","searchKeys":["SortedMap","interface SortedMap<Key : Comparable<Key>, out Value> : Map<Key, Value> ","elide.struct.api.SortedMap"]},{"name":"interface SortedSet<Value : Comparable<Value>> : Set<Value> ","description":"elide.struct.api.SortedSet","location":"packages/base/elide.struct.api/-sorted-set/index.html","searchKeys":["SortedSet","interface SortedSet<Value : Comparable<Value>> : Set<Value> ","elide.struct.api.SortedSet"]},{"name":"object Base64Kt","description":"elide.util.Base64Kt","location":"packages/base/elide.util/-base64-kt/index.html","searchKeys":["Base64Kt","object Base64Kt","elide.util.Base64Kt"]},{"name":"object Companion","description":"elide.runtime.Logging.Companion","location":"packages/base/elide.runtime/-logging/[js]-companion/index.html","searchKeys":["Companion","object Companion","elide.runtime.Logging.Companion"]},{"name":"object Companion","description":"elide.runtime.Logging.Companion","location":"packages/base/elide.runtime/-logging/[jvm]-companion/index.html","searchKeys":["Companion","object Companion","elide.runtime.Logging.Companion"]},{"name":"object Companion","description":"elide.runtime.Logging.Companion","location":"packages/base/elide.runtime/-logging/[wasm]-companion/index.html","searchKeys":["Companion","object Companion","elide.runtime.Logging.Companion"]},{"name":"object Companion","description":"elide.struct.AbstractTreeMap.Entry.Companion","location":"packages/base/elide.struct/-abstract-tree-map/-entry/-companion/index.html","searchKeys":["Companion","object Companion","elide.struct.AbstractTreeMap.Entry.Companion"]},{"name":"object Companion","description":"elide.struct.MutableTreeMap.Companion","location":"packages/base/elide.struct/-mutable-tree-map/-companion/index.html","searchKeys":["Companion","object Companion","elide.struct.MutableTreeMap.Companion"]},{"name":"object Companion","description":"elide.struct.TreeMap.Companion","location":"packages/base/elide.struct/-tree-map/-companion/index.html","searchKeys":["Companion","object Companion","elide.struct.TreeMap.Companion"]},{"name":"object Companion","description":"elide.struct.TreeSet.Companion","location":"packages/base/elide.struct/-tree-set/-companion/index.html","searchKeys":["Companion","object Companion","elide.struct.TreeSet.Companion"]},{"name":"object Companion","description":"elide.struct.api.Ordinal.Companion","location":"packages/base/elide.struct.api/-ordinal/-companion/index.html","searchKeys":["Companion","object Companion","elide.struct.api.Ordinal.Companion"]},{"name":"object Companion","description":"elide.util.Base64Kt.Decoder.Companion","location":"packages/base/elide.util/-base64-kt/-decoder/-companion/index.html","searchKeys":["Companion","object Companion","elide.util.Base64Kt.Decoder.Companion"]},{"name":"object Companion","description":"elide.util.Base64Kt.Encoder.Companion","location":"packages/base/elide.util/-base64-kt/-encoder/-companion/index.html","searchKeys":["Companion","object Companion","elide.util.Base64Kt.Encoder.Companion"]},{"name":"object Hex : Encoder","description":"elide.util.Hex","location":"packages/base/elide.util/-hex/index.html","searchKeys":["Hex","object Hex : Encoder","elide.util.Hex"]},{"name":"object Runtime","description":"elide.runtime.Runtime","location":"packages/base/elide.runtime/-runtime/index.html","searchKeys":["Runtime","object Runtime","elide.runtime.Runtime"]},{"name":"object RuntimeFlag","description":"elide.util.RuntimeFlag","location":"packages/base/elide.util/-runtime-flag/index.html","searchKeys":["RuntimeFlag","object RuntimeFlag","elide.util.RuntimeFlag"]},{"name":"open operator override fun compareTo(other: Key): Int","description":"elide.struct.AbstractTreeMap.Entry.compareTo","location":"packages/base/elide.struct/-abstract-tree-map/-entry/compare-to.html","searchKeys":["compareTo","open operator override fun compareTo(other: Key): Int","elide.struct.AbstractTreeMap.Entry.compareTo"]},{"name":"open operator override fun compareTo(other: Key): Int","description":"elide.struct.AbstractTreeMap.MutableEntry.compareTo","location":"packages/base/elide.struct/-abstract-tree-map/-mutable-entry/compare-to.html","searchKeys":["compareTo","open operator override fun compareTo(other: Key): Int","elide.struct.AbstractTreeMap.MutableEntry.compareTo"]},{"name":"open operator override fun compareTo(other: Ordinal): Int","description":"elide.struct.api.Ordinal.compareTo","location":"packages/base/elide.struct.api/-ordinal/compare-to.html","searchKeys":["compareTo","open operator override fun compareTo(other: Ordinal): Int","elide.struct.api.Ordinal.compareTo"]},{"name":"open operator override fun contains(element: Value): Boolean","description":"elide.struct.MutablePresortedList.contains","location":"packages/base/elide.struct/-mutable-presorted-list/contains.html","searchKeys":["contains","open operator override fun contains(element: Value): Boolean","elide.struct.MutablePresortedList.contains"]},{"name":"open operator override fun contains(element: Value): Boolean","description":"elide.struct.MutableTreeSet.contains","location":"packages/base/elide.struct/-mutable-tree-set/contains.html","searchKeys":["contains","open operator override fun contains(element: Value): Boolean","elide.struct.MutableTreeSet.contains"]},{"name":"open operator override fun contains(element: Value): Boolean","description":"elide.struct.PresortedList.contains","location":"packages/base/elide.struct/-presorted-list/contains.html","searchKeys":["contains","open operator override fun contains(element: Value): Boolean","elide.struct.PresortedList.contains"]},{"name":"open operator override fun contains(element: Value): Boolean","description":"elide.struct.TreeSet.contains","location":"packages/base/elide.struct/-tree-set/contains.html","searchKeys":["contains","open operator override fun contains(element: Value): Boolean","elide.struct.TreeSet.contains"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"elide.struct.AbstractTreeMap.equals","location":"packages/base/elide.struct/-abstract-tree-map/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","elide.struct.AbstractTreeMap.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"elide.struct.PresortedList.equals","location":"packages/base/elide.struct/-presorted-list/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","elide.struct.PresortedList.equals"]},{"name":"open operator override fun get(index: Int): Value","description":"elide.struct.MutablePresortedList.get","location":"packages/base/elide.struct/-mutable-presorted-list/get.html","searchKeys":["get","open operator override fun get(index: Int): Value","elide.struct.MutablePresortedList.get"]},{"name":"open operator override fun get(index: Int): Value","description":"elide.struct.PresortedList.get","location":"packages/base/elide.struct/-presorted-list/get.html","searchKeys":["get","open operator override fun get(index: Int): Value","elide.struct.PresortedList.get"]},{"name":"open operator override fun get(key: Key): Value?","description":"elide.struct.AbstractTreeMap.get","location":"packages/base/elide.struct/-abstract-tree-map/get.html","searchKeys":["get","open operator override fun get(key: Key): Value?","elide.struct.AbstractTreeMap.get"]},{"name":"open operator override fun iterator(): Iterator<Value>","description":"elide.struct.PresortedList.iterator","location":"packages/base/elide.struct/-presorted-list/iterator.html","searchKeys":["iterator","open operator override fun iterator(): Iterator<Value>","elide.struct.PresortedList.iterator"]},{"name":"open operator override fun iterator(): MutableIterator<Value>","description":"elide.struct.MutablePresortedList.iterator","location":"packages/base/elide.struct/-mutable-presorted-list/iterator.html","searchKeys":["iterator","open operator override fun iterator(): MutableIterator<Value>","elide.struct.MutablePresortedList.iterator"]},{"name":"open operator override fun iterator(): MutableIterator<Value>","description":"elide.struct.MutableTreeSet.iterator","location":"packages/base/elide.struct/-mutable-tree-set/iterator.html","searchKeys":["iterator","open operator override fun iterator(): MutableIterator<Value>","elide.struct.MutableTreeSet.iterator"]},{"name":"open operator override fun iterator(): MutableIterator<Value>","description":"elide.struct.TreeSet.iterator","location":"packages/base/elide.struct/-tree-set/iterator.html","searchKeys":["iterator","open operator override fun iterator(): MutableIterator<Value>","elide.struct.TreeSet.iterator"]},{"name":"open operator override fun set(index: Int, element: Value): Value","description":"elide.struct.MutablePresortedList.set","location":"packages/base/elide.struct/-mutable-presorted-list/set.html","searchKeys":["set","open operator override fun set(index: Int, element: Value): Value","elide.struct.MutablePresortedList.set"]},{"name":"open override fun add(element: Value): Boolean","description":"elide.struct.MutablePresortedList.add","location":"packages/base/elide.struct/-mutable-presorted-list/add.html","searchKeys":["add","open override fun add(element: Value): Boolean","elide.struct.MutablePresortedList.add"]},{"name":"open override fun add(element: Value): Boolean","description":"elide.struct.MutableTreeSet.add","location":"packages/base/elide.struct/-mutable-tree-set/add.html","searchKeys":["add","open override fun add(element: Value): Boolean","elide.struct.MutableTreeSet.add"]},{"name":"open override fun add(index: Int, element: Value)","description":"elide.struct.MutablePresortedList.add","location":"packages/base/elide.struct/-mutable-presorted-list/add.html","searchKeys":["add","open override fun add(index: Int, element: Value)","elide.struct.MutablePresortedList.add"]},{"name":"open override fun addAll(elements: Collection<Value>): Boolean","description":"elide.struct.MutablePresortedList.addAll","location":"packages/base/elide.struct/-mutable-presorted-list/add-all.html","searchKeys":["addAll","open override fun addAll(elements: Collection<Value>): Boolean","elide.struct.MutablePresortedList.addAll"]},{"name":"open override fun addAll(elements: Collection<Value>): Boolean","description":"elide.struct.MutableTreeSet.addAll","location":"packages/base/elide.struct/-mutable-tree-set/add-all.html","searchKeys":["addAll","open override fun addAll(elements: Collection<Value>): Boolean","elide.struct.MutableTreeSet.addAll"]},{"name":"open override fun addAll(index: Int, elements: Collection<Value>): Boolean","description":"elide.struct.MutablePresortedList.addAll","location":"packages/base/elide.struct/-mutable-presorted-list/add-all.html","searchKeys":["addAll","open override fun addAll(index: Int, elements: Collection<Value>): Boolean","elide.struct.MutablePresortedList.addAll"]},{"name":"open override fun clear()","description":"elide.struct.MutablePresortedList.clear","location":"packages/base/elide.struct/-mutable-presorted-list/clear.html","searchKeys":["clear","open override fun clear()","elide.struct.MutablePresortedList.clear"]},{"name":"open override fun clear()","description":"elide.struct.MutableTreeMap.clear","location":"packages/base/elide.struct/-mutable-tree-map/clear.html","searchKeys":["clear","open override fun clear()","elide.struct.MutableTreeMap.clear"]},{"name":"open override fun clear()","description":"elide.struct.MutableTreeSet.clear","location":"packages/base/elide.struct/-mutable-tree-set/clear.html","searchKeys":["clear","open override fun clear()","elide.struct.MutableTreeSet.clear"]},{"name":"open override fun containsAll(elements: Collection<Value>): Boolean","description":"elide.struct.MutablePresortedList.containsAll","location":"packages/base/elide.struct/-mutable-presorted-list/contains-all.html","searchKeys":["containsAll","open override fun containsAll(elements: Collection<Value>): Boolean","elide.struct.MutablePresortedList.containsAll"]},{"name":"open override fun containsAll(elements: Collection<Value>): Boolean","description":"elide.struct.MutableTreeSet.containsAll","location":"packages/base/elide.struct/-mutable-tree-set/contains-all.html","searchKeys":["containsAll","open override fun containsAll(elements: Collection<Value>): Boolean","elide.struct.MutableTreeSet.containsAll"]},{"name":"open override fun containsAll(elements: Collection<Value>): Boolean","description":"elide.struct.PresortedList.containsAll","location":"packages/base/elide.struct/-presorted-list/contains-all.html","searchKeys":["containsAll","open override fun containsAll(elements: Collection<Value>): Boolean","elide.struct.PresortedList.containsAll"]},{"name":"open override fun containsAll(elements: Collection<Value>): Boolean","description":"elide.struct.TreeSet.containsAll","location":"packages/base/elide.struct/-tree-set/contains-all.html","searchKeys":["containsAll","open override fun containsAll(elements: Collection<Value>): Boolean","elide.struct.TreeSet.containsAll"]},{"name":"open override fun containsKey(key: Key): Boolean","description":"elide.struct.AbstractTreeMap.containsKey","location":"packages/base/elide.struct/-abstract-tree-map/contains-key.html","searchKeys":["containsKey","open override fun containsKey(key: Key): Boolean","elide.struct.AbstractTreeMap.containsKey"]},{"name":"open override fun containsValue(value: Value): Boolean","description":"elide.struct.AbstractTreeMap.containsValue","location":"packages/base/elide.struct/-abstract-tree-map/contains-value.html","searchKeys":["containsValue","open override fun containsValue(value: Value): Boolean","elide.struct.AbstractTreeMap.containsValue"]},{"name":"open override fun decode(data: ByteArray): ByteArray","description":"elide.util.Hex.decode","location":"packages/base/elide.util/-hex/decode.html","searchKeys":["decode","open override fun decode(data: ByteArray): ByteArray","elide.util.Hex.decode"]},{"name":"open override fun decode(string: String): ByteArray","description":"elide.util.Hex.decode","location":"packages/base/elide.util/-hex/decode.html","searchKeys":["decode","open override fun decode(string: String): ByteArray","elide.util.Hex.decode"]},{"name":"open override fun decodeToString(data: ByteArray): String","description":"elide.util.Hex.decodeToString","location":"packages/base/elide.util/-hex/decode-to-string.html","searchKeys":["decodeToString","open override fun decodeToString(data: ByteArray): String","elide.util.Hex.decodeToString"]},{"name":"open override fun decodeToString(string: String): String","description":"elide.util.Hex.decodeToString","location":"packages/base/elide.util/-hex/decode-to-string.html","searchKeys":["decodeToString","open override fun decodeToString(string: String): String","elide.util.Hex.decodeToString"]},{"name":"open override fun deserialize(decoder: Decoder): MutableTreeMap<K, V>","description":"elide.struct.codec.PresortedMutableMapCodec.deserialize","location":"packages/base/elide.struct.codec/-presorted-mutable-map-codec/deserialize.html","searchKeys":["deserialize","open override fun deserialize(decoder: Decoder): MutableTreeMap<K, V>","elide.struct.codec.PresortedMutableMapCodec.deserialize"]},{"name":"open override fun deserialize(decoder: Decoder): PresortedList<V>","description":"elide.struct.codec.PresortedListCodec.deserialize","location":"packages/base/elide.struct.codec/-presorted-list-codec/deserialize.html","searchKeys":["deserialize","open override fun deserialize(decoder: Decoder): PresortedList<V>","elide.struct.codec.PresortedListCodec.deserialize"]},{"name":"open override fun deserialize(decoder: Decoder): TreeMap<K, V>","description":"elide.struct.codec.PresortedMapCodec.deserialize","location":"packages/base/elide.struct.codec/-presorted-map-codec/deserialize.html","searchKeys":["deserialize","open override fun deserialize(decoder: Decoder): TreeMap<K, V>","elide.struct.codec.PresortedMapCodec.deserialize"]},{"name":"open override fun encode(data: ByteArray): ByteArray","description":"elide.util.Hex.encode","location":"packages/base/elide.util/-hex/encode.html","searchKeys":["encode","open override fun encode(data: ByteArray): ByteArray","elide.util.Hex.encode"]},{"name":"open override fun encode(string: String): ByteArray","description":"elide.util.Hex.encode","location":"packages/base/elide.util/-hex/encode.html","searchKeys":["encode","open override fun encode(string: String): ByteArray","elide.util.Hex.encode"]},{"name":"open override fun encodeToString(data: ByteArray): String","description":"elide.util.Hex.encodeToString","location":"packages/base/elide.util/-hex/encode-to-string.html","searchKeys":["encodeToString","open override fun encodeToString(data: ByteArray): String","elide.util.Hex.encodeToString"]},{"name":"open override fun encodeToString(string: String): String","description":"elide.util.Hex.encodeToString","location":"packages/base/elide.util/-hex/encode-to-string.html","searchKeys":["encodeToString","open override fun encodeToString(string: String): String","elide.util.Hex.encodeToString"]},{"name":"open override fun encoding(): Encoding","description":"elide.util.Hex.encoding","location":"packages/base/elide.util/-hex/encoding.html","searchKeys":["encoding","open override fun encoding(): Encoding","elide.util.Hex.encoding"]},{"name":"open override fun hashCode(): Int","description":"elide.struct.AbstractTreeMap.hashCode","location":"packages/base/elide.struct/-abstract-tree-map/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","elide.struct.AbstractTreeMap.hashCode"]},{"name":"open override fun hashCode(): Int","description":"elide.struct.PresortedList.hashCode","location":"packages/base/elide.struct/-presorted-list/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","elide.struct.PresortedList.hashCode"]},{"name":"open override fun indexOf(element: Value): Int","description":"elide.struct.MutablePresortedList.indexOf","location":"packages/base/elide.struct/-mutable-presorted-list/index-of.html","searchKeys":["indexOf","open override fun indexOf(element: Value): Int","elide.struct.MutablePresortedList.indexOf"]},{"name":"open override fun indexOf(element: Value): Int","description":"elide.struct.PresortedList.indexOf","location":"packages/base/elide.struct/-presorted-list/index-of.html","searchKeys":["indexOf","open override fun indexOf(element: Value): Int","elide.struct.PresortedList.indexOf"]},{"name":"open override fun isEmpty(): Boolean","description":"elide.struct.AbstractTreeMap.isEmpty","location":"packages/base/elide.struct/-abstract-tree-map/is-empty.html","searchKeys":["isEmpty","open override fun isEmpty(): Boolean","elide.struct.AbstractTreeMap.isEmpty"]},{"name":"open override fun isEmpty(): Boolean","description":"elide.struct.MutablePresortedList.isEmpty","location":"packages/base/elide.struct/-mutable-presorted-list/is-empty.html","searchKeys":["isEmpty","open override fun isEmpty(): Boolean","elide.struct.MutablePresortedList.isEmpty"]},{"name":"open override fun isEmpty(): Boolean","description":"elide.struct.MutableTreeSet.isEmpty","location":"packages/base/elide.struct/-mutable-tree-set/is-empty.html","searchKeys":["isEmpty","open override fun isEmpty(): Boolean","elide.struct.MutableTreeSet.isEmpty"]},{"name":"open override fun isEmpty(): Boolean","description":"elide.struct.PresortedList.isEmpty","location":"packages/base/elide.struct/-presorted-list/is-empty.html","searchKeys":["isEmpty","open override fun isEmpty(): Boolean","elide.struct.PresortedList.isEmpty"]},{"name":"open override fun isEmpty(): Boolean","description":"elide.struct.TreeSet.isEmpty","location":"packages/base/elide.struct/-tree-set/is-empty.html","searchKeys":["isEmpty","open override fun isEmpty(): Boolean","elide.struct.TreeSet.isEmpty"]},{"name":"open override fun isEnabled(level: LogLevel): Boolean","description":"elide.runtime.js.Logger.isEnabled","location":"packages/base/elide.runtime.js/-logger/is-enabled.html","searchKeys":["isEnabled","open override fun isEnabled(level: LogLevel): Boolean","elide.runtime.js.Logger.isEnabled"]},{"name":"open override fun isEnabled(level: LogLevel): Boolean","description":"elide.runtime.jvm.Logger.isEnabled","location":"packages/base/elide.runtime.jvm/-logger/is-enabled.html","searchKeys":["isEnabled","open override fun isEnabled(level: LogLevel): Boolean","elide.runtime.jvm.Logger.isEnabled"]},{"name":"open override fun isEnabled(level: LogLevel): Boolean","description":"elide.runtime.wasm.Logger.isEnabled","location":"packages/base/elide.runtime.wasm/-logger/is-enabled.html","searchKeys":["isEnabled","open override fun isEnabled(level: LogLevel): Boolean","elide.runtime.wasm.Logger.isEnabled"]},{"name":"open override fun lastIndexOf(element: Value): Int","description":"elide.struct.MutablePresortedList.lastIndexOf","location":"packages/base/elide.struct/-mutable-presorted-list/last-index-of.html","searchKeys":["lastIndexOf","open override fun lastIndexOf(element: Value): Int","elide.struct.MutablePresortedList.lastIndexOf"]},{"name":"open override fun lastIndexOf(element: Value): Int","description":"elide.struct.PresortedList.lastIndexOf","location":"packages/base/elide.struct/-presorted-list/last-index-of.html","searchKeys":["lastIndexOf","open override fun lastIndexOf(element: Value): Int","elide.struct.PresortedList.lastIndexOf"]},{"name":"open override fun listIterator(): ListIterator<Value>","description":"elide.struct.PresortedList.listIterator","location":"packages/base/elide.struct/-presorted-list/list-iterator.html","searchKeys":["listIterator","open override fun listIterator(): ListIterator<Value>","elide.struct.PresortedList.listIterator"]},{"name":"open override fun listIterator(): MutableListIterator<Value>","description":"elide.struct.MutablePresortedList.listIterator","location":"packages/base/elide.struct/-mutable-presorted-list/list-iterator.html","searchKeys":["listIterator","open override fun listIterator(): MutableListIterator<Value>","elide.struct.MutablePresortedList.listIterator"]},{"name":"open override fun listIterator(index: Int): ListIterator<Value>","description":"elide.struct.PresortedList.listIterator","location":"packages/base/elide.struct/-presorted-list/list-iterator.html","searchKeys":["listIterator","open override fun listIterator(index: Int): ListIterator<Value>","elide.struct.PresortedList.listIterator"]},{"name":"open override fun listIterator(index: Int): MutableListIterator<Value>","description":"elide.struct.MutablePresortedList.listIterator","location":"packages/base/elide.struct/-mutable-presorted-list/list-iterator.html","searchKeys":["listIterator","open override fun listIterator(index: Int): MutableListIterator<Value>","elide.struct.MutablePresortedList.listIterator"]},{"name":"open override fun log(level: LogLevel, message: List<Any>, levelChecked: Boolean)","description":"elide.runtime.js.Logger.log","location":"packages/base/elide.runtime.js/-logger/log.html","searchKeys":["log","open override fun log(level: LogLevel, message: List<Any>, levelChecked: Boolean)","elide.runtime.js.Logger.log"]},{"name":"open override fun log(level: LogLevel, message: List<Any>, levelChecked: Boolean)","description":"elide.runtime.jvm.Logger.log","location":"packages/base/elide.runtime.jvm/-logger/log.html","searchKeys":["log","open override fun log(level: LogLevel, message: List<Any>, levelChecked: Boolean)","elide.runtime.jvm.Logger.log"]},{"name":"open override fun log(level: LogLevel, message: List<Any>, levelChecked: Boolean)","description":"elide.runtime.wasm.Logger.log","location":"packages/base/elide.runtime.wasm/-logger/log.html","searchKeys":["log","open override fun log(level: LogLevel, message: List<Any>, levelChecked: Boolean)","elide.runtime.wasm.Logger.log"]},{"name":"open override fun put(key: Key, value: Value): Value?","description":"elide.struct.MutableTreeMap.put","location":"packages/base/elide.struct/-mutable-tree-map/put.html","searchKeys":["put","open override fun put(key: Key, value: Value): Value?","elide.struct.MutableTreeMap.put"]},{"name":"open override fun putAll(from: Map<out Key, Value>)","description":"elide.struct.MutableTreeMap.putAll","location":"packages/base/elide.struct/-mutable-tree-map/put-all.html","searchKeys":["putAll","open override fun putAll(from: Map<out Key, Value>)","elide.struct.MutableTreeMap.putAll"]},{"name":"open override fun remove(element: Value): Boolean","description":"elide.struct.MutablePresortedList.remove","location":"packages/base/elide.struct/-mutable-presorted-list/remove.html","searchKeys":["remove","open override fun remove(element: Value): Boolean","elide.struct.MutablePresortedList.remove"]},{"name":"open override fun remove(element: Value): Boolean","description":"elide.struct.MutableTreeSet.remove","location":"packages/base/elide.struct/-mutable-tree-set/remove.html","searchKeys":["remove","open override fun remove(element: Value): Boolean","elide.struct.MutableTreeSet.remove"]},{"name":"open override fun remove(key: Key): Value?","description":"elide.struct.MutableTreeMap.remove","location":"packages/base/elide.struct/-mutable-tree-map/remove.html","searchKeys":["remove","open override fun remove(key: Key): Value?","elide.struct.MutableTreeMap.remove"]},{"name":"open override fun removeAll(elements: Collection<Value>): Boolean","description":"elide.struct.MutablePresortedList.removeAll","location":"packages/base/elide.struct/-mutable-presorted-list/remove-all.html","searchKeys":["removeAll","open override fun removeAll(elements: Collection<Value>): Boolean","elide.struct.MutablePresortedList.removeAll"]},{"name":"open override fun removeAll(elements: Collection<Value>): Boolean","description":"elide.struct.MutableTreeSet.removeAll","location":"packages/base/elide.struct/-mutable-tree-set/remove-all.html","searchKeys":["removeAll","open override fun removeAll(elements: Collection<Value>): Boolean","elide.struct.MutableTreeSet.removeAll"]},{"name":"open override fun removeAt(index: Int): Value","description":"elide.struct.MutablePresortedList.removeAt","location":"packages/base/elide.struct/-mutable-presorted-list/remove-at.html","searchKeys":["removeAt","open override fun removeAt(index: Int): Value","elide.struct.MutablePresortedList.removeAt"]},{"name":"open override fun retainAll(elements: Collection<Value>): Boolean","description":"elide.struct.MutablePresortedList.retainAll","location":"packages/base/elide.struct/-mutable-presorted-list/retain-all.html","searchKeys":["retainAll","open override fun retainAll(elements: Collection<Value>): Boolean","elide.struct.MutablePresortedList.retainAll"]},{"name":"open override fun retainAll(elements: Collection<Value>): Boolean","description":"elide.struct.MutableTreeSet.retainAll","location":"packages/base/elide.struct/-mutable-tree-set/retain-all.html","searchKeys":["retainAll","open override fun retainAll(elements: Collection<Value>): Boolean","elide.struct.MutableTreeSet.retainAll"]},{"name":"open override fun serialize(encoder: Encoder, value: MutableTreeMap<K, V>)","description":"elide.struct.codec.PresortedMutableMapCodec.serialize","location":"packages/base/elide.struct.codec/-presorted-mutable-map-codec/serialize.html","searchKeys":["serialize","open override fun serialize(encoder: Encoder, value: MutableTreeMap<K, V>)","elide.struct.codec.PresortedMutableMapCodec.serialize"]},{"name":"open override fun serialize(encoder: Encoder, value: PresortedList<V>)","description":"elide.struct.codec.PresortedListCodec.serialize","location":"packages/base/elide.struct.codec/-presorted-list-codec/serialize.html","searchKeys":["serialize","open override fun serialize(encoder: Encoder, value: PresortedList<V>)","elide.struct.codec.PresortedListCodec.serialize"]},{"name":"open override fun serialize(encoder: Encoder, value: TreeMap<K, V>)","description":"elide.struct.codec.PresortedMapCodec.serialize","location":"packages/base/elide.struct.codec/-presorted-map-codec/serialize.html","searchKeys":["serialize","open override fun serialize(encoder: Encoder, value: TreeMap<K, V>)","elide.struct.codec.PresortedMapCodec.serialize"]},{"name":"open override fun setValue(newValue: Value): Value","description":"elide.struct.AbstractTreeMap.MutableEntry.setValue","location":"packages/base/elide.struct/-abstract-tree-map/-mutable-entry/set-value.html","searchKeys":["setValue","open override fun setValue(newValue: Value): Value","elide.struct.AbstractTreeMap.MutableEntry.setValue"]},{"name":"open override fun subList(fromIndex: Int, toIndex: Int): List<Value>","description":"elide.struct.PresortedList.subList","location":"packages/base/elide.struct/-presorted-list/sub-list.html","searchKeys":["subList","open override fun subList(fromIndex: Int, toIndex: Int): List<Value>","elide.struct.PresortedList.subList"]},{"name":"open override fun subList(fromIndex: Int, toIndex: Int): MutableList<Value>","description":"elide.struct.MutablePresortedList.subList","location":"packages/base/elide.struct/-mutable-presorted-list/sub-list.html","searchKeys":["subList","open override fun subList(fromIndex: Int, toIndex: Int): MutableList<Value>","elide.struct.MutablePresortedList.subList"]},{"name":"open override fun toString(): String","description":"elide.struct.PresortedList.toString","location":"packages/base/elide.struct/-presorted-list/to-string.html","searchKeys":["toString","open override fun toString(): String","elide.struct.PresortedList.toString"]},{"name":"open override val descriptor: SerialDescriptor","description":"elide.struct.codec.PresortedListCodec.descriptor","location":"packages/base/elide.struct.codec/-presorted-list-codec/descriptor.html","searchKeys":["descriptor","open override val descriptor: SerialDescriptor","elide.struct.codec.PresortedListCodec.descriptor"]},{"name":"open override val descriptor: SerialDescriptor","description":"elide.struct.codec.PresortedMapCodec.descriptor","location":"packages/base/elide.struct.codec/-presorted-map-codec/descriptor.html","searchKeys":["descriptor","open override val descriptor: SerialDescriptor","elide.struct.codec.PresortedMapCodec.descriptor"]},{"name":"open override val descriptor: SerialDescriptor","description":"elide.struct.codec.PresortedMutableMapCodec.descriptor","location":"packages/base/elide.struct.codec/-presorted-mutable-map-codec/descriptor.html","searchKeys":["descriptor","open override val descriptor: SerialDescriptor","elide.struct.codec.PresortedMutableMapCodec.descriptor"]},{"name":"open override val entries: MutableSet<MutableMap.MutableEntry<Key, Value>>","description":"elide.struct.AbstractTreeMap.entries","location":"packages/base/elide.struct/-abstract-tree-map/entries.html","searchKeys":["entries","open override val entries: MutableSet<MutableMap.MutableEntry<Key, Value>>","elide.struct.AbstractTreeMap.entries"]},{"name":"open override val key: Key","description":"elide.struct.AbstractTreeMap.Entry.key","location":"packages/base/elide.struct/-abstract-tree-map/-entry/key.html","searchKeys":["key","open override val key: Key","elide.struct.AbstractTreeMap.Entry.key"]},{"name":"open override val key: Key","description":"elide.struct.AbstractTreeMap.MutableEntry.key","location":"packages/base/elide.struct/-abstract-tree-map/-mutable-entry/key.html","searchKeys":["key","open override val key: Key","elide.struct.AbstractTreeMap.MutableEntry.key"]},{"name":"open override val keys: MutableSet<Key>","description":"elide.struct.AbstractTreeMap.keys","location":"packages/base/elide.struct/-abstract-tree-map/keys.html","searchKeys":["keys","open override val keys: MutableSet<Key>","elide.struct.AbstractTreeMap.keys"]},{"name":"open override val size: Int","description":"elide.struct.AbstractTreeMap.size","location":"packages/base/elide.struct/-abstract-tree-map/size.html","searchKeys":["size","open override val size: Int","elide.struct.AbstractTreeMap.size"]},{"name":"open override val size: Int","description":"elide.struct.MutablePresortedList.size","location":"packages/base/elide.struct/-mutable-presorted-list/size.html","searchKeys":["size","open override val size: Int","elide.struct.MutablePresortedList.size"]},{"name":"open override val size: Int","description":"elide.struct.MutableTreeSet.size","location":"packages/base/elide.struct/-mutable-tree-set/size.html","searchKeys":["size","open override val size: Int","elide.struct.MutableTreeSet.size"]},{"name":"open override val size: Int","description":"elide.struct.PresortedList.size","location":"packages/base/elide.struct/-presorted-list/size.html","searchKeys":["size","open override val size: Int","elide.struct.PresortedList.size"]},{"name":"open override val size: Int","description":"elide.struct.TreeSet.size","location":"packages/base/elide.struct/-tree-set/size.html","searchKeys":["size","open override val size: Int","elide.struct.TreeSet.size"]},{"name":"open override val value: Value","description":"elide.struct.AbstractTreeMap.Entry.value","location":"packages/base/elide.struct/-abstract-tree-map/-entry/value.html","searchKeys":["value","open override val value: Value","elide.struct.AbstractTreeMap.Entry.value"]},{"name":"open override val value: Value","description":"elide.struct.AbstractTreeMap.MutableEntry.value","location":"packages/base/elide.struct/-abstract-tree-map/-mutable-entry/value.html","searchKeys":["value","open override val value: Value","elide.struct.AbstractTreeMap.MutableEntry.value"]},{"name":"open override val values: MutableCollection<Value>","description":"elide.struct.AbstractTreeMap.values","location":"packages/base/elide.struct/-abstract-tree-map/values.html","searchKeys":["values","open override val values: MutableCollection<Value>","elide.struct.AbstractTreeMap.values"]},{"name":"operator fun set(key: Key, value: Value): Value?","description":"elide.struct.MutableTreeMap.set","location":"packages/base/elide.struct/-mutable-tree-map/set.html","searchKeys":["set","operator fun set(key: Key, value: Value): Value?","elide.struct.MutableTreeMap.set"]},{"name":"typealias ConsoleCallable = (Array<Any?>) -> Unit","description":"elide.runtime.js.ConsoleCallable","location":"packages/base/elide.runtime.js/-console-callable/index.html","searchKeys":["ConsoleCallable","typealias ConsoleCallable = (Array<Any?>) -> Unit","elide.runtime.js.ConsoleCallable"]},{"name":"val CHARACTER_SET: CharArray","description":"elide.util.Base64.CHARACTER_SET","location":"packages/base/elide.util/-base64/-c-h-a-r-a-c-t-e-r_-s-e-t.html","searchKeys":["CHARACTER_SET","val CHARACTER_SET: CharArray","elide.util.Base64.CHARACTER_SET"]},{"name":"val CHARACTER_SET: CharArray","description":"elide.util.Hex.CHARACTER_SET","location":"packages/base/elide.util/-hex/-c-h-a-r-a-c-t-e-r_-s-e-t.html","searchKeys":["CHARACTER_SET","val CHARACTER_SET: CharArray","elide.util.Hex.CHARACTER_SET"]},{"name":"val CHARACTER_SET_WEBSAFE: CharArray","description":"elide.util.Base64.CHARACTER_SET_WEBSAFE","location":"packages/base/elide.util/-base64/-c-h-a-r-a-c-t-e-r_-s-e-t_-w-e-b-s-a-f-e.html","searchKeys":["CHARACTER_SET_WEBSAFE","val CHARACTER_SET_WEBSAFE: CharArray","elide.util.Base64.CHARACTER_SET_WEBSAFE"]},{"name":"val DEFAULT: Base64Kt.Decoder","description":"elide.util.Base64Kt.Decoder.Companion.DEFAULT","location":"packages/base/elide.util/-base64-kt/-decoder/-companion/-d-e-f-a-u-l-t.html","searchKeys":["DEFAULT","val DEFAULT: Base64Kt.Decoder","elide.util.Base64Kt.Decoder.Companion.DEFAULT"]},{"name":"val DEFAULT: Base64Kt.Encoder","description":"elide.util.Base64Kt.Encoder.Companion.DEFAULT","location":"packages/base/elide.util/-base64-kt/-encoder/-companion/-d-e-f-a-u-l-t.html","searchKeys":["DEFAULT","val DEFAULT: Base64Kt.Encoder","elide.util.Base64Kt.Encoder.Companion.DEFAULT"]},{"name":"val DEFAULT_WEBSAFE: Base64Kt.Encoder","description":"elide.util.Base64Kt.Encoder.Companion.DEFAULT_WEBSAFE","location":"packages/base/elide.util/-base64-kt/-encoder/-companion/-d-e-f-a-u-l-t_-w-e-b-s-a-f-e.html","searchKeys":["DEFAULT_WEBSAFE","val DEFAULT_WEBSAFE: Base64Kt.Encoder","elide.util.Base64Kt.Encoder.Companion.DEFAULT_WEBSAFE"]},{"name":"val LogLevel.jvmLevel: Level","description":"elide.runtime.jvm.jvmLevel","location":"packages/base/elide.runtime.jvm/jvm-level.html","searchKeys":["jvmLevel","val LogLevel.jvmLevel: Level","elide.runtime.jvm.jvmLevel"]},{"name":"val appEnv: AppEnvironment","description":"elide.util.RuntimeFlag.appEnv","location":"packages/base/elide.util/-runtime-flag/app-env.html","searchKeys":["appEnv","val appEnv: AppEnvironment","elide.util.RuntimeFlag.appEnv"]},{"name":"val decoder: Base64Kt.Decoder","description":"elide.util.Base64Kt.decoder","location":"packages/base/elide.util/-base64-kt/decoder.html","searchKeys":["decoder","val decoder: Base64Kt.Decoder","elide.util.Base64Kt.decoder"]},{"name":"val encoder: Base64Kt.Encoder","description":"elide.util.Base64Kt.encoder","location":"packages/base/elide.util/-base64-kt/encoder.html","searchKeys":["encoder","val encoder: Base64Kt.Encoder","elide.util.Base64Kt.encoder"]},{"name":"val entries: EnumEntries<AppEnvironment>","description":"elide.AppEnvironment.entries","location":"packages/base/elide/-app-environment/entries.html","searchKeys":["entries","val entries: EnumEntries<AppEnvironment>","elide.AppEnvironment.entries"]},{"name":"val entries: EnumEntries<Encoding>","description":"elide.util.Encoding.entries","location":"packages/base/elide.util/-encoding/entries.html","searchKeys":["entries","val entries: EnumEntries<Encoding>","elide.util.Encoding.entries"]},{"name":"val entries: EnumEntries<LogLevel>","description":"elide.runtime.LogLevel.entries","location":"packages/base/elide.runtime/-log-level/entries.html","searchKeys":["entries","val entries: EnumEntries<LogLevel>","elide.runtime.LogLevel.entries"]},{"name":"val inspect: Boolean","description":"elide.util.RuntimeFlag.inspect","location":"packages/base/elide.util/-runtime-flag/inspect.html","searchKeys":["inspect","val inspect: Boolean","elide.util.RuntimeFlag.inspect"]},{"name":"val inspectHost: String","description":"elide.util.RuntimeFlag.inspectHost","location":"packages/base/elide.util/-runtime-flag/inspect-host.html","searchKeys":["inspectHost","val inspectHost: String","elide.util.RuntimeFlag.inspectHost"]},{"name":"val inspectInternal: Boolean","description":"elide.util.RuntimeFlag.inspectInternal","location":"packages/base/elide.util/-runtime-flag/inspect-internal.html","searchKeys":["inspectInternal","val inspectInternal: Boolean","elide.util.RuntimeFlag.inspectInternal"]},{"name":"val inspectPath: String?","description":"elide.util.RuntimeFlag.inspectPath","location":"packages/base/elide.util/-runtime-flag/inspect-path.html","searchKeys":["inspectPath","val inspectPath: String?","elide.util.RuntimeFlag.inspectPath"]},{"name":"val inspectPort: Int","description":"elide.util.RuntimeFlag.inspectPort","location":"packages/base/elide.util/-runtime-flag/inspect-port.html","searchKeys":["inspectPort","val inspectPort: Int","elide.util.RuntimeFlag.inspectPort"]},{"name":"val inspectSecure: Boolean","description":"elide.util.RuntimeFlag.inspectSecure","location":"packages/base/elide.util/-runtime-flag/inspect-secure.html","searchKeys":["inspectSecure","val inspectSecure: Boolean","elide.util.RuntimeFlag.inspectSecure"]},{"name":"val inspectSuspend: Boolean","description":"elide.util.RuntimeFlag.inspectSuspend","location":"packages/base/elide.util/-runtime-flag/inspect-suspend.html","searchKeys":["inspectSuspend","val inspectSuspend: Boolean","elide.util.RuntimeFlag.inspectSuspend"]},{"name":"val inspectWait: Boolean","description":"elide.util.RuntimeFlag.inspectWait","location":"packages/base/elide.util/-runtime-flag/inspect-wait.html","searchKeys":["inspectWait","val inspectWait: Boolean","elide.util.RuntimeFlag.inspectWait"]},{"name":"val name: String? = null","description":"elide.runtime.js.Logger.name","location":"packages/base/elide.runtime.js/-logger/name.html","searchKeys":["name","val name: String? = null","elide.runtime.js.Logger.name"]},{"name":"val name: String? = null","description":"elide.runtime.wasm.Logger.name","location":"packages/base/elide.runtime.wasm/-logger/name.html","searchKeys":["name","val name: String? = null","elide.runtime.wasm.Logger.name"]},{"name":"val warmup: Boolean","description":"elide.util.RuntimeFlag.warmup","location":"packages/base/elide.util/-runtime-flag/warmup.html","searchKeys":["warmup","val warmup: Boolean","elide.util.RuntimeFlag.warmup"]},{"name":"value class Entry<Key : Comparable<Key>, Value> : Map.Entry<Key, Value> , Comparable<Key> ","description":"elide.struct.AbstractTreeMap.Entry","location":"packages/base/elide.struct/-abstract-tree-map/-entry/index.html","searchKeys":["Entry","value class Entry<Key : Comparable<Key>, Value> : Map.Entry<Key, Value> , Comparable<Key> ","elide.struct.AbstractTreeMap.Entry"]},{"name":"value class MutableEntry<Key : Comparable<Key>, Value> : MutableMap.MutableEntry<Key, Value> , Comparable<Key> ","description":"elide.struct.AbstractTreeMap.MutableEntry","location":"packages/base/elide.struct/-abstract-tree-map/-mutable-entry/index.html","searchKeys":["MutableEntry","value class MutableEntry<Key : Comparable<Key>, Value> : MutableMap.MutableEntry<Key, Value> , Comparable<Key> ","elide.struct.AbstractTreeMap.MutableEntry"]},{"name":"value class Ordinal : Comparable<Ordinal> ","description":"elide.struct.api.Ordinal","location":"packages/base/elide.struct.api/-ordinal/index.html","searchKeys":["Ordinal","value class Ordinal : Comparable<Ordinal> ","elide.struct.api.Ordinal"]},{"name":"ALLOW","description":"elide.runtime.gvm.internals.vfs.AccessResult.ALLOW","location":"packages/graalvm/elide.runtime.gvm.internals.vfs/-access-result/-a-l-l-o-w/index.html","searchKeys":["ALLOW","ALLOW","elide.runtime.gvm.internals.vfs.AccessResult.ALLOW"]},{"name":"ALLOW_ALL","description":"elide.runtime.core.PolyglotEngineConfiguration.HostAccess.ALLOW_ALL","location":"packages/graalvm/elide.runtime.core/-polyglot-engine-configuration/-host-access/-a-l-l-o-w_-a-l-l/index.html","searchKeys":["ALLOW_ALL","ALLOW_ALL","elide.runtime.core.PolyglotEngineConfiguration.HostAccess.ALLOW_ALL"]},{"name":"ALLOW_ENV","description":"elide.runtime.core.PolyglotEngineConfiguration.HostAccess.ALLOW_ENV","location":"packages/graalvm/elide.runtime.core/-polyglot-engine-configuration/-host-access/-a-l-l-o-w_-e-n-v/index.html","searchKeys":["ALLOW_ENV","ALLOW_ENV","elide.runtime.core.PolyglotEngineConfiguration.HostAccess.ALLOW_ENV"]},{"name":"ALLOW_IO","description":"elide.runtime.core.PolyglotEngineConfiguration.HostAccess.ALLOW_IO","location":"packages/graalvm/elide.runtime.core/-polyglot-engine-configuration/-host-access/-a-l-l-o-w_-i-o/index.html","searchKeys":["ALLOW_IO","ALLOW_IO","elide.runtime.core.PolyglotEngineConfiguration.HostAccess.ALLOW_IO"]},{"name":"ALLOW_NONE","description":"elide.runtime.core.PolyglotEngineConfiguration.HostAccess.ALLOW_NONE","location":"packages/graalvm/elide.runtime.core/-polyglot-engine-configuration/-host-access/-a-l-l-o-w_-n-o-n-e/index.html","searchKeys":["ALLOW_NONE","ALLOW_NONE","elide.runtime.core.PolyglotEngineConfiguration.HostAccess.ALLOW_NONE"]},{"name":"AMD64","description":"elide.runtime.core.HostPlatform.Architecture.AMD64","location":"packages/graalvm/elide.runtime.core/-host-platform/-architecture/-a-m-d64/index.html","searchKeys":["AMD64","AMD64","elide.runtime.core.HostPlatform.Architecture.AMD64"]},{"name":"ARM64","description":"elide.runtime.core.HostPlatform.Architecture.ARM64","location":"packages/graalvm/elide.runtime.core/-host-platform/-architecture/-a-r-m64/index.html","searchKeys":["ARM64","ARM64","elide.runtime.core.HostPlatform.Architecture.ARM64"]},{"name":"ASYNC","description":"elide.runtime.gvm.InvocationMode.ASYNC","location":"packages/graalvm/elide.runtime.gvm/-invocation-mode/-a-s-y-n-c/index.html","searchKeys":["ASYNC","ASYNC","elide.runtime.gvm.InvocationMode.ASYNC"]},{"name":"CONNECT","description":"elide.runtime.intrinsics.server.http.HttpMethod.CONNECT","location":"packages/graalvm/elide.runtime.intrinsics.server.http/-http-method/-c-o-n-n-e-c-t/index.html","searchKeys":["CONNECT","CONNECT","elide.runtime.intrinsics.server.http.HttpMethod.CONNECT"]},{"name":"DARWIN","description":"elide.runtime.core.HostPlatform.OperatingSystem.DARWIN","location":"packages/graalvm/elide.runtime.core/-host-platform/-operating-system/-d-a-r-w-i-n/index.html","searchKeys":["DARWIN","DARWIN","elide.runtime.core.HostPlatform.OperatingSystem.DARWIN"]},{"name":"DELETE","description":"elide.runtime.gvm.internals.vfs.AccessType.DELETE","location":"packages/graalvm/elide.runtime.gvm.internals.vfs/-access-type/-d-e-l-e-t-e/index.html","searchKeys":["DELETE","DELETE","elide.runtime.gvm.internals.vfs.AccessType.DELETE"]},{"name":"DELETE","description":"elide.runtime.intrinsics.server.http.HttpMethod.DELETE","location":"packages/graalvm/elide.runtime.intrinsics.server.http/-http-method/-d-e-l-e-t-e/index.html","searchKeys":["DELETE","DELETE","elide.runtime.intrinsics.server.http.HttpMethod.DELETE"]},{"name":"DENY","description":"elide.runtime.gvm.internals.vfs.AccessResult.DENY","location":"packages/graalvm/elide.runtime.gvm.internals.vfs/-access-result/-d-e-n-y/index.html","searchKeys":["DENY","DENY","elide.runtime.gvm.internals.vfs.AccessResult.DENY"]},{"name":"DIRECTORY","description":"elide.runtime.gvm.internals.vfs.AccessScope.DIRECTORY","location":"packages/graalvm/elide.runtime.gvm.internals.vfs/-access-scope/-d-i-r-e-c-t-o-r-y/index.html","searchKeys":["DIRECTORY","DIRECTORY","elide.runtime.gvm.internals.vfs.AccessScope.DIRECTORY"]},{"name":"DOTENV","description":"elide.runtime.plugins.env.EnvConfig.EnvVariableSource.DOTENV","location":"packages/graalvm/elide.runtime.plugins.env/-env-config/-env-variable-source/-d-o-t-e-n-v/index.html","searchKeys":["DOTENV","DOTENV","elide.runtime.plugins.env.EnvConfig.EnvVariableSource.DOTENV"]},{"name":"ES2017","description":"elide.runtime.plugins.js.JavaScriptVersion.ES2017","location":"packages/graalvm/elide.runtime.plugins.js/-java-script-version/-e-s2017/index.html","searchKeys":["ES2017","ES2017","elide.runtime.plugins.js.JavaScriptVersion.ES2017"]},{"name":"ES2018","description":"elide.runtime.plugins.js.JavaScriptVersion.ES2018","location":"packages/graalvm/elide.runtime.plugins.js/-java-script-version/-e-s2018/index.html","searchKeys":["ES2018","ES2018","elide.runtime.plugins.js.JavaScriptVersion.ES2018"]},{"name":"ES2019","description":"elide.runtime.plugins.js.JavaScriptVersion.ES2019","location":"packages/graalvm/elide.runtime.plugins.js/-java-script-version/-e-s2019/index.html","searchKeys":["ES2019","ES2019","elide.runtime.plugins.js.JavaScriptVersion.ES2019"]},{"name":"ES2020","description":"elide.runtime.plugins.js.JavaScriptVersion.ES2020","location":"packages/graalvm/elide.runtime.plugins.js/-java-script-version/-e-s2020/index.html","searchKeys":["ES2020","ES2020","elide.runtime.plugins.js.JavaScriptVersion.ES2020"]},{"name":"ES2021","description":"elide.runtime.plugins.js.JavaScriptVersion.ES2021","location":"packages/graalvm/elide.runtime.plugins.js/-java-script-version/-e-s2021/index.html","searchKeys":["ES2021","ES2021","elide.runtime.plugins.js.JavaScriptVersion.ES2021"]},{"name":"ES2022","description":"elide.runtime.plugins.js.JavaScriptVersion.ES2022","location":"packages/graalvm/elide.runtime.plugins.js/-java-script-version/-e-s2022/index.html","searchKeys":["ES2022","ES2022","elide.runtime.plugins.js.JavaScriptVersion.ES2022"]},{"name":"ES5","description":"elide.runtime.plugins.js.JavaScriptVersion.ES5","location":"packages/graalvm/elide.runtime.plugins.js/-java-script-version/-e-s5/index.html","searchKeys":["ES5","ES5","elide.runtime.plugins.js.JavaScriptVersion.ES5"]},{"name":"ES6","description":"elide.runtime.plugins.js.JavaScriptVersion.ES6","location":"packages/graalvm/elide.runtime.plugins.js/-java-script-version/-e-s6/index.html","searchKeys":["ES6","ES6","elide.runtime.plugins.js.JavaScriptVersion.ES6"]},{"name":"EVALUATED","description":"elide.runtime.gvm.ExecutableScript.State.EVALUATED","location":"packages/graalvm/elide.runtime.gvm/-executable-script/-state/-e-v-a-l-u-a-t-e-d/index.html","searchKeys":["EVALUATED","EVALUATED","elide.runtime.gvm.ExecutableScript.State.EVALUATED"]},{"name":"EXECUTED","description":"elide.runtime.gvm.ExecutableScript.State.EXECUTED","location":"packages/graalvm/elide.runtime.gvm/-executable-script/-state/-e-x-e-c-u-t-e-d/index.html","searchKeys":["EXECUTED","EXECUTED","elide.runtime.gvm.ExecutableScript.State.EXECUTED"]},{"name":"FILE","description":"elide.runtime.gvm.internals.vfs.AccessScope.FILE","location":"packages/graalvm/elide.runtime.gvm.internals.vfs/-access-scope/-f-i-l-e/index.html","searchKeys":["FILE","FILE","elide.runtime.gvm.internals.vfs.AccessScope.FILE"]},{"name":"GET","description":"elide.runtime.intrinsics.server.http.HttpMethod.GET","location":"packages/graalvm/elide.runtime.intrinsics.server.http/-http-method/-g-e-t/index.html","searchKeys":["GET","GET","elide.runtime.intrinsics.server.http.HttpMethod.GET"]},{"name":"GUEST","description":"elide.runtime.gvm.internals.vfs.AccessDomain.GUEST","location":"packages/graalvm/elide.runtime.gvm.internals.vfs/-access-domain/-g-u-e-s-t/index.html","searchKeys":["GUEST","GUEST","elide.runtime.gvm.internals.vfs.AccessDomain.GUEST"]},{"name":"HEAD","description":"elide.runtime.intrinsics.server.http.HttpMethod.HEAD","location":"packages/graalvm/elide.runtime.intrinsics.server.http/-http-method/-h-e-a-d/index.html","searchKeys":["HEAD","HEAD","elide.runtime.intrinsics.server.http.HttpMethod.HEAD"]},{"name":"HOST","description":"elide.runtime.gvm.internals.vfs.AccessDomain.HOST","location":"packages/graalvm/elide.runtime.gvm.internals.vfs/-access-domain/-h-o-s-t/index.html","searchKeys":["HOST","HOST","elide.runtime.gvm.internals.vfs.AccessDomain.HOST"]},{"name":"HOST","description":"elide.runtime.plugins.env.EnvConfig.EnvVariableSource.HOST","location":"packages/graalvm/elide.runtime.plugins.env/-env-config/-env-variable-source/-h-o-s-t/index.html","searchKeys":["HOST","HOST","elide.runtime.plugins.env.EnvConfig.EnvVariableSource.HOST"]},{"name":"INLINE","description":"elide.runtime.plugins.env.EnvConfig.EnvVariableSource.INLINE","location":"packages/graalvm/elide.runtime.plugins.env/-env-config/-env-variable-source/-i-n-l-i-n-e/index.html","searchKeys":["INLINE","INLINE","elide.runtime.plugins.env.EnvConfig.EnvVariableSource.INLINE"]},{"name":"JAVASCRIPT","description":"elide.runtime.gvm.internals.GraalVMGuest.JAVASCRIPT","location":"packages/graalvm/elide.runtime.gvm.internals/-graal-v-m-guest/-j-a-v-a-s-c-r-i-p-t/index.html","searchKeys":["JAVASCRIPT","JAVASCRIPT","elide.runtime.gvm.internals.GraalVMGuest.JAVASCRIPT"]},{"name":"JVM","description":"elide.runtime.gvm.internals.GraalVMGuest.JVM","location":"packages/graalvm/elide.runtime.gvm.internals/-graal-v-m-guest/-j-v-m/index.html","searchKeys":["JVM","JVM","elide.runtime.gvm.internals.GraalVMGuest.JVM"]},{"name":"LATEST","description":"elide.runtime.plugins.js.JavaScriptVersion.LATEST","location":"packages/graalvm/elide.runtime.plugins.js/-java-script-version/-l-a-t-e-s-t/index.html","searchKeys":["LATEST","LATEST","elide.runtime.plugins.js.JavaScriptVersion.LATEST"]},{"name":"LINUX","description":"elide.runtime.core.HostPlatform.OperatingSystem.LINUX","location":"packages/graalvm/elide.runtime.core/-host-platform/-operating-system/-l-i-n-u-x/index.html","searchKeys":["LINUX","LINUX","elide.runtime.core.HostPlatform.OperatingSystem.LINUX"]},{"name":"OPTIONS","description":"elide.runtime.intrinsics.server.http.HttpMethod.OPTIONS","location":"packages/graalvm/elide.runtime.intrinsics.server.http/-http-method/-o-p-t-i-o-n-s/index.html","searchKeys":["OPTIONS","OPTIONS","elide.runtime.intrinsics.server.http.HttpMethod.OPTIONS"]},{"name":"PARSED","description":"elide.runtime.gvm.ExecutableScript.State.PARSED","location":"packages/graalvm/elide.runtime.gvm/-executable-script/-state/-p-a-r-s-e-d/index.html","searchKeys":["PARSED","PARSED","elide.runtime.gvm.ExecutableScript.State.PARSED"]},{"name":"PATCH","description":"elide.runtime.intrinsics.server.http.HttpMethod.PATCH","location":"packages/graalvm/elide.runtime.intrinsics.server.http/-http-method/-p-a-t-c-h/index.html","searchKeys":["PATCH","PATCH","elide.runtime.intrinsics.server.http.HttpMethod.PATCH"]},{"name":"POST","description":"elide.runtime.intrinsics.server.http.HttpMethod.POST","location":"packages/graalvm/elide.runtime.intrinsics.server.http/-http-method/-p-o-s-t/index.html","searchKeys":["POST","POST","elide.runtime.intrinsics.server.http.HttpMethod.POST"]},{"name":"PUT","description":"elide.runtime.intrinsics.server.http.HttpMethod.PUT","location":"packages/graalvm/elide.runtime.intrinsics.server.http/-http-method/-p-u-t/index.html","searchKeys":["PUT","PUT","elide.runtime.intrinsics.server.http.HttpMethod.PUT"]},{"name":"PYTHON","description":"elide.runtime.gvm.internals.GraalVMGuest.PYTHON","location":"packages/graalvm/elide.runtime.gvm.internals/-graal-v-m-guest/-p-y-t-h-o-n/index.html","searchKeys":["PYTHON","PYTHON","elide.runtime.gvm.internals.GraalVMGuest.PYTHON"]},{"name":"READ","description":"elide.runtime.gvm.internals.vfs.AccessType.READ","location":"packages/graalvm/elide.runtime.gvm.internals.vfs/-access-type/-r-e-a-d/index.html","searchKeys":["READ","READ","elide.runtime.gvm.internals.vfs.AccessType.READ"]},{"name":"RENDER","description":"elide.runtime.gvm.internals.GVMInvocationBindings.DispatchStyle.RENDER","location":"packages/graalvm/elide.runtime.gvm.internals/-g-v-m-invocation-bindings/-dispatch-style/-r-e-n-d-e-r/index.html","searchKeys":["RENDER","RENDER","elide.runtime.gvm.internals.GVMInvocationBindings.DispatchStyle.RENDER"]},{"name":"RUBY","description":"elide.runtime.gvm.internals.GraalVMGuest.RUBY","location":"packages/graalvm/elide.runtime.gvm.internals/-graal-v-m-guest/-r-u-b-y/index.html","searchKeys":["RUBY","RUBY","elide.runtime.gvm.internals.GraalVMGuest.RUBY"]},{"name":"SERVER","description":"elide.runtime.gvm.internals.GVMInvocationBindings.DispatchStyle.SERVER","location":"packages/graalvm/elide.runtime.gvm.internals/-g-v-m-invocation-bindings/-dispatch-style/-s-e-r-v-e-r/index.html","searchKeys":["SERVER","SERVER","elide.runtime.gvm.internals.GVMInvocationBindings.DispatchStyle.SERVER"]},{"name":"STABLE","description":"elide.runtime.plugins.js.JavaScriptVersion.STABLE","location":"packages/graalvm/elide.runtime.plugins.js/-java-script-version/-s-t-a-b-l-e/index.html","searchKeys":["STABLE","STABLE","elide.runtime.plugins.js.JavaScriptVersion.STABLE"]},{"name":"STREAMING","description":"elide.runtime.gvm.InvocationMode.STREAMING","location":"packages/graalvm/elide.runtime.gvm/-invocation-mode/-s-t-r-e-a-m-i-n-g/index.html","searchKeys":["STREAMING","STREAMING","elide.runtime.gvm.InvocationMode.STREAMING"]},{"name":"SYNC","description":"elide.runtime.gvm.InvocationMode.SYNC","location":"packages/graalvm/elide.runtime.gvm/-invocation-mode/-s-y-n-c/index.html","searchKeys":["SYNC","SYNC","elide.runtime.gvm.InvocationMode.SYNC"]},{"name":"TRACE","description":"elide.runtime.intrinsics.server.http.HttpMethod.TRACE","location":"packages/graalvm/elide.runtime.intrinsics.server.http/-http-method/-t-r-a-c-e/index.html","searchKeys":["TRACE","TRACE","elide.runtime.intrinsics.server.http.HttpMethod.TRACE"]},{"name":"UNARY","description":"elide.runtime.gvm.internals.GVMInvocationBindings.DispatchStyle.UNARY","location":"packages/graalvm/elide.runtime.gvm.internals/-g-v-m-invocation-bindings/-dispatch-style/-u-n-a-r-y/index.html","searchKeys":["UNARY","UNARY","elide.runtime.gvm.internals.GVMInvocationBindings.DispatchStyle.UNARY"]},{"name":"UNINITIALIZED","description":"elide.runtime.gvm.ExecutableScript.State.UNINITIALIZED","location":"packages/graalvm/elide.runtime.gvm/-executable-script/-state/-u-n-i-n-i-t-i-a-l-i-z-e-d/index.html","searchKeys":["UNINITIALIZED","UNINITIALIZED","elide.runtime.gvm.ExecutableScript.State.UNINITIALIZED"]},{"name":"UNSPECIFIED","description":"elide.runtime.gvm.internals.vfs.AccessScope.UNSPECIFIED","location":"packages/graalvm/elide.runtime.gvm.internals.vfs/-access-scope/-u-n-s-p-e-c-i-f-i-e-d/index.html","searchKeys":["UNSPECIFIED","UNSPECIFIED","elide.runtime.gvm.internals.vfs.AccessScope.UNSPECIFIED"]},{"name":"V4","description":"elide.runtime.intrinsics.js.typed.UUID.UUIDType.V4","location":"packages/graalvm/elide.runtime.intrinsics.js.typed/-u-u-i-d/-u-u-i-d-type/-v4/index.html","searchKeys":["V4","V4","elide.runtime.intrinsics.js.typed.UUID.UUIDType.V4"]},{"name":"WASM","description":"elide.runtime.gvm.internals.GraalVMGuest.WASM","location":"packages/graalvm/elide.runtime.gvm.internals/-graal-v-m-guest/-w-a-s-m/index.html","searchKeys":["WASM","WASM","elide.runtime.gvm.internals.GraalVMGuest.WASM"]},{"name":"WINDOWS","description":"elide.runtime.core.HostPlatform.OperatingSystem.WINDOWS","location":"packages/graalvm/elide.runtime.core/-host-platform/-operating-system/-w-i-n-d-o-w-s/index.html","searchKeys":["WINDOWS","WINDOWS","elide.runtime.core.HostPlatform.OperatingSystem.WINDOWS"]},{"name":"WRITE","description":"elide.runtime.gvm.internals.vfs.AccessType.WRITE","location":"packages/graalvm/elide.runtime.gvm.internals.vfs/-access-type/-w-r-i-t-e/index.html","searchKeys":["WRITE","WRITE","elide.runtime.gvm.internals.vfs.AccessType.WRITE"]},{"name":"abstract class AbstractGVMScript : GuestScript","description":"elide.runtime.gvm.internals.AbstractGVMScript","location":"packages/graalvm/elide.runtime.gvm.internals/-abstract-g-v-m-script/index.html","searchKeys":["AbstractGVMScript","abstract class AbstractGVMScript : GuestScript","elide.runtime.gvm.internals.AbstractGVMScript"]},{"name":"abstract class AbstractLanguageConfig","description":"elide.runtime.plugins.AbstractLanguageConfig","location":"packages/graalvm/elide.runtime.plugins/-abstract-language-config/index.html","searchKeys":["AbstractLanguageConfig","abstract class AbstractLanguageConfig","elide.runtime.plugins.AbstractLanguageConfig"]},{"name":"abstract class AbstractLanguagePlugin<C : Any, I : Any> : EnginePlugin<C, I> , GuestLanguage","description":"elide.runtime.plugins.AbstractLanguagePlugin","location":"packages/graalvm/elide.runtime.plugins/-abstract-language-plugin/index.html","searchKeys":["AbstractLanguagePlugin","abstract class AbstractLanguagePlugin<C : Any, I : Any> : EnginePlugin<C, I> , GuestLanguage","elide.runtime.plugins.AbstractLanguagePlugin"]},{"name":"abstract class AbstractVMEngine<Config : GuestRuntimeConfiguration, Code : ExecutableScript, Bindings : InvocationBindings>(language: GraalVMGuest) : VMEngineImpl<Config> ","description":"elide.runtime.gvm.internals.AbstractVMEngine","location":"packages/graalvm/elide.runtime.gvm.internals/-abstract-v-m-engine/index.html","searchKeys":["AbstractVMEngine","abstract class AbstractVMEngine<Config : GuestRuntimeConfiguration, Code : ExecutableScript, Bindings : InvocationBindings>(language: GraalVMGuest) : VMEngineImpl<Config> ","elide.runtime.gvm.internals.AbstractVMEngine"]},{"name":"abstract class DeveloperScript : ExecutableScript","description":"elide.runtime.gvm.DeveloperScript","location":"packages/graalvm/elide.runtime.gvm/-developer-script/index.html","searchKeys":["DeveloperScript","abstract class DeveloperScript : ExecutableScript","elide.runtime.gvm.DeveloperScript"]},{"name":"abstract class Error : RuntimeException, AbstractJSException","description":"elide.runtime.intrinsics.js.err.Error","location":"packages/graalvm/elide.runtime.intrinsics.js.err/-error/index.html","searchKeys":["Error","abstract class Error : RuntimeException, AbstractJSException","elide.runtime.intrinsics.js.err.Error"]},{"name":"abstract class GVMInvocationBindings<Bindings : GVMInvocationBindings<Bindings, Script>, Script : ExecutableScript> : InvocationBindings","description":"elide.runtime.gvm.internals.GVMInvocationBindings","location":"packages/graalvm/elide.runtime.gvm.internals/-g-v-m-invocation-bindings/index.html","searchKeys":["GVMInvocationBindings","abstract class GVMInvocationBindings<Bindings : GVMInvocationBindings<Bindings, Script>, Script : ExecutableScript> : InvocationBindings","elide.runtime.gvm.internals.GVMInvocationBindings"]},{"name":"abstract class GuestIOException(message: String? = null, cause: Throwable? = null) : IOException","description":"elide.runtime.gvm.internals.vfs.GuestIOException","location":"packages/graalvm/elide.runtime.gvm.internals.vfs/-guest-i-o-exception/index.html","searchKeys":["GuestIOException","abstract class GuestIOException(message: String? = null, cause: Throwable? = null) : IOException","elide.runtime.gvm.internals.vfs.GuestIOException"]},{"name":"abstract class GuestVFSConfigurator(guestLanguage: GuestLanguage, runtimeInfoProducer: () -> AbstractVMEngine.RuntimeInfo) : GuestVFS.VFSConfigurator","description":"elide.runtime.gvm.internals.AbstractVMEngine.GuestVFSConfigurator","location":"packages/graalvm/elide.runtime.gvm.internals/-abstract-v-m-engine/-guest-v-f-s-configurator/index.html","searchKeys":["GuestVFSConfigurator","abstract class GuestVFSConfigurator(guestLanguage: GuestLanguage, runtimeInfoProducer: () -> AbstractVMEngine.RuntimeInfo) : GuestVFS.VFSConfigurator","elide.runtime.gvm.internals.AbstractVMEngine.GuestVFSConfigurator"]},{"name":"abstract class PolyglotEngineConfiguration : PluginRegistry","description":"elide.runtime.core.PolyglotEngineConfiguration","location":"packages/graalvm/elide.runtime.core/-polyglot-engine-configuration/index.html","searchKeys":["PolyglotEngineConfiguration","abstract class PolyglotEngineConfiguration : PluginRegistry","elide.runtime.core.PolyglotEngineConfiguration"]},{"name":"abstract class TypeError : Error, AbstractJSException","description":"elide.runtime.intrinsics.js.err.TypeError","location":"packages/graalvm/elide.runtime.intrinsics.js.err/-type-error/index.html","searchKeys":["TypeError","abstract class TypeError : Error, AbstractJSException","elide.runtime.intrinsics.js.err.TypeError"]},{"name":"abstract class ValueError : Error, AbstractJSException","description":"elide.runtime.intrinsics.js.err.ValueError","location":"packages/graalvm/elide.runtime.intrinsics.js.err/-value-error/index.html","searchKeys":["ValueError","abstract class ValueError : Error, AbstractJSException","elide.runtime.intrinsics.js.err.ValueError"]},{"name":"abstract fun <C : Any, I : Any> install(plugin: EnginePlugin<C, I>, configure: C.() -> Unit = { }): I","description":"elide.runtime.core.PluginRegistry.install","location":"packages/graalvm/elide.runtime.core/-plugin-registry/install.html","searchKeys":["install","abstract fun <C : Any, I : Any> install(plugin: EnginePlugin<C, I>, configure: C.() -> Unit = { }): I","elide.runtime.core.PluginRegistry.install"]},{"name":"abstract fun <R> acquire(builder: (Builder) -> Unit? = null, operation: Context.() -> R): R","description":"elide.runtime.gvm.ContextFactory.acquire","location":"packages/graalvm/elide.runtime.gvm/-context-factory/acquire.html","searchKeys":["acquire","abstract fun <R> acquire(builder: (Builder) -> Unit? = null, operation: Context.() -> R): R","elide.runtime.gvm.ContextFactory.acquire"]},{"name":"abstract fun <R> executeAsync(operation: Context.() -> R): CompletableFuture<R>","description":"elide.runtime.gvm.internals.context.ContextManager.executeAsync","location":"packages/graalvm/elide.runtime.gvm.internals.context/-context-manager/execute-async.html","searchKeys":["executeAsync","abstract fun <R> executeAsync(operation: Context.() -> R): CompletableFuture<R>","elide.runtime.gvm.internals.context.ContextManager.executeAsync"]},{"name":"abstract fun <R> executeBlocking(script: ExecutableScript, returnType: Class<R>, args: ExecutionInputs?): R?","description":"elide.runtime.gvm.VMFacade.executeBlocking","location":"packages/graalvm/elide.runtime.gvm/-v-m-facade/execute-blocking.html","searchKeys":["executeBlocking","abstract fun <R> executeBlocking(script: ExecutableScript, returnType: Class<R>, args: ExecutionInputs?): R?","elide.runtime.gvm.VMFacade.executeBlocking"]},{"name":"abstract fun <T> on(event: EngineLifecycleEvent<T>, consume: (T) -> Unit)","description":"elide.runtime.core.EngineLifecycle.on","location":"packages/graalvm/elide.runtime.core/-engine-lifecycle/on.html","searchKeys":["on","abstract fun <T> on(event: EngineLifecycleEvent<T>, consume: (T) -> Unit)","elide.runtime.core.EngineLifecycle.on"]},{"name":"abstract fun <T> plugin(key: EnginePlugin.Key<T>): T?","description":"elide.runtime.core.PluginRegistry.plugin","location":"packages/graalvm/elide.runtime.core/-plugin-registry/plugin.html","searchKeys":["plugin","abstract fun <T> plugin(key: EnginePlugin.Key<T>): T?","elide.runtime.core.PluginRegistry.plugin"]},{"name":"abstract fun acquire(cfg: Context.Builder.() -> Unit = {}): PolyglotContext","description":"elide.runtime.core.PolyglotEngine.acquire","location":"packages/graalvm/elide.runtime.core/-polyglot-engine/acquire.html","searchKeys":["acquire","abstract fun acquire(cfg: Context.Builder.() -> Unit = {}): PolyglotContext","elide.runtime.core.PolyglotEngine.acquire"]},{"name":"abstract fun activate(start: Boolean = false)","description":"elide.runtime.gvm.ContextFactory.activate","location":"packages/graalvm/elide.runtime.gvm/-context-factory/activate.html","searchKeys":["activate","abstract fun activate(start: Boolean = false)","elide.runtime.gvm.ContextFactory.activate"]},{"name":"abstract fun allInputs(): Array<out Any>","description":"elide.runtime.gvm.ExecutionInputs.allInputs","location":"packages/graalvm/elide.runtime.gvm/-execution-inputs/all-inputs.html","searchKeys":["allInputs","abstract fun allInputs(): Array<out Any>","elide.runtime.gvm.ExecutionInputs.allInputs"]},{"name":"abstract fun allowsHostFileAccess(): Boolean","description":"elide.runtime.gvm.internals.GuestVFS.allowsHostFileAccess","location":"packages/graalvm/elide.runtime.gvm.internals/-guest-v-f-s/allows-host-file-access.html","searchKeys":["allowsHostFileAccess","abstract fun allowsHostFileAccess(): Boolean","elide.runtime.gvm.internals.GuestVFS.allowsHostFileAccess"]},{"name":"abstract fun allowsHostSocketAccess(): Boolean","description":"elide.runtime.gvm.internals.GuestVFS.allowsHostSocketAccess","location":"packages/graalvm/elide.runtime.gvm.internals/-guest-v-f-s/allows-host-socket-access.html","searchKeys":["allowsHostSocketAccess","abstract fun allowsHostSocketAccess(): Boolean","elide.runtime.gvm.internals.GuestVFS.allowsHostSocketAccess"]},{"name":"abstract fun append(key: K, value: V)","description":"elide.runtime.intrinsics.js.MutableMultiMapLike.append","location":"packages/graalvm/elide.runtime.intrinsics.js/-mutable-multi-map-like/append.html","searchKeys":["append","abstract fun append(key: K, value: V)","elide.runtime.intrinsics.js.MutableMultiMapLike.append"]},{"name":"abstract fun append(name: String, value: String)","description":"elide.runtime.intrinsics.js.FetchMutableHeaders.append","location":"packages/graalvm/elide.runtime.intrinsics.js/-fetch-mutable-headers/append.html","searchKeys":["append","abstract fun append(name: String, value: String)","elide.runtime.intrinsics.js.FetchMutableHeaders.append"]},{"name":"abstract fun bindings(language: GuestLanguage? = null): PolyglotValue","description":"elide.runtime.core.PolyglotContext.bindings","location":"packages/graalvm/elide.runtime.core/-polyglot-context/bindings.html","searchKeys":["bindings","abstract fun bindings(language: GuestLanguage? = null): PolyglotValue","elide.runtime.core.PolyglotContext.bindings"]},{"name":"abstract fun bundles(): List<URI>","description":"elide.runtime.gvm.internals.GuestVFS.VFSConfigurator.bundles","location":"packages/graalvm/elide.runtime.gvm.internals/-guest-v-f-s/-v-f-s-configurator/bundles.html","searchKeys":["bundles","abstract fun bundles(): List<URI>","elide.runtime.gvm.internals.GuestVFS.VFSConfigurator.bundles"]},{"name":"abstract fun catch(onRejected: (Throwable) -> Unit): JsPromise<T>","description":"elide.runtime.intrinsics.js.JsPromise.catch","location":"packages/graalvm/elide.runtime.intrinsics.js/-js-promise/catch.html","searchKeys":["catch","abstract fun catch(onRejected: (Throwable) -> Unit): JsPromise<T>","elide.runtime.intrinsics.js.JsPromise.catch"]},{"name":"abstract fun configureVM(props: Stream<VMProperty>)","description":"elide.runtime.gvm.ContextFactory.configureVM","location":"packages/graalvm/elide.runtime.gvm/-context-factory/configure-v-m.html","searchKeys":["configureVM","abstract fun configureVM(props: Stream<VMProperty>)","elide.runtime.gvm.ContextFactory.configureVM"]},{"name":"abstract fun create(error: Throwable): T","description":"elide.runtime.intrinsics.js.err.AbstractJSException.ErrorFactory.create","location":"packages/graalvm/elide.runtime.intrinsics.js.err/-abstract-j-s-exception/-error-factory/create.html","searchKeys":["create","abstract fun create(error: Throwable): T","elide.runtime.intrinsics.js.err.AbstractJSException.ErrorFactory.create"]},{"name":"abstract fun create(message: String, cause: Throwable? = null): T","description":"elide.runtime.intrinsics.js.err.AbstractJSException.ErrorFactory.create","location":"packages/graalvm/elide.runtime.intrinsics.js.err/-abstract-j-s-exception/-error-factory/create.html","searchKeys":["create","abstract fun create(message: String, cause: Throwable? = null): T","elide.runtime.intrinsics.js.err.AbstractJSException.ErrorFactory.create"]},{"name":"abstract fun create(url: String): URL","description":"elide.runtime.intrinsics.js.URL.URLConstructors.create","location":"packages/graalvm/elide.runtime.intrinsics.js/-u-r-l/-u-r-l-constructors/create.html","searchKeys":["create","abstract fun create(url: String): URL","elide.runtime.intrinsics.js.URL.URLConstructors.create"]},{"name":"abstract fun create(url: String, base: String): URL","description":"elide.runtime.intrinsics.js.URL.URLConstructors.create","location":"packages/graalvm/elide.runtime.intrinsics.js/-u-r-l/-u-r-l-constructors/create.html","searchKeys":["create","abstract fun create(url: String, base: String): URL","elide.runtime.intrinsics.js.URL.URLConstructors.create"]},{"name":"abstract fun create(url: URL): URL","description":"elide.runtime.intrinsics.js.URL.URLConstructors.create","location":"packages/graalvm/elide.runtime.intrinsics.js/-u-r-l/-u-r-l-constructors/create.html","searchKeys":["create","abstract fun create(url: URL): URL","elide.runtime.intrinsics.js.URL.URLConstructors.create"]},{"name":"abstract fun createObjectURL(blob: Blob): URL","description":"elide.runtime.intrinsics.js.URL.URLStaticMethods.createObjectURL","location":"packages/graalvm/elide.runtime.intrinsics.js/-u-r-l/-u-r-l-static-methods/create-object-u-r-l.html","searchKeys":["createObjectURL","abstract fun createObjectURL(blob: Blob): URL","elide.runtime.intrinsics.js.URL.URLStaticMethods.createObjectURL"]},{"name":"abstract fun createObjectURL(file: File): URL","description":"elide.runtime.intrinsics.js.URL.URLStaticMethods.createObjectURL","location":"packages/graalvm/elide.runtime.intrinsics.js/-u-r-l/-u-r-l-static-methods/create-object-u-r-l.html","searchKeys":["createObjectURL","abstract fun createObjectURL(file: File): URL","elide.runtime.intrinsics.js.URL.URLStaticMethods.createObjectURL"]},{"name":"abstract fun decode(input: String): String","description":"elide.runtime.intrinsics.js.JavaScriptBase64.decode","location":"packages/graalvm/elide.runtime.intrinsics.js/-java-script-base64/decode.html","searchKeys":["decode","abstract fun decode(input: String): String","elide.runtime.intrinsics.js.JavaScriptBase64.decode"]},{"name":"abstract fun delete(key: K)","description":"elide.runtime.intrinsics.js.MutableMapLike.delete","location":"packages/graalvm/elide.runtime.intrinsics.js/-mutable-map-like/delete.html","searchKeys":["delete","abstract fun delete(key: K)","elide.runtime.intrinsics.js.MutableMapLike.delete"]},{"name":"abstract fun delete(name: String)","description":"elide.runtime.intrinsics.js.FetchMutableHeaders.delete","location":"packages/graalvm/elide.runtime.intrinsics.js/-fetch-mutable-headers/delete.html","searchKeys":["delete","abstract fun delete(name: String)","elide.runtime.intrinsics.js.FetchMutableHeaders.delete"]},{"name":"abstract fun delete(path: String, handler: Value)","description":"elide.runtime.intrinsics.js.express.ExpressApp.delete","location":"packages/graalvm/elide.runtime.intrinsics.js.express/-express-app/delete.html","searchKeys":["delete","abstract fun delete(path: String, handler: Value)","elide.runtime.intrinsics.js.express.ExpressApp.delete"]},{"name":"abstract fun displayName(): String","description":"elide.runtime.intrinsics.GuestIntrinsic.displayName","location":"packages/graalvm/elide.runtime.intrinsics/-guest-intrinsic/display-name.html","searchKeys":["displayName","abstract fun displayName(): String","elide.runtime.intrinsics.GuestIntrinsic.displayName"]},{"name":"abstract fun empty(): Impl","description":"elide.runtime.intrinsics.js.FetchHeaders.Factory.empty","location":"packages/graalvm/elide.runtime.intrinsics.js/-fetch-headers/-factory/empty.html","searchKeys":["empty","abstract fun empty(): Impl","elide.runtime.intrinsics.js.FetchHeaders.Factory.empty"]},{"name":"abstract fun empty(): Impl","description":"elide.runtime.intrinsics.js.ReadableStream.Factory.empty","location":"packages/graalvm/elide.runtime.intrinsics.js/-readable-stream/-factory/empty.html","searchKeys":["empty","abstract fun empty(): Impl","elide.runtime.intrinsics.js.ReadableStream.Factory.empty"]},{"name":"abstract fun enableLanguage(language: GuestLanguage)","description":"elide.runtime.core.PolyglotEngineConfiguration.enableLanguage","location":"packages/graalvm/elide.runtime.core/-polyglot-engine-configuration/enable-language.html","searchKeys":["enableLanguage","abstract fun enableLanguage(language: GuestLanguage)","elide.runtime.core.PolyglotEngineConfiguration.enableLanguage"]},{"name":"abstract fun encode(input: String): String","description":"elide.runtime.intrinsics.js.JavaScriptBase64.encode","location":"packages/graalvm/elide.runtime.intrinsics.js/-java-script-base64/encode.html","searchKeys":["encode","abstract fun encode(input: String): String","elide.runtime.intrinsics.js.JavaScriptBase64.encode"]},{"name":"abstract fun encode(input: String, websafe: Boolean): String","description":"elide.runtime.intrinsics.js.JavaScriptBase64.encode","location":"packages/graalvm/elide.runtime.intrinsics.js/-java-script-base64/encode.html","searchKeys":["encode","abstract fun encode(input: String, websafe: Boolean): String","elide.runtime.intrinsics.js.JavaScriptBase64.encode"]},{"name":"abstract fun engine(): Engine","description":"elide.runtime.gvm.internals.context.ContextManager.engine","location":"packages/graalvm/elide.runtime.gvm.internals.context/-context-manager/engine.html","searchKeys":["engine","abstract fun engine(): Engine","elide.runtime.gvm.internals.context.ContextManager.engine"]},{"name":"abstract fun enter()","description":"elide.runtime.core.PolyglotContext.enter","location":"packages/graalvm/elide.runtime.core/-polyglot-context/enter.html","searchKeys":["enter","abstract fun enter()","elide.runtime.core.PolyglotContext.enter"]},{"name":"abstract fun entries(): JsIterator<MapLike.Entry<K, V>>","description":"elide.runtime.intrinsics.js.MapLike.entries","location":"packages/graalvm/elide.runtime.intrinsics.js/-map-like/entries.html","searchKeys":["entries","abstract fun entries(): JsIterator<MapLike.Entry<K, V>>","elide.runtime.intrinsics.js.MapLike.entries"]},{"name":"abstract fun error(): Impl","description":"elide.runtime.intrinsics.js.FetchResponse.Factory.error","location":"packages/graalvm/elide.runtime.intrinsics.js/-fetch-response/-factory/error.html","searchKeys":["error","abstract fun error(): Impl","elide.runtime.intrinsics.js.FetchResponse.Factory.error"]},{"name":"abstract fun error(vararg args: Any?)","description":"elide.runtime.intrinsics.js.JavaScriptConsole.error","location":"packages/graalvm/elide.runtime.intrinsics.js/-java-script-console/error.html","searchKeys":["error","abstract fun error(vararg args: Any?)","elide.runtime.intrinsics.js.JavaScriptConsole.error"]},{"name":"abstract fun evaluate(source: Source): PolyglotValue","description":"elide.runtime.core.PolyglotContext.evaluate","location":"packages/graalvm/elide.runtime.core/-polyglot-context/evaluate.html","searchKeys":["evaluate","abstract fun evaluate(source: Source): PolyglotValue","elide.runtime.core.PolyglotContext.evaluate"]},{"name":"abstract fun evaluate(source: Source, context: PolyglotContext): PolyglotValue","description":"elide.runtime.core.GuestLanguageEvaluator.evaluate","location":"packages/graalvm/elide.runtime.core/-guest-language-evaluator/evaluate.html","searchKeys":["evaluate","abstract fun evaluate(source: Source, context: PolyglotContext): PolyglotValue","elide.runtime.core.GuestLanguageEvaluator.evaluate"]},{"name":"abstract fun fetch(request: FetchRequest): JsPromise<FetchResponse>","description":"elide.runtime.intrinsics.js.FetchAPI.fetch","location":"packages/graalvm/elide.runtime.intrinsics.js/-fetch-a-p-i/fetch.html","searchKeys":["fetch","abstract fun fetch(request: FetchRequest): JsPromise<FetchResponse>","elide.runtime.intrinsics.js.FetchAPI.fetch"]},{"name":"abstract fun fetch(url: String): JsPromise<FetchResponse>","description":"elide.runtime.intrinsics.js.FetchAPI.fetch","location":"packages/graalvm/elide.runtime.intrinsics.js/-fetch-a-p-i/fetch.html","searchKeys":["fetch","abstract fun fetch(url: String): JsPromise<FetchResponse>","elide.runtime.intrinsics.js.FetchAPI.fetch"]},{"name":"abstract fun fetch(url: URL): JsPromise<FetchResponse>","description":"elide.runtime.intrinsics.js.FetchAPI.fetch","location":"packages/graalvm/elide.runtime.intrinsics.js/-fetch-a-p-i/fetch.html","searchKeys":["fetch","abstract fun fetch(url: URL): JsPromise<FetchResponse>","elide.runtime.intrinsics.js.FetchAPI.fetch"]},{"name":"abstract fun forEach(op: (MapLike.Entry<K, V>) -> Unit)","description":"elide.runtime.intrinsics.js.MapLike.forEach","location":"packages/graalvm/elide.runtime.intrinsics.js/-map-like/for-each.html","searchKeys":["forEach","abstract fun forEach(op: (MapLike.Entry<K, V>) -> Unit)","elide.runtime.intrinsics.js.MapLike.forEach"]},{"name":"abstract fun forRequest(request: HttpRequest<*>): Impl","description":"elide.runtime.intrinsics.js.FetchMutableRequest.RequestFactory.forRequest","location":"packages/graalvm/elide.runtime.intrinsics.js/-fetch-mutable-request/-request-factory/for-request.html","searchKeys":["forRequest","abstract fun forRequest(request: HttpRequest<*>): Impl","elide.runtime.intrinsics.js.FetchMutableRequest.RequestFactory.forRequest"]},{"name":"abstract fun from(previous: FetchHeaders): Impl","description":"elide.runtime.intrinsics.js.FetchHeaders.Factory.from","location":"packages/graalvm/elide.runtime.intrinsics.js/-fetch-headers/-factory/from.html","searchKeys":["from","abstract fun from(previous: FetchHeaders): Impl","elide.runtime.intrinsics.js.FetchHeaders.Factory.from"]},{"name":"abstract fun from(vararg pairs: Pair<String, String>): Impl","description":"elide.runtime.intrinsics.js.FetchHeaders.Factory.from","location":"packages/graalvm/elide.runtime.intrinsics.js/-fetch-headers/-factory/from.html","searchKeys":["from","abstract fun from(vararg pairs: Pair<String, String>): Impl","elide.runtime.intrinsics.js.FetchHeaders.Factory.from"]},{"name":"abstract fun fromMap(map: Map<String, String>): Impl","description":"elide.runtime.intrinsics.js.FetchHeaders.Factory.fromMap","location":"packages/graalvm/elide.runtime.intrinsics.js/-fetch-headers/-factory/from-map.html","searchKeys":["fromMap","abstract fun fromMap(map: Map<String, String>): Impl","elide.runtime.intrinsics.js.FetchHeaders.Factory.fromMap"]},{"name":"abstract fun fromMultiMap(map: Map<String, List<String>>): Impl","description":"elide.runtime.intrinsics.js.FetchHeaders.Factory.fromMultiMap","location":"packages/graalvm/elide.runtime.intrinsics.js/-fetch-headers/-factory/from-multi-map.html","searchKeys":["fromMultiMap","abstract fun fromMultiMap(map: Map<String, List<String>>): Impl","elide.runtime.intrinsics.js.FetchHeaders.Factory.fromMultiMap"]},{"name":"abstract fun fromPairs(pairs: Collection<Pair<String, String>>): Impl","description":"elide.runtime.intrinsics.js.FetchHeaders.Factory.fromPairs","location":"packages/graalvm/elide.runtime.intrinsics.js/-fetch-headers/-factory/from-pairs.html","searchKeys":["fromPairs","abstract fun fromPairs(pairs: Collection<Pair<String, String>>): Impl","elide.runtime.intrinsics.js.FetchHeaders.Factory.fromPairs"]},{"name":"abstract fun get(path: String, handler: Value)","description":"elide.runtime.intrinsics.js.express.ExpressApp.get","location":"packages/graalvm/elide.runtime.intrinsics.js.express/-express-app/get.html","searchKeys":["get","abstract fun get(path: String, handler: Value)","elide.runtime.intrinsics.js.express.ExpressApp.get"]},{"name":"abstract fun getAll(key: K): List<V>","description":"elide.runtime.intrinsics.js.MultiMapLike.getAll","location":"packages/graalvm/elide.runtime.intrinsics.js/-multi-map-like/get-all.html","searchKeys":["getAll","abstract fun getAll(key: K): List<V>","elide.runtime.intrinsics.js.MultiMapLike.getAll"]},{"name":"abstract fun getRandomValues(typedArray: Any)","description":"elide.runtime.intrinsics.js.RandomSource.getRandomValues","location":"packages/graalvm/elide.runtime.intrinsics.js/-random-source/get-random-values.html","searchKeys":["getRandomValues","abstract fun getRandomValues(typedArray: Any)","elide.runtime.intrinsics.js.RandomSource.getRandomValues"]},{"name":"abstract fun handle(method: String?, path: String?, handler: PolyglotValue)","description":"elide.runtime.intrinsics.server.http.HttpRouter.handle","location":"packages/graalvm/elide.runtime.intrinsics.server.http/-http-router/handle.html","searchKeys":["handle","abstract fun handle(method: String?, path: String?, handler: PolyglotValue)","elide.runtime.intrinsics.server.http.HttpRouter.handle"]},{"name":"abstract fun has(key: K): Boolean","description":"elide.runtime.intrinsics.js.MapLike.has","location":"packages/graalvm/elide.runtime.intrinsics.js/-map-like/has.html","searchKeys":["has","abstract fun has(key: K): Boolean","elide.runtime.intrinsics.js.MapLike.has"]},{"name":"abstract fun head(path: String, handler: Value)","description":"elide.runtime.intrinsics.js.express.ExpressApp.head","location":"packages/graalvm/elide.runtime.intrinsics.js.express/-express-app/head.html","searchKeys":["head","abstract fun head(path: String, handler: Value)","elide.runtime.intrinsics.js.express.ExpressApp.head"]},{"name":"abstract fun info(vararg args: Any?)","description":"elide.runtime.intrinsics.js.JavaScriptConsole.info","location":"packages/graalvm/elide.runtime.intrinsics.js/-java-script-console/info.html","searchKeys":["info","abstract fun info(vararg args: Any?)","elide.runtime.intrinsics.js.JavaScriptConsole.info"]},{"name":"abstract fun initialize(contextHandle: Context, phaserHandle: Phaser)","description":"elide.runtime.intrinsics.js.ServerAgent.initialize","location":"packages/graalvm/elide.runtime.intrinsics.js/-server-agent/initialize.html","searchKeys":["initialize","abstract fun initialize(contextHandle: Context, phaserHandle: Phaser)","elide.runtime.intrinsics.js.ServerAgent.initialize"]},{"name":"abstract fun install(bindings: GuestIntrinsic.MutableIntrinsicBindings)","description":"elide.runtime.intrinsics.GuestIntrinsic.install","location":"packages/graalvm/elide.runtime.intrinsics/-guest-intrinsic/install.html","searchKeys":["install","abstract fun install(bindings: GuestIntrinsic.MutableIntrinsicBindings)","elide.runtime.intrinsics.GuestIntrinsic.install"]},{"name":"abstract fun install(scope: EnginePlugin.InstallationScope, configuration: Config.() -> Unit): Instance","description":"elide.runtime.core.EnginePlugin.install","location":"packages/graalvm/elide.runtime.core/-engine-plugin/install.html","searchKeys":["install","abstract fun install(scope: EnginePlugin.InstallationScope, configuration: Config.() -> Unit): Instance","elide.runtime.core.EnginePlugin.install"]},{"name":"abstract fun installContextConfigurator(factory: (Builder) -> Unit)","description":"elide.runtime.gvm.ContextFactory.installContextConfigurator","location":"packages/graalvm/elide.runtime.gvm/-context-factory/install-context-configurator.html","searchKeys":["installContextConfigurator","abstract fun installContextConfigurator(factory: (Builder) -> Unit)","elide.runtime.gvm.ContextFactory.installContextConfigurator"]},{"name":"abstract fun installContextFactory(factory: (Engine) -> Builder)","description":"elide.runtime.gvm.ContextFactory.installContextFactory","location":"packages/graalvm/elide.runtime.gvm/-context-factory/install-context-factory.html","searchKeys":["installContextFactory","abstract fun installContextFactory(factory: (Engine) -> Builder)","elide.runtime.gvm.ContextFactory.installContextFactory"]},{"name":"abstract fun installContextSpawn(factory: (Builder) -> Context)","description":"elide.runtime.gvm.ContextFactory.installContextSpawn","location":"packages/graalvm/elide.runtime.gvm/-context-factory/install-context-spawn.html","searchKeys":["installContextSpawn","abstract fun installContextSpawn(factory: (Builder) -> Context)","elide.runtime.gvm.ContextFactory.installContextSpawn"]},{"name":"abstract fun invocation(): EnumSet<InvocationMode>","description":"elide.runtime.gvm.ExecutableScript.invocation","location":"packages/graalvm/elide.runtime.gvm/-executable-script/invocation.html","searchKeys":["invocation","abstract fun invocation(): EnumSet<InvocationMode>","elide.runtime.gvm.ExecutableScript.invocation"]},{"name":"abstract fun keys(): JsIterator<K>","description":"elide.runtime.intrinsics.js.MapLike.keys","location":"packages/graalvm/elide.runtime.intrinsics.js/-map-like/keys.html","searchKeys":["keys","abstract fun keys(): JsIterator<K>","elide.runtime.intrinsics.js.MapLike.keys"]},{"name":"abstract fun language(): GuestLanguage","description":"elide.runtime.gvm.ExecutableScript.language","location":"packages/graalvm/elide.runtime.gvm/-executable-script/language.html","searchKeys":["language","abstract fun language(): GuestLanguage","elide.runtime.gvm.ExecutableScript.language"]},{"name":"abstract fun language(): GuestLanguage","description":"elide.runtime.gvm.VMFacade.language","location":"packages/graalvm/elide.runtime.gvm/-v-m-facade/language.html","searchKeys":["language","abstract fun language(): GuestLanguage","elide.runtime.gvm.VMFacade.language"]},{"name":"abstract fun language(): GuestLanguage","description":"elide.runtime.intrinsics.GuestIntrinsic.language","location":"packages/graalvm/elide.runtime.intrinsics/-guest-intrinsic/language.html","searchKeys":["language","abstract fun language(): GuestLanguage","elide.runtime.intrinsics.GuestIntrinsic.language"]},{"name":"abstract fun leave()","description":"elide.runtime.core.PolyglotContext.leave","location":"packages/graalvm/elide.runtime.core/-polyglot-context/leave.html","searchKeys":["leave","abstract fun leave()","elide.runtime.core.PolyglotContext.leave"]},{"name":"abstract fun listen(port: Int, callback: Value? = null)","description":"elide.runtime.intrinsics.js.express.ExpressApp.listen","location":"packages/graalvm/elide.runtime.intrinsics.js.express/-express-app/listen.html","searchKeys":["listen","abstract fun listen(port: Int, callback: Value? = null)","elide.runtime.intrinsics.js.express.ExpressApp.listen"]},{"name":"abstract fun log(vararg args: Any?)","description":"elide.runtime.intrinsics.js.JavaScriptConsole.log","location":"packages/graalvm/elide.runtime.intrinsics.js/-java-script-console/log.html","searchKeys":["log","abstract fun log(vararg args: Any?)","elide.runtime.intrinsics.js.JavaScriptConsole.log"]},{"name":"abstract fun map(): ExecutableScript.SourceMap?","description":"elide.runtime.gvm.ExecutableScript.map","location":"packages/graalvm/elide.runtime.gvm/-executable-script/map.html","searchKeys":["map","abstract fun map(): ExecutableScript.SourceMap?","elide.runtime.gvm.ExecutableScript.map"]},{"name":"abstract fun of(value: String): UUIDValue","description":"elide.runtime.intrinsics.js.typed.UUID.Factory.of","location":"packages/graalvm/elide.runtime.intrinsics.js.typed/-u-u-i-d/-factory/of.html","searchKeys":["of","abstract fun of(value: String): UUIDValue","elide.runtime.intrinsics.js.typed.UUID.Factory.of"]},{"name":"abstract fun of(value: UUID): UUIDValue","description":"elide.runtime.intrinsics.js.typed.UUID.Factory.of","location":"packages/graalvm/elide.runtime.intrinsics.js.typed/-u-u-i-d/-factory/of.html","searchKeys":["of","abstract fun of(value: UUID): UUIDValue","elide.runtime.intrinsics.js.typed.UUID.Factory.of"]},{"name":"abstract fun of(value: UUIDValue): UUIDValue","description":"elide.runtime.intrinsics.js.typed.UUID.Factory.of","location":"packages/graalvm/elide.runtime.intrinsics.js.typed/-u-u-i-d/-factory/of.html","searchKeys":["of","abstract fun of(value: UUIDValue): UUIDValue","elide.runtime.intrinsics.js.typed.UUID.Factory.of"]},{"name":"abstract fun options(path: String, handler: Value)","description":"elide.runtime.intrinsics.js.express.ExpressApp.options","location":"packages/graalvm/elide.runtime.intrinsics.js.express/-express-app/options.html","searchKeys":["options","abstract fun options(path: String, handler: Value)","elide.runtime.intrinsics.js.express.ExpressApp.options"]},{"name":"abstract fun parse(source: Source): PolyglotValue","description":"elide.runtime.core.PolyglotContext.parse","location":"packages/graalvm/elide.runtime.core/-polyglot-context/parse.html","searchKeys":["parse","abstract fun parse(source: Source): PolyglotValue","elide.runtime.core.PolyglotContext.parse"]},{"name":"abstract fun parse(source: Source, context: PolyglotContext): PolyglotValue","description":"elide.runtime.core.GuestLanguageParser.parse","location":"packages/graalvm/elide.runtime.core/-guest-language-parser/parse.html","searchKeys":["parse","abstract fun parse(source: Source, context: PolyglotContext): PolyglotValue","elide.runtime.core.GuestLanguageParser.parse"]},{"name":"abstract fun post(path: String, handler: Value)","description":"elide.runtime.intrinsics.js.express.ExpressApp.post","location":"packages/graalvm/elide.runtime.intrinsics.js.express/-express-app/post.html","searchKeys":["post","abstract fun post(path: String, handler: Value)","elide.runtime.intrinsics.js.express.ExpressApp.post"]},{"name":"abstract fun put(path: String, handler: Value)","description":"elide.runtime.intrinsics.js.express.ExpressApp.put","location":"packages/graalvm/elide.runtime.intrinsics.js.express/-express-app/put.html","searchKeys":["put","abstract fun put(path: String, handler: Value)","elide.runtime.intrinsics.js.express.ExpressApp.put"]},{"name":"abstract fun random(): UUIDValue","description":"elide.runtime.intrinsics.js.typed.UUID.Factory.random","location":"packages/graalvm/elide.runtime.intrinsics.js.typed/-u-u-i-d/-factory/random.html","searchKeys":["random","abstract fun random(): UUIDValue","elide.runtime.intrinsics.js.typed.UUID.Factory.random"]},{"name":"abstract fun randomUUID(): UUID","description":"elide.runtime.intrinsics.js.RandomSource.randomUUID","location":"packages/graalvm/elide.runtime.intrinsics.js/-random-source/random-u-u-i-d.html","searchKeys":["randomUUID","abstract fun randomUUID(): UUID","elide.runtime.intrinsics.js.RandomSource.randomUUID"]},{"name":"abstract fun redirect(url: String, status: Int = Defaults.DEFAULT_STATUS_REDIRECT): Impl","description":"elide.runtime.intrinsics.js.FetchResponse.Factory.redirect","location":"packages/graalvm/elide.runtime.intrinsics.js/-fetch-response/-factory/redirect.html","searchKeys":["redirect","abstract fun redirect(url: String, status: Int = Defaults.DEFAULT_STATUS_REDIRECT): Impl","elide.runtime.intrinsics.js.FetchResponse.Factory.redirect"]},{"name":"abstract fun render(flatten: Boolean = true): Map<String, List<String>>","description":"elide.runtime.intrinsics.js.FetchHeaders.render","location":"packages/graalvm/elide.runtime.intrinsics.js/-fetch-headers/render.html","searchKeys":["render","abstract fun render(flatten: Boolean = true): Map<String, List<String>>","elide.runtime.intrinsics.js.FetchHeaders.render"]},{"name":"abstract fun request(): Request","description":"elide.runtime.gvm.RequestExecutionInputs.request","location":"packages/graalvm/elide.runtime.gvm/-request-execution-inputs/request.html","searchKeys":["request","abstract fun request(): Request","elide.runtime.gvm.RequestExecutionInputs.request"]},{"name":"abstract fun resolve(language: GuestLanguage): Set<GuestIntrinsic>","description":"elide.runtime.intrinsics.IntrinsicsResolver.resolve","location":"packages/graalvm/elide.runtime.intrinsics/-intrinsics-resolver/resolve.html","searchKeys":["resolve","abstract fun resolve(language: GuestLanguage): Set<GuestIntrinsic>","elide.runtime.intrinsics.IntrinsicsResolver.resolve"]},{"name":"abstract fun resolveConfig(): Config","description":"elide.runtime.gvm.internals.AbstractVMEngine.resolveConfig","location":"packages/graalvm/elide.runtime.gvm.internals/-abstract-v-m-engine/resolve-config.html","searchKeys":["resolveConfig","abstract fun resolveConfig(): Config","elide.runtime.gvm.internals.AbstractVMEngine.resolveConfig"]},{"name":"abstract fun revokeObjectURL(url: URL)","description":"elide.runtime.intrinsics.js.URL.URLStaticMethods.revokeObjectURL","location":"packages/graalvm/elide.runtime.intrinsics.js/-u-r-l/-u-r-l-static-methods/revoke-object-u-r-l.html","searchKeys":["revokeObjectURL","abstract fun revokeObjectURL(url: URL)","elide.runtime.intrinsics.js.URL.URLStaticMethods.revokeObjectURL"]},{"name":"abstract fun send(body: Value)","description":"elide.runtime.intrinsics.js.express.ExpressResponse.send","location":"packages/graalvm/elide.runtime.intrinsics.js.express/-express-response/send.html","searchKeys":["send","abstract fun send(body: Value)","elide.runtime.intrinsics.js.express.ExpressResponse.send"]},{"name":"abstract fun send(status: Int, body: PolyglotValue?)","description":"elide.runtime.intrinsics.server.http.HttpResponse.send","location":"packages/graalvm/elide.runtime.intrinsics.server.http/-http-response/send.html","searchKeys":["send","abstract fun send(status: Int, body: PolyglotValue?)","elide.runtime.intrinsics.server.http.HttpResponse.send"]},{"name":"abstract fun set(key: K, value: V)","description":"elide.runtime.intrinsics.js.MutableMapLike.set","location":"packages/graalvm/elide.runtime.intrinsics.js/-mutable-map-like/set.html","searchKeys":["set","abstract fun set(key: K, value: V)","elide.runtime.intrinsics.js.MutableMapLike.set"]},{"name":"abstract fun set(name: String, value: String)","description":"elide.runtime.intrinsics.js.FetchMutableHeaders.set","location":"packages/graalvm/elide.runtime.intrinsics.js/-fetch-mutable-headers/set.html","searchKeys":["set","abstract fun set(name: String, value: String)","elide.runtime.intrinsics.js.FetchMutableHeaders.set"]},{"name":"abstract fun sort()","description":"elide.runtime.intrinsics.js.MutableMapLike.sort","location":"packages/graalvm/elide.runtime.intrinsics.js/-mutable-map-like/sort.html","searchKeys":["sort","abstract fun sort()","elide.runtime.intrinsics.js.MutableMapLike.sort"]},{"name":"abstract fun source(): ExecutableScript.ScriptSource","description":"elide.runtime.gvm.ExecutableScript.source","location":"packages/graalvm/elide.runtime.gvm/-executable-script/source.html","searchKeys":["source","abstract fun source(): ExecutableScript.ScriptSource","elide.runtime.gvm.ExecutableScript.source"]},{"name":"abstract fun start()","description":"elide.runtime.intrinsics.server.http.HttpServerEngine.start","location":"packages/graalvm/elide.runtime.intrinsics.server.http/-http-server-engine/start.html","searchKeys":["start","abstract fun start()","elide.runtime.intrinsics.server.http.HttpServerEngine.start"]},{"name":"abstract fun state(): ExecutableScript.State","description":"elide.runtime.gvm.ExecutableScript.state","location":"packages/graalvm/elide.runtime.gvm/-executable-script/state.html","searchKeys":["state","abstract fun state(): ExecutableScript.State","elide.runtime.gvm.ExecutableScript.state"]},{"name":"abstract fun then(onFulfilled: (T) -> Unit): JsPromise<T>","description":"elide.runtime.intrinsics.js.JsPromise.then","location":"packages/graalvm/elide.runtime.intrinsics.js/-js-promise/then.html","searchKeys":["then","abstract fun then(onFulfilled: (T) -> Unit): JsPromise<T>","elide.runtime.intrinsics.js.JsPromise.then"]},{"name":"abstract fun toJSON(): String","description":"elide.runtime.intrinsics.js.URL.toJSON","location":"packages/graalvm/elide.runtime.intrinsics.js/-u-r-l/to-j-s-o-n.html","searchKeys":["toJSON","abstract fun toJSON(): String","elide.runtime.intrinsics.js.URL.toJSON"]},{"name":"abstract fun type(): ExecutableScript.ScriptType","description":"elide.runtime.gvm.ExecutableScript.type","location":"packages/graalvm/elide.runtime.gvm/-executable-script/type.html","searchKeys":["type","abstract fun type(): ExecutableScript.ScriptType","elide.runtime.gvm.ExecutableScript.type"]},{"name":"abstract fun use(handler: Value)","description":"elide.runtime.intrinsics.js.express.ExpressApp.use","location":"packages/graalvm/elide.runtime.intrinsics.js.express/-express-app/use.html","searchKeys":["use","abstract fun use(handler: Value)","elide.runtime.intrinsics.js.express.ExpressApp.use"]},{"name":"abstract fun use(path: String, handler: Value)","description":"elide.runtime.intrinsics.js.express.ExpressApp.use","location":"packages/graalvm/elide.runtime.intrinsics.js.express/-express-app/use.html","searchKeys":["use","abstract fun use(path: String, handler: Value)","elide.runtime.intrinsics.js.express.ExpressApp.use"]},{"name":"abstract fun value(): String?","description":"elide.runtime.gvm.internals.VMProperty.value","location":"packages/graalvm/elide.runtime.gvm.internals/-v-m-property/value.html","searchKeys":["value","abstract fun value(): String?","elide.runtime.gvm.internals.VMProperty.value"]},{"name":"abstract fun values(): JsIterator<V>","description":"elide.runtime.intrinsics.js.MapLike.values","location":"packages/graalvm/elide.runtime.intrinsics.js/-map-like/values.html","searchKeys":["values","abstract fun values(): JsIterator<V>","elide.runtime.intrinsics.js.MapLike.values"]},{"name":"abstract fun warn(vararg args: Any?)","description":"elide.runtime.intrinsics.js.JavaScriptConsole.warn","location":"packages/graalvm/elide.runtime.intrinsics.js/-java-script-console/warn.html","searchKeys":["warn","abstract fun warn(vararg args: Any?)","elide.runtime.intrinsics.js.JavaScriptConsole.warn"]},{"name":"abstract fun wrap(buffer: ByteBuffer): Impl","description":"elide.runtime.intrinsics.js.ReadableStream.Factory.wrap","location":"packages/graalvm/elide.runtime.intrinsics.js/-readable-stream/-factory/wrap.html","searchKeys":["wrap","abstract fun wrap(buffer: ByteBuffer): Impl","elide.runtime.intrinsics.js.ReadableStream.Factory.wrap"]},{"name":"abstract fun wrap(bytes: ByteArray): Impl","description":"elide.runtime.intrinsics.js.ReadableStream.Factory.wrap","location":"packages/graalvm/elide.runtime.intrinsics.js/-readable-stream/-factory/wrap.html","searchKeys":["wrap","abstract fun wrap(bytes: ByteArray): Impl","elide.runtime.intrinsics.js.ReadableStream.Factory.wrap"]},{"name":"abstract fun wrap(input: InputStream): Impl","description":"elide.runtime.intrinsics.js.ReadableStream.Factory.wrap","location":"packages/graalvm/elide.runtime.intrinsics.js/-readable-stream/-factory/wrap.html","searchKeys":["wrap","abstract fun wrap(input: InputStream): Impl","elide.runtime.intrinsics.js.ReadableStream.Factory.wrap"]},{"name":"abstract fun wrap(reader: Reader): Impl","description":"elide.runtime.intrinsics.js.ReadableStream.Factory.wrap","location":"packages/graalvm/elide.runtime.intrinsics.js/-readable-stream/-factory/wrap.html","searchKeys":["wrap","abstract fun wrap(reader: Reader): Impl","elide.runtime.intrinsics.js.ReadableStream.Factory.wrap"]},{"name":"abstract operator fun <T> get(element: PolyglotContextElement<T>): T?","description":"elide.runtime.core.PolyglotContext.get","location":"packages/graalvm/elide.runtime.core/-polyglot-context/get.html","searchKeys":["get","abstract operator fun <T> get(element: PolyglotContextElement<T>): T?","elide.runtime.core.PolyglotContext.get"]},{"name":"abstract operator fun <T> set(element: PolyglotContextElement<T>, value: T): Boolean","description":"elide.runtime.core.PolyglotContext.set","location":"packages/graalvm/elide.runtime.core/-polyglot-context/set.html","searchKeys":["set","abstract operator fun <T> set(element: PolyglotContextElement<T>, value: T): Boolean","elide.runtime.core.PolyglotContext.set"]},{"name":"abstract operator override fun get(key: K): V?","description":"elide.runtime.intrinsics.js.MapLike.get","location":"packages/graalvm/elide.runtime.intrinsics.js/-map-like/get.html","searchKeys":["get","abstract operator override fun get(key: K): V?","elide.runtime.intrinsics.js.MapLike.get"]},{"name":"abstract operator override fun next(): JsIterator.JsIteratorResult<T>","description":"elide.runtime.intrinsics.js.JsIterator.next","location":"packages/graalvm/elide.runtime.intrinsics.js/-js-iterator/next.html","searchKeys":["next","abstract operator override fun next(): JsIterator.JsIteratorResult<T>","elide.runtime.intrinsics.js.JsIterator.next"]},{"name":"abstract override fun getDescription(): String","description":"elide.runtime.feature.FrameworkFeature.getDescription","location":"packages/graalvm/elide.runtime.feature/-framework-feature/get-description.html","searchKeys":["getDescription","abstract override fun getDescription(): String","elide.runtime.feature.FrameworkFeature.getDescription"]},{"name":"abstract override fun toString(): String","description":"elide.runtime.gvm.internals.intrinsics.js.struct.map.BaseJsMap.toString","location":"packages/graalvm/elide.runtime.gvm.internals.intrinsics.js.struct.map/-base-js-map/to-string.html","searchKeys":["toString","abstract override fun toString(): String","elide.runtime.gvm.internals.intrinsics.js.struct.map.BaseJsMap.toString"]},{"name":"abstract override fun toString(): String","description":"elide.runtime.intrinsics.js.MapLike.toString","location":"packages/graalvm/elide.runtime.intrinsics.js/-map-like/to-string.html","searchKeys":["toString","abstract override fun toString(): String","elide.runtime.intrinsics.js.MapLike.toString"]},{"name":"abstract override fun toString(): String","description":"elide.runtime.intrinsics.js.URL.toString","location":"packages/graalvm/elide.runtime.intrinsics.js/-u-r-l/to-string.html","searchKeys":["toString","abstract override fun toString(): String","elide.runtime.intrinsics.js.URL.toString"]},{"name":"abstract override val message: String","description":"elide.runtime.intrinsics.js.err.Error.message","location":"packages/graalvm/elide.runtime.intrinsics.js.err/-error/message.html","searchKeys":["message","abstract override val message: String","elide.runtime.intrinsics.js.err.Error.message"]},{"name":"abstract override val symbol: String","description":"elide.runtime.intrinsics.Symbol.symbol","location":"packages/graalvm/elide.runtime.intrinsics/-symbol/symbol.html","searchKeys":["symbol","abstract override val symbol: String","elide.runtime.intrinsics.Symbol.symbol"]},{"name":"abstract override var hash: String","description":"elide.runtime.intrinsics.js.MutableURL.hash","location":"packages/graalvm/elide.runtime.intrinsics.js/-mutable-u-r-l/hash.html","searchKeys":["hash","abstract override var hash: String","elide.runtime.intrinsics.js.MutableURL.hash"]},{"name":"abstract override var headers: FetchHeaders","description":"elide.runtime.intrinsics.js.FetchMutableRequest.headers","location":"packages/graalvm/elide.runtime.intrinsics.js/-fetch-mutable-request/headers.html","searchKeys":["headers","abstract override var headers: FetchHeaders","elide.runtime.intrinsics.js.FetchMutableRequest.headers"]},{"name":"abstract override var headers: FetchHeaders","description":"elide.runtime.intrinsics.js.FetchMutableResponse.headers","location":"packages/graalvm/elide.runtime.intrinsics.js/-fetch-mutable-response/headers.html","searchKeys":["headers","abstract override var headers: FetchHeaders","elide.runtime.intrinsics.js.FetchMutableResponse.headers"]},{"name":"abstract override var host: String","description":"elide.runtime.intrinsics.js.MutableURL.host","location":"packages/graalvm/elide.runtime.intrinsics.js/-mutable-u-r-l/host.html","searchKeys":["host","abstract override var host: String","elide.runtime.intrinsics.js.MutableURL.host"]},{"name":"abstract override var hostname: String","description":"elide.runtime.intrinsics.js.MutableURL.hostname","location":"packages/graalvm/elide.runtime.intrinsics.js/-mutable-u-r-l/hostname.html","searchKeys":["hostname","abstract override var hostname: String","elide.runtime.intrinsics.js.MutableURL.hostname"]},{"name":"abstract override var href: String","description":"elide.runtime.intrinsics.js.MutableURL.href","location":"packages/graalvm/elide.runtime.intrinsics.js/-mutable-u-r-l/href.html","searchKeys":["href","abstract override var href: String","elide.runtime.intrinsics.js.MutableURL.href"]},{"name":"abstract override var method: String","description":"elide.runtime.intrinsics.js.FetchMutableRequest.method","location":"packages/graalvm/elide.runtime.intrinsics.js/-fetch-mutable-request/method.html","searchKeys":["method","abstract override var method: String","elide.runtime.intrinsics.js.FetchMutableRequest.method"]},{"name":"abstract override var password: String","description":"elide.runtime.intrinsics.js.MutableURL.password","location":"packages/graalvm/elide.runtime.intrinsics.js/-mutable-u-r-l/password.html","searchKeys":["password","abstract override var password: String","elide.runtime.intrinsics.js.MutableURL.password"]},{"name":"abstract override var pathname: String","description":"elide.runtime.intrinsics.js.MutableURL.pathname","location":"packages/graalvm/elide.runtime.intrinsics.js/-mutable-u-r-l/pathname.html","searchKeys":["pathname","abstract override var pathname: String","elide.runtime.intrinsics.js.MutableURL.pathname"]},{"name":"abstract override var port: Int?","description":"elide.runtime.intrinsics.js.MutableURL.port","location":"packages/graalvm/elide.runtime.intrinsics.js/-mutable-u-r-l/port.html","searchKeys":["port","abstract override var port: Int?","elide.runtime.intrinsics.js.MutableURL.port"]},{"name":"abstract override var protocol: String","description":"elide.runtime.intrinsics.js.MutableURL.protocol","location":"packages/graalvm/elide.runtime.intrinsics.js/-mutable-u-r-l/protocol.html","searchKeys":["protocol","abstract override var protocol: String","elide.runtime.intrinsics.js.MutableURL.protocol"]},{"name":"abstract override var search: String","description":"elide.runtime.intrinsics.js.MutableURL.search","location":"packages/graalvm/elide.runtime.intrinsics.js/-mutable-u-r-l/search.html","searchKeys":["search","abstract override var search: String","elide.runtime.intrinsics.js.MutableURL.search"]},{"name":"abstract override var status: Int","description":"elide.runtime.intrinsics.js.FetchMutableResponse.status","location":"packages/graalvm/elide.runtime.intrinsics.js/-fetch-mutable-response/status.html","searchKeys":["status","abstract override var status: Int","elide.runtime.intrinsics.js.FetchMutableResponse.status"]},{"name":"abstract override var statusText: String","description":"elide.runtime.intrinsics.js.FetchMutableResponse.statusText","location":"packages/graalvm/elide.runtime.intrinsics.js/-fetch-mutable-response/status-text.html","searchKeys":["statusText","abstract override var statusText: String","elide.runtime.intrinsics.js.FetchMutableResponse.statusText"]},{"name":"abstract override var url: String","description":"elide.runtime.intrinsics.js.FetchMutableRequest.url","location":"packages/graalvm/elide.runtime.intrinsics.js/-fetch-mutable-request/url.html","searchKeys":["url","abstract override var url: String","elide.runtime.intrinsics.js.FetchMutableRequest.url"]},{"name":"abstract override var url: String","description":"elide.runtime.intrinsics.js.FetchMutableResponse.url","location":"packages/graalvm/elide.runtime.intrinsics.js/-fetch-mutable-response/url.html","searchKeys":["url","abstract override var url: String","elide.runtime.intrinsics.js.FetchMutableResponse.url"]},{"name":"abstract override var username: String","description":"elide.runtime.intrinsics.js.MutableURL.username","location":"packages/graalvm/elide.runtime.intrinsics.js/-mutable-u-r-l/username.html","searchKeys":["username","abstract override var username: String","elide.runtime.intrinsics.js.MutableURL.username"]},{"name":"abstract suspend fun <R> execute(script: ExecutableScript, returnType: Class<R>, args: ExecutionInputs?): R?","description":"elide.runtime.gvm.VMFacade.execute","location":"packages/graalvm/elide.runtime.gvm/-v-m-facade/execute.html","searchKeys":["execute","abstract suspend fun <R> execute(script: ExecutableScript, returnType: Class<R>, args: ExecutionInputs?): R?","elide.runtime.gvm.VMFacade.execute"]},{"name":"abstract suspend fun <R> executeAsync(script: ExecutableScript, returnType: Class<R>, args: ExecutionInputs?): Deferred<R?>","description":"elide.runtime.gvm.VMFacade.executeAsync","location":"packages/graalvm/elide.runtime.gvm/-v-m-facade/execute-async.html","searchKeys":["executeAsync","abstract suspend fun <R> executeAsync(script: ExecutableScript, returnType: Class<R>, args: ExecutionInputs?): Deferred<R?>","elide.runtime.gvm.VMFacade.executeAsync"]},{"name":"abstract suspend fun executeRender(script: ExecutableScript, request: HttpRequest<*>, context: Any?, receiver: StreamingReceiver): Job","description":"elide.runtime.gvm.VMFacade.executeRender","location":"packages/graalvm/elide.runtime.gvm/-v-m-facade/execute-render.html","searchKeys":["executeRender","abstract suspend fun executeRender(script: ExecutableScript, request: HttpRequest<*>, context: Any?, receiver: StreamingReceiver): Job","elide.runtime.gvm.VMFacade.executeRender"]},{"name":"abstract suspend fun executeStreaming(script: ExecutableScript, args: ExecutionInputs, receiver: StreamingReceiver): Job","description":"elide.runtime.gvm.VMFacade.executeStreaming","location":"packages/graalvm/elide.runtime.gvm/-v-m-facade/execute-streaming.html","searchKeys":["executeStreaming","abstract suspend fun executeStreaming(script: ExecutableScript, args: ExecutionInputs, receiver: StreamingReceiver): Job","elide.runtime.gvm.VMFacade.executeStreaming"]},{"name":"abstract suspend fun prewarmScript(script: ExecutableScript)","description":"elide.runtime.gvm.VMFacade.prewarmScript","location":"packages/graalvm/elide.runtime.gvm/-v-m-facade/prewarm-script.html","searchKeys":["prewarmScript","abstract suspend fun prewarmScript(script: ExecutableScript)","elide.runtime.gvm.VMFacade.prewarmScript"]},{"name":"abstract val algorithm: Any","description":"elide.runtime.intrinsics.js.CryptoKey.algorithm","location":"packages/graalvm/elide.runtime.intrinsics.js/-crypto-key/algorithm.html","searchKeys":["algorithm","abstract val algorithm: Any","elide.runtime.intrinsics.js.CryptoKey.algorithm"]},{"name":"abstract val asString: String","description":"elide.runtime.intrinsics.js.typed.UUID.asString","location":"packages/graalvm/elide.runtime.intrinsics.js.typed/-u-u-i-d/as-string.html","searchKeys":["asString","abstract val asString: String","elide.runtime.intrinsics.js.typed.UUID.asString"]},{"name":"abstract val body: ReadableStream?","description":"elide.runtime.intrinsics.js.FetchRequest.body","location":"packages/graalvm/elide.runtime.intrinsics.js/-fetch-request/body.html","searchKeys":["body","abstract val body: ReadableStream?","elide.runtime.intrinsics.js.FetchRequest.body"]},{"name":"abstract val body: ReadableStream?","description":"elide.runtime.intrinsics.js.FetchResponse.body","location":"packages/graalvm/elide.runtime.intrinsics.js/-fetch-response/body.html","searchKeys":["body","abstract val body: ReadableStream?","elide.runtime.intrinsics.js.FetchResponse.body"]},{"name":"abstract val bodyUsed: Boolean","description":"elide.runtime.intrinsics.js.FetchRequest.bodyUsed","location":"packages/graalvm/elide.runtime.intrinsics.js/-fetch-request/body-used.html","searchKeys":["bodyUsed","abstract val bodyUsed: Boolean","elide.runtime.intrinsics.js.FetchRequest.bodyUsed"]},{"name":"abstract val bodyUsed: Boolean","description":"elide.runtime.intrinsics.js.FetchResponse.bodyUsed","location":"packages/graalvm/elide.runtime.intrinsics.js/-fetch-response/body-used.html","searchKeys":["bodyUsed","abstract val bodyUsed: Boolean","elide.runtime.intrinsics.js.FetchResponse.bodyUsed"]},{"name":"abstract val config: HttpServerConfig","description":"elide.runtime.intrinsics.server.http.HttpServerEngine.config","location":"packages/graalvm/elide.runtime.intrinsics.server.http/-http-server-engine/config.html","searchKeys":["config","abstract val config: HttpServerConfig","elide.runtime.intrinsics.server.http.HttpServerEngine.config"]},{"name":"abstract val configuration: PolyglotEngineConfiguration","description":"elide.runtime.core.EnginePlugin.InstallationScope.configuration","location":"packages/graalvm/elide.runtime.core/-engine-plugin/-installation-scope/configuration.html","searchKeys":["configuration","abstract val configuration: PolyglotEngineConfiguration","elide.runtime.core.EnginePlugin.InstallationScope.configuration"]},{"name":"abstract val destination: String","description":"elide.runtime.intrinsics.js.FetchRequest.destination","location":"packages/graalvm/elide.runtime.intrinsics.js/-fetch-request/destination.html","searchKeys":["destination","abstract val destination: String","elide.runtime.intrinsics.js.FetchRequest.destination"]},{"name":"abstract val engine: String","description":"elide.runtime.gvm.GuestLanguage.engine","location":"packages/graalvm/elide.runtime.gvm/-guest-language/engine.html","searchKeys":["engine","abstract val engine: String","elide.runtime.gvm.GuestLanguage.engine"]},{"name":"abstract val extractable: Boolean","description":"elide.runtime.intrinsics.js.CryptoKey.extractable","location":"packages/graalvm/elide.runtime.intrinsics.js/-crypto-key/extractable.html","searchKeys":["extractable","abstract val extractable: Boolean","elide.runtime.intrinsics.js.CryptoKey.extractable"]},{"name":"abstract val hash: String","description":"elide.runtime.intrinsics.js.URL.hash","location":"packages/graalvm/elide.runtime.intrinsics.js/-u-r-l/hash.html","searchKeys":["hash","abstract val hash: String","elide.runtime.intrinsics.js.URL.hash"]},{"name":"abstract val headers: FetchHeaders","description":"elide.runtime.intrinsics.js.FetchRequest.headers","location":"packages/graalvm/elide.runtime.intrinsics.js/-fetch-request/headers.html","searchKeys":["headers","abstract val headers: FetchHeaders","elide.runtime.intrinsics.js.FetchRequest.headers"]},{"name":"abstract val headers: FetchHeaders","description":"elide.runtime.intrinsics.js.FetchResponse.headers","location":"packages/graalvm/elide.runtime.intrinsics.js/-fetch-response/headers.html","searchKeys":["headers","abstract val headers: FetchHeaders","elide.runtime.intrinsics.js.FetchResponse.headers"]},{"name":"abstract val host: String","description":"elide.runtime.intrinsics.js.URL.host","location":"packages/graalvm/elide.runtime.intrinsics.js/-u-r-l/host.html","searchKeys":["host","abstract val host: String","elide.runtime.intrinsics.js.URL.host"]},{"name":"abstract val hostRuntime: HostRuntime","description":"elide.runtime.core.PolyglotEngineConfiguration.hostRuntime","location":"packages/graalvm/elide.runtime.core/-polyglot-engine-configuration/host-runtime.html","searchKeys":["hostRuntime","abstract val hostRuntime: HostRuntime","elide.runtime.core.PolyglotEngineConfiguration.hostRuntime"]},{"name":"abstract val hostname: String","description":"elide.runtime.intrinsics.js.URL.hostname","location":"packages/graalvm/elide.runtime.intrinsics.js/-u-r-l/hostname.html","searchKeys":["hostname","abstract val hostname: String","elide.runtime.intrinsics.js.URL.hostname"]},{"name":"abstract val href: String","description":"elide.runtime.intrinsics.js.URL.href","location":"packages/graalvm/elide.runtime.intrinsics.js/-u-r-l/href.html","searchKeys":["href","abstract val href: String","elide.runtime.intrinsics.js.URL.href"]},{"name":"abstract val key: EnginePlugin.Key<Instance>","description":"elide.runtime.core.EnginePlugin.key","location":"packages/graalvm/elide.runtime.core/-engine-plugin/key.html","searchKeys":["key","abstract val key: EnginePlugin.Key<Instance>","elide.runtime.core.EnginePlugin.key"]},{"name":"abstract val key: K","description":"elide.runtime.intrinsics.js.MapLike.Entry.key","location":"packages/graalvm/elide.runtime.intrinsics.js/-map-like/-entry/key.html","searchKeys":["key","abstract val key: K","elide.runtime.intrinsics.js.MapLike.Entry.key"]},{"name":"abstract val label: String","description":"elide.runtime.gvm.GuestLanguage.label","location":"packages/graalvm/elide.runtime.gvm/-guest-language/label.html","searchKeys":["label","abstract val label: String","elide.runtime.gvm.GuestLanguage.label"]},{"name":"abstract val languageId: String","description":"elide.runtime.core.GuestLanguage.languageId","location":"packages/graalvm/elide.runtime.core/-guest-language/language-id.html","searchKeys":["languageId","abstract val languageId: String","elide.runtime.core.GuestLanguage.languageId"]},{"name":"abstract val lifecycle: EngineLifecycle","description":"elide.runtime.core.EnginePlugin.InstallationScope.lifecycle","location":"packages/graalvm/elide.runtime.core/-engine-plugin/-installation-scope/lifecycle.html","searchKeys":["lifecycle","abstract val lifecycle: EngineLifecycle","elide.runtime.core.EnginePlugin.InstallationScope.lifecycle"]},{"name":"abstract val method: HttpMethod","description":"elide.runtime.intrinsics.server.http.HttpRequest.method","location":"packages/graalvm/elide.runtime.intrinsics.server.http/-http-request/method.html","searchKeys":["method","abstract val method: HttpMethod","elide.runtime.intrinsics.server.http.HttpRequest.method"]},{"name":"abstract val name: String","description":"elide.runtime.core.HostRuntime.name","location":"packages/graalvm/elide.runtime.core/-host-runtime/name.html","searchKeys":["name","abstract val name: String","elide.runtime.core.HostRuntime.name"]},{"name":"abstract val name: String","description":"elide.runtime.intrinsics.js.err.Error.name","location":"packages/graalvm/elide.runtime.intrinsics.js.err/-error/name.html","searchKeys":["name","abstract val name: String","elide.runtime.intrinsics.js.err.Error.name"]},{"name":"abstract val name: String","description":"elide.runtime.plugins.env.EnvConfig.EnvVar.name","location":"packages/graalvm/elide.runtime.plugins.env/-env-config/-env-var/name.html","searchKeys":["name","abstract val name: String","elide.runtime.plugins.env.EnvConfig.EnvVar.name"]},{"name":"abstract val origin: String","description":"elide.runtime.intrinsics.js.URL.origin","location":"packages/graalvm/elide.runtime.intrinsics.js/-u-r-l/origin.html","searchKeys":["origin","abstract val origin: String","elide.runtime.intrinsics.js.URL.origin"]},{"name":"abstract val params: Value","description":"elide.runtime.intrinsics.js.express.ExpressRequest.params","location":"packages/graalvm/elide.runtime.intrinsics.js.express/-express-request/params.html","searchKeys":["params","abstract val params: Value","elide.runtime.intrinsics.js.express.ExpressRequest.params"]},{"name":"abstract val password: String","description":"elide.runtime.intrinsics.js.URL.password","location":"packages/graalvm/elide.runtime.intrinsics.js/-u-r-l/password.html","searchKeys":["password","abstract val password: String","elide.runtime.intrinsics.js.URL.password"]},{"name":"abstract val pathname: String","description":"elide.runtime.intrinsics.js.URL.pathname","location":"packages/graalvm/elide.runtime.intrinsics.js/-u-r-l/pathname.html","searchKeys":["pathname","abstract val pathname: String","elide.runtime.intrinsics.js.URL.pathname"]},{"name":"abstract val port: Int?","description":"elide.runtime.intrinsics.js.URL.port","location":"packages/graalvm/elide.runtime.intrinsics.js/-u-r-l/port.html","searchKeys":["port","abstract val port: Int?","elide.runtime.intrinsics.js.URL.port"]},{"name":"abstract val protocol: String","description":"elide.runtime.intrinsics.js.URL.protocol","location":"packages/graalvm/elide.runtime.intrinsics.js/-u-r-l/protocol.html","searchKeys":["protocol","abstract val protocol: String","elide.runtime.intrinsics.js.URL.protocol"]},{"name":"abstract val router: HttpRouter","description":"elide.runtime.intrinsics.server.http.HttpServerEngine.router","location":"packages/graalvm/elide.runtime.intrinsics.server.http/-http-server-engine/router.html","searchKeys":["router","abstract val router: HttpRouter","elide.runtime.intrinsics.server.http.HttpServerEngine.router"]},{"name":"abstract val running: Boolean","description":"elide.runtime.intrinsics.server.http.HttpServerEngine.running","location":"packages/graalvm/elide.runtime.intrinsics.server.http/-http-server-engine/running.html","searchKeys":["running","abstract val running: Boolean","elide.runtime.intrinsics.server.http.HttpServerEngine.running"]},{"name":"abstract val search: String","description":"elide.runtime.intrinsics.js.URL.search","location":"packages/graalvm/elide.runtime.intrinsics.js/-u-r-l/search.html","searchKeys":["search","abstract val search: String","elide.runtime.intrinsics.js.URL.search"]},{"name":"abstract val searchParams: URLSearchParams","description":"elide.runtime.intrinsics.js.URL.searchParams","location":"packages/graalvm/elide.runtime.intrinsics.js/-u-r-l/search-params.html","searchKeys":["searchParams","abstract val searchParams: URLSearchParams","elide.runtime.intrinsics.js.URL.searchParams"]},{"name":"abstract val source: EnvConfig.EnvVariableSource","description":"elide.runtime.plugins.env.EnvConfig.EnvVar.source","location":"packages/graalvm/elide.runtime.plugins.env/-env-config/-env-var/source.html","searchKeys":["source","abstract val source: EnvConfig.EnvVariableSource","elide.runtime.plugins.env.EnvConfig.EnvVar.source"]},{"name":"abstract val subtle: SubtleCrypto","description":"elide.runtime.intrinsics.js.Crypto.subtle","location":"packages/graalvm/elide.runtime.intrinsics.js/-crypto/subtle.html","searchKeys":["subtle","abstract val subtle: SubtleCrypto","elide.runtime.intrinsics.js.Crypto.subtle"]},{"name":"abstract val symbol: String","description":"elide.runtime.gvm.GuestLanguage.symbol","location":"packages/graalvm/elide.runtime.gvm/-guest-language/symbol.html","searchKeys":["symbol","abstract val symbol: String","elide.runtime.gvm.GuestLanguage.symbol"]},{"name":"abstract val symbol: String","description":"elide.runtime.gvm.internals.VMProperty.symbol","location":"packages/graalvm/elide.runtime.gvm.internals/-v-m-property/symbol.html","searchKeys":["symbol","abstract val symbol: String","elide.runtime.gvm.internals.VMProperty.symbol"]},{"name":"abstract val type: String","description":"elide.runtime.intrinsics.js.CryptoKey.type","location":"packages/graalvm/elide.runtime.intrinsics.js/-crypto-key/type.html","searchKeys":["type","abstract val type: String","elide.runtime.intrinsics.js.CryptoKey.type"]},{"name":"abstract val uri: String","description":"elide.runtime.intrinsics.server.http.HttpRequest.uri","location":"packages/graalvm/elide.runtime.intrinsics.server.http/-http-request/uri.html","searchKeys":["uri","abstract val uri: String","elide.runtime.intrinsics.server.http.HttpRequest.uri"]},{"name":"abstract val url: String","description":"elide.runtime.intrinsics.js.FetchRequest.url","location":"packages/graalvm/elide.runtime.intrinsics.js/-fetch-request/url.html","searchKeys":["url","abstract val url: String","elide.runtime.intrinsics.js.FetchRequest.url"]},{"name":"abstract val usages: Array<String>","description":"elide.runtime.intrinsics.js.CryptoKey.usages","location":"packages/graalvm/elide.runtime.intrinsics.js/-crypto-key/usages.html","searchKeys":["usages","abstract val usages: Array<String>","elide.runtime.intrinsics.js.CryptoKey.usages"]},{"name":"abstract val username: String","description":"elide.runtime.intrinsics.js.URL.username","location":"packages/graalvm/elide.runtime.intrinsics.js/-u-r-l/username.html","searchKeys":["username","abstract val username: String","elide.runtime.intrinsics.js.URL.username"]},{"name":"abstract val value: String?","description":"elide.runtime.plugins.env.EnvConfig.EnvVar.value","location":"packages/graalvm/elide.runtime.plugins.env/-env-config/-env-var/value.html","searchKeys":["value","abstract val value: String?","elide.runtime.plugins.env.EnvConfig.EnvVar.value"]},{"name":"abstract val value: V","description":"elide.runtime.intrinsics.js.MapLike.Entry.value","location":"packages/graalvm/elide.runtime.intrinsics.js/-map-like/-entry/value.html","searchKeys":["value","abstract val value: V","elide.runtime.intrinsics.js.MapLike.Entry.value"]},{"name":"abstract val variant: String?","description":"elide.runtime.core.HostRuntime.variant","location":"packages/graalvm/elide.runtime.core/-host-runtime/variant.html","searchKeys":["variant","abstract val variant: String?","elide.runtime.core.HostRuntime.variant"]},{"name":"abstract val version: Version?","description":"elide.runtime.core.HostRuntime.version","location":"packages/graalvm/elide.runtime.core/-host-runtime/version.html","searchKeys":["version","abstract val version: Version?","elide.runtime.core.HostRuntime.version"]},{"name":"annotation class DelicateElideApi","description":"elide.runtime.core.DelicateElideApi","location":"packages/graalvm/elide.runtime.core/-delicate-elide-api/index.html","searchKeys":["DelicateElideApi","annotation class DelicateElideApi","elide.runtime.core.DelicateElideApi"]},{"name":"annotation class GuestRuntime(val engine: String)","description":"elide.runtime.gvm.api.GuestRuntime","location":"packages/graalvm/elide.runtime.gvm.api/-guest-runtime/index.html","searchKeys":["GuestRuntime","annotation class GuestRuntime(val engine: String)","elide.runtime.gvm.api.GuestRuntime"]},{"name":"class AccessResponse","description":"elide.runtime.gvm.internals.vfs.AccessResponse","location":"packages/graalvm/elide.runtime.gvm.internals.vfs/-access-response/index.html","searchKeys":["AccessResponse","class AccessResponse","elide.runtime.gvm.internals.vfs.AccessResponse"]},{"name":"class AppEnvConfig","description":"elide.runtime.plugins.env.EnvConfig.AppEnvConfig","location":"packages/graalvm/elide.runtime.plugins.env/-env-config/-app-env-config/index.html","searchKeys":["AppEnvConfig","class AppEnvConfig","elide.runtime.plugins.env.EnvConfig.AppEnvConfig"]},{"name":"class Debug","description":"elide.runtime.plugins.debug.Debug","location":"packages/graalvm/elide.runtime.plugins.debug/-debug/index.html","searchKeys":["Debug","class Debug","elide.runtime.plugins.debug.Debug"]},{"name":"class DebugAdapterConfig","description":"elide.runtime.plugins.debug.DebugConfig.DebugAdapterConfig","location":"packages/graalvm/elide.runtime.plugins.debug/-debug-config/-debug-adapter-config/index.html","searchKeys":["DebugAdapterConfig","class DebugAdapterConfig","elide.runtime.plugins.debug.DebugConfig.DebugAdapterConfig"]},{"name":"class DebugConfig","description":"elide.runtime.plugins.debug.DebugConfig","location":"packages/graalvm/elide.runtime.plugins.debug/-debug-config/index.html","searchKeys":["DebugConfig","class DebugConfig","elide.runtime.plugins.debug.DebugConfig"]},{"name":"class EnvConfig","description":"elide.runtime.plugins.env.EnvConfig","location":"packages/graalvm/elide.runtime.plugins.env/-env-config/index.html","searchKeys":["EnvConfig","class EnvConfig","elide.runtime.plugins.env.EnvConfig"]},{"name":"class Environment","description":"elide.runtime.plugins.env.Environment","location":"packages/graalvm/elide.runtime.plugins.env/-environment/index.html","searchKeys":["Environment","class Environment","elide.runtime.plugins.env.Environment"]},{"name":"class GraalVMRuntime(val version: Version? = resolveVersion(), val variant: String? = resolveVariant()) : HostRuntime","description":"elide.runtime.core.internals.graalvm.GraalVMRuntime","location":"packages/graalvm/elide.runtime.core.internals.graalvm/-graal-v-m-runtime/index.html","searchKeys":["GraalVMRuntime","class GraalVMRuntime(val version: Version? = resolveVersion(), val variant: String? = resolveVariant()) : HostRuntime","elide.runtime.core.internals.graalvm.GraalVMRuntime"]},{"name":"class HttpContext : MutableMap<String, Any?> , ProxyObject","description":"elide.runtime.intrinsics.server.http.HttpContext","location":"packages/graalvm/elide.runtime.intrinsics.server.http/-http-context/index.html","searchKeys":["HttpContext","class HttpContext : MutableMap<String, Any?> , ProxyObject","elide.runtime.intrinsics.server.http.HttpContext"]},{"name":"class HttpServerAgent","description":"elide.runtime.intrinsics.server.http.HttpServerAgent","location":"packages/graalvm/elide.runtime.intrinsics.server.http/-http-server-agent/index.html","searchKeys":["HttpServerAgent","class HttpServerAgent","elide.runtime.intrinsics.server.http.HttpServerAgent"]},{"name":"class InspectorConfig","description":"elide.runtime.plugins.debug.DebugConfig.InspectorConfig","location":"packages/graalvm/elide.runtime.plugins.debug/-debug-config/-inspector-config/index.html","searchKeys":["InspectorConfig","class InspectorConfig","elide.runtime.plugins.debug.DebugConfig.InspectorConfig"]},{"name":"class IntrinsicsManager(resolvers: List<IntrinsicsResolver>)","description":"elide.runtime.gvm.internals.IntrinsicsManager","location":"packages/graalvm/elide.runtime.gvm.internals/-intrinsics-manager/index.html","searchKeys":["IntrinsicsManager","class IntrinsicsManager(resolvers: List<IntrinsicsResolver>)","elide.runtime.gvm.internals.IntrinsicsManager"]},{"name":"class JavaScript","description":"elide.runtime.plugins.js.JavaScript","location":"packages/graalvm/elide.runtime.plugins.js/-java-script/index.html","searchKeys":["JavaScript","class JavaScript","elide.runtime.plugins.js.JavaScript"]},{"name":"class JavaScriptConfig : AbstractLanguageConfig","description":"elide.runtime.plugins.js.JavaScriptConfig","location":"packages/graalvm/elide.runtime.plugins.js/-java-script-config/index.html","searchKeys":["JavaScriptConfig","class JavaScriptConfig : AbstractLanguageConfig","elide.runtime.plugins.js.JavaScriptConfig"]},{"name":"class JsIteratorImpl<T>(iter: Iterator<T>) : JsIterator<T> ","description":"elide.runtime.intrinsics.js.JsIterator.JsIteratorImpl","location":"packages/graalvm/elide.runtime.intrinsics.js/-js-iterator/-js-iterator-impl/index.html","searchKeys":["JsIteratorImpl","class JsIteratorImpl<T>(iter: Iterator<T>) : JsIterator<T> ","elide.runtime.intrinsics.js.JsIterator.JsIteratorImpl"]},{"name":"class JsIteratorResult<T>","description":"elide.runtime.intrinsics.js.JsIterator.JsIteratorResult","location":"packages/graalvm/elide.runtime.intrinsics.js/-js-iterator/-js-iterator-result/index.html","searchKeys":["JsIteratorResult","class JsIteratorResult<T>","elide.runtime.intrinsics.js.JsIterator.JsIteratorResult"]},{"name":"class JsMap<K : Any, V>(backingMap: Map<K, V>) : BaseJsMap<K, V> ","description":"elide.runtime.gvm.internals.intrinsics.js.struct.map.JsMap","location":"packages/graalvm/elide.runtime.gvm.internals.intrinsics.js.struct.map/-js-map/index.html","searchKeys":["JsMap","class JsMap<K : Any, V>(backingMap: Map<K, V>) : BaseJsMap<K, V> ","elide.runtime.gvm.internals.intrinsics.js.struct.map.JsMap"]},{"name":"class PropertyProxy : ProxyObject","description":"elide.runtime.gvm.internals.intrinsics.js.JsProxy.PropertyProxy","location":"packages/graalvm/elide.runtime.gvm.internals.intrinsics.js/-js-proxy/-property-proxy/index.html","searchKeys":["PropertyProxy","class PropertyProxy : ProxyObject","elide.runtime.gvm.internals.intrinsics.js.JsProxy.PropertyProxy"]},{"name":"class QuotaExceededError(val message: String) : ValueError","description":"elide.runtime.intrinsics.js.err.QuotaExceededError","location":"packages/graalvm/elide.runtime.intrinsics.js.err/-quota-exceeded-error/index.html","searchKeys":["QuotaExceededError","class QuotaExceededError(val message: String) : ValueError","elide.runtime.intrinsics.js.err.QuotaExceededError"]},{"name":"class VMFacadeFactory","description":"elide.runtime.gvm.VMFacadeFactory","location":"packages/graalvm/elide.runtime.gvm/-v-m-facade-factory/index.html","searchKeys":["VMFacadeFactory","class VMFacadeFactory","elide.runtime.gvm.VMFacadeFactory"]},{"name":"class Vfs","description":"elide.runtime.plugins.vfs.Vfs","location":"packages/graalvm/elide.runtime.plugins.vfs/-vfs/index.html","searchKeys":["Vfs","class Vfs","elide.runtime.plugins.vfs.Vfs"]},{"name":"class VfsConfig","description":"elide.runtime.plugins.vfs.VfsConfig","location":"packages/graalvm/elide.runtime.plugins.vfs/-vfs-config/index.html","searchKeys":["VfsConfig","class VfsConfig","elide.runtime.plugins.vfs.VfsConfig"]},{"name":"const val DEFAULT_CACHE: String","description":"elide.runtime.intrinsics.js.FetchRequest.Defaults.DEFAULT_CACHE","location":"packages/graalvm/elide.runtime.intrinsics.js/-fetch-request/-defaults/-d-e-f-a-u-l-t_-c-a-c-h-e.html","searchKeys":["DEFAULT_CACHE","const val DEFAULT_CACHE: String","elide.runtime.intrinsics.js.FetchRequest.Defaults.DEFAULT_CACHE"]},{"name":"const val DEFAULT_CREDENTIALS: String","description":"elide.runtime.intrinsics.js.FetchRequest.Defaults.DEFAULT_CREDENTIALS","location":"packages/graalvm/elide.runtime.intrinsics.js/-fetch-request/-defaults/-d-e-f-a-u-l-t_-c-r-e-d-e-n-t-i-a-l-s.html","searchKeys":["DEFAULT_CREDENTIALS","const val DEFAULT_CREDENTIALS: String","elide.runtime.intrinsics.js.FetchRequest.Defaults.DEFAULT_CREDENTIALS"]},{"name":"const val DEFAULT_ENABLED: Boolean = true","description":"elide.runtime.gvm.cfg.JsRuntimeConfig.Companion.DEFAULT_ENABLED","location":"packages/graalvm/elide.runtime.gvm.cfg/-js-runtime-config/-companion/-d-e-f-a-u-l-t_-e-n-a-b-l-e-d.html","searchKeys":["DEFAULT_ENABLED","const val DEFAULT_ENABLED: Boolean = true","elide.runtime.gvm.cfg.JsRuntimeConfig.Companion.DEFAULT_ENABLED"]},{"name":"const val DEFAULT_ESM: Boolean = true","description":"elide.runtime.gvm.cfg.JsRuntimeConfig.Companion.DEFAULT_ESM","location":"packages/graalvm/elide.runtime.gvm.cfg/-js-runtime-config/-companion/-d-e-f-a-u-l-t_-e-s-m.html","searchKeys":["DEFAULT_ESM","const val DEFAULT_ESM: Boolean = true","elide.runtime.gvm.cfg.JsRuntimeConfig.Companion.DEFAULT_ESM"]},{"name":"const val DEFAULT_METHOD: String","description":"elide.runtime.intrinsics.js.FetchRequest.Defaults.DEFAULT_METHOD","location":"packages/graalvm/elide.runtime.intrinsics.js/-fetch-request/-defaults/-d-e-f-a-u-l-t_-m-e-t-h-o-d.html","searchKeys":["DEFAULT_METHOD","const val DEFAULT_METHOD: String","elide.runtime.intrinsics.js.FetchRequest.Defaults.DEFAULT_METHOD"]},{"name":"const val DEFAULT_MODE: String","description":"elide.runtime.intrinsics.js.FetchRequest.Defaults.DEFAULT_MODE","location":"packages/graalvm/elide.runtime.intrinsics.js/-fetch-request/-defaults/-d-e-f-a-u-l-t_-m-o-d-e.html","searchKeys":["DEFAULT_MODE","const val DEFAULT_MODE: String","elide.runtime.intrinsics.js.FetchRequest.Defaults.DEFAULT_MODE"]},{"name":"const val DEFAULT_NPM: Boolean = true","description":"elide.runtime.gvm.cfg.JsRuntimeConfig.Companion.DEFAULT_NPM","location":"packages/graalvm/elide.runtime.gvm.cfg/-js-runtime-config/-companion/-d-e-f-a-u-l-t_-n-p-m.html","searchKeys":["DEFAULT_NPM","const val DEFAULT_NPM: Boolean = true","elide.runtime.gvm.cfg.JsRuntimeConfig.Companion.DEFAULT_NPM"]},{"name":"const val DEFAULT_NPM_MODULES: String","description":"elide.runtime.gvm.cfg.JsRuntimeConfig.Companion.DEFAULT_NPM_MODULES","location":"packages/graalvm/elide.runtime.gvm.cfg/-js-runtime-config/-companion/-d-e-f-a-u-l-t_-n-p-m_-m-o-d-u-l-e-s.html","searchKeys":["DEFAULT_NPM_MODULES","const val DEFAULT_NPM_MODULES: String","elide.runtime.gvm.cfg.JsRuntimeConfig.Companion.DEFAULT_NPM_MODULES"]},{"name":"const val DEFAULT_PATH: String","description":"elide.runtime.gvm.RequestExecutionInputs.Defaults.DEFAULT_PATH","location":"packages/graalvm/elide.runtime.gvm/-request-execution-inputs/-defaults/-d-e-f-a-u-l-t_-p-a-t-h.html","searchKeys":["DEFAULT_PATH","const val DEFAULT_PATH: String","elide.runtime.gvm.RequestExecutionInputs.Defaults.DEFAULT_PATH"]},{"name":"const val DEFAULT_PRIORITY: String","description":"elide.runtime.intrinsics.js.FetchRequest.Defaults.DEFAULT_PRIORITY","location":"packages/graalvm/elide.runtime.intrinsics.js/-fetch-request/-defaults/-d-e-f-a-u-l-t_-p-r-i-o-r-i-t-y.html","searchKeys":["DEFAULT_PRIORITY","const val DEFAULT_PRIORITY: String","elide.runtime.intrinsics.js.FetchRequest.Defaults.DEFAULT_PRIORITY"]},{"name":"const val DEFAULT_READ_ONLY: Boolean = true","description":"elide.runtime.gvm.internals.vfs.GuestVFSPolicy.Companion.DEFAULT_READ_ONLY","location":"packages/graalvm/elide.runtime.gvm.internals.vfs/-guest-v-f-s-policy/-companion/-d-e-f-a-u-l-t_-r-e-a-d_-o-n-l-y.html","searchKeys":["DEFAULT_READ_ONLY","const val DEFAULT_READ_ONLY: Boolean = true","elide.runtime.gvm.internals.vfs.GuestVFSPolicy.Companion.DEFAULT_READ_ONLY"]},{"name":"const val DEFAULT_REDIRECT: String","description":"elide.runtime.intrinsics.js.FetchRequest.Defaults.DEFAULT_REDIRECT","location":"packages/graalvm/elide.runtime.intrinsics.js/-fetch-request/-defaults/-d-e-f-a-u-l-t_-r-e-d-i-r-e-c-t.html","searchKeys":["DEFAULT_REDIRECT","const val DEFAULT_REDIRECT: String","elide.runtime.intrinsics.js.FetchRequest.Defaults.DEFAULT_REDIRECT"]},{"name":"const val DEFAULT_REDIRECTED: Boolean = false","description":"elide.runtime.intrinsics.js.FetchResponse.Defaults.DEFAULT_REDIRECTED","location":"packages/graalvm/elide.runtime.intrinsics.js/-fetch-response/-defaults/-d-e-f-a-u-l-t_-r-e-d-i-r-e-c-t-e-d.html","searchKeys":["DEFAULT_REDIRECTED","const val DEFAULT_REDIRECTED: Boolean = false","elide.runtime.intrinsics.js.FetchResponse.Defaults.DEFAULT_REDIRECTED"]},{"name":"const val DEFAULT_REFERRER: String","description":"elide.runtime.intrinsics.js.FetchRequest.Defaults.DEFAULT_REFERRER","location":"packages/graalvm/elide.runtime.intrinsics.js/-fetch-request/-defaults/-d-e-f-a-u-l-t_-r-e-f-e-r-r-e-r.html","searchKeys":["DEFAULT_REFERRER","const val DEFAULT_REFERRER: String","elide.runtime.intrinsics.js.FetchRequest.Defaults.DEFAULT_REFERRER"]},{"name":"const val DEFAULT_REFERRER_POLICY: String","description":"elide.runtime.intrinsics.js.FetchRequest.Defaults.DEFAULT_REFERRER_POLICY","location":"packages/graalvm/elide.runtime.intrinsics.js/-fetch-request/-defaults/-d-e-f-a-u-l-t_-r-e-f-e-r-r-e-r_-p-o-l-i-c-y.html","searchKeys":["DEFAULT_REFERRER_POLICY","const val DEFAULT_REFERRER_POLICY: String","elide.runtime.intrinsics.js.FetchRequest.Defaults.DEFAULT_REFERRER_POLICY"]},{"name":"const val DEFAULT_SOURCEMAPS: Boolean = true","description":"elide.runtime.gvm.cfg.JsRuntimeConfig.Companion.DEFAULT_SOURCEMAPS","location":"packages/graalvm/elide.runtime.gvm.cfg/-js-runtime-config/-companion/-d-e-f-a-u-l-t_-s-o-u-r-c-e-m-a-p-s.html","searchKeys":["DEFAULT_SOURCEMAPS","const val DEFAULT_SOURCEMAPS: Boolean = true","elide.runtime.gvm.cfg.JsRuntimeConfig.Companion.DEFAULT_SOURCEMAPS"]},{"name":"const val DEFAULT_STATUS: Int = 200","description":"elide.runtime.intrinsics.js.FetchResponse.Defaults.DEFAULT_STATUS","location":"packages/graalvm/elide.runtime.intrinsics.js/-fetch-response/-defaults/-d-e-f-a-u-l-t_-s-t-a-t-u-s.html","searchKeys":["DEFAULT_STATUS","const val DEFAULT_STATUS: Int = 200","elide.runtime.intrinsics.js.FetchResponse.Defaults.DEFAULT_STATUS"]},{"name":"const val DEFAULT_STATUS_REDIRECT: Int = 302","description":"elide.runtime.intrinsics.js.FetchResponse.Defaults.DEFAULT_STATUS_REDIRECT","location":"packages/graalvm/elide.runtime.intrinsics.js/-fetch-response/-defaults/-d-e-f-a-u-l-t_-s-t-a-t-u-s_-r-e-d-i-r-e-c-t.html","searchKeys":["DEFAULT_STATUS_REDIRECT","const val DEFAULT_STATUS_REDIRECT: Int = 302","elide.runtime.intrinsics.js.FetchResponse.Defaults.DEFAULT_STATUS_REDIRECT"]},{"name":"const val DEFAULT_STATUS_TEXT: String","description":"elide.runtime.intrinsics.js.FetchResponse.Defaults.DEFAULT_STATUS_TEXT","location":"packages/graalvm/elide.runtime.intrinsics.js/-fetch-response/-defaults/-d-e-f-a-u-l-t_-s-t-a-t-u-s_-t-e-x-t.html","searchKeys":["DEFAULT_STATUS_TEXT","const val DEFAULT_STATUS_TEXT: String","elide.runtime.intrinsics.js.FetchResponse.Defaults.DEFAULT_STATUS_TEXT"]},{"name":"const val DEFAULT_TYPE: String","description":"elide.runtime.intrinsics.js.FetchResponse.Defaults.DEFAULT_TYPE","location":"packages/graalvm/elide.runtime.intrinsics.js/-fetch-response/-defaults/-d-e-f-a-u-l-t_-t-y-p-e.html","searchKeys":["DEFAULT_TYPE","const val DEFAULT_TYPE: String","elide.runtime.intrinsics.js.FetchResponse.Defaults.DEFAULT_TYPE"]},{"name":"const val DEFAULT_TYPESCRIPT: Boolean = false","description":"elide.runtime.gvm.cfg.JsRuntimeConfig.Companion.DEFAULT_TYPESCRIPT","location":"packages/graalvm/elide.runtime.gvm.cfg/-js-runtime-config/-companion/-d-e-f-a-u-l-t_-t-y-p-e-s-c-r-i-p-t.html","searchKeys":["DEFAULT_TYPESCRIPT","const val DEFAULT_TYPESCRIPT: Boolean = false","elide.runtime.gvm.cfg.JsRuntimeConfig.Companion.DEFAULT_TYPESCRIPT"]},{"name":"const val DEFAULT_URL: String","description":"elide.runtime.intrinsics.js.FetchResponse.Defaults.DEFAULT_URL","location":"packages/graalvm/elide.runtime.intrinsics.js/-fetch-response/-defaults/-d-e-f-a-u-l-t_-u-r-l.html","searchKeys":["DEFAULT_URL","const val DEFAULT_URL: String","elide.runtime.intrinsics.js.FetchResponse.Defaults.DEFAULT_URL"]},{"name":"const val DEFAULT_V8_COMPAT: Boolean = false","description":"elide.runtime.gvm.cfg.JsRuntimeConfig.Companion.DEFAULT_V8_COMPAT","location":"packages/graalvm/elide.runtime.gvm.cfg/-js-runtime-config/-companion/-d-e-f-a-u-l-t_-v8_-c-o-m-p-a-t.html","searchKeys":["DEFAULT_V8_COMPAT","const val DEFAULT_V8_COMPAT: Boolean = false","elide.runtime.gvm.cfg.JsRuntimeConfig.Companion.DEFAULT_V8_COMPAT"]},{"name":"const val DEFAULT_WASM: Boolean = true","description":"elide.runtime.gvm.cfg.JsRuntimeConfig.Companion.DEFAULT_WASM","location":"packages/graalvm/elide.runtime.gvm.cfg/-js-runtime-config/-companion/-d-e-f-a-u-l-t_-w-a-s-m.html","searchKeys":["DEFAULT_WASM","const val DEFAULT_WASM: Boolean = true","elide.runtime.gvm.cfg.JsRuntimeConfig.Companion.DEFAULT_WASM"]},{"name":"const val EMBEDDED_ROOT: String","description":"elide.runtime.gvm.internals.AbstractVMEngine.Companion.EMBEDDED_ROOT","location":"packages/graalvm/elide.runtime.gvm.internals/-abstract-v-m-engine/-companion/-e-m-b-e-d-d-e-d_-r-o-o-t.html","searchKeys":["EMBEDDED_ROOT","const val EMBEDDED_ROOT: String","elide.runtime.gvm.internals.AbstractVMEngine.Companion.EMBEDDED_ROOT"]},{"name":"const val MAX_RANDOM_BYTES_SIZE: Int","description":"elide.runtime.intrinsics.js.Crypto.Companion.MAX_RANDOM_BYTES_SIZE","location":"packages/graalvm/elide.runtime.intrinsics.js/-crypto/-companion/-m-a-x_-r-a-n-d-o-m_-b-y-t-e-s_-s-i-z-e.html","searchKeys":["MAX_RANDOM_BYTES_SIZE","const val MAX_RANDOM_BYTES_SIZE: Int","elide.runtime.intrinsics.js.Crypto.Companion.MAX_RANDOM_BYTES_SIZE"]},{"name":"const val VARIANT_JVM: String","description":"elide.runtime.core.internals.graalvm.GraalVMRuntime.Companion.VARIANT_JVM","location":"packages/graalvm/elide.runtime.core.internals.graalvm/-graal-v-m-runtime/-companion/-v-a-r-i-a-n-t_-j-v-m.html","searchKeys":["VARIANT_JVM","const val VARIANT_JVM: String","elide.runtime.core.internals.graalvm.GraalVMRuntime.Companion.VARIANT_JVM"]},{"name":"const val VARIANT_NATIVE: String","description":"elide.runtime.core.internals.graalvm.GraalVMRuntime.Companion.VARIANT_NATIVE","location":"packages/graalvm/elide.runtime.core.internals.graalvm/-graal-v-m-runtime/-companion/-v-a-r-i-a-n-t_-n-a-t-i-v-e.html","searchKeys":["VARIANT_NATIVE","const val VARIANT_NATIVE: String","elide.runtime.core.internals.graalvm.GraalVMRuntime.Companion.VARIANT_NATIVE"]},{"name":"constructor()","description":"elide.runtime.gvm.DeveloperScript.DeveloperScript","location":"packages/graalvm/elide.runtime.gvm/-developer-script/-developer-script.html","searchKeys":["DeveloperScript","constructor()","elide.runtime.gvm.DeveloperScript.DeveloperScript"]},{"name":"constructor()","description":"elide.runtime.gvm.internals.GVMInvocationBindings.GVMInvocationBindings","location":"packages/graalvm/elide.runtime.gvm.internals/-g-v-m-invocation-bindings/-g-v-m-invocation-bindings.html","searchKeys":["GVMInvocationBindings","constructor()","elide.runtime.gvm.internals.GVMInvocationBindings.GVMInvocationBindings"]},{"name":"constructor()","description":"elide.runtime.gvm.internals.intrinsics.js.struct.map.JsMap.JsMap","location":"packages/graalvm/elide.runtime.gvm.internals.intrinsics.js.struct.map/-js-map/-js-map.html","searchKeys":["JsMap","constructor()","elide.runtime.gvm.internals.intrinsics.js.struct.map.JsMap.JsMap"]},{"name":"constructor()","description":"elide.runtime.intrinsics.js.err.Error.Error","location":"packages/graalvm/elide.runtime.intrinsics.js.err/-error/-error.html","searchKeys":["Error","constructor()","elide.runtime.intrinsics.js.err.Error.Error"]},{"name":"constructor()","description":"elide.runtime.intrinsics.js.err.TypeError.TypeError","location":"packages/graalvm/elide.runtime.intrinsics.js.err/-type-error/-type-error.html","searchKeys":["TypeError","constructor()","elide.runtime.intrinsics.js.err.TypeError.TypeError"]},{"name":"constructor()","description":"elide.runtime.intrinsics.js.err.ValueError.ValueError","location":"packages/graalvm/elide.runtime.intrinsics.js.err/-value-error/-value-error.html","searchKeys":["ValueError","constructor()","elide.runtime.intrinsics.js.err.ValueError.ValueError"]},{"name":"constructor()","description":"elide.runtime.intrinsics.server.http.HttpServerAgent.HttpServerAgent","location":"packages/graalvm/elide.runtime.intrinsics.server.http/-http-server-agent/-http-server-agent.html","searchKeys":["HttpServerAgent","constructor()","elide.runtime.intrinsics.server.http.HttpServerAgent.HttpServerAgent"]},{"name":"constructor()","description":"elide.runtime.plugins.AbstractLanguageConfig.AbstractLanguageConfig","location":"packages/graalvm/elide.runtime.plugins/-abstract-language-config/-abstract-language-config.html","searchKeys":["AbstractLanguageConfig","constructor()","elide.runtime.plugins.AbstractLanguageConfig.AbstractLanguageConfig"]},{"name":"constructor()","description":"elide.runtime.plugins.AbstractLanguagePlugin.AbstractLanguagePlugin","location":"packages/graalvm/elide.runtime.plugins/-abstract-language-plugin/-abstract-language-plugin.html","searchKeys":["AbstractLanguagePlugin","constructor()","elide.runtime.plugins.AbstractLanguagePlugin.AbstractLanguagePlugin"]},{"name":"constructor()","description":"elide.runtime.plugins.js.JavaScriptConfig.BuiltInModulesConfig.BuiltInModulesConfig","location":"packages/graalvm/elide.runtime.plugins.js/-java-script-config/-built-in-modules-config/-built-in-modules-config.html","searchKeys":["BuiltInModulesConfig","constructor()","elide.runtime.plugins.js.JavaScriptConfig.BuiltInModulesConfig.BuiltInModulesConfig"]},{"name":"constructor()","description":"elide.runtime.plugins.js.JavaScriptConfig.JavaScriptConfig","location":"packages/graalvm/elide.runtime.plugins.js/-java-script-config/-java-script-config.html","searchKeys":["JavaScriptConfig","constructor()","elide.runtime.plugins.js.JavaScriptConfig.JavaScriptConfig"]},{"name":"constructor()","description":"elide.runtime.plugins.js.JavaScriptConfig.NpmConfig.NpmConfig","location":"packages/graalvm/elide.runtime.plugins.js/-java-script-config/-npm-config/-npm-config.html","searchKeys":["NpmConfig","constructor()","elide.runtime.plugins.js.JavaScriptConfig.NpmConfig.NpmConfig"]},{"name":"constructor(amd64: AbstractVMEngine.RuntimeNativeResourceBundle? = null, arm64: AbstractVMEngine.RuntimeNativeResourceBundle? = null)","description":"elide.runtime.gvm.internals.AbstractVMEngine.RuntimeNativeResources.RuntimeNativeResources","location":"packages/graalvm/elide.runtime.gvm.internals/-abstract-v-m-engine/-runtime-native-resources/-runtime-native-resources.html","searchKeys":["RuntimeNativeResources","constructor(amd64: AbstractVMEngine.RuntimeNativeResourceBundle? = null, arm64: AbstractVMEngine.RuntimeNativeResourceBundle? = null)","elide.runtime.gvm.internals.AbstractVMEngine.RuntimeNativeResources.RuntimeNativeResources"]},{"name":"constructor(backingMap: Map<K, V>)","description":"elide.runtime.gvm.internals.intrinsics.js.struct.map.JsMap.JsMap","location":"packages/graalvm/elide.runtime.gvm.internals.intrinsics.js.struct.map/-js-map/-js-map.html","searchKeys":["JsMap","constructor(backingMap: Map<K, V>)","elide.runtime.gvm.internals.intrinsics.js.struct.map.JsMap.JsMap"]},{"name":"constructor(bundle: String, sha256: String, signature: AbstractVMEngine.RuntimeNativeResourceSignature)","description":"elide.runtime.gvm.internals.AbstractVMEngine.RuntimeNativeResourceBundle.RuntimeNativeResourceBundle","location":"packages/graalvm/elide.runtime.gvm.internals/-abstract-v-m-engine/-runtime-native-resource-bundle/-runtime-native-resource-bundle.html","searchKeys":["RuntimeNativeResourceBundle","constructor(bundle: String, sha256: String, signature: AbstractVMEngine.RuntimeNativeResourceSignature)","elide.runtime.gvm.internals.AbstractVMEngine.RuntimeNativeResourceBundle.RuntimeNativeResourceBundle"]},{"name":"constructor(bundle: String, sha256: String, stamp: String)","description":"elide.runtime.gvm.internals.AbstractVMEngine.RuntimeNativeResourceSignature.RuntimeNativeResourceSignature","location":"packages/graalvm/elide.runtime.gvm.internals/-abstract-v-m-engine/-runtime-native-resource-signature/-runtime-native-resource-signature.html","searchKeys":["RuntimeNativeResourceSignature","constructor(bundle: String, sha256: String, stamp: String)","elide.runtime.gvm.internals.AbstractVMEngine.RuntimeNativeResourceSignature.RuntimeNativeResourceSignature"]},{"name":"constructor(darwin: AbstractVMEngine.RuntimeNativeResources? = null, linux: AbstractVMEngine.RuntimeNativeResources? = null, windows: AbstractVMEngine.RuntimeNativeResources? = null)","description":"elide.runtime.gvm.internals.AbstractVMEngine.RuntimeImageInfo.NativeImageInfo.NativeImageInfo","location":"packages/graalvm/elide.runtime.gvm.internals/-abstract-v-m-engine/-runtime-image-info/-native-image-info/-native-image-info.html","searchKeys":["NativeImageInfo","constructor(darwin: AbstractVMEngine.RuntimeNativeResources? = null, linux: AbstractVMEngine.RuntimeNativeResources? = null, windows: AbstractVMEngine.RuntimeNativeResources? = null)","elide.runtime.gvm.internals.AbstractVMEngine.RuntimeImageInfo.NativeImageInfo.NativeImageInfo"]},{"name":"constructor(engine: String, language: GuestLanguage, vfs: List<AbstractVMEngine.RuntimeVFS> = emptyList(), artifacts: List<AbstractVMEngine.RuntimeArtifact> = emptyList(), scripts: List<AbstractVMEngine.RuntimeArtifact> = emptyList(), image: AbstractVMEngine.RuntimeImageInfo? = null, entry: String? = null)","description":"elide.runtime.gvm.internals.AbstractVMEngine.RuntimeInfo.RuntimeInfo","location":"packages/graalvm/elide.runtime.gvm.internals/-abstract-v-m-engine/-runtime-info/-runtime-info.html","searchKeys":["RuntimeInfo","constructor(engine: String, language: GuestLanguage, vfs: List<AbstractVMEngine.RuntimeVFS> = emptyList(), artifacts: List<AbstractVMEngine.RuntimeArtifact> = emptyList(), scripts: List<AbstractVMEngine.RuntimeArtifact> = emptyList(), image: AbstractVMEngine.RuntimeImageInfo? = null, entry: String? = null)","elide.runtime.gvm.internals.AbstractVMEngine.RuntimeInfo.RuntimeInfo"]},{"name":"constructor(engine: String, language: String, bundles: List<AbstractLanguagePlugin.LanguagePluginManifest.EmbeddedResource> = emptyList(), scripts: List<AbstractLanguagePlugin.LanguagePluginManifest.EmbeddedResource> = emptyList(), resources: Map<String, List<String>> = emptyMap(), root: String? = null)","description":"elide.runtime.plugins.AbstractLanguagePlugin.LanguagePluginManifest.LanguagePluginManifest","location":"packages/graalvm/elide.runtime.plugins/-abstract-language-plugin/-language-plugin-manifest/-language-plugin-manifest.html","searchKeys":["LanguagePluginManifest","constructor(engine: String, language: String, bundles: List<AbstractLanguagePlugin.LanguagePluginManifest.EmbeddedResource> = emptyList(), scripts: List<AbstractLanguagePlugin.LanguagePluginManifest.EmbeddedResource> = emptyList(), resources: Map<String, List<String>> = emptyMap(), root: String? = null)","elide.runtime.plugins.AbstractLanguagePlugin.LanguagePluginManifest.LanguagePluginManifest"]},{"name":"constructor(file: String, name: String, value: String?)","description":"elide.runtime.plugins.env.EnvConfig.EnvVar.DotEnvVar.DotEnvVar","location":"packages/graalvm/elide.runtime.plugins.env/-env-config/-env-var/-dot-env-var/-dot-env-var.html","searchKeys":["DotEnvVar","constructor(file: String, name: String, value: String?)","elide.runtime.plugins.env.EnvConfig.EnvVar.DotEnvVar.DotEnvVar"]},{"name":"constructor(guestLanguage: GuestLanguage, runtimeInfoProducer: () -> AbstractVMEngine.RuntimeInfo)","description":"elide.runtime.gvm.internals.AbstractVMEngine.GuestVFSConfigurator.GuestVFSConfigurator","location":"packages/graalvm/elide.runtime.gvm.internals/-abstract-v-m-engine/-guest-v-f-s-configurator/-guest-v-f-s-configurator.html","searchKeys":["GuestVFSConfigurator","constructor(guestLanguage: GuestLanguage, runtimeInfoProducer: () -> AbstractVMEngine.RuntimeInfo)","elide.runtime.gvm.internals.AbstractVMEngine.GuestVFSConfigurator.GuestVFSConfigurator"]},{"name":"constructor(id: String)","description":"elide.runtime.core.EnginePlugin.Key.Key","location":"packages/graalvm/elide.runtime.core/-engine-plugin/-key/-key.html","searchKeys":["Key","constructor(id: String)","elide.runtime.core.EnginePlugin.Key.Key"]},{"name":"constructor(iter: Iterator<T>)","description":"elide.runtime.intrinsics.js.JsIterator.JsIteratorImpl.JsIteratorImpl","location":"packages/graalvm/elide.runtime.intrinsics.js/-js-iterator/-js-iterator-impl/-js-iterator-impl.html","searchKeys":["JsIteratorImpl","constructor(iter: Iterator<T>)","elide.runtime.intrinsics.js.JsIterator.JsIteratorImpl.JsIteratorImpl"]},{"name":"constructor(key: String)","description":"elide.runtime.core.PolyglotContextElement.PolyglotContextElement","location":"packages/graalvm/elide.runtime.core/-polyglot-context-element/-polyglot-context-element.html","searchKeys":["PolyglotContextElement","constructor(key: String)","elide.runtime.core.PolyglotContextElement.PolyglotContextElement"]},{"name":"constructor(language: GraalVMGuest)","description":"elide.runtime.gvm.internals.AbstractVMEngine.AbstractVMEngine","location":"packages/graalvm/elide.runtime.gvm.internals/-abstract-v-m-engine/-abstract-v-m-engine.html","searchKeys":["AbstractVMEngine","constructor(language: GraalVMGuest)","elide.runtime.gvm.internals.AbstractVMEngine.AbstractVMEngine"]},{"name":"constructor(major: Int, minor: Int = 0, patch: Int = 0)","description":"elide.runtime.core.Version.Version","location":"packages/graalvm/elide.runtime.core/-version/-version.html","searchKeys":["Version","constructor(major: Int, minor: Int = 0, patch: Int = 0)","elide.runtime.core.Version.Version"]},{"name":"constructor(mapped: String, defaultValue: String? = null, name: String)","description":"elide.runtime.plugins.env.EnvConfig.EnvVar.HostMappedVar.HostMappedVar","location":"packages/graalvm/elide.runtime.plugins.env/-env-config/-env-var/-host-mapped-var/-host-mapped-var.html","searchKeys":["HostMappedVar","constructor(mapped: String, defaultValue: String? = null, name: String)","elide.runtime.plugins.env.EnvConfig.EnvVar.HostMappedVar.HostMappedVar"]},{"name":"constructor(message: String)","description":"elide.runtime.intrinsics.js.err.QuotaExceededError.QuotaExceededError","location":"packages/graalvm/elide.runtime.intrinsics.js.err/-quota-exceeded-error/-quota-exceeded-error.html","searchKeys":["QuotaExceededError","constructor(message: String)","elide.runtime.intrinsics.js.err.QuotaExceededError.QuotaExceededError"]},{"name":"constructor(message: String? = null, cause: Throwable? = null)","description":"elide.runtime.gvm.internals.vfs.GuestIOException.GuestIOException","location":"packages/graalvm/elide.runtime.gvm.internals.vfs/-guest-i-o-exception/-guest-i-o-exception.html","searchKeys":["GuestIOException","constructor(message: String? = null, cause: Throwable? = null)","elide.runtime.gvm.internals.vfs.GuestIOException.GuestIOException"]},{"name":"constructor(min: Version = Zero, max: Version? = null, includeMin: Boolean = true, includeMax: Boolean = true)","description":"elide.runtime.core.Version.Range.Range","location":"packages/graalvm/elide.runtime.core/-version/-range/-range.html","searchKeys":["Range","constructor(min: Version = Zero, max: Version? = null, includeMin: Boolean = true, includeMax: Boolean = true)","elide.runtime.core.Version.Range.Range"]},{"name":"constructor(name: String)","description":"elide.runtime.gvm.internals.AbstractVMEngine.RuntimeVFS.RuntimeVFS","location":"packages/graalvm/elide.runtime.gvm.internals/-abstract-v-m-engine/-runtime-v-f-s/-runtime-v-f-s.html","searchKeys":["RuntimeVFS","constructor(name: String)","elide.runtime.gvm.internals.AbstractVMEngine.RuntimeVFS.RuntimeVFS"]},{"name":"constructor(name: String, supplier: Supplier<String?>)","description":"elide.runtime.plugins.env.EnvConfig.EnvVar.SuppliedEnvVar.SuppliedEnvVar","location":"packages/graalvm/elide.runtime.plugins.env/-env-config/-env-var/-supplied-env-var/-supplied-env-var.html","searchKeys":["SuppliedEnvVar","constructor(name: String, supplier: Supplier<String?>)","elide.runtime.plugins.env.EnvConfig.EnvVar.SuppliedEnvVar.SuppliedEnvVar"]},{"name":"constructor(name: String, value: String?)","description":"elide.runtime.plugins.env.EnvConfig.EnvVar.InlineEnvVar.InlineEnvVar","location":"packages/graalvm/elide.runtime.plugins.env/-env-config/-env-var/-inline-env-var/-inline-env-var.html","searchKeys":["InlineEnvVar","constructor(name: String, value: String?)","elide.runtime.plugins.env.EnvConfig.EnvVar.InlineEnvVar.InlineEnvVar"]},{"name":"constructor(os: HostPlatform.OperatingSystem, arch: HostPlatform.Architecture)","description":"elide.runtime.core.HostPlatform.HostPlatform","location":"packages/graalvm/elide.runtime.core/-host-platform/-host-platform.html","searchKeys":["HostPlatform","constructor(os: HostPlatform.OperatingSystem, arch: HostPlatform.Architecture)","elide.runtime.core.HostPlatform.HostPlatform"]},{"name":"constructor(path: String)","description":"elide.runtime.gvm.internals.AbstractVMEngine.RuntimeArtifact.RuntimeArtifact","location":"packages/graalvm/elide.runtime.gvm.internals/-abstract-v-m-engine/-runtime-artifact/-runtime-artifact.html","searchKeys":["RuntimeArtifact","constructor(path: String)","elide.runtime.gvm.internals.AbstractVMEngine.RuntimeArtifact.RuntimeArtifact"]},{"name":"constructor(path: String, platform: HostPlatform? = null)","description":"elide.runtime.plugins.AbstractLanguagePlugin.LanguagePluginManifest.EmbeddedResource.EmbeddedResource","location":"packages/graalvm/elide.runtime.plugins/-abstract-language-plugin/-language-plugin-manifest/-embedded-resource/-embedded-resource.html","searchKeys":["EmbeddedResource","constructor(path: String, platform: HostPlatform? = null)","elide.runtime.plugins.AbstractLanguagePlugin.LanguagePluginManifest.EmbeddedResource.EmbeddedResource"]},{"name":"constructor(resolvers: List<IntrinsicsResolver>)","description":"elide.runtime.gvm.internals.IntrinsicsManager.IntrinsicsManager","location":"packages/graalvm/elide.runtime.gvm.internals/-intrinsics-manager/-intrinsics-manager.html","searchKeys":["IntrinsicsManager","constructor(resolvers: List<IntrinsicsResolver>)","elide.runtime.gvm.internals.IntrinsicsManager.IntrinsicsManager"]},{"name":"constructor(size: Int)","description":"elide.runtime.gvm.internals.intrinsics.js.struct.map.JsMap.JsMap","location":"packages/graalvm/elide.runtime.gvm.internals.intrinsics.js.struct.map/-js-map/-js-map.html","searchKeys":["JsMap","constructor(size: Int)","elide.runtime.gvm.internals.intrinsics.js.struct.map.JsMap.JsMap"]},{"name":"constructor(target: String)","description":"elide.runtime.gvm.ExecutableScript.SourceMap.SourceMap","location":"packages/graalvm/elide.runtime.gvm/-executable-script/-source-map/-source-map.html","searchKeys":["SourceMap","constructor(target: String)","elide.runtime.gvm.ExecutableScript.SourceMap.SourceMap"]},{"name":"constructor(type: Set<AccessType>, domain: AccessDomain, scope: AccessScope, path: Path)","description":"elide.runtime.gvm.internals.vfs.AccessRequest.AccessRequest","location":"packages/graalvm/elide.runtime.gvm.internals.vfs/-access-request/-access-request.html","searchKeys":["AccessRequest","constructor(type: Set<AccessType>, domain: AccessDomain, scope: AccessScope, path: Path)","elide.runtime.gvm.internals.vfs.AccessRequest.AccessRequest"]},{"name":"constructor(universal: String? = null)","description":"elide.runtime.gvm.internals.AbstractVMEngine.RuntimeImageInfo.UniversalImageInfo.UniversalImageInfo","location":"packages/graalvm/elide.runtime.gvm.internals/-abstract-v-m-engine/-runtime-image-info/-universal-image-info/-universal-image-info.html","searchKeys":["UniversalImageInfo","constructor(universal: String? = null)","elide.runtime.gvm.internals.AbstractVMEngine.RuntimeImageInfo.UniversalImageInfo.UniversalImageInfo"]},{"name":"constructor(version: Version? = resolveVersion(), variant: String? = resolveVariant())","description":"elide.runtime.core.internals.graalvm.GraalVMRuntime.GraalVMRuntime","location":"packages/graalvm/elide.runtime.core.internals.graalvm/-graal-v-m-runtime/-graal-v-m-runtime.html","searchKeys":["GraalVMRuntime","constructor(version: Version? = resolveVersion(), variant: String? = resolveVariant())","elide.runtime.core.internals.graalvm.GraalVMRuntime.GraalVMRuntime"]},{"name":"data class AccessRequest(val type: Set<AccessType>, val domain: AccessDomain, val scope: AccessScope, val path: Path)","description":"elide.runtime.gvm.internals.vfs.AccessRequest","location":"packages/graalvm/elide.runtime.gvm.internals.vfs/-access-request/index.html","searchKeys":["AccessRequest","data class AccessRequest(val type: Set<AccessType>, val domain: AccessDomain, val scope: AccessScope, val path: Path)","elide.runtime.gvm.internals.vfs.AccessRequest"]},{"name":"data class DotEnvVar(val file: String, val name: String, val value: String?) : Record, EnvConfig.EnvVar","description":"elide.runtime.plugins.env.EnvConfig.EnvVar.DotEnvVar","location":"packages/graalvm/elide.runtime.plugins.env/-env-config/-env-var/-dot-env-var/index.html","searchKeys":["DotEnvVar","data class DotEnvVar(val file: String, val name: String, val value: String?) : Record, EnvConfig.EnvVar","elide.runtime.plugins.env.EnvConfig.EnvVar.DotEnvVar"]},{"name":"data class EffectiveGuestVFSConfig","description":"elide.runtime.gvm.internals.vfs.EffectiveGuestVFSConfig","location":"packages/graalvm/elide.runtime.gvm.internals.vfs/-effective-guest-v-f-s-config/index.html","searchKeys":["EffectiveGuestVFSConfig","data class EffectiveGuestVFSConfig","elide.runtime.gvm.internals.vfs.EffectiveGuestVFSConfig"]},{"name":"data class EmbeddedResource(val path: String, val platform: HostPlatform? = null)","description":"elide.runtime.plugins.AbstractLanguagePlugin.LanguagePluginManifest.EmbeddedResource","location":"packages/graalvm/elide.runtime.plugins/-abstract-language-plugin/-language-plugin-manifest/-embedded-resource/index.html","searchKeys":["EmbeddedResource","data class EmbeddedResource(val path: String, val platform: HostPlatform? = null)","elide.runtime.plugins.AbstractLanguagePlugin.LanguagePluginManifest.EmbeddedResource"]},{"name":"data class HostMappedVar(val mapped: String, val defaultValue: String? = null, val name: String) : Record, EnvConfig.EnvVar","description":"elide.runtime.plugins.env.EnvConfig.EnvVar.HostMappedVar","location":"packages/graalvm/elide.runtime.plugins.env/-env-config/-env-var/-host-mapped-var/index.html","searchKeys":["HostMappedVar","data class HostMappedVar(val mapped: String, val defaultValue: String? = null, val name: String) : Record, EnvConfig.EnvVar","elide.runtime.plugins.env.EnvConfig.EnvVar.HostMappedVar"]},{"name":"data class HostPlatform(val os: HostPlatform.OperatingSystem, val arch: HostPlatform.Architecture)","description":"elide.runtime.core.HostPlatform","location":"packages/graalvm/elide.runtime.core/-host-platform/index.html","searchKeys":["HostPlatform","data class HostPlatform(val os: HostPlatform.OperatingSystem, val arch: HostPlatform.Architecture)","elide.runtime.core.HostPlatform"]},{"name":"data class InlineEnvVar(val name: String, val value: String?) : Record, EnvConfig.EnvVar","description":"elide.runtime.plugins.env.EnvConfig.EnvVar.InlineEnvVar","location":"packages/graalvm/elide.runtime.plugins.env/-env-config/-env-var/-inline-env-var/index.html","searchKeys":["InlineEnvVar","data class InlineEnvVar(val name: String, val value: String?) : Record, EnvConfig.EnvVar","elide.runtime.plugins.env.EnvConfig.EnvVar.InlineEnvVar"]},{"name":"data class LanguagePluginManifest(val engine: String, val language: String, val bundles: List<AbstractLanguagePlugin.LanguagePluginManifest.EmbeddedResource> = emptyList(), val scripts: List<AbstractLanguagePlugin.LanguagePluginManifest.EmbeddedResource> = emptyList(), val resources: Map<String, List<String>> = emptyMap(), val root: String? = null)","description":"elide.runtime.plugins.AbstractLanguagePlugin.LanguagePluginManifest","location":"packages/graalvm/elide.runtime.plugins/-abstract-language-plugin/-language-plugin-manifest/index.html","searchKeys":["LanguagePluginManifest","data class LanguagePluginManifest(val engine: String, val language: String, val bundles: List<AbstractLanguagePlugin.LanguagePluginManifest.EmbeddedResource> = emptyList(), val scripts: List<AbstractLanguagePlugin.LanguagePluginManifest.EmbeddedResource> = emptyList(), val resources: Map<String, List<String>> = emptyMap(), val root: String? = null)","elide.runtime.plugins.AbstractLanguagePlugin.LanguagePluginManifest"]},{"name":"data class NativeImageInfo(val darwin: AbstractVMEngine.RuntimeNativeResources? = null, val linux: AbstractVMEngine.RuntimeNativeResources? = null, val windows: AbstractVMEngine.RuntimeNativeResources? = null) : AbstractVMEngine.RuntimeImageInfo","description":"elide.runtime.gvm.internals.AbstractVMEngine.RuntimeImageInfo.NativeImageInfo","location":"packages/graalvm/elide.runtime.gvm.internals/-abstract-v-m-engine/-runtime-image-info/-native-image-info/index.html","searchKeys":["NativeImageInfo","data class NativeImageInfo(val darwin: AbstractVMEngine.RuntimeNativeResources? = null, val linux: AbstractVMEngine.RuntimeNativeResources? = null, val windows: AbstractVMEngine.RuntimeNativeResources? = null) : AbstractVMEngine.RuntimeImageInfo","elide.runtime.gvm.internals.AbstractVMEngine.RuntimeImageInfo.NativeImageInfo"]},{"name":"data class Range(val min: Version = Zero, val max: Version? = null, val includeMin: Boolean = true, val includeMax: Boolean = true)","description":"elide.runtime.core.Version.Range","location":"packages/graalvm/elide.runtime.core/-version/-range/index.html","searchKeys":["Range","data class Range(val min: Version = Zero, val max: Version? = null, val includeMin: Boolean = true, val includeMax: Boolean = true)","elide.runtime.core.Version.Range"]},{"name":"data class RuntimeArtifact(val path: String)","description":"elide.runtime.gvm.internals.AbstractVMEngine.RuntimeArtifact","location":"packages/graalvm/elide.runtime.gvm.internals/-abstract-v-m-engine/-runtime-artifact/index.html","searchKeys":["RuntimeArtifact","data class RuntimeArtifact(val path: String)","elide.runtime.gvm.internals.AbstractVMEngine.RuntimeArtifact"]},{"name":"data class RuntimeInfo(val engine: String, val language: GuestLanguage, val vfs: List<AbstractVMEngine.RuntimeVFS> = emptyList(), val artifacts: List<AbstractVMEngine.RuntimeArtifact> = emptyList(), val scripts: List<AbstractVMEngine.RuntimeArtifact> = emptyList(), val image: AbstractVMEngine.RuntimeImageInfo? = null, val entry: String? = null)","description":"elide.runtime.gvm.internals.AbstractVMEngine.RuntimeInfo","location":"packages/graalvm/elide.runtime.gvm.internals/-abstract-v-m-engine/-runtime-info/index.html","searchKeys":["RuntimeInfo","data class RuntimeInfo(val engine: String, val language: GuestLanguage, val vfs: List<AbstractVMEngine.RuntimeVFS> = emptyList(), val artifacts: List<AbstractVMEngine.RuntimeArtifact> = emptyList(), val scripts: List<AbstractVMEngine.RuntimeArtifact> = emptyList(), val image: AbstractVMEngine.RuntimeImageInfo? = null, val entry: String? = null)","elide.runtime.gvm.internals.AbstractVMEngine.RuntimeInfo"]},{"name":"data class RuntimeNativeResourceBundle(val bundle: String, val sha256: String, val signature: AbstractVMEngine.RuntimeNativeResourceSignature)","description":"elide.runtime.gvm.internals.AbstractVMEngine.RuntimeNativeResourceBundle","location":"packages/graalvm/elide.runtime.gvm.internals/-abstract-v-m-engine/-runtime-native-resource-bundle/index.html","searchKeys":["RuntimeNativeResourceBundle","data class RuntimeNativeResourceBundle(val bundle: String, val sha256: String, val signature: AbstractVMEngine.RuntimeNativeResourceSignature)","elide.runtime.gvm.internals.AbstractVMEngine.RuntimeNativeResourceBundle"]},{"name":"data class RuntimeNativeResourceSignature(val bundle: String, val sha256: String, val stamp: String)","description":"elide.runtime.gvm.internals.AbstractVMEngine.RuntimeNativeResourceSignature","location":"packages/graalvm/elide.runtime.gvm.internals/-abstract-v-m-engine/-runtime-native-resource-signature/index.html","searchKeys":["RuntimeNativeResourceSignature","data class RuntimeNativeResourceSignature(val bundle: String, val sha256: String, val stamp: String)","elide.runtime.gvm.internals.AbstractVMEngine.RuntimeNativeResourceSignature"]},{"name":"data class RuntimeNativeResources(val amd64: AbstractVMEngine.RuntimeNativeResourceBundle? = null, val arm64: AbstractVMEngine.RuntimeNativeResourceBundle? = null)","description":"elide.runtime.gvm.internals.AbstractVMEngine.RuntimeNativeResources","location":"packages/graalvm/elide.runtime.gvm.internals/-abstract-v-m-engine/-runtime-native-resources/index.html","searchKeys":["RuntimeNativeResources","data class RuntimeNativeResources(val amd64: AbstractVMEngine.RuntimeNativeResourceBundle? = null, val arm64: AbstractVMEngine.RuntimeNativeResourceBundle? = null)","elide.runtime.gvm.internals.AbstractVMEngine.RuntimeNativeResources"]},{"name":"data class RuntimeVFS(val name: String)","description":"elide.runtime.gvm.internals.AbstractVMEngine.RuntimeVFS","location":"packages/graalvm/elide.runtime.gvm.internals/-abstract-v-m-engine/-runtime-v-f-s/index.html","searchKeys":["RuntimeVFS","data class RuntimeVFS(val name: String)","elide.runtime.gvm.internals.AbstractVMEngine.RuntimeVFS"]},{"name":"data class SuppliedEnvVar(val name: String, supplier: Supplier<String?>) : Record, EnvConfig.EnvVar","description":"elide.runtime.plugins.env.EnvConfig.EnvVar.SuppliedEnvVar","location":"packages/graalvm/elide.runtime.plugins.env/-env-config/-env-var/-supplied-env-var/index.html","searchKeys":["SuppliedEnvVar","data class SuppliedEnvVar(val name: String, supplier: Supplier<String?>) : Record, EnvConfig.EnvVar","elide.runtime.plugins.env.EnvConfig.EnvVar.SuppliedEnvVar"]},{"name":"data class UniversalImageInfo(val universal: String? = null) : AbstractVMEngine.RuntimeImageInfo","description":"elide.runtime.gvm.internals.AbstractVMEngine.RuntimeImageInfo.UniversalImageInfo","location":"packages/graalvm/elide.runtime.gvm.internals/-abstract-v-m-engine/-runtime-image-info/-universal-image-info/index.html","searchKeys":["UniversalImageInfo","data class UniversalImageInfo(val universal: String? = null) : AbstractVMEngine.RuntimeImageInfo","elide.runtime.gvm.internals.AbstractVMEngine.RuntimeImageInfo.UniversalImageInfo"]},{"name":"data class VMRuntimeProperty : VMProperty","description":"elide.runtime.gvm.internals.VMRuntimeProperty","location":"packages/graalvm/elide.runtime.gvm.internals/-v-m-runtime-property/index.html","searchKeys":["VMRuntimeProperty","data class VMRuntimeProperty : VMProperty","elide.runtime.gvm.internals.VMRuntimeProperty"]},{"name":"data class VMStaticProperty : VMProperty","description":"elide.runtime.gvm.internals.VMStaticProperty","location":"packages/graalvm/elide.runtime.gvm.internals/-v-m-static-property/index.html","searchKeys":["VMStaticProperty","data class VMStaticProperty : VMProperty","elide.runtime.gvm.internals.VMStaticProperty"]},{"name":"data class Version(val major: Int, val minor: Int = 0, val patch: Int = 0) : Comparable<Version> ","description":"elide.runtime.core.Version","location":"packages/graalvm/elide.runtime.core/-version/index.html","searchKeys":["Version","data class Version(val major: Int, val minor: Int = 0, val patch: Int = 0) : Comparable<Version> ","elide.runtime.core.Version"]},{"name":"data object ContextCreated : EngineLifecycleEvent<PolyglotContextBuilder> ","description":"elide.runtime.core.EngineLifecycleEvent.ContextCreated","location":"packages/graalvm/elide.runtime.core/-engine-lifecycle-event/-context-created/index.html","searchKeys":["ContextCreated","data object ContextCreated : EngineLifecycleEvent<PolyglotContextBuilder> ","elide.runtime.core.EngineLifecycleEvent.ContextCreated"]},{"name":"data object ContextInitialized : EngineLifecycleEvent<PolyglotContext> ","description":"elide.runtime.core.EngineLifecycleEvent.ContextInitialized","location":"packages/graalvm/elide.runtime.core/-engine-lifecycle-event/-context-initialized/index.html","searchKeys":["ContextInitialized","data object ContextInitialized : EngineLifecycleEvent<PolyglotContext> ","elide.runtime.core.EngineLifecycleEvent.ContextInitialized"]},{"name":"data object EngineCreated : EngineLifecycleEvent<PolyglotEngineBuilder> ","description":"elide.runtime.core.EngineLifecycleEvent.EngineCreated","location":"packages/graalvm/elide.runtime.core/-engine-lifecycle-event/-engine-created/index.html","searchKeys":["EngineCreated","data object EngineCreated : EngineLifecycleEvent<PolyglotEngineBuilder> ","elide.runtime.core.EngineLifecycleEvent.EngineCreated"]},{"name":"data object EngineInitialized : EngineLifecycleEvent<PolyglotEngine> ","description":"elide.runtime.core.EngineLifecycleEvent.EngineInitialized","location":"packages/graalvm/elide.runtime.core/-engine-lifecycle-event/-engine-initialized/index.html","searchKeys":["EngineInitialized","data object EngineInitialized : EngineLifecycleEvent<PolyglotEngine> ","elide.runtime.core.EngineLifecycleEvent.EngineInitialized"]},{"name":"enum AccessDomain : Enum<AccessDomain> ","description":"elide.runtime.gvm.internals.vfs.AccessDomain","location":"packages/graalvm/elide.runtime.gvm.internals.vfs/-access-domain/index.html","searchKeys":["AccessDomain","enum AccessDomain : Enum<AccessDomain> ","elide.runtime.gvm.internals.vfs.AccessDomain"]},{"name":"enum AccessResult : Enum<AccessResult> ","description":"elide.runtime.gvm.internals.vfs.AccessResult","location":"packages/graalvm/elide.runtime.gvm.internals.vfs/-access-result/index.html","searchKeys":["AccessResult","enum AccessResult : Enum<AccessResult> ","elide.runtime.gvm.internals.vfs.AccessResult"]},{"name":"enum AccessScope : Enum<AccessScope> ","description":"elide.runtime.gvm.internals.vfs.AccessScope","location":"packages/graalvm/elide.runtime.gvm.internals.vfs/-access-scope/index.html","searchKeys":["AccessScope","enum AccessScope : Enum<AccessScope> ","elide.runtime.gvm.internals.vfs.AccessScope"]},{"name":"enum AccessType : Enum<AccessType> ","description":"elide.runtime.gvm.internals.vfs.AccessType","location":"packages/graalvm/elide.runtime.gvm.internals.vfs/-access-type/index.html","searchKeys":["AccessType","enum AccessType : Enum<AccessType> ","elide.runtime.gvm.internals.vfs.AccessType"]},{"name":"enum Architecture : Enum<HostPlatform.Architecture> ","description":"elide.runtime.core.HostPlatform.Architecture","location":"packages/graalvm/elide.runtime.core/-host-platform/-architecture/index.html","searchKeys":["Architecture","enum Architecture : Enum<HostPlatform.Architecture> ","elide.runtime.core.HostPlatform.Architecture"]},{"name":"enum DispatchStyle : Enum<GVMInvocationBindings.DispatchStyle> ","description":"elide.runtime.gvm.internals.GVMInvocationBindings.DispatchStyle","location":"packages/graalvm/elide.runtime.gvm.internals/-g-v-m-invocation-bindings/-dispatch-style/index.html","searchKeys":["DispatchStyle","enum DispatchStyle : Enum<GVMInvocationBindings.DispatchStyle> ","elide.runtime.gvm.internals.GVMInvocationBindings.DispatchStyle"]},{"name":"enum EnvVariableSource : Enum<EnvConfig.EnvVariableSource> ","description":"elide.runtime.plugins.env.EnvConfig.EnvVariableSource","location":"packages/graalvm/elide.runtime.plugins.env/-env-config/-env-variable-source/index.html","searchKeys":["EnvVariableSource","enum EnvVariableSource : Enum<EnvConfig.EnvVariableSource> ","elide.runtime.plugins.env.EnvConfig.EnvVariableSource"]},{"name":"enum GraalVMGuest : Enum<GraalVMGuest> , GuestLanguage","description":"elide.runtime.gvm.internals.GraalVMGuest","location":"packages/graalvm/elide.runtime.gvm.internals/-graal-v-m-guest/index.html","searchKeys":["GraalVMGuest","enum GraalVMGuest : Enum<GraalVMGuest> , GuestLanguage","elide.runtime.gvm.internals.GraalVMGuest"]},{"name":"enum HostAccess : Enum<PolyglotEngineConfiguration.HostAccess> ","description":"elide.runtime.core.PolyglotEngineConfiguration.HostAccess","location":"packages/graalvm/elide.runtime.core/-polyglot-engine-configuration/-host-access/index.html","searchKeys":["HostAccess","enum HostAccess : Enum<PolyglotEngineConfiguration.HostAccess> ","elide.runtime.core.PolyglotEngineConfiguration.HostAccess"]},{"name":"enum HttpMethod : Enum<HttpMethod> ","description":"elide.runtime.intrinsics.server.http.HttpMethod","location":"packages/graalvm/elide.runtime.intrinsics.server.http/-http-method/index.html","searchKeys":["HttpMethod","enum HttpMethod : Enum<HttpMethod> ","elide.runtime.intrinsics.server.http.HttpMethod"]},{"name":"enum InvocationMode : Enum<InvocationMode> ","description":"elide.runtime.gvm.InvocationMode","location":"packages/graalvm/elide.runtime.gvm/-invocation-mode/index.html","searchKeys":["InvocationMode","enum InvocationMode : Enum<InvocationMode> ","elide.runtime.gvm.InvocationMode"]},{"name":"enum JavaScriptVersion : Enum<JavaScriptVersion> ","description":"elide.runtime.plugins.js.JavaScriptVersion","location":"packages/graalvm/elide.runtime.plugins.js/-java-script-version/index.html","searchKeys":["JavaScriptVersion","enum JavaScriptVersion : Enum<JavaScriptVersion> ","elide.runtime.plugins.js.JavaScriptVersion"]},{"name":"enum OperatingSystem : Enum<HostPlatform.OperatingSystem> ","description":"elide.runtime.core.HostPlatform.OperatingSystem","location":"packages/graalvm/elide.runtime.core/-host-platform/-operating-system/index.html","searchKeys":["OperatingSystem","enum OperatingSystem : Enum<HostPlatform.OperatingSystem> ","elide.runtime.core.HostPlatform.OperatingSystem"]},{"name":"enum State : Enum<ExecutableScript.State> ","description":"elide.runtime.gvm.ExecutableScript.State","location":"packages/graalvm/elide.runtime.gvm/-executable-script/-state/index.html","searchKeys":["State","enum State : Enum<ExecutableScript.State> ","elide.runtime.gvm.ExecutableScript.State"]},{"name":"enum UUIDType : Enum<UUID.UUIDType> ","description":"elide.runtime.intrinsics.js.typed.UUID.UUIDType","location":"packages/graalvm/elide.runtime.intrinsics.js.typed/-u-u-i-d/-u-u-i-d-type/index.html","searchKeys":["UUIDType","enum UUIDType : Enum<UUID.UUIDType> ","elide.runtime.intrinsics.js.typed.UUID.UUIDType"]},{"name":"fun <C : Any, T : Any> PluginRegistry.getOrInstall(plugin: EnginePlugin<C, T>, configure: C.() -> Unit = { }): T","description":"elide.runtime.core.getOrInstall","location":"packages/graalvm/elide.runtime.core/get-or-install.html","searchKeys":["getOrInstall","fun <C : Any, T : Any> PluginRegistry.getOrInstall(plugin: EnginePlugin<C, T>, configure: C.() -> Unit = { }): T","elide.runtime.core.getOrInstall"]},{"name":"fun <K : Any, V> empty(size: Int): JsMap<K, V>","description":"elide.runtime.gvm.internals.intrinsics.js.struct.map.JsMap.Factory.empty","location":"packages/graalvm/elide.runtime.gvm.internals.intrinsics.js.struct.map/-js-map/-factory/empty.html","searchKeys":["empty","fun <K : Any, V> empty(size: Int): JsMap<K, V>","elide.runtime.gvm.internals.intrinsics.js.struct.map.JsMap.Factory.empty"]},{"name":"fun <S : Any> requestState(state: RequestState, props: S? = null): RequestExecutionInputs<HttpRequest<Any>>","description":"elide.runtime.gvm.js.JavaScript.Inputs.requestState","location":"packages/graalvm/elide.runtime.gvm.js/-java-script/-inputs/request-state.html","searchKeys":["requestState","fun <S : Any> requestState(state: RequestState, props: S? = null): RequestExecutionInputs<HttpRequest<Any>>","elide.runtime.gvm.js.JavaScript.Inputs.requestState"]},{"name":"fun <T : Any> PluginRegistry.plugin(plugin: EnginePlugin<*, T>): T?","description":"elide.runtime.core.plugin","location":"packages/graalvm/elide.runtime.core/plugin.html","searchKeys":["plugin","fun <T : Any> PluginRegistry.plugin(plugin: EnginePlugin<*, T>): T?","elide.runtime.core.plugin"]},{"name":"fun <T : Any> PluginRegistry.requirePlugin(plugin: EnginePlugin<*, T>): T","description":"elide.runtime.core.requirePlugin","location":"packages/graalvm/elide.runtime.core/require-plugin.html","searchKeys":["requirePlugin","fun <T : Any> PluginRegistry.requirePlugin(plugin: EnginePlugin<*, T>): T","elide.runtime.core.requirePlugin"]},{"name":"fun <T> PluginRegistry.requirePlugin(key: EnginePlugin.Key<T>): T","description":"elide.runtime.core.requirePlugin","location":"packages/graalvm/elide.runtime.core/require-plugin.html","searchKeys":["requirePlugin","fun <T> PluginRegistry.requirePlugin(key: EnginePlugin.Key<T>): T","elide.runtime.core.requirePlugin"]},{"name":"fun <T> forIterator(iterator: Iterator<T>): JsIterator<T>","description":"elide.runtime.intrinsics.js.JsIterator.JsIteratorFactory.forIterator","location":"packages/graalvm/elide.runtime.intrinsics.js/-js-iterator/-js-iterator-factory/for-iterator.html","searchKeys":["forIterator","fun <T> forIterator(iterator: Iterator<T>): JsIterator<T>","elide.runtime.intrinsics.js.JsIterator.JsIteratorFactory.forIterator"]},{"name":"fun ExecutionListener.Builder.attach(engine: PolyglotEngine): ExecutionListener","description":"elide.runtime.core.extensions.attach","location":"packages/graalvm/elide.runtime.core.extensions/attach.html","searchKeys":["attach","fun ExecutionListener.Builder.attach(engine: PolyglotEngine): ExecutionListener","elide.runtime.core.extensions.attach"]},{"name":"fun PolyglotContext.evaluate(language: GuestLanguage, source: String, name: String? = null, internal: Boolean = false): PolyglotValue","description":"elide.runtime.core.evaluate","location":"packages/graalvm/elide.runtime.core/evaluate.html","searchKeys":["evaluate","fun PolyglotContext.evaluate(language: GuestLanguage, source: String, name: String? = null, internal: Boolean = false): PolyglotValue","elide.runtime.core.evaluate"]},{"name":"fun PolyglotContext.javascript(source: String, esm: Boolean = false, name: String? = null): PolyglotValue","description":"elide.runtime.plugins.js.javascript","location":"packages/graalvm/elide.runtime.plugins.js/javascript.html","searchKeys":["javascript","fun PolyglotContext.javascript(source: String, esm: Boolean = false, name: String? = null): PolyglotValue","elide.runtime.plugins.js.javascript"]},{"name":"fun PolyglotContext.parse(language: GuestLanguage, source: String, name: String? = null, internal: Boolean = false): PolyglotValue","description":"elide.runtime.core.parse","location":"packages/graalvm/elide.runtime.core/parse.html","searchKeys":["parse","fun PolyglotContext.parse(language: GuestLanguage, source: String, name: String? = null, internal: Boolean = false): PolyglotValue","elide.runtime.core.parse"]},{"name":"fun PolyglotContextBuilder.disableOption(key: String)","description":"elide.runtime.core.extensions.disableOption","location":"packages/graalvm/elide.runtime.core.extensions/disable-option.html","searchKeys":["disableOption","fun PolyglotContextBuilder.disableOption(key: String)","elide.runtime.core.extensions.disableOption"]},{"name":"fun PolyglotContextBuilder.disableOptions(vararg keys: String)","description":"elide.runtime.core.extensions.disableOptions","location":"packages/graalvm/elide.runtime.core.extensions/disable-options.html","searchKeys":["disableOptions","fun PolyglotContextBuilder.disableOptions(vararg keys: String)","elide.runtime.core.extensions.disableOptions"]},{"name":"fun PolyglotContextBuilder.enableOption(key: String)","description":"elide.runtime.core.extensions.enableOption","location":"packages/graalvm/elide.runtime.core.extensions/enable-option.html","searchKeys":["enableOption","fun PolyglotContextBuilder.enableOption(key: String)","elide.runtime.core.extensions.enableOption"]},{"name":"fun PolyglotContextBuilder.enableOptions(vararg keys: String)","description":"elide.runtime.core.extensions.enableOptions","location":"packages/graalvm/elide.runtime.core.extensions/enable-options.html","searchKeys":["enableOptions","fun PolyglotContextBuilder.enableOptions(vararg keys: String)","elide.runtime.core.extensions.enableOptions"]},{"name":"fun PolyglotContextBuilder.setOption(key: String, value: Boolean)","description":"elide.runtime.core.extensions.setOption","location":"packages/graalvm/elide.runtime.core.extensions/set-option.html","searchKeys":["setOption","fun PolyglotContextBuilder.setOption(key: String, value: Boolean)","elide.runtime.core.extensions.setOption"]},{"name":"fun PolyglotContextBuilder.setOptions(vararg options: Pair<String, Boolean>)","description":"elide.runtime.core.extensions.setOptions","location":"packages/graalvm/elide.runtime.core.extensions/set-options.html","searchKeys":["setOptions","fun PolyglotContextBuilder.setOptions(vararg options: Pair<String, Boolean>)","elide.runtime.core.extensions.setOptions"]},{"name":"fun PolyglotContextBuilder.setOptions(vararg options: Pair<String, String>)","description":"elide.runtime.core.extensions.setOptions","location":"packages/graalvm/elide.runtime.core.extensions/set-options.html","searchKeys":["setOptions","fun PolyglotContextBuilder.setOptions(vararg options: Pair<String, String>)","elide.runtime.core.extensions.setOptions"]},{"name":"fun PolyglotEngine(configure: PolyglotEngineConfiguration.() -> Unit = { }): PolyglotEngine","description":"elide.runtime.core.PolyglotEngine","location":"packages/graalvm/elide.runtime.core/-polyglot-engine.html","searchKeys":["PolyglotEngine","fun PolyglotEngine(configure: PolyglotEngineConfiguration.() -> Unit = { }): PolyglotEngine","elide.runtime.core.PolyglotEngine"]},{"name":"fun PolyglotEngineBuilder.disableOption(key: String)","description":"elide.runtime.core.extensions.disableOption","location":"packages/graalvm/elide.runtime.core.extensions/disable-option.html","searchKeys":["disableOption","fun PolyglotEngineBuilder.disableOption(key: String)","elide.runtime.core.extensions.disableOption"]},{"name":"fun PolyglotEngineBuilder.disableOptions(vararg keys: String)","description":"elide.runtime.core.extensions.disableOptions","location":"packages/graalvm/elide.runtime.core.extensions/disable-options.html","searchKeys":["disableOptions","fun PolyglotEngineBuilder.disableOptions(vararg keys: String)","elide.runtime.core.extensions.disableOptions"]},{"name":"fun PolyglotEngineBuilder.enableOption(key: String)","description":"elide.runtime.core.extensions.enableOption","location":"packages/graalvm/elide.runtime.core.extensions/enable-option.html","searchKeys":["enableOption","fun PolyglotEngineBuilder.enableOption(key: String)","elide.runtime.core.extensions.enableOption"]},{"name":"fun PolyglotEngineBuilder.enableOptions(vararg keys: String)","description":"elide.runtime.core.extensions.enableOptions","location":"packages/graalvm/elide.runtime.core.extensions/enable-options.html","searchKeys":["enableOptions","fun PolyglotEngineBuilder.enableOptions(vararg keys: String)","elide.runtime.core.extensions.enableOptions"]},{"name":"fun PolyglotEngineBuilder.setOption(key: String, value: Boolean)","description":"elide.runtime.core.extensions.setOption","location":"packages/graalvm/elide.runtime.core.extensions/set-option.html","searchKeys":["setOption","fun PolyglotEngineBuilder.setOption(key: String, value: Boolean)","elide.runtime.core.extensions.setOption"]},{"name":"fun PolyglotEngineBuilder.setOptions(vararg options: Pair<String, Boolean>)","description":"elide.runtime.core.extensions.setOptions","location":"packages/graalvm/elide.runtime.core.extensions/set-options.html","searchKeys":["setOptions","fun PolyglotEngineBuilder.setOptions(vararg options: Pair<String, Boolean>)","elide.runtime.core.extensions.setOptions"]},{"name":"fun PolyglotEngineBuilder.setOptions(vararg options: Pair<String, String>)","description":"elide.runtime.core.extensions.setOptions","location":"packages/graalvm/elide.runtime.core.extensions/set-options.html","searchKeys":["setOptions","fun PolyglotEngineBuilder.setOptions(vararg options: Pair<String, String>)","elide.runtime.core.extensions.setOptions"]},{"name":"fun PolyglotEngineConfiguration.debug(configure: DebugConfig.() -> Unit)","description":"elide.runtime.plugins.debug.debug","location":"packages/graalvm/elide.runtime.plugins.debug/debug.html","searchKeys":["debug","fun PolyglotEngineConfiguration.debug(configure: DebugConfig.() -> Unit)","elide.runtime.plugins.debug.debug"]},{"name":"fun PolyglotEngineConfiguration.environment(configure: EnvConfig.() -> Unit)","description":"elide.runtime.plugins.env.environment","location":"packages/graalvm/elide.runtime.plugins.env/environment.html","searchKeys":["environment","fun PolyglotEngineConfiguration.environment(configure: EnvConfig.() -> Unit)","elide.runtime.plugins.env.environment"]},{"name":"fun PolyglotEngineConfiguration.vfs(configure: VfsConfig.() -> Unit)","description":"elide.runtime.plugins.vfs.vfs","location":"packages/graalvm/elide.runtime.plugins.vfs/vfs.html","searchKeys":["vfs","fun PolyglotEngineConfiguration.vfs(configure: VfsConfig.() -> Unit)","elide.runtime.plugins.vfs.vfs"]},{"name":"fun Version.andHigher(): Version.Range","description":"elide.runtime.core.andHigher","location":"packages/graalvm/elide.runtime.core/and-higher.html","searchKeys":["andHigher","fun Version.andHigher(): Version.Range","elide.runtime.core.andHigher"]},{"name":"fun Version.andLower(): Version.Range","description":"elide.runtime.core.andLower","location":"packages/graalvm/elide.runtime.core/and-lower.html","searchKeys":["andLower","fun Version.andLower(): Version.Range","elide.runtime.core.andLower"]},{"name":"fun VfsConfig.include(uriString: String)","description":"elide.runtime.plugins.vfs.include","location":"packages/graalvm/elide.runtime.plugins.vfs/include.html","searchKeys":["include","fun VfsConfig.include(uriString: String)","elide.runtime.plugins.vfs.include"]},{"name":"fun VfsConfig.include(url: URL)","description":"elide.runtime.plugins.vfs.include","location":"packages/graalvm/elide.runtime.plugins.vfs/include.html","searchKeys":["include","fun VfsConfig.include(url: URL)","elide.runtime.plugins.vfs.include"]},{"name":"fun acquire(): GuestVFS","description":"elide.runtime.gvm.vfs.HostVFS.acquire","location":"packages/graalvm/elide.runtime.gvm.vfs/-host-v-f-s/acquire.html","searchKeys":["acquire","fun acquire(): GuestVFS","elide.runtime.gvm.vfs.HostVFS.acquire"]},{"name":"fun acquireVM(vararg languages: GuestLanguage): VMFacade","description":"elide.runtime.gvm.VMFacadeFactory.acquireVM","location":"packages/graalvm/elide.runtime.gvm/-v-m-facade-factory/acquire-v-m.html","searchKeys":["acquireVM","fun acquireVM(vararg languages: GuestLanguage): VMFacade","elide.runtime.gvm.VMFacadeFactory.acquireVM"]},{"name":"fun acquireWritable(): GuestVFS","description":"elide.runtime.gvm.vfs.HostVFS.acquireWritable","location":"packages/graalvm/elide.runtime.gvm.vfs/-host-v-f-s/acquire-writable.html","searchKeys":["acquireWritable","fun acquireWritable(): GuestVFS","elide.runtime.gvm.vfs.HostVFS.acquireWritable"]},{"name":"fun active(name: String): VMStaticProperty","description":"elide.runtime.gvm.internals.VMStaticProperty.Companion.active","location":"packages/graalvm/elide.runtime.gvm.internals/-v-m-static-property/-companion/active.html","searchKeys":["active","fun active(name: String): VMStaticProperty","elide.runtime.gvm.internals.VMStaticProperty.Companion.active"]},{"name":"fun activeWhenAtLeast(version: String, name: String, alwaysProvide: Boolean = false): VMStaticProperty?","description":"elide.runtime.gvm.internals.VMStaticProperty.Companion.activeWhenAtLeast","location":"packages/graalvm/elide.runtime.gvm.internals/-v-m-static-property/-companion/active-when-at-least.html","searchKeys":["activeWhenAtLeast","fun activeWhenAtLeast(version: String, name: String, alwaysProvide: Boolean = false): VMStaticProperty?","elide.runtime.gvm.internals.VMStaticProperty.Companion.activeWhenAtLeast"]},{"name":"fun activeWhenAtMost(version: String, name: String, alwaysProvide: Boolean = false): VMStaticProperty?","description":"elide.runtime.gvm.internals.VMStaticProperty.Companion.activeWhenAtMost","location":"packages/graalvm/elide.runtime.gvm.internals/-v-m-static-property/-companion/active-when-at-most.html","searchKeys":["activeWhenAtMost","fun activeWhenAtMost(version: String, name: String, alwaysProvide: Boolean = false): VMStaticProperty?","elide.runtime.gvm.internals.VMStaticProperty.Companion.activeWhenAtMost"]},{"name":"fun bindings(block: MutableMap<String, Any>.() -> Unit)","description":"elide.runtime.plugins.AbstractLanguageConfig.bindings","location":"packages/graalvm/elide.runtime.plugins/-abstract-language-config/bindings.html","searchKeys":["bindings","fun bindings(block: MutableMap<String, Any>.() -> Unit)","elide.runtime.plugins.AbstractLanguageConfig.bindings"]},{"name":"fun build(): JsProxy.MutableObjectProxy","description":"elide.runtime.gvm.internals.intrinsics.js.JsProxy.MutableObjectProxy.Builder.build","location":"packages/graalvm/elide.runtime.gvm.internals.intrinsics.js/-js-proxy/-mutable-object-proxy/-builder/build.html","searchKeys":["build","fun build(): JsProxy.MutableObjectProxy","elide.runtime.gvm.internals.intrinsics.js.JsProxy.MutableObjectProxy.Builder.build"]},{"name":"fun build(builder: JsProxy.MutableObjectProxy.Builder.() -> Unit): ProxyObject","description":"elide.runtime.gvm.internals.intrinsics.js.JsProxy.build","location":"packages/graalvm/elide.runtime.gvm.internals.intrinsics.js/-js-proxy/build.html","searchKeys":["build","fun build(builder: JsProxy.MutableObjectProxy.Builder.() -> Unit): ProxyObject","elide.runtime.gvm.internals.intrinsics.js.JsProxy.build"]},{"name":"fun builder(engine: Engine): Context.Builder","description":"elide.runtime.gvm.internals.AbstractVMEngine.builder","location":"packages/graalvm/elide.runtime.gvm.internals/-abstract-v-m-engine/builder.html","searchKeys":["builder","fun builder(engine: Engine): Context.Builder","elide.runtime.gvm.internals.AbstractVMEngine.builder"]},{"name":"fun builtinModules(config: JavaScriptConfig.BuiltInModulesConfig.() -> Unit)","description":"elide.runtime.plugins.js.JavaScriptConfig.builtinModules","location":"packages/graalvm/elide.runtime.plugins.js/-java-script-config/builtin-modules.html","searchKeys":["builtinModules","fun builtinModules(config: JavaScriptConfig.BuiltInModulesConfig.() -> Unit)","elide.runtime.plugins.js.JavaScriptConfig.builtinModules"]},{"name":"fun chromeInspector(block: DebugConfig.InspectorConfig.() -> Unit)","description":"elide.runtime.plugins.debug.DebugConfig.chromeInspector","location":"packages/graalvm/elide.runtime.plugins.debug/-debug-config/chrome-inspector.html","searchKeys":["chromeInspector","fun chromeInspector(block: DebugConfig.InspectorConfig.() -> Unit)","elide.runtime.plugins.debug.DebugConfig.chromeInspector"]},{"name":"fun configureVM(builder: Context.Builder)","description":"elide.runtime.gvm.internals.AbstractVMEngine.configureVM","location":"packages/graalvm/elide.runtime.gvm.internals/-abstract-v-m-engine/configure-v-m.html","searchKeys":["configureVM","fun configureVM(builder: Context.Builder)","elide.runtime.gvm.internals.AbstractVMEngine.configureVM"]},{"name":"fun contextElementFor(language: GuestLanguage): PolyglotContextElement<GuestLanguageEvaluator>","description":"elide.runtime.core.GuestLanguageEvaluator.Companion.contextElementFor","location":"packages/graalvm/elide.runtime.core/-guest-language-evaluator/-companion/context-element-for.html","searchKeys":["contextElementFor","fun contextElementFor(language: GuestLanguage): PolyglotContextElement<GuestLanguageEvaluator>","elide.runtime.core.GuestLanguageEvaluator.Companion.contextElementFor"]},{"name":"fun contextElementFor(language: GuestLanguage): PolyglotContextElement<GuestLanguageParser>","description":"elide.runtime.core.GuestLanguageParser.Companion.contextElementFor","location":"packages/graalvm/elide.runtime.core/-guest-language-parser/-companion/context-element-for.html","searchKeys":["contextElementFor","fun contextElementFor(language: GuestLanguage): PolyglotContextElement<GuestLanguageParser>","elide.runtime.core.GuestLanguageParser.Companion.contextElementFor"]},{"name":"fun contextElementFor(languageId: String): PolyglotContextElement<GuestLanguageEvaluator>","description":"elide.runtime.core.GuestLanguageEvaluator.Companion.contextElementFor","location":"packages/graalvm/elide.runtime.core/-guest-language-evaluator/-companion/context-element-for.html","searchKeys":["contextElementFor","fun contextElementFor(languageId: String): PolyglotContextElement<GuestLanguageEvaluator>","elide.runtime.core.GuestLanguageEvaluator.Companion.contextElementFor"]},{"name":"fun contextElementFor(languageId: String): PolyglotContextElement<GuestLanguageParser>","description":"elide.runtime.core.GuestLanguageParser.Companion.contextElementFor","location":"packages/graalvm/elide.runtime.core/-guest-language-parser/-companion/context-element-for.html","searchKeys":["contextElementFor","fun contextElementFor(languageId: String): PolyglotContextElement<GuestLanguageParser>","elide.runtime.core.GuestLanguageParser.Companion.contextElementFor"]},{"name":"fun create(): GuestIntrinsic.MutableIntrinsicBindings","description":"elide.runtime.intrinsics.GuestIntrinsic.MutableIntrinsicBindings.Factory.create","location":"packages/graalvm/elide.runtime.intrinsics/-guest-intrinsic/-mutable-intrinsic-bindings/-factory/create.html","searchKeys":["create","fun create(): GuestIntrinsic.MutableIntrinsicBindings","elide.runtime.intrinsics.GuestIntrinsic.MutableIntrinsicBindings.Factory.create"]},{"name":"fun debugAdapter(block: DebugConfig.DebugAdapterConfig.() -> Unit)","description":"elide.runtime.plugins.debug.DebugConfig.debugAdapter","location":"packages/graalvm/elide.runtime.plugins.debug/-debug-config/debug-adapter.html","searchKeys":["debugAdapter","fun debugAdapter(block: DebugConfig.DebugAdapterConfig.() -> Unit)","elide.runtime.plugins.debug.DebugConfig.debugAdapter"]},{"name":"fun embedded(path: String): ExecutableScript","description":"elide.runtime.gvm.js.JavaScript.embedded","location":"packages/graalvm/elide.runtime.gvm.js/-java-script/embedded.html","searchKeys":["embedded","fun embedded(path: String): ExecutableScript","elide.runtime.gvm.js.JavaScript.embedded"]},{"name":"fun empty(): GuestVFS","description":"elide.runtime.gvm.vfs.EmbeddedGuestVFS.empty","location":"packages/graalvm/elide.runtime.gvm.vfs/-embedded-guest-v-f-s/empty.html","searchKeys":["empty","fun empty(): GuestVFS","elide.runtime.gvm.vfs.EmbeddedGuestVFS.empty"]},{"name":"fun environment(block: EnvConfig.AppEnvConfig.() -> Unit)","description":"elide.runtime.plugins.env.EnvConfig.environment","location":"packages/graalvm/elide.runtime.plugins.env/-env-config/environment.html","searchKeys":["environment","fun environment(block: EnvConfig.AppEnvConfig.() -> Unit)","elide.runtime.plugins.env.EnvConfig.environment"]},{"name":"fun environment(name: String, callback: () -> String?)","description":"elide.runtime.plugins.env.EnvConfig.environment","location":"packages/graalvm/elide.runtime.plugins.env/-env-config/environment.html","searchKeys":["environment","fun environment(name: String, callback: () -> String?)","elide.runtime.plugins.env.EnvConfig.environment"]},{"name":"fun environment(name: String, value: String?)","description":"elide.runtime.plugins.env.EnvConfig.environment","location":"packages/graalvm/elide.runtime.plugins.env/-env-config/environment.html","searchKeys":["environment","fun environment(name: String, value: String?)","elide.runtime.plugins.env.EnvConfig.environment"]},{"name":"fun exposeHostEnv(hostVariable: String, defaultValue: String? = null)","description":"elide.runtime.plugins.env.EnvConfig.exposeHostEnv","location":"packages/graalvm/elide.runtime.plugins.env/-env-config/expose-host-env.html","searchKeys":["exposeHostEnv","fun exposeHostEnv(hostVariable: String, defaultValue: String? = null)","elide.runtime.plugins.env.EnvConfig.exposeHostEnv"]},{"name":"fun forBundle(vararg bundle: File): GuestVFS","description":"elide.runtime.gvm.vfs.EmbeddedGuestVFS.forBundle","location":"packages/graalvm/elide.runtime.gvm.vfs/-embedded-guest-v-f-s/for-bundle.html","searchKeys":["forBundle","fun forBundle(vararg bundle: File): GuestVFS","elide.runtime.gvm.vfs.EmbeddedGuestVFS.forBundle"]},{"name":"fun forBundle(vararg bundle: URI): GuestVFS","description":"elide.runtime.gvm.vfs.EmbeddedGuestVFS.forBundle","location":"packages/graalvm/elide.runtime.gvm.vfs/-embedded-guest-v-f-s/for-bundle.html","searchKeys":["forBundle","fun forBundle(vararg bundle: URI): GuestVFS","elide.runtime.gvm.vfs.EmbeddedGuestVFS.forBundle"]},{"name":"fun forBundles(bundles: List<URI>): GuestVFS","description":"elide.runtime.gvm.vfs.EmbeddedGuestVFS.forBundles","location":"packages/graalvm/elide.runtime.gvm.vfs/-embedded-guest-v-f-s/for-bundles.html","searchKeys":["forBundles","fun forBundles(bundles: List<URI>): GuestVFS","elide.runtime.gvm.vfs.EmbeddedGuestVFS.forBundles"]},{"name":"fun forTargetFile(target: Path): GuestVFS","description":"elide.runtime.gvm.vfs.EmbeddedGuestVFS.forTargetFile","location":"packages/graalvm/elide.runtime.gvm.vfs/-embedded-guest-v-f-s/for-target-file.html","searchKeys":["forTargetFile","fun forTargetFile(target: Path): GuestVFS","elide.runtime.gvm.vfs.EmbeddedGuestVFS.forTargetFile"]},{"name":"fun forTargetFile(target: URI): GuestVFS","description":"elide.runtime.gvm.vfs.EmbeddedGuestVFS.forTargetFile","location":"packages/graalvm/elide.runtime.gvm.vfs/-embedded-guest-v-f-s/for-target-file.html","searchKeys":["forTargetFile","fun forTargetFile(target: URI): GuestVFS","elide.runtime.gvm.vfs.EmbeddedGuestVFS.forTargetFile"]},{"name":"fun forZip(target: URI): GuestVFS","description":"elide.runtime.gvm.vfs.EmbeddedGuestVFS.forZip","location":"packages/graalvm/elide.runtime.gvm.vfs/-embedded-guest-v-f-s/for-zip.html","searchKeys":["forZip","fun forZip(target: URI): GuestVFS","elide.runtime.gvm.vfs.EmbeddedGuestVFS.forZip"]},{"name":"fun fromDotenv(file: String, name: String, value: String?)","description":"elide.runtime.plugins.env.EnvConfig.fromDotenv","location":"packages/graalvm/elide.runtime.plugins.env/-env-config/from-dotenv.html","searchKeys":["fromDotenv","fun fromDotenv(file: String, name: String, value: String?)","elide.runtime.plugins.env.EnvConfig.fromDotenv"]},{"name":"fun fromDotenv(file: String, name: String, value: String?): EnvConfig.EnvVar","description":"elide.runtime.plugins.env.EnvConfig.EnvVar.Companion.fromDotenv","location":"packages/graalvm/elide.runtime.plugins.env/-env-config/-env-var/-companion/from-dotenv.html","searchKeys":["fromDotenv","fun fromDotenv(file: String, name: String, value: String?): EnvConfig.EnvVar","elide.runtime.plugins.env.EnvConfig.EnvVar.Companion.fromDotenv"]},{"name":"fun inactive(name: String): VMStaticProperty","description":"elide.runtime.gvm.internals.VMStaticProperty.Companion.inactive","location":"packages/graalvm/elide.runtime.gvm.internals/-v-m-static-property/-companion/inactive.html","searchKeys":["inactive","fun inactive(name: String): VMStaticProperty","elide.runtime.gvm.internals.VMStaticProperty.Companion.inactive"]},{"name":"fun inactiveWhenAtLeast(version: String, name: String, alwaysProvide: Boolean = false): VMStaticProperty?","description":"elide.runtime.gvm.internals.VMStaticProperty.Companion.inactiveWhenAtLeast","location":"packages/graalvm/elide.runtime.gvm.internals/-v-m-static-property/-companion/inactive-when-at-least.html","searchKeys":["inactiveWhenAtLeast","fun inactiveWhenAtLeast(version: String, name: String, alwaysProvide: Boolean = false): VMStaticProperty?","elide.runtime.gvm.internals.VMStaticProperty.Companion.inactiveWhenAtLeast"]},{"name":"fun inactiveWhenAtMost(version: String, name: String, alwaysProvide: Boolean = false): VMStaticProperty?","description":"elide.runtime.gvm.internals.VMStaticProperty.Companion.inactiveWhenAtMost","location":"packages/graalvm/elide.runtime.gvm.internals/-v-m-static-property/-companion/inactive-when-at-most.html","searchKeys":["inactiveWhenAtMost","fun inactiveWhenAtMost(version: String, name: String, alwaysProvide: Boolean = false): VMStaticProperty?","elide.runtime.gvm.internals.VMStaticProperty.Companion.inactiveWhenAtMost"]},{"name":"fun include(bundle: URI)","description":"elide.runtime.plugins.vfs.VfsConfig.include","location":"packages/graalvm/elide.runtime.plugins.vfs/-vfs-config/include.html","searchKeys":["include","fun include(bundle: URI)","elide.runtime.plugins.vfs.VfsConfig.include"]},{"name":"fun install(context: PolyglotContext, language: GuestLanguage)","description":"elide.runtime.plugins.env.Environment.install","location":"packages/graalvm/elide.runtime.plugins.env/-environment/install.html","searchKeys":["install","fun install(context: PolyglotContext, language: GuestLanguage)","elide.runtime.plugins.env.Environment.install"]},{"name":"fun install(path: String, value: Any, context: PolyglotContext, language: GuestLanguage)","description":"elide.runtime.intrinsics.ElideBindings.install","location":"packages/graalvm/elide.runtime.intrinsics/-elide-bindings/install.html","searchKeys":["install","fun install(path: String, value: Any, context: PolyglotContext, language: GuestLanguage)","elide.runtime.intrinsics.ElideBindings.install"]},{"name":"fun literal(code: CharSequence): ExecutableScript","description":"elide.runtime.gvm.js.JavaScript.literal","location":"packages/graalvm/elide.runtime.gvm.js/-java-script/literal.html","searchKeys":["literal","fun literal(code: CharSequence): ExecutableScript","elide.runtime.gvm.js.JavaScript.literal"]},{"name":"fun mapToHost(name: String, atName: String = name, defaultValue: String? = null): EnvConfig.EnvVar","description":"elide.runtime.plugins.env.EnvConfig.EnvVar.Companion.mapToHost","location":"packages/graalvm/elide.runtime.plugins.env/-env-config/-env-var/-companion/map-to-host.html","searchKeys":["mapToHost","fun mapToHost(name: String, atName: String = name, defaultValue: String? = null): EnvConfig.EnvVar","elide.runtime.plugins.env.EnvConfig.EnvVar.Companion.mapToHost"]},{"name":"fun mapToHostEnv(hostVariable: String, alias: String = hostVariable, defaultValue: String? = null)","description":"elide.runtime.plugins.env.EnvConfig.mapToHostEnv","location":"packages/graalvm/elide.runtime.plugins.env/-env-config/map-to-host-env.html","searchKeys":["mapToHostEnv","fun mapToHostEnv(hostVariable: String, alias: String = hostVariable, defaultValue: String? = null)","elide.runtime.plugins.env.EnvConfig.mapToHostEnv"]},{"name":"fun npm(config: JavaScriptConfig.NpmConfig.() -> Unit)","description":"elide.runtime.plugins.js.JavaScriptConfig.npm","location":"packages/graalvm/elide.runtime.plugins.js/-java-script-config/npm.html","searchKeys":["npm","fun npm(config: JavaScriptConfig.NpmConfig.() -> Unit)","elide.runtime.plugins.js.JavaScriptConfig.npm"]},{"name":"fun of(name: String, value: String): EnvConfig.EnvVar","description":"elide.runtime.plugins.env.EnvConfig.EnvVar.Companion.of","location":"packages/graalvm/elide.runtime.plugins.env/-env-config/-env-var/-companion/of.html","searchKeys":["of","fun of(name: String, value: String): EnvConfig.EnvVar","elide.runtime.plugins.env.EnvConfig.EnvVar.Companion.of"]},{"name":"fun of(name: String, value: String): VMStaticProperty","description":"elide.runtime.gvm.internals.VMStaticProperty.Companion.of","location":"packages/graalvm/elide.runtime.gvm.internals/-v-m-static-property/-companion/of.html","searchKeys":["of","fun of(name: String, value: String): VMStaticProperty","elide.runtime.gvm.internals.VMStaticProperty.Companion.of"]},{"name":"fun ofBoolean(name: String, symbol: String, defaultValue: Boolean? = null, getter: () -> Boolean?? = null): VMRuntimeProperty","description":"elide.runtime.gvm.internals.VMRuntimeProperty.Companion.ofBoolean","location":"packages/graalvm/elide.runtime.gvm.internals/-v-m-runtime-property/-companion/of-boolean.html","searchKeys":["ofBoolean","fun ofBoolean(name: String, symbol: String, defaultValue: Boolean? = null, getter: () -> Boolean?? = null): VMRuntimeProperty","elide.runtime.gvm.internals.VMRuntimeProperty.Companion.ofBoolean"]},{"name":"fun ofConfigurable(name: String, symbol: String, defaultValue: String? = null, getter: () -> String?? = null): VMRuntimeProperty","description":"elide.runtime.gvm.internals.VMRuntimeProperty.Companion.ofConfigurable","location":"packages/graalvm/elide.runtime.gvm.internals/-v-m-runtime-property/-companion/of-configurable.html","searchKeys":["ofConfigurable","fun ofConfigurable(name: String, symbol: String, defaultValue: String? = null, getter: () -> String?? = null): VMRuntimeProperty","elide.runtime.gvm.internals.VMRuntimeProperty.Companion.ofConfigurable"]},{"name":"fun parse(spec: String): Version","description":"elide.runtime.core.Version.Companion.parse","location":"packages/graalvm/elide.runtime.core/-version/-companion/parse.html","searchKeys":["parse","fun parse(spec: String): Version","elide.runtime.core.Version.Companion.parse"]},{"name":"fun parseArchitecture(name: String): HostPlatform.Architecture","description":"elide.runtime.core.HostPlatform.Companion.parseArchitecture","location":"packages/graalvm/elide.runtime.core/-host-platform/-companion/parse-architecture.html","searchKeys":["parseArchitecture","fun parseArchitecture(name: String): HostPlatform.Architecture","elide.runtime.core.HostPlatform.Companion.parseArchitecture"]},{"name":"fun parseOperatingSystem(name: String): HostPlatform.OperatingSystem","description":"elide.runtime.core.HostPlatform.Companion.parseOperatingSystem","location":"packages/graalvm/elide.runtime.core/-host-platform/-companion/parse-operating-system.html","searchKeys":["parseOperatingSystem","fun parseOperatingSystem(name: String): HostPlatform.OperatingSystem","elide.runtime.core.HostPlatform.Companion.parseOperatingSystem"]},{"name":"fun parsePlatform(name: String): HostPlatform","description":"elide.runtime.core.HostPlatform.Companion.parsePlatform","location":"packages/graalvm/elide.runtime.core/-host-platform/-companion/parse-platform.html","searchKeys":["parsePlatform","fun parsePlatform(name: String): HostPlatform","elide.runtime.core.HostPlatform.Companion.parsePlatform"]},{"name":"fun platformString(): String","description":"elide.runtime.core.HostPlatform.platformString","location":"packages/graalvm/elide.runtime.core/-host-platform/platform-string.html","searchKeys":["platformString","fun platformString(): String","elide.runtime.core.HostPlatform.platformString"]},{"name":"fun provide(name: String, provider: Supplier<String?>): EnvConfig.EnvVar","description":"elide.runtime.plugins.env.EnvConfig.EnvVar.Companion.provide","location":"packages/graalvm/elide.runtime.plugins.env/-env-config/-env-var/-companion/provide.html","searchKeys":["provide","fun provide(name: String, provider: Supplier<String?>): EnvConfig.EnvVar","elide.runtime.plugins.env.EnvConfig.EnvVar.Companion.provide"]},{"name":"fun put(key: String, value: Any?)","description":"elide.runtime.gvm.internals.intrinsics.js.JsProxy.MutableObjectProxy.Builder.put","location":"packages/graalvm/elide.runtime.gvm.internals.intrinsics.js/-js-proxy/-mutable-object-proxy/-builder/put.html","searchKeys":["put","fun put(key: String, value: Any?)","elide.runtime.gvm.internals.intrinsics.js.JsProxy.MutableObjectProxy.Builder.put"]},{"name":"fun putFunction(key: String, function: ProxyExecutable)","description":"elide.runtime.gvm.internals.intrinsics.js.JsProxy.MutableObjectProxy.Builder.putFunction","location":"packages/graalvm/elide.runtime.gvm.internals.intrinsics.js/-js-proxy/-mutable-object-proxy/-builder/put-function.html","searchKeys":["putFunction","fun putFunction(key: String, function: ProxyExecutable)","elide.runtime.gvm.internals.intrinsics.js.JsProxy.MutableObjectProxy.Builder.putFunction"]},{"name":"fun putObject(key: String)","description":"elide.runtime.gvm.internals.intrinsics.js.JsProxy.MutableObjectProxy.Builder.putObject","location":"packages/graalvm/elide.runtime.gvm.internals.intrinsics.js/-js-proxy/-mutable-object-proxy/-builder/put-object.html","searchKeys":["putObject","fun putObject(key: String)","elide.runtime.gvm.internals.intrinsics.js.JsProxy.MutableObjectProxy.Builder.putObject"]},{"name":"fun putObject(key: String, builder: JsProxy.MutableObjectProxy.Builder.() -> Unit)","description":"elide.runtime.gvm.internals.intrinsics.js.JsProxy.MutableObjectProxy.Builder.putObject","location":"packages/graalvm/elide.runtime.gvm.internals.intrinsics.js/-js-proxy/-mutable-object-proxy/-builder/put-object.html","searchKeys":["putObject","fun putObject(key: String, builder: JsProxy.MutableObjectProxy.Builder.() -> Unit)","elide.runtime.gvm.internals.intrinsics.js.JsProxy.MutableObjectProxy.Builder.putObject"]},{"name":"fun replaceModule(module: String, replacementPath: String)","description":"elide.runtime.plugins.js.JavaScriptConfig.BuiltInModulesConfig.replaceModule","location":"packages/graalvm/elide.runtime.plugins.js/-java-script-config/-built-in-modules-config/replace-module.html","searchKeys":["replaceModule","fun replaceModule(module: String, replacementPath: String)","elide.runtime.plugins.js.JavaScriptConfig.BuiltInModulesConfig.replaceModule"]},{"name":"fun resolve(): HostPlatform","description":"elide.runtime.core.HostPlatform.Companion.resolve","location":"packages/graalvm/elide.runtime.core/-host-platform/-companion/resolve.html","searchKeys":["resolve","fun resolve(): HostPlatform","elide.runtime.core.HostPlatform.Companion.resolve"]},{"name":"fun resolveRuntimeInfo(engine: String, name: String, mime: String? = null): Pair<AbstractVMEngine.RuntimeInfo, Source>","description":"elide.runtime.gvm.internals.AbstractVMEngine.Companion.resolveRuntimeInfo","location":"packages/graalvm/elide.runtime.gvm.internals/-abstract-v-m-engine/-companion/resolve-runtime-info.html","searchKeys":["resolveRuntimeInfo","fun resolveRuntimeInfo(engine: String, name: String, mime: String? = null): Pair<AbstractVMEngine.RuntimeInfo, Source>","elide.runtime.gvm.internals.AbstractVMEngine.Companion.resolveRuntimeInfo"]},{"name":"fun resolver(): IntrinsicsResolver","description":"elide.runtime.gvm.internals.IntrinsicsManager.resolver","location":"packages/graalvm/elide.runtime.gvm.internals/-intrinsics-manager/resolver.html","searchKeys":["resolver","fun resolver(): IntrinsicsResolver","elide.runtime.gvm.internals.IntrinsicsManager.resolver"]},{"name":"fun run(entrypoint: Source, acquireContext: () -> PolyglotContext)","description":"elide.runtime.intrinsics.server.http.HttpServerAgent.run","location":"packages/graalvm/elide.runtime.intrinsics.server.http/-http-server-agent/run.html","searchKeys":["run","fun run(entrypoint: Source, acquireContext: () -> PolyglotContext)","elide.runtime.intrinsics.server.http.HttpServerAgent.run"]},{"name":"fun scopedTo(path: Path, writable: Boolean = false): GuestVFS","description":"elide.runtime.gvm.vfs.HostVFS.scopedTo","location":"packages/graalvm/elide.runtime.gvm.vfs/-host-v-f-s/scoped-to.html","searchKeys":["scopedTo","fun scopedTo(path: Path, writable: Boolean = false): GuestVFS","elide.runtime.gvm.vfs.HostVFS.scopedTo"]},{"name":"fun scopedTo(path: String, writable: Boolean = false): GuestVFS","description":"elide.runtime.gvm.vfs.HostVFS.scopedTo","location":"packages/graalvm/elide.runtime.gvm.vfs/-host-v-f-s/scoped-to.html","searchKeys":["scopedTo","fun scopedTo(path: String, writable: Boolean = false): GuestVFS","elide.runtime.gvm.vfs.HostVFS.scopedTo"]},{"name":"fun setEnv(key: String, value: EnvConfig.EnvVar)","description":"elide.runtime.plugins.env.EnvConfig.AppEnvConfig.setEnv","location":"packages/graalvm/elide.runtime.plugins.env/-env-config/-app-env-config/set-env.html","searchKeys":["setEnv","fun setEnv(key: String, value: EnvConfig.EnvVar)","elide.runtime.plugins.env.EnvConfig.AppEnvConfig.setEnv"]},{"name":"fun spawn(builder: Context.Builder): Context","description":"elide.runtime.gvm.internals.AbstractVMEngine.spawn","location":"packages/graalvm/elide.runtime.gvm.internals/-abstract-v-m-engine/spawn.html","searchKeys":["spawn","fun spawn(builder: Context.Builder): Context","elide.runtime.gvm.internals.AbstractVMEngine.spawn"]},{"name":"fun valueOf(value: String): AccessDomain","description":"elide.runtime.gvm.internals.vfs.AccessDomain.valueOf","location":"packages/graalvm/elide.runtime.gvm.internals.vfs/-access-domain/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): AccessDomain","elide.runtime.gvm.internals.vfs.AccessDomain.valueOf"]},{"name":"fun valueOf(value: String): AccessResult","description":"elide.runtime.gvm.internals.vfs.AccessResult.valueOf","location":"packages/graalvm/elide.runtime.gvm.internals.vfs/-access-result/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): AccessResult","elide.runtime.gvm.internals.vfs.AccessResult.valueOf"]},{"name":"fun valueOf(value: String): AccessScope","description":"elide.runtime.gvm.internals.vfs.AccessScope.valueOf","location":"packages/graalvm/elide.runtime.gvm.internals.vfs/-access-scope/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): AccessScope","elide.runtime.gvm.internals.vfs.AccessScope.valueOf"]},{"name":"fun valueOf(value: String): AccessType","description":"elide.runtime.gvm.internals.vfs.AccessType.valueOf","location":"packages/graalvm/elide.runtime.gvm.internals.vfs/-access-type/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): AccessType","elide.runtime.gvm.internals.vfs.AccessType.valueOf"]},{"name":"fun valueOf(value: String): EnvConfig.EnvVariableSource","description":"elide.runtime.plugins.env.EnvConfig.EnvVariableSource.valueOf","location":"packages/graalvm/elide.runtime.plugins.env/-env-config/-env-variable-source/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): EnvConfig.EnvVariableSource","elide.runtime.plugins.env.EnvConfig.EnvVariableSource.valueOf"]},{"name":"fun valueOf(value: String): ExecutableScript.State","description":"elide.runtime.gvm.ExecutableScript.State.valueOf","location":"packages/graalvm/elide.runtime.gvm/-executable-script/-state/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): ExecutableScript.State","elide.runtime.gvm.ExecutableScript.State.valueOf"]},{"name":"fun valueOf(value: String): GVMInvocationBindings.DispatchStyle","description":"elide.runtime.gvm.internals.GVMInvocationBindings.DispatchStyle.valueOf","location":"packages/graalvm/elide.runtime.gvm.internals/-g-v-m-invocation-bindings/-dispatch-style/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): GVMInvocationBindings.DispatchStyle","elide.runtime.gvm.internals.GVMInvocationBindings.DispatchStyle.valueOf"]},{"name":"fun valueOf(value: String): GraalVMGuest","description":"elide.runtime.gvm.internals.GraalVMGuest.valueOf","location":"packages/graalvm/elide.runtime.gvm.internals/-graal-v-m-guest/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): GraalVMGuest","elide.runtime.gvm.internals.GraalVMGuest.valueOf"]},{"name":"fun valueOf(value: String): HostPlatform.Architecture","description":"elide.runtime.core.HostPlatform.Architecture.valueOf","location":"packages/graalvm/elide.runtime.core/-host-platform/-architecture/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): HostPlatform.Architecture","elide.runtime.core.HostPlatform.Architecture.valueOf"]},{"name":"fun valueOf(value: String): HostPlatform.OperatingSystem","description":"elide.runtime.core.HostPlatform.OperatingSystem.valueOf","location":"packages/graalvm/elide.runtime.core/-host-platform/-operating-system/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): HostPlatform.OperatingSystem","elide.runtime.core.HostPlatform.OperatingSystem.valueOf"]},{"name":"fun valueOf(value: String): HttpMethod","description":"elide.runtime.intrinsics.server.http.HttpMethod.valueOf","location":"packages/graalvm/elide.runtime.intrinsics.server.http/-http-method/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): HttpMethod","elide.runtime.intrinsics.server.http.HttpMethod.valueOf"]},{"name":"fun valueOf(value: String): InvocationMode","description":"elide.runtime.gvm.InvocationMode.valueOf","location":"packages/graalvm/elide.runtime.gvm/-invocation-mode/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): InvocationMode","elide.runtime.gvm.InvocationMode.valueOf"]},{"name":"fun valueOf(value: String): JavaScriptVersion","description":"elide.runtime.plugins.js.JavaScriptVersion.valueOf","location":"packages/graalvm/elide.runtime.plugins.js/-java-script-version/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): JavaScriptVersion","elide.runtime.plugins.js.JavaScriptVersion.valueOf"]},{"name":"fun valueOf(value: String): PolyglotEngineConfiguration.HostAccess","description":"elide.runtime.core.PolyglotEngineConfiguration.HostAccess.valueOf","location":"packages/graalvm/elide.runtime.core/-polyglot-engine-configuration/-host-access/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): PolyglotEngineConfiguration.HostAccess","elide.runtime.core.PolyglotEngineConfiguration.HostAccess.valueOf"]},{"name":"fun valueOf(value: String): UUID.UUIDType","description":"elide.runtime.intrinsics.js.typed.UUID.UUIDType.valueOf","location":"packages/graalvm/elide.runtime.intrinsics.js.typed/-u-u-i-d/-u-u-i-d-type/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): UUID.UUIDType","elide.runtime.intrinsics.js.typed.UUID.UUIDType.valueOf"]},{"name":"fun values(): Array<AccessDomain>","description":"elide.runtime.gvm.internals.vfs.AccessDomain.values","location":"packages/graalvm/elide.runtime.gvm.internals.vfs/-access-domain/values.html","searchKeys":["values","fun values(): Array<AccessDomain>","elide.runtime.gvm.internals.vfs.AccessDomain.values"]},{"name":"fun values(): Array<AccessResult>","description":"elide.runtime.gvm.internals.vfs.AccessResult.values","location":"packages/graalvm/elide.runtime.gvm.internals.vfs/-access-result/values.html","searchKeys":["values","fun values(): Array<AccessResult>","elide.runtime.gvm.internals.vfs.AccessResult.values"]},{"name":"fun values(): Array<AccessScope>","description":"elide.runtime.gvm.internals.vfs.AccessScope.values","location":"packages/graalvm/elide.runtime.gvm.internals.vfs/-access-scope/values.html","searchKeys":["values","fun values(): Array<AccessScope>","elide.runtime.gvm.internals.vfs.AccessScope.values"]},{"name":"fun values(): Array<AccessType>","description":"elide.runtime.gvm.internals.vfs.AccessType.values","location":"packages/graalvm/elide.runtime.gvm.internals.vfs/-access-type/values.html","searchKeys":["values","fun values(): Array<AccessType>","elide.runtime.gvm.internals.vfs.AccessType.values"]},{"name":"fun values(): Array<EnvConfig.EnvVariableSource>","description":"elide.runtime.plugins.env.EnvConfig.EnvVariableSource.values","location":"packages/graalvm/elide.runtime.plugins.env/-env-config/-env-variable-source/values.html","searchKeys":["values","fun values(): Array<EnvConfig.EnvVariableSource>","elide.runtime.plugins.env.EnvConfig.EnvVariableSource.values"]},{"name":"fun values(): Array<ExecutableScript.State>","description":"elide.runtime.gvm.ExecutableScript.State.values","location":"packages/graalvm/elide.runtime.gvm/-executable-script/-state/values.html","searchKeys":["values","fun values(): Array<ExecutableScript.State>","elide.runtime.gvm.ExecutableScript.State.values"]},{"name":"fun values(): Array<GVMInvocationBindings.DispatchStyle>","description":"elide.runtime.gvm.internals.GVMInvocationBindings.DispatchStyle.values","location":"packages/graalvm/elide.runtime.gvm.internals/-g-v-m-invocation-bindings/-dispatch-style/values.html","searchKeys":["values","fun values(): Array<GVMInvocationBindings.DispatchStyle>","elide.runtime.gvm.internals.GVMInvocationBindings.DispatchStyle.values"]},{"name":"fun values(): Array<GraalVMGuest>","description":"elide.runtime.gvm.internals.GraalVMGuest.values","location":"packages/graalvm/elide.runtime.gvm.internals/-graal-v-m-guest/values.html","searchKeys":["values","fun values(): Array<GraalVMGuest>","elide.runtime.gvm.internals.GraalVMGuest.values"]},{"name":"fun values(): Array<HostPlatform.Architecture>","description":"elide.runtime.core.HostPlatform.Architecture.values","location":"packages/graalvm/elide.runtime.core/-host-platform/-architecture/values.html","searchKeys":["values","fun values(): Array<HostPlatform.Architecture>","elide.runtime.core.HostPlatform.Architecture.values"]},{"name":"fun values(): Array<HostPlatform.OperatingSystem>","description":"elide.runtime.core.HostPlatform.OperatingSystem.values","location":"packages/graalvm/elide.runtime.core/-host-platform/-operating-system/values.html","searchKeys":["values","fun values(): Array<HostPlatform.OperatingSystem>","elide.runtime.core.HostPlatform.OperatingSystem.values"]},{"name":"fun values(): Array<HttpMethod>","description":"elide.runtime.intrinsics.server.http.HttpMethod.values","location":"packages/graalvm/elide.runtime.intrinsics.server.http/-http-method/values.html","searchKeys":["values","fun values(): Array<HttpMethod>","elide.runtime.intrinsics.server.http.HttpMethod.values"]},{"name":"fun values(): Array<InvocationMode>","description":"elide.runtime.gvm.InvocationMode.values","location":"packages/graalvm/elide.runtime.gvm/-invocation-mode/values.html","searchKeys":["values","fun values(): Array<InvocationMode>","elide.runtime.gvm.InvocationMode.values"]},{"name":"fun values(): Array<JavaScriptVersion>","description":"elide.runtime.plugins.js.JavaScriptVersion.values","location":"packages/graalvm/elide.runtime.plugins.js/-java-script-version/values.html","searchKeys":["values","fun values(): Array<JavaScriptVersion>","elide.runtime.plugins.js.JavaScriptVersion.values"]},{"name":"fun values(): Array<PolyglotEngineConfiguration.HostAccess>","description":"elide.runtime.core.PolyglotEngineConfiguration.HostAccess.values","location":"packages/graalvm/elide.runtime.core/-polyglot-engine-configuration/-host-access/values.html","searchKeys":["values","fun values(): Array<PolyglotEngineConfiguration.HostAccess>","elide.runtime.core.PolyglotEngineConfiguration.HostAccess.values"]},{"name":"fun values(): Array<UUID.UUIDType>","description":"elide.runtime.intrinsics.js.typed.UUID.UUIDType.values","location":"packages/graalvm/elide.runtime.intrinsics.js.typed/-u-u-i-d/-u-u-i-d-type/values.html","searchKeys":["values","fun values(): Array<UUID.UUIDType>","elide.runtime.intrinsics.js.typed.UUID.UUIDType.values"]},{"name":"fun whenAtLeast(version: String, name: String, state: Boolean, alwaysProvide: Boolean = false, check: (SemanticVersion, SemanticVersion) -> Boolean): VMStaticProperty?","description":"elide.runtime.gvm.internals.VMStaticProperty.Companion.whenAtLeast","location":"packages/graalvm/elide.runtime.gvm.internals/-v-m-static-property/-companion/when-at-least.html","searchKeys":["whenAtLeast","fun whenAtLeast(version: String, name: String, state: Boolean, alwaysProvide: Boolean = false, check: (SemanticVersion, SemanticVersion) -> Boolean): VMStaticProperty?","elide.runtime.gvm.internals.VMStaticProperty.Companion.whenAtLeast"]},{"name":"fun whenAtMost(version: String, name: String, state: Boolean, alwaysProvide: Boolean = false, check: (SemanticVersion, SemanticVersion) -> Boolean): VMStaticProperty?","description":"elide.runtime.gvm.internals.VMStaticProperty.Companion.whenAtMost","location":"packages/graalvm/elide.runtime.gvm.internals/-v-m-static-property/-companion/when-at-most.html","searchKeys":["whenAtMost","fun whenAtMost(version: String, name: String, state: Boolean, alwaysProvide: Boolean = false, check: (SemanticVersion, SemanticVersion) -> Boolean): VMStaticProperty?","elide.runtime.gvm.internals.VMStaticProperty.Companion.whenAtMost"]},{"name":"fun wrap(delegate: Any): JsProxy.PropertyProxy","description":"elide.runtime.gvm.internals.intrinsics.js.JsProxy.wrap","location":"packages/graalvm/elide.runtime.gvm.internals.intrinsics.js/-js-proxy/wrap.html","searchKeys":["wrap","fun wrap(delegate: Any): JsProxy.PropertyProxy","elide.runtime.gvm.internals.intrinsics.js.JsProxy.wrap"]},{"name":"fun wrap(target: MutableMap<Symbol, Any>): GuestIntrinsic.MutableIntrinsicBindings","description":"elide.runtime.intrinsics.GuestIntrinsic.MutableIntrinsicBindings.Factory.wrap","location":"packages/graalvm/elide.runtime.intrinsics/-guest-intrinsic/-mutable-intrinsic-bindings/-factory/wrap.html","searchKeys":["wrap","fun wrap(target: MutableMap<Symbol, Any>): GuestIntrinsic.MutableIntrinsicBindings","elide.runtime.intrinsics.GuestIntrinsic.MutableIntrinsicBindings.Factory.wrap"]},{"name":"fun writable(): GuestVFS","description":"elide.runtime.gvm.vfs.EmbeddedGuestVFS.writable","location":"packages/graalvm/elide.runtime.gvm.vfs/-embedded-guest-v-f-s/writable.html","searchKeys":["writable","fun writable(): GuestVFS","elide.runtime.gvm.vfs.EmbeddedGuestVFS.writable"]},{"name":"fun writable(bundle: File): GuestVFS","description":"elide.runtime.gvm.vfs.EmbeddedGuestVFS.writable","location":"packages/graalvm/elide.runtime.gvm.vfs/-embedded-guest-v-f-s/writable.html","searchKeys":["writable","fun writable(bundle: File): GuestVFS","elide.runtime.gvm.vfs.EmbeddedGuestVFS.writable"]},{"name":"fun writable(bundle: URI): GuestVFS","description":"elide.runtime.gvm.vfs.EmbeddedGuestVFS.writable","location":"packages/graalvm/elide.runtime.gvm.vfs/-embedded-guest-v-f-s/writable.html","searchKeys":["writable","fun writable(bundle: URI): GuestVFS","elide.runtime.gvm.vfs.EmbeddedGuestVFS.writable"]},{"name":"fun writable(bundles: List<URI>): GuestVFS","description":"elide.runtime.gvm.vfs.EmbeddedGuestVFS.writable","location":"packages/graalvm/elide.runtime.gvm.vfs/-embedded-guest-v-f-s/writable.html","searchKeys":["writable","fun writable(bundles: List<URI>): GuestVFS","elide.runtime.gvm.vfs.EmbeddedGuestVFS.writable"]},{"name":"inline fun <R> HostRuntime.on(range: Version.Range, block: () -> R): R?","description":"elide.runtime.core.on","location":"packages/graalvm/elide.runtime.core/on.html","searchKeys":["on","inline fun <R> HostRuntime.on(range: Version.Range, block: () -> R): R?","elide.runtime.core.on"]},{"name":"inline fun <R> HostRuntime.on(version: Version, block: () -> R): R?","description":"elide.runtime.core.on","location":"packages/graalvm/elide.runtime.core/on.html","searchKeys":["on","inline fun <R> HostRuntime.on(version: Version, block: () -> R): R?","elide.runtime.core.on"]},{"name":"inner class BuiltInModulesConfig","description":"elide.runtime.plugins.js.JavaScriptConfig.BuiltInModulesConfig","location":"packages/graalvm/elide.runtime.plugins.js/-java-script-config/-built-in-modules-config/index.html","searchKeys":["BuiltInModulesConfig","inner class BuiltInModulesConfig","elide.runtime.plugins.js.JavaScriptConfig.BuiltInModulesConfig"]},{"name":"inner class NpmConfig","description":"elide.runtime.plugins.js.JavaScriptConfig.NpmConfig","location":"packages/graalvm/elide.runtime.plugins.js/-java-script-config/-npm-config/index.html","searchKeys":["NpmConfig","inner class NpmConfig","elide.runtime.plugins.js.JavaScriptConfig.NpmConfig"]},{"name":"interface AbstractJSException","description":"elide.runtime.intrinsics.js.err.AbstractJSException","location":"packages/graalvm/elide.runtime.intrinsics.js.err/-abstract-j-s-exception/index.html","searchKeys":["AbstractJSException","interface AbstractJSException","elide.runtime.intrinsics.js.err.AbstractJSException"]},{"name":"interface Blob","description":"elide.runtime.intrinsics.js.Blob","location":"packages/graalvm/elide.runtime.intrinsics.js/-blob/index.html","searchKeys":["Blob","interface Blob","elide.runtime.intrinsics.js.Blob"]},{"name":"interface Constructors","description":"elide.runtime.intrinsics.js.CryptoKey.Constructors","location":"packages/graalvm/elide.runtime.intrinsics.js/-crypto-key/-constructors/index.html","searchKeys":["Constructors","interface Constructors","elide.runtime.intrinsics.js.CryptoKey.Constructors"]},{"name":"interface ContextFactory<Context, Builder>","description":"elide.runtime.gvm.ContextFactory","location":"packages/graalvm/elide.runtime.gvm/-context-factory/index.html","searchKeys":["ContextFactory","interface ContextFactory<Context, Builder>","elide.runtime.gvm.ContextFactory"]},{"name":"interface ContextManager<Context, Builder> : ContextFactory<Context, Builder> ","description":"elide.runtime.gvm.internals.context.ContextManager","location":"packages/graalvm/elide.runtime.gvm.internals.context/-context-manager/index.html","searchKeys":["ContextManager","interface ContextManager<Context, Builder> : ContextFactory<Context, Builder> ","elide.runtime.gvm.internals.context.ContextManager"]},{"name":"interface Crypto : RandomSource","description":"elide.runtime.intrinsics.js.Crypto","location":"packages/graalvm/elide.runtime.intrinsics.js/-crypto/index.html","searchKeys":["Crypto","interface Crypto : RandomSource","elide.runtime.intrinsics.js.Crypto"]},{"name":"interface CryptoKey","description":"elide.runtime.intrinsics.js.CryptoKey","location":"packages/graalvm/elide.runtime.intrinsics.js/-crypto-key/index.html","searchKeys":["CryptoKey","interface CryptoKey","elide.runtime.intrinsics.js.CryptoKey"]},{"name":"interface EngineLifecycle","description":"elide.runtime.core.EngineLifecycle","location":"packages/graalvm/elide.runtime.core/-engine-lifecycle/index.html","searchKeys":["EngineLifecycle","interface EngineLifecycle","elide.runtime.core.EngineLifecycle"]},{"name":"interface EngineLifecycleEvent<T>","description":"elide.runtime.core.EngineLifecycleEvent","location":"packages/graalvm/elide.runtime.core/-engine-lifecycle-event/index.html","searchKeys":["EngineLifecycleEvent","interface EngineLifecycleEvent<T>","elide.runtime.core.EngineLifecycleEvent"]},{"name":"interface EnginePlugin<Config : Any, Instance : Any>","description":"elide.runtime.core.EnginePlugin","location":"packages/graalvm/elide.runtime.core/-engine-plugin/index.html","searchKeys":["EnginePlugin","interface EnginePlugin<Config : Any, Instance : Any>","elide.runtime.core.EnginePlugin"]},{"name":"interface Entry<K, V>","description":"elide.runtime.intrinsics.js.MapLike.Entry","location":"packages/graalvm/elide.runtime.intrinsics.js/-map-like/-entry/index.html","searchKeys":["Entry","interface Entry<K, V>","elide.runtime.intrinsics.js.MapLike.Entry"]},{"name":"interface EnvVar","description":"elide.runtime.plugins.env.EnvConfig.EnvVar","location":"packages/graalvm/elide.runtime.plugins.env/-env-config/-env-var/index.html","searchKeys":["EnvVar","interface EnvVar","elide.runtime.plugins.env.EnvConfig.EnvVar"]},{"name":"interface ErrorFactory<T : AbstractJSException>","description":"elide.runtime.intrinsics.js.err.AbstractJSException.ErrorFactory","location":"packages/graalvm/elide.runtime.intrinsics.js.err/-abstract-j-s-exception/-error-factory/index.html","searchKeys":["ErrorFactory","interface ErrorFactory<T : AbstractJSException>","elide.runtime.intrinsics.js.err.AbstractJSException.ErrorFactory"]},{"name":"interface ExecutableScript","description":"elide.runtime.gvm.ExecutableScript","location":"packages/graalvm/elide.runtime.gvm/-executable-script/index.html","searchKeys":["ExecutableScript","interface ExecutableScript","elide.runtime.gvm.ExecutableScript"]},{"name":"interface ExecutionInputs","description":"elide.runtime.gvm.ExecutionInputs","location":"packages/graalvm/elide.runtime.gvm/-execution-inputs/index.html","searchKeys":["ExecutionInputs","interface ExecutionInputs","elide.runtime.gvm.ExecutionInputs"]},{"name":"interface Express : ServerAgent","description":"elide.runtime.intrinsics.js.express.Express","location":"packages/graalvm/elide.runtime.intrinsics.js.express/-express/index.html","searchKeys":["Express","interface Express : ServerAgent","elide.runtime.intrinsics.js.express.Express"]},{"name":"interface ExpressApp","description":"elide.runtime.intrinsics.js.express.ExpressApp","location":"packages/graalvm/elide.runtime.intrinsics.js.express/-express-app/index.html","searchKeys":["ExpressApp","interface ExpressApp","elide.runtime.intrinsics.js.express.ExpressApp"]},{"name":"interface ExpressRequest","description":"elide.runtime.intrinsics.js.express.ExpressRequest","location":"packages/graalvm/elide.runtime.intrinsics.js.express/-express-request/index.html","searchKeys":["ExpressRequest","interface ExpressRequest","elide.runtime.intrinsics.js.express.ExpressRequest"]},{"name":"interface ExpressResponse","description":"elide.runtime.intrinsics.js.express.ExpressResponse","location":"packages/graalvm/elide.runtime.intrinsics.js.express/-express-response/index.html","searchKeys":["ExpressResponse","interface ExpressResponse","elide.runtime.intrinsics.js.express.ExpressResponse"]},{"name":"interface Factory","description":"elide.runtime.intrinsics.js.typed.UUID.Factory","location":"packages/graalvm/elide.runtime.intrinsics.js.typed/-u-u-i-d/-factory/index.html","searchKeys":["Factory","interface Factory","elide.runtime.intrinsics.js.typed.UUID.Factory"]},{"name":"interface Factory<Impl : FetchHeaders>","description":"elide.runtime.intrinsics.js.FetchHeaders.Factory","location":"packages/graalvm/elide.runtime.intrinsics.js/-fetch-headers/-factory/index.html","searchKeys":["Factory","interface Factory<Impl : FetchHeaders>","elide.runtime.intrinsics.js.FetchHeaders.Factory"]},{"name":"interface Factory<Impl : FetchResponse>","description":"elide.runtime.intrinsics.js.FetchResponse.Factory","location":"packages/graalvm/elide.runtime.intrinsics.js/-fetch-response/-factory/index.html","searchKeys":["Factory","interface Factory<Impl : FetchResponse>","elide.runtime.intrinsics.js.FetchResponse.Factory"]},{"name":"interface Factory<Impl : ReadableStream>","description":"elide.runtime.intrinsics.js.ReadableStream.Factory","location":"packages/graalvm/elide.runtime.intrinsics.js/-readable-stream/-factory/index.html","searchKeys":["Factory","interface Factory<Impl : ReadableStream>","elide.runtime.intrinsics.js.ReadableStream.Factory"]},{"name":"interface FetchAPI","description":"elide.runtime.intrinsics.js.FetchAPI","location":"packages/graalvm/elide.runtime.intrinsics.js/-fetch-a-p-i/index.html","searchKeys":["FetchAPI","interface FetchAPI","elide.runtime.intrinsics.js.FetchAPI"]},{"name":"interface FetchHeaders : MultiMapLike<String, String> ","description":"elide.runtime.intrinsics.js.FetchHeaders","location":"packages/graalvm/elide.runtime.intrinsics.js/-fetch-headers/index.html","searchKeys":["FetchHeaders","interface FetchHeaders : MultiMapLike<String, String> ","elide.runtime.intrinsics.js.FetchHeaders"]},{"name":"interface FetchMutableHeaders : FetchHeaders","description":"elide.runtime.intrinsics.js.FetchMutableHeaders","location":"packages/graalvm/elide.runtime.intrinsics.js/-fetch-mutable-headers/index.html","searchKeys":["FetchMutableHeaders","interface FetchMutableHeaders : FetchHeaders","elide.runtime.intrinsics.js.FetchMutableHeaders"]},{"name":"interface FetchMutableRequest : FetchRequest","description":"elide.runtime.intrinsics.js.FetchMutableRequest","location":"packages/graalvm/elide.runtime.intrinsics.js/-fetch-mutable-request/index.html","searchKeys":["FetchMutableRequest","interface FetchMutableRequest : FetchRequest","elide.runtime.intrinsics.js.FetchMutableRequest"]},{"name":"interface FetchMutableResponse : FetchResponse","description":"elide.runtime.intrinsics.js.FetchMutableResponse","location":"packages/graalvm/elide.runtime.intrinsics.js/-fetch-mutable-response/index.html","searchKeys":["FetchMutableResponse","interface FetchMutableResponse : FetchResponse","elide.runtime.intrinsics.js.FetchMutableResponse"]},{"name":"interface FetchRequest","description":"elide.runtime.intrinsics.js.FetchRequest","location":"packages/graalvm/elide.runtime.intrinsics.js/-fetch-request/index.html","searchKeys":["FetchRequest","interface FetchRequest","elide.runtime.intrinsics.js.FetchRequest"]},{"name":"interface FetchResponse","description":"elide.runtime.intrinsics.js.FetchResponse","location":"packages/graalvm/elide.runtime.intrinsics.js/-fetch-response/index.html","searchKeys":["FetchResponse","interface FetchResponse","elide.runtime.intrinsics.js.FetchResponse"]},{"name":"interface File","description":"elide.runtime.intrinsics.js.File","location":"packages/graalvm/elide.runtime.intrinsics.js/-file/index.html","searchKeys":["File","interface File","elide.runtime.intrinsics.js.File"]},{"name":"interface FrameworkFeature : Feature","description":"elide.runtime.feature.FrameworkFeature","location":"packages/graalvm/elide.runtime.feature/-framework-feature/index.html","searchKeys":["FrameworkFeature","interface FrameworkFeature : Feature","elide.runtime.feature.FrameworkFeature"]},{"name":"interface GuestIntrinsic","description":"elide.runtime.intrinsics.GuestIntrinsic","location":"packages/graalvm/elide.runtime.intrinsics/-guest-intrinsic/index.html","searchKeys":["GuestIntrinsic","interface GuestIntrinsic","elide.runtime.intrinsics.GuestIntrinsic"]},{"name":"interface GuestLanguage","description":"elide.runtime.core.GuestLanguage","location":"packages/graalvm/elide.runtime.core/-guest-language/index.html","searchKeys":["GuestLanguage","interface GuestLanguage","elide.runtime.core.GuestLanguage"]},{"name":"interface GuestLanguage","description":"elide.runtime.gvm.GuestLanguage","location":"packages/graalvm/elide.runtime.gvm/-guest-language/index.html","searchKeys":["GuestLanguage","interface GuestLanguage","elide.runtime.gvm.GuestLanguage"]},{"name":"interface GuestLanguageEvaluator","description":"elide.runtime.core.GuestLanguageEvaluator","location":"packages/graalvm/elide.runtime.core/-guest-language-evaluator/index.html","searchKeys":["GuestLanguageEvaluator","interface GuestLanguageEvaluator","elide.runtime.core.GuestLanguageEvaluator"]},{"name":"interface GuestLanguageParser","description":"elide.runtime.core.GuestLanguageParser","location":"packages/graalvm/elide.runtime.core/-guest-language-parser/index.html","searchKeys":["GuestLanguageParser","interface GuestLanguageParser","elide.runtime.core.GuestLanguageParser"]},{"name":"interface GuestRuntimeConfiguration : Toggleable","description":"elide.runtime.gvm.cfg.GuestRuntimeConfiguration","location":"packages/graalvm/elide.runtime.gvm.cfg/-guest-runtime-configuration/index.html","searchKeys":["GuestRuntimeConfiguration","interface GuestRuntimeConfiguration : Toggleable","elide.runtime.gvm.cfg.GuestRuntimeConfiguration"]},{"name":"interface GuestScript : ExecutableScript","description":"elide.runtime.gvm.GuestScript","location":"packages/graalvm/elide.runtime.gvm/-guest-script/index.html","searchKeys":["GuestScript","interface GuestScript : ExecutableScript","elide.runtime.gvm.GuestScript"]},{"name":"interface GuestVFS : FileSystem, Closeable, AutoCloseable","description":"elide.runtime.gvm.internals.GuestVFS","location":"packages/graalvm/elide.runtime.gvm.internals/-guest-v-f-s/index.html","searchKeys":["GuestVFS","interface GuestVFS : FileSystem, Closeable, AutoCloseable","elide.runtime.gvm.internals.GuestVFS"]},{"name":"interface GuestVFSPolicy","description":"elide.runtime.gvm.internals.vfs.GuestVFSPolicy","location":"packages/graalvm/elide.runtime.gvm.internals.vfs/-guest-v-f-s-policy/index.html","searchKeys":["GuestVFSPolicy","interface GuestVFSPolicy","elide.runtime.gvm.internals.vfs.GuestVFSPolicy"]},{"name":"interface HostRuntime","description":"elide.runtime.core.HostRuntime","location":"packages/graalvm/elide.runtime.core/-host-runtime/index.html","searchKeys":["HostRuntime","interface HostRuntime","elide.runtime.core.HostRuntime"]},{"name":"interface HttpRequest","description":"elide.runtime.intrinsics.server.http.HttpRequest","location":"packages/graalvm/elide.runtime.intrinsics.server.http/-http-request/index.html","searchKeys":["HttpRequest","interface HttpRequest","elide.runtime.intrinsics.server.http.HttpRequest"]},{"name":"interface HttpResponse","description":"elide.runtime.intrinsics.server.http.HttpResponse","location":"packages/graalvm/elide.runtime.intrinsics.server.http/-http-response/index.html","searchKeys":["HttpResponse","interface HttpResponse","elide.runtime.intrinsics.server.http.HttpResponse"]},{"name":"interface HttpRouter","description":"elide.runtime.intrinsics.server.http.HttpRouter","location":"packages/graalvm/elide.runtime.intrinsics.server.http/-http-router/index.html","searchKeys":["HttpRouter","interface HttpRouter","elide.runtime.intrinsics.server.http.HttpRouter"]},{"name":"interface HttpServerEngine","description":"elide.runtime.intrinsics.server.http.HttpServerEngine","location":"packages/graalvm/elide.runtime.intrinsics.server.http/-http-server-engine/index.html","searchKeys":["HttpServerEngine","interface HttpServerEngine","elide.runtime.intrinsics.server.http.HttpServerEngine"]},{"name":"interface InstallationScope","description":"elide.runtime.core.EnginePlugin.InstallationScope","location":"packages/graalvm/elide.runtime.core/-engine-plugin/-installation-scope/index.html","searchKeys":["InstallationScope","interface InstallationScope","elide.runtime.core.EnginePlugin.InstallationScope"]},{"name":"interface IntrinsicBindings : Map<Symbol, Any> ","description":"elide.runtime.intrinsics.GuestIntrinsic.IntrinsicBindings","location":"packages/graalvm/elide.runtime.intrinsics/-guest-intrinsic/-intrinsic-bindings/index.html","searchKeys":["IntrinsicBindings","interface IntrinsicBindings : Map<Symbol, Any> ","elide.runtime.intrinsics.GuestIntrinsic.IntrinsicBindings"]},{"name":"interface IntrinsicsResolver","description":"elide.runtime.intrinsics.IntrinsicsResolver","location":"packages/graalvm/elide.runtime.intrinsics/-intrinsics-resolver/index.html","searchKeys":["IntrinsicsResolver","interface IntrinsicsResolver","elide.runtime.intrinsics.IntrinsicsResolver"]},{"name":"interface InvocationBindings","description":"elide.runtime.gvm.InvocationBindings","location":"packages/graalvm/elide.runtime.gvm/-invocation-bindings/index.html","searchKeys":["InvocationBindings","interface InvocationBindings","elide.runtime.gvm.InvocationBindings"]},{"name":"interface JavaScriptBase64","description":"elide.runtime.intrinsics.js.JavaScriptBase64","location":"packages/graalvm/elide.runtime.intrinsics.js/-java-script-base64/index.html","searchKeys":["JavaScriptBase64","interface JavaScriptBase64","elide.runtime.intrinsics.js.JavaScriptBase64"]},{"name":"interface JavaScriptConsole","description":"elide.runtime.intrinsics.js.JavaScriptConsole","location":"packages/graalvm/elide.runtime.intrinsics.js/-java-script-console/index.html","searchKeys":["JavaScriptConsole","interface JavaScriptConsole","elide.runtime.intrinsics.js.JavaScriptConsole"]},{"name":"interface JavaScriptStreams","description":"elide.runtime.intrinsics.js.JavaScriptStreams","location":"packages/graalvm/elide.runtime.intrinsics.js/-java-script-streams/index.html","searchKeys":["JavaScriptStreams","interface JavaScriptStreams","elide.runtime.intrinsics.js.JavaScriptStreams"]},{"name":"interface JsEsmConfig : Toggleable","description":"elide.runtime.gvm.cfg.JsRuntimeConfig.JsEsmConfig","location":"packages/graalvm/elide.runtime.gvm.cfg/-js-runtime-config/-js-esm-config/index.html","searchKeys":["JsEsmConfig","interface JsEsmConfig : Toggleable","elide.runtime.gvm.cfg.JsRuntimeConfig.JsEsmConfig"]},{"name":"interface JsIterator<T> : Iterator<JsIterator.JsIteratorResult<T>> , ProxyIterator, ProxyIterable","description":"elide.runtime.intrinsics.js.JsIterator","location":"packages/graalvm/elide.runtime.intrinsics.js/-js-iterator/index.html","searchKeys":["JsIterator","interface JsIterator<T> : Iterator<JsIterator.JsIteratorResult<T>> , ProxyIterator, ProxyIterable","elide.runtime.intrinsics.js.JsIterator"]},{"name":"interface JsNpmConfig : Toggleable","description":"elide.runtime.gvm.cfg.JsRuntimeConfig.JsNpmConfig","location":"packages/graalvm/elide.runtime.gvm.cfg/-js-runtime-config/-js-npm-config/index.html","searchKeys":["JsNpmConfig","interface JsNpmConfig : Toggleable","elide.runtime.gvm.cfg.JsRuntimeConfig.JsNpmConfig"]},{"name":"interface JsPromise<T>","description":"elide.runtime.intrinsics.js.JsPromise","location":"packages/graalvm/elide.runtime.intrinsics.js/-js-promise/index.html","searchKeys":["JsPromise","interface JsPromise<T>","elide.runtime.intrinsics.js.JsPromise"]},{"name":"interface JsRuntimeConfig : Toggleable, GuestRuntimeConfiguration","description":"elide.runtime.gvm.cfg.JsRuntimeConfig","location":"packages/graalvm/elide.runtime.gvm.cfg/-js-runtime-config/index.html","searchKeys":["JsRuntimeConfig","interface JsRuntimeConfig : Toggleable, GuestRuntimeConfiguration","elide.runtime.gvm.cfg.JsRuntimeConfig"]},{"name":"interface MapLike<K : Any, V> : Map<K, V> ","description":"elide.runtime.intrinsics.js.MapLike","location":"packages/graalvm/elide.runtime.intrinsics.js/-map-like/index.html","searchKeys":["MapLike","interface MapLike<K : Any, V> : Map<K, V> ","elide.runtime.intrinsics.js.MapLike"]},{"name":"interface MicronautRequestExecutionInputs<Data> : RequestExecutionInputs<HttpRequest<Data>> ","description":"elide.runtime.gvm.MicronautRequestExecutionInputs","location":"packages/graalvm/elide.runtime.gvm/-micronaut-request-execution-inputs/index.html","searchKeys":["MicronautRequestExecutionInputs","interface MicronautRequestExecutionInputs<Data> : RequestExecutionInputs<HttpRequest<Data>> ","elide.runtime.gvm.MicronautRequestExecutionInputs"]},{"name":"interface MultiMapLike<K : Any, V> : MapLike<K, V> ","description":"elide.runtime.intrinsics.js.MultiMapLike","location":"packages/graalvm/elide.runtime.intrinsics.js/-multi-map-like/index.html","searchKeys":["MultiMapLike","interface MultiMapLike<K : Any, V> : MapLike<K, V> ","elide.runtime.intrinsics.js.MultiMapLike"]},{"name":"interface MutableIntrinsicBindings : GuestIntrinsic.IntrinsicBindings, MutableMap<Symbol, Any> , ProxyObject","description":"elide.runtime.intrinsics.GuestIntrinsic.MutableIntrinsicBindings","location":"packages/graalvm/elide.runtime.intrinsics/-guest-intrinsic/-mutable-intrinsic-bindings/index.html","searchKeys":["MutableIntrinsicBindings","interface MutableIntrinsicBindings : GuestIntrinsic.IntrinsicBindings, MutableMap<Symbol, Any> , ProxyObject","elide.runtime.intrinsics.GuestIntrinsic.MutableIntrinsicBindings"]},{"name":"interface MutableMapLike<K : Any, V> : MapLike<K, V> , MutableMap<K, V> ","description":"elide.runtime.intrinsics.js.MutableMapLike","location":"packages/graalvm/elide.runtime.intrinsics.js/-mutable-map-like/index.html","searchKeys":["MutableMapLike","interface MutableMapLike<K : Any, V> : MapLike<K, V> , MutableMap<K, V> ","elide.runtime.intrinsics.js.MutableMapLike"]},{"name":"interface MutableMultiMapLike<K : Any, V> : MutableMapLike<K, V> , MultiMapLike<K, V> ","description":"elide.runtime.intrinsics.js.MutableMultiMapLike","location":"packages/graalvm/elide.runtime.intrinsics.js/-mutable-multi-map-like/index.html","searchKeys":["MutableMultiMapLike","interface MutableMultiMapLike<K : Any, V> : MutableMapLike<K, V> , MultiMapLike<K, V> ","elide.runtime.intrinsics.js.MutableMultiMapLike"]},{"name":"interface MutableURL : URL","description":"elide.runtime.intrinsics.js.MutableURL","location":"packages/graalvm/elide.runtime.intrinsics.js/-mutable-u-r-l/index.html","searchKeys":["MutableURL","interface MutableURL : URL","elide.runtime.intrinsics.js.MutableURL"]},{"name":"interface PluginRegistry","description":"elide.runtime.core.PluginRegistry","location":"packages/graalvm/elide.runtime.core/-plugin-registry/index.html","searchKeys":["PluginRegistry","interface PluginRegistry","elide.runtime.core.PluginRegistry"]},{"name":"interface PolyglotContext","description":"elide.runtime.core.PolyglotContext","location":"packages/graalvm/elide.runtime.core/-polyglot-context/index.html","searchKeys":["PolyglotContext","interface PolyglotContext","elide.runtime.core.PolyglotContext"]},{"name":"interface PolyglotEngine","description":"elide.runtime.core.PolyglotEngine","location":"packages/graalvm/elide.runtime.core/-polyglot-engine/index.html","searchKeys":["PolyglotEngine","interface PolyglotEngine","elide.runtime.core.PolyglotEngine"]},{"name":"interface RandomSource","description":"elide.runtime.intrinsics.js.RandomSource","location":"packages/graalvm/elide.runtime.intrinsics.js/-random-source/index.html","searchKeys":["RandomSource","interface RandomSource","elide.runtime.intrinsics.js.RandomSource"]},{"name":"interface ReadableStream","description":"elide.runtime.intrinsics.js.ReadableStream","location":"packages/graalvm/elide.runtime.intrinsics.js/-readable-stream/index.html","searchKeys":["ReadableStream","interface ReadableStream","elide.runtime.intrinsics.js.ReadableStream"]},{"name":"interface RequestExecutionInputs<Request : Any> : ExecutionInputs","description":"elide.runtime.gvm.RequestExecutionInputs","location":"packages/graalvm/elide.runtime.gvm/-request-execution-inputs/index.html","searchKeys":["RequestExecutionInputs","interface RequestExecutionInputs<Request : Any> : ExecutionInputs","elide.runtime.gvm.RequestExecutionInputs"]},{"name":"interface RequestFactory<Impl : FetchRequest>","description":"elide.runtime.intrinsics.js.FetchMutableRequest.RequestFactory","location":"packages/graalvm/elide.runtime.intrinsics.js/-fetch-mutable-request/-request-factory/index.html","searchKeys":["RequestFactory","interface RequestFactory<Impl : FetchRequest>","elide.runtime.intrinsics.js.FetchMutableRequest.RequestFactory"]},{"name":"interface ServerAgent","description":"elide.runtime.intrinsics.js.ServerAgent","location":"packages/graalvm/elide.runtime.intrinsics.js/-server-agent/index.html","searchKeys":["ServerAgent","interface ServerAgent","elide.runtime.intrinsics.js.ServerAgent"]},{"name":"interface Stacktrace","description":"elide.runtime.intrinsics.js.err.Stacktrace","location":"packages/graalvm/elide.runtime.intrinsics.js.err/-stacktrace/index.html","searchKeys":["Stacktrace","interface Stacktrace","elide.runtime.intrinsics.js.err.Stacktrace"]},{"name":"interface StringLike : CharSequence","description":"elide.runtime.intrinsics.js.StringLike","location":"packages/graalvm/elide.runtime.intrinsics.js/-string-like/index.html","searchKeys":["StringLike","interface StringLike : CharSequence","elide.runtime.intrinsics.js.StringLike"]},{"name":"interface SubtleCrypto","description":"elide.runtime.intrinsics.js.SubtleCrypto","location":"packages/graalvm/elide.runtime.intrinsics.js/-subtle-crypto/index.html","searchKeys":["SubtleCrypto","interface SubtleCrypto","elide.runtime.intrinsics.js.SubtleCrypto"]},{"name":"interface Symbol : Symbolic<String> ","description":"elide.runtime.intrinsics.Symbol","location":"packages/graalvm/elide.runtime.intrinsics/-symbol/index.html","searchKeys":["Symbol","interface Symbol : Symbolic<String> ","elide.runtime.intrinsics.Symbol"]},{"name":"interface URL : Serializable","description":"elide.runtime.intrinsics.js.URL","location":"packages/graalvm/elide.runtime.intrinsics.js/-u-r-l/index.html","searchKeys":["URL","interface URL : Serializable","elide.runtime.intrinsics.js.URL"]},{"name":"interface URLConstructors","description":"elide.runtime.intrinsics.js.URL.URLConstructors","location":"packages/graalvm/elide.runtime.intrinsics.js/-u-r-l/-u-r-l-constructors/index.html","searchKeys":["URLConstructors","interface URLConstructors","elide.runtime.intrinsics.js.URL.URLConstructors"]},{"name":"interface URLMutableSearchParams : URLSearchParams, MutableMultiMapLike<String, String> ","description":"elide.runtime.intrinsics.js.URLMutableSearchParams","location":"packages/graalvm/elide.runtime.intrinsics.js/-u-r-l-mutable-search-params/index.html","searchKeys":["URLMutableSearchParams","interface URLMutableSearchParams : URLSearchParams, MutableMultiMapLike<String, String> ","elide.runtime.intrinsics.js.URLMutableSearchParams"]},{"name":"interface URLSearchParams : Serializable, MultiMapLike<String, String> ","description":"elide.runtime.intrinsics.js.URLSearchParams","location":"packages/graalvm/elide.runtime.intrinsics.js/-u-r-l-search-params/index.html","searchKeys":["URLSearchParams","interface URLSearchParams : Serializable, MultiMapLike<String, String> ","elide.runtime.intrinsics.js.URLSearchParams"]},{"name":"interface URLStaticMethods","description":"elide.runtime.intrinsics.js.URL.URLStaticMethods","location":"packages/graalvm/elide.runtime.intrinsics.js/-u-r-l/-u-r-l-static-methods/index.html","searchKeys":["URLStaticMethods","interface URLStaticMethods","elide.runtime.intrinsics.js.URL.URLStaticMethods"]},{"name":"interface UUID : StringLike","description":"elide.runtime.intrinsics.js.typed.UUID","location":"packages/graalvm/elide.runtime.intrinsics.js.typed/-u-u-i-d/index.html","searchKeys":["UUID","interface UUID : StringLike","elide.runtime.intrinsics.js.typed.UUID"]},{"name":"interface VFSConfigurator","description":"elide.runtime.gvm.internals.GuestVFS.VFSConfigurator","location":"packages/graalvm/elide.runtime.gvm.internals/-guest-v-f-s/-v-f-s-configurator/index.html","searchKeys":["VFSConfigurator","interface VFSConfigurator","elide.runtime.gvm.internals.GuestVFS.VFSConfigurator"]},{"name":"interface VMEngine : VMFacade","description":"elide.runtime.gvm.VMEngine","location":"packages/graalvm/elide.runtime.gvm/-v-m-engine/index.html","searchKeys":["VMEngine","interface VMEngine : VMFacade","elide.runtime.gvm.VMEngine"]},{"name":"interface VMEngineImpl<Config : GuestRuntimeConfiguration> : VMEngine","description":"elide.runtime.gvm.VMEngineImpl","location":"packages/graalvm/elide.runtime.gvm/-v-m-engine-impl/index.html","searchKeys":["VMEngineImpl","interface VMEngineImpl<Config : GuestRuntimeConfiguration> : VMEngine","elide.runtime.gvm.VMEngineImpl"]},{"name":"interface VMFacade","description":"elide.runtime.gvm.VMFacade","location":"packages/graalvm/elide.runtime.gvm/-v-m-facade/index.html","searchKeys":["VMFacade","interface VMFacade","elide.runtime.gvm.VMFacade"]},{"name":"interface VMInvocation<T : ExecutionInputs>","description":"elide.runtime.gvm.internals.context.ContextManager.VMInvocation","location":"packages/graalvm/elide.runtime.gvm.internals.context/-context-manager/-v-m-invocation/index.html","searchKeys":["VMInvocation","interface VMInvocation<T : ExecutionInputs>","elide.runtime.gvm.internals.context.ContextManager.VMInvocation"]},{"name":"interface VMProperty : Comparable<VMProperty> ","description":"elide.runtime.gvm.internals.VMProperty","location":"packages/graalvm/elide.runtime.gvm.internals/-v-m-property/index.html","searchKeys":["VMProperty","interface VMProperty : Comparable<VMProperty> ","elide.runtime.gvm.internals.VMProperty"]},{"name":"object Companion","description":"elide.runtime.core.GuestLanguageEvaluator.Companion","location":"packages/graalvm/elide.runtime.core/-guest-language-evaluator/-companion/index.html","searchKeys":["Companion","object Companion","elide.runtime.core.GuestLanguageEvaluator.Companion"]},{"name":"object Companion","description":"elide.runtime.core.GuestLanguageParser.Companion","location":"packages/graalvm/elide.runtime.core/-guest-language-parser/-companion/index.html","searchKeys":["Companion","object Companion","elide.runtime.core.GuestLanguageParser.Companion"]},{"name":"object Companion","description":"elide.runtime.core.HostPlatform.Companion","location":"packages/graalvm/elide.runtime.core/-host-platform/-companion/index.html","searchKeys":["Companion","object Companion","elide.runtime.core.HostPlatform.Companion"]},{"name":"object Companion","description":"elide.runtime.core.Version.Companion","location":"packages/graalvm/elide.runtime.core/-version/-companion/index.html","searchKeys":["Companion","object Companion","elide.runtime.core.Version.Companion"]},{"name":"object Companion","description":"elide.runtime.core.internals.graalvm.GraalVMRuntime.Companion","location":"packages/graalvm/elide.runtime.core.internals.graalvm/-graal-v-m-runtime/-companion/index.html","searchKeys":["Companion","object Companion","elide.runtime.core.internals.graalvm.GraalVMRuntime.Companion"]},{"name":"object Companion","description":"elide.runtime.gvm.ExecutionInputs.Companion","location":"packages/graalvm/elide.runtime.gvm/-execution-inputs/-companion/index.html","searchKeys":["Companion","object Companion","elide.runtime.gvm.ExecutionInputs.Companion"]},{"name":"object Companion","description":"elide.runtime.gvm.GuestLanguage.Companion","location":"packages/graalvm/elide.runtime.gvm/-guest-language/-companion/index.html","searchKeys":["Companion","object Companion","elide.runtime.gvm.GuestLanguage.Companion"]},{"name":"object Companion","description":"elide.runtime.gvm.cfg.JsRuntimeConfig.Companion","location":"packages/graalvm/elide.runtime.gvm.cfg/-js-runtime-config/-companion/index.html","searchKeys":["Companion","object Companion","elide.runtime.gvm.cfg.JsRuntimeConfig.Companion"]},{"name":"object Companion","description":"elide.runtime.gvm.cfg.JsRuntimeConfig.JsEsmConfig.Companion","location":"packages/graalvm/elide.runtime.gvm.cfg/-js-runtime-config/-js-esm-config/-companion/index.html","searchKeys":["Companion","object Companion","elide.runtime.gvm.cfg.JsRuntimeConfig.JsEsmConfig.Companion"]},{"name":"object Companion","description":"elide.runtime.gvm.cfg.JsRuntimeConfig.JsNpmConfig.Companion","location":"packages/graalvm/elide.runtime.gvm.cfg/-js-runtime-config/-js-npm-config/-companion/index.html","searchKeys":["Companion","object Companion","elide.runtime.gvm.cfg.JsRuntimeConfig.JsNpmConfig.Companion"]},{"name":"object Companion","description":"elide.runtime.gvm.internals.AbstractVMEngine.Companion","location":"packages/graalvm/elide.runtime.gvm.internals/-abstract-v-m-engine/-companion/index.html","searchKeys":["Companion","object Companion","elide.runtime.gvm.internals.AbstractVMEngine.Companion"]},{"name":"object Companion","description":"elide.runtime.gvm.internals.VMRuntimeProperty.Companion","location":"packages/graalvm/elide.runtime.gvm.internals/-v-m-runtime-property/-companion/index.html","searchKeys":["Companion","object Companion","elide.runtime.gvm.internals.VMRuntimeProperty.Companion"]},{"name":"object Companion","description":"elide.runtime.gvm.internals.VMStaticProperty.Companion","location":"packages/graalvm/elide.runtime.gvm.internals/-v-m-static-property/-companion/index.html","searchKeys":["Companion","object Companion","elide.runtime.gvm.internals.VMStaticProperty.Companion"]},{"name":"object Companion","description":"elide.runtime.gvm.internals.context.ContextManager.Companion","location":"packages/graalvm/elide.runtime.gvm.internals.context/-context-manager/-companion/index.html","searchKeys":["Companion","object Companion","elide.runtime.gvm.internals.context.ContextManager.Companion"]},{"name":"object Companion","description":"elide.runtime.gvm.internals.vfs.GuestVFSPolicy.Companion","location":"packages/graalvm/elide.runtime.gvm.internals.vfs/-guest-v-f-s-policy/-companion/index.html","searchKeys":["Companion","object Companion","elide.runtime.gvm.internals.vfs.GuestVFSPolicy.Companion"]},{"name":"object Companion","description":"elide.runtime.intrinsics.js.Crypto.Companion","location":"packages/graalvm/elide.runtime.intrinsics.js/-crypto/-companion/index.html","searchKeys":["Companion","object Companion","elide.runtime.intrinsics.js.Crypto.Companion"]},{"name":"object Companion","description":"elide.runtime.intrinsics.server.http.HttpServerAgent.Companion","location":"packages/graalvm/elide.runtime.intrinsics.server.http/-http-server-agent/-companion/index.html","searchKeys":["Companion","object Companion","elide.runtime.intrinsics.server.http.HttpServerAgent.Companion"]},{"name":"object Companion","description":"elide.runtime.plugins.env.EnvConfig.EnvVar.Companion","location":"packages/graalvm/elide.runtime.plugins.env/-env-config/-env-var/-companion/index.html","searchKeys":["Companion","object Companion","elide.runtime.plugins.env.EnvConfig.EnvVar.Companion"]},{"name":"object Companion : UUID.Factory","description":"elide.runtime.gvm.internals.intrinsics.js.typed.UUIDValue.Companion","location":"packages/graalvm/elide.runtime.gvm.internals.intrinsics.js.typed/-u-u-i-d-value/-companion/index.html","searchKeys":["Companion","object Companion : UUID.Factory","elide.runtime.gvm.internals.intrinsics.js.typed.UUIDValue.Companion"]},{"name":"object DefaultFactory : FetchHeaders.Factory<FetchHeaders> ","description":"elide.runtime.intrinsics.js.FetchHeaders.DefaultFactory","location":"packages/graalvm/elide.runtime.intrinsics.js/-fetch-headers/-default-factory/index.html","searchKeys":["DefaultFactory","object DefaultFactory : FetchHeaders.Factory<FetchHeaders> ","elide.runtime.intrinsics.js.FetchHeaders.DefaultFactory"]},{"name":"object DefaultFactory : FetchMutableRequest.RequestFactory<FetchMutableRequest> ","description":"elide.runtime.intrinsics.js.FetchMutableRequest.DefaultFactory","location":"packages/graalvm/elide.runtime.intrinsics.js/-fetch-mutable-request/-default-factory/index.html","searchKeys":["DefaultFactory","object DefaultFactory : FetchMutableRequest.RequestFactory<FetchMutableRequest> ","elide.runtime.intrinsics.js.FetchMutableRequest.DefaultFactory"]},{"name":"object DefaultFactory : ReadableStream.Factory<ReadableStream> ","description":"elide.runtime.intrinsics.js.ReadableStream.DefaultFactory","location":"packages/graalvm/elide.runtime.intrinsics.js/-readable-stream/-default-factory/index.html","searchKeys":["DefaultFactory","object DefaultFactory : ReadableStream.Factory<ReadableStream> ","elide.runtime.intrinsics.js.ReadableStream.DefaultFactory"]},{"name":"object Defaults","description":"elide.runtime.gvm.RequestExecutionInputs.Defaults","location":"packages/graalvm/elide.runtime.gvm/-request-execution-inputs/-defaults/index.html","searchKeys":["Defaults","object Defaults","elide.runtime.gvm.RequestExecutionInputs.Defaults"]},{"name":"object Defaults","description":"elide.runtime.intrinsics.js.FetchRequest.Defaults","location":"packages/graalvm/elide.runtime.intrinsics.js/-fetch-request/-defaults/index.html","searchKeys":["Defaults","object Defaults","elide.runtime.intrinsics.js.FetchRequest.Defaults"]},{"name":"object Defaults","description":"elide.runtime.intrinsics.js.FetchResponse.Defaults","location":"packages/graalvm/elide.runtime.intrinsics.js/-fetch-response/-defaults/index.html","searchKeys":["Defaults","object Defaults","elide.runtime.intrinsics.js.FetchResponse.Defaults"]},{"name":"object ElideBindings","description":"elide.runtime.intrinsics.ElideBindings","location":"packages/graalvm/elide.runtime.intrinsics/-elide-bindings/index.html","searchKeys":["ElideBindings","object ElideBindings","elide.runtime.intrinsics.ElideBindings"]},{"name":"object EmbeddedGuestVFS","description":"elide.runtime.gvm.vfs.EmbeddedGuestVFS","location":"packages/graalvm/elide.runtime.gvm.vfs/-embedded-guest-v-f-s/index.html","searchKeys":["EmbeddedGuestVFS","object EmbeddedGuestVFS","elide.runtime.gvm.vfs.EmbeddedGuestVFS"]},{"name":"object Empty : ExecutionInputs","description":"elide.runtime.gvm.ExecutionInputs.Empty","location":"packages/graalvm/elide.runtime.gvm/-execution-inputs/-empty/index.html","searchKeys":["Empty","object Empty : ExecutionInputs","elide.runtime.gvm.ExecutionInputs.Empty"]},{"name":"object Factory","description":"elide.runtime.intrinsics.GuestIntrinsic.MutableIntrinsicBindings.Factory","location":"packages/graalvm/elide.runtime.intrinsics/-guest-intrinsic/-mutable-intrinsic-bindings/-factory/index.html","searchKeys":["Factory","object Factory","elide.runtime.intrinsics.GuestIntrinsic.MutableIntrinsicBindings.Factory"]},{"name":"object Factory : AbstractJSException.ErrorFactory<TypeError> ","description":"elide.runtime.intrinsics.js.err.TypeError.Factory","location":"packages/graalvm/elide.runtime.intrinsics.js.err/-type-error/-factory/index.html","searchKeys":["Factory","object Factory : AbstractJSException.ErrorFactory<TypeError> ","elide.runtime.intrinsics.js.err.TypeError.Factory"]},{"name":"object Factory : AbstractJSException.ErrorFactory<ValueError> ","description":"elide.runtime.intrinsics.js.err.ValueError.Factory","location":"packages/graalvm/elide.runtime.intrinsics.js.err/-value-error/-factory/index.html","searchKeys":["Factory","object Factory : AbstractJSException.ErrorFactory<ValueError> ","elide.runtime.intrinsics.js.err.ValueError.Factory"]},{"name":"object Factory : AbstractJsMap.MapFactory<JsMap<*, *>> ","description":"elide.runtime.gvm.internals.intrinsics.js.struct.map.JsMap.Factory","location":"packages/graalvm/elide.runtime.gvm.internals.intrinsics.js.struct.map/-js-map/-factory/index.html","searchKeys":["Factory","object Factory : AbstractJsMap.MapFactory<JsMap<*, *>> ","elide.runtime.gvm.internals.intrinsics.js.struct.map.JsMap.Factory"]},{"name":"object HostVFS","description":"elide.runtime.gvm.vfs.HostVFS","location":"packages/graalvm/elide.runtime.gvm.vfs/-host-v-f-s/index.html","searchKeys":["HostVFS","object HostVFS","elide.runtime.gvm.vfs.HostVFS"]},{"name":"object Inputs","description":"elide.runtime.gvm.js.JavaScript.Inputs","location":"packages/graalvm/elide.runtime.gvm.js/-java-script/-inputs/index.html","searchKeys":["Inputs","object Inputs","elide.runtime.gvm.js.JavaScript.Inputs"]},{"name":"object JavaScript","description":"elide.runtime.gvm.js.JavaScript","location":"packages/graalvm/elide.runtime.gvm.js/-java-script/index.html","searchKeys":["JavaScript","object JavaScript","elide.runtime.gvm.js.JavaScript"]},{"name":"object JsIteratorFactory","description":"elide.runtime.intrinsics.js.JsIterator.JsIteratorFactory","location":"packages/graalvm/elide.runtime.intrinsics.js/-js-iterator/-js-iterator-factory/index.html","searchKeys":["JsIteratorFactory","object JsIteratorFactory","elide.runtime.intrinsics.js.JsIterator.JsIteratorFactory"]},{"name":"object JsProxy","description":"elide.runtime.gvm.internals.intrinsics.js.JsProxy","location":"packages/graalvm/elide.runtime.gvm.internals.intrinsics.js/-js-proxy/index.html","searchKeys":["JsProxy","object JsProxy","elide.runtime.gvm.internals.intrinsics.js.JsProxy"]},{"name":"object Plugin : AbstractLanguagePlugin<JavaScriptConfig, JavaScript> ","description":"elide.runtime.plugins.js.JavaScript.Plugin","location":"packages/graalvm/elide.runtime.plugins.js/-java-script/-plugin/index.html","searchKeys":["Plugin","object Plugin : AbstractLanguagePlugin<JavaScriptConfig, JavaScript> ","elide.runtime.plugins.js.JavaScript.Plugin"]},{"name":"object Plugin : EnginePlugin<DebugConfig, Debug> ","description":"elide.runtime.plugins.debug.Debug.Plugin","location":"packages/graalvm/elide.runtime.plugins.debug/-debug/-plugin/index.html","searchKeys":["Plugin","object Plugin : EnginePlugin<DebugConfig, Debug> ","elide.runtime.plugins.debug.Debug.Plugin"]},{"name":"object Plugin : EnginePlugin<EnvConfig, Environment> ","description":"elide.runtime.plugins.env.Environment.Plugin","location":"packages/graalvm/elide.runtime.plugins.env/-environment/-plugin/index.html","searchKeys":["Plugin","object Plugin : EnginePlugin<EnvConfig, Environment> ","elide.runtime.plugins.env.Environment.Plugin"]},{"name":"object Plugin : EnginePlugin<VfsConfig, Vfs> ","description":"elide.runtime.plugins.vfs.Vfs.Plugin","location":"packages/graalvm/elide.runtime.plugins.vfs/-vfs/-plugin/index.html","searchKeys":["Plugin","object Plugin : EnginePlugin<VfsConfig, Vfs> ","elide.runtime.plugins.vfs.Vfs.Plugin"]},{"name":"open class HttpServerConfig","description":"elide.runtime.intrinsics.server.http.HttpServerConfig","location":"packages/graalvm/elide.runtime.intrinsics.server.http/-http-server-config/index.html","searchKeys":["HttpServerConfig","open class HttpServerConfig","elide.runtime.intrinsics.server.http.HttpServerConfig"]},{"name":"open fun <R> executeBlocking(timeout: Duration = DEFAULT_TIMEOUT, operation: Context.() -> R): R","description":"elide.runtime.gvm.internals.context.ContextManager.executeBlocking","location":"packages/graalvm/elide.runtime.gvm.internals.context/-context-manager/execute-blocking.html","searchKeys":["executeBlocking","open fun <R> executeBlocking(timeout: Duration = DEFAULT_TIMEOUT, operation: Context.() -> R): R","elide.runtime.gvm.internals.context.ContextManager.executeBlocking"]},{"name":"open fun <T, E : Error> throw(err: E): JsIterator.JsIteratorResult<T>","description":"elide.runtime.intrinsics.js.JsIterator.throw","location":"packages/graalvm/elide.runtime.intrinsics.js/-js-iterator/throw.html","searchKeys":["throw","open fun <T, E : Error> throw(err: E): JsIterator.JsIteratorResult<T>","elide.runtime.intrinsics.js.JsIterator.throw"]},{"name":"open fun accepts(source: Source): Boolean","description":"elide.runtime.core.GuestLanguageEvaluator.accepts","location":"packages/graalvm/elide.runtime.core/-guest-language-evaluator/accepts.html","searchKeys":["accepts","open fun accepts(source: Source): Boolean","elide.runtime.core.GuestLanguageEvaluator.accepts"]},{"name":"open fun accepts(source: Source): Boolean","description":"elide.runtime.core.GuestLanguageParser.accepts","location":"packages/graalvm/elide.runtime.core/-guest-language-parser/accepts.html","searchKeys":["accepts","open fun accepts(source: Source): Boolean","elide.runtime.core.GuestLanguageParser.accepts"]},{"name":"open fun active(): Boolean","description":"elide.runtime.gvm.internals.VMProperty.active","location":"packages/graalvm/elide.runtime.gvm.internals/-v-m-property/active.html","searchKeys":["active","open fun active(): Boolean","elide.runtime.gvm.internals.VMProperty.active"]},{"name":"open fun buildArguments(): Array<out Any>","description":"elide.runtime.gvm.ExecutionInputs.buildArguments","location":"packages/graalvm/elide.runtime.gvm/-execution-inputs/build-arguments.html","searchKeys":["buildArguments","open fun buildArguments(): Array<out Any>","elide.runtime.gvm.ExecutionInputs.buildArguments"]},{"name":"open fun evaluateForPath(request: AccessRequest): AccessResponse","description":"elide.runtime.gvm.internals.vfs.GuestVFSPolicy.evaluateForPath","location":"packages/graalvm/elide.runtime.gvm.internals.vfs/-guest-v-f-s-policy/evaluate-for-path.html","searchKeys":["evaluateForPath","open fun evaluateForPath(request: AccessRequest): AccessResponse","elide.runtime.gvm.internals.vfs.GuestVFSPolicy.evaluateForPath"]},{"name":"open fun findClassesInJar(urlConnection: JarURLConnection, packageName: String): List<String>","description":"elide.runtime.feature.FrameworkFeature.findClassesInJar","location":"packages/graalvm/elide.runtime.feature/-framework-feature/find-classes-in-jar.html","searchKeys":["findClassesInJar","open fun findClassesInJar(urlConnection: JarURLConnection, packageName: String): List<String>","elide.runtime.feature.FrameworkFeature.findClassesInJar"]},{"name":"open fun getMethodOrFail(clazz: Class<*>, methodName: String, vararg params: Class<*>?): Method","description":"elide.runtime.feature.FrameworkFeature.getMethodOrFail","location":"packages/graalvm/elide.runtime.feature/-framework-feature/get-method-or-fail.html","searchKeys":["getMethodOrFail","open fun getMethodOrFail(clazz: Class<*>, methodName: String, vararg params: Class<*>?): Method","elide.runtime.feature.FrameworkFeature.getMethodOrFail"]},{"name":"open fun image(): AbstractVMEngine.RuntimeVFS?","description":"elide.runtime.gvm.internals.GuestVFS.VFSConfigurator.image","location":"packages/graalvm/elide.runtime.gvm.internals/-guest-v-f-s/-v-f-s-configurator/image.html","searchKeys":["image","open fun image(): AbstractVMEngine.RuntimeVFS?","elide.runtime.gvm.internals.GuestVFS.VFSConfigurator.image"]},{"name":"open fun listen(port: Int)","description":"elide.runtime.intrinsics.js.express.ExpressApp.listen","location":"packages/graalvm/elide.runtime.intrinsics.js.express/-express-app/listen.html","searchKeys":["listen","open fun listen(port: Int)","elide.runtime.intrinsics.js.express.ExpressApp.listen"]},{"name":"open fun logging(): Logger","description":"elide.runtime.feature.FrameworkFeature.logging","location":"packages/graalvm/elide.runtime.feature/-framework-feature/logging.html","searchKeys":["logging","open fun logging(): Logger","elide.runtime.feature.FrameworkFeature.logging"]},{"name":"open fun onBind(callback: PolyglotValue)","description":"elide.runtime.intrinsics.server.http.HttpServerConfig.onBind","location":"packages/graalvm/elide.runtime.intrinsics.server.http/-http-server-config/on-bind.html","searchKeys":["onBind","open fun onBind(callback: PolyglotValue)","elide.runtime.intrinsics.server.http.HttpServerConfig.onBind"]},{"name":"open fun path(): String","description":"elide.runtime.gvm.RequestExecutionInputs.path","location":"packages/graalvm/elide.runtime.gvm/-request-execution-inputs/path.html","searchKeys":["path","open fun path(): String","elide.runtime.gvm.RequestExecutionInputs.path"]},{"name":"open fun registerClassForReflection(access: Feature.FeatureAccess, name: String)","description":"elide.runtime.feature.FrameworkFeature.registerClassForReflection","location":"packages/graalvm/elide.runtime.feature/-framework-feature/register-class-for-reflection.html","searchKeys":["registerClassForReflection","open fun registerClassForReflection(access: Feature.FeatureAccess, name: String)","elide.runtime.feature.FrameworkFeature.registerClassForReflection"]},{"name":"open fun registerClassHierarchyForReflection(access: Feature.FeatureAccess, className: String)","description":"elide.runtime.feature.FrameworkFeature.registerClassHierarchyForReflection","location":"packages/graalvm/elide.runtime.feature/-framework-feature/register-class-hierarchy-for-reflection.html","searchKeys":["registerClassHierarchyForReflection","open fun registerClassHierarchyForReflection(access: Feature.FeatureAccess, className: String)","elide.runtime.feature.FrameworkFeature.registerClassHierarchyForReflection"]},{"name":"open fun registerConstructorsForReflection(access: Feature.FeatureAccess, name: String)","description":"elide.runtime.feature.FrameworkFeature.registerConstructorsForReflection","location":"packages/graalvm/elide.runtime.feature/-framework-feature/register-constructors-for-reflection.html","searchKeys":["registerConstructorsForReflection","open fun registerConstructorsForReflection(access: Feature.FeatureAccess, name: String)","elide.runtime.feature.FrameworkFeature.registerConstructorsForReflection"]},{"name":"open fun registerForReflectiveInstantiation(access: Feature.FeatureAccess, className: String)","description":"elide.runtime.feature.FrameworkFeature.registerForReflectiveInstantiation","location":"packages/graalvm/elide.runtime.feature/-framework-feature/register-for-reflective-instantiation.html","searchKeys":["registerForReflectiveInstantiation","open fun registerForReflectiveInstantiation(access: Feature.FeatureAccess, className: String)","elide.runtime.feature.FrameworkFeature.registerForReflectiveInstantiation"]},{"name":"open fun registerForUnsafeFieldAccess(access: Feature.FeatureAccess, className: String, vararg fields: String)","description":"elide.runtime.feature.FrameworkFeature.registerForUnsafeFieldAccess","location":"packages/graalvm/elide.runtime.feature/-framework-feature/register-for-unsafe-field-access.html","searchKeys":["registerForUnsafeFieldAccess","open fun registerForUnsafeFieldAccess(access: Feature.FeatureAccess, className: String, vararg fields: String)","elide.runtime.feature.FrameworkFeature.registerForUnsafeFieldAccess"]},{"name":"open fun registerPackageForReflection(access: Feature.FeatureAccess, packageName: String)","description":"elide.runtime.feature.FrameworkFeature.registerPackageForReflection","location":"packages/graalvm/elide.runtime.feature/-framework-feature/register-package-for-reflection.html","searchKeys":["registerPackageForReflection","open fun registerPackageForReflection(access: Feature.FeatureAccess, packageName: String)","elide.runtime.feature.FrameworkFeature.registerPackageForReflection"]},{"name":"open fun return(value: T): JsIterator.JsIteratorResult<T>","description":"elide.runtime.intrinsics.js.JsIterator.return","location":"packages/graalvm/elide.runtime.intrinsics.js/-js-iterator/return.html","searchKeys":["return","open fun return(value: T): JsIterator.JsIteratorResult<T>","elide.runtime.intrinsics.js.JsIterator.return"]},{"name":"open fun supports(language: GuestLanguage): Boolean","description":"elide.runtime.intrinsics.GuestIntrinsic.supports","location":"packages/graalvm/elide.runtime.intrinsics/-guest-intrinsic/supports.html","searchKeys":["supports","open fun supports(language: GuestLanguage): Boolean","elide.runtime.intrinsics.GuestIntrinsic.supports"]},{"name":"open operator fun <R> invoke(operation: Context.() -> R): R","description":"elide.runtime.gvm.ContextFactory.invoke","location":"packages/graalvm/elide.runtime.gvm/-context-factory/invoke.html","searchKeys":["invoke","open operator fun <R> invoke(operation: Context.() -> R): R","elide.runtime.gvm.ContextFactory.invoke"]},{"name":"open operator override fun compareTo(other: VMProperty): Int","description":"elide.runtime.gvm.internals.VMProperty.compareTo","location":"packages/graalvm/elide.runtime.gvm.internals/-v-m-property/compare-to.html","searchKeys":["compareTo","open operator override fun compareTo(other: VMProperty): Int","elide.runtime.gvm.internals.VMProperty.compareTo"]},{"name":"open operator override fun compareTo(other: Version): Int","description":"elide.runtime.core.Version.compareTo","location":"packages/graalvm/elide.runtime.core/-version/compare-to.html","searchKeys":["compareTo","open operator override fun compareTo(other: Version): Int","elide.runtime.core.Version.compareTo"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"elide.runtime.gvm.internals.intrinsics.js.JsProxy.PropertyProxy.equals","location":"packages/graalvm/elide.runtime.gvm.internals.intrinsics.js/-js-proxy/-property-proxy/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","elide.runtime.gvm.internals.intrinsics.js.JsProxy.PropertyProxy.equals"]},{"name":"open operator override fun get(index: Int): Char","description":"elide.runtime.gvm.internals.intrinsics.js.typed.UUIDValue.get","location":"packages/graalvm/elide.runtime.gvm.internals.intrinsics.js.typed/-u-u-i-d-value/get.html","searchKeys":["get","open operator override fun get(index: Int): Char","elide.runtime.gvm.internals.intrinsics.js.typed.UUIDValue.get"]},{"name":"open operator override fun get(key: K): V?","description":"elide.runtime.gvm.internals.intrinsics.js.struct.map.BaseJsMap.get","location":"packages/graalvm/elide.runtime.gvm.internals.intrinsics.js.struct.map/-base-js-map/get.html","searchKeys":["get","open operator override fun get(key: K): V?","elide.runtime.gvm.internals.intrinsics.js.struct.map.BaseJsMap.get"]},{"name":"open operator override fun hasNext(): Boolean","description":"elide.runtime.intrinsics.js.JsIterator.JsIteratorImpl.hasNext","location":"packages/graalvm/elide.runtime.intrinsics.js/-js-iterator/-js-iterator-impl/has-next.html","searchKeys":["hasNext","open operator override fun hasNext(): Boolean","elide.runtime.intrinsics.js.JsIterator.JsIteratorImpl.hasNext"]},{"name":"open operator override fun next(): JsIterator.JsIteratorResult<T>","description":"elide.runtime.intrinsics.js.JsIterator.JsIteratorImpl.next","location":"packages/graalvm/elide.runtime.intrinsics.js/-js-iterator/-js-iterator-impl/next.html","searchKeys":["next","open operator override fun next(): JsIterator.JsIteratorResult<T>","elide.runtime.intrinsics.js.JsIterator.JsIteratorImpl.next"]},{"name":"open override fun <K : Any, V> copyOf(map: Map<K, V>): JsMap<K, V>","description":"elide.runtime.gvm.internals.intrinsics.js.struct.map.JsMap.Factory.copyOf","location":"packages/graalvm/elide.runtime.gvm.internals.intrinsics.js.struct.map/-js-map/-factory/copy-of.html","searchKeys":["copyOf","open override fun <K : Any, V> copyOf(map: Map<K, V>): JsMap<K, V>","elide.runtime.gvm.internals.intrinsics.js.struct.map.JsMap.Factory.copyOf"]},{"name":"open override fun <K : Any, V> empty(): JsMap<K, V>","description":"elide.runtime.gvm.internals.intrinsics.js.struct.map.JsMap.Factory.empty","location":"packages/graalvm/elide.runtime.gvm.internals.intrinsics.js.struct.map/-js-map/-factory/empty.html","searchKeys":["empty","open override fun <K : Any, V> empty(): JsMap<K, V>","elide.runtime.gvm.internals.intrinsics.js.struct.map.JsMap.Factory.empty"]},{"name":"open override fun <K : Any, V> from(entries: Collection<MapLike.Entry<K, V>>): JsMap<K, V>","description":"elide.runtime.gvm.internals.intrinsics.js.struct.map.JsMap.Factory.from","location":"packages/graalvm/elide.runtime.gvm.internals.intrinsics.js.struct.map/-js-map/-factory/from.html","searchKeys":["from","open override fun <K : Any, V> from(entries: Collection<MapLike.Entry<K, V>>): JsMap<K, V>","elide.runtime.gvm.internals.intrinsics.js.struct.map.JsMap.Factory.from"]},{"name":"open override fun <K : Any, V> fromEntries(entries: Collection<Map.Entry<K, V>>): JsMap<K, V>","description":"elide.runtime.gvm.internals.intrinsics.js.struct.map.JsMap.Factory.fromEntries","location":"packages/graalvm/elide.runtime.gvm.internals.intrinsics.js.struct.map/-js-map/-factory/from-entries.html","searchKeys":["fromEntries","open override fun <K : Any, V> fromEntries(entries: Collection<Map.Entry<K, V>>): JsMap<K, V>","elide.runtime.gvm.internals.intrinsics.js.struct.map.JsMap.Factory.fromEntries"]},{"name":"open override fun <K : Any, V> fromPairs(pairs: Collection<Pair<K, V>>): JsMap<K, V>","description":"elide.runtime.gvm.internals.intrinsics.js.struct.map.JsMap.Factory.fromPairs","location":"packages/graalvm/elide.runtime.gvm.internals.intrinsics.js.struct.map/-js-map/-factory/from-pairs.html","searchKeys":["fromPairs","open override fun <K : Any, V> fromPairs(pairs: Collection<Pair<K, V>>): JsMap<K, V>","elide.runtime.gvm.internals.intrinsics.js.struct.map.JsMap.Factory.fromPairs"]},{"name":"open override fun <K : Any, V> of(map: MutableMap<K, V>): JsMap<K, V>","description":"elide.runtime.gvm.internals.intrinsics.js.struct.map.JsMap.Factory.of","location":"packages/graalvm/elide.runtime.gvm.internals.intrinsics.js.struct.map/-js-map/-factory/of.html","searchKeys":["of","open override fun <K : Any, V> of(map: MutableMap<K, V>): JsMap<K, V>","elide.runtime.gvm.internals.intrinsics.js.struct.map.JsMap.Factory.of"]},{"name":"open override fun <K : Any, V> unbounded(entries: Iterable<MapLike.Entry<K, V>>): JsMap<K, V>","description":"elide.runtime.gvm.internals.intrinsics.js.struct.map.JsMap.Factory.unbounded","location":"packages/graalvm/elide.runtime.gvm.internals.intrinsics.js.struct.map/-js-map/-factory/unbounded.html","searchKeys":["unbounded","open override fun <K : Any, V> unbounded(entries: Iterable<MapLike.Entry<K, V>>): JsMap<K, V>","elide.runtime.gvm.internals.intrinsics.js.struct.map.JsMap.Factory.unbounded"]},{"name":"open override fun <K : Any, V> unboundedEntries(entries: Iterable<Map.Entry<K, V>>): JsMap<K, V>","description":"elide.runtime.gvm.internals.intrinsics.js.struct.map.JsMap.Factory.unboundedEntries","location":"packages/graalvm/elide.runtime.gvm.internals.intrinsics.js.struct.map/-js-map/-factory/unbounded-entries.html","searchKeys":["unboundedEntries","open override fun <K : Any, V> unboundedEntries(entries: Iterable<Map.Entry<K, V>>): JsMap<K, V>","elide.runtime.gvm.internals.intrinsics.js.struct.map.JsMap.Factory.unboundedEntries"]},{"name":"open override fun <K : Any, V> unboundedPairs(pairs: Iterable<Pair<K, V>>): JsMap<K, V>","description":"elide.runtime.gvm.internals.intrinsics.js.struct.map.JsMap.Factory.unboundedPairs","location":"packages/graalvm/elide.runtime.gvm.internals.intrinsics.js.struct.map/-js-map/-factory/unbounded-pairs.html","searchKeys":["unboundedPairs","open override fun <K : Any, V> unboundedPairs(pairs: Iterable<Pair<K, V>>): JsMap<K, V>","elide.runtime.gvm.internals.intrinsics.js.struct.map.JsMap.Factory.unboundedPairs"]},{"name":"open override fun <R> executeBlocking(script: ExecutableScript, returnType: Class<R>, args: ExecutionInputs?): R?","description":"elide.runtime.gvm.internals.AbstractVMEngine.executeBlocking","location":"packages/graalvm/elide.runtime.gvm.internals/-abstract-v-m-engine/execute-blocking.html","searchKeys":["executeBlocking","open override fun <R> executeBlocking(script: ExecutableScript, returnType: Class<R>, args: ExecutionInputs?): R?","elide.runtime.gvm.internals.AbstractVMEngine.executeBlocking"]},{"name":"open override fun allInputs(): Array<Any>","description":"elide.runtime.gvm.RequestExecutionInputs.allInputs","location":"packages/graalvm/elide.runtime.gvm/-request-execution-inputs/all-inputs.html","searchKeys":["allInputs","open override fun allInputs(): Array<Any>","elide.runtime.gvm.RequestExecutionInputs.allInputs"]},{"name":"open override fun allInputs(): Array<out Any>","description":"elide.runtime.gvm.ExecutionInputs.Empty.allInputs","location":"packages/graalvm/elide.runtime.gvm/-execution-inputs/-empty/all-inputs.html","searchKeys":["allInputs","open override fun allInputs(): Array<out Any>","elide.runtime.gvm.ExecutionInputs.Empty.allInputs"]},{"name":"open override fun bundles(): List<URI>","description":"elide.runtime.gvm.internals.AbstractVMEngine.GuestVFSConfigurator.bundles","location":"packages/graalvm/elide.runtime.gvm.internals/-abstract-v-m-engine/-guest-v-f-s-configurator/bundles.html","searchKeys":["bundles","open override fun bundles(): List<URI>","elide.runtime.gvm.internals.AbstractVMEngine.GuestVFSConfigurator.bundles"]},{"name":"open override fun containsKey(key: K): Boolean","description":"elide.runtime.gvm.internals.intrinsics.js.struct.map.BaseJsMap.containsKey","location":"packages/graalvm/elide.runtime.gvm.internals.intrinsics.js.struct.map/-base-js-map/contains-key.html","searchKeys":["containsKey","open override fun containsKey(key: K): Boolean","elide.runtime.gvm.internals.intrinsics.js.struct.map.BaseJsMap.containsKey"]},{"name":"open override fun containsValue(value: V): Boolean","description":"elide.runtime.gvm.internals.intrinsics.js.struct.map.BaseJsMap.containsValue","location":"packages/graalvm/elide.runtime.gvm.internals.intrinsics.js.struct.map/-base-js-map/contains-value.html","searchKeys":["containsValue","open override fun containsValue(value: V): Boolean","elide.runtime.gvm.internals.intrinsics.js.struct.map.BaseJsMap.containsValue"]},{"name":"open override fun create(error: Throwable): TypeError","description":"elide.runtime.intrinsics.js.err.TypeError.Factory.create","location":"packages/graalvm/elide.runtime.intrinsics.js.err/-type-error/-factory/create.html","searchKeys":["create","open override fun create(error: Throwable): TypeError","elide.runtime.intrinsics.js.err.TypeError.Factory.create"]},{"name":"open override fun create(error: Throwable): ValueError","description":"elide.runtime.intrinsics.js.err.ValueError.Factory.create","location":"packages/graalvm/elide.runtime.intrinsics.js.err/-value-error/-factory/create.html","searchKeys":["create","open override fun create(error: Throwable): ValueError","elide.runtime.intrinsics.js.err.ValueError.Factory.create"]},{"name":"open override fun create(message: String, cause: Throwable?): TypeError","description":"elide.runtime.intrinsics.js.err.TypeError.Factory.create","location":"packages/graalvm/elide.runtime.intrinsics.js.err/-type-error/-factory/create.html","searchKeys":["create","open override fun create(message: String, cause: Throwable?): TypeError","elide.runtime.intrinsics.js.err.TypeError.Factory.create"]},{"name":"open override fun create(message: String, cause: Throwable?): ValueError","description":"elide.runtime.intrinsics.js.err.ValueError.Factory.create","location":"packages/graalvm/elide.runtime.intrinsics.js.err/-value-error/-factory/create.html","searchKeys":["create","open override fun create(message: String, cause: Throwable?): ValueError","elide.runtime.intrinsics.js.err.ValueError.Factory.create"]},{"name":"open override fun empty(): FetchHeaders","description":"elide.runtime.intrinsics.js.FetchHeaders.DefaultFactory.empty","location":"packages/graalvm/elide.runtime.intrinsics.js/-fetch-headers/-default-factory/empty.html","searchKeys":["empty","open override fun empty(): FetchHeaders","elide.runtime.intrinsics.js.FetchHeaders.DefaultFactory.empty"]},{"name":"open override fun empty(): ReadableStream","description":"elide.runtime.intrinsics.js.ReadableStream.DefaultFactory.empty","location":"packages/graalvm/elide.runtime.intrinsics.js/-readable-stream/-default-factory/empty.html","searchKeys":["empty","open override fun empty(): ReadableStream","elide.runtime.intrinsics.js.ReadableStream.DefaultFactory.empty"]},{"name":"open override fun entries(): JsIterator<MapLike.Entry<K, V>>","description":"elide.runtime.gvm.internals.intrinsics.js.struct.map.BaseJsMap.entries","location":"packages/graalvm/elide.runtime.gvm.internals.intrinsics.js.struct.map/-base-js-map/entries.html","searchKeys":["entries","open override fun entries(): JsIterator<MapLike.Entry<K, V>>","elide.runtime.gvm.internals.intrinsics.js.struct.map.BaseJsMap.entries"]},{"name":"open override fun forEach(op: (MapLike.Entry<K, V>) -> Unit)","description":"elide.runtime.gvm.internals.intrinsics.js.struct.map.BaseJsMap.forEach","location":"packages/graalvm/elide.runtime.gvm.internals.intrinsics.js.struct.map/-base-js-map/for-each.html","searchKeys":["forEach","open override fun forEach(op: (MapLike.Entry<K, V>) -> Unit)","elide.runtime.gvm.internals.intrinsics.js.struct.map.BaseJsMap.forEach"]},{"name":"open override fun forRequest(request: HttpRequest<*>): FetchMutableRequest","description":"elide.runtime.intrinsics.js.FetchMutableRequest.DefaultFactory.forRequest","location":"packages/graalvm/elide.runtime.intrinsics.js/-fetch-mutable-request/-default-factory/for-request.html","searchKeys":["forRequest","open override fun forRequest(request: HttpRequest<*>): FetchMutableRequest","elide.runtime.intrinsics.js.FetchMutableRequest.DefaultFactory.forRequest"]},{"name":"open override fun from(previous: FetchHeaders): FetchHeaders","description":"elide.runtime.intrinsics.js.FetchHeaders.DefaultFactory.from","location":"packages/graalvm/elide.runtime.intrinsics.js/-fetch-headers/-default-factory/from.html","searchKeys":["from","open override fun from(previous: FetchHeaders): FetchHeaders","elide.runtime.intrinsics.js.FetchHeaders.DefaultFactory.from"]},{"name":"open override fun from(vararg pairs: Pair<String, String>): FetchHeaders","description":"elide.runtime.intrinsics.js.FetchHeaders.DefaultFactory.from","location":"packages/graalvm/elide.runtime.intrinsics.js/-fetch-headers/-default-factory/from.html","searchKeys":["from","open override fun from(vararg pairs: Pair<String, String>): FetchHeaders","elide.runtime.intrinsics.js.FetchHeaders.DefaultFactory.from"]},{"name":"open override fun fromMap(map: Map<String, String>): FetchHeaders","description":"elide.runtime.intrinsics.js.FetchHeaders.DefaultFactory.fromMap","location":"packages/graalvm/elide.runtime.intrinsics.js/-fetch-headers/-default-factory/from-map.html","searchKeys":["fromMap","open override fun fromMap(map: Map<String, String>): FetchHeaders","elide.runtime.intrinsics.js.FetchHeaders.DefaultFactory.fromMap"]},{"name":"open override fun fromMultiMap(map: Map<String, List<String>>): FetchHeaders","description":"elide.runtime.intrinsics.js.FetchHeaders.DefaultFactory.fromMultiMap","location":"packages/graalvm/elide.runtime.intrinsics.js/-fetch-headers/-default-factory/from-multi-map.html","searchKeys":["fromMultiMap","open override fun fromMultiMap(map: Map<String, List<String>>): FetchHeaders","elide.runtime.intrinsics.js.FetchHeaders.DefaultFactory.fromMultiMap"]},{"name":"open override fun fromPairs(pairs: Collection<Pair<String, String>>): FetchHeaders","description":"elide.runtime.intrinsics.js.FetchHeaders.DefaultFactory.fromPairs","location":"packages/graalvm/elide.runtime.intrinsics.js/-fetch-headers/-default-factory/from-pairs.html","searchKeys":["fromPairs","open override fun fromPairs(pairs: Collection<Pair<String, String>>): FetchHeaders","elide.runtime.intrinsics.js.FetchHeaders.DefaultFactory.fromPairs"]},{"name":"open override fun getIterator(): Any","description":"elide.runtime.intrinsics.js.JsIterator.JsIteratorImpl.getIterator","location":"packages/graalvm/elide.runtime.intrinsics.js/-js-iterator/-js-iterator-impl/get-iterator.html","searchKeys":["getIterator","open override fun getIterator(): Any","elide.runtime.intrinsics.js.JsIterator.JsIteratorImpl.getIterator"]},{"name":"open override fun getIterator(): Any","description":"elide.runtime.intrinsics.js.JsIterator.getIterator","location":"packages/graalvm/elide.runtime.intrinsics.js/-js-iterator/get-iterator.html","searchKeys":["getIterator","open override fun getIterator(): Any","elide.runtime.intrinsics.js.JsIterator.getIterator"]},{"name":"open override fun getMember(key: String): Any","description":"elide.runtime.gvm.internals.intrinsics.js.JsProxy.MutableObjectProxy.getMember","location":"packages/graalvm/elide.runtime.gvm.internals.intrinsics.js/-js-proxy/-mutable-object-proxy/get-member.html","searchKeys":["getMember","open override fun getMember(key: String): Any","elide.runtime.gvm.internals.intrinsics.js.JsProxy.MutableObjectProxy.getMember"]},{"name":"open override fun getMember(key: String): Any","description":"elide.runtime.gvm.internals.intrinsics.js.JsProxy.PropertyProxy.getMember","location":"packages/graalvm/elide.runtime.gvm.internals.intrinsics.js/-js-proxy/-property-proxy/get-member.html","searchKeys":["getMember","open override fun getMember(key: String): Any","elide.runtime.gvm.internals.intrinsics.js.JsProxy.PropertyProxy.getMember"]},{"name":"open override fun getMember(key: String): Any","description":"elide.runtime.intrinsics.server.http.HttpContext.getMember","location":"packages/graalvm/elide.runtime.intrinsics.server.http/-http-context/get-member.html","searchKeys":["getMember","open override fun getMember(key: String): Any","elide.runtime.intrinsics.server.http.HttpContext.getMember"]},{"name":"open override fun getMemberKeys(): Any","description":"elide.runtime.gvm.internals.intrinsics.js.JsProxy.MutableObjectProxy.getMemberKeys","location":"packages/graalvm/elide.runtime.gvm.internals.intrinsics.js/-js-proxy/-mutable-object-proxy/get-member-keys.html","searchKeys":["getMemberKeys","open override fun getMemberKeys(): Any","elide.runtime.gvm.internals.intrinsics.js.JsProxy.MutableObjectProxy.getMemberKeys"]},{"name":"open override fun getMemberKeys(): Any","description":"elide.runtime.gvm.internals.intrinsics.js.JsProxy.PropertyProxy.getMemberKeys","location":"packages/graalvm/elide.runtime.gvm.internals.intrinsics.js/-js-proxy/-property-proxy/get-member-keys.html","searchKeys":["getMemberKeys","open override fun getMemberKeys(): Any","elide.runtime.gvm.internals.intrinsics.js.JsProxy.PropertyProxy.getMemberKeys"]},{"name":"open override fun getMemberKeys(): Any","description":"elide.runtime.intrinsics.server.http.HttpContext.getMemberKeys","location":"packages/graalvm/elide.runtime.intrinsics.server.http/-http-context/get-member-keys.html","searchKeys":["getMemberKeys","open override fun getMemberKeys(): Any","elide.runtime.intrinsics.server.http.HttpContext.getMemberKeys"]},{"name":"open override fun getNext(): T?","description":"elide.runtime.intrinsics.js.JsIterator.getNext","location":"packages/graalvm/elide.runtime.intrinsics.js/-js-iterator/get-next.html","searchKeys":["getNext","open override fun getNext(): T?","elide.runtime.intrinsics.js.JsIterator.getNext"]},{"name":"open override fun getOrDefault(key: K, defaultValue: V): V","description":"elide.runtime.gvm.internals.intrinsics.js.struct.map.BaseJsMap.getOrDefault","location":"packages/graalvm/elide.runtime.gvm.internals.intrinsics.js.struct.map/-base-js-map/get-or-default.html","searchKeys":["getOrDefault","open override fun getOrDefault(key: K, defaultValue: V): V","elide.runtime.gvm.internals.intrinsics.js.struct.map.BaseJsMap.getOrDefault"]},{"name":"open override fun getURL(): String","description":"elide.runtime.feature.FrameworkFeature.getURL","location":"packages/graalvm/elide.runtime.feature/-framework-feature/get-u-r-l.html","searchKeys":["getURL","open override fun getURL(): String","elide.runtime.feature.FrameworkFeature.getURL"]},{"name":"open override fun has(key: K): Boolean","description":"elide.runtime.gvm.internals.intrinsics.js.struct.map.BaseJsMap.has","location":"packages/graalvm/elide.runtime.gvm.internals.intrinsics.js.struct.map/-base-js-map/has.html","searchKeys":["has","open override fun has(key: K): Boolean","elide.runtime.gvm.internals.intrinsics.js.struct.map.BaseJsMap.has"]},{"name":"open override fun hasMember(key: String): Boolean","description":"elide.runtime.gvm.internals.intrinsics.js.JsProxy.MutableObjectProxy.hasMember","location":"packages/graalvm/elide.runtime.gvm.internals.intrinsics.js/-js-proxy/-mutable-object-proxy/has-member.html","searchKeys":["hasMember","open override fun hasMember(key: String): Boolean","elide.runtime.gvm.internals.intrinsics.js.JsProxy.MutableObjectProxy.hasMember"]},{"name":"open override fun hasMember(key: String): Boolean","description":"elide.runtime.gvm.internals.intrinsics.js.JsProxy.PropertyProxy.hasMember","location":"packages/graalvm/elide.runtime.gvm.internals.intrinsics.js/-js-proxy/-property-proxy/has-member.html","searchKeys":["hasMember","open override fun hasMember(key: String): Boolean","elide.runtime.gvm.internals.intrinsics.js.JsProxy.PropertyProxy.hasMember"]},{"name":"open override fun hasMember(key: String): Boolean","description":"elide.runtime.intrinsics.server.http.HttpContext.hasMember","location":"packages/graalvm/elide.runtime.intrinsics.server.http/-http-context/has-member.html","searchKeys":["hasMember","open override fun hasMember(key: String): Boolean","elide.runtime.intrinsics.server.http.HttpContext.hasMember"]},{"name":"open override fun hashCode(): Int","description":"elide.runtime.gvm.internals.intrinsics.js.JsProxy.PropertyProxy.hashCode","location":"packages/graalvm/elide.runtime.gvm.internals.intrinsics.js/-js-proxy/-property-proxy/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","elide.runtime.gvm.internals.intrinsics.js.JsProxy.PropertyProxy.hashCode"]},{"name":"open override fun image(): AbstractVMEngine.RuntimeVFS?","description":"elide.runtime.gvm.internals.AbstractVMEngine.GuestVFSConfigurator.image","location":"packages/graalvm/elide.runtime.gvm.internals/-abstract-v-m-engine/-guest-v-f-s-configurator/image.html","searchKeys":["image","open override fun image(): AbstractVMEngine.RuntimeVFS?","elide.runtime.gvm.internals.AbstractVMEngine.GuestVFSConfigurator.image"]},{"name":"open override fun install(scope: EnginePlugin.InstallationScope, configuration: DebugConfig.() -> Unit): Debug","description":"elide.runtime.plugins.debug.Debug.Plugin.install","location":"packages/graalvm/elide.runtime.plugins.debug/-debug/-plugin/install.html","searchKeys":["install","open override fun install(scope: EnginePlugin.InstallationScope, configuration: DebugConfig.() -> Unit): Debug","elide.runtime.plugins.debug.Debug.Plugin.install"]},{"name":"open override fun install(scope: EnginePlugin.InstallationScope, configuration: EnvConfig.() -> Unit): Environment","description":"elide.runtime.plugins.env.Environment.Plugin.install","location":"packages/graalvm/elide.runtime.plugins.env/-environment/-plugin/install.html","searchKeys":["install","open override fun install(scope: EnginePlugin.InstallationScope, configuration: EnvConfig.() -> Unit): Environment","elide.runtime.plugins.env.Environment.Plugin.install"]},{"name":"open override fun install(scope: EnginePlugin.InstallationScope, configuration: JavaScriptConfig.() -> Unit): JavaScript","description":"elide.runtime.plugins.js.JavaScript.Plugin.install","location":"packages/graalvm/elide.runtime.plugins.js/-java-script/-plugin/install.html","searchKeys":["install","open override fun install(scope: EnginePlugin.InstallationScope, configuration: JavaScriptConfig.() -> Unit): JavaScript","elide.runtime.plugins.js.JavaScript.Plugin.install"]},{"name":"open override fun install(scope: EnginePlugin.InstallationScope, configuration: VfsConfig.() -> Unit): Vfs","description":"elide.runtime.plugins.vfs.Vfs.Plugin.install","location":"packages/graalvm/elide.runtime.plugins.vfs/-vfs/-plugin/install.html","searchKeys":["install","open override fun install(scope: EnginePlugin.InstallationScope, configuration: VfsConfig.() -> Unit): Vfs","elide.runtime.plugins.vfs.Vfs.Plugin.install"]},{"name":"open override fun isEmpty(): Boolean","description":"elide.runtime.gvm.internals.intrinsics.js.struct.map.BaseJsMap.isEmpty","location":"packages/graalvm/elide.runtime.gvm.internals.intrinsics.js.struct.map/-base-js-map/is-empty.html","searchKeys":["isEmpty","open override fun isEmpty(): Boolean","elide.runtime.gvm.internals.intrinsics.js.struct.map.BaseJsMap.isEmpty"]},{"name":"open override fun isEnabled(): Boolean","description":"elide.runtime.gvm.cfg.JsRuntimeConfig.isEnabled","location":"packages/graalvm/elide.runtime.gvm.cfg/-js-runtime-config/is-enabled.html","searchKeys":["isEnabled","open override fun isEnabled(): Boolean","elide.runtime.gvm.cfg.JsRuntimeConfig.isEnabled"]},{"name":"open override fun keys(): JsIterator<K>","description":"elide.runtime.gvm.internals.intrinsics.js.struct.map.BaseJsMap.keys","location":"packages/graalvm/elide.runtime.gvm.internals.intrinsics.js.struct.map/-base-js-map/keys.html","searchKeys":["keys","open override fun keys(): JsIterator<K>","elide.runtime.gvm.internals.intrinsics.js.struct.map.BaseJsMap.keys"]},{"name":"open override fun language(): GuestLanguage","description":"elide.runtime.gvm.internals.AbstractGVMScript.language","location":"packages/graalvm/elide.runtime.gvm.internals/-abstract-g-v-m-script/language.html","searchKeys":["language","open override fun language(): GuestLanguage","elide.runtime.gvm.internals.AbstractGVMScript.language"]},{"name":"open override fun language(): GuestLanguage","description":"elide.runtime.gvm.internals.AbstractVMEngine.language","location":"packages/graalvm/elide.runtime.gvm.internals/-abstract-v-m-engine/language.html","searchKeys":["language","open override fun language(): GuestLanguage","elide.runtime.gvm.internals.AbstractVMEngine.language"]},{"name":"open override fun map(): ExecutableScript.SourceMap?","description":"elide.runtime.gvm.internals.AbstractGVMScript.map","location":"packages/graalvm/elide.runtime.gvm.internals/-abstract-g-v-m-script/map.html","searchKeys":["map","open override fun map(): ExecutableScript.SourceMap?","elide.runtime.gvm.internals.AbstractGVMScript.map"]},{"name":"open override fun of(value: String): UUIDValue","description":"elide.runtime.gvm.internals.intrinsics.js.typed.UUIDValue.Companion.of","location":"packages/graalvm/elide.runtime.gvm.internals.intrinsics.js.typed/-u-u-i-d-value/-companion/of.html","searchKeys":["of","open override fun of(value: String): UUIDValue","elide.runtime.gvm.internals.intrinsics.js.typed.UUIDValue.Companion.of"]},{"name":"open override fun of(value: UUID): UUIDValue","description":"elide.runtime.gvm.internals.intrinsics.js.typed.UUIDValue.Companion.of","location":"packages/graalvm/elide.runtime.gvm.internals.intrinsics.js.typed/-u-u-i-d-value/-companion/of.html","searchKeys":["of","open override fun of(value: UUID): UUIDValue","elide.runtime.gvm.internals.intrinsics.js.typed.UUIDValue.Companion.of"]},{"name":"open override fun of(value: UUIDValue): UUIDValue","description":"elide.runtime.gvm.internals.intrinsics.js.typed.UUIDValue.Companion.of","location":"packages/graalvm/elide.runtime.gvm.internals.intrinsics.js.typed/-u-u-i-d-value/-companion/of.html","searchKeys":["of","open override fun of(value: UUIDValue): UUIDValue","elide.runtime.gvm.internals.intrinsics.js.typed.UUIDValue.Companion.of"]},{"name":"open override fun path(): String","description":"elide.runtime.gvm.MicronautRequestExecutionInputs.path","location":"packages/graalvm/elide.runtime.gvm/-micronaut-request-execution-inputs/path.html","searchKeys":["path","open override fun path(): String","elide.runtime.gvm.MicronautRequestExecutionInputs.path"]},{"name":"open override fun putMember(key: String, value: Value)","description":"elide.runtime.gvm.internals.intrinsics.js.JsProxy.PropertyProxy.putMember","location":"packages/graalvm/elide.runtime.gvm.internals.intrinsics.js/-js-proxy/-property-proxy/put-member.html","searchKeys":["putMember","open override fun putMember(key: String, value: Value)","elide.runtime.gvm.internals.intrinsics.js.JsProxy.PropertyProxy.putMember"]},{"name":"open override fun putMember(key: String, value: Value?)","description":"elide.runtime.gvm.internals.intrinsics.js.JsProxy.MutableObjectProxy.putMember","location":"packages/graalvm/elide.runtime.gvm.internals.intrinsics.js/-js-proxy/-mutable-object-proxy/put-member.html","searchKeys":["putMember","open override fun putMember(key: String, value: Value?)","elide.runtime.gvm.internals.intrinsics.js.JsProxy.MutableObjectProxy.putMember"]},{"name":"open override fun putMember(key: String, value: Value?)","description":"elide.runtime.intrinsics.server.http.HttpContext.putMember","location":"packages/graalvm/elide.runtime.intrinsics.server.http/-http-context/put-member.html","searchKeys":["putMember","open override fun putMember(key: String, value: Value?)","elide.runtime.intrinsics.server.http.HttpContext.putMember"]},{"name":"open override fun random(): UUIDValue","description":"elide.runtime.gvm.internals.intrinsics.js.typed.UUIDValue.Companion.random","location":"packages/graalvm/elide.runtime.gvm.internals.intrinsics.js.typed/-u-u-i-d-value/-companion/random.html","searchKeys":["random","open override fun random(): UUIDValue","elide.runtime.gvm.internals.intrinsics.js.typed.UUIDValue.Companion.random"]},{"name":"open override fun source(): ExecutableScript.ScriptSource","description":"elide.runtime.gvm.internals.AbstractGVMScript.source","location":"packages/graalvm/elide.runtime.gvm.internals/-abstract-g-v-m-script/source.html","searchKeys":["source","open override fun source(): ExecutableScript.ScriptSource","elide.runtime.gvm.internals.AbstractGVMScript.source"]},{"name":"open override fun state(): ExecutableScript.State","description":"elide.runtime.gvm.internals.AbstractGVMScript.state","location":"packages/graalvm/elide.runtime.gvm.internals/-abstract-g-v-m-script/state.html","searchKeys":["state","open override fun state(): ExecutableScript.State","elide.runtime.gvm.internals.AbstractGVMScript.state"]},{"name":"open override fun subSequence(startIndex: Int, endIndex: Int): CharSequence","description":"elide.runtime.gvm.internals.intrinsics.js.typed.UUIDValue.subSequence","location":"packages/graalvm/elide.runtime.gvm.internals.intrinsics.js.typed/-u-u-i-d-value/sub-sequence.html","searchKeys":["subSequence","open override fun subSequence(startIndex: Int, endIndex: Int): CharSequence","elide.runtime.gvm.internals.intrinsics.js.typed.UUIDValue.subSequence"]},{"name":"open override fun toString(): String","description":"elide.runtime.core.HostPlatform.toString","location":"packages/graalvm/elide.runtime.core/-host-platform/to-string.html","searchKeys":["toString","open override fun toString(): String","elide.runtime.core.HostPlatform.toString"]},{"name":"open override fun toString(): String","description":"elide.runtime.core.Version.toString","location":"packages/graalvm/elide.runtime.core/-version/to-string.html","searchKeys":["toString","open override fun toString(): String","elide.runtime.core.Version.toString"]},{"name":"open override fun toString(): String","description":"elide.runtime.gvm.ExecutableScript.ScriptType.toString","location":"packages/graalvm/elide.runtime.gvm/-executable-script/-script-type/to-string.html","searchKeys":["toString","open override fun toString(): String","elide.runtime.gvm.ExecutableScript.ScriptType.toString"]},{"name":"open override fun toString(): String","description":"elide.runtime.gvm.internals.intrinsics.js.JsProxy.PropertyProxy.toString","location":"packages/graalvm/elide.runtime.gvm.internals.intrinsics.js/-js-proxy/-property-proxy/to-string.html","searchKeys":["toString","open override fun toString(): String","elide.runtime.gvm.internals.intrinsics.js.JsProxy.PropertyProxy.toString"]},{"name":"open override fun toString(): String","description":"elide.runtime.gvm.internals.intrinsics.js.struct.map.JsMap.toString","location":"packages/graalvm/elide.runtime.gvm.internals.intrinsics.js.struct.map/-js-map/to-string.html","searchKeys":["toString","open override fun toString(): String","elide.runtime.gvm.internals.intrinsics.js.struct.map.JsMap.toString"]},{"name":"open override fun toString(): String","description":"elide.runtime.gvm.internals.intrinsics.js.typed.UUIDValue.toString","location":"packages/graalvm/elide.runtime.gvm.internals.intrinsics.js.typed/-u-u-i-d-value/to-string.html","searchKeys":["toString","open override fun toString(): String","elide.runtime.gvm.internals.intrinsics.js.typed.UUIDValue.toString"]},{"name":"open override fun value(): String","description":"elide.runtime.gvm.internals.VMStaticProperty.value","location":"packages/graalvm/elide.runtime.gvm.internals/-v-m-static-property/value.html","searchKeys":["value","open override fun value(): String","elide.runtime.gvm.internals.VMStaticProperty.value"]},{"name":"open override fun value(): String?","description":"elide.runtime.gvm.internals.VMRuntimeProperty.value","location":"packages/graalvm/elide.runtime.gvm.internals/-v-m-runtime-property/value.html","searchKeys":["value","open override fun value(): String?","elide.runtime.gvm.internals.VMRuntimeProperty.value"]},{"name":"open override fun values(): JsIterator<V>","description":"elide.runtime.gvm.internals.intrinsics.js.struct.map.BaseJsMap.values","location":"packages/graalvm/elide.runtime.gvm.internals.intrinsics.js.struct.map/-base-js-map/values.html","searchKeys":["values","open override fun values(): JsIterator<V>","elide.runtime.gvm.internals.intrinsics.js.struct.map.BaseJsMap.values"]},{"name":"open override fun wrap(buffer: ByteBuffer): ReadableStream","description":"elide.runtime.intrinsics.js.ReadableStream.DefaultFactory.wrap","location":"packages/graalvm/elide.runtime.intrinsics.js/-readable-stream/-default-factory/wrap.html","searchKeys":["wrap","open override fun wrap(buffer: ByteBuffer): ReadableStream","elide.runtime.intrinsics.js.ReadableStream.DefaultFactory.wrap"]},{"name":"open override fun wrap(bytes: ByteArray): ReadableStream","description":"elide.runtime.intrinsics.js.ReadableStream.DefaultFactory.wrap","location":"packages/graalvm/elide.runtime.intrinsics.js/-readable-stream/-default-factory/wrap.html","searchKeys":["wrap","open override fun wrap(bytes: ByteArray): ReadableStream","elide.runtime.intrinsics.js.ReadableStream.DefaultFactory.wrap"]},{"name":"open override fun wrap(input: InputStream): ReadableStream","description":"elide.runtime.intrinsics.js.ReadableStream.DefaultFactory.wrap","location":"packages/graalvm/elide.runtime.intrinsics.js/-readable-stream/-default-factory/wrap.html","searchKeys":["wrap","open override fun wrap(input: InputStream): ReadableStream","elide.runtime.intrinsics.js.ReadableStream.DefaultFactory.wrap"]},{"name":"open override fun wrap(reader: Reader): ReadableStream","description":"elide.runtime.intrinsics.js.ReadableStream.DefaultFactory.wrap","location":"packages/graalvm/elide.runtime.intrinsics.js/-readable-stream/-default-factory/wrap.html","searchKeys":["wrap","open override fun wrap(reader: Reader): ReadableStream","elide.runtime.intrinsics.js.ReadableStream.DefaultFactory.wrap"]},{"name":"open override val asString: String","description":"elide.runtime.gvm.internals.intrinsics.js.typed.UUIDValue.asString","location":"packages/graalvm/elide.runtime.gvm.internals.intrinsics.js.typed/-u-u-i-d-value/as-string.html","searchKeys":["asString","open override val asString: String","elide.runtime.gvm.internals.intrinsics.js.typed.UUIDValue.asString"]},{"name":"open override val cause: Error?","description":"elide.runtime.intrinsics.js.err.Error.cause","location":"packages/graalvm/elide.runtime.intrinsics.js.err/-error/cause.html","searchKeys":["cause","open override val cause: Error?","elide.runtime.intrinsics.js.err.Error.cause"]},{"name":"open override val engine: String","description":"elide.runtime.gvm.internals.GraalVMGuest.engine","location":"packages/graalvm/elide.runtime.gvm.internals/-graal-v-m-guest/engine.html","searchKeys":["engine","open override val engine: String","elide.runtime.gvm.internals.GraalVMGuest.engine"]},{"name":"open override val entries: Set<Map.Entry<K, V>>","description":"elide.runtime.gvm.internals.intrinsics.js.struct.map.JsMap.entries","location":"packages/graalvm/elide.runtime.gvm.internals.intrinsics.js.struct.map/-js-map/entries.html","searchKeys":["entries","open override val entries: Set<Map.Entry<K, V>>","elide.runtime.gvm.internals.intrinsics.js.struct.map.JsMap.entries"]},{"name":"open override val invocationModes: EnumSet<InvocationMode>","description":"elide.runtime.gvm.internals.GraalVMGuest.JAVASCRIPT.invocationModes","location":"packages/graalvm/elide.runtime.gvm.internals/-graal-v-m-guest/-j-a-v-a-s-c-r-i-p-t/invocation-modes.html","searchKeys":["invocationModes","open override val invocationModes: EnumSet<InvocationMode>","elide.runtime.gvm.internals.GraalVMGuest.JAVASCRIPT.invocationModes"]},{"name":"open override val key: EnginePlugin.Key<Debug>","description":"elide.runtime.plugins.debug.Debug.Plugin.key","location":"packages/graalvm/elide.runtime.plugins.debug/-debug/-plugin/key.html","searchKeys":["key","open override val key: EnginePlugin.Key<Debug>","elide.runtime.plugins.debug.Debug.Plugin.key"]},{"name":"open override val key: EnginePlugin.Key<Environment>","description":"elide.runtime.plugins.env.Environment.Plugin.key","location":"packages/graalvm/elide.runtime.plugins.env/-environment/-plugin/key.html","searchKeys":["key","open override val key: EnginePlugin.Key<Environment>","elide.runtime.plugins.env.Environment.Plugin.key"]},{"name":"open override val key: EnginePlugin.Key<JavaScript>","description":"elide.runtime.plugins.js.JavaScript.Plugin.key","location":"packages/graalvm/elide.runtime.plugins.js/-java-script/-plugin/key.html","searchKeys":["key","open override val key: EnginePlugin.Key<JavaScript>","elide.runtime.plugins.js.JavaScript.Plugin.key"]},{"name":"open override val key: EnginePlugin.Key<Vfs>","description":"elide.runtime.plugins.vfs.Vfs.Plugin.key","location":"packages/graalvm/elide.runtime.plugins.vfs/-vfs/-plugin/key.html","searchKeys":["key","open override val key: EnginePlugin.Key<Vfs>","elide.runtime.plugins.vfs.Vfs.Plugin.key"]},{"name":"open override val keys: Set<K>","description":"elide.runtime.gvm.internals.intrinsics.js.struct.map.JsMap.keys","location":"packages/graalvm/elide.runtime.gvm.internals.intrinsics.js.struct.map/-js-map/keys.html","searchKeys":["keys","open override val keys: Set<K>","elide.runtime.gvm.internals.intrinsics.js.struct.map.JsMap.keys"]},{"name":"open override val label: String","description":"elide.runtime.gvm.internals.GraalVMGuest.label","location":"packages/graalvm/elide.runtime.gvm.internals/-graal-v-m-guest/label.html","searchKeys":["label","open override val label: String","elide.runtime.gvm.internals.GraalVMGuest.label"]},{"name":"open override val languageId: String","description":"elide.runtime.plugins.js.JavaScript.Plugin.languageId","location":"packages/graalvm/elide.runtime.plugins.js/-java-script/-plugin/language-id.html","searchKeys":["languageId","open override val languageId: String","elide.runtime.plugins.js.JavaScript.Plugin.languageId"]},{"name":"open override val length: Int","description":"elide.runtime.gvm.internals.intrinsics.js.typed.UUIDValue.length","location":"packages/graalvm/elide.runtime.gvm.internals.intrinsics.js.typed/-u-u-i-d-value/length.html","searchKeys":["length","open override val length: Int","elide.runtime.gvm.internals.intrinsics.js.typed.UUIDValue.length"]},{"name":"open override val message: String","description":"elide.runtime.intrinsics.js.err.QuotaExceededError.message","location":"packages/graalvm/elide.runtime.intrinsics.js.err/-quota-exceeded-error/message.html","searchKeys":["message","open override val message: String","elide.runtime.intrinsics.js.err.QuotaExceededError.message"]},{"name":"open override val name: String","description":"elide.runtime.core.internals.graalvm.GraalVMRuntime.name","location":"packages/graalvm/elide.runtime.core.internals.graalvm/-graal-v-m-runtime/name.html","searchKeys":["name","open override val name: String","elide.runtime.core.internals.graalvm.GraalVMRuntime.name"]},{"name":"open override val name: String","description":"elide.runtime.intrinsics.js.err.TypeError.name","location":"packages/graalvm/elide.runtime.intrinsics.js.err/-type-error/name.html","searchKeys":["name","open override val name: String","elide.runtime.intrinsics.js.err.TypeError.name"]},{"name":"open override val name: String","description":"elide.runtime.intrinsics.js.err.ValueError.name","location":"packages/graalvm/elide.runtime.intrinsics.js.err/-value-error/name.html","searchKeys":["name","open override val name: String","elide.runtime.intrinsics.js.err.ValueError.name"]},{"name":"open override val name: String","description":"elide.runtime.plugins.env.EnvConfig.EnvVar.DotEnvVar.name","location":"packages/graalvm/elide.runtime.plugins.env/-env-config/-env-var/-dot-env-var/name.html","searchKeys":["name","open override val name: String","elide.runtime.plugins.env.EnvConfig.EnvVar.DotEnvVar.name"]},{"name":"open override val name: String","description":"elide.runtime.plugins.env.EnvConfig.EnvVar.HostMappedVar.name","location":"packages/graalvm/elide.runtime.plugins.env/-env-config/-env-var/-host-mapped-var/name.html","searchKeys":["name","open override val name: String","elide.runtime.plugins.env.EnvConfig.EnvVar.HostMappedVar.name"]},{"name":"open override val name: String","description":"elide.runtime.plugins.env.EnvConfig.EnvVar.InlineEnvVar.name","location":"packages/graalvm/elide.runtime.plugins.env/-env-config/-env-var/-inline-env-var/name.html","searchKeys":["name","open override val name: String","elide.runtime.plugins.env.EnvConfig.EnvVar.InlineEnvVar.name"]},{"name":"open override val name: String","description":"elide.runtime.plugins.env.EnvConfig.EnvVar.SuppliedEnvVar.name","location":"packages/graalvm/elide.runtime.plugins.env/-env-config/-env-var/-supplied-env-var/name.html","searchKeys":["name","open override val name: String","elide.runtime.plugins.env.EnvConfig.EnvVar.SuppliedEnvVar.name"]},{"name":"open override val size: Int","description":"elide.runtime.gvm.internals.intrinsics.js.struct.map.BaseJsMap.size","location":"packages/graalvm/elide.runtime.gvm.internals.intrinsics.js.struct.map/-base-js-map/size.html","searchKeys":["size","open override val size: Int","elide.runtime.gvm.internals.intrinsics.js.struct.map.BaseJsMap.size"]},{"name":"open override val size: Int","description":"elide.runtime.gvm.internals.intrinsics.js.struct.map.JsMap.size","location":"packages/graalvm/elide.runtime.gvm.internals.intrinsics.js.struct.map/-js-map/size.html","searchKeys":["size","open override val size: Int","elide.runtime.gvm.internals.intrinsics.js.struct.map.JsMap.size"]},{"name":"open override val source: EnvConfig.EnvVariableSource","description":"elide.runtime.plugins.env.EnvConfig.EnvVar.DotEnvVar.source","location":"packages/graalvm/elide.runtime.plugins.env/-env-config/-env-var/-dot-env-var/source.html","searchKeys":["source","open override val source: EnvConfig.EnvVariableSource","elide.runtime.plugins.env.EnvConfig.EnvVar.DotEnvVar.source"]},{"name":"open override val source: EnvConfig.EnvVariableSource","description":"elide.runtime.plugins.env.EnvConfig.EnvVar.HostMappedVar.source","location":"packages/graalvm/elide.runtime.plugins.env/-env-config/-env-var/-host-mapped-var/source.html","searchKeys":["source","open override val source: EnvConfig.EnvVariableSource","elide.runtime.plugins.env.EnvConfig.EnvVar.HostMappedVar.source"]},{"name":"open override val source: EnvConfig.EnvVariableSource","description":"elide.runtime.plugins.env.EnvConfig.EnvVar.InlineEnvVar.source","location":"packages/graalvm/elide.runtime.plugins.env/-env-config/-env-var/-inline-env-var/source.html","searchKeys":["source","open override val source: EnvConfig.EnvVariableSource","elide.runtime.plugins.env.EnvConfig.EnvVar.InlineEnvVar.source"]},{"name":"open override val source: EnvConfig.EnvVariableSource","description":"elide.runtime.plugins.env.EnvConfig.EnvVar.SuppliedEnvVar.source","location":"packages/graalvm/elide.runtime.plugins.env/-env-config/-env-var/-supplied-env-var/source.html","searchKeys":["source","open override val source: EnvConfig.EnvVariableSource","elide.runtime.plugins.env.EnvConfig.EnvVar.SuppliedEnvVar.source"]},{"name":"open override val supportsSSR: Boolean","description":"elide.runtime.gvm.internals.GraalVMGuest.JAVASCRIPT.supportsSSR","location":"packages/graalvm/elide.runtime.gvm.internals/-graal-v-m-guest/-j-a-v-a-s-c-r-i-p-t/supports-s-s-r.html","searchKeys":["supportsSSR","open override val supportsSSR: Boolean","elide.runtime.gvm.internals.GraalVMGuest.JAVASCRIPT.supportsSSR"]},{"name":"open override val supportsStreamingSSR: Boolean","description":"elide.runtime.gvm.internals.GraalVMGuest.JAVASCRIPT.supportsStreamingSSR","location":"packages/graalvm/elide.runtime.gvm.internals/-graal-v-m-guest/-j-a-v-a-s-c-r-i-p-t/supports-streaming-s-s-r.html","searchKeys":["supportsStreamingSSR","open override val supportsStreamingSSR: Boolean","elide.runtime.gvm.internals.GraalVMGuest.JAVASCRIPT.supportsStreamingSSR"]},{"name":"open override val symbol: String","description":"elide.runtime.gvm.internals.GraalVMGuest.symbol","location":"packages/graalvm/elide.runtime.gvm.internals/-graal-v-m-guest/symbol.html","searchKeys":["symbol","open override val symbol: String","elide.runtime.gvm.internals.GraalVMGuest.symbol"]},{"name":"open override val symbol: String","description":"elide.runtime.gvm.internals.VMRuntimeProperty.symbol","location":"packages/graalvm/elide.runtime.gvm.internals/-v-m-runtime-property/symbol.html","searchKeys":["symbol","open override val symbol: String","elide.runtime.gvm.internals.VMRuntimeProperty.symbol"]},{"name":"open override val symbol: String","description":"elide.runtime.gvm.internals.VMStaticProperty.symbol","location":"packages/graalvm/elide.runtime.gvm.internals/-v-m-static-property/symbol.html","searchKeys":["symbol","open override val symbol: String","elide.runtime.gvm.internals.VMStaticProperty.symbol"]},{"name":"open override val value: String?","description":"elide.runtime.plugins.env.EnvConfig.EnvVar.DotEnvVar.value","location":"packages/graalvm/elide.runtime.plugins.env/-env-config/-env-var/-dot-env-var/value.html","searchKeys":["value","open override val value: String?","elide.runtime.plugins.env.EnvConfig.EnvVar.DotEnvVar.value"]},{"name":"open override val value: String?","description":"elide.runtime.plugins.env.EnvConfig.EnvVar.HostMappedVar.value","location":"packages/graalvm/elide.runtime.plugins.env/-env-config/-env-var/-host-mapped-var/value.html","searchKeys":["value","open override val value: String?","elide.runtime.plugins.env.EnvConfig.EnvVar.HostMappedVar.value"]},{"name":"open override val value: String?","description":"elide.runtime.plugins.env.EnvConfig.EnvVar.InlineEnvVar.value","location":"packages/graalvm/elide.runtime.plugins.env/-env-config/-env-var/-inline-env-var/value.html","searchKeys":["value","open override val value: String?","elide.runtime.plugins.env.EnvConfig.EnvVar.InlineEnvVar.value"]},{"name":"open override val value: String?","description":"elide.runtime.plugins.env.EnvConfig.EnvVar.SuppliedEnvVar.value","location":"packages/graalvm/elide.runtime.plugins.env/-env-config/-env-var/-supplied-env-var/value.html","searchKeys":["value","open override val value: String?","elide.runtime.plugins.env.EnvConfig.EnvVar.SuppliedEnvVar.value"]},{"name":"open override val values: Collection<V>","description":"elide.runtime.gvm.internals.intrinsics.js.struct.map.JsMap.values","location":"packages/graalvm/elide.runtime.gvm.internals.intrinsics.js.struct.map/-js-map/values.html","searchKeys":["values","open override val values: Collection<V>","elide.runtime.gvm.internals.intrinsics.js.struct.map.JsMap.values"]},{"name":"open override val variant: String?","description":"elide.runtime.core.internals.graalvm.GraalVMRuntime.variant","location":"packages/graalvm/elide.runtime.core.internals.graalvm/-graal-v-m-runtime/variant.html","searchKeys":["variant","open override val variant: String?","elide.runtime.core.internals.graalvm.GraalVMRuntime.variant"]},{"name":"open override val version: Version?","description":"elide.runtime.core.internals.graalvm.GraalVMRuntime.version","location":"packages/graalvm/elide.runtime.core.internals.graalvm/-graal-v-m-runtime/version.html","searchKeys":["version","open override val version: Version?","elide.runtime.core.internals.graalvm.GraalVMRuntime.version"]},{"name":"open suspend fun <R> acquireSuspend(operation: Context.() -> R): R","description":"elide.runtime.gvm.internals.context.ContextManager.acquireSuspend","location":"packages/graalvm/elide.runtime.gvm.internals.context/-context-manager/acquire-suspend.html","searchKeys":["acquireSuspend","open suspend fun <R> acquireSuspend(operation: Context.() -> R): R","elide.runtime.gvm.internals.context.ContextManager.acquireSuspend"]},{"name":"open suspend fun <R> acquireSuspendAsync(operation: Context.() -> R): Deferred<R>","description":"elide.runtime.gvm.internals.context.ContextManager.acquireSuspendAsync","location":"packages/graalvm/elide.runtime.gvm.internals.context/-context-manager/acquire-suspend-async.html","searchKeys":["acquireSuspendAsync","open suspend fun <R> acquireSuspendAsync(operation: Context.() -> R): Deferred<R>","elide.runtime.gvm.internals.context.ContextManager.acquireSuspendAsync"]},{"name":"open suspend override fun <R> execute(script: ExecutableScript, returnType: Class<R>, args: ExecutionInputs?): R?","description":"elide.runtime.gvm.internals.AbstractVMEngine.execute","location":"packages/graalvm/elide.runtime.gvm.internals/-abstract-v-m-engine/execute.html","searchKeys":["execute","open suspend override fun <R> execute(script: ExecutableScript, returnType: Class<R>, args: ExecutionInputs?): R?","elide.runtime.gvm.internals.AbstractVMEngine.execute"]},{"name":"open suspend override fun <R> executeAsync(script: ExecutableScript, returnType: Class<R>, args: ExecutionInputs?): Deferred<R?>","description":"elide.runtime.gvm.internals.AbstractVMEngine.executeAsync","location":"packages/graalvm/elide.runtime.gvm.internals/-abstract-v-m-engine/execute-async.html","searchKeys":["executeAsync","open suspend override fun <R> executeAsync(script: ExecutableScript, returnType: Class<R>, args: ExecutionInputs?): Deferred<R?>","elide.runtime.gvm.internals.AbstractVMEngine.executeAsync"]},{"name":"open suspend override fun executeRender(script: ExecutableScript, request: HttpRequest<*>, context: Any?, receiver: StreamingReceiver): Job","description":"elide.runtime.gvm.internals.AbstractVMEngine.executeRender","location":"packages/graalvm/elide.runtime.gvm.internals/-abstract-v-m-engine/execute-render.html","searchKeys":["executeRender","open suspend override fun executeRender(script: ExecutableScript, request: HttpRequest<*>, context: Any?, receiver: StreamingReceiver): Job","elide.runtime.gvm.internals.AbstractVMEngine.executeRender"]},{"name":"open suspend override fun executeStreaming(script: ExecutableScript, args: ExecutionInputs, receiver: StreamingReceiver): Job","description":"elide.runtime.gvm.internals.AbstractVMEngine.executeStreaming","location":"packages/graalvm/elide.runtime.gvm.internals/-abstract-v-m-engine/execute-streaming.html","searchKeys":["executeStreaming","open suspend override fun executeStreaming(script: ExecutableScript, args: ExecutionInputs, receiver: StreamingReceiver): Job","elide.runtime.gvm.internals.AbstractVMEngine.executeStreaming"]},{"name":"open suspend override fun prewarmScript(script: ExecutableScript)","description":"elide.runtime.gvm.internals.AbstractVMEngine.prewarmScript","location":"packages/graalvm/elide.runtime.gvm.internals/-abstract-v-m-engine/prewarm-script.html","searchKeys":["prewarmScript","open suspend override fun prewarmScript(script: ExecutableScript)","elide.runtime.gvm.internals.AbstractVMEngine.prewarmScript"]},{"name":"open val cache: String","description":"elide.runtime.intrinsics.js.FetchRequest.cache","location":"packages/graalvm/elide.runtime.intrinsics.js/-fetch-request/cache.html","searchKeys":["cache","open val cache: String","elide.runtime.intrinsics.js.FetchRequest.cache"]},{"name":"open val charset: Charset?","description":"elide.runtime.gvm.cfg.JsRuntimeConfig.charset","location":"packages/graalvm/elide.runtime.gvm.cfg/-js-runtime-config/charset.html","searchKeys":["charset","open val charset: Charset?","elide.runtime.gvm.cfg.JsRuntimeConfig.charset"]},{"name":"open val columnNumber: Int?","description":"elide.runtime.intrinsics.js.err.Error.columnNumber","location":"packages/graalvm/elide.runtime.intrinsics.js.err/-error/column-number.html","searchKeys":["columnNumber","open val columnNumber: Int?","elide.runtime.intrinsics.js.err.Error.columnNumber"]},{"name":"open val credentials: String","description":"elide.runtime.intrinsics.js.FetchRequest.credentials","location":"packages/graalvm/elide.runtime.intrinsics.js/-fetch-request/credentials.html","searchKeys":["credentials","open val credentials: String","elide.runtime.intrinsics.js.FetchRequest.credentials"]},{"name":"open val defaultLocale: Locale?","description":"elide.runtime.gvm.cfg.JsRuntimeConfig.defaultLocale","location":"packages/graalvm/elide.runtime.gvm.cfg/-js-runtime-config/default-locale.html","searchKeys":["defaultLocale","open val defaultLocale: Locale?","elide.runtime.gvm.cfg.JsRuntimeConfig.defaultLocale"]},{"name":"open val esm: JsRuntimeConfig.JsEsmConfig","description":"elide.runtime.gvm.cfg.JsRuntimeConfig.esm","location":"packages/graalvm/elide.runtime.gvm.cfg/-js-runtime-config/esm.html","searchKeys":["esm","open val esm: JsRuntimeConfig.JsEsmConfig","elide.runtime.gvm.cfg.JsRuntimeConfig.esm"]},{"name":"open val fileName: String?","description":"elide.runtime.intrinsics.js.err.Error.fileName","location":"packages/graalvm/elide.runtime.intrinsics.js.err/-error/file-name.html","searchKeys":["fileName","open val fileName: String?","elide.runtime.intrinsics.js.err.Error.fileName"]},{"name":"open val integrity: String?","description":"elide.runtime.intrinsics.js.FetchRequest.integrity","location":"packages/graalvm/elide.runtime.intrinsics.js/-fetch-request/integrity.html","searchKeys":["integrity","open val integrity: String?","elide.runtime.intrinsics.js.FetchRequest.integrity"]},{"name":"open val invocationModes: EnumSet<InvocationMode>","description":"elide.runtime.gvm.GuestLanguage.invocationModes","location":"packages/graalvm/elide.runtime.gvm/-guest-language/invocation-modes.html","searchKeys":["invocationModes","open val invocationModes: EnumSet<InvocationMode>","elide.runtime.gvm.GuestLanguage.invocationModes"]},{"name":"open val isPresent: Boolean","description":"elide.runtime.plugins.env.EnvConfig.EnvVar.isPresent","location":"packages/graalvm/elide.runtime.plugins.env/-env-config/-env-var/is-present.html","searchKeys":["isPresent","open val isPresent: Boolean","elide.runtime.plugins.env.EnvConfig.EnvVar.isPresent"]},{"name":"open val language: EmbeddedScriptMetadata.JsScriptMetadata.JsLanguageLevel?","description":"elide.runtime.gvm.cfg.JsRuntimeConfig.language","location":"packages/graalvm/elide.runtime.gvm.cfg/-js-runtime-config/language.html","searchKeys":["language","open val language: EmbeddedScriptMetadata.JsScriptMetadata.JsLanguageLevel?","elide.runtime.gvm.cfg.JsRuntimeConfig.language"]},{"name":"open val lineNumber: Int?","description":"elide.runtime.intrinsics.js.err.Error.lineNumber","location":"packages/graalvm/elide.runtime.intrinsics.js.err/-error/line-number.html","searchKeys":["lineNumber","open val lineNumber: Int?","elide.runtime.intrinsics.js.err.Error.lineNumber"]},{"name":"open val locale: Locale?","description":"elide.runtime.gvm.cfg.JsRuntimeConfig.locale","location":"packages/graalvm/elide.runtime.gvm.cfg/-js-runtime-config/locale.html","searchKeys":["locale","open val locale: Locale?","elide.runtime.gvm.cfg.JsRuntimeConfig.locale"]},{"name":"open val method: String","description":"elide.runtime.intrinsics.js.FetchRequest.method","location":"packages/graalvm/elide.runtime.intrinsics.js/-fetch-request/method.html","searchKeys":["method","open val method: String","elide.runtime.intrinsics.js.FetchRequest.method"]},{"name":"open val mode: String","description":"elide.runtime.intrinsics.js.FetchRequest.mode","location":"packages/graalvm/elide.runtime.intrinsics.js/-fetch-request/mode.html","searchKeys":["mode","open val mode: String","elide.runtime.intrinsics.js.FetchRequest.mode"]},{"name":"open val modules: String?","description":"elide.runtime.gvm.cfg.JsRuntimeConfig.JsNpmConfig.modules","location":"packages/graalvm/elide.runtime.gvm.cfg/-js-runtime-config/-js-npm-config/modules.html","searchKeys":["modules","open val modules: String?","elide.runtime.gvm.cfg.JsRuntimeConfig.JsNpmConfig.modules"]},{"name":"open val npm: JsRuntimeConfig.JsNpmConfig","description":"elide.runtime.gvm.cfg.JsRuntimeConfig.npm","location":"packages/graalvm/elide.runtime.gvm.cfg/-js-runtime-config/npm.html","searchKeys":["npm","open val npm: JsRuntimeConfig.JsNpmConfig","elide.runtime.gvm.cfg.JsRuntimeConfig.npm"]},{"name":"open val ok: Boolean","description":"elide.runtime.intrinsics.js.FetchResponse.ok","location":"packages/graalvm/elide.runtime.intrinsics.js/-fetch-response/ok.html","searchKeys":["ok","open val ok: Boolean","elide.runtime.intrinsics.js.FetchResponse.ok"]},{"name":"open val priority: String","description":"elide.runtime.intrinsics.js.FetchRequest.priority","location":"packages/graalvm/elide.runtime.intrinsics.js/-fetch-request/priority.html","searchKeys":["priority","open val priority: String","elide.runtime.intrinsics.js.FetchRequest.priority"]},{"name":"open val readOnly: Boolean?","description":"elide.runtime.gvm.internals.vfs.GuestVFSPolicy.readOnly","location":"packages/graalvm/elide.runtime.gvm.internals.vfs/-guest-v-f-s-policy/read-only.html","searchKeys":["readOnly","open val readOnly: Boolean?","elide.runtime.gvm.internals.vfs.GuestVFSPolicy.readOnly"]},{"name":"open val redirect: String","description":"elide.runtime.intrinsics.js.FetchRequest.redirect","location":"packages/graalvm/elide.runtime.intrinsics.js/-fetch-request/redirect.html","searchKeys":["redirect","open val redirect: String","elide.runtime.intrinsics.js.FetchRequest.redirect"]},{"name":"open val redirected: Boolean","description":"elide.runtime.intrinsics.js.FetchResponse.redirected","location":"packages/graalvm/elide.runtime.intrinsics.js/-fetch-response/redirected.html","searchKeys":["redirected","open val redirected: Boolean","elide.runtime.intrinsics.js.FetchResponse.redirected"]},{"name":"open val referrer: String?","description":"elide.runtime.intrinsics.js.FetchRequest.referrer","location":"packages/graalvm/elide.runtime.intrinsics.js/-fetch-request/referrer.html","searchKeys":["referrer","open val referrer: String?","elide.runtime.intrinsics.js.FetchRequest.referrer"]},{"name":"open val referrerPolicy: String","description":"elide.runtime.intrinsics.js.FetchRequest.referrerPolicy","location":"packages/graalvm/elide.runtime.intrinsics.js/-fetch-request/referrer-policy.html","searchKeys":["referrerPolicy","open val referrerPolicy: String","elide.runtime.intrinsics.js.FetchRequest.referrerPolicy"]},{"name":"open val sourceMaps: Boolean?","description":"elide.runtime.gvm.cfg.JsRuntimeConfig.sourceMaps","location":"packages/graalvm/elide.runtime.gvm.cfg/-js-runtime-config/source-maps.html","searchKeys":["sourceMaps","open val sourceMaps: Boolean?","elide.runtime.gvm.cfg.JsRuntimeConfig.sourceMaps"]},{"name":"open val status: Int","description":"elide.runtime.intrinsics.js.FetchResponse.status","location":"packages/graalvm/elide.runtime.intrinsics.js/-fetch-response/status.html","searchKeys":["status","open val status: Int","elide.runtime.intrinsics.js.FetchResponse.status"]},{"name":"open val statusText: String","description":"elide.runtime.intrinsics.js.FetchResponse.statusText","location":"packages/graalvm/elide.runtime.intrinsics.js/-fetch-response/status-text.html","searchKeys":["statusText","open val statusText: String","elide.runtime.intrinsics.js.FetchResponse.statusText"]},{"name":"open val supportsSSR: Boolean","description":"elide.runtime.gvm.GuestLanguage.supportsSSR","location":"packages/graalvm/elide.runtime.gvm/-guest-language/supports-s-s-r.html","searchKeys":["supportsSSR","open val supportsSSR: Boolean","elide.runtime.gvm.GuestLanguage.supportsSSR"]},{"name":"open val supportsStreamingSSR: Boolean","description":"elide.runtime.gvm.GuestLanguage.supportsStreamingSSR","location":"packages/graalvm/elide.runtime.gvm/-guest-language/supports-streaming-s-s-r.html","searchKeys":["supportsStreamingSSR","open val supportsStreamingSSR: Boolean","elide.runtime.gvm.GuestLanguage.supportsStreamingSSR"]},{"name":"open val timezone: ZoneId?","description":"elide.runtime.gvm.cfg.JsRuntimeConfig.timezone","location":"packages/graalvm/elide.runtime.gvm.cfg/-js-runtime-config/timezone.html","searchKeys":["timezone","open val timezone: ZoneId?","elide.runtime.gvm.cfg.JsRuntimeConfig.timezone"]},{"name":"open val type: String","description":"elide.runtime.intrinsics.js.FetchResponse.type","location":"packages/graalvm/elide.runtime.intrinsics.js/-fetch-response/type.html","searchKeys":["type","open val type: String","elide.runtime.intrinsics.js.FetchResponse.type"]},{"name":"open val typescript: Boolean?","description":"elide.runtime.gvm.cfg.JsRuntimeConfig.typescript","location":"packages/graalvm/elide.runtime.gvm.cfg/-js-runtime-config/typescript.html","searchKeys":["typescript","open val typescript: Boolean?","elide.runtime.gvm.cfg.JsRuntimeConfig.typescript"]},{"name":"open val url: String","description":"elide.runtime.intrinsics.js.FetchResponse.url","location":"packages/graalvm/elide.runtime.intrinsics.js/-fetch-response/url.html","searchKeys":["url","open val url: String","elide.runtime.intrinsics.js.FetchResponse.url"]},{"name":"open val v8: Boolean?","description":"elide.runtime.gvm.cfg.JsRuntimeConfig.v8","location":"packages/graalvm/elide.runtime.gvm.cfg/-js-runtime-config/v8.html","searchKeys":["v8","open val v8: Boolean?","elide.runtime.gvm.cfg.JsRuntimeConfig.v8"]},{"name":"open val wasm: Boolean?","description":"elide.runtime.gvm.cfg.JsRuntimeConfig.wasm","location":"packages/graalvm/elide.runtime.gvm.cfg/-js-runtime-config/wasm.html","searchKeys":["wasm","open val wasm: Boolean?","elide.runtime.gvm.cfg.JsRuntimeConfig.wasm"]},{"name":"open var autoStart: Boolean","description":"elide.runtime.intrinsics.server.http.HttpServerConfig.autoStart","location":"packages/graalvm/elide.runtime.intrinsics.server.http/-http-server-config/auto-start.html","searchKeys":["autoStart","open var autoStart: Boolean","elide.runtime.intrinsics.server.http.HttpServerConfig.autoStart"]},{"name":"open var port: Int","description":"elide.runtime.intrinsics.server.http.HttpServerConfig.port","location":"packages/graalvm/elide.runtime.intrinsics.server.http/-http-server-config/port.html","searchKeys":["port","open var port: Int","elide.runtime.intrinsics.server.http.HttpServerConfig.port"]},{"name":"operator fun contains(version: Version): Boolean","description":"elide.runtime.core.Version.Range.contains","location":"packages/graalvm/elide.runtime.core/-version/-range/contains.html","searchKeys":["contains","operator fun contains(version: Version): Boolean","elide.runtime.core.Version.Range.contains"]},{"name":"sealed class AbstractJsMap<K : Any, V> : MapLike<K, V> ","description":"elide.runtime.gvm.internals.intrinsics.js.struct.map.AbstractJsMap","location":"packages/graalvm/elide.runtime.gvm.internals.intrinsics.js.struct.map/-abstract-js-map/index.html","searchKeys":["AbstractJsMap","sealed class AbstractJsMap<K : Any, V> : MapLike<K, V> ","elide.runtime.gvm.internals.intrinsics.js.struct.map.AbstractJsMap"]},{"name":"sealed class BaseJsMap<K : Any, V> : AbstractJsMap<K, V> , Map<K, V> ","description":"elide.runtime.gvm.internals.intrinsics.js.struct.map.BaseJsMap","location":"packages/graalvm/elide.runtime.gvm.internals.intrinsics.js.struct.map/-base-js-map/index.html","searchKeys":["BaseJsMap","sealed class BaseJsMap<K : Any, V> : AbstractJsMap<K, V> , Map<K, V> ","elide.runtime.gvm.internals.intrinsics.js.struct.map.BaseJsMap"]},{"name":"sealed class RuntimeImageInfo","description":"elide.runtime.gvm.internals.AbstractVMEngine.RuntimeImageInfo","location":"packages/graalvm/elide.runtime.gvm.internals/-abstract-v-m-engine/-runtime-image-info/index.html","searchKeys":["RuntimeImageInfo","sealed class RuntimeImageInfo","elide.runtime.gvm.internals.AbstractVMEngine.RuntimeImageInfo"]},{"name":"typealias GenericEngine = AbstractVMEngine<out GuestRuntimeConfiguration, out ExecutableScript, out InvocationBindings>","description":"elide.runtime.gvm.GenericEngine","location":"packages/graalvm/elide.runtime.gvm/-generic-engine/index.html","searchKeys":["GenericEngine","typealias GenericEngine = AbstractVMEngine<out GuestRuntimeConfiguration, out ExecutableScript, out InvocationBindings>","elide.runtime.gvm.GenericEngine"]},{"name":"typealias PolyglotContextBuilder = Context.Builder","description":"elide.runtime.core.PolyglotContextBuilder","location":"packages/graalvm/elide.runtime.core/-polyglot-context-builder/index.html","searchKeys":["PolyglotContextBuilder","typealias PolyglotContextBuilder = Context.Builder","elide.runtime.core.PolyglotContextBuilder"]},{"name":"typealias PolyglotEngineBuilder = Engine.Builder","description":"elide.runtime.core.PolyglotEngineBuilder","location":"packages/graalvm/elide.runtime.core/-polyglot-engine-builder/index.html","searchKeys":["PolyglotEngineBuilder","typealias PolyglotEngineBuilder = Engine.Builder","elide.runtime.core.PolyglotEngineBuilder"]},{"name":"typealias PolyglotValue = Value","description":"elide.runtime.core.PolyglotValue","location":"packages/graalvm/elide.runtime.core/-polyglot-value/index.html","searchKeys":["PolyglotValue","typealias PolyglotValue = Value","elide.runtime.core.PolyglotValue"]},{"name":"typealias StreamingReceiver = (ServerResponse) -> Unit","description":"elide.runtime.gvm.StreamingReceiver","location":"packages/graalvm/elide.runtime.gvm/-streaming-receiver/index.html","searchKeys":["StreamingReceiver","typealias StreamingReceiver = (ServerResponse) -> Unit","elide.runtime.gvm.StreamingReceiver"]},{"name":"val DEFAULTS: GuestVFSPolicy","description":"elide.runtime.gvm.internals.vfs.GuestVFSPolicy.Companion.DEFAULTS","location":"packages/graalvm/elide.runtime.gvm.internals.vfs/-guest-v-f-s-policy/-companion/-d-e-f-a-u-l-t-s.html","searchKeys":["DEFAULTS","val DEFAULTS: GuestVFSPolicy","elide.runtime.gvm.internals.vfs.GuestVFSPolicy.Companion.DEFAULTS"]},{"name":"val DEFAULTS: JsRuntimeConfig.JsEsmConfig","description":"elide.runtime.gvm.cfg.JsRuntimeConfig.JsEsmConfig.Companion.DEFAULTS","location":"packages/graalvm/elide.runtime.gvm.cfg/-js-runtime-config/-js-esm-config/-companion/-d-e-f-a-u-l-t-s.html","searchKeys":["DEFAULTS","val DEFAULTS: JsRuntimeConfig.JsEsmConfig","elide.runtime.gvm.cfg.JsRuntimeConfig.JsEsmConfig.Companion.DEFAULTS"]},{"name":"val DEFAULTS: JsRuntimeConfig.JsNpmConfig","description":"elide.runtime.gvm.cfg.JsRuntimeConfig.JsNpmConfig.Companion.DEFAULTS","location":"packages/graalvm/elide.runtime.gvm.cfg/-js-runtime-config/-js-npm-config/-companion/-d-e-f-a-u-l-t-s.html","searchKeys":["DEFAULTS","val DEFAULTS: JsRuntimeConfig.JsNpmConfig","elide.runtime.gvm.cfg.JsRuntimeConfig.JsNpmConfig.Companion.DEFAULTS"]},{"name":"val DEFAULT_CHARSET: Charset","description":"elide.runtime.gvm.cfg.JsRuntimeConfig.Companion.DEFAULT_CHARSET","location":"packages/graalvm/elide.runtime.gvm.cfg/-js-runtime-config/-companion/-d-e-f-a-u-l-t_-c-h-a-r-s-e-t.html","searchKeys":["DEFAULT_CHARSET","val DEFAULT_CHARSET: Charset","elide.runtime.gvm.cfg.JsRuntimeConfig.Companion.DEFAULT_CHARSET"]},{"name":"val DEFAULT_JS_LANGUAGE_LEVEL: EmbeddedScriptMetadata.JsScriptMetadata.JsLanguageLevel","description":"elide.runtime.gvm.cfg.JsRuntimeConfig.Companion.DEFAULT_JS_LANGUAGE_LEVEL","location":"packages/graalvm/elide.runtime.gvm.cfg/-js-runtime-config/-companion/-d-e-f-a-u-l-t_-j-s_-l-a-n-g-u-a-g-e_-l-e-v-e-l.html","searchKeys":["DEFAULT_JS_LANGUAGE_LEVEL","val DEFAULT_JS_LANGUAGE_LEVEL: EmbeddedScriptMetadata.JsScriptMetadata.JsLanguageLevel","elide.runtime.gvm.cfg.JsRuntimeConfig.Companion.DEFAULT_JS_LANGUAGE_LEVEL"]},{"name":"val DEFAULT_LOCALE: Locale","description":"elide.runtime.gvm.cfg.JsRuntimeConfig.Companion.DEFAULT_LOCALE","location":"packages/graalvm/elide.runtime.gvm.cfg/-js-runtime-config/-companion/-d-e-f-a-u-l-t_-l-o-c-a-l-e.html","searchKeys":["DEFAULT_LOCALE","val DEFAULT_LOCALE: Locale","elide.runtime.gvm.cfg.JsRuntimeConfig.Companion.DEFAULT_LOCALE"]},{"name":"val DEFAULT_TIMEZONE: ZoneId","description":"elide.runtime.gvm.cfg.JsRuntimeConfig.Companion.DEFAULT_TIMEZONE","location":"packages/graalvm/elide.runtime.gvm.cfg/-js-runtime-config/-companion/-d-e-f-a-u-l-t_-t-i-m-e-z-o-n-e.html","searchKeys":["DEFAULT_TIMEZONE","val DEFAULT_TIMEZONE: ZoneId","elide.runtime.gvm.cfg.JsRuntimeConfig.Companion.DEFAULT_TIMEZONE"]},{"name":"val EMPTY: ExecutionInputs","description":"elide.runtime.gvm.ExecutionInputs.Companion.EMPTY","location":"packages/graalvm/elide.runtime.gvm/-execution-inputs/-companion/-e-m-p-t-y.html","searchKeys":["EMPTY","val EMPTY: ExecutionInputs","elide.runtime.gvm.ExecutionInputs.Companion.EMPTY"]},{"name":"val EMPTY: ExecutionInputs","description":"elide.runtime.gvm.js.JavaScript.Inputs.EMPTY","location":"packages/graalvm/elide.runtime.gvm.js/-java-script/-inputs/-e-m-p-t-y.html","searchKeys":["EMPTY","val EMPTY: ExecutionInputs","elide.runtime.gvm.js.JavaScript.Inputs.EMPTY"]},{"name":"val GVM_23: Version","description":"elide.runtime.core.internals.graalvm.GraalVMRuntime.Companion.GVM_23","location":"packages/graalvm/elide.runtime.core.internals.graalvm/-graal-v-m-runtime/-companion/-g-v-m_23.html","searchKeys":["GVM_23","val GVM_23: Version","elide.runtime.core.internals.graalvm.GraalVMRuntime.Companion.GVM_23"]},{"name":"val GVM_23_1: Version","description":"elide.runtime.core.internals.graalvm.GraalVMRuntime.Companion.GVM_23_1","location":"packages/graalvm/elide.runtime.core.internals.graalvm/-graal-v-m-runtime/-companion/-g-v-m_23_1.html","searchKeys":["GVM_23_1","val GVM_23_1: Version","elide.runtime.core.internals.graalvm.GraalVMRuntime.Companion.GVM_23_1"]},{"name":"val HostPlatform.OperatingSystem.isUnix: Boolean","description":"elide.runtime.core.isUnix","location":"packages/graalvm/elide.runtime.core/is-unix.html","searchKeys":["isUnix","val HostPlatform.OperatingSystem.isUnix: Boolean","elide.runtime.core.isUnix"]},{"name":"val HostRuntime.isNativeImage: Boolean","description":"elide.runtime.core.internals.graalvm.isNativeImage","location":"packages/graalvm/elide.runtime.core.internals.graalvm/is-native-image.html","searchKeys":["isNativeImage","val HostRuntime.isNativeImage: Boolean","elide.runtime.core.internals.graalvm.isNativeImage"]},{"name":"val JAVASCRIPT: GuestLanguage","description":"elide.runtime.gvm.GuestLanguage.Companion.JAVASCRIPT","location":"packages/graalvm/elide.runtime.gvm/-guest-language/-companion/-j-a-v-a-s-c-r-i-p-t.html","searchKeys":["JAVASCRIPT","val JAVASCRIPT: GuestLanguage","elide.runtime.gvm.GuestLanguage.Companion.JAVASCRIPT"]},{"name":"val JVM: GuestLanguage","description":"elide.runtime.gvm.GuestLanguage.Companion.JVM","location":"packages/graalvm/elide.runtime.gvm/-guest-language/-companion/-j-v-m.html","searchKeys":["JVM","val JVM: GuestLanguage","elide.runtime.gvm.GuestLanguage.Companion.JVM"]},{"name":"val PYTHON: GuestLanguage","description":"elide.runtime.gvm.GuestLanguage.Companion.PYTHON","location":"packages/graalvm/elide.runtime.gvm/-guest-language/-companion/-p-y-t-h-o-n.html","searchKeys":["PYTHON","val PYTHON: GuestLanguage","elide.runtime.gvm.GuestLanguage.Companion.PYTHON"]},{"name":"val RUBY: GuestLanguage","description":"elide.runtime.gvm.GuestLanguage.Companion.RUBY","location":"packages/graalvm/elide.runtime.gvm/-guest-language/-companion/-r-u-b-y.html","searchKeys":["RUBY","val RUBY: GuestLanguage","elide.runtime.gvm.GuestLanguage.Companion.RUBY"]},{"name":"val WASM: GuestLanguage","description":"elide.runtime.gvm.GuestLanguage.Companion.WASM","location":"packages/graalvm/elide.runtime.gvm/-guest-language/-companion/-w-a-s-m.html","searchKeys":["WASM","val WASM: GuestLanguage","elide.runtime.gvm.GuestLanguage.Companion.WASM"]},{"name":"val Zero: Version","description":"elide.runtime.core.Version.Companion.Zero","location":"packages/graalvm/elide.runtime.core/-version/-companion/-zero.html","searchKeys":["Zero","val Zero: Version","elide.runtime.core.Version.Companion.Zero"]},{"name":"val amd64: AbstractVMEngine.RuntimeNativeResourceBundle? = null","description":"elide.runtime.gvm.internals.AbstractVMEngine.RuntimeNativeResources.amd64","location":"packages/graalvm/elide.runtime.gvm.internals/-abstract-v-m-engine/-runtime-native-resources/amd64.html","searchKeys":["amd64","val amd64: AbstractVMEngine.RuntimeNativeResourceBundle? = null","elide.runtime.gvm.internals.AbstractVMEngine.RuntimeNativeResources.amd64"]},{"name":"val arch: HostPlatform.Architecture","description":"elide.runtime.core.HostPlatform.arch","location":"packages/graalvm/elide.runtime.core/-host-platform/arch.html","searchKeys":["arch","val arch: HostPlatform.Architecture","elide.runtime.core.HostPlatform.arch"]},{"name":"val arm64: AbstractVMEngine.RuntimeNativeResourceBundle? = null","description":"elide.runtime.gvm.internals.AbstractVMEngine.RuntimeNativeResources.arm64","location":"packages/graalvm/elide.runtime.gvm.internals/-abstract-v-m-engine/-runtime-native-resources/arm64.html","searchKeys":["arm64","val arm64: AbstractVMEngine.RuntimeNativeResourceBundle? = null","elide.runtime.gvm.internals.AbstractVMEngine.RuntimeNativeResources.arm64"]},{"name":"val artifacts: List<AbstractVMEngine.RuntimeArtifact>","description":"elide.runtime.gvm.internals.AbstractVMEngine.RuntimeInfo.artifacts","location":"packages/graalvm/elide.runtime.gvm.internals/-abstract-v-m-engine/-runtime-info/artifacts.html","searchKeys":["artifacts","val artifacts: List<AbstractVMEngine.RuntimeArtifact>","elide.runtime.gvm.internals.AbstractVMEngine.RuntimeInfo.artifacts"]},{"name":"val bundle: List<URI>","description":"elide.runtime.gvm.internals.vfs.EffectiveGuestVFSConfig.bundle","location":"packages/graalvm/elide.runtime.gvm.internals.vfs/-effective-guest-v-f-s-config/bundle.html","searchKeys":["bundle","val bundle: List<URI>","elide.runtime.gvm.internals.vfs.EffectiveGuestVFSConfig.bundle"]},{"name":"val bundle: String","description":"elide.runtime.gvm.internals.AbstractVMEngine.RuntimeNativeResourceBundle.bundle","location":"packages/graalvm/elide.runtime.gvm.internals/-abstract-v-m-engine/-runtime-native-resource-bundle/bundle.html","searchKeys":["bundle","val bundle: String","elide.runtime.gvm.internals.AbstractVMEngine.RuntimeNativeResourceBundle.bundle"]},{"name":"val bundle: String","description":"elide.runtime.gvm.internals.AbstractVMEngine.RuntimeNativeResourceSignature.bundle","location":"packages/graalvm/elide.runtime.gvm.internals/-abstract-v-m-engine/-runtime-native-resource-signature/bundle.html","searchKeys":["bundle","val bundle: String","elide.runtime.gvm.internals.AbstractVMEngine.RuntimeNativeResourceSignature.bundle"]},{"name":"val bundles: List<AbstractLanguagePlugin.LanguagePluginManifest.EmbeddedResource>","description":"elide.runtime.plugins.AbstractLanguagePlugin.LanguagePluginManifest.bundles","location":"packages/graalvm/elide.runtime.plugins/-abstract-language-plugin/-language-plugin-manifest/bundles.html","searchKeys":["bundles","val bundles: List<AbstractLanguagePlugin.LanguagePluginManifest.EmbeddedResource>","elide.runtime.plugins.AbstractLanguagePlugin.LanguagePluginManifest.bundles"]},{"name":"val caseSensitive: Boolean","description":"elide.runtime.gvm.internals.vfs.EffectiveGuestVFSConfig.caseSensitive","location":"packages/graalvm/elide.runtime.gvm.internals.vfs/-effective-guest-v-f-s-config/case-sensitive.html","searchKeys":["caseSensitive","val caseSensitive: Boolean","elide.runtime.gvm.internals.vfs.EffectiveGuestVFSConfig.caseSensitive"]},{"name":"val config: DebugConfig","description":"elide.runtime.plugins.debug.Debug.config","location":"packages/graalvm/elide.runtime.plugins.debug/-debug/config.html","searchKeys":["config","val config: DebugConfig","elide.runtime.plugins.debug.Debug.config"]},{"name":"val config: EnvConfig","description":"elide.runtime.plugins.env.Environment.config","location":"packages/graalvm/elide.runtime.plugins.env/-environment/config.html","searchKeys":["config","val config: EnvConfig","elide.runtime.plugins.env.Environment.config"]},{"name":"val config: VfsConfig","description":"elide.runtime.plugins.vfs.Vfs.config","location":"packages/graalvm/elide.runtime.plugins.vfs/-vfs/config.html","searchKeys":["config","val config: VfsConfig","elide.runtime.plugins.vfs.Vfs.config"]},{"name":"val darwin: AbstractVMEngine.RuntimeNativeResources? = null","description":"elide.runtime.gvm.internals.AbstractVMEngine.RuntimeImageInfo.NativeImageInfo.darwin","location":"packages/graalvm/elide.runtime.gvm.internals/-abstract-v-m-engine/-runtime-image-info/-native-image-info/darwin.html","searchKeys":["darwin","val darwin: AbstractVMEngine.RuntimeNativeResources? = null","elide.runtime.gvm.internals.AbstractVMEngine.RuntimeImageInfo.NativeImageInfo.darwin"]},{"name":"val defaultValue: String? = null","description":"elide.runtime.plugins.env.EnvConfig.EnvVar.HostMappedVar.defaultValue","location":"packages/graalvm/elide.runtime.plugins.env/-env-config/-env-var/-host-mapped-var/default-value.html","searchKeys":["defaultValue","val defaultValue: String? = null","elide.runtime.plugins.env.EnvConfig.EnvVar.HostMappedVar.defaultValue"]},{"name":"val domain: AccessDomain","description":"elide.runtime.gvm.internals.vfs.AccessRequest.domain","location":"packages/graalvm/elide.runtime.gvm.internals.vfs/-access-request/domain.html","searchKeys":["domain","val domain: AccessDomain","elide.runtime.gvm.internals.vfs.AccessRequest.domain"]},{"name":"val done: Boolean","description":"elide.runtime.intrinsics.js.JsIterator.JsIteratorResult.done","location":"packages/graalvm/elide.runtime.intrinsics.js/-js-iterator/-js-iterator-result/done.html","searchKeys":["done","val done: Boolean","elide.runtime.intrinsics.js.JsIterator.JsIteratorResult.done"]},{"name":"val engine: String","description":"elide.runtime.gvm.api.GuestRuntime.engine","location":"packages/graalvm/elide.runtime.gvm.api/-guest-runtime/engine.html","searchKeys":["engine","val engine: String","elide.runtime.gvm.api.GuestRuntime.engine"]},{"name":"val engine: String","description":"elide.runtime.gvm.internals.AbstractVMEngine.RuntimeInfo.engine","location":"packages/graalvm/elide.runtime.gvm.internals/-abstract-v-m-engine/-runtime-info/engine.html","searchKeys":["engine","val engine: String","elide.runtime.gvm.internals.AbstractVMEngine.RuntimeInfo.engine"]},{"name":"val engine: String","description":"elide.runtime.plugins.AbstractLanguagePlugin.LanguagePluginManifest.engine","location":"packages/graalvm/elide.runtime.plugins/-abstract-language-plugin/-language-plugin-manifest/engine.html","searchKeys":["engine","val engine: String","elide.runtime.plugins.AbstractLanguagePlugin.LanguagePluginManifest.engine"]},{"name":"val entries: EnumEntries<AccessDomain>","description":"elide.runtime.gvm.internals.vfs.AccessDomain.entries","location":"packages/graalvm/elide.runtime.gvm.internals.vfs/-access-domain/entries.html","searchKeys":["entries","val entries: EnumEntries<AccessDomain>","elide.runtime.gvm.internals.vfs.AccessDomain.entries"]},{"name":"val entries: EnumEntries<AccessResult>","description":"elide.runtime.gvm.internals.vfs.AccessResult.entries","location":"packages/graalvm/elide.runtime.gvm.internals.vfs/-access-result/entries.html","searchKeys":["entries","val entries: EnumEntries<AccessResult>","elide.runtime.gvm.internals.vfs.AccessResult.entries"]},{"name":"val entries: EnumEntries<AccessScope>","description":"elide.runtime.gvm.internals.vfs.AccessScope.entries","location":"packages/graalvm/elide.runtime.gvm.internals.vfs/-access-scope/entries.html","searchKeys":["entries","val entries: EnumEntries<AccessScope>","elide.runtime.gvm.internals.vfs.AccessScope.entries"]},{"name":"val entries: EnumEntries<AccessType>","description":"elide.runtime.gvm.internals.vfs.AccessType.entries","location":"packages/graalvm/elide.runtime.gvm.internals.vfs/-access-type/entries.html","searchKeys":["entries","val entries: EnumEntries<AccessType>","elide.runtime.gvm.internals.vfs.AccessType.entries"]},{"name":"val entries: EnumEntries<EnvConfig.EnvVariableSource>","description":"elide.runtime.plugins.env.EnvConfig.EnvVariableSource.entries","location":"packages/graalvm/elide.runtime.plugins.env/-env-config/-env-variable-source/entries.html","searchKeys":["entries","val entries: EnumEntries<EnvConfig.EnvVariableSource>","elide.runtime.plugins.env.EnvConfig.EnvVariableSource.entries"]},{"name":"val entries: EnumEntries<ExecutableScript.State>","description":"elide.runtime.gvm.ExecutableScript.State.entries","location":"packages/graalvm/elide.runtime.gvm/-executable-script/-state/entries.html","searchKeys":["entries","val entries: EnumEntries<ExecutableScript.State>","elide.runtime.gvm.ExecutableScript.State.entries"]},{"name":"val entries: EnumEntries<GVMInvocationBindings.DispatchStyle>","description":"elide.runtime.gvm.internals.GVMInvocationBindings.DispatchStyle.entries","location":"packages/graalvm/elide.runtime.gvm.internals/-g-v-m-invocation-bindings/-dispatch-style/entries.html","searchKeys":["entries","val entries: EnumEntries<GVMInvocationBindings.DispatchStyle>","elide.runtime.gvm.internals.GVMInvocationBindings.DispatchStyle.entries"]},{"name":"val entries: EnumEntries<GraalVMGuest>","description":"elide.runtime.gvm.internals.GraalVMGuest.entries","location":"packages/graalvm/elide.runtime.gvm.internals/-graal-v-m-guest/entries.html","searchKeys":["entries","val entries: EnumEntries<GraalVMGuest>","elide.runtime.gvm.internals.GraalVMGuest.entries"]},{"name":"val entries: EnumEntries<HostPlatform.Architecture>","description":"elide.runtime.core.HostPlatform.Architecture.entries","location":"packages/graalvm/elide.runtime.core/-host-platform/-architecture/entries.html","searchKeys":["entries","val entries: EnumEntries<HostPlatform.Architecture>","elide.runtime.core.HostPlatform.Architecture.entries"]},{"name":"val entries: EnumEntries<HostPlatform.OperatingSystem>","description":"elide.runtime.core.HostPlatform.OperatingSystem.entries","location":"packages/graalvm/elide.runtime.core/-host-platform/-operating-system/entries.html","searchKeys":["entries","val entries: EnumEntries<HostPlatform.OperatingSystem>","elide.runtime.core.HostPlatform.OperatingSystem.entries"]},{"name":"val entries: EnumEntries<HttpMethod>","description":"elide.runtime.intrinsics.server.http.HttpMethod.entries","location":"packages/graalvm/elide.runtime.intrinsics.server.http/-http-method/entries.html","searchKeys":["entries","val entries: EnumEntries<HttpMethod>","elide.runtime.intrinsics.server.http.HttpMethod.entries"]},{"name":"val entries: EnumEntries<InvocationMode>","description":"elide.runtime.gvm.InvocationMode.entries","location":"packages/graalvm/elide.runtime.gvm/-invocation-mode/entries.html","searchKeys":["entries","val entries: EnumEntries<InvocationMode>","elide.runtime.gvm.InvocationMode.entries"]},{"name":"val entries: EnumEntries<JavaScriptVersion>","description":"elide.runtime.plugins.js.JavaScriptVersion.entries","location":"packages/graalvm/elide.runtime.plugins.js/-java-script-version/entries.html","searchKeys":["entries","val entries: EnumEntries<JavaScriptVersion>","elide.runtime.plugins.js.JavaScriptVersion.entries"]},{"name":"val entries: EnumEntries<PolyglotEngineConfiguration.HostAccess>","description":"elide.runtime.core.PolyglotEngineConfiguration.HostAccess.entries","location":"packages/graalvm/elide.runtime.core/-polyglot-engine-configuration/-host-access/entries.html","searchKeys":["entries","val entries: EnumEntries<PolyglotEngineConfiguration.HostAccess>","elide.runtime.core.PolyglotEngineConfiguration.HostAccess.entries"]},{"name":"val entries: EnumEntries<UUID.UUIDType>","description":"elide.runtime.intrinsics.js.typed.UUID.UUIDType.entries","location":"packages/graalvm/elide.runtime.intrinsics.js.typed/-u-u-i-d/-u-u-i-d-type/entries.html","searchKeys":["entries","val entries: EnumEntries<UUID.UUIDType>","elide.runtime.intrinsics.js.typed.UUID.UUIDType.entries"]},{"name":"val entry: String? = null","description":"elide.runtime.gvm.internals.AbstractVMEngine.RuntimeInfo.entry","location":"packages/graalvm/elide.runtime.gvm.internals/-abstract-v-m-engine/-runtime-info/entry.html","searchKeys":["entry","val entry: String? = null","elide.runtime.gvm.internals.AbstractVMEngine.RuntimeInfo.entry"]},{"name":"val err: Throwable? = null","description":"elide.runtime.gvm.internals.vfs.AccessResponse.err","location":"packages/graalvm/elide.runtime.gvm.internals.vfs/-access-response/err.html","searchKeys":["err","val err: Throwable? = null","elide.runtime.gvm.internals.vfs.AccessResponse.err"]},{"name":"val file: String","description":"elide.runtime.plugins.env.EnvConfig.EnvVar.DotEnvVar.file","location":"packages/graalvm/elide.runtime.plugins.env/-env-config/-env-var/-dot-env-var/file.html","searchKeys":["file","val file: String","elide.runtime.plugins.env.EnvConfig.EnvVar.DotEnvVar.file"]},{"name":"val hostPlatform: HostPlatform","description":"elide.runtime.core.PolyglotEngineConfiguration.hostPlatform","location":"packages/graalvm/elide.runtime.core/-polyglot-engine-configuration/host-platform.html","searchKeys":["hostPlatform","val hostPlatform: HostPlatform","elide.runtime.core.PolyglotEngineConfiguration.hostPlatform"]},{"name":"val id: String","description":"elide.runtime.core.EnginePlugin.Key.id","location":"packages/graalvm/elide.runtime.core/-engine-plugin/-key/id.html","searchKeys":["id","val id: String","elide.runtime.core.EnginePlugin.Key.id"]},{"name":"val image: AbstractVMEngine.RuntimeImageInfo? = null","description":"elide.runtime.gvm.internals.AbstractVMEngine.RuntimeInfo.image","location":"packages/graalvm/elide.runtime.gvm.internals/-abstract-v-m-engine/-runtime-info/image.html","searchKeys":["image","val image: AbstractVMEngine.RuntimeImageInfo? = null","elide.runtime.gvm.internals.AbstractVMEngine.RuntimeInfo.image"]},{"name":"val includeMax: Boolean = true","description":"elide.runtime.core.Version.Range.includeMax","location":"packages/graalvm/elide.runtime.core/-version/-range/include-max.html","searchKeys":["includeMax","val includeMax: Boolean = true","elide.runtime.core.Version.Range.includeMax"]},{"name":"val includeMin: Boolean = true","description":"elide.runtime.core.Version.Range.includeMin","location":"packages/graalvm/elide.runtime.core/-version/-range/include-min.html","searchKeys":["includeMin","val includeMin: Boolean = true","elide.runtime.core.Version.Range.includeMin"]},{"name":"val isRead: Boolean","description":"elide.runtime.gvm.internals.vfs.AccessRequest.isRead","location":"packages/graalvm/elide.runtime.gvm.internals.vfs/-access-request/is-read.html","searchKeys":["isRead","val isRead: Boolean","elide.runtime.gvm.internals.vfs.AccessRequest.isRead"]},{"name":"val isWrite: Boolean","description":"elide.runtime.gvm.internals.vfs.AccessRequest.isWrite","location":"packages/graalvm/elide.runtime.gvm.internals.vfs/-access-request/is-write.html","searchKeys":["isWrite","val isWrite: Boolean","elide.runtime.gvm.internals.vfs.AccessRequest.isWrite"]},{"name":"val isolatedEnvironmentVariables: Map<String, EnvConfig.EnvVar>","description":"elide.runtime.plugins.env.EnvConfig.AppEnvConfig.isolatedEnvironmentVariables","location":"packages/graalvm/elide.runtime.plugins.env/-env-config/-app-env-config/isolated-environment-variables.html","searchKeys":["isolatedEnvironmentVariables","val isolatedEnvironmentVariables: Map<String, EnvConfig.EnvVar>","elide.runtime.plugins.env.EnvConfig.AppEnvConfig.isolatedEnvironmentVariables"]},{"name":"val key: String","description":"elide.runtime.core.PolyglotContextElement.key","location":"packages/graalvm/elide.runtime.core/-polyglot-context-element/key.html","searchKeys":["key","val key: String","elide.runtime.core.PolyglotContextElement.key"]},{"name":"val language: GuestLanguage","description":"elide.runtime.gvm.internals.AbstractVMEngine.RuntimeInfo.language","location":"packages/graalvm/elide.runtime.gvm.internals/-abstract-v-m-engine/-runtime-info/language.html","searchKeys":["language","val language: GuestLanguage","elide.runtime.gvm.internals.AbstractVMEngine.RuntimeInfo.language"]},{"name":"val language: String","description":"elide.runtime.plugins.AbstractLanguagePlugin.LanguagePluginManifest.language","location":"packages/graalvm/elide.runtime.plugins/-abstract-language-plugin/-language-plugin-manifest/language.html","searchKeys":["language","val language: String","elide.runtime.plugins.AbstractLanguagePlugin.LanguagePluginManifest.language"]},{"name":"val linux: AbstractVMEngine.RuntimeNativeResources? = null","description":"elide.runtime.gvm.internals.AbstractVMEngine.RuntimeImageInfo.NativeImageInfo.linux","location":"packages/graalvm/elide.runtime.gvm.internals/-abstract-v-m-engine/-runtime-image-info/-native-image-info/linux.html","searchKeys":["linux","val linux: AbstractVMEngine.RuntimeNativeResources? = null","elide.runtime.gvm.internals.AbstractVMEngine.RuntimeImageInfo.NativeImageInfo.linux"]},{"name":"val major: Int","description":"elide.runtime.core.Version.major","location":"packages/graalvm/elide.runtime.core/-version/major.html","searchKeys":["major","val major: Int","elide.runtime.core.Version.major"]},{"name":"val mapped: String","description":"elide.runtime.plugins.env.EnvConfig.EnvVar.HostMappedVar.mapped","location":"packages/graalvm/elide.runtime.plugins.env/-env-config/-env-var/-host-mapped-var/mapped.html","searchKeys":["mapped","val mapped: String","elide.runtime.plugins.env.EnvConfig.EnvVar.HostMappedVar.mapped"]},{"name":"val max: Version? = null","description":"elide.runtime.core.Version.Range.max","location":"packages/graalvm/elide.runtime.core/-version/-range/max.html","searchKeys":["max","val max: Version? = null","elide.runtime.core.Version.Range.max"]},{"name":"val min: Version","description":"elide.runtime.core.Version.Range.min","location":"packages/graalvm/elide.runtime.core/-version/-range/min.html","searchKeys":["min","val min: Version","elide.runtime.core.Version.Range.min"]},{"name":"val minor: Int = 0","description":"elide.runtime.core.Version.minor","location":"packages/graalvm/elide.runtime.core/-version/minor.html","searchKeys":["minor","val minor: Int = 0","elide.runtime.core.Version.minor"]},{"name":"val name: String","description":"elide.runtime.gvm.internals.AbstractVMEngine.RuntimeVFS.name","location":"packages/graalvm/elide.runtime.gvm.internals/-abstract-v-m-engine/-runtime-v-f-s/name.html","searchKeys":["name","val name: String","elide.runtime.gvm.internals.AbstractVMEngine.RuntimeVFS.name"]},{"name":"val native: Boolean","description":"elide.runtime.core.internals.graalvm.GraalVMRuntime.native","location":"packages/graalvm/elide.runtime.core.internals.graalvm/-graal-v-m-runtime/native.html","searchKeys":["native","val native: Boolean","elide.runtime.core.internals.graalvm.GraalVMRuntime.native"]},{"name":"val os: HostPlatform.OperatingSystem","description":"elide.runtime.core.HostPlatform.os","location":"packages/graalvm/elide.runtime.core/-host-platform/os.html","searchKeys":["os","val os: HostPlatform.OperatingSystem","elide.runtime.core.HostPlatform.os"]},{"name":"val patch: Int = 0","description":"elide.runtime.core.Version.patch","location":"packages/graalvm/elide.runtime.core/-version/patch.html","searchKeys":["patch","val patch: Int = 0","elide.runtime.core.Version.patch"]},{"name":"val path: Path","description":"elide.runtime.gvm.internals.vfs.AccessRequest.path","location":"packages/graalvm/elide.runtime.gvm.internals.vfs/-access-request/path.html","searchKeys":["path","val path: Path","elide.runtime.gvm.internals.vfs.AccessRequest.path"]},{"name":"val path: String","description":"elide.runtime.gvm.internals.AbstractVMEngine.RuntimeArtifact.path","location":"packages/graalvm/elide.runtime.gvm.internals/-abstract-v-m-engine/-runtime-artifact/path.html","searchKeys":["path","val path: String","elide.runtime.gvm.internals.AbstractVMEngine.RuntimeArtifact.path"]},{"name":"val path: String","description":"elide.runtime.plugins.AbstractLanguagePlugin.LanguagePluginManifest.EmbeddedResource.path","location":"packages/graalvm/elide.runtime.plugins/-abstract-language-plugin/-language-plugin-manifest/-embedded-resource/path.html","searchKeys":["path","val path: String","elide.runtime.plugins.AbstractLanguagePlugin.LanguagePluginManifest.EmbeddedResource.path"]},{"name":"val platform: HostPlatform? = null","description":"elide.runtime.plugins.AbstractLanguagePlugin.LanguagePluginManifest.EmbeddedResource.platform","location":"packages/graalvm/elide.runtime.plugins/-abstract-language-plugin/-language-plugin-manifest/-embedded-resource/platform.html","searchKeys":["platform","val platform: HostPlatform? = null","elide.runtime.plugins.AbstractLanguagePlugin.LanguagePluginManifest.EmbeddedResource.platform"]},{"name":"val policy: AccessResult","description":"elide.runtime.gvm.internals.vfs.AccessResponse.policy","location":"packages/graalvm/elide.runtime.gvm.internals.vfs/-access-response/policy.html","searchKeys":["policy","val policy: AccessResult","elide.runtime.gvm.internals.vfs.AccessResponse.policy"]},{"name":"val policy: GuestVFSPolicy","description":"elide.runtime.gvm.internals.vfs.EffectiveGuestVFSConfig.policy","location":"packages/graalvm/elide.runtime.gvm.internals.vfs/-effective-guest-v-f-s-config/policy.html","searchKeys":["policy","val policy: GuestVFSPolicy","elide.runtime.gvm.internals.vfs.EffectiveGuestVFSConfig.policy"]},{"name":"val readOnly: Boolean","description":"elide.runtime.gvm.internals.vfs.EffectiveGuestVFSConfig.readOnly","location":"packages/graalvm/elide.runtime.gvm.internals.vfs/-effective-guest-v-f-s-config/read-only.html","searchKeys":["readOnly","val readOnly: Boolean","elide.runtime.gvm.internals.vfs.EffectiveGuestVFSConfig.readOnly"]},{"name":"val reason: String? = null","description":"elide.runtime.gvm.internals.vfs.AccessResponse.reason","location":"packages/graalvm/elide.runtime.gvm.internals.vfs/-access-response/reason.html","searchKeys":["reason","val reason: String? = null","elide.runtime.gvm.internals.vfs.AccessResponse.reason"]},{"name":"val resources: Map<String, List<String>>","description":"elide.runtime.plugins.AbstractLanguagePlugin.LanguagePluginManifest.resources","location":"packages/graalvm/elide.runtime.plugins/-abstract-language-plugin/-language-plugin-manifest/resources.html","searchKeys":["resources","val resources: Map<String, List<String>>","elide.runtime.plugins.AbstractLanguagePlugin.LanguagePluginManifest.resources"]},{"name":"val root: String","description":"elide.runtime.gvm.internals.vfs.EffectiveGuestVFSConfig.root","location":"packages/graalvm/elide.runtime.gvm.internals.vfs/-effective-guest-v-f-s-config/root.html","searchKeys":["root","val root: String","elide.runtime.gvm.internals.vfs.EffectiveGuestVFSConfig.root"]},{"name":"val root: String? = null","description":"elide.runtime.plugins.AbstractLanguagePlugin.LanguagePluginManifest.root","location":"packages/graalvm/elide.runtime.plugins/-abstract-language-plugin/-language-plugin-manifest/root.html","searchKeys":["root","val root: String? = null","elide.runtime.plugins.AbstractLanguagePlugin.LanguagePluginManifest.root"]},{"name":"val scope: AccessScope","description":"elide.runtime.gvm.internals.vfs.AccessRequest.scope","location":"packages/graalvm/elide.runtime.gvm.internals.vfs/-access-request/scope.html","searchKeys":["scope","val scope: AccessScope","elide.runtime.gvm.internals.vfs.AccessRequest.scope"]},{"name":"val scope: Path? = null","description":"elide.runtime.gvm.internals.vfs.EffectiveGuestVFSConfig.scope","location":"packages/graalvm/elide.runtime.gvm.internals.vfs/-effective-guest-v-f-s-config/scope.html","searchKeys":["scope","val scope: Path? = null","elide.runtime.gvm.internals.vfs.EffectiveGuestVFSConfig.scope"]},{"name":"val scripts: List<AbstractLanguagePlugin.LanguagePluginManifest.EmbeddedResource>","description":"elide.runtime.plugins.AbstractLanguagePlugin.LanguagePluginManifest.scripts","location":"packages/graalvm/elide.runtime.plugins/-abstract-language-plugin/-language-plugin-manifest/scripts.html","searchKeys":["scripts","val scripts: List<AbstractLanguagePlugin.LanguagePluginManifest.EmbeddedResource>","elide.runtime.plugins.AbstractLanguagePlugin.LanguagePluginManifest.scripts"]},{"name":"val scripts: List<AbstractVMEngine.RuntimeArtifact>","description":"elide.runtime.gvm.internals.AbstractVMEngine.RuntimeInfo.scripts","location":"packages/graalvm/elide.runtime.gvm.internals/-abstract-v-m-engine/-runtime-info/scripts.html","searchKeys":["scripts","val scripts: List<AbstractVMEngine.RuntimeArtifact>","elide.runtime.gvm.internals.AbstractVMEngine.RuntimeInfo.scripts"]},{"name":"val sha256: String","description":"elide.runtime.gvm.internals.AbstractVMEngine.RuntimeNativeResourceBundle.sha256","location":"packages/graalvm/elide.runtime.gvm.internals/-abstract-v-m-engine/-runtime-native-resource-bundle/sha256.html","searchKeys":["sha256","val sha256: String","elide.runtime.gvm.internals.AbstractVMEngine.RuntimeNativeResourceBundle.sha256"]},{"name":"val sha256: String","description":"elide.runtime.gvm.internals.AbstractVMEngine.RuntimeNativeResourceSignature.sha256","location":"packages/graalvm/elide.runtime.gvm.internals/-abstract-v-m-engine/-runtime-native-resource-signature/sha256.html","searchKeys":["sha256","val sha256: String","elide.runtime.gvm.internals.AbstractVMEngine.RuntimeNativeResourceSignature.sha256"]},{"name":"val signature: AbstractVMEngine.RuntimeNativeResourceSignature","description":"elide.runtime.gvm.internals.AbstractVMEngine.RuntimeNativeResourceBundle.signature","location":"packages/graalvm/elide.runtime.gvm.internals/-abstract-v-m-engine/-runtime-native-resource-bundle/signature.html","searchKeys":["signature","val signature: AbstractVMEngine.RuntimeNativeResourceSignature","elide.runtime.gvm.internals.AbstractVMEngine.RuntimeNativeResourceBundle.signature"]},{"name":"val stackTrace: Stacktrace","description":"elide.runtime.intrinsics.js.err.Error.stackTrace","location":"packages/graalvm/elide.runtime.intrinsics.js.err/-error/stack-trace.html","searchKeys":["stackTrace","val stackTrace: Stacktrace","elide.runtime.intrinsics.js.err.Error.stackTrace"]},{"name":"val stamp: String","description":"elide.runtime.gvm.internals.AbstractVMEngine.RuntimeNativeResourceSignature.stamp","location":"packages/graalvm/elide.runtime.gvm.internals/-abstract-v-m-engine/-runtime-native-resource-signature/stamp.html","searchKeys":["stamp","val stamp: String","elide.runtime.gvm.internals.AbstractVMEngine.RuntimeNativeResourceSignature.stamp"]},{"name":"val staticValue: String","description":"elide.runtime.gvm.internals.VMStaticProperty.staticValue","location":"packages/graalvm/elide.runtime.gvm.internals/-v-m-static-property/static-value.html","searchKeys":["staticValue","val staticValue: String","elide.runtime.gvm.internals.VMStaticProperty.staticValue"]},{"name":"val supportsSymbolicLinks: Boolean","description":"elide.runtime.gvm.internals.vfs.EffectiveGuestVFSConfig.supportsSymbolicLinks","location":"packages/graalvm/elide.runtime.gvm.internals.vfs/-effective-guest-v-f-s-config/supports-symbolic-links.html","searchKeys":["supportsSymbolicLinks","val supportsSymbolicLinks: Boolean","elide.runtime.gvm.internals.vfs.EffectiveGuestVFSConfig.supportsSymbolicLinks"]},{"name":"val type: Set<AccessType>","description":"elide.runtime.gvm.internals.vfs.AccessRequest.type","location":"packages/graalvm/elide.runtime.gvm.internals.vfs/-access-request/type.html","searchKeys":["type","val type: Set<AccessType>","elide.runtime.gvm.internals.vfs.AccessRequest.type"]},{"name":"val universal: String? = null","description":"elide.runtime.gvm.internals.AbstractVMEngine.RuntimeImageInfo.UniversalImageInfo.universal","location":"packages/graalvm/elide.runtime.gvm.internals/-abstract-v-m-engine/-runtime-image-info/-universal-image-info/universal.html","searchKeys":["universal","val universal: String? = null","elide.runtime.gvm.internals.AbstractVMEngine.RuntimeImageInfo.UniversalImageInfo.universal"]},{"name":"val value: T?","description":"elide.runtime.intrinsics.js.JsIterator.JsIteratorResult.value","location":"packages/graalvm/elide.runtime.intrinsics.js/-js-iterator/-js-iterator-result/value.html","searchKeys":["value","val value: T?","elide.runtime.intrinsics.js.JsIterator.JsIteratorResult.value"]},{"name":"val vfs: List<AbstractVMEngine.RuntimeVFS>","description":"elide.runtime.gvm.internals.AbstractVMEngine.RuntimeInfo.vfs","location":"packages/graalvm/elide.runtime.gvm.internals/-abstract-v-m-engine/-runtime-info/vfs.html","searchKeys":["vfs","val vfs: List<AbstractVMEngine.RuntimeVFS>","elide.runtime.gvm.internals.AbstractVMEngine.RuntimeInfo.vfs"]},{"name":"val windows: AbstractVMEngine.RuntimeNativeResources? = null","description":"elide.runtime.gvm.internals.AbstractVMEngine.RuntimeImageInfo.NativeImageInfo.windows","location":"packages/graalvm/elide.runtime.gvm.internals/-abstract-v-m-engine/-runtime-image-info/-native-image-info/windows.html","searchKeys":["windows","val windows: AbstractVMEngine.RuntimeNativeResources? = null","elide.runtime.gvm.internals.AbstractVMEngine.RuntimeImageInfo.NativeImageInfo.windows"]},{"name":"val workingDirectory: String","description":"elide.runtime.gvm.internals.vfs.EffectiveGuestVFSConfig.workingDirectory","location":"packages/graalvm/elide.runtime.gvm.internals.vfs/-effective-guest-v-f-s-config/working-directory.html","searchKeys":["workingDirectory","val workingDirectory: String","elide.runtime.gvm.internals.vfs.EffectiveGuestVFSConfig.workingDirectory"]},{"name":"value class Builder","description":"elide.runtime.gvm.internals.intrinsics.js.JsProxy.MutableObjectProxy.Builder","location":"packages/graalvm/elide.runtime.gvm.internals.intrinsics.js/-js-proxy/-mutable-object-proxy/-builder/index.html","searchKeys":["Builder","value class Builder","elide.runtime.gvm.internals.intrinsics.js.JsProxy.MutableObjectProxy.Builder"]},{"name":"value class Key<T>(val id: String)","description":"elide.runtime.core.EnginePlugin.Key","location":"packages/graalvm/elide.runtime.core/-engine-plugin/-key/index.html","searchKeys":["Key","value class Key<T>(val id: String)","elide.runtime.core.EnginePlugin.Key"]},{"name":"value class MutableObjectProxy : ProxyObject","description":"elide.runtime.gvm.internals.intrinsics.js.JsProxy.MutableObjectProxy","location":"packages/graalvm/elide.runtime.gvm.internals.intrinsics.js/-js-proxy/-mutable-object-proxy/index.html","searchKeys":["MutableObjectProxy","value class MutableObjectProxy : ProxyObject","elide.runtime.gvm.internals.intrinsics.js.JsProxy.MutableObjectProxy"]},{"name":"value class PolyglotContextElement<T>(val key: String)","description":"elide.runtime.core.PolyglotContextElement","location":"packages/graalvm/elide.runtime.core/-polyglot-context-element/index.html","searchKeys":["PolyglotContextElement","value class PolyglotContextElement<T>(val key: String)","elide.runtime.core.PolyglotContextElement"]},{"name":"value class ScriptSource","description":"elide.runtime.gvm.ExecutableScript.ScriptSource","location":"packages/graalvm/elide.runtime.gvm/-executable-script/-script-source/index.html","searchKeys":["ScriptSource","value class ScriptSource","elide.runtime.gvm.ExecutableScript.ScriptSource"]},{"name":"value class ScriptType","description":"elide.runtime.gvm.ExecutableScript.ScriptType","location":"packages/graalvm/elide.runtime.gvm/-executable-script/-script-type/index.html","searchKeys":["ScriptType","value class ScriptType","elide.runtime.gvm.ExecutableScript.ScriptType"]},{"name":"value class SourceMap(target: String)","description":"elide.runtime.gvm.ExecutableScript.SourceMap","location":"packages/graalvm/elide.runtime.gvm/-executable-script/-source-map/index.html","searchKeys":["SourceMap","value class SourceMap(target: String)","elide.runtime.gvm.ExecutableScript.SourceMap"]},{"name":"value class UUIDValue : UUID","description":"elide.runtime.gvm.internals.intrinsics.js.typed.UUIDValue","location":"packages/graalvm/elide.runtime.gvm.internals.intrinsics.js.typed/-u-u-i-d-value/index.html","searchKeys":["UUIDValue","value class UUIDValue : UUID","elide.runtime.gvm.internals.intrinsics.js.typed.UUIDValue"]},{"name":"var charset: Charset","description":"elide.runtime.plugins.js.JavaScriptConfig.charset","location":"packages/graalvm/elide.runtime.plugins.js/-java-script-config/charset.html","searchKeys":["charset","var charset: Charset","elide.runtime.plugins.js.JavaScriptConfig.charset"]},{"name":"var defaultLocale: Locale","description":"elide.runtime.plugins.js.JavaScriptConfig.defaultLocale","location":"packages/graalvm/elide.runtime.plugins.js/-java-script-config/default-locale.html","searchKeys":["defaultLocale","var defaultLocale: Locale","elide.runtime.plugins.js.JavaScriptConfig.defaultLocale"]},{"name":"var enabled: Boolean","description":"elide.runtime.plugins.debug.DebugConfig.DebugAdapterConfig.enabled","location":"packages/graalvm/elide.runtime.plugins.debug/-debug-config/-debug-adapter-config/enabled.html","searchKeys":["enabled","var enabled: Boolean","elide.runtime.plugins.debug.DebugConfig.DebugAdapterConfig.enabled"]},{"name":"var enabled: Boolean","description":"elide.runtime.plugins.debug.DebugConfig.InspectorConfig.enabled","location":"packages/graalvm/elide.runtime.plugins.debug/-debug-config/-inspector-config/enabled.html","searchKeys":["enabled","var enabled: Boolean","elide.runtime.plugins.debug.DebugConfig.InspectorConfig.enabled"]},{"name":"var enabled: Boolean","description":"elide.runtime.plugins.env.EnvConfig.AppEnvConfig.enabled","location":"packages/graalvm/elide.runtime.plugins.env/-env-config/-app-env-config/enabled.html","searchKeys":["enabled","var enabled: Boolean","elide.runtime.plugins.env.EnvConfig.AppEnvConfig.enabled"]},{"name":"var enabled: Boolean","description":"elide.runtime.plugins.js.JavaScriptConfig.NpmConfig.enabled","location":"packages/graalvm/elide.runtime.plugins.js/-java-script-config/-npm-config/enabled.html","searchKeys":["enabled","var enabled: Boolean","elide.runtime.plugins.js.JavaScriptConfig.NpmConfig.enabled"]},{"name":"var esm: Boolean","description":"elide.runtime.plugins.js.JavaScriptConfig.esm","location":"packages/graalvm/elide.runtime.plugins.js/-java-script-config/esm.html","searchKeys":["esm","var esm: Boolean","elide.runtime.plugins.js.JavaScriptConfig.esm"]},{"name":"var host: String","description":"elide.runtime.plugins.debug.DebugConfig.DebugAdapterConfig.host","location":"packages/graalvm/elide.runtime.plugins.debug/-debug-config/-debug-adapter-config/host.html","searchKeys":["host","var host: String","elide.runtime.plugins.debug.DebugConfig.DebugAdapterConfig.host"]},{"name":"var host: String","description":"elide.runtime.plugins.debug.DebugConfig.InspectorConfig.host","location":"packages/graalvm/elide.runtime.plugins.debug/-debug-config/-inspector-config/host.html","searchKeys":["host","var host: String","elide.runtime.plugins.debug.DebugConfig.InspectorConfig.host"]},{"name":"var hostAccess: PolyglotEngineConfiguration.HostAccess","description":"elide.runtime.core.PolyglotEngineConfiguration.hostAccess","location":"packages/graalvm/elide.runtime.core/-polyglot-engine-configuration/host-access.html","searchKeys":["hostAccess","var hostAccess: PolyglotEngineConfiguration.HostAccess","elide.runtime.core.PolyglotEngineConfiguration.hostAccess"]},{"name":"var interactive: Boolean","description":"elide.runtime.plugins.js.JavaScriptConfig.interactive","location":"packages/graalvm/elide.runtime.plugins.js/-java-script-config/interactive.html","searchKeys":["interactive","var interactive: Boolean","elide.runtime.plugins.js.JavaScriptConfig.interactive"]},{"name":"var internal: Boolean","description":"elide.runtime.plugins.debug.DebugConfig.InspectorConfig.internal","location":"packages/graalvm/elide.runtime.plugins.debug/-debug-config/-inspector-config/internal.html","searchKeys":["internal","var internal: Boolean","elide.runtime.plugins.debug.DebugConfig.InspectorConfig.internal"]},{"name":"var language: JavaScriptVersion","description":"elide.runtime.plugins.js.JavaScriptConfig.language","location":"packages/graalvm/elide.runtime.plugins.js/-java-script-config/language.html","searchKeys":["language","var language: JavaScriptVersion","elide.runtime.plugins.js.JavaScriptConfig.language"]},{"name":"var locale: Locale","description":"elide.runtime.plugins.js.JavaScriptConfig.locale","location":"packages/graalvm/elide.runtime.plugins.js/-java-script-config/locale.html","searchKeys":["locale","var locale: Locale","elide.runtime.plugins.js.JavaScriptConfig.locale"]},{"name":"var modulesPath: String","description":"elide.runtime.plugins.js.JavaScriptConfig.NpmConfig.modulesPath","location":"packages/graalvm/elide.runtime.plugins.js/-java-script-config/-npm-config/modules-path.html","searchKeys":["modulesPath","var modulesPath: String","elide.runtime.plugins.js.JavaScriptConfig.NpmConfig.modulesPath"]},{"name":"var path: String?","description":"elide.runtime.plugins.debug.DebugConfig.InspectorConfig.path","location":"packages/graalvm/elide.runtime.plugins.debug/-debug-config/-inspector-config/path.html","searchKeys":["path","var path: String?","elide.runtime.plugins.debug.DebugConfig.InspectorConfig.path"]},{"name":"var port: Int","description":"elide.runtime.plugins.debug.DebugConfig.DebugAdapterConfig.port","location":"packages/graalvm/elide.runtime.plugins.debug/-debug-config/-debug-adapter-config/port.html","searchKeys":["port","var port: Int","elide.runtime.plugins.debug.DebugConfig.DebugAdapterConfig.port"]},{"name":"var port: Int","description":"elide.runtime.plugins.debug.DebugConfig.InspectorConfig.port","location":"packages/graalvm/elide.runtime.plugins.debug/-debug-config/-inspector-config/port.html","searchKeys":["port","var port: Int","elide.runtime.plugins.debug.DebugConfig.InspectorConfig.port"]},{"name":"var sourceMaps: Boolean","description":"elide.runtime.plugins.js.JavaScriptConfig.sourceMaps","location":"packages/graalvm/elide.runtime.plugins.js/-java-script-config/source-maps.html","searchKeys":["sourceMaps","var sourceMaps: Boolean","elide.runtime.plugins.js.JavaScriptConfig.sourceMaps"]},{"name":"var sourcePaths: List<String>?","description":"elide.runtime.plugins.debug.DebugConfig.InspectorConfig.sourcePaths","location":"packages/graalvm/elide.runtime.plugins.debug/-debug-config/-inspector-config/source-paths.html","searchKeys":["sourcePaths","var sourcePaths: List<String>?","elide.runtime.plugins.debug.DebugConfig.InspectorConfig.sourcePaths"]},{"name":"var suspend: Boolean","description":"elide.runtime.plugins.debug.DebugConfig.DebugAdapterConfig.suspend","location":"packages/graalvm/elide.runtime.plugins.debug/-debug-config/-debug-adapter-config/suspend.html","searchKeys":["suspend","var suspend: Boolean","elide.runtime.plugins.debug.DebugConfig.DebugAdapterConfig.suspend"]},{"name":"var suspend: Boolean","description":"elide.runtime.plugins.debug.DebugConfig.InspectorConfig.suspend","location":"packages/graalvm/elide.runtime.plugins.debug/-debug-config/-inspector-config/suspend.html","searchKeys":["suspend","var suspend: Boolean","elide.runtime.plugins.debug.DebugConfig.InspectorConfig.suspend"]},{"name":"var timezone: ZoneId","description":"elide.runtime.plugins.js.JavaScriptConfig.timezone","location":"packages/graalvm/elide.runtime.plugins.js/-java-script-config/timezone.html","searchKeys":["timezone","var timezone: ZoneId","elide.runtime.plugins.js.JavaScriptConfig.timezone"]},{"name":"var typescript: Boolean","description":"elide.runtime.plugins.js.JavaScriptConfig.typescript","location":"packages/graalvm/elide.runtime.plugins.js/-java-script-config/typescript.html","searchKeys":["typescript","var typescript: Boolean","elide.runtime.plugins.js.JavaScriptConfig.typescript"]},{"name":"var v8: Boolean","description":"elide.runtime.plugins.js.JavaScriptConfig.v8","location":"packages/graalvm/elide.runtime.plugins.js/-java-script-config/v8.html","searchKeys":["v8","var v8: Boolean","elide.runtime.plugins.js.JavaScriptConfig.v8"]},{"name":"var waitAttached: Boolean","description":"elide.runtime.plugins.debug.DebugConfig.DebugAdapterConfig.waitAttached","location":"packages/graalvm/elide.runtime.plugins.debug/-debug-config/-debug-adapter-config/wait-attached.html","searchKeys":["waitAttached","var waitAttached: Boolean","elide.runtime.plugins.debug.DebugConfig.DebugAdapterConfig.waitAttached"]},{"name":"var waitAttached: Boolean","description":"elide.runtime.plugins.debug.DebugConfig.InspectorConfig.waitAttached","location":"packages/graalvm/elide.runtime.plugins.debug/-debug-config/-inspector-config/wait-attached.html","searchKeys":["waitAttached","var waitAttached: Boolean","elide.runtime.plugins.debug.DebugConfig.InspectorConfig.waitAttached"]},{"name":"var wasm: Boolean","description":"elide.runtime.plugins.js.JavaScriptConfig.wasm","location":"packages/graalvm/elide.runtime.plugins.js/-java-script-config/wasm.html","searchKeys":["wasm","var wasm: Boolean","elide.runtime.plugins.js.JavaScriptConfig.wasm"]},{"name":"var writable: Boolean","description":"elide.runtime.plugins.vfs.VfsConfig.writable","location":"packages/graalvm/elide.runtime.plugins.vfs/-vfs-config/writable.html","searchKeys":["writable","var writable: Boolean","elide.runtime.plugins.vfs.VfsConfig.writable"]},{"name":"abstract class ElideServerTest : Test","description":"elide.server.ElideServerTest","location":"packages/test/elide.server/-elide-server-test/index.html","searchKeys":["ElideServerTest","abstract class ElideServerTest : Test","elide.server.ElideServerTest"]},{"name":"class TestAppExecutor : AppExecutor","description":"elide.server.runtime.TestAppExecutor","location":"packages/test/elide.server.runtime/-test-app-executor/index.html","searchKeys":["TestAppExecutor","class TestAppExecutor : AppExecutor","elide.server.runtime.TestAppExecutor"]},{"name":"constructor()","description":"elide.server.ElideServerTest.ElideServerTest","location":"packages/test/elide.server/-elide-server-test/-elide-server-test.html","searchKeys":["ElideServerTest","constructor()","elide.server.ElideServerTest.ElideServerTest"]},{"name":"constructor()","description":"elide.server.runtime.TestAppExecutor.TestAppExecutor","location":"packages/test/elide.server.runtime/-test-app-executor/-test-app-executor.html","searchKeys":["TestAppExecutor","constructor()","elide.server.runtime.TestAppExecutor.TestAppExecutor"]},{"name":"constructor()","description":"elide.testing.Test.Test","location":"packages/test/elide.testing/-test/-test.html","searchKeys":["Test","constructor()","elide.testing.Test.Test"]},{"name":"expect abstract class Test","description":"elide.testing.Test","location":"packages/test/elide.testing/-test/index.html","searchKeys":["Test","expect abstract class Test","elide.testing.Test"]},{"name":"expect annotation class Test","description":"elide.testing.annotations.Test","location":"packages/test/elide.testing.annotations/-test/index.html","searchKeys":["Test","expect annotation class Test","elide.testing.annotations.Test"]},{"name":"expect annotation class TestCase","description":"elide.testing.annotations.TestCase","location":"packages/test/elide.testing.annotations/-test-case/index.html","searchKeys":["TestCase","expect annotation class TestCase","elide.testing.annotations.TestCase"]},{"name":"fun <P : Any, R : Any> exchange(request: MutableHttpRequest<P>, status: Int? = 200, responseType: Class<R>, block: HttpResponse<R>.() -> Unit? = null): HttpResponse<R>","description":"elide.server.ElideServerTest.exchange","location":"packages/test/elide.server/-elide-server-test/exchange.html","searchKeys":["exchange","fun <P : Any, R : Any> exchange(request: MutableHttpRequest<P>, status: Int? = 200, responseType: Class<R>, block: HttpResponse<R>.() -> Unit? = null): HttpResponse<R>","elide.server.ElideServerTest.exchange"]},{"name":"fun exchange(request: MutableHttpRequest<Any>, status: Int? = 200, block: HttpResponse<Any>.() -> Unit? = null): HttpResponse<Any>","description":"elide.server.ElideServerTest.exchange","location":"packages/test/elide.server/-elide-server-test/exchange.html","searchKeys":["exchange","fun exchange(request: MutableHttpRequest<Any>, status: Int? = 200, block: HttpResponse<Any>.() -> Unit? = null): HttpResponse<Any>","elide.server.ElideServerTest.exchange"]},{"name":"fun exchangeHTML(request: MutableHttpRequest<Any>, accept: String? = \"text/html,*/*\", status: Int? = 200, block: HttpResponse<Any>.(Document) -> Unit? = null): HttpResponse<Any>","description":"elide.server.ElideServerTest.exchangeHTML","location":"packages/test/elide.server/-elide-server-test/exchange-h-t-m-l.html","searchKeys":["exchangeHTML","fun exchangeHTML(request: MutableHttpRequest<Any>, accept: String? = \"text/html,*/*\", status: Int? = 200, block: HttpResponse<Any>.(Document) -> Unit? = null): HttpResponse<Any>","elide.server.ElideServerTest.exchangeHTML"]},{"name":"fun loadBinary(name: String): ByteArray","description":"elide.server.TestUtil.loadBinary","location":"packages/test/elide.server/-test-util/load-binary.html","searchKeys":["loadBinary","fun loadBinary(name: String): ByteArray","elide.server.TestUtil.loadBinary"]},{"name":"fun loadFixture(name: String): String","description":"elide.server.TestUtil.loadFixture","location":"packages/test/elide.server/-test-util/load-fixture.html","searchKeys":["loadFixture","fun loadFixture(name: String): String","elide.server.TestUtil.loadFixture"]},{"name":"lateinit var app: EmbeddedServer","description":"elide.server.ElideServerTest.app","location":"packages/test/elide.server/-elide-server-test/app.html","searchKeys":["app","lateinit var app: EmbeddedServer","elide.server.ElideServerTest.app"]},{"name":"lateinit var beanContext: BeanContext","description":"elide.server.ElideServerTest.beanContext","location":"packages/test/elide.server/-elide-server-test/bean-context.html","searchKeys":["beanContext","lateinit var beanContext: BeanContext","elide.server.ElideServerTest.beanContext"]},{"name":"lateinit var client: HttpClient","description":"elide.server.ElideServerTest.client","location":"packages/test/elide.server/-elide-server-test/client.html","searchKeys":["client","lateinit var client: HttpClient","elide.server.ElideServerTest.client"]},{"name":"lateinit var context: ApplicationContext","description":"elide.server.ElideServerTest.context","location":"packages/test/elide.server/-elide-server-test/context.html","searchKeys":["context","lateinit var context: ApplicationContext","elide.server.ElideServerTest.context"]},{"name":"object ElideTesting","description":"elide.testing.ElideTesting","location":"packages/test/elide.testing/-elide-testing/index.html","searchKeys":["ElideTesting","object ElideTesting","elide.testing.ElideTesting"]},{"name":"object TestUtil","description":"elide.server.TestUtil","location":"packages/test/elide.server/-test-util/index.html","searchKeys":["TestUtil","object TestUtil","elide.server.TestUtil"]},{"name":"open override fun service(): ListeningScheduledExecutorService","description":"elide.server.runtime.TestAppExecutor.service","location":"packages/test/elide.server.runtime/-test-app-executor/service.html","searchKeys":["service","open override fun service(): ListeningScheduledExecutorService","elide.server.runtime.TestAppExecutor.service"]},{"name":"ABORTED","description":"grpcweb.StatusCode.ABORTED","location":"packages/rpc/grpcweb/-status-code/-a-b-o-r-t-e-d/index.html","searchKeys":["ABORTED","ABORTED","grpcweb.StatusCode.ABORTED"]},{"name":"ALREADY_EXISTS","description":"grpcweb.StatusCode.ALREADY_EXISTS","location":"packages/rpc/grpcweb/-status-code/-a-l-r-e-a-d-y_-e-x-i-s-t-s/index.html","searchKeys":["ALREADY_EXISTS","ALREADY_EXISTS","grpcweb.StatusCode.ALREADY_EXISTS"]},{"name":"BINARY","description":"elide.rpc.server.web.GrpcWebContentType.BINARY","location":"packages/rpc/elide.rpc.server.web/-grpc-web-content-type/-b-i-n-a-r-y/index.html","searchKeys":["BINARY","BINARY","elide.rpc.server.web.GrpcWebContentType.BINARY"]},{"name":"CANCELLED","description":"grpcweb.StatusCode.CANCELLED","location":"packages/rpc/grpcweb/-status-code/-c-a-n-c-e-l-l-e-d/index.html","searchKeys":["CANCELLED","CANCELLED","grpcweb.StatusCode.CANCELLED"]},{"name":"DATA","description":"elide.rpc.server.web.RpcSymbol.DATA","location":"packages/rpc/elide.rpc.server.web/-rpc-symbol/-d-a-t-a/index.html","searchKeys":["DATA","DATA","elide.rpc.server.web.RpcSymbol.DATA"]},{"name":"DATA_LOSS","description":"grpcweb.StatusCode.DATA_LOSS","location":"packages/rpc/grpcweb/-status-code/-d-a-t-a_-l-o-s-s/index.html","searchKeys":["DATA_LOSS","DATA_LOSS","grpcweb.StatusCode.DATA_LOSS"]},{"name":"DEADLINE_EXCEEDED","description":"grpcweb.StatusCode.DEADLINE_EXCEEDED","location":"packages/rpc/grpcweb/-status-code/-d-e-a-d-l-i-n-e_-e-x-c-e-e-d-e-d/index.html","searchKeys":["DEADLINE_EXCEEDED","DEADLINE_EXCEEDED","grpcweb.StatusCode.DEADLINE_EXCEEDED"]},{"name":"FAILED_PRECONDITION","description":"grpcweb.StatusCode.FAILED_PRECONDITION","location":"packages/rpc/grpcweb/-status-code/-f-a-i-l-e-d_-p-r-e-c-o-n-d-i-t-i-o-n/index.html","searchKeys":["FAILED_PRECONDITION","FAILED_PRECONDITION","grpcweb.StatusCode.FAILED_PRECONDITION"]},{"name":"INTERNAL","description":"grpcweb.StatusCode.INTERNAL","location":"packages/rpc/grpcweb/-status-code/-i-n-t-e-r-n-a-l/index.html","searchKeys":["INTERNAL","INTERNAL","grpcweb.StatusCode.INTERNAL"]},{"name":"INVALID_ARGUMENT","description":"grpcweb.StatusCode.INVALID_ARGUMENT","location":"packages/rpc/grpcweb/-status-code/-i-n-v-a-l-i-d_-a-r-g-u-m-e-n-t/index.html","searchKeys":["INVALID_ARGUMENT","INVALID_ARGUMENT","grpcweb.StatusCode.INVALID_ARGUMENT"]},{"name":"NOT_FOUND","description":"grpcweb.StatusCode.NOT_FOUND","location":"packages/rpc/grpcweb/-status-code/-n-o-t_-f-o-u-n-d/index.html","searchKeys":["NOT_FOUND","NOT_FOUND","grpcweb.StatusCode.NOT_FOUND"]},{"name":"OK","description":"grpcweb.StatusCode.OK","location":"packages/rpc/grpcweb/-status-code/-o-k/index.html","searchKeys":["OK","OK","grpcweb.StatusCode.OK"]},{"name":"OUT_OF_RANGE","description":"grpcweb.StatusCode.OUT_OF_RANGE","location":"packages/rpc/grpcweb/-status-code/-o-u-t_-o-f_-r-a-n-g-e/index.html","searchKeys":["OUT_OF_RANGE","OUT_OF_RANGE","grpcweb.StatusCode.OUT_OF_RANGE"]},{"name":"PERMISSION_DENIED","description":"grpcweb.StatusCode.PERMISSION_DENIED","location":"packages/rpc/grpcweb/-status-code/-p-e-r-m-i-s-s-i-o-n_-d-e-n-i-e-d/index.html","searchKeys":["PERMISSION_DENIED","PERMISSION_DENIED","grpcweb.StatusCode.PERMISSION_DENIED"]},{"name":"RESOURCE_EXHAUSTED","description":"grpcweb.StatusCode.RESOURCE_EXHAUSTED","location":"packages/rpc/grpcweb/-status-code/-r-e-s-o-u-r-c-e_-e-x-h-a-u-s-t-e-d/index.html","searchKeys":["RESOURCE_EXHAUSTED","RESOURCE_EXHAUSTED","grpcweb.StatusCode.RESOURCE_EXHAUSTED"]},{"name":"TEXT","description":"elide.rpc.server.web.GrpcWebContentType.TEXT","location":"packages/rpc/elide.rpc.server.web/-grpc-web-content-type/-t-e-x-t/index.html","searchKeys":["TEXT","TEXT","elide.rpc.server.web.GrpcWebContentType.TEXT"]},{"name":"TRAILER","description":"elide.rpc.server.web.RpcSymbol.TRAILER","location":"packages/rpc/elide.rpc.server.web/-rpc-symbol/-t-r-a-i-l-e-r/index.html","searchKeys":["TRAILER","TRAILER","elide.rpc.server.web.RpcSymbol.TRAILER"]},{"name":"UNAUTHENTICATED","description":"grpcweb.StatusCode.UNAUTHENTICATED","location":"packages/rpc/grpcweb/-status-code/-u-n-a-u-t-h-e-n-t-i-c-a-t-e-d/index.html","searchKeys":["UNAUTHENTICATED","UNAUTHENTICATED","grpcweb.StatusCode.UNAUTHENTICATED"]},{"name":"UNAVAILABLE","description":"grpcweb.StatusCode.UNAVAILABLE","location":"packages/rpc/grpcweb/-status-code/-u-n-a-v-a-i-l-a-b-l-e/index.html","searchKeys":["UNAVAILABLE","UNAVAILABLE","grpcweb.StatusCode.UNAVAILABLE"]},{"name":"UNIMPLEMENTED","description":"grpcweb.StatusCode.UNIMPLEMENTED","location":"packages/rpc/grpcweb/-status-code/-u-n-i-m-p-l-e-m-e-n-t-e-d/index.html","searchKeys":["UNIMPLEMENTED","UNIMPLEMENTED","grpcweb.StatusCode.UNIMPLEMENTED"]},{"name":"UNKNOWN","description":"grpcweb.StatusCode.UNKNOWN","location":"packages/rpc/grpcweb/-status-code/-u-n-k-n-o-w-n/index.html","searchKeys":["UNKNOWN","UNKNOWN","grpcweb.StatusCode.UNKNOWN"]},{"name":"abstract fun channel(): ManagedChannel","description":"elide.rpc.server.web.GrpcWebTransport.channel","location":"packages/rpc/elide.rpc.server.web/-grpc-web-transport/channel.html","searchKeys":["channel","abstract fun channel(): ManagedChannel","elide.rpc.server.web.GrpcWebTransport.channel"]},{"name":"abstract fun deserialize(method: Method, rawData: ByteArray): Message","description":"elide.rpc.server.web.MessageDeserializer.deserialize","location":"packages/rpc/elide.rpc.server.web/-message-deserializer/deserialize.html","searchKeys":["deserialize","abstract fun deserialize(method: Method, rawData: ByteArray): Message","elide.rpc.server.web.MessageDeserializer.deserialize"]},{"name":"abstract fun fill(response: MutableHttpResponse<RawRpcPayload>)","description":"elide.rpc.server.web.GrpcWebCallResponse.fill","location":"packages/rpc/elide.rpc.server.web/-grpc-web-call-response/fill.html","searchKeys":["fill","abstract fun fill(response: MutableHttpResponse<RawRpcPayload>)","elide.rpc.server.web.GrpcWebCallResponse.fill"]},{"name":"abstract fun intercept(request: Request<REQ, RESP>, invoker: (request: Request<REQ, RESP>) -> ClientReadableStream<RESP>): ClientReadableStream<RESP>","description":"grpcweb.StreamInterceptor.intercept","location":"packages/rpc/grpcweb/-stream-interceptor/intercept.html","searchKeys":["intercept","abstract fun intercept(request: Request<REQ, RESP>, invoker: (request: Request<REQ, RESP>) -> ClientReadableStream<RESP>): ClientReadableStream<RESP>","grpcweb.StreamInterceptor.intercept"]},{"name":"abstract fun intercept(request: Request<REQ, RESP>, invoker: (request: Request<REQ, RESP>) -> Promise<UnaryResponse<REQ, RESP>>): Promise<UnaryResponse<REQ, RESP>>","description":"grpcweb.UnaryInterceptor.intercept","location":"packages/rpc/grpcweb/-unary-interceptor/intercept.html","searchKeys":["intercept","abstract fun intercept(request: Request<REQ, RESP>, invoker: (request: Request<REQ, RESP>) -> Promise<UnaryResponse<REQ, RESP>>): Promise<UnaryResponse<REQ, RESP>>","grpcweb.UnaryInterceptor.intercept"]},{"name":"abstract operator fun get(s: String): String?","description":"grpcweb.Metadata.get","location":"packages/rpc/grpcweb/-metadata/get.html","searchKeys":["get","abstract operator fun get(s: String): String?","grpcweb.Metadata.get"]},{"name":"abstract operator fun set(s: String, value: String)","description":"grpcweb.Metadata.set","location":"packages/rpc/grpcweb/-metadata/set.html","searchKeys":["set","abstract operator fun set(s: String, value: String)","grpcweb.Metadata.set"]},{"name":"abstract var code: Number","description":"grpcweb.Status.code","location":"packages/rpc/grpcweb/-status/code.html","searchKeys":["code","abstract var code: Number","grpcweb.Status.code"]},{"name":"abstract var details: String","description":"grpcweb.Status.details","location":"packages/rpc/grpcweb/-status/details.html","searchKeys":["details","abstract var details: String","grpcweb.Status.details"]},{"name":"class GrpcWebController : StatusEnabledController","description":"elide.rpc.server.web.GrpcWebController","location":"packages/rpc/elide.rpc.server.web/-grpc-web-controller/index.html","searchKeys":["GrpcWebController","class GrpcWebController : StatusEnabledController","elide.rpc.server.web.GrpcWebController"]},{"name":"class ServiceHealthManager","description":"elide.rpc.server.ServiceHealthManager","location":"packages/rpc/elide.rpc.server/-service-health-manager/index.html","searchKeys":["ServiceHealthManager","class ServiceHealthManager","elide.rpc.server.ServiceHealthManager"]},{"name":"const val BINARY_HEADER_SUFFIX: String","description":"elide.rpc.server.web.GrpcWeb.BINARY_HEADER_SUFFIX","location":"packages/rpc/elide.rpc.server.web/-grpc-web/-b-i-n-a-r-y_-h-e-a-d-e-r_-s-u-f-f-i-x.html","searchKeys":["BINARY_HEADER_SUFFIX","const val BINARY_HEADER_SUFFIX: String","elide.rpc.server.web.GrpcWeb.BINARY_HEADER_SUFFIX"]},{"name":"const val DEFAULT_ENABLED: Boolean = false","description":"elide.rpc.server.web.GrpcWebConfig.Companion.DEFAULT_ENABLED","location":"packages/rpc/elide.rpc.server.web/-grpc-web-config/-companion/-d-e-f-a-u-l-t_-e-n-a-b-l-e-d.html","searchKeys":["DEFAULT_ENABLED","const val DEFAULT_ENABLED: Boolean = false","elide.rpc.server.web.GrpcWebConfig.Companion.DEFAULT_ENABLED"]},{"name":"const val DEFAULT_TIMEOUT_SECONDS: Long = 30","description":"elide.rpc.server.web.GrpcWebConfig.Companion.DEFAULT_TIMEOUT_SECONDS","location":"packages/rpc/elide.rpc.server.web/-grpc-web-config/-companion/-d-e-f-a-u-l-t_-t-i-m-e-o-u-t_-s-e-c-o-n-d-s.html","searchKeys":["DEFAULT_TIMEOUT_SECONDS","const val DEFAULT_TIMEOUT_SECONDS: Long = 30","elide.rpc.server.web.GrpcWebConfig.Companion.DEFAULT_TIMEOUT_SECONDS"]},{"name":"const val GRPC_HEADER_PREFIX: String","description":"elide.rpc.server.web.GrpcWeb.GRPC_HEADER_PREFIX","location":"packages/rpc/elide.rpc.server.web/-grpc-web/-g-r-p-c_-h-e-a-d-e-r_-p-r-e-f-i-x.html","searchKeys":["GRPC_HEADER_PREFIX","const val GRPC_HEADER_PREFIX: String","elide.rpc.server.web.GrpcWeb.GRPC_HEADER_PREFIX"]},{"name":"const val defaultEndpoint: String","description":"elide.rpc.server.web.GrpcWebConfig.Companion.defaultEndpoint","location":"packages/rpc/elide.rpc.server.web/-grpc-web-config/-companion/default-endpoint.html","searchKeys":["defaultEndpoint","const val defaultEndpoint: String","elide.rpc.server.web.GrpcWebConfig.Companion.defaultEndpoint"]},{"name":"const val errorMessage: String","description":"elide.rpc.server.web.GrpcWeb.Headers.errorMessage","location":"packages/rpc/elide.rpc.server.web/-grpc-web/-headers/error-message.html","searchKeys":["errorMessage","const val errorMessage: String","elide.rpc.server.web.GrpcWeb.Headers.errorMessage"]},{"name":"const val sentinel: String","description":"elide.rpc.server.web.GrpcWeb.Headers.sentinel","location":"packages/rpc/elide.rpc.server.web/-grpc-web/-headers/sentinel.html","searchKeys":["sentinel","const val sentinel: String","elide.rpc.server.web.GrpcWeb.Headers.sentinel"]},{"name":"const val status: String","description":"elide.rpc.server.web.GrpcWeb.Headers.status","location":"packages/rpc/elide.rpc.server.web/-grpc-web/-headers/status.html","searchKeys":["status","const val status: String","elide.rpc.server.web.GrpcWeb.Headers.status"]},{"name":"constructor()","description":"elide.rpc.server.ServiceHealthManager.ServiceHealthManager","location":"packages/rpc/elide.rpc.server/-service-health-manager/-service-health-manager.html","searchKeys":["ServiceHealthManager","constructor()","elide.rpc.server.ServiceHealthManager.ServiceHealthManager"]},{"name":"constructor()","description":"elide.rpc.server.web.GrpcWebController.GrpcWebController","location":"packages/rpc/elide.rpc.server.web/-grpc-web-controller/-grpc-web-controller.html","searchKeys":["GrpcWebController","constructor()","elide.rpc.server.web.GrpcWebController.GrpcWebController"]},{"name":"constructor()","description":"grpcweb.AbstractClientBase.AbstractClientBase","location":"packages/rpc/grpcweb/-abstract-client-base/-abstract-client-base.html","searchKeys":["AbstractClientBase","constructor()","grpcweb.AbstractClientBase.AbstractClientBase"]},{"name":"constructor()","description":"grpcweb.ClientReadableStream.ClientReadableStream","location":"packages/rpc/grpcweb/-client-readable-stream/-client-readable-stream.html","searchKeys":["ClientReadableStream","constructor()","grpcweb.ClientReadableStream.ClientReadableStream"]},{"name":"constructor()","description":"grpcweb.Request.Request","location":"packages/rpc/grpcweb/-request/-request.html","searchKeys":["Request","constructor()","grpcweb.Request.Request"]},{"name":"constructor()","description":"grpcweb.UnaryResponse.UnaryResponse","location":"packages/rpc/grpcweb/-unary-response/-unary-response.html","searchKeys":["UnaryResponse","constructor()","grpcweb.UnaryResponse.UnaryResponse"]},{"name":"constructor(contentType: GrpcWebContentType, payload: ByteArray, headers: Metadata, trailers: Metadata)","description":"elide.rpc.server.web.GrpcWebCallResponse.UnaryResponse.UnaryResponse","location":"packages/rpc/elide.rpc.server.web/-grpc-web-call-response/-unary-response/-unary-response.html","searchKeys":["UnaryResponse","constructor(contentType: GrpcWebContentType, payload: ByteArray, headers: Metadata, trailers: Metadata)","elide.rpc.server.web.GrpcWebCallResponse.UnaryResponse.UnaryResponse"]},{"name":"constructor(contentType: GrpcWebContentType, status: Status, cause: Throwable?, headers: Metadata, trailers: Metadata)","description":"elide.rpc.server.web.GrpcWebCallResponse.Error.Error","location":"packages/rpc/elide.rpc.server.web/-grpc-web-call-response/-error/-error.html","searchKeys":["Error","constructor(contentType: GrpcWebContentType, status: Status, cause: Throwable?, headers: Metadata, trailers: Metadata)","elide.rpc.server.web.GrpcWebCallResponse.Error.Error"]},{"name":"constructor(name: String, methodType: String, requestType: Any, responseType: Any, requestSerializeFn: Any, responseDeserializeFn: Any)","description":"grpcweb.MethodDescriptor.MethodDescriptor","location":"packages/rpc/grpcweb/-method-descriptor/-method-descriptor.html","searchKeys":["MethodDescriptor","constructor(name: String, methodType: String, requestType: Any, responseType: Any, requestSerializeFn: Any, responseDeserializeFn: Any)","grpcweb.MethodDescriptor.MethodDescriptor"]},{"name":"constructor(options: GrpcWebClientBaseOptions = definedExternally)","description":"grpcweb.GrpcWebClientBase.GrpcWebClientBase","location":"packages/rpc/grpcweb/-grpc-web-client-base/-grpc-web-client-base.html","searchKeys":["GrpcWebClientBase","constructor(options: GrpcWebClientBaseOptions = definedExternally)","grpcweb.GrpcWebClientBase.GrpcWebClientBase"]},{"name":"constructor(options: Json)","description":"grpcweb.CallOptions.CallOptions","location":"packages/rpc/grpcweb/-call-options/-call-options.html","searchKeys":["CallOptions","constructor(options: Json)","grpcweb.CallOptions.CallOptions"]},{"name":"data class Error(val contentType: GrpcWebContentType, val status: Status, val cause: Throwable?, val headers: Metadata, val trailers: Metadata) : GrpcWebCallResponse","description":"elide.rpc.server.web.GrpcWebCallResponse.Error","location":"packages/rpc/elide.rpc.server.web/-grpc-web-call-response/-error/index.html","searchKeys":["Error","data class Error(val contentType: GrpcWebContentType, val status: Status, val cause: Throwable?, val headers: Metadata, val trailers: Metadata) : GrpcWebCallResponse","elide.rpc.server.web.GrpcWebCallResponse.Error"]},{"name":"data class UnaryResponse(val contentType: GrpcWebContentType, val payload: ByteArray, val headers: Metadata, val trailers: Metadata) : GrpcWebCallResponse","description":"elide.rpc.server.web.GrpcWebCallResponse.UnaryResponse","location":"packages/rpc/elide.rpc.server.web/-grpc-web-call-response/-unary-response/index.html","searchKeys":["UnaryResponse","data class UnaryResponse(val contentType: GrpcWebContentType, val payload: ByteArray, val headers: Metadata, val trailers: Metadata) : GrpcWebCallResponse","elide.rpc.server.web.GrpcWebCallResponse.UnaryResponse"]},{"name":"enum GrpcWebContentType : Enum<GrpcWebContentType> ","description":"elide.rpc.server.web.GrpcWebContentType","location":"packages/rpc/elide.rpc.server.web/-grpc-web-content-type/index.html","searchKeys":["GrpcWebContentType","enum GrpcWebContentType : Enum<GrpcWebContentType> ","elide.rpc.server.web.GrpcWebContentType"]},{"name":"enum RpcSymbol : Enum<RpcSymbol> ","description":"elide.rpc.server.web.RpcSymbol","location":"packages/rpc/elide.rpc.server.web/-rpc-symbol/index.html","searchKeys":["RpcSymbol","enum RpcSymbol : Enum<RpcSymbol> ","elide.rpc.server.web.RpcSymbol"]},{"name":"external enum StatusCode : Enum<StatusCode> ","description":"grpcweb.StatusCode","location":"packages/rpc/grpcweb/-status-code/index.html","searchKeys":["StatusCode","external enum StatusCode : Enum<StatusCode> ","grpcweb.StatusCode"]},{"name":"external interface GrpcWebClientBaseOptions","description":"grpcweb.GrpcWebClientBaseOptions","location":"packages/rpc/grpcweb/-grpc-web-client-base-options/index.html","searchKeys":["GrpcWebClientBaseOptions","external interface GrpcWebClientBaseOptions","grpcweb.GrpcWebClientBaseOptions"]},{"name":"external interface Metadata","description":"grpcweb.Metadata","location":"packages/rpc/grpcweb/-metadata/index.html","searchKeys":["Metadata","external interface Metadata","grpcweb.Metadata"]},{"name":"external interface Status","description":"grpcweb.Status","location":"packages/rpc/grpcweb/-status/index.html","searchKeys":["Status","external interface Status","grpcweb.Status"]},{"name":"external interface StreamInterceptor<REQ, RESP>","description":"grpcweb.StreamInterceptor","location":"packages/rpc/grpcweb/-stream-interceptor/index.html","searchKeys":["StreamInterceptor","external interface StreamInterceptor<REQ, RESP>","grpcweb.StreamInterceptor"]},{"name":"external interface UnaryInterceptor<REQ, RESP>","description":"grpcweb.UnaryInterceptor","location":"packages/rpc/grpcweb/-unary-interceptor/index.html","searchKeys":["UnaryInterceptor","external interface UnaryInterceptor<REQ, RESP>","grpcweb.UnaryInterceptor"]},{"name":"external var SERVER_STREAMING: String","description":"grpcweb.SERVER_STREAMING","location":"packages/rpc/grpcweb/-s-e-r-v-e-r_-s-t-r-e-a-m-i-n-g.html","searchKeys":["SERVER_STREAMING","external var SERVER_STREAMING: String","grpcweb.SERVER_STREAMING"]},{"name":"external var UNARY: String","description":"grpcweb.UNARY","location":"packages/rpc/grpcweb/-u-n-a-r-y.html","searchKeys":["UNARY","external var UNARY: String","grpcweb.UNARY"]},{"name":"fun contentType(proto: Boolean = true): String","description":"elide.rpc.server.web.GrpcWebContentType.contentType","location":"packages/rpc/elide.rpc.server.web/-grpc-web-content-type/content-type.html","searchKeys":["contentType","fun contentType(proto: Boolean = true): String","elide.rpc.server.web.GrpcWebContentType.contentType"]},{"name":"fun currentStatus(descriptor: ServiceDescriptor): HealthCheckResponse.ServingStatus","description":"elide.rpc.server.ServiceHealthManager.currentStatus","location":"packages/rpc/elide.rpc.server/-service-health-manager/current-status.html","searchKeys":["currentStatus","fun currentStatus(descriptor: ServiceDescriptor): HealthCheckResponse.ServingStatus","elide.rpc.server.ServiceHealthManager.currentStatus"]},{"name":"fun currentStatus(name: String): HealthCheckResponse.ServingStatus","description":"elide.rpc.server.ServiceHealthManager.currentStatus","location":"packages/rpc/elide.rpc.server/-service-health-manager/current-status.html","searchKeys":["currentStatus","fun currentStatus(name: String): HealthCheckResponse.ServingStatus","elide.rpc.server.ServiceHealthManager.currentStatus"]},{"name":"fun fillHeadersFromMetadata(metadata: Metadata, target: MutableHeaders)","description":"elide.rpc.server.web.MetadataUtil.fillHeadersFromMetadata","location":"packages/rpc/elide.rpc.server.web/-metadata-util/fill-headers-from-metadata.html","searchKeys":["fillHeadersFromMetadata","fun fillHeadersFromMetadata(metadata: Metadata, target: MutableHeaders)","elide.rpc.server.web.MetadataUtil.fillHeadersFromMetadata"]},{"name":"fun mediaType(proto: Boolean = true): MediaType","description":"elide.rpc.server.web.GrpcWebContentType.mediaType","location":"packages/rpc/elide.rpc.server.web/-grpc-web-content-type/media-type.html","searchKeys":["mediaType","fun mediaType(proto: Boolean = true): MediaType","elide.rpc.server.web.GrpcWebContentType.mediaType"]},{"name":"fun metadataFromHeaders(headers: Headers): Metadata","description":"elide.rpc.server.web.MetadataUtil.metadataFromHeaders","location":"packages/rpc/elide.rpc.server.web/-metadata-util/metadata-from-headers.html","searchKeys":["metadataFromHeaders","fun metadataFromHeaders(headers: Headers): Metadata","elide.rpc.server.web.MetadataUtil.metadataFromHeaders"]},{"name":"fun notify(service: String, status: HealthCheckResponse.ServingStatus?)","description":"elide.rpc.server.ServiceHealthManager.notify","location":"packages/rpc/elide.rpc.server/-service-health-manager/notify.html","searchKeys":["notify","fun notify(service: String, status: HealthCheckResponse.ServingStatus?)","elide.rpc.server.ServiceHealthManager.notify"]},{"name":"fun notifyNotServing(service: ServiceDescriptor)","description":"elide.rpc.server.ServiceHealthManager.notifyNotServing","location":"packages/rpc/elide.rpc.server/-service-health-manager/notify-not-serving.html","searchKeys":["notifyNotServing","fun notifyNotServing(service: ServiceDescriptor)","elide.rpc.server.ServiceHealthManager.notifyNotServing"]},{"name":"fun notifyPending(service: ServiceDescriptor)","description":"elide.rpc.server.ServiceHealthManager.notifyPending","location":"packages/rpc/elide.rpc.server/-service-health-manager/notify-pending.html","searchKeys":["notifyPending","fun notifyPending(service: ServiceDescriptor)","elide.rpc.server.ServiceHealthManager.notifyPending"]},{"name":"fun notifyServing(service: ServiceDescriptor)","description":"elide.rpc.server.ServiceHealthManager.notifyServing","location":"packages/rpc/elide.rpc.server/-service-health-manager/notify-serving.html","searchKeys":["notifyServing","fun notifyServing(service: ServiceDescriptor)","elide.rpc.server.ServiceHealthManager.notifyServing"]},{"name":"fun notifyUnknown(service: ServiceDescriptor)","description":"elide.rpc.server.ServiceHealthManager.notifyUnknown","location":"packages/rpc/elide.rpc.server/-service-health-manager/notify-unknown.html","searchKeys":["notifyUnknown","fun notifyUnknown(service: ServiceDescriptor)","elide.rpc.server.ServiceHealthManager.notifyUnknown"]},{"name":"fun packTrailer(stream: ByteArrayOutputStream, name: String, value: ByteArray)","description":"elide.rpc.server.web.MetadataUtil.packTrailer","location":"packages/rpc/elide.rpc.server.web/-metadata-util/pack-trailer.html","searchKeys":["packTrailer","fun packTrailer(stream: ByteArrayOutputStream, name: String, value: ByteArray)","elide.rpc.server.web.MetadataUtil.packTrailer"]},{"name":"fun packTrailers(stream: ByteArrayOutputStream, trailers: Metadata)","description":"elide.rpc.server.web.MetadataUtil.packTrailers","location":"packages/rpc/elide.rpc.server.web/-metadata-util/pack-trailers.html","searchKeys":["packTrailers","fun packTrailers(stream: ByteArrayOutputStream, trailers: Metadata)","elide.rpc.server.web.MetadataUtil.packTrailers"]},{"name":"fun terminalShutdown()","description":"elide.rpc.server.ServiceHealthManager.terminalShutdown","location":"packages/rpc/elide.rpc.server/-service-health-manager/terminal-shutdown.html","searchKeys":["terminalShutdown","fun terminalShutdown()","elide.rpc.server.ServiceHealthManager.terminalShutdown"]},{"name":"fun valueOf(value: String): GrpcWebContentType","description":"elide.rpc.server.web.GrpcWebContentType.valueOf","location":"packages/rpc/elide.rpc.server.web/-grpc-web-content-type/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): GrpcWebContentType","elide.rpc.server.web.GrpcWebContentType.valueOf"]},{"name":"fun valueOf(value: String): RpcSymbol","description":"elide.rpc.server.web.RpcSymbol.valueOf","location":"packages/rpc/elide.rpc.server.web/-rpc-symbol/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): RpcSymbol","elide.rpc.server.web.RpcSymbol.valueOf"]},{"name":"fun valueOf(value: String): StatusCode","description":"grpcweb.StatusCode.valueOf","location":"packages/rpc/grpcweb/-status-code/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): StatusCode","grpcweb.StatusCode.valueOf"]},{"name":"fun values(): Array<GrpcWebContentType>","description":"elide.rpc.server.web.GrpcWebContentType.values","location":"packages/rpc/elide.rpc.server.web/-grpc-web-content-type/values.html","searchKeys":["values","fun values(): Array<GrpcWebContentType>","elide.rpc.server.web.GrpcWebContentType.values"]},{"name":"fun values(): Array<RpcSymbol>","description":"elide.rpc.server.web.RpcSymbol.values","location":"packages/rpc/elide.rpc.server.web/-rpc-symbol/values.html","searchKeys":["values","fun values(): Array<RpcSymbol>","elide.rpc.server.web.RpcSymbol.values"]},{"name":"fun values(): Array<StatusCode>","description":"grpcweb.StatusCode.values","location":"packages/rpc/grpcweb/-status-code/values.html","searchKeys":["values","fun values(): Array<StatusCode>","grpcweb.StatusCode.values"]},{"name":"interface GrpcWebConfig : Toggleable","description":"elide.rpc.server.web.GrpcWebConfig","location":"packages/rpc/elide.rpc.server.web/-grpc-web-config/index.html","searchKeys":["GrpcWebConfig","interface GrpcWebConfig : Toggleable","elide.rpc.server.web.GrpcWebConfig"]},{"name":"interface GrpcWebTransport","description":"elide.rpc.server.web.GrpcWebTransport","location":"packages/rpc/elide.rpc.server.web/-grpc-web-transport/index.html","searchKeys":["GrpcWebTransport","interface GrpcWebTransport","elide.rpc.server.web.GrpcWebTransport"]},{"name":"interface MessageDeserializer","description":"elide.rpc.server.web.MessageDeserializer","location":"packages/rpc/elide.rpc.server.web/-message-deserializer/index.html","searchKeys":["MessageDeserializer","interface MessageDeserializer","elide.rpc.server.web.MessageDeserializer"]},{"name":"object Companion","description":"elide.rpc.server.web.GrpcWebConfig.Companion","location":"packages/rpc/elide.rpc.server.web/-grpc-web-config/-companion/index.html","searchKeys":["Companion","object Companion","elide.rpc.server.web.GrpcWebConfig.Companion"]},{"name":"object Companion","description":"elide.rpc.server.web.GrpcWebContentType.Companion","location":"packages/rpc/elide.rpc.server.web/-grpc-web-content-type/-companion/index.html","searchKeys":["Companion","object Companion","elide.rpc.server.web.GrpcWebContentType.Companion"]},{"name":"object GrpcWeb","description":"elide.rpc.server.web.GrpcWeb","location":"packages/rpc/elide.rpc.server.web/-grpc-web/index.html","searchKeys":["GrpcWeb","object GrpcWeb","elide.rpc.server.web.GrpcWeb"]},{"name":"object Headers","description":"elide.rpc.server.web.GrpcWeb.Headers","location":"packages/rpc/elide.rpc.server.web/-grpc-web/-headers/index.html","searchKeys":["Headers","object Headers","elide.rpc.server.web.GrpcWeb.Headers"]},{"name":"object Metadata","description":"elide.rpc.server.web.GrpcWeb.Metadata","location":"packages/rpc/elide.rpc.server.web/-grpc-web/-metadata/index.html","searchKeys":["Metadata","object Metadata","elide.rpc.server.web.GrpcWeb.Metadata"]},{"name":"object MetadataUtil","description":"elide.rpc.server.web.MetadataUtil","location":"packages/rpc/elide.rpc.server.web/-metadata-util/index.html","searchKeys":["MetadataUtil","object MetadataUtil","elide.rpc.server.web.MetadataUtil"]},{"name":"open external class AbstractClientBase","description":"grpcweb.AbstractClientBase","location":"packages/rpc/grpcweb/-abstract-client-base/index.html","searchKeys":["AbstractClientBase","open external class AbstractClientBase","grpcweb.AbstractClientBase"]},{"name":"open external class CallOptions(options: Json)","description":"grpcweb.CallOptions","location":"packages/rpc/grpcweb/-call-options/index.html","searchKeys":["CallOptions","open external class CallOptions(options: Json)","grpcweb.CallOptions"]},{"name":"open external class ClientReadableStream<RESP>","description":"grpcweb.ClientReadableStream","location":"packages/rpc/grpcweb/-client-readable-stream/index.html","searchKeys":["ClientReadableStream","open external class ClientReadableStream<RESP>","grpcweb.ClientReadableStream"]},{"name":"open external class GrpcWebClientBase(options: GrpcWebClientBaseOptions = definedExternally) : AbstractClientBase","description":"grpcweb.GrpcWebClientBase","location":"packages/rpc/grpcweb/-grpc-web-client-base/index.html","searchKeys":["GrpcWebClientBase","open external class GrpcWebClientBase(options: GrpcWebClientBaseOptions = definedExternally) : AbstractClientBase","grpcweb.GrpcWebClientBase"]},{"name":"open external class MethodDescriptor<REQ, RESP>(name: String, methodType: String, requestType: Any, responseType: Any, requestSerializeFn: Any, responseDeserializeFn: Any)","description":"grpcweb.MethodDescriptor","location":"packages/rpc/grpcweb/-method-descriptor/index.html","searchKeys":["MethodDescriptor","open external class MethodDescriptor<REQ, RESP>(name: String, methodType: String, requestType: Any, responseType: Any, requestSerializeFn: Any, responseDeserializeFn: Any)","grpcweb.MethodDescriptor"]},{"name":"open external class Request<REQ, RESP>","description":"grpcweb.Request","location":"packages/rpc/grpcweb/-request/index.html","searchKeys":["Request","open external class Request<REQ, RESP>","grpcweb.Request"]},{"name":"open external class UnaryResponse<REQ, RESP>","description":"grpcweb.UnaryResponse","location":"packages/rpc/grpcweb/-unary-response/index.html","searchKeys":["UnaryResponse","open external class UnaryResponse<REQ, RESP>","grpcweb.UnaryResponse"]},{"name":"open fun <REQ, RESP> rpcCall(method: String, request: REQ, metadata: Metadata, methodDescriptor: MethodDescriptor<REQ, RESP>, callback: (RpcError, response: RESP) -> Unit): ClientReadableStream<RESP>","description":"grpcweb.AbstractClientBase.rpcCall","location":"packages/rpc/grpcweb/-abstract-client-base/rpc-call.html","searchKeys":["rpcCall","open fun <REQ, RESP> rpcCall(method: String, request: REQ, metadata: Metadata, methodDescriptor: MethodDescriptor<REQ, RESP>, callback: (RpcError, response: RESP) -> Unit): ClientReadableStream<RESP>","grpcweb.AbstractClientBase.rpcCall"]},{"name":"open fun <REQ, RESP> serverStreaming(method: String, request: REQ, metadata: Metadata, methodDescriptor: MethodDescriptor<REQ, RESP>): ClientReadableStream<RESP>","description":"grpcweb.AbstractClientBase.serverStreaming","location":"packages/rpc/grpcweb/-abstract-client-base/server-streaming.html","searchKeys":["serverStreaming","open fun <REQ, RESP> serverStreaming(method: String, request: REQ, metadata: Metadata, methodDescriptor: MethodDescriptor<REQ, RESP>): ClientReadableStream<RESP>","grpcweb.AbstractClientBase.serverStreaming"]},{"name":"open fun <REQ, RESP> thenableCall(method: String, request: REQ, metadata: Metadata, methodDescriptor: MethodDescriptor<REQ, RESP>): Promise<RESP>","description":"grpcweb.AbstractClientBase.thenableCall","location":"packages/rpc/grpcweb/-abstract-client-base/thenable-call.html","searchKeys":["thenableCall","open fun <REQ, RESP> thenableCall(method: String, request: REQ, metadata: Metadata, methodDescriptor: MethodDescriptor<REQ, RESP>): Promise<RESP>","grpcweb.AbstractClientBase.thenableCall"]},{"name":"open fun cancel()","description":"grpcweb.ClientReadableStream.cancel","location":"packages/rpc/grpcweb/-client-readable-stream/cancel.html","searchKeys":["cancel","open fun cancel()","grpcweb.ClientReadableStream.cancel"]},{"name":"open fun createRequest(requestMessage: REQ, metadata: Metadata = definedExternally, callOptions: CallOptions = definedExternally): Request<REQ, RESP>","description":"grpcweb.MethodDescriptor.createRequest","location":"packages/rpc/grpcweb/-method-descriptor/create-request.html","searchKeys":["createRequest","open fun createRequest(requestMessage: REQ, metadata: Metadata = definedExternally, callOptions: CallOptions = definedExternally): Request<REQ, RESP>","grpcweb.MethodDescriptor.createRequest"]},{"name":"open fun createUnaryResponse(responseMessage: RESP, metadata: Metadata = definedExternally, status: Status = definedExternally): UnaryResponse<REQ, RESP>","description":"grpcweb.MethodDescriptor.createUnaryResponse","location":"packages/rpc/grpcweb/-method-descriptor/create-unary-response.html","searchKeys":["createUnaryResponse","open fun createUnaryResponse(responseMessage: RESP, metadata: Metadata = definedExternally, status: Status = definedExternally): UnaryResponse<REQ, RESP>","grpcweb.MethodDescriptor.createUnaryResponse"]},{"name":"open fun getCallOptions(): CallOptions","description":"grpcweb.Request.getCallOptions","location":"packages/rpc/grpcweb/-request/get-call-options.html","searchKeys":["getCallOptions","open fun getCallOptions(): CallOptions","grpcweb.Request.getCallOptions"]},{"name":"open fun getMetadata(): Metadata","description":"grpcweb.Request.getMetadata","location":"packages/rpc/grpcweb/-request/get-metadata.html","searchKeys":["getMetadata","open fun getMetadata(): Metadata","grpcweb.Request.getMetadata"]},{"name":"open fun getMetadata(): Metadata","description":"grpcweb.UnaryResponse.getMetadata","location":"packages/rpc/grpcweb/-unary-response/get-metadata.html","searchKeys":["getMetadata","open fun getMetadata(): Metadata","grpcweb.UnaryResponse.getMetadata"]},{"name":"open fun getMethodDescriptor(): MethodDescriptor<REQ, RESP>","description":"grpcweb.Request.getMethodDescriptor","location":"packages/rpc/grpcweb/-request/get-method-descriptor.html","searchKeys":["getMethodDescriptor","open fun getMethodDescriptor(): MethodDescriptor<REQ, RESP>","grpcweb.Request.getMethodDescriptor"]},{"name":"open fun getMethodDescriptor(): MethodDescriptor<REQ, RESP>","description":"grpcweb.UnaryResponse.getMethodDescriptor","location":"packages/rpc/grpcweb/-unary-response/get-method-descriptor.html","searchKeys":["getMethodDescriptor","open fun getMethodDescriptor(): MethodDescriptor<REQ, RESP>","grpcweb.UnaryResponse.getMethodDescriptor"]},{"name":"open fun getMethodType(): String","description":"grpcweb.MethodDescriptor.getMethodType","location":"packages/rpc/grpcweb/-method-descriptor/get-method-type.html","searchKeys":["getMethodType","open fun getMethodType(): String","grpcweb.MethodDescriptor.getMethodType"]},{"name":"open fun getName(): String","description":"grpcweb.MethodDescriptor.getName","location":"packages/rpc/grpcweb/-method-descriptor/get-name.html","searchKeys":["getName","open fun getName(): String","grpcweb.MethodDescriptor.getName"]},{"name":"open fun getRequestMessage(): REQ","description":"grpcweb.Request.getRequestMessage","location":"packages/rpc/grpcweb/-request/get-request-message.html","searchKeys":["getRequestMessage","open fun getRequestMessage(): REQ","grpcweb.Request.getRequestMessage"]},{"name":"open fun getRequestMessageCtor(): Any","description":"grpcweb.MethodDescriptor.getRequestMessageCtor","location":"packages/rpc/grpcweb/-method-descriptor/get-request-message-ctor.html","searchKeys":["getRequestMessageCtor","open fun getRequestMessageCtor(): Any","grpcweb.MethodDescriptor.getRequestMessageCtor"]},{"name":"open fun getRequestSerializeFn(): Any","description":"grpcweb.MethodDescriptor.getRequestSerializeFn","location":"packages/rpc/grpcweb/-method-descriptor/get-request-serialize-fn.html","searchKeys":["getRequestSerializeFn","open fun getRequestSerializeFn(): Any","grpcweb.MethodDescriptor.getRequestSerializeFn"]},{"name":"open fun getResponseDeserializeFn(): Any","description":"grpcweb.MethodDescriptor.getResponseDeserializeFn","location":"packages/rpc/grpcweb/-method-descriptor/get-response-deserialize-fn.html","searchKeys":["getResponseDeserializeFn","open fun getResponseDeserializeFn(): Any","grpcweb.MethodDescriptor.getResponseDeserializeFn"]},{"name":"open fun getResponseMessage(): RESP","description":"grpcweb.UnaryResponse.getResponseMessage","location":"packages/rpc/grpcweb/-unary-response/get-response-message.html","searchKeys":["getResponseMessage","open fun getResponseMessage(): RESP","grpcweb.UnaryResponse.getResponseMessage"]},{"name":"open fun getResponseMessageCtor(): Any","description":"grpcweb.MethodDescriptor.getResponseMessageCtor","location":"packages/rpc/grpcweb/-method-descriptor/get-response-message-ctor.html","searchKeys":["getResponseMessageCtor","open fun getResponseMessageCtor(): Any","grpcweb.MethodDescriptor.getResponseMessageCtor"]},{"name":"open fun getStatus(): Status","description":"grpcweb.UnaryResponse.getStatus","location":"packages/rpc/grpcweb/-unary-response/get-status.html","searchKeys":["getStatus","open fun getStatus(): Status","grpcweb.UnaryResponse.getStatus"]},{"name":"open fun on(eventType: String, callback: () -> Unit): ClientReadableStream<RESP>","description":"grpcweb.ClientReadableStream.on","location":"packages/rpc/grpcweb/-client-readable-stream/on.html","searchKeys":["on","open fun on(eventType: String, callback: () -> Unit): ClientReadableStream<RESP>","grpcweb.ClientReadableStream.on"]},{"name":"open fun on(eventType: String, callback: (RpcError) -> Unit): ClientReadableStream<RESP>","description":"grpcweb.ClientReadableStream.on","location":"packages/rpc/grpcweb/-client-readable-stream/on.html","searchKeys":["on","open fun on(eventType: String, callback: (RpcError) -> Unit): ClientReadableStream<RESP>","grpcweb.ClientReadableStream.on"]},{"name":"open fun on(eventType: String, callback: (response: RESP) -> Unit): ClientReadableStream<RESP>","description":"grpcweb.ClientReadableStream.on","location":"packages/rpc/grpcweb/-client-readable-stream/on.html","searchKeys":["on","open fun on(eventType: String, callback: (response: RESP) -> Unit): ClientReadableStream<RESP>","grpcweb.ClientReadableStream.on"]},{"name":"open fun on(eventType: String, callback: (status: Metadata) -> Unit): ClientReadableStream<RESP>","description":"grpcweb.ClientReadableStream.on","location":"packages/rpc/grpcweb/-client-readable-stream/on.html","searchKeys":["on","open fun on(eventType: String, callback: (status: Metadata) -> Unit): ClientReadableStream<RESP>","grpcweb.ClientReadableStream.on"]},{"name":"open fun on(eventType: String, callback: (status: Status) -> Unit): ClientReadableStream<RESP>","description":"grpcweb.ClientReadableStream.on","location":"packages/rpc/grpcweb/-client-readable-stream/on.html","searchKeys":["on","open fun on(eventType: String, callback: (status: Status) -> Unit): ClientReadableStream<RESP>","grpcweb.ClientReadableStream.on"]},{"name":"open fun removeListener(eventType: String, callback: () -> Unit)","description":"grpcweb.ClientReadableStream.removeListener","location":"packages/rpc/grpcweb/-client-readable-stream/remove-listener.html","searchKeys":["removeListener","open fun removeListener(eventType: String, callback: () -> Unit)","grpcweb.ClientReadableStream.removeListener"]},{"name":"open fun removeListener(eventType: String, callback: (RpcError) -> Unit)","description":"grpcweb.ClientReadableStream.removeListener","location":"packages/rpc/grpcweb/-client-readable-stream/remove-listener.html","searchKeys":["removeListener","open fun removeListener(eventType: String, callback: (RpcError) -> Unit)","grpcweb.ClientReadableStream.removeListener"]},{"name":"open fun removeListener(eventType: String, callback: (response: RESP) -> Unit)","description":"grpcweb.ClientReadableStream.removeListener","location":"packages/rpc/grpcweb/-client-readable-stream/remove-listener.html","searchKeys":["removeListener","open fun removeListener(eventType: String, callback: (response: RESP) -> Unit)","grpcweb.ClientReadableStream.removeListener"]},{"name":"open fun removeListener(eventType: String, callback: (status: Metadata) -> Unit)","description":"grpcweb.ClientReadableStream.removeListener","location":"packages/rpc/grpcweb/-client-readable-stream/remove-listener.html","searchKeys":["removeListener","open fun removeListener(eventType: String, callback: (status: Metadata) -> Unit)","grpcweb.ClientReadableStream.removeListener"]},{"name":"open fun removeListener(eventType: String, callback: (status: Status) -> Unit)","description":"grpcweb.ClientReadableStream.removeListener","location":"packages/rpc/grpcweb/-client-readable-stream/remove-listener.html","searchKeys":["removeListener","open fun removeListener(eventType: String, callback: (status: Status) -> Unit)","grpcweb.ClientReadableStream.removeListener"]},{"name":"open override fun fill(response: MutableHttpResponse<RawRpcPayload>)","description":"elide.rpc.server.web.GrpcWebCallResponse.Error.fill","location":"packages/rpc/elide.rpc.server.web/-grpc-web-call-response/-error/fill.html","searchKeys":["fill","open override fun fill(response: MutableHttpResponse<RawRpcPayload>)","elide.rpc.server.web.GrpcWebCallResponse.Error.fill"]},{"name":"open override fun fill(response: MutableHttpResponse<RawRpcPayload>)","description":"elide.rpc.server.web.GrpcWebCallResponse.UnaryResponse.fill","location":"packages/rpc/elide.rpc.server.web/-grpc-web-call-response/-unary-response/fill.html","searchKeys":["fill","open override fun fill(response: MutableHttpResponse<RawRpcPayload>)","elide.rpc.server.web.GrpcWebCallResponse.UnaryResponse.fill"]},{"name":"open override fun isEnabled(): Boolean","description":"elide.rpc.server.web.GrpcWebConfig.isEnabled","location":"packages/rpc/elide.rpc.server.web/-grpc-web-config/is-enabled.html","searchKeys":["isEnabled","open override fun isEnabled(): Boolean","elide.rpc.server.web.GrpcWebConfig.isEnabled"]},{"name":"open val endpoint: String","description":"elide.rpc.server.web.GrpcWebConfig.endpoint","location":"packages/rpc/elide.rpc.server.web/-grpc-web-config/endpoint.html","searchKeys":["endpoint","open val endpoint: String","elide.rpc.server.web.GrpcWebConfig.endpoint"]},{"name":"open val timeout: Duration","description":"elide.rpc.server.web.GrpcWebConfig.timeout","location":"packages/rpc/elide.rpc.server.web/-grpc-web-config/timeout.html","searchKeys":["timeout","open val timeout: Duration","elide.rpc.server.web.GrpcWebConfig.timeout"]},{"name":"open var format: String?","description":"grpcweb.GrpcWebClientBaseOptions.format","location":"packages/rpc/grpcweb/-grpc-web-client-base-options/format.html","searchKeys":["format","open var format: String?","grpcweb.GrpcWebClientBaseOptions.format"]},{"name":"open var metadata: Metadata?","description":"grpcweb.Status.metadata","location":"packages/rpc/grpcweb/-status/metadata.html","searchKeys":["metadata","open var metadata: Metadata?","grpcweb.Status.metadata"]},{"name":"open var streamInterceptors: Array<StreamInterceptor<Any, Any>>?","description":"grpcweb.GrpcWebClientBaseOptions.streamInterceptors","location":"packages/rpc/grpcweb/-grpc-web-client-base-options/stream-interceptors.html","searchKeys":["streamInterceptors","open var streamInterceptors: Array<StreamInterceptor<Any, Any>>?","grpcweb.GrpcWebClientBaseOptions.streamInterceptors"]},{"name":"open var suppressCorsPreflight: Boolean?","description":"grpcweb.GrpcWebClientBaseOptions.suppressCorsPreflight","location":"packages/rpc/grpcweb/-grpc-web-client-base-options/suppress-cors-preflight.html","searchKeys":["suppressCorsPreflight","open var suppressCorsPreflight: Boolean?","grpcweb.GrpcWebClientBaseOptions.suppressCorsPreflight"]},{"name":"open var unaryInterceptors: Array<UnaryInterceptor<Any, Any>>?","description":"grpcweb.GrpcWebClientBaseOptions.unaryInterceptors","location":"packages/rpc/grpcweb/-grpc-web-client-base-options/unary-interceptors.html","searchKeys":["unaryInterceptors","open var unaryInterceptors: Array<UnaryInterceptor<Any, Any>>?","grpcweb.GrpcWebClientBaseOptions.unaryInterceptors"]},{"name":"open var withCredentials: Boolean?","description":"grpcweb.GrpcWebClientBaseOptions.withCredentials","location":"packages/rpc/grpcweb/-grpc-web-client-base-options/with-credentials.html","searchKeys":["withCredentials","open var withCredentials: Boolean?","grpcweb.GrpcWebClientBaseOptions.withCredentials"]},{"name":"sealed class GrpcWebCallResponse","description":"elide.rpc.server.web.GrpcWebCallResponse","location":"packages/rpc/elide.rpc.server.web/-grpc-web-call-response/index.html","searchKeys":["GrpcWebCallResponse","sealed class GrpcWebCallResponse","elide.rpc.server.web.GrpcWebCallResponse"]},{"name":"suspend fun handleRequest(servicePath: String, methodName: String, request: HttpRequest<RawRpcPayload>, principal: Principal?): HttpResponse<RawRpcPayload>","description":"elide.rpc.server.web.GrpcWebController.handleRequest","location":"packages/rpc/elide.rpc.server.web/-grpc-web-controller/handle-request.html","searchKeys":["handleRequest","suspend fun handleRequest(servicePath: String, methodName: String, request: HttpRequest<RawRpcPayload>, principal: Principal?): HttpResponse<RawRpcPayload>","elide.rpc.server.web.GrpcWebController.handleRequest"]},{"name":"typealias RawRpcPayload = ByteArray","description":"elide.rpc.server.web.RawRpcPayload","location":"packages/rpc/elide.rpc.server.web/-raw-rpc-payload/index.html","searchKeys":["RawRpcPayload","typealias RawRpcPayload = ByteArray","elide.rpc.server.web.RawRpcPayload"]},{"name":"typealias RpcError = Error","description":"grpcweb.RpcError","location":"packages/rpc/grpcweb/-rpc-error/index.html","searchKeys":["RpcError","typealias RpcError = Error","grpcweb.RpcError"]},{"name":"val DEFAULTS: GrpcWebConfig","description":"elide.rpc.server.web.GrpcWebConfig.Companion.DEFAULTS","location":"packages/rpc/elide.rpc.server.web/-grpc-web-config/-companion/-d-e-f-a-u-l-t-s.html","searchKeys":["DEFAULTS","val DEFAULTS: GrpcWebConfig","elide.rpc.server.web.GrpcWebConfig.Companion.DEFAULTS"]},{"name":"val apiKey: Metadata.Key<String>","description":"elide.rpc.server.web.GrpcWeb.Metadata.apiKey","location":"packages/rpc/elide.rpc.server.web/-grpc-web/-metadata/api-key.html","searchKeys":["apiKey","val apiKey: Metadata.Key<String>","elide.rpc.server.web.GrpcWeb.Metadata.apiKey"]},{"name":"val authorization: Metadata.Key<String>","description":"elide.rpc.server.web.GrpcWeb.Metadata.authorization","location":"packages/rpc/elide.rpc.server.web/-grpc-web/-metadata/authorization.html","searchKeys":["authorization","val authorization: Metadata.Key<String>","elide.rpc.server.web.GrpcWeb.Metadata.authorization"]},{"name":"val cause: Throwable?","description":"elide.rpc.server.web.GrpcWebCallResponse.Error.cause","location":"packages/rpc/elide.rpc.server.web/-grpc-web-call-response/-error/cause.html","searchKeys":["cause","val cause: Throwable?","elide.rpc.server.web.GrpcWebCallResponse.Error.cause"]},{"name":"val contentType: GrpcWebContentType","description":"elide.rpc.server.web.GrpcWebCallResponse.Error.contentType","location":"packages/rpc/elide.rpc.server.web/-grpc-web-call-response/-error/content-type.html","searchKeys":["contentType","val contentType: GrpcWebContentType","elide.rpc.server.web.GrpcWebCallResponse.Error.contentType"]},{"name":"val contentType: GrpcWebContentType","description":"elide.rpc.server.web.GrpcWebCallResponse.UnaryResponse.contentType","location":"packages/rpc/elide.rpc.server.web/-grpc-web-call-response/-unary-response/content-type.html","searchKeys":["contentType","val contentType: GrpcWebContentType","elide.rpc.server.web.GrpcWebCallResponse.UnaryResponse.contentType"]},{"name":"val entries: EnumEntries<GrpcWebContentType>","description":"elide.rpc.server.web.GrpcWebContentType.entries","location":"packages/rpc/elide.rpc.server.web/-grpc-web-content-type/entries.html","searchKeys":["entries","val entries: EnumEntries<GrpcWebContentType>","elide.rpc.server.web.GrpcWebContentType.entries"]},{"name":"val entries: EnumEntries<RpcSymbol>","description":"elide.rpc.server.web.RpcSymbol.entries","location":"packages/rpc/elide.rpc.server.web/-rpc-symbol/entries.html","searchKeys":["entries","val entries: EnumEntries<RpcSymbol>","elide.rpc.server.web.RpcSymbol.entries"]},{"name":"val entries: EnumEntries<StatusCode>","description":"grpcweb.StatusCode.entries","location":"packages/rpc/grpcweb/-status-code/entries.html","searchKeys":["entries","val entries: EnumEntries<StatusCode>","grpcweb.StatusCode.entries"]},{"name":"val headers: Metadata","description":"elide.rpc.server.web.GrpcWebCallResponse.Error.headers","location":"packages/rpc/elide.rpc.server.web/-grpc-web-call-response/-error/headers.html","searchKeys":["headers","val headers: Metadata","elide.rpc.server.web.GrpcWebCallResponse.Error.headers"]},{"name":"val headers: Metadata","description":"elide.rpc.server.web.GrpcWebCallResponse.UnaryResponse.headers","location":"packages/rpc/elide.rpc.server.web/-grpc-web-call-response/-unary-response/headers.html","searchKeys":["headers","val headers: Metadata","elide.rpc.server.web.GrpcWebCallResponse.UnaryResponse.headers"]},{"name":"val internalCall: Metadata.Key<String>","description":"elide.rpc.server.web.GrpcWeb.Metadata.internalCall","location":"packages/rpc/elide.rpc.server.web/-grpc-web/-metadata/internal-call.html","searchKeys":["internalCall","val internalCall: Metadata.Key<String>","elide.rpc.server.web.GrpcWeb.Metadata.internalCall"]},{"name":"val payload: ByteArray","description":"elide.rpc.server.web.GrpcWebCallResponse.UnaryResponse.payload","location":"packages/rpc/elide.rpc.server.web/-grpc-web-call-response/-unary-response/payload.html","searchKeys":["payload","val payload: ByteArray","elide.rpc.server.web.GrpcWebCallResponse.UnaryResponse.payload"]},{"name":"val service: BindableService","description":"elide.rpc.server.ServiceHealthManager.service","location":"packages/rpc/elide.rpc.server/-service-health-manager/service.html","searchKeys":["service","val service: BindableService","elide.rpc.server.ServiceHealthManager.service"]},{"name":"val status: Status","description":"elide.rpc.server.web.GrpcWebCallResponse.Error.status","location":"packages/rpc/elide.rpc.server.web/-grpc-web-call-response/-error/status.html","searchKeys":["status","val status: Status","elide.rpc.server.web.GrpcWebCallResponse.Error.status"]},{"name":"val success: Boolean","description":"elide.rpc.server.web.GrpcWebCallResponse.success","location":"packages/rpc/elide.rpc.server.web/-grpc-web-call-response/success.html","searchKeys":["success","val success: Boolean","elide.rpc.server.web.GrpcWebCallResponse.success"]},{"name":"val trace: Metadata.Key<String>","description":"elide.rpc.server.web.GrpcWeb.Metadata.trace","location":"packages/rpc/elide.rpc.server.web/-grpc-web/-metadata/trace.html","searchKeys":["trace","val trace: Metadata.Key<String>","elide.rpc.server.web.GrpcWeb.Metadata.trace"]},{"name":"val trailers: Metadata","description":"elide.rpc.server.web.GrpcWebCallResponse.Error.trailers","location":"packages/rpc/elide.rpc.server.web/-grpc-web-call-response/-error/trailers.html","searchKeys":["trailers","val trailers: Metadata","elide.rpc.server.web.GrpcWebCallResponse.Error.trailers"]},{"name":"val trailers: Metadata","description":"elide.rpc.server.web.GrpcWebCallResponse.UnaryResponse.trailers","location":"packages/rpc/elide.rpc.server.web/-grpc-web-call-response/-unary-response/trailers.html","searchKeys":["trailers","val trailers: Metadata","elide.rpc.server.web.GrpcWebCallResponse.UnaryResponse.trailers"]},{"name":"val value: Byte","description":"elide.rpc.server.web.RpcSymbol.value","location":"packages/rpc/elide.rpc.server.web/-rpc-symbol/value.html","searchKeys":["value","val value: Byte","elide.rpc.server.web.RpcSymbol.value"]},{"name":"class Ruby(config: RubyConfig, resources: AbstractLanguagePlugin.LanguagePluginManifest)","description":"elide.runtime.plugins.ruby.Ruby","location":"packages/graalvm-rb/elide.runtime.plugins.ruby/-ruby/index.html","searchKeys":["Ruby","class Ruby(config: RubyConfig, resources: AbstractLanguagePlugin.LanguagePluginManifest)","elide.runtime.plugins.ruby.Ruby"]},{"name":"class RubyConfig : AbstractLanguageConfig","description":"elide.runtime.plugins.ruby.RubyConfig","location":"packages/graalvm-rb/elide.runtime.plugins.ruby/-ruby-config/index.html","searchKeys":["RubyConfig","class RubyConfig : AbstractLanguageConfig","elide.runtime.plugins.ruby.RubyConfig"]},{"name":"class RubyRuntimeConfig : Toggleable, GuestRuntimeConfiguration","description":"elide.runtime.gvm.ruby.cfg.RubyRuntimeConfig","location":"packages/graalvm-rb/elide.runtime.gvm.ruby.cfg/-ruby-runtime-config/index.html","searchKeys":["RubyRuntimeConfig","class RubyRuntimeConfig : Toggleable, GuestRuntimeConfiguration","elide.runtime.gvm.ruby.cfg.RubyRuntimeConfig"]},{"name":"class RubyServerAdapter","description":"elide.runtime.gvm.internals.ruby.RubyServerAdapter","location":"packages/graalvm-rb/elide.runtime.gvm.internals.ruby/-ruby-server-adapter/index.html","searchKeys":["RubyServerAdapter","class RubyServerAdapter","elide.runtime.gvm.internals.ruby.RubyServerAdapter"]},{"name":"const val DEFAULT_ENABLED: Boolean = true","description":"elide.runtime.gvm.ruby.cfg.RubyRuntimeConfig.Companion.DEFAULT_ENABLED","location":"packages/graalvm-rb/elide.runtime.gvm.ruby.cfg/-ruby-runtime-config/-companion/-d-e-f-a-u-l-t_-e-n-a-b-l-e-d.html","searchKeys":["DEFAULT_ENABLED","const val DEFAULT_ENABLED: Boolean = true","elide.runtime.gvm.ruby.cfg.RubyRuntimeConfig.Companion.DEFAULT_ENABLED"]},{"name":"constructor()","description":"elide.runtime.gvm.internals.ruby.RubyServerAdapter.RubyServerAdapter","location":"packages/graalvm-rb/elide.runtime.gvm.internals.ruby/-ruby-server-adapter/-ruby-server-adapter.html","searchKeys":["RubyServerAdapter","constructor()","elide.runtime.gvm.internals.ruby.RubyServerAdapter.RubyServerAdapter"]},{"name":"constructor()","description":"elide.runtime.gvm.ruby.cfg.RubyRuntimeConfig.RubyRuntimeConfig","location":"packages/graalvm-rb/elide.runtime.gvm.ruby.cfg/-ruby-runtime-config/-ruby-runtime-config.html","searchKeys":["RubyRuntimeConfig","constructor()","elide.runtime.gvm.ruby.cfg.RubyRuntimeConfig.RubyRuntimeConfig"]},{"name":"constructor()","description":"elide.runtime.plugins.ruby.RubyConfig.RubyConfig","location":"packages/graalvm-rb/elide.runtime.plugins.ruby/-ruby-config/-ruby-config.html","searchKeys":["RubyConfig","constructor()","elide.runtime.plugins.ruby.RubyConfig.RubyConfig"]},{"name":"constructor(config: RubyConfig, resources: AbstractLanguagePlugin.LanguagePluginManifest)","description":"elide.runtime.plugins.ruby.Ruby.Ruby","location":"packages/graalvm-rb/elide.runtime.plugins.ruby/-ruby/-ruby.html","searchKeys":["Ruby","constructor(config: RubyConfig, resources: AbstractLanguagePlugin.LanguagePluginManifest)","elide.runtime.plugins.ruby.Ruby.Ruby"]},{"name":"fun PolyglotContext.ruby(source: String, name: String? = null): PolyglotValue","description":"elide.runtime.plugins.ruby.ruby","location":"packages/graalvm-rb/elide.runtime.plugins.ruby/ruby.html","searchKeys":["ruby","fun PolyglotContext.ruby(source: String, name: String? = null): PolyglotValue","elide.runtime.plugins.ruby.ruby"]},{"name":"object Companion","description":"elide.runtime.gvm.ruby.cfg.RubyRuntimeConfig.Companion","location":"packages/graalvm-rb/elide.runtime.gvm.ruby.cfg/-ruby-runtime-config/-companion/index.html","searchKeys":["Companion","object Companion","elide.runtime.gvm.ruby.cfg.RubyRuntimeConfig.Companion"]},{"name":"object Plugin : AbstractLanguagePlugin<RubyConfig, Ruby> ","description":"elide.runtime.plugins.ruby.Ruby.Plugin","location":"packages/graalvm-rb/elide.runtime.plugins.ruby/-ruby/-plugin/index.html","searchKeys":["Plugin","object Plugin : AbstractLanguagePlugin<RubyConfig, Ruby> ","elide.runtime.plugins.ruby.Ruby.Plugin"]},{"name":"object Ruby","description":"elide.runtime.gvm.ruby.Ruby","location":"packages/graalvm-rb/elide.runtime.gvm.ruby/-ruby/index.html","searchKeys":["Ruby","object Ruby","elide.runtime.gvm.ruby.Ruby"]},{"name":"open override fun install(scope: EnginePlugin.InstallationScope, configuration: RubyConfig.() -> Unit): Ruby","description":"elide.runtime.plugins.ruby.Ruby.Plugin.install","location":"packages/graalvm-rb/elide.runtime.plugins.ruby/-ruby/-plugin/install.html","searchKeys":["install","open override fun install(scope: EnginePlugin.InstallationScope, configuration: RubyConfig.() -> Unit): Ruby","elide.runtime.plugins.ruby.Ruby.Plugin.install"]},{"name":"open override fun isEnabled(): Boolean","description":"elide.runtime.gvm.ruby.cfg.RubyRuntimeConfig.isEnabled","location":"packages/graalvm-rb/elide.runtime.gvm.ruby.cfg/-ruby-runtime-config/is-enabled.html","searchKeys":["isEnabled","open override fun isEnabled(): Boolean","elide.runtime.gvm.ruby.cfg.RubyRuntimeConfig.isEnabled"]},{"name":"open override val key: EnginePlugin.Key<Ruby>","description":"elide.runtime.plugins.ruby.Ruby.Plugin.key","location":"packages/graalvm-rb/elide.runtime.plugins.ruby/-ruby/-plugin/key.html","searchKeys":["key","open override val key: EnginePlugin.Key<Ruby>","elide.runtime.plugins.ruby.Ruby.Plugin.key"]},{"name":"open override val languageId: String","description":"elide.runtime.plugins.ruby.Ruby.Plugin.languageId","location":"packages/graalvm-rb/elide.runtime.plugins.ruby/-ruby/-plugin/language-id.html","searchKeys":["languageId","open override val languageId: String","elide.runtime.plugins.ruby.Ruby.Plugin.languageId"]},{"name":"val DEFAULT_CHARSET: Charset","description":"elide.runtime.gvm.ruby.cfg.RubyRuntimeConfig.Companion.DEFAULT_CHARSET","location":"packages/graalvm-rb/elide.runtime.gvm.ruby.cfg/-ruby-runtime-config/-companion/-d-e-f-a-u-l-t_-c-h-a-r-s-e-t.html","searchKeys":["DEFAULT_CHARSET","val DEFAULT_CHARSET: Charset","elide.runtime.gvm.ruby.cfg.RubyRuntimeConfig.Companion.DEFAULT_CHARSET"]},{"name":"val DEFAULT_LOCALE: Locale","description":"elide.runtime.gvm.ruby.cfg.RubyRuntimeConfig.Companion.DEFAULT_LOCALE","location":"packages/graalvm-rb/elide.runtime.gvm.ruby.cfg/-ruby-runtime-config/-companion/-d-e-f-a-u-l-t_-l-o-c-a-l-e.html","searchKeys":["DEFAULT_LOCALE","val DEFAULT_LOCALE: Locale","elide.runtime.gvm.ruby.cfg.RubyRuntimeConfig.Companion.DEFAULT_LOCALE"]},{"name":"val DEFAULT_TIMEZONE: ZoneId","description":"elide.runtime.gvm.ruby.cfg.RubyRuntimeConfig.Companion.DEFAULT_TIMEZONE","location":"packages/graalvm-rb/elide.runtime.gvm.ruby.cfg/-ruby-runtime-config/-companion/-d-e-f-a-u-l-t_-t-i-m-e-z-o-n-e.html","searchKeys":["DEFAULT_TIMEZONE","val DEFAULT_TIMEZONE: ZoneId","elide.runtime.gvm.ruby.cfg.RubyRuntimeConfig.Companion.DEFAULT_TIMEZONE"]},{"name":"val charset: Charset?","description":"elide.runtime.gvm.ruby.cfg.RubyRuntimeConfig.charset","location":"packages/graalvm-rb/elide.runtime.gvm.ruby.cfg/-ruby-runtime-config/charset.html","searchKeys":["charset","val charset: Charset?","elide.runtime.gvm.ruby.cfg.RubyRuntimeConfig.charset"]},{"name":"val defaultLocale: Locale?","description":"elide.runtime.gvm.ruby.cfg.RubyRuntimeConfig.defaultLocale","location":"packages/graalvm-rb/elide.runtime.gvm.ruby.cfg/-ruby-runtime-config/default-locale.html","searchKeys":["defaultLocale","val defaultLocale: Locale?","elide.runtime.gvm.ruby.cfg.RubyRuntimeConfig.defaultLocale"]},{"name":"val locale: Locale?","description":"elide.runtime.gvm.ruby.cfg.RubyRuntimeConfig.locale","location":"packages/graalvm-rb/elide.runtime.gvm.ruby.cfg/-ruby-runtime-config/locale.html","searchKeys":["locale","val locale: Locale?","elide.runtime.gvm.ruby.cfg.RubyRuntimeConfig.locale"]},{"name":"val timezone: ZoneId?","description":"elide.runtime.gvm.ruby.cfg.RubyRuntimeConfig.timezone","location":"packages/graalvm-rb/elide.runtime.gvm.ruby.cfg/-ruby-runtime-config/timezone.html","searchKeys":["timezone","val timezone: ZoneId?","elide.runtime.gvm.ruby.cfg.RubyRuntimeConfig.timezone"]},{"name":"class Kotlin","description":"elide.runtime.plugins.kotlin.Kotlin","location":"packages/graalvm-kt/elide.runtime.plugins.kotlin/-kotlin/index.html","searchKeys":["Kotlin","class Kotlin","elide.runtime.plugins.kotlin.Kotlin"]},{"name":"class KotlinConfig : AbstractLanguageConfig","description":"elide.runtime.plugins.kotlin.KotlinConfig","location":"packages/graalvm-kt/elide.runtime.plugins.kotlin/-kotlin-config/index.html","searchKeys":["KotlinConfig","class KotlinConfig : AbstractLanguageConfig","elide.runtime.plugins.kotlin.KotlinConfig"]},{"name":"fun PolyglotContext.kotlin(source: String, name: String? = null): PolyglotValue","description":"elide.runtime.plugins.kotlin.kotlin","location":"packages/graalvm-kt/elide.runtime.plugins.kotlin/kotlin.html","searchKeys":["kotlin","fun PolyglotContext.kotlin(source: String, name: String? = null): PolyglotValue","elide.runtime.plugins.kotlin.kotlin"]},{"name":"fun PolyglotContext.kotlinScript(file: File): PolyglotValue","description":"elide.runtime.plugins.kotlin.kotlinScript","location":"packages/graalvm-kt/elide.runtime.plugins.kotlin/kotlin-script.html","searchKeys":["kotlinScript","fun PolyglotContext.kotlinScript(file: File): PolyglotValue","elide.runtime.plugins.kotlin.kotlinScript"]},{"name":"fun PolyglotContext.kotlinScript(source: String, name: String? = null): PolyglotValue","description":"elide.runtime.plugins.kotlin.kotlinScript","location":"packages/graalvm-kt/elide.runtime.plugins.kotlin/kotlin-script.html","searchKeys":["kotlinScript","fun PolyglotContext.kotlinScript(source: String, name: String? = null): PolyglotValue","elide.runtime.plugins.kotlin.kotlinScript"]},{"name":"object Plugin : AbstractLanguagePlugin<KotlinConfig, Kotlin> ","description":"elide.runtime.plugins.kotlin.Kotlin.Plugin","location":"packages/graalvm-kt/elide.runtime.plugins.kotlin/-kotlin/-plugin/index.html","searchKeys":["Plugin","object Plugin : AbstractLanguagePlugin<KotlinConfig, Kotlin> ","elide.runtime.plugins.kotlin.Kotlin.Plugin"]},{"name":"open override fun install(scope: EnginePlugin.InstallationScope, configuration: KotlinConfig.() -> Unit): Kotlin","description":"elide.runtime.plugins.kotlin.Kotlin.Plugin.install","location":"packages/graalvm-kt/elide.runtime.plugins.kotlin/-kotlin/-plugin/install.html","searchKeys":["install","open override fun install(scope: EnginePlugin.InstallationScope, configuration: KotlinConfig.() -> Unit): Kotlin","elide.runtime.plugins.kotlin.Kotlin.Plugin.install"]},{"name":"open override val key: EnginePlugin.Key<Kotlin>","description":"elide.runtime.plugins.kotlin.Kotlin.Plugin.key","location":"packages/graalvm-kt/elide.runtime.plugins.kotlin/-kotlin/-plugin/key.html","searchKeys":["key","open override val key: EnginePlugin.Key<Kotlin>","elide.runtime.plugins.kotlin.Kotlin.Plugin.key"]},{"name":"open override val languageId: String","description":"elide.runtime.plugins.kotlin.Kotlin.Plugin.languageId","location":"packages/graalvm-kt/elide.runtime.plugins.kotlin/-kotlin/-plugin/language-id.html","searchKeys":["languageId","open override val languageId: String","elide.runtime.plugins.kotlin.Kotlin.Plugin.languageId"]},{"name":"val config: KotlinConfig","description":"elide.runtime.plugins.kotlin.Kotlin.config","location":"packages/graalvm-kt/elide.runtime.plugins.kotlin/-kotlin/config.html","searchKeys":["config","val config: KotlinConfig","elide.runtime.plugins.kotlin.Kotlin.config"]},{"name":"var guestClasspathRoot: String","description":"elide.runtime.plugins.kotlin.KotlinConfig.guestClasspathRoot","location":"packages/graalvm-kt/elide.runtime.plugins.kotlin/-kotlin-config/guest-classpath-root.html","searchKeys":["guestClasspathRoot","var guestClasspathRoot: String","elide.runtime.plugins.kotlin.KotlinConfig.guestClasspathRoot"]},{"name":"BASE64","description":"elide.core.encoding.Encoding.BASE64","location":"packages/core/elide.core.encoding/-encoding/-b-a-s-e64/index.html","searchKeys":["BASE64","BASE64","elide.core.encoding.Encoding.BASE64"]},{"name":"HEX","description":"elide.core.encoding.Encoding.HEX","location":"packages/core/elide.core.encoding/-encoding/-h-e-x/index.html","searchKeys":["HEX","HEX","elide.core.encoding.Encoding.HEX"]},{"name":"IDENTITY","description":"elide.core.crypto.HashAlgorithm.IDENTITY","location":"packages/core/elide.core.crypto/-hash-algorithm/-i-d-e-n-t-i-t-y/index.html","searchKeys":["IDENTITY","IDENTITY","elide.core.crypto.HashAlgorithm.IDENTITY"]},{"name":"MD5","description":"elide.core.crypto.HashAlgorithm.MD5","location":"packages/core/elide.core.crypto/-hash-algorithm/-m-d5/index.html","searchKeys":["MD5","MD5","elide.core.crypto.HashAlgorithm.MD5"]},{"name":"SHA1","description":"elide.core.crypto.HashAlgorithm.SHA1","location":"packages/core/elide.core.crypto/-hash-algorithm/-s-h-a1/index.html","searchKeys":["SHA1","SHA1","elide.core.crypto.HashAlgorithm.SHA1"]},{"name":"SHA3_224","description":"elide.core.crypto.HashAlgorithm.SHA3_224","location":"packages/core/elide.core.crypto/-hash-algorithm/-s-h-a3_224/index.html","searchKeys":["SHA3_224","SHA3_224","elide.core.crypto.HashAlgorithm.SHA3_224"]},{"name":"SHA3_256","description":"elide.core.crypto.HashAlgorithm.SHA3_256","location":"packages/core/elide.core.crypto/-hash-algorithm/-s-h-a3_256/index.html","searchKeys":["SHA3_256","SHA3_256","elide.core.crypto.HashAlgorithm.SHA3_256"]},{"name":"SHA3_512","description":"elide.core.crypto.HashAlgorithm.SHA3_512","location":"packages/core/elide.core.crypto/-hash-algorithm/-s-h-a3_512/index.html","searchKeys":["SHA3_512","SHA3_512","elide.core.crypto.HashAlgorithm.SHA3_512"]},{"name":"SHA_256","description":"elide.core.crypto.HashAlgorithm.SHA_256","location":"packages/core/elide.core.crypto/-hash-algorithm/-s-h-a_256/index.html","searchKeys":["SHA_256","SHA_256","elide.core.crypto.HashAlgorithm.SHA_256"]},{"name":"SHA_512","description":"elide.core.crypto.HashAlgorithm.SHA_512","location":"packages/core/elide.core.crypto/-hash-algorithm/-s-h-a_512/index.html","searchKeys":["SHA_512","SHA_512","elide.core.crypto.HashAlgorithm.SHA_512"]},{"name":"UTF_16","description":"elide.core.encoding.Encoding.UTF_16","location":"packages/core/elide.core.encoding/-encoding/-u-t-f_16/index.html","searchKeys":["UTF_16","UTF_16","elide.core.encoding.Encoding.UTF_16"]},{"name":"UTF_32","description":"elide.core.encoding.Encoding.UTF_32","location":"packages/core/elide.core.encoding/-encoding/-u-t-f_32/index.html","searchKeys":["UTF_32","UTF_32","elide.core.encoding.Encoding.UTF_32"]},{"name":"UTF_8","description":"elide.core.encoding.Encoding.UTF_8","location":"packages/core/elide.core.encoding/-encoding/-u-t-f_8/index.html","searchKeys":["UTF_8","UTF_8","elide.core.encoding.Encoding.UTF_8"]},{"name":"abstract class AbstractResolver<T : Symbolic<T>> : Symbolic.SealedResolver<T, Symbolic<T>> ","description":"elide.core.api.Symbolic.AbstractResolver","location":"packages/core/elide.core.api/-symbolic/-abstract-resolver/index.html","searchKeys":["AbstractResolver","abstract class AbstractResolver<T : Symbolic<T>> : Symbolic.SealedResolver<T, Symbolic<T>> ","elide.core.api.Symbolic.AbstractResolver"]},{"name":"abstract fun decodeBytes(data: ByteArray): ByteArray","description":"elide.core.encoding.Decoder.decodeBytes","location":"packages/core/elide.core.encoding/-decoder/decode-bytes.html","searchKeys":["decodeBytes","abstract fun decodeBytes(data: ByteArray): ByteArray","elide.core.encoding.Decoder.decodeBytes"]},{"name":"abstract fun encode(data: ByteArray): Raw","description":"elide.core.encoding.Encoder.encode","location":"packages/core/elide.core.encoding/-encoder/encode.html","searchKeys":["encode","abstract fun encode(data: ByteArray): Raw","elide.core.encoding.Encoder.encode"]},{"name":"abstract fun encoding(): Encoding","description":"elide.core.encoding.CodecIdentifiable.encoding","location":"packages/core/elide.core.encoding/-codec-identifiable/encoding.html","searchKeys":["encoding","abstract fun encoding(): Encoding","elide.core.encoding.CodecIdentifiable.encoding"]},{"name":"abstract fun resolve(symbol: T): Concrete?","description":"elide.core.api.Symbolic.Resolver.resolve","location":"packages/core/elide.core.api/-symbolic/-resolver/resolve.html","searchKeys":["resolve","abstract fun resolve(symbol: T): Concrete?","elide.core.api.Symbolic.Resolver.resolve"]},{"name":"abstract override fun resolve(symbol: T): Concrete","description":"elide.core.api.Symbolic.Enumerated.resolve","location":"packages/core/elide.core.api/-symbolic/-enumerated/resolve.html","searchKeys":["resolve","abstract override fun resolve(symbol: T): Concrete","elide.core.api.Symbolic.Enumerated.resolve"]},{"name":"abstract val data: ByteArray","description":"elide.core.encoding.EncodedData.data","location":"packages/core/elide.core.encoding/-encoded-data/data.html","searchKeys":["data","abstract val data: ByteArray","elide.core.encoding.EncodedData.data"]},{"name":"abstract val encoding: Encoding","description":"elide.core.encoding.EncodedData.encoding","location":"packages/core/elide.core.encoding/-encoded-data/encoding.html","searchKeys":["encoding","abstract val encoding: Encoding","elide.core.encoding.EncodedData.encoding"]},{"name":"abstract val name: String","description":"elide.core.api.Symbolic.AbstractResolver.name","location":"packages/core/elide.core.api/-symbolic/-abstract-resolver/name.html","searchKeys":["name","abstract val name: String","elide.core.api.Symbolic.AbstractResolver.name"]},{"name":"abstract val string: String","description":"elide.core.encoding.EncodedData.string","location":"packages/core/elide.core.encoding/-encoded-data/string.html","searchKeys":["string","abstract val string: String","elide.core.encoding.EncodedData.string"]},{"name":"abstract val symbol: T","description":"elide.core.api.Symbolic.symbol","location":"packages/core/elide.core.api/-symbolic/symbol.html","searchKeys":["symbol","abstract val symbol: T","elide.core.api.Symbolic.symbol"]},{"name":"class Decoder","description":"elide.core.encoding.base64.DefaultBase64.Decoder","location":"packages/core/elide.core.encoding.base64/-default-base64/-decoder/index.html","searchKeys":["Decoder","class Decoder","elide.core.encoding.base64.DefaultBase64.Decoder"]},{"name":"class Unresolved : IllegalStateException","description":"elide.core.api.Symbolic.Unresolved","location":"packages/core/elide.core.api/-symbolic/-unresolved/index.html","searchKeys":["Unresolved","class Unresolved : IllegalStateException","elide.core.api.Symbolic.Unresolved"]},{"name":"constructor()","description":"elide.core.api.Symbolic.AbstractResolver.AbstractResolver","location":"packages/core/elide.core.api/-symbolic/-abstract-resolver/-abstract-resolver.html","searchKeys":["AbstractResolver","constructor()","elide.core.api.Symbolic.AbstractResolver.AbstractResolver"]},{"name":"constructor()","description":"elide.core.encoding.base64.Base64.Decoder.Decoder","location":"packages/core/elide.core.encoding.base64/-base64/-decoder/-decoder.html","searchKeys":["Decoder","constructor()","elide.core.encoding.base64.Base64.Decoder.Decoder"]},{"name":"constructor()","description":"elide.core.encoding.base64.DefaultBase64.Decoder.Decoder","location":"packages/core/elide.core.encoding.base64/-default-base64/-decoder/-decoder.html","searchKeys":["Decoder","constructor()","elide.core.encoding.base64.DefaultBase64.Decoder.Decoder"]},{"name":"constructor()","description":"elide.core.encoding.base64.DefaultBase64.Encoder.Encoder","location":"packages/core/elide.core.encoding.base64/-default-base64/-encoder/-encoder.html","searchKeys":["Encoder","constructor()","elide.core.encoding.base64.DefaultBase64.Encoder.Encoder"]},{"name":"constructor()","description":"elide.core.platform.PlatformDefaults.PlatformDefaults","location":"packages/core/elide.core.platform/-platform-defaults/-platform-defaults.html","searchKeys":["PlatformDefaults","constructor()","elide.core.platform.PlatformDefaults.PlatformDefaults"]},{"name":"constructor(data: ByteArray)","description":"elide.core.encoding.base64.Base64Data.Base64Data","location":"packages/core/elide.core.encoding.base64/-base64-data/-base64-data.html","searchKeys":["Base64Data","constructor(data: ByteArray)","elide.core.encoding.base64.Base64Data.Base64Data"]},{"name":"constructor(encoded: String)","description":"elide.core.encoding.hex.HexData.HexData","location":"packages/core/elide.core.encoding.hex/-hex-data/-hex-data.html","searchKeys":["HexData","constructor(encoded: String)","elide.core.encoding.hex.HexData.HexData"]},{"name":"enum Encoding : Enum<Encoding> ","description":"elide.core.encoding.Encoding","location":"packages/core/elide.core.encoding/-encoding/index.html","searchKeys":["Encoding","enum Encoding : Enum<Encoding> ","elide.core.encoding.Encoding"]},{"name":"enum HashAlgorithm : Enum<HashAlgorithm> ","description":"elide.core.crypto.HashAlgorithm","location":"packages/core/elide.core.crypto/-hash-algorithm/index.html","searchKeys":["HashAlgorithm","enum HashAlgorithm : Enum<HashAlgorithm> ","elide.core.crypto.HashAlgorithm"]},{"name":"expect annotation class Inline","description":"elide.core.annotations.Inline","location":"packages/core/elide.core.annotations/-inline/index.html","searchKeys":["Inline","expect annotation class Inline","elide.core.annotations.Inline"]},{"name":"expect annotation class Static","description":"elide.core.annotations.Static","location":"packages/core/elide.core.annotations/-static/index.html","searchKeys":["Static","expect annotation class Static","elide.core.annotations.Static"]},{"name":"expect class Decoder","description":"elide.core.encoding.base64.Base64.Decoder","location":"packages/core/elide.core.encoding.base64/-base64/-decoder/index.html","searchKeys":["Decoder","expect class Decoder","elide.core.encoding.base64.Base64.Decoder"]},{"name":"expect class Encoder","description":"elide.core.encoding.base64.Base64.Encoder","location":"packages/core/elide.core.encoding.base64/-base64/-encoder/index.html","searchKeys":["Encoder","expect class Encoder","elide.core.encoding.base64.Base64.Encoder"]},{"name":"expect class PlatformDefaults : PlatformDefaults","description":"elide.core.platform.PlatformDefaults","location":"packages/core/elide.core.platform/-platform-defaults/index.html","searchKeys":["PlatformDefaults","expect class PlatformDefaults : PlatformDefaults","elide.core.platform.PlatformDefaults"]},{"name":"expect constructor()","description":"elide.core.encoding.base64.Base64.Encoder.Encoder","location":"packages/core/elide.core.encoding.base64/-base64/-encoder/-encoder.html","searchKeys":["Encoder","expect constructor()","elide.core.encoding.base64.Base64.Encoder.Encoder"]},{"name":"expect fun decode(src: ByteArray): ByteArray","description":"elide.core.encoding.base64.Base64.Decoder.decode","location":"packages/core/elide.core.encoding.base64/-base64/-decoder/decode.html","searchKeys":["decode","expect fun decode(src: ByteArray): ByteArray","elide.core.encoding.base64.Base64.Decoder.decode"]},{"name":"expect fun encode(src: ByteArray): ByteArray","description":"elide.core.encoding.base64.Base64.Encoder.encode","location":"packages/core/elide.core.encoding.base64/-base64/-encoder/encode.html","searchKeys":["encode","expect fun encode(src: ByteArray): ByteArray","elide.core.encoding.base64.Base64.Encoder.encode"]},{"name":"expect fun encodeWebSafe(data: ByteArray): ByteArray","description":"elide.core.encoding.base64.Base64.encodeWebSafe","location":"packages/core/elide.core.encoding.base64/-base64/encode-web-safe.html","searchKeys":["encodeWebSafe","expect fun encodeWebSafe(data: ByteArray): ByteArray","elide.core.encoding.base64.Base64.encodeWebSafe"]},{"name":"expect fun encodeWebSafe(string: String): String","description":"elide.core.encoding.base64.Base64.encodeWebSafe","location":"packages/core/elide.core.encoding.base64/-base64/encode-web-safe.html","searchKeys":["encodeWebSafe","expect fun encodeWebSafe(string: String): String","elide.core.encoding.base64.Base64.encodeWebSafe"]},{"name":"expect object Base64 : Codec<Base64Data> ","description":"elide.core.encoding.base64.Base64","location":"packages/core/elide.core.encoding.base64/-base64/index.html","searchKeys":["Base64","expect object Base64 : Codec<Base64Data> ","elide.core.encoding.base64.Base64"]},{"name":"expect object Companion","description":"elide.core.encoding.base64.Base64.Decoder.Companion","location":"packages/core/elide.core.encoding.base64/-base64/-decoder/-companion/index.html","searchKeys":["Companion","expect object Companion","elide.core.encoding.base64.Base64.Decoder.Companion"]},{"name":"expect object Companion","description":"elide.core.encoding.base64.Base64.Encoder.Companion","location":"packages/core/elide.core.encoding.base64/-base64/-encoder/-companion/index.html","searchKeys":["Companion","expect object Companion","elide.core.encoding.base64.Base64.Encoder.Companion"]},{"name":"expect object Hex : Codec<HexData> ","description":"elide.core.encoding.hex.Hex","location":"packages/core/elide.core.encoding.hex/-hex/index.html","searchKeys":["Hex","expect object Hex : Codec<HexData> ","elide.core.encoding.hex.Hex"]},{"name":"expect open override fun decode(data: Base64Data): ByteArray","description":"elide.core.encoding.base64.Base64.decode","location":"packages/core/elide.core.encoding.base64/-base64/decode.html","searchKeys":["decode","expect open override fun decode(data: Base64Data): ByteArray","elide.core.encoding.base64.Base64.decode"]},{"name":"expect open override fun decodeBytes(data: ByteArray): ByteArray","description":"elide.core.encoding.base64.Base64.decodeBytes","location":"packages/core/elide.core.encoding.base64/-base64/decode-bytes.html","searchKeys":["decodeBytes","expect open override fun decodeBytes(data: ByteArray): ByteArray","elide.core.encoding.base64.Base64.decodeBytes"]},{"name":"expect open override fun decodeBytes(data: ByteArray): ByteArray","description":"elide.core.encoding.hex.Hex.decodeBytes","location":"packages/core/elide.core.encoding.hex/-hex/decode-bytes.html","searchKeys":["decodeBytes","expect open override fun decodeBytes(data: ByteArray): ByteArray","elide.core.encoding.hex.Hex.decodeBytes"]},{"name":"expect open override fun decodeString(string: String): ByteArray","description":"elide.core.encoding.base64.Base64.decodeString","location":"packages/core/elide.core.encoding.base64/-base64/decode-string.html","searchKeys":["decodeString","expect open override fun decodeString(string: String): ByteArray","elide.core.encoding.base64.Base64.decodeString"]},{"name":"expect open override fun decodeToString(data: ByteArray): String","description":"elide.core.encoding.base64.Base64.decodeToString","location":"packages/core/elide.core.encoding.base64/-base64/decode-to-string.html","searchKeys":["decodeToString","expect open override fun decodeToString(data: ByteArray): String","elide.core.encoding.base64.Base64.decodeToString"]},{"name":"expect open override fun decodeToString(string: String): String","description":"elide.core.encoding.base64.Base64.decodeToString","location":"packages/core/elide.core.encoding.base64/-base64/decode-to-string.html","searchKeys":["decodeToString","expect open override fun decodeToString(string: String): String","elide.core.encoding.base64.Base64.decodeToString"]},{"name":"expect open override fun decoder(): Decoder<Base64Data>","description":"elide.core.encoding.base64.Base64.decoder","location":"packages/core/elide.core.encoding.base64/-base64/decoder.html","searchKeys":["decoder","expect open override fun decoder(): Decoder<Base64Data>","elide.core.encoding.base64.Base64.decoder"]},{"name":"expect open override fun encode(data: ByteArray): Base64Data","description":"elide.core.encoding.base64.Base64.encode","location":"packages/core/elide.core.encoding.base64/-base64/encode.html","searchKeys":["encode","expect open override fun encode(data: ByteArray): Base64Data","elide.core.encoding.base64.Base64.encode"]},{"name":"expect open override fun encode(data: ByteArray): HexData","description":"elide.core.encoding.hex.Hex.encode","location":"packages/core/elide.core.encoding.hex/-hex/encode.html","searchKeys":["encode","expect open override fun encode(data: ByteArray): HexData","elide.core.encoding.hex.Hex.encode"]},{"name":"expect open override fun encodeBytes(data: ByteArray): ByteArray","description":"elide.core.encoding.base64.Base64.encodeBytes","location":"packages/core/elide.core.encoding.base64/-base64/encode-bytes.html","searchKeys":["encodeBytes","expect open override fun encodeBytes(data: ByteArray): ByteArray","elide.core.encoding.base64.Base64.encodeBytes"]},{"name":"expect open override fun encodeString(string: String): ByteArray","description":"elide.core.encoding.base64.Base64.encodeString","location":"packages/core/elide.core.encoding.base64/-base64/encode-string.html","searchKeys":["encodeString","expect open override fun encodeString(string: String): ByteArray","elide.core.encoding.base64.Base64.encodeString"]},{"name":"expect open override fun encodeToString(data: ByteArray): String","description":"elide.core.encoding.base64.Base64.encodeToString","location":"packages/core/elide.core.encoding.base64/-base64/encode-to-string.html","searchKeys":["encodeToString","expect open override fun encodeToString(data: ByteArray): String","elide.core.encoding.base64.Base64.encodeToString"]},{"name":"expect open override fun encodeToString(string: String): String","description":"elide.core.encoding.base64.Base64.encodeToString","location":"packages/core/elide.core.encoding.base64/-base64/encode-to-string.html","searchKeys":["encodeToString","expect open override fun encodeToString(string: String): String","elide.core.encoding.base64.Base64.encodeToString"]},{"name":"expect open override fun encoder(): Encoder<Base64Data>","description":"elide.core.encoding.base64.Base64.encoder","location":"packages/core/elide.core.encoding.base64/-base64/encoder.html","searchKeys":["encoder","expect open override fun encoder(): Encoder<Base64Data>","elide.core.encoding.base64.Base64.encoder"]},{"name":"expect open override fun encoding(): Encoding","description":"elide.core.encoding.base64.Base64.encoding","location":"packages/core/elide.core.encoding.base64/-base64/encoding.html","searchKeys":["encoding","expect open override fun encoding(): Encoding","elide.core.encoding.base64.Base64.encoding"]},{"name":"expect open override fun encoding(): Encoding","description":"elide.core.encoding.hex.Hex.encoding","location":"packages/core/elide.core.encoding.hex/-hex/encoding.html","searchKeys":["encoding","expect open override fun encoding(): Encoding","elide.core.encoding.hex.Hex.encoding"]},{"name":"expect val DEFAULT: Base64.Decoder","description":"elide.core.encoding.base64.Base64.Decoder.Companion.DEFAULT","location":"packages/core/elide.core.encoding.base64/-base64/-decoder/-companion/-d-e-f-a-u-l-t.html","searchKeys":["DEFAULT","expect val DEFAULT: Base64.Decoder","elide.core.encoding.base64.Base64.Decoder.Companion.DEFAULT"]},{"name":"expect val DEFAULT: Base64.Encoder","description":"elide.core.encoding.base64.Base64.Encoder.Companion.DEFAULT","location":"packages/core/elide.core.encoding.base64/-base64/-encoder/-companion/-d-e-f-a-u-l-t.html","searchKeys":["DEFAULT","expect val DEFAULT: Base64.Encoder","elide.core.encoding.base64.Base64.Encoder.Companion.DEFAULT"]},{"name":"expect val DEFAULT_WEBSAFE: Base64.Encoder","description":"elide.core.encoding.base64.Base64.Encoder.Companion.DEFAULT_WEBSAFE","location":"packages/core/elide.core.encoding.base64/-base64/-encoder/-companion/-d-e-f-a-u-l-t_-w-e-b-s-a-f-e.html","searchKeys":["DEFAULT_WEBSAFE","expect val DEFAULT_WEBSAFE: Base64.Encoder","elide.core.encoding.base64.Base64.Encoder.Companion.DEFAULT_WEBSAFE"]},{"name":"fun ByteArray.toBase64(): Base64Data","description":"elide.core.encoding.toBase64","location":"packages/core/elide.core.encoding/to-base64.html","searchKeys":["toBase64","fun ByteArray.toBase64(): Base64Data","elide.core.encoding.toBase64"]},{"name":"fun ByteArray.toBase64Bytes(): ByteArray","description":"elide.core.encoding.toBase64Bytes","location":"packages/core/elide.core.encoding/to-base64-bytes.html","searchKeys":["toBase64Bytes","fun ByteArray.toBase64Bytes(): ByteArray","elide.core.encoding.toBase64Bytes"]},{"name":"fun ByteArray.toBase64String(): String","description":"elide.core.encoding.toBase64String","location":"packages/core/elide.core.encoding/to-base64-string.html","searchKeys":["toBase64String","fun ByteArray.toBase64String(): String","elide.core.encoding.toBase64String"]},{"name":"fun ByteArray.toHex(): HexData","description":"elide.core.encoding.toHex","location":"packages/core/elide.core.encoding/to-hex.html","searchKeys":["toHex","fun ByteArray.toHex(): HexData","elide.core.encoding.toHex"]},{"name":"fun ByteArray.toHexBytes(): ByteArray","description":"elide.core.encoding.toHexBytes","location":"packages/core/elide.core.encoding/to-hex-bytes.html","searchKeys":["toHexBytes","fun ByteArray.toHexBytes(): ByteArray","elide.core.encoding.toHexBytes"]},{"name":"fun ByteArray.toHexString(): String","description":"elide.core.encoding.toHexString","location":"packages/core/elide.core.encoding/to-hex-string.html","searchKeys":["toHexString","fun ByteArray.toHexString(): String","elide.core.encoding.toHexString"]},{"name":"fun String.toBase64(): Base64Data","description":"elide.core.encoding.toBase64","location":"packages/core/elide.core.encoding/to-base64.html","searchKeys":["toBase64","fun String.toBase64(): Base64Data","elide.core.encoding.toBase64"]},{"name":"fun String.toBase64Bytes(): ByteArray","description":"elide.core.encoding.toBase64Bytes","location":"packages/core/elide.core.encoding/to-base64-bytes.html","searchKeys":["toBase64Bytes","fun String.toBase64Bytes(): ByteArray","elide.core.encoding.toBase64Bytes"]},{"name":"fun String.toBase64String(): String","description":"elide.core.encoding.toBase64String","location":"packages/core/elide.core.encoding/to-base64-string.html","searchKeys":["toBase64String","fun String.toBase64String(): String","elide.core.encoding.toBase64String"]},{"name":"fun String.toHex(): HexData","description":"elide.core.encoding.toHex","location":"packages/core/elide.core.encoding/to-hex.html","searchKeys":["toHex","fun String.toHex(): HexData","elide.core.encoding.toHex"]},{"name":"fun String.toHexBytes(): ByteArray","description":"elide.core.encoding.toHexBytes","location":"packages/core/elide.core.encoding/to-hex-bytes.html","searchKeys":["toHexBytes","fun String.toHexBytes(): ByteArray","elide.core.encoding.toHexBytes"]},{"name":"fun String.toHexString(): String","description":"elide.core.encoding.toHexString","location":"packages/core/elide.core.encoding/to-hex-string.html","searchKeys":["toHexString","fun String.toHexString(): String","elide.core.encoding.toHexString"]},{"name":"fun decode(src: ByteArray): ByteArray","description":"elide.core.encoding.base64.DefaultBase64.Decoder.decode","location":"packages/core/elide.core.encoding.base64/-default-base64/-decoder/decode.html","searchKeys":["decode","fun decode(src: ByteArray): ByteArray","elide.core.encoding.base64.DefaultBase64.Decoder.decode"]},{"name":"fun encode(src: ByteArray): ByteArray","description":"elide.core.encoding.base64.DefaultBase64.Encoder.encode","location":"packages/core/elide.core.encoding.base64/-default-base64/-encoder/encode.html","searchKeys":["encode","fun encode(src: ByteArray): ByteArray","elide.core.encoding.base64.DefaultBase64.Encoder.encode"]},{"name":"fun encodeWebSafe(data: ByteArray): ByteArray","description":"elide.core.encoding.base64.DefaultBase64.encodeWebSafe","location":"packages/core/elide.core.encoding.base64/-default-base64/encode-web-safe.html","searchKeys":["encodeWebSafe","fun encodeWebSafe(data: ByteArray): ByteArray","elide.core.encoding.base64.DefaultBase64.encodeWebSafe"]},{"name":"fun encodeWebSafe(string: String): String","description":"elide.core.encoding.base64.DefaultBase64.encodeWebSafe","location":"packages/core/elide.core.encoding.base64/-default-base64/encode-web-safe.html","searchKeys":["encodeWebSafe","fun encodeWebSafe(string: String): String","elide.core.encoding.base64.DefaultBase64.encodeWebSafe"]},{"name":"fun valueOf(value: String): Encoding","description":"elide.core.encoding.Encoding.valueOf","location":"packages/core/elide.core.encoding/-encoding/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): Encoding","elide.core.encoding.Encoding.valueOf"]},{"name":"fun valueOf(value: String): HashAlgorithm","description":"elide.core.crypto.HashAlgorithm.valueOf","location":"packages/core/elide.core.crypto/-hash-algorithm/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): HashAlgorithm","elide.core.crypto.HashAlgorithm.valueOf"]},{"name":"fun values(): Array<Encoding>","description":"elide.core.encoding.Encoding.values","location":"packages/core/elide.core.encoding/-encoding/values.html","searchKeys":["values","fun values(): Array<Encoding>","elide.core.encoding.Encoding.values"]},{"name":"fun values(): Array<HashAlgorithm>","description":"elide.core.crypto.HashAlgorithm.values","location":"packages/core/elide.core.crypto/-hash-algorithm/values.html","searchKeys":["values","fun values(): Array<HashAlgorithm>","elide.core.crypto.HashAlgorithm.values"]},{"name":"interface Codec<Raw : EncodedData> : Encoder<Raw> , Decoder<Raw> , CodecIdentifiable","description":"elide.core.encoding.Codec","location":"packages/core/elide.core.encoding/-codec/index.html","searchKeys":["Codec","interface Codec<Raw : EncodedData> : Encoder<Raw> , Decoder<Raw> , CodecIdentifiable","elide.core.encoding.Codec"]},{"name":"interface CodecIdentifiable","description":"elide.core.encoding.CodecIdentifiable","location":"packages/core/elide.core.encoding/-codec-identifiable/index.html","searchKeys":["CodecIdentifiable","interface CodecIdentifiable","elide.core.encoding.CodecIdentifiable"]},{"name":"interface Decoder<Raw : EncodedData> : CodecIdentifiable","description":"elide.core.encoding.Decoder","location":"packages/core/elide.core.encoding/-decoder/index.html","searchKeys":["Decoder","interface Decoder<Raw : EncodedData> : CodecIdentifiable","elide.core.encoding.Decoder"]},{"name":"interface EncodedData","description":"elide.core.encoding.EncodedData","location":"packages/core/elide.core.encoding/-encoded-data/index.html","searchKeys":["EncodedData","interface EncodedData","elide.core.encoding.EncodedData"]},{"name":"interface Encoder<Raw : EncodedData> : CodecIdentifiable","description":"elide.core.encoding.Encoder","location":"packages/core/elide.core.encoding/-encoder/index.html","searchKeys":["Encoder","interface Encoder<Raw : EncodedData> : CodecIdentifiable","elide.core.encoding.Encoder"]},{"name":"interface Enumerated<T : Any, Concrete : Symbolic<T>> : Symbolic.Resolver<T, Concrete> ","description":"elide.core.api.Symbolic.Enumerated","location":"packages/core/elide.core.api/-symbolic/-enumerated/index.html","searchKeys":["Enumerated","interface Enumerated<T : Any, Concrete : Symbolic<T>> : Symbolic.Resolver<T, Concrete> ","elide.core.api.Symbolic.Enumerated"]},{"name":"interface PlatformDefaults","description":"elide.core.PlatformDefaults","location":"packages/core/elide.core/-platform-defaults/index.html","searchKeys":["PlatformDefaults","interface PlatformDefaults","elide.core.PlatformDefaults"]},{"name":"interface Resolver<T : Any, Concrete : Symbolic<T>>","description":"elide.core.api.Symbolic.Resolver","location":"packages/core/elide.core.api/-symbolic/-resolver/index.html","searchKeys":["Resolver","interface Resolver<T : Any, Concrete : Symbolic<T>>","elide.core.api.Symbolic.Resolver"]},{"name":"interface SealedResolver<T : Any, Concrete : Symbolic<T>> : Symbolic.Enumerated<T, Concrete> ","description":"elide.core.api.Symbolic.SealedResolver","location":"packages/core/elide.core.api/-symbolic/-sealed-resolver/index.html","searchKeys":["SealedResolver","interface SealedResolver<T : Any, Concrete : Symbolic<T>> : Symbolic.Enumerated<T, Concrete> ","elide.core.api.Symbolic.SealedResolver"]},{"name":"interface Symbolic<T>","description":"elide.core.api.Symbolic","location":"packages/core/elide.core.api/-symbolic/index.html","searchKeys":["Symbolic","interface Symbolic<T>","elide.core.api.Symbolic"]},{"name":"object Companion","description":"elide.core.encoding.base64.DefaultBase64.Decoder.Companion","location":"packages/core/elide.core.encoding.base64/-default-base64/-decoder/-companion/index.html","searchKeys":["Companion","object Companion","elide.core.encoding.base64.DefaultBase64.Decoder.Companion"]},{"name":"object Companion","description":"elide.core.encoding.base64.DefaultBase64.Encoder.Companion","location":"packages/core/elide.core.encoding.base64/-default-base64/-encoder/-companion/index.html","searchKeys":["Companion","object Companion","elide.core.encoding.base64.DefaultBase64.Encoder.Companion"]},{"name":"object DefaultBase64 : Codec<Base64Data> ","description":"elide.core.encoding.base64.DefaultBase64","location":"packages/core/elide.core.encoding.base64/-default-base64/index.html","searchKeys":["DefaultBase64","object DefaultBase64 : Codec<Base64Data> ","elide.core.encoding.base64.DefaultBase64"]},{"name":"object DefaultHex : Codec<HexData> ","description":"elide.core.encoding.hex.DefaultHex","location":"packages/core/elide.core.encoding.hex/-default-hex/index.html","searchKeys":["DefaultHex","object DefaultHex : Codec<HexData> ","elide.core.encoding.hex.DefaultHex"]},{"name":"object Defaults : PlatformDefaults","description":"elide.core.Defaults","location":"packages/core/elide.core/-defaults/index.html","searchKeys":["Defaults","object Defaults : PlatformDefaults","elide.core.Defaults"]},{"name":"open class Encoder","description":"elide.core.encoding.base64.DefaultBase64.Encoder","location":"packages/core/elide.core.encoding.base64/-default-base64/-encoder/index.html","searchKeys":["Encoder","open class Encoder","elide.core.encoding.base64.DefaultBase64.Encoder"]},{"name":"open fun decode(data: Raw): ByteArray","description":"elide.core.encoding.Decoder.decode","location":"packages/core/elide.core.encoding/-decoder/decode.html","searchKeys":["decode","open fun decode(data: Raw): ByteArray","elide.core.encoding.Decoder.decode"]},{"name":"open fun decodeString(string: String): ByteArray","description":"elide.core.encoding.Decoder.decodeString","location":"packages/core/elide.core.encoding/-decoder/decode-string.html","searchKeys":["decodeString","open fun decodeString(string: String): ByteArray","elide.core.encoding.Decoder.decodeString"]},{"name":"open fun decodeToString(data: ByteArray): String","description":"elide.core.encoding.Decoder.decodeToString","location":"packages/core/elide.core.encoding/-decoder/decode-to-string.html","searchKeys":["decodeToString","open fun decodeToString(data: ByteArray): String","elide.core.encoding.Decoder.decodeToString"]},{"name":"open fun decodeToString(string: String): String","description":"elide.core.encoding.Decoder.decodeToString","location":"packages/core/elide.core.encoding/-decoder/decode-to-string.html","searchKeys":["decodeToString","open fun decodeToString(string: String): String","elide.core.encoding.Decoder.decodeToString"]},{"name":"open fun decoder(): Decoder<Raw>","description":"elide.core.encoding.Codec.decoder","location":"packages/core/elide.core.encoding/-codec/decoder.html","searchKeys":["decoder","open fun decoder(): Decoder<Raw>","elide.core.encoding.Codec.decoder"]},{"name":"open fun encodeBytes(data: ByteArray): ByteArray","description":"elide.core.encoding.Encoder.encodeBytes","location":"packages/core/elide.core.encoding/-encoder/encode-bytes.html","searchKeys":["encodeBytes","open fun encodeBytes(data: ByteArray): ByteArray","elide.core.encoding.Encoder.encodeBytes"]},{"name":"open fun encodeString(string: String): ByteArray","description":"elide.core.encoding.Encoder.encodeString","location":"packages/core/elide.core.encoding/-encoder/encode-string.html","searchKeys":["encodeString","open fun encodeString(string: String): ByteArray","elide.core.encoding.Encoder.encodeString"]},{"name":"open fun encodeToString(data: ByteArray): String","description":"elide.core.encoding.Encoder.encodeToString","location":"packages/core/elide.core.encoding/-encoder/encode-to-string.html","searchKeys":["encodeToString","open fun encodeToString(data: ByteArray): String","elide.core.encoding.Encoder.encodeToString"]},{"name":"open fun encodeToString(string: String): String","description":"elide.core.encoding.Encoder.encodeToString","location":"packages/core/elide.core.encoding/-encoder/encode-to-string.html","searchKeys":["encodeToString","open fun encodeToString(string: String): String","elide.core.encoding.Encoder.encodeToString"]},{"name":"open fun encoder(): Encoder<Raw>","description":"elide.core.encoding.Codec.encoder","location":"packages/core/elide.core.encoding/-codec/encoder.html","searchKeys":["encoder","open fun encoder(): Encoder<Raw>","elide.core.encoding.Codec.encoder"]},{"name":"open fun resolveSymbol(symbol: T): Concrete","description":"elide.core.api.Symbolic.Resolver.resolveSymbol","location":"packages/core/elide.core.api/-symbolic/-resolver/resolve-symbol.html","searchKeys":["resolveSymbol","open fun resolveSymbol(symbol: T): Concrete","elide.core.api.Symbolic.Resolver.resolveSymbol"]},{"name":"open fun unresolved(requested: T): Symbolic.Unresolved","description":"elide.core.api.Symbolic.Enumerated.unresolved","location":"packages/core/elide.core.api/-symbolic/-enumerated/unresolved.html","searchKeys":["unresolved","open fun unresolved(requested: T): Symbolic.Unresolved","elide.core.api.Symbolic.Enumerated.unresolved"]},{"name":"open override fun decodeBytes(data: ByteArray): ByteArray","description":"elide.core.encoding.base64.DefaultBase64.decodeBytes","location":"packages/core/elide.core.encoding.base64/-default-base64/decode-bytes.html","searchKeys":["decodeBytes","open override fun decodeBytes(data: ByteArray): ByteArray","elide.core.encoding.base64.DefaultBase64.decodeBytes"]},{"name":"open override fun decodeBytes(data: ByteArray): ByteArray","description":"elide.core.encoding.hex.DefaultHex.decodeBytes","location":"packages/core/elide.core.encoding.hex/-default-hex/decode-bytes.html","searchKeys":["decodeBytes","open override fun decodeBytes(data: ByteArray): ByteArray","elide.core.encoding.hex.DefaultHex.decodeBytes"]},{"name":"open override fun encode(data: ByteArray): Base64Data","description":"elide.core.encoding.base64.DefaultBase64.encode","location":"packages/core/elide.core.encoding.base64/-default-base64/encode.html","searchKeys":["encode","open override fun encode(data: ByteArray): Base64Data","elide.core.encoding.base64.DefaultBase64.encode"]},{"name":"open override fun encode(data: ByteArray): HexData","description":"elide.core.encoding.hex.DefaultHex.encode","location":"packages/core/elide.core.encoding.hex/-default-hex/encode.html","searchKeys":["encode","open override fun encode(data: ByteArray): HexData","elide.core.encoding.hex.DefaultHex.encode"]},{"name":"open override fun encoding(): Encoding","description":"elide.core.encoding.base64.DefaultBase64.encoding","location":"packages/core/elide.core.encoding.base64/-default-base64/encoding.html","searchKeys":["encoding","open override fun encoding(): Encoding","elide.core.encoding.base64.DefaultBase64.encoding"]},{"name":"open override fun encoding(): Encoding","description":"elide.core.encoding.hex.DefaultHex.encoding","location":"packages/core/elide.core.encoding.hex/-default-hex/encoding.html","searchKeys":["encoding","open override fun encoding(): Encoding","elide.core.encoding.hex.DefaultHex.encoding"]},{"name":"open override val charset: String","description":"elide.core.Defaults.charset","location":"packages/core/elide.core/-defaults/charset.html","searchKeys":["charset","open override val charset: String","elide.core.Defaults.charset"]},{"name":"open override val data: ByteArray","description":"elide.core.encoding.base64.Base64Data.data","location":"packages/core/elide.core.encoding.base64/-base64-data/data.html","searchKeys":["data","open override val data: ByteArray","elide.core.encoding.base64.Base64Data.data"]},{"name":"open override val data: ByteArray","description":"elide.core.encoding.hex.HexData.data","location":"packages/core/elide.core.encoding.hex/-hex-data/data.html","searchKeys":["data","open override val data: ByteArray","elide.core.encoding.hex.HexData.data"]},{"name":"open override val encoding: Encoding","description":"elide.core.encoding.base64.Base64Data.encoding","location":"packages/core/elide.core.encoding.base64/-base64-data/encoding.html","searchKeys":["encoding","open override val encoding: Encoding","elide.core.encoding.base64.Base64Data.encoding"]},{"name":"open override val encoding: Encoding","description":"elide.core.encoding.hex.HexData.encoding","location":"packages/core/elide.core.encoding.hex/-hex-data/encoding.html","searchKeys":["encoding","open override val encoding: Encoding","elide.core.encoding.hex.HexData.encoding"]},{"name":"open override val string: String","description":"elide.core.encoding.base64.Base64Data.string","location":"packages/core/elide.core.encoding.base64/-base64-data/string.html","searchKeys":["string","open override val string: String","elide.core.encoding.base64.Base64Data.string"]},{"name":"open override val string: String","description":"elide.core.encoding.hex.HexData.string","location":"packages/core/elide.core.encoding.hex/-hex-data/string.html","searchKeys":["string","open override val string: String","elide.core.encoding.hex.HexData.string"]},{"name":"open val charset: String","description":"elide.core.PlatformDefaults.charset","location":"packages/core/elide.core/-platform-defaults/charset.html","searchKeys":["charset","open val charset: String","elide.core.PlatformDefaults.charset"]},{"name":"typealias Base64 = DefaultBase64","description":"elide.core.encoding.Base64","location":"packages/core/elide.core.encoding/-base64/index.html","searchKeys":["Base64","typealias Base64 = DefaultBase64","elide.core.encoding.Base64"]},{"name":"typealias Hex = DefaultHex","description":"elide.core.encoding.Hex","location":"packages/core/elide.core.encoding/-hex/index.html","searchKeys":["Hex","typealias Hex = DefaultHex","elide.core.encoding.Hex"]},{"name":"val CHARACTER_SET: CharArray","description":"elide.core.encoding.hex.DefaultHex.CHARACTER_SET","location":"packages/core/elide.core.encoding.hex/-default-hex/-c-h-a-r-a-c-t-e-r_-s-e-t.html","searchKeys":["CHARACTER_SET","val CHARACTER_SET: CharArray","elide.core.encoding.hex.DefaultHex.CHARACTER_SET"]},{"name":"val DEFAULT: DefaultBase64.Decoder","description":"elide.core.encoding.base64.DefaultBase64.Decoder.Companion.DEFAULT","location":"packages/core/elide.core.encoding.base64/-default-base64/-decoder/-companion/-d-e-f-a-u-l-t.html","searchKeys":["DEFAULT","val DEFAULT: DefaultBase64.Decoder","elide.core.encoding.base64.DefaultBase64.Decoder.Companion.DEFAULT"]},{"name":"val DEFAULT: DefaultBase64.Encoder","description":"elide.core.encoding.base64.DefaultBase64.Encoder.Companion.DEFAULT","location":"packages/core/elide.core.encoding.base64/-default-base64/-encoder/-companion/-d-e-f-a-u-l-t.html","searchKeys":["DEFAULT","val DEFAULT: DefaultBase64.Encoder","elide.core.encoding.base64.DefaultBase64.Encoder.Companion.DEFAULT"]},{"name":"val DEFAULT_WEBSAFE: DefaultBase64.Encoder","description":"elide.core.encoding.base64.DefaultBase64.Encoder.Companion.DEFAULT_WEBSAFE","location":"packages/core/elide.core.encoding.base64/-default-base64/-encoder/-companion/-d-e-f-a-u-l-t_-w-e-b-s-a-f-e.html","searchKeys":["DEFAULT_WEBSAFE","val DEFAULT_WEBSAFE: DefaultBase64.Encoder","elide.core.encoding.base64.DefaultBase64.Encoder.Companion.DEFAULT_WEBSAFE"]},{"name":"val entries: EnumEntries<Encoding>","description":"elide.core.encoding.Encoding.entries","location":"packages/core/elide.core.encoding/-encoding/entries.html","searchKeys":["entries","val entries: EnumEntries<Encoding>","elide.core.encoding.Encoding.entries"]},{"name":"val entries: EnumEntries<HashAlgorithm>","description":"elide.core.crypto.HashAlgorithm.entries","location":"packages/core/elide.core.crypto/-hash-algorithm/entries.html","searchKeys":["entries","val entries: EnumEntries<HashAlgorithm>","elide.core.crypto.HashAlgorithm.entries"]},{"name":"value class Base64Data(val data: ByteArray) : EncodedData","description":"elide.core.encoding.base64.Base64Data","location":"packages/core/elide.core.encoding.base64/-base64-data/index.html","searchKeys":["Base64Data","value class Base64Data(val data: ByteArray) : EncodedData","elide.core.encoding.base64.Base64Data"]},{"name":"value class HexData(encoded: String) : EncodedData","description":"elide.core.encoding.hex.HexData","location":"packages/core/elide.core.encoding.hex/-hex-data/index.html","searchKeys":["HexData","value class HexData(encoded: String) : EncodedData","elide.core.encoding.hex.HexData"]},{"name":"abstract class AbstractElideProtobufProtocol : ElideProtocol","description":"elide.proto.impl.AbstractElideProtobufProtocol","location":"packages/proto/proto-protobuf/elide.proto.impl/-abstract-elide-protobuf-protocol/index.html","searchKeys":["AbstractElideProtobufProtocol","abstract class AbstractElideProtobufProtocol : ElideProtocol","elide.proto.impl.AbstractElideProtobufProtocol"]},{"name":"abstract fun defaultMessageInstance(): M","description":"elide.util.proto.adapters.ProtoModel.defaultMessageInstance","location":"packages/proto/proto-protobuf/elide.util.proto.adapters/-proto-model/default-message-instance.html","searchKeys":["defaultMessageInstance","abstract fun defaultMessageInstance(): M","elide.util.proto.adapters.ProtoModel.defaultMessageInstance"]},{"name":"abstract fun fromMessage(message: M): ProtoConvertible<M>","description":"elide.util.proto.adapters.ProtoModel.fromMessage","location":"packages/proto/proto-protobuf/elide.util.proto.adapters/-proto-model/from-message.html","searchKeys":["fromMessage","abstract fun fromMessage(message: M): ProtoConvertible<M>","elide.util.proto.adapters.ProtoModel.fromMessage"]},{"name":"abstract fun toDescriptor(): Descriptors.Descriptor","description":"elide.util.proto.adapters.ProtoSchemaConvertible.toDescriptor","location":"packages/proto/proto-protobuf/elide.util.proto.adapters/-proto-schema-convertible/to-descriptor.html","searchKeys":["toDescriptor","abstract fun toDescriptor(): Descriptors.Descriptor","elide.util.proto.adapters.ProtoSchemaConvertible.toDescriptor"]},{"name":"abstract fun toMessage(): M","description":"elide.util.proto.adapters.ProtoConvertible.toMessage","location":"packages/proto/proto-protobuf/elide.util.proto.adapters/-proto-convertible/to-message.html","searchKeys":["toMessage","abstract fun toMessage(): M","elide.util.proto.adapters.ProtoConvertible.toMessage"]},{"name":"class Builder : DataContainer.IBuilder<ProtoDataContainer, ProtoDataFingerprint, ProtoDataFingerprint.Builder, HashAlgorithm, Encoding, ProtoDataContainer.Builder> ","description":"elide.proto.impl.data.ProtoDataContainer.Builder","location":"packages/proto/proto-protobuf/elide.proto.impl.data/-proto-data-container/-builder/index.html","searchKeys":["Builder","class Builder : DataContainer.IBuilder<ProtoDataContainer, ProtoDataFingerprint, ProtoDataFingerprint.Builder, HashAlgorithm, Encoding, ProtoDataContainer.Builder> ","elide.proto.impl.data.ProtoDataContainer.Builder"]},{"name":"class Builder : DataFingerprint.IBuilder<ProtoDataFingerprint, HashAlgorithm, Encoding, ProtoDataFingerprint.Builder> ","description":"elide.proto.impl.data.ProtoDataFingerprint.Builder","location":"packages/proto/proto-protobuf/elide.proto.impl.data/-proto-data-fingerprint/-builder/index.html","searchKeys":["Builder","class Builder : DataFingerprint.IBuilder<ProtoDataFingerprint, HashAlgorithm, Encoding, ProtoDataFingerprint.Builder> ","elide.proto.impl.data.ProtoDataFingerprint.Builder"]},{"name":"class ElideProtoJava : AbstractElideProtobufProtocol","description":"elide.proto.impl.ElideProtoJava","location":"packages/proto/proto-protobuf/elide.proto.impl/-elide-proto-java/index.html","searchKeys":["ElideProtoJava","class ElideProtoJava : AbstractElideProtobufProtocol","elide.proto.impl.ElideProtoJava"]},{"name":"class ProtoBuilderContext","description":"elide.proto.impl.Protobuf.ProtoBuilderContext","location":"packages/proto/proto-protobuf/elide.proto.impl/-protobuf/-proto-builder-context/index.html","searchKeys":["ProtoBuilderContext","class ProtoBuilderContext","elide.proto.impl.Protobuf.ProtoBuilderContext"]},{"name":"class ProtoDataContainer : DataContainer<ProtoDataContainer, ProtoDataContainer.Builder, ProtoDataFingerprint, ProtoDataFingerprint.Builder, HashAlgorithm, Encoding> , DataContainerOrBuilder","description":"elide.proto.impl.data.ProtoDataContainer","location":"packages/proto/proto-protobuf/elide.proto.impl.data/-proto-data-container/index.html","searchKeys":["ProtoDataContainer","class ProtoDataContainer : DataContainer<ProtoDataContainer, ProtoDataContainer.Builder, ProtoDataFingerprint, ProtoDataFingerprint.Builder, HashAlgorithm, Encoding> , DataContainerOrBuilder","elide.proto.impl.data.ProtoDataContainer"]},{"name":"class ProtoDataFingerprint : DataFingerprint<ProtoDataFingerprint, ProtoDataFingerprint.Builder, HashAlgorithm, Encoding> , DataFingerprintOrBuilder","description":"elide.proto.impl.data.ProtoDataFingerprint","location":"packages/proto/proto-protobuf/elide.proto.impl.data/-proto-data-fingerprint/index.html","searchKeys":["ProtoDataFingerprint","class ProtoDataFingerprint : DataFingerprint<ProtoDataFingerprint, ProtoDataFingerprint.Builder, HashAlgorithm, Encoding> , DataFingerprintOrBuilder","elide.proto.impl.data.ProtoDataFingerprint"]},{"name":"class ProtoModelStrategy : ElideProtocol.ModelAdapterStrategy","description":"elide.proto.impl.AbstractElideProtobufProtocol.ProtoModelStrategy","location":"packages/proto/proto-protobuf/elide.proto.impl/-abstract-elide-protobuf-protocol/-proto-model-strategy/index.html","searchKeys":["ProtoModelStrategy","class ProtoModelStrategy : ElideProtocol.ModelAdapterStrategy","elide.proto.impl.AbstractElideProtobufProtocol.ProtoModelStrategy"]},{"name":"class ProtoTimestamp : Timestamp<ProtoTimestamp, ProtoTimestamp.TimestampBuilder> ","description":"elide.proto.impl.wkt.ProtoTimestamp","location":"packages/proto/proto-protobuf/elide.proto.impl.wkt/-proto-timestamp/index.html","searchKeys":["ProtoTimestamp","class ProtoTimestamp : Timestamp<ProtoTimestamp, ProtoTimestamp.TimestampBuilder> ","elide.proto.impl.wkt.ProtoTimestamp"]},{"name":"class TimestampBuilder(builder: Timestamp.Builder) : ProtoTimestamp.Builder","description":"elide.proto.impl.wkt.ProtoTimestamp.TimestampBuilder","location":"packages/proto/proto-protobuf/elide.proto.impl.wkt/-proto-timestamp/-timestamp-builder/index.html","searchKeys":["TimestampBuilder","class TimestampBuilder(builder: Timestamp.Builder) : ProtoTimestamp.Builder","elide.proto.impl.wkt.ProtoTimestamp.TimestampBuilder"]},{"name":"constructor()","description":"elide.proto.impl.AbstractElideProtobufProtocol.AbstractElideProtobufProtocol","location":"packages/proto/proto-protobuf/elide.proto.impl/-abstract-elide-protobuf-protocol/-abstract-elide-protobuf-protocol.html","searchKeys":["AbstractElideProtobufProtocol","constructor()","elide.proto.impl.AbstractElideProtobufProtocol.AbstractElideProtobufProtocol"]},{"name":"constructor()","description":"elide.proto.impl.AbstractElideProtobufProtocol.ProtoModelStrategy.ProtoModelStrategy","location":"packages/proto/proto-protobuf/elide.proto.impl/-abstract-elide-protobuf-protocol/-proto-model-strategy/-proto-model-strategy.html","searchKeys":["ProtoModelStrategy","constructor()","elide.proto.impl.AbstractElideProtobufProtocol.ProtoModelStrategy.ProtoModelStrategy"]},{"name":"constructor()","description":"elide.proto.impl.ElideProtoJava.ElideProtoJava","location":"packages/proto/proto-protobuf/elide.proto.impl/-elide-proto-java/-elide-proto-java.html","searchKeys":["ElideProtoJava","constructor()","elide.proto.impl.ElideProtoJava.ElideProtoJava"]},{"name":"constructor()","description":"elide.proto.impl.data.ProtoDataContainer.Builder.Builder","location":"packages/proto/proto-protobuf/elide.proto.impl.data/-proto-data-container/-builder/-builder.html","searchKeys":["Builder","constructor()","elide.proto.impl.data.ProtoDataContainer.Builder.Builder"]},{"name":"constructor(builder: Timestamp.Builder)","description":"elide.proto.impl.wkt.ProtoTimestamp.TimestampBuilder.TimestampBuilder","location":"packages/proto/proto-protobuf/elide.proto.impl.wkt/-proto-timestamp/-timestamp-builder/-timestamp-builder.html","searchKeys":["TimestampBuilder","constructor(builder: Timestamp.Builder)","elide.proto.impl.wkt.ProtoTimestamp.TimestampBuilder.TimestampBuilder"]},{"name":"fun <M : Message, Model : ProtoConvertible<M>> toMessage(type: KClass<Model>, value: Model?): M","description":"elide.proto.impl.Protobuf.ProtoBuilderContext.toMessage","location":"packages/proto/proto-protobuf/elide.proto.impl/-protobuf/-proto-builder-context/to-message.html","searchKeys":["toMessage","fun <M : Message, Model : ProtoConvertible<M>> toMessage(type: KClass<Model>, value: Model?): M","elide.proto.impl.Protobuf.ProtoBuilderContext.toMessage"]},{"name":"fun Instant.Companion.fromMessage(proto: Timestamp): Instant?","description":"elide.proto.impl.Protobuf.fromMessage","location":"packages/proto/proto-protobuf/elide.proto.impl/-protobuf/from-message.html","searchKeys":["fromMessage","fun Instant.Companion.fromMessage(proto: Timestamp): Instant?","elide.proto.impl.Protobuf.fromMessage"]},{"name":"fun Timestamp.toJavaInstant(): Instant","description":"elide.proto.impl.wkt.ProtoTimestamp.Factory.toJavaInstant","location":"packages/proto/proto-protobuf/elide.proto.impl.wkt/-proto-timestamp/-factory/to-java-instant.html","searchKeys":["toJavaInstant","fun Timestamp.toJavaInstant(): Instant","elide.proto.impl.wkt.ProtoTimestamp.Factory.toJavaInstant"]},{"name":"fun Timestamp.toKotlinInstant(): Instant","description":"elide.proto.impl.wkt.ProtoTimestamp.Factory.toKotlinInstant","location":"packages/proto/proto-protobuf/elide.proto.impl.wkt/-proto-timestamp/-factory/to-kotlin-instant.html","searchKeys":["toKotlinInstant","fun Timestamp.toKotlinInstant(): Instant","elide.proto.impl.wkt.ProtoTimestamp.Factory.toKotlinInstant"]},{"name":"fun Timestamp.toModel(): ProtoTimestamp","description":"elide.proto.impl.wkt.ProtoTimestamp.Factory.toModel","location":"packages/proto/proto-protobuf/elide.proto.impl.wkt/-proto-timestamp/-factory/to-model.html","searchKeys":["toModel","fun Timestamp.toModel(): ProtoTimestamp","elide.proto.impl.wkt.ProtoTimestamp.Factory.toModel"]},{"name":"fun create(): Protobuf.ProtoBuilderContext","description":"elide.proto.impl.Protobuf.ProtoBuilderContext.Companion.create","location":"packages/proto/proto-protobuf/elide.proto.impl/-protobuf/-proto-builder-context/-companion/create.html","searchKeys":["create","fun create(): Protobuf.ProtoBuilderContext","elide.proto.impl.Protobuf.ProtoBuilderContext.Companion.create"]},{"name":"fun timestamp(value: Instant?): Timestamp","description":"elide.proto.impl.Protobuf.ProtoBuilderContext.timestamp","location":"packages/proto/proto-protobuf/elide.proto.impl/-protobuf/-proto-builder-context/timestamp.html","searchKeys":["timestamp","fun timestamp(value: Instant?): Timestamp","elide.proto.impl.Protobuf.ProtoBuilderContext.timestamp"]},{"name":"inline fun <C : Any> ifPresent(value: C?, crossinline op: (value: C) -> Unit)","description":"elide.proto.impl.Protobuf.ProtoBuilderContext.ifPresent","location":"packages/proto/proto-protobuf/elide.proto.impl/-protobuf/-proto-builder-context/if-present.html","searchKeys":["ifPresent","inline fun <C : Any> ifPresent(value: C?, crossinline op: (value: C) -> Unit)","elide.proto.impl.Protobuf.ProtoBuilderContext.ifPresent"]},{"name":"inline fun <C : Any> ifPresent(value: Optional<C>, crossinline op: (value: C) -> Unit)","description":"elide.proto.impl.Protobuf.ProtoBuilderContext.ifPresent","location":"packages/proto/proto-protobuf/elide.proto.impl/-protobuf/-proto-builder-context/if-present.html","searchKeys":["ifPresent","inline fun <C : Any> ifPresent(value: Optional<C>, crossinline op: (value: C) -> Unit)","elide.proto.impl.Protobuf.ProtoBuilderContext.ifPresent"]},{"name":"inline fun <C : Collection<*>> ifNotEmpty(value: C?, crossinline op: (value: C) -> Unit)","description":"elide.proto.impl.Protobuf.ProtoBuilderContext.ifNotEmpty","location":"packages/proto/proto-protobuf/elide.proto.impl/-protobuf/-proto-builder-context/if-not-empty.html","searchKeys":["ifNotEmpty","inline fun <C : Collection<*>> ifNotEmpty(value: C?, crossinline op: (value: C) -> Unit)","elide.proto.impl.Protobuf.ProtoBuilderContext.ifNotEmpty"]},{"name":"inline fun <In : ProtoSchemaConvertible, M : Message, B : Message.Builder> buildFrom(instance: In, builder: (B.() -> Unit) -> M, crossinline op: Protobuf.ProtoBuilderContext.(B, In) -> Unit): M","description":"elide.proto.impl.Protobuf.buildFrom","location":"packages/proto/proto-protobuf/elide.proto.impl/-protobuf/build-from.html","searchKeys":["buildFrom","inline fun <In : ProtoSchemaConvertible, M : Message, B : Message.Builder> buildFrom(instance: In, builder: (B.() -> Unit) -> M, crossinline op: Protobuf.ProtoBuilderContext.(B, In) -> Unit): M","elide.proto.impl.Protobuf.buildFrom"]},{"name":"inline fun <In, M : Message, B : Message.Builder> buildFrom(instance: In, builder: (B.() -> Unit) -> M, crossinline op: Protobuf.ProtoBuilderContext.(B, In) -> Unit): M","description":"elide.proto.impl.Protobuf.buildFrom","location":"packages/proto/proto-protobuf/elide.proto.impl/-protobuf/build-from.html","searchKeys":["buildFrom","inline fun <In, M : Message, B : Message.Builder> buildFrom(instance: In, builder: (B.() -> Unit) -> M, crossinline op: Protobuf.ProtoBuilderContext.(B, In) -> Unit): M","elide.proto.impl.Protobuf.buildFrom"]},{"name":"inline fun <M : Message, Model : ProtoConvertible<M>, B> Model.buildFrom(builder: (B.() -> Unit) -> M, crossinline op: Protobuf.ProtoBuilderContext.(B, Model) -> Unit): M","description":"elide.proto.impl.Protobuf.buildFrom","location":"packages/proto/proto-protobuf/elide.proto.impl/-protobuf/build-from.html","searchKeys":["buildFrom","inline fun <M : Message, Model : ProtoConvertible<M>, B> Model.buildFrom(builder: (B.() -> Unit) -> M, crossinline op: Protobuf.ProtoBuilderContext.(B, Model) -> Unit): M","elide.proto.impl.Protobuf.buildFrom"]},{"name":"inline fun ifNotBlank(value: String?, crossinline op: (value: String) -> Unit)","description":"elide.proto.impl.Protobuf.ProtoBuilderContext.ifNotBlank","location":"packages/proto/proto-protobuf/elide.proto.impl/-protobuf/-proto-builder-context/if-not-blank.html","searchKeys":["ifNotBlank","inline fun ifNotBlank(value: String?, crossinline op: (value: String) -> Unit)","elide.proto.impl.Protobuf.ProtoBuilderContext.ifNotBlank"]},{"name":"inline fun timestamp(value: Instant?, crossinline op: (Timestamp) -> Unit)","description":"elide.proto.impl.Protobuf.ProtoBuilderContext.timestamp","location":"packages/proto/proto-protobuf/elide.proto.impl/-protobuf/-proto-builder-context/timestamp.html","searchKeys":["timestamp","inline fun timestamp(value: Instant?, crossinline op: (Timestamp) -> Unit)","elide.proto.impl.Protobuf.ProtoBuilderContext.timestamp"]},{"name":"interface Builder : Timestamp.IBuilder<ProtoTimestamp> ","description":"elide.proto.impl.wkt.ProtoTimestamp.Builder","location":"packages/proto/proto-protobuf/elide.proto.impl.wkt/-proto-timestamp/-builder/index.html","searchKeys":["Builder","interface Builder : Timestamp.IBuilder<ProtoTimestamp> ","elide.proto.impl.wkt.ProtoTimestamp.Builder"]},{"name":"interface ProtoConvertible<M : Message> : ProtoSchemaConvertible","description":"elide.util.proto.adapters.ProtoConvertible","location":"packages/proto/proto-protobuf/elide.util.proto.adapters/-proto-convertible/index.html","searchKeys":["ProtoConvertible","interface ProtoConvertible<M : Message> : ProtoSchemaConvertible","elide.util.proto.adapters.ProtoConvertible"]},{"name":"interface ProtoModel<M : Message> : ProtoSchemaConvertible","description":"elide.util.proto.adapters.ProtoModel","location":"packages/proto/proto-protobuf/elide.util.proto.adapters/-proto-model/index.html","searchKeys":["ProtoModel","interface ProtoModel<M : Message> : ProtoSchemaConvertible","elide.util.proto.adapters.ProtoModel"]},{"name":"interface ProtoSchemaConvertible","description":"elide.util.proto.adapters.ProtoSchemaConvertible","location":"packages/proto/proto-protobuf/elide.util.proto.adapters/-proto-schema-convertible/index.html","searchKeys":["ProtoSchemaConvertible","interface ProtoSchemaConvertible","elide.util.proto.adapters.ProtoSchemaConvertible"]},{"name":"object Companion","description":"elide.proto.impl.Protobuf.ProtoBuilderContext.Companion","location":"packages/proto/proto-protobuf/elide.proto.impl/-protobuf/-proto-builder-context/-companion/index.html","searchKeys":["Companion","object Companion","elide.proto.impl.Protobuf.ProtoBuilderContext.Companion"]},{"name":"object Factory : DataContainer.Factory<ProtoDataContainer, ProtoDataContainer.Builder, ProtoDataFingerprint, ProtoDataFingerprint.Builder, HashAlgorithm, Encoding> ","description":"elide.proto.impl.data.ProtoDataContainer.Factory","location":"packages/proto/proto-protobuf/elide.proto.impl.data/-proto-data-container/-factory/index.html","searchKeys":["Factory","object Factory : DataContainer.Factory<ProtoDataContainer, ProtoDataContainer.Builder, ProtoDataFingerprint, ProtoDataFingerprint.Builder, HashAlgorithm, Encoding> ","elide.proto.impl.data.ProtoDataContainer.Factory"]},{"name":"object Factory : DataFingerprint.Factory<ProtoDataFingerprint, ProtoDataFingerprint.Builder, HashAlgorithm, Encoding> ","description":"elide.proto.impl.data.ProtoDataFingerprint.Factory","location":"packages/proto/proto-protobuf/elide.proto.impl.data/-proto-data-fingerprint/-factory/index.html","searchKeys":["Factory","object Factory : DataFingerprint.Factory<ProtoDataFingerprint, ProtoDataFingerprint.Builder, HashAlgorithm, Encoding> ","elide.proto.impl.data.ProtoDataFingerprint.Factory"]},{"name":"object Factory : Timestamp.Factory<ProtoTimestamp, ProtoTimestamp.TimestampBuilder> ","description":"elide.proto.impl.wkt.ProtoTimestamp.Factory","location":"packages/proto/proto-protobuf/elide.proto.impl.wkt/-proto-timestamp/-factory/index.html","searchKeys":["Factory","object Factory : Timestamp.Factory<ProtoTimestamp, ProtoTimestamp.TimestampBuilder> ","elide.proto.impl.wkt.ProtoTimestamp.Factory"]},{"name":"object Protobuf","description":"elide.proto.impl.Protobuf","location":"packages/proto/proto-protobuf/elide.proto.impl/-protobuf/index.html","searchKeys":["Protobuf","object Protobuf","elide.proto.impl.Protobuf"]},{"name":"open override fun algorithm(): HashAlgorithm","description":"elide.proto.impl.data.ProtoDataFingerprint.algorithm","location":"packages/proto/proto-protobuf/elide.proto.impl.data/-proto-data-fingerprint/algorithm.html","searchKeys":["algorithm","open override fun algorithm(): HashAlgorithm","elide.proto.impl.data.ProtoDataFingerprint.algorithm"]},{"name":"open override fun base(): KClass<*>?","description":"elide.proto.impl.AbstractElideProtobufProtocol.base","location":"packages/proto/proto-protobuf/elide.proto.impl/-abstract-elide-protobuf-protocol/base.html","searchKeys":["base","open override fun base(): KClass<*>?","elide.proto.impl.AbstractElideProtobufProtocol.base"]},{"name":"open override fun build(): ProtoDataContainer","description":"elide.proto.impl.data.ProtoDataContainer.Builder.build","location":"packages/proto/proto-protobuf/elide.proto.impl.data/-proto-data-container/-builder/build.html","searchKeys":["build","open override fun build(): ProtoDataContainer","elide.proto.impl.data.ProtoDataContainer.Builder.build"]},{"name":"open override fun build(): ProtoDataFingerprint","description":"elide.proto.impl.data.ProtoDataFingerprint.Builder.build","location":"packages/proto/proto-protobuf/elide.proto.impl.data/-proto-data-fingerprint/-builder/build.html","searchKeys":["build","open override fun build(): ProtoDataFingerprint","elide.proto.impl.data.ProtoDataFingerprint.Builder.build"]},{"name":"open override fun build(): ProtoTimestamp","description":"elide.proto.impl.wkt.ProtoTimestamp.TimestampBuilder.build","location":"packages/proto/proto-protobuf/elide.proto.impl.wkt/-proto-timestamp/-timestamp-builder/build.html","searchKeys":["build","open override fun build(): ProtoTimestamp","elide.proto.impl.wkt.ProtoTimestamp.TimestampBuilder.build"]},{"name":"open override fun builder(): ProtoDataContainer.Builder","description":"elide.proto.impl.data.ProtoDataContainer.Factory.builder","location":"packages/proto/proto-protobuf/elide.proto.impl.data/-proto-data-container/-factory/builder.html","searchKeys":["builder","open override fun builder(): ProtoDataContainer.Builder","elide.proto.impl.data.ProtoDataContainer.Factory.builder"]},{"name":"open override fun builder(): ProtoDataFingerprint.Builder","description":"elide.proto.impl.data.ProtoDataFingerprint.Factory.builder","location":"packages/proto/proto-protobuf/elide.proto.impl.data/-proto-data-fingerprint/-factory/builder.html","searchKeys":["builder","open override fun builder(): ProtoDataFingerprint.Builder","elide.proto.impl.data.ProtoDataFingerprint.Factory.builder"]},{"name":"open override fun builder(): ProtoTimestamp.TimestampBuilder","description":"elide.proto.impl.wkt.ProtoTimestamp.Factory.builder","location":"packages/proto/proto-protobuf/elide.proto.impl.wkt/-proto-timestamp/-factory/builder.html","searchKeys":["builder","open override fun builder(): ProtoTimestamp.TimestampBuilder","elide.proto.impl.wkt.ProtoTimestamp.Factory.builder"]},{"name":"open override fun bytes(): ByteArray","description":"elide.proto.impl.data.ProtoDataContainer.bytes","location":"packages/proto/proto-protobuf/elide.proto.impl.data/-proto-data-container/bytes.html","searchKeys":["bytes","open override fun bytes(): ByteArray","elide.proto.impl.data.ProtoDataContainer.bytes"]},{"name":"open override fun bytes(): ByteArray","description":"elide.proto.impl.data.ProtoDataFingerprint.bytes","location":"packages/proto/proto-protobuf/elide.proto.impl.data/-proto-data-fingerprint/bytes.html","searchKeys":["bytes","open override fun bytes(): ByteArray","elide.proto.impl.data.ProtoDataFingerprint.bytes"]},{"name":"open override fun copy(model: ProtoDataContainer): ProtoDataContainer","description":"elide.proto.impl.data.ProtoDataContainer.Factory.copy","location":"packages/proto/proto-protobuf/elide.proto.impl.data/-proto-data-container/-factory/copy.html","searchKeys":["copy","open override fun copy(model: ProtoDataContainer): ProtoDataContainer","elide.proto.impl.data.ProtoDataContainer.Factory.copy"]},{"name":"open override fun copy(model: ProtoDataFingerprint): ProtoDataFingerprint","description":"elide.proto.impl.data.ProtoDataFingerprint.Factory.copy","location":"packages/proto/proto-protobuf/elide.proto.impl.data/-proto-data-fingerprint/-factory/copy.html","searchKeys":["copy","open override fun copy(model: ProtoDataFingerprint): ProtoDataFingerprint","elide.proto.impl.data.ProtoDataFingerprint.Factory.copy"]},{"name":"open override fun copy(model: ProtoTimestamp): ProtoTimestamp","description":"elide.proto.impl.wkt.ProtoTimestamp.Factory.copy","location":"packages/proto/proto-protobuf/elide.proto.impl.wkt/-proto-timestamp/-factory/copy.html","searchKeys":["copy","open override fun copy(model: ProtoTimestamp): ProtoTimestamp","elide.proto.impl.wkt.ProtoTimestamp.Factory.copy"]},{"name":"open override fun create(algorithm: HashAlgorithm, base64: Base64Data): ProtoDataFingerprint","description":"elide.proto.impl.data.ProtoDataFingerprint.Factory.create","location":"packages/proto/proto-protobuf/elide.proto.impl.data/-proto-data-fingerprint/-factory/create.html","searchKeys":["create","open override fun create(algorithm: HashAlgorithm, base64: Base64Data): ProtoDataFingerprint","elide.proto.impl.data.ProtoDataFingerprint.Factory.create"]},{"name":"open override fun create(algorithm: HashAlgorithm, data: ByteArray): ProtoDataFingerprint","description":"elide.proto.impl.data.ProtoDataFingerprint.Factory.create","location":"packages/proto/proto-protobuf/elide.proto.impl.data/-proto-data-fingerprint/-factory/create.html","searchKeys":["create","open override fun create(algorithm: HashAlgorithm, data: ByteArray): ProtoDataFingerprint","elide.proto.impl.data.ProtoDataFingerprint.Factory.create"]},{"name":"open override fun create(algorithm: HashAlgorithm, data: String): ProtoDataFingerprint","description":"elide.proto.impl.data.ProtoDataFingerprint.Factory.create","location":"packages/proto/proto-protobuf/elide.proto.impl.data/-proto-data-fingerprint/-factory/create.html","searchKeys":["create","open override fun create(algorithm: HashAlgorithm, data: String): ProtoDataFingerprint","elide.proto.impl.data.ProtoDataFingerprint.Factory.create"]},{"name":"open override fun create(algorithm: HashAlgorithm, data: String, encoding: Encoding): ProtoDataFingerprint","description":"elide.proto.impl.data.ProtoDataFingerprint.Factory.create","location":"packages/proto/proto-protobuf/elide.proto.impl.data/-proto-data-fingerprint/-factory/create.html","searchKeys":["create","open override fun create(algorithm: HashAlgorithm, data: String, encoding: Encoding): ProtoDataFingerprint","elide.proto.impl.data.ProtoDataFingerprint.Factory.create"]},{"name":"open override fun create(algorithm: HashAlgorithm, hex: HexData): ProtoDataFingerprint","description":"elide.proto.impl.data.ProtoDataFingerprint.Factory.create","location":"packages/proto/proto-protobuf/elide.proto.impl.data/-proto-data-fingerprint/-factory/create.html","searchKeys":["create","open override fun create(algorithm: HashAlgorithm, hex: HexData): ProtoDataFingerprint","elide.proto.impl.data.ProtoDataFingerprint.Factory.create"]},{"name":"open override fun create(base64: Base64Data): ProtoDataContainer","description":"elide.proto.impl.data.ProtoDataContainer.Factory.create","location":"packages/proto/proto-protobuf/elide.proto.impl.data/-proto-data-container/-factory/create.html","searchKeys":["create","open override fun create(base64: Base64Data): ProtoDataContainer","elide.proto.impl.data.ProtoDataContainer.Factory.create"]},{"name":"open override fun create(data: ByteArray): ProtoDataContainer","description":"elide.proto.impl.data.ProtoDataContainer.Factory.create","location":"packages/proto/proto-protobuf/elide.proto.impl.data/-proto-data-container/-factory/create.html","searchKeys":["create","open override fun create(data: ByteArray): ProtoDataContainer","elide.proto.impl.data.ProtoDataContainer.Factory.create"]},{"name":"open override fun create(data: String): ProtoDataContainer","description":"elide.proto.impl.data.ProtoDataContainer.Factory.create","location":"packages/proto/proto-protobuf/elide.proto.impl.data/-proto-data-container/-factory/create.html","searchKeys":["create","open override fun create(data: String): ProtoDataContainer","elide.proto.impl.data.ProtoDataContainer.Factory.create"]},{"name":"open override fun create(encoding: Encoding, data: ByteArray): ProtoDataContainer","description":"elide.proto.impl.data.ProtoDataContainer.Factory.create","location":"packages/proto/proto-protobuf/elide.proto.impl.data/-proto-data-container/-factory/create.html","searchKeys":["create","open override fun create(encoding: Encoding, data: ByteArray): ProtoDataContainer","elide.proto.impl.data.ProtoDataContainer.Factory.create"]},{"name":"open override fun create(hex: HexData): ProtoDataContainer","description":"elide.proto.impl.data.ProtoDataContainer.Factory.create","location":"packages/proto/proto-protobuf/elide.proto.impl.data/-proto-data-container/-factory/create.html","searchKeys":["create","open override fun create(hex: HexData): ProtoDataContainer","elide.proto.impl.data.ProtoDataContainer.Factory.create"]},{"name":"open override fun create(op: (ProtoDataContainer.Builder) -> Unit): ProtoDataContainer","description":"elide.proto.impl.data.ProtoDataContainer.Factory.create","location":"packages/proto/proto-protobuf/elide.proto.impl.data/-proto-data-container/-factory/create.html","searchKeys":["create","open override fun create(op: (ProtoDataContainer.Builder) -> Unit): ProtoDataContainer","elide.proto.impl.data.ProtoDataContainer.Factory.create"]},{"name":"open override fun create(op: ProtoDataFingerprint.Builder.() -> Unit): ProtoDataFingerprint","description":"elide.proto.impl.data.ProtoDataFingerprint.Factory.create","location":"packages/proto/proto-protobuf/elide.proto.impl.data/-proto-data-fingerprint/-factory/create.html","searchKeys":["create","open override fun create(op: ProtoDataFingerprint.Builder.() -> Unit): ProtoDataFingerprint","elide.proto.impl.data.ProtoDataFingerprint.Factory.create"]},{"name":"open override fun defaultInstance(): ProtoDataContainer","description":"elide.proto.impl.data.ProtoDataContainer.Factory.defaultInstance","location":"packages/proto/proto-protobuf/elide.proto.impl.data/-proto-data-container/-factory/default-instance.html","searchKeys":["defaultInstance","open override fun defaultInstance(): ProtoDataContainer","elide.proto.impl.data.ProtoDataContainer.Factory.defaultInstance"]},{"name":"open override fun defaultInstance(): ProtoDataFingerprint","description":"elide.proto.impl.data.ProtoDataFingerprint.Factory.defaultInstance","location":"packages/proto/proto-protobuf/elide.proto.impl.data/-proto-data-fingerprint/-factory/default-instance.html","searchKeys":["defaultInstance","open override fun defaultInstance(): ProtoDataFingerprint","elide.proto.impl.data.ProtoDataFingerprint.Factory.defaultInstance"]},{"name":"open override fun defaultInstance(): ProtoTimestamp","description":"elide.proto.impl.wkt.ProtoTimestamp.Factory.defaultInstance","location":"packages/proto/proto-protobuf/elide.proto.impl.wkt/-proto-timestamp/-factory/default-instance.html","searchKeys":["defaultInstance","open override fun defaultInstance(): ProtoTimestamp","elide.proto.impl.wkt.ProtoTimestamp.Factory.defaultInstance"]},{"name":"open override fun dialects(): EnumSet<ElideProtocol.Dialect>","description":"elide.proto.impl.AbstractElideProtobufProtocol.dialects","location":"packages/proto/proto-protobuf/elide.proto.impl/-abstract-elide-protobuf-protocol/dialects.html","searchKeys":["dialects","open override fun dialects(): EnumSet<ElideProtocol.Dialect>","elide.proto.impl.AbstractElideProtobufProtocol.dialects"]},{"name":"open override fun empty(): ProtoDataContainer","description":"elide.proto.impl.data.ProtoDataContainer.Factory.empty","location":"packages/proto/proto-protobuf/elide.proto.impl.data/-proto-data-container/-factory/empty.html","searchKeys":["empty","open override fun empty(): ProtoDataContainer","elide.proto.impl.data.ProtoDataContainer.Factory.empty"]},{"name":"open override fun empty(): ProtoDataFingerprint","description":"elide.proto.impl.data.ProtoDataFingerprint.Factory.empty","location":"packages/proto/proto-protobuf/elide.proto.impl.data/-proto-data-fingerprint/-factory/empty.html","searchKeys":["empty","open override fun empty(): ProtoDataFingerprint","elide.proto.impl.data.ProtoDataFingerprint.Factory.empty"]},{"name":"open override fun empty(): ProtoTimestamp","description":"elide.proto.impl.wkt.ProtoTimestamp.Factory.empty","location":"packages/proto/proto-protobuf/elide.proto.impl.wkt/-proto-timestamp/-factory/empty.html","searchKeys":["empty","open override fun empty(): ProtoTimestamp","elide.proto.impl.wkt.ProtoTimestamp.Factory.empty"]},{"name":"open override fun encoding(): Encoding","description":"elide.proto.impl.data.ProtoDataFingerprint.encoding","location":"packages/proto/proto-protobuf/elide.proto.impl.data/-proto-data-fingerprint/encoding.html","searchKeys":["encoding","open override fun encoding(): Encoding","elide.proto.impl.data.ProtoDataFingerprint.encoding"]},{"name":"open override fun encoding(): Encoding?","description":"elide.proto.impl.data.ProtoDataContainer.encoding","location":"packages/proto/proto-protobuf/elide.proto.impl.data/-proto-data-container/encoding.html","searchKeys":["encoding","open override fun encoding(): Encoding?","elide.proto.impl.data.ProtoDataContainer.encoding"]},{"name":"open override fun engine(): ElideProtocol.ImplementationLibrary","description":"elide.proto.impl.AbstractElideProtobufProtocol.engine","location":"packages/proto/proto-protobuf/elide.proto.impl/-abstract-elide-protobuf-protocol/engine.html","searchKeys":["engine","open override fun engine(): ElideProtocol.ImplementationLibrary","elide.proto.impl.AbstractElideProtobufProtocol.engine"]},{"name":"open override fun factory(): ProtoDataContainer.Factory","description":"elide.proto.impl.data.ProtoDataContainer.factory","location":"packages/proto/proto-protobuf/elide.proto.impl.data/-proto-data-container/factory.html","searchKeys":["factory","open override fun factory(): ProtoDataContainer.Factory","elide.proto.impl.data.ProtoDataContainer.factory"]},{"name":"open override fun factory(): ProtoDataFingerprint.Factory","description":"elide.proto.impl.data.ProtoDataFingerprint.factory","location":"packages/proto/proto-protobuf/elide.proto.impl.data/-proto-data-fingerprint/factory.html","searchKeys":["factory","open override fun factory(): ProtoDataFingerprint.Factory","elide.proto.impl.data.ProtoDataFingerprint.factory"]},{"name":"open override fun factory(): ProtoTimestamp.Factory","description":"elide.proto.impl.wkt.ProtoTimestamp.factory","location":"packages/proto/proto-protobuf/elide.proto.impl.wkt/-proto-timestamp/factory.html","searchKeys":["factory","open override fun factory(): ProtoTimestamp.Factory","elide.proto.impl.wkt.ProtoTimestamp.factory"]},{"name":"open override fun fingerprint(): ProtoDataFingerprint?","description":"elide.proto.impl.data.ProtoDataContainer.fingerprint","location":"packages/proto/proto-protobuf/elide.proto.impl.data/-proto-data-container/fingerprint.html","searchKeys":["fingerprint","open override fun fingerprint(): ProtoDataFingerprint?","elide.proto.impl.data.ProtoDataContainer.fingerprint"]},{"name":"open override fun model(): DataModelStrategy<HashAlgorithm, Encoding, ProtoDataContainer, ProtoDataContainer.Builder, ProtoDataFingerprint, ProtoDataFingerprint.Builder, ProtoTimestamp, ProtoTimestamp.TimestampBuilder>","description":"elide.proto.impl.AbstractElideProtobufProtocol.ProtoModelStrategy.model","location":"packages/proto/proto-protobuf/elide.proto.impl/-abstract-elide-protobuf-protocol/-proto-model-strategy/model.html","searchKeys":["model","open override fun model(): DataModelStrategy<HashAlgorithm, Encoding, ProtoDataContainer, ProtoDataContainer.Builder, ProtoDataFingerprint, ProtoDataFingerprint.Builder, ProtoTimestamp, ProtoTimestamp.TimestampBuilder>","elide.proto.impl.AbstractElideProtobufProtocol.ProtoModelStrategy.model"]},{"name":"open override fun mutate(op: (ProtoDataContainer.Builder) -> Unit): ProtoDataContainer","description":"elide.proto.impl.data.ProtoDataContainer.mutate","location":"packages/proto/proto-protobuf/elide.proto.impl.data/-proto-data-container/mutate.html","searchKeys":["mutate","open override fun mutate(op: (ProtoDataContainer.Builder) -> Unit): ProtoDataContainer","elide.proto.impl.data.ProtoDataContainer.mutate"]},{"name":"open override fun setAlgorithm(value: HashAlgorithm): ProtoDataFingerprint.Builder","description":"elide.proto.impl.data.ProtoDataFingerprint.Builder.setAlgorithm","location":"packages/proto/proto-protobuf/elide.proto.impl.data/-proto-data-fingerprint/-builder/set-algorithm.html","searchKeys":["setAlgorithm","open override fun setAlgorithm(value: HashAlgorithm): ProtoDataFingerprint.Builder","elide.proto.impl.data.ProtoDataFingerprint.Builder.setAlgorithm"]},{"name":"open override fun setBase64(value: Base64Data): ProtoDataContainer.Builder","description":"elide.proto.impl.data.ProtoDataContainer.Builder.setBase64","location":"packages/proto/proto-protobuf/elide.proto.impl.data/-proto-data-container/-builder/set-base64.html","searchKeys":["setBase64","open override fun setBase64(value: Base64Data): ProtoDataContainer.Builder","elide.proto.impl.data.ProtoDataContainer.Builder.setBase64"]},{"name":"open override fun setData(value: ByteArray): ProtoDataContainer.Builder","description":"elide.proto.impl.data.ProtoDataContainer.Builder.setData","location":"packages/proto/proto-protobuf/elide.proto.impl.data/-proto-data-container/-builder/set-data.html","searchKeys":["setData","open override fun setData(value: ByteArray): ProtoDataContainer.Builder","elide.proto.impl.data.ProtoDataContainer.Builder.setData"]},{"name":"open override fun setData(value: String): ProtoDataContainer.Builder","description":"elide.proto.impl.data.ProtoDataContainer.Builder.setData","location":"packages/proto/proto-protobuf/elide.proto.impl.data/-proto-data-container/-builder/set-data.html","searchKeys":["setData","open override fun setData(value: String): ProtoDataContainer.Builder","elide.proto.impl.data.ProtoDataContainer.Builder.setData"]},{"name":"open override fun setEncoding(value: Encoding): ProtoDataFingerprint.Builder","description":"elide.proto.impl.data.ProtoDataFingerprint.Builder.setEncoding","location":"packages/proto/proto-protobuf/elide.proto.impl.data/-proto-data-fingerprint/-builder/set-encoding.html","searchKeys":["setEncoding","open override fun setEncoding(value: Encoding): ProtoDataFingerprint.Builder","elide.proto.impl.data.ProtoDataFingerprint.Builder.setEncoding"]},{"name":"open override fun setFingerprint(data: ByteArray): ProtoDataFingerprint.Builder","description":"elide.proto.impl.data.ProtoDataFingerprint.Builder.setFingerprint","location":"packages/proto/proto-protobuf/elide.proto.impl.data/-proto-data-fingerprint/-builder/set-fingerprint.html","searchKeys":["setFingerprint","open override fun setFingerprint(data: ByteArray): ProtoDataFingerprint.Builder","elide.proto.impl.data.ProtoDataFingerprint.Builder.setFingerprint"]},{"name":"open override fun setFingerprint(data: ByteArray, withAlgorith: HashAlgorithm): ProtoDataFingerprint.Builder","description":"elide.proto.impl.data.ProtoDataFingerprint.Builder.setFingerprint","location":"packages/proto/proto-protobuf/elide.proto.impl.data/-proto-data-fingerprint/-builder/set-fingerprint.html","searchKeys":["setFingerprint","open override fun setFingerprint(data: ByteArray, withAlgorith: HashAlgorithm): ProtoDataFingerprint.Builder","elide.proto.impl.data.ProtoDataFingerprint.Builder.setFingerprint"]},{"name":"open override fun setFingerprint(value: ByteArray, withAlgorith: HashAlgorithm, withEncoding: Encoding): ProtoDataFingerprint.Builder","description":"elide.proto.impl.data.ProtoDataFingerprint.Builder.setFingerprint","location":"packages/proto/proto-protobuf/elide.proto.impl.data/-proto-data-fingerprint/-builder/set-fingerprint.html","searchKeys":["setFingerprint","open override fun setFingerprint(value: ByteArray, withAlgorith: HashAlgorithm, withEncoding: Encoding): ProtoDataFingerprint.Builder","elide.proto.impl.data.ProtoDataFingerprint.Builder.setFingerprint"]},{"name":"open override fun setHex(value: HexData): ProtoDataContainer.Builder","description":"elide.proto.impl.data.ProtoDataContainer.Builder.setHex","location":"packages/proto/proto-protobuf/elide.proto.impl.data/-proto-data-container/-builder/set-hex.html","searchKeys":["setHex","open override fun setHex(value: HexData): ProtoDataContainer.Builder","elide.proto.impl.data.ProtoDataContainer.Builder.setHex"]},{"name":"open override fun strategy(): ElideProtocol.ModelAdapterStrategy","description":"elide.proto.impl.AbstractElideProtobufProtocol.strategy","location":"packages/proto/proto-protobuf/elide.proto.impl/-abstract-elide-protobuf-protocol/strategy.html","searchKeys":["strategy","open override fun strategy(): ElideProtocol.ModelAdapterStrategy","elide.proto.impl.AbstractElideProtobufProtocol.strategy"]},{"name":"open override fun toBuilder(): ProtoDataContainer.Builder","description":"elide.proto.impl.data.ProtoDataContainer.toBuilder","location":"packages/proto/proto-protobuf/elide.proto.impl.data/-proto-data-container/to-builder.html","searchKeys":["toBuilder","open override fun toBuilder(): ProtoDataContainer.Builder","elide.proto.impl.data.ProtoDataContainer.toBuilder"]},{"name":"open override fun toBuilder(): ProtoDataFingerprint.Builder","description":"elide.proto.impl.data.ProtoDataFingerprint.toBuilder","location":"packages/proto/proto-protobuf/elide.proto.impl.data/-proto-data-fingerprint/to-builder.html","searchKeys":["toBuilder","open override fun toBuilder(): ProtoDataFingerprint.Builder","elide.proto.impl.data.ProtoDataFingerprint.toBuilder"]},{"name":"open override fun toBuilder(): ProtoTimestamp.TimestampBuilder","description":"elide.proto.impl.wkt.ProtoTimestamp.toBuilder","location":"packages/proto/proto-protobuf/elide.proto.impl.wkt/-proto-timestamp/to-builder.html","searchKeys":["toBuilder","open override fun toBuilder(): ProtoTimestamp.TimestampBuilder","elide.proto.impl.wkt.ProtoTimestamp.toBuilder"]},{"name":"open override fun toDescriptor(): Descriptors.Descriptor","description":"elide.util.proto.adapters.ProtoConvertible.toDescriptor","location":"packages/proto/proto-protobuf/elide.util.proto.adapters/-proto-convertible/to-descriptor.html","searchKeys":["toDescriptor","open override fun toDescriptor(): Descriptors.Descriptor","elide.util.proto.adapters.ProtoConvertible.toDescriptor"]},{"name":"open override fun toDescriptor(): Descriptors.Descriptor","description":"elide.util.proto.adapters.ProtoModel.toDescriptor","location":"packages/proto/proto-protobuf/elide.util.proto.adapters/-proto-model/to-descriptor.html","searchKeys":["toDescriptor","open override fun toDescriptor(): Descriptors.Descriptor","elide.util.proto.adapters.ProtoModel.toDescriptor"]},{"name":"open override fun toInstant(): Instant","description":"elide.proto.impl.wkt.ProtoTimestamp.toInstant","location":"packages/proto/proto-protobuf/elide.proto.impl.wkt/-proto-timestamp/to-instant.html","searchKeys":["toInstant","open override fun toInstant(): Instant","elide.proto.impl.wkt.ProtoTimestamp.toInstant"]},{"name":"open override val compression: Boolean","description":"elide.proto.impl.AbstractElideProtobufProtocol.compression","location":"packages/proto/proto-protobuf/elide.proto.impl/-abstract-elide-protobuf-protocol/compression.html","searchKeys":["compression","open override val compression: Boolean","elide.proto.impl.AbstractElideProtobufProtocol.compression"]},{"name":"open override val nanos: Int","description":"elide.proto.impl.wkt.ProtoTimestamp.nanos","location":"packages/proto/proto-protobuf/elide.proto.impl.wkt/-proto-timestamp/nanos.html","searchKeys":["nanos","open override val nanos: Int","elide.proto.impl.wkt.ProtoTimestamp.nanos"]},{"name":"open override val reflection: Boolean","description":"elide.proto.impl.AbstractElideProtobufProtocol.reflection","location":"packages/proto/proto-protobuf/elide.proto.impl/-abstract-elide-protobuf-protocol/reflection.html","searchKeys":["reflection","open override val reflection: Boolean","elide.proto.impl.AbstractElideProtobufProtocol.reflection"]},{"name":"open override val seconds: Long","description":"elide.proto.impl.wkt.ProtoTimestamp.seconds","location":"packages/proto/proto-protobuf/elide.proto.impl.wkt/-proto-timestamp/seconds.html","searchKeys":["seconds","open override val seconds: Long","elide.proto.impl.wkt.ProtoTimestamp.seconds"]},{"name":"open override var algorithm: HashAlgorithm","description":"elide.proto.impl.data.ProtoDataFingerprint.Builder.algorithm","location":"packages/proto/proto-protobuf/elide.proto.impl.data/-proto-data-fingerprint/-builder/algorithm.html","searchKeys":["algorithm","open override var algorithm: HashAlgorithm","elide.proto.impl.data.ProtoDataFingerprint.Builder.algorithm"]},{"name":"open override var data: ByteArray","description":"elide.proto.impl.data.ProtoDataContainer.Builder.data","location":"packages/proto/proto-protobuf/elide.proto.impl.data/-proto-data-container/-builder/data.html","searchKeys":["data","open override var data: ByteArray","elide.proto.impl.data.ProtoDataContainer.Builder.data"]},{"name":"open override var encoding: Encoding","description":"elide.proto.impl.data.ProtoDataContainer.Builder.encoding","location":"packages/proto/proto-protobuf/elide.proto.impl.data/-proto-data-container/-builder/encoding.html","searchKeys":["encoding","open override var encoding: Encoding","elide.proto.impl.data.ProtoDataContainer.Builder.encoding"]},{"name":"open override var encoding: Encoding","description":"elide.proto.impl.data.ProtoDataFingerprint.Builder.encoding","location":"packages/proto/proto-protobuf/elide.proto.impl.data/-proto-data-fingerprint/-builder/encoding.html","searchKeys":["encoding","open override var encoding: Encoding","elide.proto.impl.data.ProtoDataFingerprint.Builder.encoding"]},{"name":"open override var fingerprint: ByteArray","description":"elide.proto.impl.data.ProtoDataFingerprint.Builder.fingerprint","location":"packages/proto/proto-protobuf/elide.proto.impl.data/-proto-data-fingerprint/-builder/fingerprint.html","searchKeys":["fingerprint","open override var fingerprint: ByteArray","elide.proto.impl.data.ProtoDataFingerprint.Builder.fingerprint"]},{"name":"open override var nanos: Int","description":"elide.proto.impl.wkt.ProtoTimestamp.TimestampBuilder.nanos","location":"packages/proto/proto-protobuf/elide.proto.impl.wkt/-proto-timestamp/-timestamp-builder/nanos.html","searchKeys":["nanos","open override var nanos: Int","elide.proto.impl.wkt.ProtoTimestamp.TimestampBuilder.nanos"]},{"name":"open override var seconds: Long","description":"elide.proto.impl.wkt.ProtoTimestamp.TimestampBuilder.seconds","location":"packages/proto/proto-protobuf/elide.proto.impl.wkt/-proto-timestamp/-timestamp-builder/seconds.html","searchKeys":["seconds","open override var seconds: Long","elide.proto.impl.wkt.ProtoTimestamp.TimestampBuilder.seconds"]},{"name":"CRASH","description":"elide.tool.err.ErrorHandler.Action.CRASH","location":"packages/cli/elide.tool.err/-error-handler/-action/-c-r-a-s-h/index.html","searchKeys":["CRASH","CRASH","elide.tool.err.ErrorHandler.Action.CRASH"]},{"name":"DEFAULT","description":"elide.tool.err.ErrorHandler.Action.DEFAULT","location":"packages/cli/elide.tool.err/-error-handler/-action/-d-e-f-a-u-l-t/index.html","searchKeys":["DEFAULT","DEFAULT","elide.tool.err.ErrorHandler.Action.DEFAULT"]},{"name":"DONE","description":"elide.tool.testing.TestContext.TestStage.DONE","location":"packages/cli/elide.tool.testing/-test-context/-test-stage/-d-o-n-e/index.html","searchKeys":["DONE","DONE","elide.tool.testing.TestContext.TestStage.DONE"]},{"name":"DONE","description":"elide.tool.testing.TestEvent.Type.DONE","location":"packages/cli/elide.tool.testing/-test-event/-type/-d-o-n-e/index.html","searchKeys":["DONE","DONE","elide.tool.testing.TestEvent.Type.DONE"]},{"name":"DROP","description":"elide.tool.testing.TestResult.Result.DROP","location":"packages/cli/elide.tool.testing/-test-result/-result/-d-r-o-p/index.html","searchKeys":["DROP","DROP","elide.tool.testing.TestResult.Result.DROP"]},{"name":"EXECUTE","description":"elide.tool.testing.TestEvent.Type.EXECUTE","location":"packages/cli/elide.tool.testing/-test-event/-type/-e-x-e-c-u-t-e/index.html","searchKeys":["EXECUTE","EXECUTE","elide.tool.testing.TestEvent.Type.EXECUTE"]},{"name":"EXECUTING","description":"elide.tool.testing.TestContext.TestStage.EXECUTING","location":"packages/cli/elide.tool.testing/-test-context/-test-stage/-e-x-e-c-u-t-i-n-g/index.html","searchKeys":["EXECUTING","EXECUTING","elide.tool.testing.TestContext.TestStage.EXECUTING"]},{"name":"FAIL","description":"elide.tool.testing.TestResult.Result.FAIL","location":"packages/cli/elide.tool.testing/-test-result/-result/-f-a-i-l/index.html","searchKeys":["FAIL","FAIL","elide.tool.testing.TestResult.Result.FAIL"]},{"name":"Fail","description":"elide.tool.cli.output.TestState.Fail","location":"packages/cli/elide.tool.cli.output/-test-state/-fail/index.html","searchKeys":["Fail","Fail","elide.tool.cli.output.TestState.Fail"]},{"name":"GROOVY","description":"elide.tool.cli.GuestLanguage.GROOVY","location":"packages/cli/elide.tool.cli/-guest-language/-g-r-o-o-v-y/index.html","searchKeys":["GROOVY","GROOVY","elide.tool.cli.GuestLanguage.GROOVY"]},{"name":"JAVA","description":"elide.tool.cli.GuestLanguage.JAVA","location":"packages/cli/elide.tool.cli/-guest-language/-j-a-v-a/index.html","searchKeys":["JAVA","JAVA","elide.tool.cli.GuestLanguage.JAVA"]},{"name":"JS","description":"elide.tool.cli.GuestLanguage.JS","location":"packages/cli/elide.tool.cli/-guest-language/-j-s/index.html","searchKeys":["JS","JS","elide.tool.cli.GuestLanguage.JS"]},{"name":"JVM","description":"elide.tool.cli.GuestLanguage.JVM","location":"packages/cli/elide.tool.cli/-guest-language/-j-v-m/index.html","searchKeys":["JVM","JVM","elide.tool.cli.GuestLanguage.JVM"]},{"name":"KOTLIN","description":"elide.tool.cli.GuestLanguage.KOTLIN","location":"packages/cli/elide.tool.cli/-guest-language/-k-o-t-l-i-n/index.html","searchKeys":["KOTLIN","KOTLIN","elide.tool.cli.GuestLanguage.KOTLIN"]},{"name":"LLVM","description":"elide.tool.cli.GuestLanguage.LLVM","location":"packages/cli/elide.tool.cli/-guest-language/-l-l-v-m/index.html","searchKeys":["LLVM","LLVM","elide.tool.cli.GuestLanguage.LLVM"]},{"name":"PASS","description":"elide.tool.testing.TestResult.Result.PASS","location":"packages/cli/elide.tool.testing/-test-result/-result/-p-a-s-s/index.html","searchKeys":["PASS","PASS","elide.tool.testing.TestResult.Result.PASS"]},{"name":"PENDING","description":"elide.tool.testing.TestContext.TestStage.PENDING","location":"packages/cli/elide.tool.testing/-test-context/-test-stage/-p-e-n-d-i-n-g/index.html","searchKeys":["PENDING","PENDING","elide.tool.testing.TestContext.TestStage.PENDING"]},{"name":"PENDING","description":"elide.tool.testing.TestEvent.Type.PENDING","location":"packages/cli/elide.tool.testing/-test-event/-type/-p-e-n-d-i-n-g/index.html","searchKeys":["PENDING","PENDING","elide.tool.testing.TestEvent.Type.PENDING"]},{"name":"POST_EXECUTE","description":"elide.tool.testing.TestEvent.Type.POST_EXECUTE","location":"packages/cli/elide.tool.testing/-test-event/-type/-p-o-s-t_-e-x-e-c-u-t-e/index.html","searchKeys":["POST_EXECUTE","POST_EXECUTE","elide.tool.testing.TestEvent.Type.POST_EXECUTE"]},{"name":"PRE_EXECUTE","description":"elide.tool.testing.TestEvent.Type.PRE_EXECUTE","location":"packages/cli/elide.tool.testing/-test-event/-type/-p-r-e_-e-x-e-c-u-t-e/index.html","searchKeys":["PRE_EXECUTE","PRE_EXECUTE","elide.tool.testing.TestEvent.Type.PRE_EXECUTE"]},{"name":"PYTHON","description":"elide.tool.cli.GuestLanguage.PYTHON","location":"packages/cli/elide.tool.cli/-guest-language/-p-y-t-h-o-n/index.html","searchKeys":["PYTHON","PYTHON","elide.tool.cli.GuestLanguage.PYTHON"]},{"name":"Pass","description":"elide.tool.cli.output.TestState.Pass","location":"packages/cli/elide.tool.cli.output/-test-state/-pass/index.html","searchKeys":["Pass","Pass","elide.tool.cli.output.TestState.Pass"]},{"name":"RESULT","description":"elide.tool.testing.TestEvent.Type.RESULT","location":"packages/cli/elide.tool.testing/-test-event/-type/-r-e-s-u-l-t/index.html","searchKeys":["RESULT","RESULT","elide.tool.testing.TestEvent.Type.RESULT"]},{"name":"RETHROW","description":"elide.tool.err.ErrorHandler.Action.RETHROW","location":"packages/cli/elide.tool.err/-error-handler/-action/-r-e-t-h-r-o-w/index.html","searchKeys":["RETHROW","RETHROW","elide.tool.err.ErrorHandler.Action.RETHROW"]},{"name":"RUBY","description":"elide.tool.cli.GuestLanguage.RUBY","location":"packages/cli/elide.tool.cli/-guest-language/-r-u-b-y/index.html","searchKeys":["RUBY","RUBY","elide.tool.cli.GuestLanguage.RUBY"]},{"name":"Running","description":"elide.tool.cli.output.TestState.Running","location":"packages/cli/elide.tool.cli.output/-test-state/-running/index.html","searchKeys":["Running","Running","elide.tool.cli.output.TestState.Running"]},{"name":"SCALA","description":"elide.tool.cli.GuestLanguage.SCALA","location":"packages/cli/elide.tool.cli/-guest-language/-s-c-a-l-a/index.html","searchKeys":["SCALA","SCALA","elide.tool.cli.GuestLanguage.SCALA"]},{"name":"SKIP","description":"elide.tool.testing.TestResult.Result.SKIP","location":"packages/cli/elide.tool.testing/-test-result/-result/-s-k-i-p/index.html","searchKeys":["SKIP","SKIP","elide.tool.testing.TestResult.Result.SKIP"]},{"name":"SUPPRESS","description":"elide.tool.err.ErrorHandler.Action.SUPPRESS","location":"packages/cli/elide.tool.err/-error-handler/-action/-s-u-p-p-r-e-s-s/index.html","searchKeys":["SUPPRESS","SUPPRESS","elide.tool.err.ErrorHandler.Action.SUPPRESS"]},{"name":"WARMUP","description":"elide.tool.testing.TestEvent.Type.WARMUP","location":"packages/cli/elide.tool.testing/-test-event/-type/-w-a-r-m-u-p/index.html","searchKeys":["WARMUP","WARMUP","elide.tool.testing.TestEvent.Type.WARMUP"]},{"name":"WASM","description":"elide.tool.cli.GuestLanguage.WASM","location":"packages/cli/elide.tool.cli/-guest-language/-w-a-s-m/index.html","searchKeys":["WASM","WASM","elide.tool.cli.GuestLanguage.WASM"]},{"name":"abstract class AbstractScriptEngineFactory : ScriptEngineFactory","description":"elide.tool.control.AbstractScriptEngineFactory","location":"packages/cli/elide.tool.control/-abstract-script-engine-factory/index.html","searchKeys":["AbstractScriptEngineFactory","abstract class AbstractScriptEngineFactory : ScriptEngineFactory","elide.tool.control.AbstractScriptEngineFactory"]},{"name":"abstract class AbstractTest<Context : TestContext> : NamedTest<Context> ","description":"elide.tool.testing.AbstractTest","location":"packages/cli/elide.tool.testing/-abstract-test/index.html","searchKeys":["AbstractTest","abstract class AbstractTest<Context : TestContext> : NamedTest<Context> ","elide.tool.testing.AbstractTest"]},{"name":"abstract class AbstractToolCommand<Context : CommandContext> : Callable<Int> , Runnable, CommandApi","description":"elide.tool.cli.AbstractToolCommand","location":"packages/cli/elide.tool.cli/-abstract-tool-command/index.html","searchKeys":["AbstractToolCommand","abstract class AbstractToolCommand<Context : CommandContext> : Callable<Int> , Runnable, CommandApi","elide.tool.cli.AbstractToolCommand"]},{"name":"abstract class CommandTestRunner<Test : Testable<Context>, Context : TestContext, Cmd : CommandContext> : TestCase<Test, Context> ","description":"elide.tool.testing.CommandTestRunner","location":"packages/cli/elide.tool.testing/-command-test-runner/index.html","searchKeys":["CommandTestRunner","abstract class CommandTestRunner<Test : Testable<Context>, Context : TestContext, Cmd : CommandContext> : TestCase<Test, Context> ","elide.tool.testing.CommandTestRunner"]},{"name":"abstract class ExecutionController : ExecutionControl","description":"elide.tool.cli.control.ExecutionController","location":"packages/cli/elide.tool.cli.control/-execution-controller/index.html","searchKeys":["ExecutionController","abstract class ExecutionController : ExecutionControl","elide.tool.cli.control.ExecutionController"]},{"name":"abstract class LanguageCondition(language: String) : Condition","description":"elide.tool.engine.LanguageCondition","location":"packages/cli/elide.tool.engine/-language-condition/index.html","searchKeys":["LanguageCondition","abstract class LanguageCondition(language: String) : Condition","elide.tool.engine.LanguageCondition"]},{"name":"abstract class SelfTest : AbstractTest<SelfTest.SelfTestContext> ","description":"elide.tool.testing.SelfTest","location":"packages/cli/elide.tool.testing/-self-test/index.html","searchKeys":["SelfTest","abstract class SelfTest : AbstractTest<SelfTest.SelfTestContext> ","elide.tool.testing.SelfTest"]},{"name":"abstract class TestRunner<Test : Testable<Context>, Context : TestContext> : Runnable, TestCase<Test, Context> ","description":"elide.tool.testing.TestRunner","location":"packages/cli/elide.tool.testing/-test-runner/index.html","searchKeys":["TestRunner","abstract class TestRunner<Test : Testable<Context>, Context : TestContext> : Runnable, TestCase<Test, Context> ","elide.tool.testing.TestRunner"]},{"name":"abstract fun assignResult(testResult: TestResult)","description":"elide.tool.testing.SelfTest.SelfTestContext.assignResult","location":"packages/cli/elide.tool.testing/-self-test/-self-test-context/assign-result.html","searchKeys":["assignResult","abstract fun assignResult(testResult: TestResult)","elide.tool.testing.SelfTest.SelfTestContext.assignResult"]},{"name":"abstract fun cacheDirectory(create: Boolean = false): WorkdirManager.WorkdirHandle","description":"elide.tool.io.WorkdirManager.cacheDirectory","location":"packages/cli/elide.tool.io/-workdir-manager/cache-directory.html","searchKeys":["cacheDirectory","abstract fun cacheDirectory(create: Boolean = false): WorkdirManager.WorkdirHandle","elide.tool.io.WorkdirManager.cacheDirectory"]},{"name":"abstract fun configRoot(): WorkdirManager.WorkdirHandle","description":"elide.tool.io.WorkdirManager.configRoot","location":"packages/cli/elide.tool.io/-workdir-manager/config-root.html","searchKeys":["configRoot","abstract fun configRoot(): WorkdirManager.WorkdirHandle","elide.tool.io.WorkdirManager.configRoot"]},{"name":"abstract fun context(): Context","description":"elide.tool.testing.TestCase.context","location":"packages/cli/elide.tool.testing/-test-case/context.html","searchKeys":["context","abstract fun context(): Context","elide.tool.testing.TestCase.context"]},{"name":"abstract fun crash(exitCode: Int? = null): ErrorHandler.ErrorActionStrategy.Crash","description":"elide.tool.err.ErrorHandler.ErrorHandlerContext.crash","location":"packages/cli/elide.tool.err/-error-handler/-error-handler-context/crash.html","searchKeys":["crash","abstract fun crash(exitCode: Int? = null): ErrorHandler.ErrorActionStrategy.Crash","elide.tool.err.ErrorHandler.ErrorHandlerContext.crash"]},{"name":"abstract fun default(warning: String? = null): ErrorHandler.ErrorActionStrategy.Default","description":"elide.tool.err.ErrorHandler.ErrorHandlerContext.default","location":"packages/cli/elide.tool.err/-error-handler/-error-handler-context/default.html","searchKeys":["default","abstract fun default(warning: String? = null): ErrorHandler.ErrorActionStrategy.Default","elide.tool.err.ErrorHandler.ErrorHandlerContext.default"]},{"name":"abstract fun flightRecorderDirectory(create: Boolean = false): WorkdirManager.WorkdirHandle","description":"elide.tool.io.WorkdirManager.flightRecorderDirectory","location":"packages/cli/elide.tool.io/-workdir-manager/flight-recorder-directory.html","searchKeys":["flightRecorderDirectory","abstract fun flightRecorderDirectory(create: Boolean = false): WorkdirManager.WorkdirHandle","elide.tool.io.WorkdirManager.flightRecorderDirectory"]},{"name":"abstract fun loadClass(className: String?): Value","description":"elide.tool.cli.control.ExecutionController.loadClass","location":"packages/cli/elide.tool.cli.control/-execution-controller/load-class.html","searchKeys":["loadClass","abstract fun loadClass(className: String?): Value","elide.tool.cli.control.ExecutionController.loadClass"]},{"name":"abstract fun nativesDirectory(): WorkdirManager.WorkdirHandle","description":"elide.tool.io.WorkdirManager.nativesDirectory","location":"packages/cli/elide.tool.io/-workdir-manager/natives-directory.html","searchKeys":["nativesDirectory","abstract fun nativesDirectory(): WorkdirManager.WorkdirHandle","elide.tool.io.WorkdirManager.nativesDirectory"]},{"name":"abstract fun notify(stage: TestContext.TestStage)","description":"elide.tool.testing.SelfTest.SelfTestContext.notify","location":"packages/cli/elide.tool.testing/-self-test/-self-test-context/notify.html","searchKeys":["notify","abstract fun notify(stage: TestContext.TestStage)","elide.tool.testing.SelfTest.SelfTestContext.notify"]},{"name":"abstract fun projectRoot(): WorkdirManager.WorkdirHandle?","description":"elide.tool.io.WorkdirManager.projectRoot","location":"packages/cli/elide.tool.io/-workdir-manager/project-root.html","searchKeys":["projectRoot","abstract fun projectRoot(): WorkdirManager.WorkdirHandle?","elide.tool.io.WorkdirManager.projectRoot"]},{"name":"abstract fun rethrow(override: Throwable? = null): ErrorHandler.ErrorActionStrategy.Rethrow","description":"elide.tool.err.ErrorHandler.ErrorHandlerContext.rethrow","location":"packages/cli/elide.tool.err/-error-handler/-error-handler-context/rethrow.html","searchKeys":["rethrow","abstract fun rethrow(override: Throwable? = null): ErrorHandler.ErrorActionStrategy.Rethrow","elide.tool.err.ErrorHandler.ErrorHandlerContext.rethrow"]},{"name":"abstract fun suppress(warning: String? = null): ErrorHandler.ErrorActionStrategy.Suppress","description":"elide.tool.err.ErrorHandler.ErrorHandlerContext.suppress","location":"packages/cli/elide.tool.err/-error-handler/-error-handler-context/suppress.html","searchKeys":["suppress","abstract fun suppress(warning: String? = null): ErrorHandler.ErrorActionStrategy.Suppress","elide.tool.err.ErrorHandler.ErrorHandlerContext.suppress"]},{"name":"abstract fun tmpDirectory(create: Boolean = false): WorkdirManager.WorkdirHandle","description":"elide.tool.io.WorkdirManager.tmpDirectory","location":"packages/cli/elide.tool.io/-workdir-manager/tmp-directory.html","searchKeys":["tmpDirectory","abstract fun tmpDirectory(create: Boolean = false): WorkdirManager.WorkdirHandle","elide.tool.io.WorkdirManager.tmpDirectory"]},{"name":"abstract fun toFile(): File","description":"elide.tool.io.WorkdirManager.WorkdirHandle.toFile","location":"packages/cli/elide.tool.io/-workdir-manager/-workdir-handle/to-file.html","searchKeys":["toFile","abstract fun toFile(): File","elide.tool.io.WorkdirManager.WorkdirHandle.toFile"]},{"name":"abstract fun toPath(): Path","description":"elide.tool.io.WorkdirManager.WorkdirHandle.toPath","location":"packages/cli/elide.tool.io/-workdir-manager/-workdir-handle/to-path.html","searchKeys":["toPath","abstract fun toPath(): Path","elide.tool.io.WorkdirManager.WorkdirHandle.toPath"]},{"name":"abstract fun workingRoot(): File","description":"elide.tool.io.WorkdirManager.workingRoot","location":"packages/cli/elide.tool.io/-workdir-manager/working-root.html","searchKeys":["workingRoot","abstract fun workingRoot(): File","elide.tool.io.WorkdirManager.workingRoot"]},{"name":"abstract suspend fun Context.invoke(state: CommandState): CommandResult","description":"elide.tool.cli.AbstractToolCommand.invoke","location":"packages/cli/elide.tool.cli/-abstract-tool-command/invoke.html","searchKeys":["invoke","abstract suspend fun Context.invoke(state: CommandState): CommandResult","elide.tool.cli.AbstractToolCommand.invoke"]},{"name":"abstract suspend fun Context.test()","description":"elide.tool.testing.Testable.test","location":"packages/cli/elide.tool.testing/-testable/test.html","searchKeys":["test","abstract suspend fun Context.test()","elide.tool.testing.Testable.test"]},{"name":"abstract suspend fun ErrorHandler.ErrorHandlerContext.handleError(event: ErrorHandler.ErrorEvent): ErrorHandler.ErrorActionStrategy","description":"elide.tool.err.ErrorHandler.handleError","location":"packages/cli/elide.tool.err/-error-handler/handle-error.html","searchKeys":["handleError","abstract suspend fun ErrorHandler.ErrorHandlerContext.handleError(event: ErrorHandler.ErrorEvent): ErrorHandler.ErrorActionStrategy","elide.tool.err.ErrorHandler.handleError"]},{"name":"abstract suspend fun onTestEvent(event: TestEvent<T, C>)","description":"elide.tool.testing.TestEventListener.onTestEvent","location":"packages/cli/elide.tool.testing/-test-event-listener/on-test-event.html","searchKeys":["onTestEvent","abstract suspend fun onTestEvent(event: TestEvent<T, C>)","elide.tool.testing.TestEventListener.onTestEvent"]},{"name":"abstract suspend fun recordError(event: ErrorHandler.ErrorEvent): Job","description":"elide.tool.err.ErrorRecorder.recordError","location":"packages/cli/elide.tool.err/-error-recorder/record-error.html","searchKeys":["recordError","abstract suspend fun recordError(event: ErrorHandler.ErrorEvent): Job","elide.tool.err.ErrorRecorder.recordError"]},{"name":"abstract suspend fun resolveProjectAsync(): Deferred<ProjectInfo?>","description":"elide.tool.project.ProjectManager.resolveProjectAsync","location":"packages/cli/elide.tool.project/-project-manager/resolve-project-async.html","searchKeys":["resolveProjectAsync","abstract suspend fun resolveProjectAsync(): Deferred<ProjectInfo?>","elide.tool.project.ProjectManager.resolveProjectAsync"]},{"name":"abstract suspend fun runTest(case: Testable<Context>, listener: TestEventListener<Test, Context>): TestResult","description":"elide.tool.testing.TestRunner.runTest","location":"packages/cli/elide.tool.testing/-test-runner/run-test.html","searchKeys":["runTest","abstract suspend fun runTest(case: Testable<Context>, listener: TestEventListener<Test, Context>): TestResult","elide.tool.testing.TestRunner.runTest"]},{"name":"abstract val accessLogging: Logger","description":"elide.tool.cli.CommandContext.accessLogging","location":"packages/cli/elide.tool.cli/-command-context/access-logging.html","searchKeys":["accessLogging","abstract val accessLogging: Logger","elide.tool.cli.CommandContext.accessLogging"]},{"name":"abstract val action: ErrorHandler.Action","description":"elide.tool.err.ErrorHandler.ErrorActionStrategy.action","location":"packages/cli/elide.tool.err/-error-handler/-error-action-strategy/action.html","searchKeys":["action","abstract val action: ErrorHandler.Action","elide.tool.err.ErrorHandler.ErrorActionStrategy.action"]},{"name":"abstract val commandResult: AtomicReference<CommandResult>","description":"elide.tool.cli.CommandApi.commandResult","location":"packages/cli/elide.tool.cli/-command-api/command-result.html","searchKeys":["commandResult","abstract val commandResult: AtomicReference<CommandResult>","elide.tool.cli.CommandApi.commandResult"]},{"name":"abstract val context: C","description":"elide.tool.testing.TestEvent.context","location":"packages/cli/elide.tool.testing/-test-event/context.html","searchKeys":["context","abstract val context: C","elide.tool.testing.TestEvent.context"]},{"name":"abstract val context: ErrorHandler.ErrorContext","description":"elide.tool.err.ErrorHandler.ErrorEvent.context","location":"packages/cli/elide.tool.err/-error-handler/-error-event/context.html","searchKeys":["context","abstract val context: ErrorHandler.ErrorContext","elide.tool.err.ErrorHandler.ErrorEvent.context"]},{"name":"abstract val effectiveResult: TestResult.Result","description":"elide.tool.testing.TestResult.effectiveResult","location":"packages/cli/elide.tool.testing/-test-result/effective-result.html","searchKeys":["effectiveResult","abstract val effectiveResult: TestResult.Result","elide.tool.testing.TestResult.effectiveResult"]},{"name":"abstract val end: Instant","description":"elide.tool.testing.TestResult.end","location":"packages/cli/elide.tool.testing/-test-result/end.html","searchKeys":["end","abstract val end: Instant","elide.tool.testing.TestResult.end"]},{"name":"abstract val engine: GuestLanguage","description":"elide.tool.cli.options.AbstractEngineOptions.engine","location":"packages/cli/elide.tool.cli.options/-abstract-engine-options/engine.html","searchKeys":["engine","abstract val engine: GuestLanguage","elide.tool.cli.options.AbstractEngineOptions.engine"]},{"name":"abstract val err: Throwable?","description":"elide.tool.testing.TestResult.err","location":"packages/cli/elide.tool.testing/-test-result/err.html","searchKeys":["err","abstract val err: Throwable?","elide.tool.testing.TestResult.err"]},{"name":"abstract val errOutput: StringBuilder?","description":"elide.tool.testing.TestResult.errOutput","location":"packages/cli/elide.tool.testing/-test-result/err-output.html","searchKeys":["errOutput","abstract val errOutput: StringBuilder?","elide.tool.testing.TestResult.errOutput"]},{"name":"abstract val error: Throwable","description":"elide.tool.err.ErrorHandler.ErrorEvent.error","location":"packages/cli/elide.tool.err/-error-handler/-error-event/error.html","searchKeys":["error","abstract val error: Throwable","elide.tool.err.ErrorHandler.ErrorEvent.error"]},{"name":"abstract val event: ErrorHandler.ErrorEvent","description":"elide.tool.err.ErrorHandler.ErrorActionStrategy.event","location":"packages/cli/elide.tool.err/-error-handler/-error-action-strategy/event.html","searchKeys":["event","abstract val event: ErrorHandler.ErrorEvent","elide.tool.err.ErrorHandler.ErrorActionStrategy.event"]},{"name":"abstract val event: ErrorHandler.ErrorEvent","description":"elide.tool.err.ErrorHandler.ErrorHandlerContext.event","location":"packages/cli/elide.tool.err/-error-handler/-error-handler-context/event.html","searchKeys":["event","abstract val event: ErrorHandler.ErrorEvent","elide.tool.err.ErrorHandler.ErrorHandlerContext.event"]},{"name":"abstract val exitCode: Int","description":"elide.tool.cli.CommandResult.exitCode","location":"packages/cli/elide.tool.cli/-command-result/exit-code.html","searchKeys":["exitCode","abstract val exitCode: Int","elide.tool.cli.CommandResult.exitCode"]},{"name":"abstract val frames: List<ErrorHandler.ErrorStackFrame>?","description":"elide.tool.err.ErrorHandler.ErrorEvent.frames","location":"packages/cli/elide.tool.err/-error-handler/-error-event/frames.html","searchKeys":["frames","abstract val frames: List<ErrorHandler.ErrorStackFrame>?","elide.tool.err.ErrorHandler.ErrorEvent.frames"]},{"name":"abstract val group: String","description":"elide.tool.engine.NativeLibInfo.group","location":"packages/cli/elide.tool.engine/-native-lib-info/group.html","searchKeys":["group","abstract val group: String","elide.tool.engine.NativeLibInfo.group"]},{"name":"abstract val info: TestInfo","description":"elide.tool.testing.TestResult.info","location":"packages/cli/elide.tool.testing/-test-result/info.html","searchKeys":["info","abstract val info: TestInfo","elide.tool.testing.TestResult.info"]},{"name":"abstract val language: GuestLanguage?","description":"elide.tool.err.ErrorHandler.ErrorEvent.language","location":"packages/cli/elide.tool.err/-error-handler/-error-event/language.html","searchKeys":["language","abstract val language: GuestLanguage?","elide.tool.err.ErrorHandler.ErrorEvent.language"]},{"name":"abstract val logger: Logger","description":"elide.tool.err.ErrorHandler.ErrorActionStrategy.logger","location":"packages/cli/elide.tool.err/-error-handler/-error-action-strategy/logger.html","searchKeys":["logger","abstract val logger: Logger","elide.tool.err.ErrorHandler.ErrorActionStrategy.logger"]},{"name":"abstract val logging: Logger","description":"elide.tool.cli.CommandContext.logging","location":"packages/cli/elide.tool.cli/-command-context/logging.html","searchKeys":["logging","abstract val logging: Logger","elide.tool.cli.CommandContext.logging"]},{"name":"abstract val logging: Logger","description":"elide.tool.err.ErrorHandler.logging","location":"packages/cli/elide.tool.err/-error-handler/logging.html","searchKeys":["logging","abstract val logging: Logger","elide.tool.err.ErrorHandler.logging"]},{"name":"abstract val messages: Collection<String>","description":"elide.tool.testing.TestResult.messages","location":"packages/cli/elide.tool.testing/-test-result/messages.html","searchKeys":["messages","abstract val messages: Collection<String>","elide.tool.testing.TestResult.messages"]},{"name":"abstract val name: String","description":"elide.tool.engine.NativeLibInfo.name","location":"packages/cli/elide.tool.engine/-native-lib-info/name.html","searchKeys":["name","abstract val name: String","elide.tool.engine.NativeLibInfo.name"]},{"name":"abstract val name: String","description":"elide.tool.testing.NamedTest.name","location":"packages/cli/elide.tool.testing/-named-test/name.html","searchKeys":["name","abstract val name: String","elide.tool.testing.NamedTest.name"]},{"name":"abstract val ok: Boolean","description":"elide.tool.cli.CommandResult.ok","location":"packages/cli/elide.tool.cli/-command-result/ok.html","searchKeys":["ok","abstract val ok: Boolean","elide.tool.cli.CommandResult.ok"]},{"name":"abstract val output: StringBuilder?","description":"elide.tool.testing.TestResult.output","location":"packages/cli/elide.tool.testing/-test-result/output.html","searchKeys":["output","abstract val output: StringBuilder?","elide.tool.testing.TestResult.output"]},{"name":"abstract val path: String","description":"elide.tool.engine.NativeLibInfo.path","location":"packages/cli/elide.tool.engine/-native-lib-info/path.html","searchKeys":["path","abstract val path: String","elide.tool.engine.NativeLibInfo.path"]},{"name":"abstract val path: String","description":"elide.tool.project.ProjectConfig.path","location":"packages/cli/elide.tool.project/-project-config/path.html","searchKeys":["path","abstract val path: String","elide.tool.project.ProjectConfig.path"]},{"name":"abstract val readable: Boolean","description":"elide.tool.io.WorkdirManager.WorkdirHandle.readable","location":"packages/cli/elide.tool.io/-workdir-manager/-workdir-handle/readable.html","searchKeys":["readable","abstract val readable: Boolean","elide.tool.io.WorkdirManager.WorkdirHandle.readable"]},{"name":"abstract val result: AtomicReference<TestResult>","description":"elide.tool.testing.TestContext.result","location":"packages/cli/elide.tool.testing/-test-context/result.html","searchKeys":["result","abstract val result: AtomicReference<TestResult>","elide.tool.testing.TestContext.result"]},{"name":"abstract val result: TestResult.Result","description":"elide.tool.testing.TestResult.result","location":"packages/cli/elide.tool.testing/-test-result/result.html","searchKeys":["result","abstract val result: TestResult.Result","elide.tool.testing.TestResult.result"]},{"name":"abstract val result: TestResult?","description":"elide.tool.testing.TestEvent.result","location":"packages/cli/elide.tool.testing/-test-event/result.html","searchKeys":["result","abstract val result: TestResult?","elide.tool.testing.TestEvent.result"]},{"name":"abstract val serverLogging: Logger","description":"elide.tool.cli.CommandContext.serverLogging","location":"packages/cli/elide.tool.cli/-command-context/server-logging.html","searchKeys":["serverLogging","abstract val serverLogging: Logger","elide.tool.cli.CommandContext.serverLogging"]},{"name":"abstract val stacktrace: String?","description":"elide.tool.err.ErrorHandler.ErrorEvent.stacktrace","location":"packages/cli/elide.tool.err/-error-handler/-error-event/stacktrace.html","searchKeys":["stacktrace","abstract val stacktrace: String?","elide.tool.err.ErrorHandler.ErrorEvent.stacktrace"]},{"name":"abstract val stage: TestContext.TestStage","description":"elide.tool.testing.TestContext.stage","location":"packages/cli/elide.tool.testing/-test-context/stage.html","searchKeys":["stage","abstract val stage: TestContext.TestStage","elide.tool.testing.TestContext.stage"]},{"name":"abstract val start: Instant","description":"elide.tool.testing.TestResult.start","location":"packages/cli/elide.tool.testing/-test-result/start.html","searchKeys":["start","abstract val start: Instant","elide.tool.testing.TestResult.start"]},{"name":"abstract val staticName: String","description":"elide.tool.engine.NativeLibInfo.staticName","location":"packages/cli/elide.tool.engine/-native-lib-info/static-name.html","searchKeys":["staticName","abstract val staticName: String","elide.tool.engine.NativeLibInfo.staticName"]},{"name":"abstract val test: T","description":"elide.tool.testing.TestEvent.test","location":"packages/cli/elide.tool.testing/-test-event/test.html","searchKeys":["test","abstract val test: T","elide.tool.testing.TestEvent.test"]},{"name":"abstract val test: Testable<*>","description":"elide.tool.testing.TestResult.test","location":"packages/cli/elide.tool.testing/-test-result/test.html","searchKeys":["test","abstract val test: Testable<*>","elide.tool.testing.TestResult.test"]},{"name":"abstract val timestamp: Instant","description":"elide.tool.err.ErrorHandler.ErrorEvent.timestamp","location":"packages/cli/elide.tool.err/-error-handler/-error-event/timestamp.html","searchKeys":["timestamp","abstract val timestamp: Instant","elide.tool.err.ErrorHandler.ErrorEvent.timestamp"]},{"name":"abstract val type: TestEvent.Type","description":"elide.tool.testing.TestEvent.type","location":"packages/cli/elide.tool.testing/-test-event/type.html","searchKeys":["type","abstract val type: TestEvent.Type","elide.tool.testing.TestEvent.type"]},{"name":"abstract val uuid: Uuid","description":"elide.tool.err.ErrorHandler.ErrorEvent.uuid","location":"packages/cli/elide.tool.err/-error-handler/-error-event/uuid.html","searchKeys":["uuid","abstract val uuid: Uuid","elide.tool.err.ErrorHandler.ErrorEvent.uuid"]},{"name":"abstract val writable: Boolean","description":"elide.tool.io.WorkdirManager.WorkdirHandle.writable","location":"packages/cli/elide.tool.io/-workdir-manager/-workdir-handle/writable.html","searchKeys":["writable","abstract val writable: Boolean","elide.tool.io.WorkdirManager.WorkdirHandle.writable"]},{"name":"abstract var debug: Boolean","description":"elide.tool.cli.options.LanguageOptions.debug","location":"packages/cli/elide.tool.cli.options/-language-options/debug.html","searchKeys":["debug","abstract var debug: Boolean","elide.tool.cli.options.LanguageOptions.debug"]},{"name":"annotation class EmbeddedTest(val name: String = \"\")","description":"elide.tool.annotations.EmbeddedTest","location":"packages/cli/elide.tool.annotations/-embedded-test/index.html","searchKeys":["EmbeddedTest","annotation class EmbeddedTest(val name: String = \"\")","elide.tool.annotations.EmbeddedTest"]},{"name":"class AccessControlOptions : RunnableOptionsMixin","description":"elide.tool.cli.options.AccessControlOptions","location":"packages/cli/elide.tool.cli.options/-access-control-options/index.html","searchKeys":["AccessControlOptions","class AccessControlOptions : RunnableOptionsMixin","elide.tool.cli.options.AccessControlOptions"]},{"name":"class AssertionFailure(name: String, message: String? = null, err: Throwable? = null) : RuntimeException","description":"elide.tool.testing.TestContext.AssertionFailure","location":"packages/cli/elide.tool.testing/-test-context/-assertion-failure/index.html","searchKeys":["AssertionFailure","class AssertionFailure(name: String, message: String? = null, err: Throwable? = null) : RuntimeException","elide.tool.testing.TestContext.AssertionFailure"]},{"name":"class CommonOptions : OptionsMixin","description":"elide.tool.cli.options.CommonOptions","location":"packages/cli/elide.tool.cli.options/-common-options/index.html","searchKeys":["CommonOptions","class CommonOptions : OptionsMixin","elide.tool.cli.options.CommonOptions"]},{"name":"class ElideTool : ToolCommandBase<CommandContext> ","description":"elide.tool.cli.ElideTool","location":"packages/cli/elide.tool.cli/-elide-tool/index.html","searchKeys":["ElideTool","class ElideTool : ToolCommandBase<CommandContext> ","elide.tool.cli.ElideTool"]},{"name":"class EngineJavaScriptOptions : AbstractEngineOptions","description":"elide.tool.cli.options.EngineJavaScriptOptions","location":"packages/cli/elide.tool.cli.options/-engine-java-script-options/index.html","searchKeys":["EngineJavaScriptOptions","class EngineJavaScriptOptions : AbstractEngineOptions","elide.tool.cli.options.EngineJavaScriptOptions"]},{"name":"class EngineTest : SelfTest","description":"elide.tool.engine.EngineTest","location":"packages/cli/elide.tool.engine/-engine-test/index.html","searchKeys":["EngineTest","class EngineTest : SelfTest","elide.tool.engine.EngineTest"]},{"name":"class EpollTest : SelfTest","description":"elide.tool.transport.EpollTest","location":"packages/cli/elide.tool.transport/-epoll-test/index.html","searchKeys":["EpollTest","class EpollTest : SelfTest","elide.tool.transport.EpollTest"]},{"name":"class ErrorHandlerAcquireTest : SelfTest","description":"elide.tool.err.ErrorHandlerAcquireTest","location":"packages/cli/elide.tool.err/-error-handler-acquire-test/index.html","searchKeys":["ErrorHandlerAcquireTest","class ErrorHandlerAcquireTest : SelfTest","elide.tool.err.ErrorHandlerAcquireTest"]},{"name":"class ErrorRecorderAcquireTest : SelfTest","description":"elide.tool.err.ErrorRecorderAcquireTest","location":"packages/cli/elide.tool.err/-error-recorder-acquire-test/index.html","searchKeys":["ErrorRecorderAcquireTest","class ErrorRecorderAcquireTest : SelfTest","elide.tool.err.ErrorRecorderAcquireTest"]},{"name":"class ErrorRecorderWriteTest : SelfTest","description":"elide.tool.err.ErrorRecorderWriteTest","location":"packages/cli/elide.tool.err/-error-recorder-write-test/index.html","searchKeys":["ErrorRecorderWriteTest","class ErrorRecorderWriteTest : SelfTest","elide.tool.err.ErrorRecorderWriteTest"]},{"name":"class EspressoExecutionControlProvider : ExecutionControlProvider","description":"elide.tool.cli.control.EspressoExecutionControlProvider","location":"packages/cli/elide.tool.cli.control/-espresso-execution-control-provider/index.html","searchKeys":["EspressoExecutionControlProvider","class EspressoExecutionControlProvider : ExecutionControlProvider","elide.tool.cli.control.EspressoExecutionControlProvider"]},{"name":"class JsEngineCondition : LanguageCondition","description":"elide.tool.engine.JsEngineCondition","location":"packages/cli/elide.tool.engine/-js-engine-condition/index.html","searchKeys":["JsEngineCondition","class JsEngineCondition : LanguageCondition","elide.tool.engine.JsEngineCondition"]},{"name":"class JsEngineTest : SelfTest","description":"elide.tool.engine.JsEngineTest","location":"packages/cli/elide.tool.engine/-js-engine-test/index.html","searchKeys":["JsEngineTest","class JsEngineTest : SelfTest","elide.tool.engine.JsEngineTest"]},{"name":"class JvmEngineCondition : LanguageCondition","description":"elide.tool.engine.JvmEngineCondition","location":"packages/cli/elide.tool.engine/-jvm-engine-condition/index.html","searchKeys":["JvmEngineCondition","class JvmEngineCondition : LanguageCondition","elide.tool.engine.JvmEngineCondition"]},{"name":"class JvmEngineTest : SelfTest","description":"elide.tool.engine.JvmEngineTest","location":"packages/cli/elide.tool.engine/-jvm-engine-test/index.html","searchKeys":["JvmEngineTest","class JvmEngineTest : SelfTest","elide.tool.engine.JvmEngineTest"]},{"name":"class JvmScriptEngine : AbstractScriptEngineFactory","description":"elide.tool.control.JvmScriptEngine","location":"packages/cli/elide.tool.control/-jvm-script-engine/index.html","searchKeys":["JvmScriptEngine","class JvmScriptEngine : AbstractScriptEngineFactory","elide.tool.control.JvmScriptEngine"]},{"name":"class KQueueTest : SelfTest","description":"elide.tool.transport.KQueueTest","location":"packages/cli/elide.tool.transport/-k-queue-test/index.html","searchKeys":["KQueueTest","class KQueueTest : SelfTest","elide.tool.transport.KQueueTest"]},{"name":"class Lazy<T> : Supplier<T?> ","description":"elide.tool.cli.control.Lazy","location":"packages/cli/elide.tool.cli.control/-lazy/index.html","searchKeys":["Lazy","class Lazy<T> : Supplier<T?> ","elide.tool.cli.control.Lazy"]},{"name":"class LlvmEngineCondition : LanguageCondition","description":"elide.tool.engine.LlvmEngineCondition","location":"packages/cli/elide.tool.engine/-llvm-engine-condition/index.html","searchKeys":["LlvmEngineCondition","class LlvmEngineCondition : LanguageCondition","elide.tool.engine.LlvmEngineCondition"]},{"name":"class NativeCryptoTest : SelfTest","description":"elide.tool.transport.NativeCryptoTest","location":"packages/cli/elide.tool.transport/-native-crypto-test/index.html","searchKeys":["NativeCryptoTest","class NativeCryptoTest : SelfTest","elide.tool.transport.NativeCryptoTest"]},{"name":"class NativeTransportTest : SelfTest","description":"elide.tool.transport.NativeTransportTest","location":"packages/cli/elide.tool.transport/-native-transport-test/index.html","searchKeys":["NativeTransportTest","class NativeTransportTest : SelfTest","elide.tool.transport.NativeTransportTest"]},{"name":"class OsArchTest : SelfTest","description":"elide.tool.engine.OsArchTest","location":"packages/cli/elide.tool.engine/-os-arch-test/index.html","searchKeys":["OsArchTest","class OsArchTest : SelfTest","elide.tool.engine.OsArchTest"]},{"name":"class OsNameTest : SelfTest","description":"elide.tool.engine.OsNameTest","location":"packages/cli/elide.tool.engine/-os-name-test/index.html","searchKeys":["OsNameTest","class OsNameTest : SelfTest","elide.tool.engine.OsNameTest"]},{"name":"class PythonEngineCondition : LanguageCondition","description":"elide.tool.engine.PythonEngineCondition","location":"packages/cli/elide.tool.engine/-python-engine-condition/index.html","searchKeys":["PythonEngineCondition","class PythonEngineCondition : LanguageCondition","elide.tool.engine.PythonEngineCondition"]},{"name":"class PythonEngineTest : SelfTest","description":"elide.tool.engine.PythonEngineTest","location":"packages/cli/elide.tool.engine/-python-engine-test/index.html","searchKeys":["PythonEngineTest","class PythonEngineTest : SelfTest","elide.tool.engine.PythonEngineTest"]},{"name":"class PythonScriptEngine : AbstractScriptEngineFactory","description":"elide.tool.control.PythonScriptEngine","location":"packages/cli/elide.tool.control/-python-script-engine/index.html","searchKeys":["PythonScriptEngine","class PythonScriptEngine : AbstractScriptEngineFactory","elide.tool.control.PythonScriptEngine"]},{"name":"class RubyEngineCondition : LanguageCondition","description":"elide.tool.engine.RubyEngineCondition","location":"packages/cli/elide.tool.engine/-ruby-engine-condition/index.html","searchKeys":["RubyEngineCondition","class RubyEngineCondition : LanguageCondition","elide.tool.engine.RubyEngineCondition"]},{"name":"class RubyEngineTest : SelfTest","description":"elide.tool.engine.RubyEngineTest","location":"packages/cli/elide.tool.engine/-ruby-engine-test/index.html","searchKeys":["RubyEngineTest","class RubyEngineTest : SelfTest","elide.tool.engine.RubyEngineTest"]},{"name":"class RubyScriptEngine : AbstractScriptEngineFactory","description":"elide.tool.control.RubyScriptEngine","location":"packages/cli/elide.tool.control/-ruby-script-engine/index.html","searchKeys":["RubyScriptEngine","class RubyScriptEngine : AbstractScriptEngineFactory","elide.tool.control.RubyScriptEngine"]},{"name":"class SanitySelfTest : SelfTest","description":"elide.tool.testing.SanitySelfTest","location":"packages/cli/elide.tool.testing/-sanity-self-test/index.html","searchKeys":["SanitySelfTest","class SanitySelfTest : SelfTest","elide.tool.testing.SanitySelfTest"]},{"name":"class TempWriteTest : SelfTest","description":"elide.tool.io.TempWriteTest","location":"packages/cli/elide.tool.io/-temp-write-test/index.html","searchKeys":["TempWriteTest","class TempWriteTest : SelfTest","elide.tool.io.TempWriteTest"]},{"name":"class TestCacheWrite : SelfTest","description":"elide.tool.io.TestCacheWrite","location":"packages/cli/elide.tool.io/-test-cache-write/index.html","searchKeys":["TestCacheWrite","class TestCacheWrite : SelfTest","elide.tool.io.TestCacheWrite"]},{"name":"class WasmEngineCondition : LanguageCondition","description":"elide.tool.engine.WasmEngineCondition","location":"packages/cli/elide.tool.engine/-wasm-engine-condition/index.html","searchKeys":["WasmEngineCondition","class WasmEngineCondition : LanguageCondition","elide.tool.engine.WasmEngineCondition"]},{"name":"class WasmEngineTest : SelfTest","description":"elide.tool.engine.WasmEngineTest","location":"packages/cli/elide.tool.engine/-wasm-engine-test/index.html","searchKeys":["WasmEngineTest","class WasmEngineTest : SelfTest","elide.tool.engine.WasmEngineTest"]},{"name":"class WorkdirTest : SelfTest","description":"elide.tool.io.WorkdirTest","location":"packages/cli/elide.tool.io/-workdir-test/index.html","searchKeys":["WorkdirTest","class WorkdirTest : SelfTest","elide.tool.io.WorkdirTest"]},{"name":"const val DEFAULT_ERROR_EXIT_CODE: Int","description":"elide.tool.cli.CommandResult.Companion.DEFAULT_ERROR_EXIT_CODE","location":"packages/cli/elide.tool.cli/-command-result/-companion/-d-e-f-a-u-l-t_-e-r-r-o-r_-e-x-i-t_-c-o-d-e.html","searchKeys":["DEFAULT_ERROR_EXIT_CODE","const val DEFAULT_ERROR_EXIT_CODE: Int","elide.tool.cli.CommandResult.Companion.DEFAULT_ERROR_EXIT_CODE"]},{"name":"const val DEFAULT_ERROR_MESSAGE: String","description":"elide.tool.cli.CommandResult.Companion.DEFAULT_ERROR_MESSAGE","location":"packages/cli/elide.tool.cli/-command-result/-companion/-d-e-f-a-u-l-t_-e-r-r-o-r_-m-e-s-s-a-g-e.html","searchKeys":["DEFAULT_ERROR_MESSAGE","const val DEFAULT_ERROR_MESSAGE: String","elide.tool.cli.CommandResult.Companion.DEFAULT_ERROR_MESSAGE"]},{"name":"const val ENGINE_JS: String","description":"elide.tool.cli.ENGINE_JS","location":"packages/cli/elide.tool.cli/-e-n-g-i-n-e_-j-s.html","searchKeys":["ENGINE_JS","const val ENGINE_JS: String","elide.tool.cli.ENGINE_JS"]},{"name":"const val ENGINE_JVM: String","description":"elide.tool.cli.ENGINE_JVM","location":"packages/cli/elide.tool.cli/-e-n-g-i-n-e_-j-v-m.html","searchKeys":["ENGINE_JVM","const val ENGINE_JVM: String","elide.tool.cli.ENGINE_JVM"]},{"name":"const val ENGINE_LLVM: String","description":"elide.tool.cli.ENGINE_LLVM","location":"packages/cli/elide.tool.cli/-e-n-g-i-n-e_-l-l-v-m.html","searchKeys":["ENGINE_LLVM","const val ENGINE_LLVM: String","elide.tool.cli.ENGINE_LLVM"]},{"name":"const val ENGINE_PYTHON: String","description":"elide.tool.cli.ENGINE_PYTHON","location":"packages/cli/elide.tool.cli/-e-n-g-i-n-e_-p-y-t-h-o-n.html","searchKeys":["ENGINE_PYTHON","const val ENGINE_PYTHON: String","elide.tool.cli.ENGINE_PYTHON"]},{"name":"const val ENGINE_RUBY: String","description":"elide.tool.cli.ENGINE_RUBY","location":"packages/cli/elide.tool.cli/-e-n-g-i-n-e_-r-u-b-y.html","searchKeys":["ENGINE_RUBY","const val ENGINE_RUBY: String","elide.tool.cli.ENGINE_RUBY"]},{"name":"const val ENGINE_WASM: String","description":"elide.tool.cli.ENGINE_WASM","location":"packages/cli/elide.tool.cli/-e-n-g-i-n-e_-w-a-s-m.html","searchKeys":["ENGINE_WASM","const val ENGINE_WASM: String","elide.tool.cli.ENGINE_WASM"]},{"name":"const val TOOL_NAME: String","description":"elide.tool.cli.ElideTool.Companion.TOOL_NAME","location":"packages/cli/elide.tool.cli/-elide-tool/-companion/-t-o-o-l_-n-a-m-e.html","searchKeys":["TOOL_NAME","const val TOOL_NAME: String","elide.tool.cli.ElideTool.Companion.TOOL_NAME"]},{"name":"constructor()","description":"elide.tool.cli.AbstractToolCommand.AbstractToolCommand","location":"packages/cli/elide.tool.cli/-abstract-tool-command/-abstract-tool-command.html","searchKeys":["AbstractToolCommand","constructor()","elide.tool.cli.AbstractToolCommand.AbstractToolCommand"]},{"name":"constructor()","description":"elide.tool.cli.ElideTool.ElideTool","location":"packages/cli/elide.tool.cli/-elide-tool/-elide-tool.html","searchKeys":["ElideTool","constructor()","elide.tool.cli.ElideTool.ElideTool"]},{"name":"constructor()","description":"elide.tool.cli.control.EspressoExecutionControlProvider.EspressoExecutionControlProvider","location":"packages/cli/elide.tool.cli.control/-espresso-execution-control-provider/-espresso-execution-control-provider.html","searchKeys":["EspressoExecutionControlProvider","constructor()","elide.tool.cli.control.EspressoExecutionControlProvider.EspressoExecutionControlProvider"]},{"name":"constructor()","description":"elide.tool.cli.options.AccessControlOptions.AccessControlOptions","location":"packages/cli/elide.tool.cli.options/-access-control-options/-access-control-options.html","searchKeys":["AccessControlOptions","constructor()","elide.tool.cli.options.AccessControlOptions.AccessControlOptions"]},{"name":"constructor()","description":"elide.tool.cli.options.CommonOptions.CommonOptions","location":"packages/cli/elide.tool.cli.options/-common-options/-common-options.html","searchKeys":["CommonOptions","constructor()","elide.tool.cli.options.CommonOptions.CommonOptions"]},{"name":"constructor()","description":"elide.tool.cli.options.EngineJavaScriptOptions.EngineJavaScriptOptions","location":"packages/cli/elide.tool.cli.options/-engine-java-script-options/-engine-java-script-options.html","searchKeys":["EngineJavaScriptOptions","constructor()","elide.tool.cli.options.EngineJavaScriptOptions.EngineJavaScriptOptions"]},{"name":"constructor()","description":"elide.tool.control.JvmScriptEngine.JvmScriptEngine","location":"packages/cli/elide.tool.control/-jvm-script-engine/-jvm-script-engine.html","searchKeys":["JvmScriptEngine","constructor()","elide.tool.control.JvmScriptEngine.JvmScriptEngine"]},{"name":"constructor()","description":"elide.tool.control.PythonScriptEngine.PythonScriptEngine","location":"packages/cli/elide.tool.control/-python-script-engine/-python-script-engine.html","searchKeys":["PythonScriptEngine","constructor()","elide.tool.control.PythonScriptEngine.PythonScriptEngine"]},{"name":"constructor()","description":"elide.tool.control.RubyScriptEngine.RubyScriptEngine","location":"packages/cli/elide.tool.control/-ruby-script-engine/-ruby-script-engine.html","searchKeys":["RubyScriptEngine","constructor()","elide.tool.control.RubyScriptEngine.RubyScriptEngine"]},{"name":"constructor()","description":"elide.tool.engine.EngineTest.EngineTest","location":"packages/cli/elide.tool.engine/-engine-test/-engine-test.html","searchKeys":["EngineTest","constructor()","elide.tool.engine.EngineTest.EngineTest"]},{"name":"constructor()","description":"elide.tool.engine.JsEngineCondition.JsEngineCondition","location":"packages/cli/elide.tool.engine/-js-engine-condition/-js-engine-condition.html","searchKeys":["JsEngineCondition","constructor()","elide.tool.engine.JsEngineCondition.JsEngineCondition"]},{"name":"constructor()","description":"elide.tool.engine.JsEngineTest.JsEngineTest","location":"packages/cli/elide.tool.engine/-js-engine-test/-js-engine-test.html","searchKeys":["JsEngineTest","constructor()","elide.tool.engine.JsEngineTest.JsEngineTest"]},{"name":"constructor()","description":"elide.tool.engine.JvmEngineCondition.JvmEngineCondition","location":"packages/cli/elide.tool.engine/-jvm-engine-condition/-jvm-engine-condition.html","searchKeys":["JvmEngineCondition","constructor()","elide.tool.engine.JvmEngineCondition.JvmEngineCondition"]},{"name":"constructor()","description":"elide.tool.engine.JvmEngineTest.JvmEngineTest","location":"packages/cli/elide.tool.engine/-jvm-engine-test/-jvm-engine-test.html","searchKeys":["JvmEngineTest","constructor()","elide.tool.engine.JvmEngineTest.JvmEngineTest"]},{"name":"constructor()","description":"elide.tool.engine.LlvmEngineCondition.LlvmEngineCondition","location":"packages/cli/elide.tool.engine/-llvm-engine-condition/-llvm-engine-condition.html","searchKeys":["LlvmEngineCondition","constructor()","elide.tool.engine.LlvmEngineCondition.LlvmEngineCondition"]},{"name":"constructor()","description":"elide.tool.engine.OsArchTest.OsArchTest","location":"packages/cli/elide.tool.engine/-os-arch-test/-os-arch-test.html","searchKeys":["OsArchTest","constructor()","elide.tool.engine.OsArchTest.OsArchTest"]},{"name":"constructor()","description":"elide.tool.engine.OsNameTest.OsNameTest","location":"packages/cli/elide.tool.engine/-os-name-test/-os-name-test.html","searchKeys":["OsNameTest","constructor()","elide.tool.engine.OsNameTest.OsNameTest"]},{"name":"constructor()","description":"elide.tool.engine.PythonEngineCondition.PythonEngineCondition","location":"packages/cli/elide.tool.engine/-python-engine-condition/-python-engine-condition.html","searchKeys":["PythonEngineCondition","constructor()","elide.tool.engine.PythonEngineCondition.PythonEngineCondition"]},{"name":"constructor()","description":"elide.tool.engine.PythonEngineTest.PythonEngineTest","location":"packages/cli/elide.tool.engine/-python-engine-test/-python-engine-test.html","searchKeys":["PythonEngineTest","constructor()","elide.tool.engine.PythonEngineTest.PythonEngineTest"]},{"name":"constructor()","description":"elide.tool.engine.RubyEngineCondition.RubyEngineCondition","location":"packages/cli/elide.tool.engine/-ruby-engine-condition/-ruby-engine-condition.html","searchKeys":["RubyEngineCondition","constructor()","elide.tool.engine.RubyEngineCondition.RubyEngineCondition"]},{"name":"constructor()","description":"elide.tool.engine.RubyEngineTest.RubyEngineTest","location":"packages/cli/elide.tool.engine/-ruby-engine-test/-ruby-engine-test.html","searchKeys":["RubyEngineTest","constructor()","elide.tool.engine.RubyEngineTest.RubyEngineTest"]},{"name":"constructor()","description":"elide.tool.engine.WasmEngineCondition.WasmEngineCondition","location":"packages/cli/elide.tool.engine/-wasm-engine-condition/-wasm-engine-condition.html","searchKeys":["WasmEngineCondition","constructor()","elide.tool.engine.WasmEngineCondition.WasmEngineCondition"]},{"name":"constructor()","description":"elide.tool.engine.WasmEngineTest.WasmEngineTest","location":"packages/cli/elide.tool.engine/-wasm-engine-test/-wasm-engine-test.html","searchKeys":["WasmEngineTest","constructor()","elide.tool.engine.WasmEngineTest.WasmEngineTest"]},{"name":"constructor()","description":"elide.tool.err.ErrorHandlerAcquireTest.ErrorHandlerAcquireTest","location":"packages/cli/elide.tool.err/-error-handler-acquire-test/-error-handler-acquire-test.html","searchKeys":["ErrorHandlerAcquireTest","constructor()","elide.tool.err.ErrorHandlerAcquireTest.ErrorHandlerAcquireTest"]},{"name":"constructor()","description":"elide.tool.err.ErrorRecorderAcquireTest.ErrorRecorderAcquireTest","location":"packages/cli/elide.tool.err/-error-recorder-acquire-test/-error-recorder-acquire-test.html","searchKeys":["ErrorRecorderAcquireTest","constructor()","elide.tool.err.ErrorRecorderAcquireTest.ErrorRecorderAcquireTest"]},{"name":"constructor()","description":"elide.tool.err.ErrorRecorderWriteTest.ErrorRecorderWriteTest","location":"packages/cli/elide.tool.err/-error-recorder-write-test/-error-recorder-write-test.html","searchKeys":["ErrorRecorderWriteTest","constructor()","elide.tool.err.ErrorRecorderWriteTest.ErrorRecorderWriteTest"]},{"name":"constructor()","description":"elide.tool.io.TempWriteTest.TempWriteTest","location":"packages/cli/elide.tool.io/-temp-write-test/-temp-write-test.html","searchKeys":["TempWriteTest","constructor()","elide.tool.io.TempWriteTest.TempWriteTest"]},{"name":"constructor()","description":"elide.tool.io.TestCacheWrite.TestCacheWrite","location":"packages/cli/elide.tool.io/-test-cache-write/-test-cache-write.html","searchKeys":["TestCacheWrite","constructor()","elide.tool.io.TestCacheWrite.TestCacheWrite"]},{"name":"constructor()","description":"elide.tool.io.WorkdirTest.WorkdirTest","location":"packages/cli/elide.tool.io/-workdir-test/-workdir-test.html","searchKeys":["WorkdirTest","constructor()","elide.tool.io.WorkdirTest.WorkdirTest"]},{"name":"constructor()","description":"elide.tool.testing.AbstractTest.AbstractTest","location":"packages/cli/elide.tool.testing/-abstract-test/-abstract-test.html","searchKeys":["AbstractTest","constructor()","elide.tool.testing.AbstractTest.AbstractTest"]},{"name":"constructor()","description":"elide.tool.testing.CommandTestRunner.CommandTestRunner","location":"packages/cli/elide.tool.testing/-command-test-runner/-command-test-runner.html","searchKeys":["CommandTestRunner","constructor()","elide.tool.testing.CommandTestRunner.CommandTestRunner"]},{"name":"constructor()","description":"elide.tool.testing.SanitySelfTest.SanitySelfTest","location":"packages/cli/elide.tool.testing/-sanity-self-test/-sanity-self-test.html","searchKeys":["SanitySelfTest","constructor()","elide.tool.testing.SanitySelfTest.SanitySelfTest"]},{"name":"constructor()","description":"elide.tool.testing.SelfTest.SelfTest","location":"packages/cli/elide.tool.testing/-self-test/-self-test.html","searchKeys":["SelfTest","constructor()","elide.tool.testing.SelfTest.SelfTest"]},{"name":"constructor()","description":"elide.tool.testing.TestRunner.TestRunner","location":"packages/cli/elide.tool.testing/-test-runner/-test-runner.html","searchKeys":["TestRunner","constructor()","elide.tool.testing.TestRunner.TestRunner"]},{"name":"constructor()","description":"elide.tool.transport.EpollTest.EpollTest","location":"packages/cli/elide.tool.transport/-epoll-test/-epoll-test.html","searchKeys":["EpollTest","constructor()","elide.tool.transport.EpollTest.EpollTest"]},{"name":"constructor()","description":"elide.tool.transport.KQueueTest.KQueueTest","location":"packages/cli/elide.tool.transport/-k-queue-test/-k-queue-test.html","searchKeys":["KQueueTest","constructor()","elide.tool.transport.KQueueTest.KQueueTest"]},{"name":"constructor()","description":"elide.tool.transport.NativeCryptoTest.NativeCryptoTest","location":"packages/cli/elide.tool.transport/-native-crypto-test/-native-crypto-test.html","searchKeys":["NativeCryptoTest","constructor()","elide.tool.transport.NativeCryptoTest.NativeCryptoTest"]},{"name":"constructor()","description":"elide.tool.transport.NativeTransportTest.NativeTransportTest","location":"packages/cli/elide.tool.transport/-native-transport-test/-native-transport-test.html","searchKeys":["NativeTransportTest","constructor()","elide.tool.transport.NativeTransportTest.NativeTransportTest"]},{"name":"constructor(allowAll: Boolean = DEFAULT_ALLOW_ALL, allowIo: Boolean = DEFAULT_ALLOW_IO, allowEnv: Boolean = DEFAULT_ALLOW_ENV, allowNative: Boolean = DEFAULT_ALLOW_NATIVE, allowThreads: Boolean = DEFAULT_ALLOW_THREADS, allowProc: Boolean = DEFAULT_ALLOW_PROC)","description":"elide.tool.cli.options.AccessControlOptions.HostAccessSettings.HostAccessSettings","location":"packages/cli/elide.tool.cli.options/-access-control-options/-host-access-settings/-host-access-settings.html","searchKeys":["HostAccessSettings","constructor(allowAll: Boolean = DEFAULT_ALLOW_ALL, allowIo: Boolean = DEFAULT_ALLOW_IO, allowEnv: Boolean = DEFAULT_ALLOW_ENV, allowNative: Boolean = DEFAULT_ALLOW_NATIVE, allowThreads: Boolean = DEFAULT_ALLOW_THREADS, allowProc: Boolean = DEFAULT_ALLOW_PROC)","elide.tool.cli.options.AccessControlOptions.HostAccessSettings.HostAccessSettings"]},{"name":"constructor(bin: String? = null, man: String? = null)","description":"elide.tool.project.struct.nodepkg.NodePackage.ProjectDirectories.ProjectDirectories","location":"packages/cli/elide.tool.project.struct.nodepkg/-node-package/-project-directories/-project-directories.html","searchKeys":["ProjectDirectories","constructor(bin: String? = null, man: String? = null)","elide.tool.project.struct.nodepkg.NodePackage.ProjectDirectories.ProjectDirectories"]},{"name":"constructor(bins: Map<String, String>? = null)","description":"elide.tool.project.struct.nodepkg.NodePackage.ProjectBins.ProjectBinMap.ProjectBinMap","location":"packages/cli/elide.tool.project.struct.nodepkg/-node-package/-project-bins/-project-bin-map/-project-bin-map.html","searchKeys":["ProjectBinMap","constructor(bins: Map<String, String>? = null)","elide.tool.project.struct.nodepkg.NodePackage.ProjectBins.ProjectBinMap.ProjectBinMap"]},{"name":"constructor(className: String, message: String? = null, stacktrace: String? = null, cause: PersistedError.ErrorInfo? = null, coordinates: ErrorHandler.ErrorCoordinates? = null, frames: List<ErrorHandler.ErrorStackFrame> = emptyList())","description":"elide.tool.err.PersistedError.ErrorInfo.ErrorInfo","location":"packages/cli/elide.tool.err/-persisted-error/-error-info/-error-info.html","searchKeys":["ErrorInfo","constructor(className: String, message: String? = null, stacktrace: String? = null, cause: PersistedError.ErrorInfo? = null, coordinates: ErrorHandler.ErrorCoordinates? = null, frames: List<ErrorHandler.ErrorStackFrame> = emptyList())","elide.tool.err.PersistedError.ErrorInfo.ErrorInfo"]},{"name":"constructor(entry: NodePackage.ProjectFundingEntry? = null)","description":"elide.tool.project.struct.nodepkg.NodePackage.ProjectFunding.ProjectSingleFunding.ProjectSingleFunding","location":"packages/cli/elide.tool.project.struct.nodepkg/-node-package/-project-funding/-project-single-funding/-project-single-funding.html","searchKeys":["ProjectSingleFunding","constructor(entry: NodePackage.ProjectFundingEntry? = null)","elide.tool.project.struct.nodepkg.NodePackage.ProjectFunding.ProjectSingleFunding.ProjectSingleFunding"]},{"name":"constructor(fatal: Boolean = true, guest: Boolean = false, coordinates: ErrorHandler.ErrorCoordinates? = null, timestamp: Instant = Clock.System.now(), stacktrace: String? = null, frames: List<ErrorHandler.ErrorStackFrame>? = null, language: GuestLanguage? = null, uuid: Uuid = uuid4(), thread: Thread? = null)","description":"elide.tool.err.ErrorHandler.ErrorContext.ErrorContext","location":"packages/cli/elide.tool.err/-error-handler/-error-context/-error-context.html","searchKeys":["ErrorContext","constructor(fatal: Boolean = true, guest: Boolean = false, coordinates: ErrorHandler.ErrorCoordinates? = null, timestamp: Instant = Clock.System.now(), stacktrace: String? = null, frames: List<ErrorHandler.ErrorStackFrame>? = null, language: GuestLanguage? = null, uuid: Uuid = uuid4(), thread: Thread? = null)","elide.tool.err.ErrorHandler.ErrorContext.ErrorContext"]},{"name":"constructor(file: String? = null, line: Int? = null, column: Int? = null, threadId: Long? = null, threadName: String? = null, language: String? = null)","description":"elide.tool.err.ErrorHandler.ErrorCoordinates.ErrorCoordinates","location":"packages/cli/elide.tool.err/-error-handler/-error-coordinates/-error-coordinates.html","searchKeys":["ErrorCoordinates","constructor(file: String? = null, line: Int? = null, column: Int? = null, threadId: Long? = null, threadName: String? = null, language: String? = null)","elide.tool.err.ErrorHandler.ErrorCoordinates.ErrorCoordinates"]},{"name":"constructor(group: String, name: String, path: String, staticName: String)","description":"elide.tool.engine.NativeLib.LibInfo.LibInfo","location":"packages/cli/elide.tool.engine/-native-lib/-lib-info/-lib-info.html","searchKeys":["LibInfo","constructor(group: String, name: String, path: String, staticName: String)","elide.tool.engine.NativeLib.LibInfo.LibInfo"]},{"name":"constructor(inner: Map<String, String>? = null)","description":"elide.tool.project.struct.nodepkg.NodePackage.PackageOverride.PackageOverrideMap.PackageOverrideMap","location":"packages/cli/elide.tool.project.struct.nodepkg/-node-package/-package-override/-package-override-map/-package-override-map.html","searchKeys":["PackageOverrideMap","constructor(inner: Map<String, String>? = null)","elide.tool.project.struct.nodepkg.NodePackage.PackageOverride.PackageOverrideMap.PackageOverrideMap"]},{"name":"constructor(isolates: Boolean = DEFAULT_ISOLATES)","description":"elide.tool.cli.options.AccessControlOptions.SandboxSettings.SandboxSettings","location":"packages/cli/elide.tool.cli.options/-access-control-options/-sandbox-settings/-sandbox-settings.html","searchKeys":["SandboxSettings","constructor(isolates: Boolean = DEFAULT_ISOLATES)","elide.tool.cli.options.AccessControlOptions.SandboxSettings.SandboxSettings"]},{"name":"constructor(language: String)","description":"elide.tool.engine.LanguageCondition.LanguageCondition","location":"packages/cli/elide.tool.engine/-language-condition/-language-condition.html","searchKeys":["LanguageCondition","constructor(language: String)","elide.tool.engine.LanguageCondition.LanguageCondition"]},{"name":"constructor(list: List<NodePackage.ProjectFundingEntry>? = null)","description":"elide.tool.project.struct.nodepkg.NodePackage.ProjectFunding.ProjectMultiFunding.ProjectMultiFunding","location":"packages/cli/elide.tool.project.struct.nodepkg/-node-package/-project-funding/-project-multi-funding/-project-multi-funding.html","searchKeys":["ProjectMultiFunding","constructor(list: List<NodePackage.ProjectFundingEntry>? = null)","elide.tool.project.struct.nodepkg.NodePackage.ProjectFunding.ProjectMultiFunding.ProjectMultiFunding"]},{"name":"constructor(list: List<String>? = null)","description":"elide.tool.project.struct.nodepkg.NodePackage.ProjectMans.ProjectManList.ProjectManList","location":"packages/cli/elide.tool.project.struct.nodepkg/-node-package/-project-mans/-project-man-list/-project-man-list.html","searchKeys":["ProjectManList","constructor(list: List<String>? = null)","elide.tool.project.struct.nodepkg.NodePackage.ProjectMans.ProjectManList.ProjectManList"]},{"name":"constructor(logger: Logger, event: ErrorHandler.ErrorEvent, exitCode: Int = 1)","description":"elide.tool.err.ErrorHandler.ErrorActionStrategy.Crash.Crash","location":"packages/cli/elide.tool.err/-error-handler/-error-action-strategy/-crash/-crash.html","searchKeys":["Crash","constructor(logger: Logger, event: ErrorHandler.ErrorEvent, exitCode: Int = 1)","elide.tool.err.ErrorHandler.ErrorActionStrategy.Crash.Crash"]},{"name":"constructor(logger: Logger, event: ErrorHandler.ErrorEvent, throwable: Throwable = event.error)","description":"elide.tool.err.ErrorHandler.ErrorActionStrategy.Rethrow.Rethrow","location":"packages/cli/elide.tool.err/-error-handler/-error-action-strategy/-rethrow/-rethrow.html","searchKeys":["Rethrow","constructor(logger: Logger, event: ErrorHandler.ErrorEvent, throwable: Throwable = event.error)","elide.tool.err.ErrorHandler.ErrorActionStrategy.Rethrow.Rethrow"]},{"name":"constructor(name: String, message: String? = null, err: Throwable? = null)","description":"elide.tool.testing.TestContext.AssertionFailure.AssertionFailure","location":"packages/cli/elide.tool.testing/-test-context/-assertion-failure/-assertion-failure.html","searchKeys":["AssertionFailure","constructor(name: String, message: String? = null, err: Throwable? = null)","elide.tool.testing.TestContext.AssertionFailure.AssertionFailure"]},{"name":"constructor(name: String? = null)","description":"elide.tool.project.struct.ElidePackage.ElidePackage","location":"packages/cli/elide.tool.project.struct/-elide-package/-elide-package.html","searchKeys":["ElidePackage","constructor(name: String? = null)","elide.tool.project.struct.ElidePackage.ElidePackage"]},{"name":"constructor(name: String? = null, url: String? = null, email: String? = null)","description":"elide.tool.project.struct.nodepkg.NodePackage.ProjectPerson.ProjectPersonMap.ProjectPersonMap","location":"packages/cli/elide.tool.project.struct.nodepkg/-node-package/-project-person/-project-person-map/-project-person-map.html","searchKeys":["ProjectPersonMap","constructor(name: String? = null, url: String? = null, email: String? = null)","elide.tool.project.struct.nodepkg.NodePackage.ProjectPerson.ProjectPersonMap.ProjectPersonMap"]},{"name":"constructor(name: String? = null, version: String? = null, description: String? = null, keywords: List<String>? = null, homepage: String? = null, license: String? = null, files: List<String>? = null, main: String? = null, browser: String? = null, repository: String? = null, scripts: Map<String, String>? = null, config: Map<String, JsonPrimitive>? = null, dependencies: Map<String, String>? = null, devDependencies: Map<String, String>? = null, peerDependencies: Map<String, String>? = null, peerDependenciesMeta: Map<String, Map<String, JsonPrimitive>>? = null, bundleDependencies: List<String>? = null, optionalDependencies: Map<String, String>? = null, engines: Map<String, String>? = null, os: List<String>? = null, cpu: List<String>? = null, private: Boolean = false, publishConfig: Map<String, JsonPrimitive>? = null, workspaces: List<String>? = null, elide: ElidePackage? = null)","description":"elide.tool.project.struct.nodepkg.NodePackage.NodePackage","location":"packages/cli/elide.tool.project.struct.nodepkg/-node-package/-node-package.html","searchKeys":["NodePackage","constructor(name: String? = null, version: String? = null, description: String? = null, keywords: List<String>? = null, homepage: String? = null, license: String? = null, files: List<String>? = null, main: String? = null, browser: String? = null, repository: String? = null, scripts: Map<String, String>? = null, config: Map<String, JsonPrimitive>? = null, dependencies: Map<String, String>? = null, devDependencies: Map<String, String>? = null, peerDependencies: Map<String, String>? = null, peerDependenciesMeta: Map<String, Map<String, JsonPrimitive>>? = null, bundleDependencies: List<String>? = null, optionalDependencies: Map<String, String>? = null, engines: Map<String, String>? = null, os: List<String>? = null, cpu: List<String>? = null, private: Boolean = false, publishConfig: Map<String, JsonPrimitive>? = null, workspaces: List<String>? = null, elide: ElidePackage? = null)","elide.tool.project.struct.nodepkg.NodePackage.NodePackage"]},{"name":"constructor(path: String, state: TestState, failures: Collection<String> = emptyList(), assertions: Collection<String> = emptyList())","description":"elide.tool.cli.output.Test.Test","location":"packages/cli/elide.tool.cli.output/-test/-test.html","searchKeys":["Test","constructor(path: String, state: TestState, failures: Collection<String> = emptyList(), assertions: Collection<String> = emptyList())","elide.tool.cli.output.Test.Test"]},{"name":"constructor(result: TestResult.Result, err: Throwable?, start: Instant, end: Instant, output: StringBuilder?, errOutput: StringBuilder?, test: Testable<*>, info: TestInfo, messages: Collection<String>)","description":"elide.tool.testing.TestResult.TestResultInfo.TestResultInfo","location":"packages/cli/elide.tool.testing/-test-result/-test-result-info/-test-result-info.html","searchKeys":["TestResultInfo","constructor(result: TestResult.Result, err: Throwable?, start: Instant, end: Instant, output: StringBuilder?, errOutput: StringBuilder?, test: Testable<*>, info: TestInfo, messages: Collection<String>)","elide.tool.testing.TestResult.TestResultInfo.TestResultInfo"]},{"name":"constructor(sandbox: AccessControlOptions.SandboxSettings, hostAccess: AccessControlOptions.HostAccessSettings)","description":"elide.tool.cli.options.AccessControlOptions.AccessControlSettings.AccessControlSettings","location":"packages/cli/elide.tool.cli.options/-access-control-options/-access-control-settings/-access-control-settings.html","searchKeys":["AccessControlSettings","constructor(sandbox: AccessControlOptions.SandboxSettings, hostAccess: AccessControlOptions.HostAccessSettings)","elide.tool.cli.options.AccessControlOptions.AccessControlSettings.AccessControlSettings"]},{"name":"constructor(string: String)","description":"elide.tool.project.struct.nodepkg.NodePackage.ProjectPerson.ProjectPersonString.ProjectPersonString","location":"packages/cli/elide.tool.project.struct.nodepkg/-node-package/-project-person/-project-person-string/-project-person-string.html","searchKeys":["ProjectPersonString","constructor(string: String)","elide.tool.project.struct.nodepkg.NodePackage.ProjectPerson.ProjectPersonString.ProjectPersonString"]},{"name":"constructor(string: String? = null)","description":"elide.tool.project.struct.nodepkg.NodePackage.PackageOverride.PackageOverrideString.PackageOverrideString","location":"packages/cli/elide.tool.project.struct.nodepkg/-node-package/-package-override/-package-override-string/-package-override-string.html","searchKeys":["PackageOverrideString","constructor(string: String? = null)","elide.tool.project.struct.nodepkg.NodePackage.PackageOverride.PackageOverrideString.PackageOverrideString"]},{"name":"constructor(string: String? = null)","description":"elide.tool.project.struct.nodepkg.NodePackage.ProjectBins.ProectBinString.ProectBinString","location":"packages/cli/elide.tool.project.struct.nodepkg/-node-package/-project-bins/-proect-bin-string/-proect-bin-string.html","searchKeys":["ProectBinString","constructor(string: String? = null)","elide.tool.project.struct.nodepkg.NodePackage.ProjectBins.ProectBinString.ProectBinString"]},{"name":"constructor(string: String? = null)","description":"elide.tool.project.struct.nodepkg.NodePackage.ProjectFundingEntry.ProjectFundingString.ProjectFundingString","location":"packages/cli/elide.tool.project.struct.nodepkg/-node-package/-project-funding-entry/-project-funding-string/-project-funding-string.html","searchKeys":["ProjectFundingString","constructor(string: String? = null)","elide.tool.project.struct.nodepkg.NodePackage.ProjectFundingEntry.ProjectFundingString.ProjectFundingString"]},{"name":"constructor(string: String? = null)","description":"elide.tool.project.struct.nodepkg.NodePackage.ProjectMans.ProjectManString.ProjectManString","location":"packages/cli/elide.tool.project.struct.nodepkg/-node-package/-project-mans/-project-man-string/-project-man-string.html","searchKeys":["ProjectManString","constructor(string: String? = null)","elide.tool.project.struct.nodepkg.NodePackage.ProjectMans.ProjectManString.ProjectManString"]},{"name":"constructor(string: String? = null)","description":"elide.tool.project.struct.nodepkg.NodePackage.ProjectRepo.ProjectRepoString.ProjectRepoString","location":"packages/cli/elide.tool.project.struct.nodepkg/-node-package/-project-repo/-project-repo-string/-project-repo-string.html","searchKeys":["ProjectRepoString","constructor(string: String? = null)","elide.tool.project.struct.nodepkg.NodePackage.ProjectRepo.ProjectRepoString.ProjectRepoString"]},{"name":"constructor(type: String? = null, url: String? = null)","description":"elide.tool.project.struct.nodepkg.NodePackage.ProjectFundingEntry.ProjectFundingMap.ProjectFundingMap","location":"packages/cli/elide.tool.project.struct.nodepkg/-node-package/-project-funding-entry/-project-funding-map/-project-funding-map.html","searchKeys":["ProjectFundingMap","constructor(type: String? = null, url: String? = null)","elide.tool.project.struct.nodepkg.NodePackage.ProjectFundingEntry.ProjectFundingMap.ProjectFundingMap"]},{"name":"constructor(type: String? = null, url: String? = null, directory: String? = null)","description":"elide.tool.project.struct.nodepkg.NodePackage.ProjectRepo.ProjectRepoMap.ProjectRepoMap","location":"packages/cli/elide.tool.project.struct.nodepkg/-node-package/-project-repo/-project-repo-map/-project-repo-map.html","searchKeys":["ProjectRepoMap","constructor(type: String? = null, url: String? = null, directory: String? = null)","elide.tool.project.struct.nodepkg.NodePackage.ProjectRepo.ProjectRepoMap.ProjectRepoMap"]},{"name":"constructor(url: String? = null)","description":"elide.tool.project.struct.nodepkg.NodePackage.ProjectBugs.ProjectBugsUrl.ProjectBugsUrl","location":"packages/cli/elide.tool.project.struct.nodepkg/-node-package/-project-bugs/-project-bugs-url/-project-bugs-url.html","searchKeys":["ProjectBugsUrl","constructor(url: String? = null)","elide.tool.project.struct.nodepkg.NodePackage.ProjectBugs.ProjectBugsUrl.ProjectBugsUrl"]},{"name":"constructor(url: String? = null, email: String? = null)","description":"elide.tool.project.struct.nodepkg.NodePackage.ProjectBugs.ProjectBugsConig.ProjectBugsConig","location":"packages/cli/elide.tool.project.struct.nodepkg/-node-package/-project-bugs/-project-bugs-conig/-project-bugs-conig.html","searchKeys":["ProjectBugsConig","constructor(url: String? = null, email: String? = null)","elide.tool.project.struct.nodepkg.NodePackage.ProjectBugs.ProjectBugsConig.ProjectBugsConig"]},{"name":"constructor(version: String = ElideTool.version(), native: Boolean = ImageInfo.inImageCode(), env: Map<String, String> = capturedEnvVariables.associateWith { System.getenv(it) }.toSortedMap(), properties: Map<String, String> = System.getProperties().mapNotNull {\n      try {\n        it.key.toString() to it.value.toString()\n      } catch (err: Throwable) {\n        null\n      }\n    }.toMap().toSortedMap())","description":"elide.tool.err.PersistedError.RuntimeInfo.RuntimeInfo","location":"packages/cli/elide.tool.err/-persisted-error/-runtime-info/-runtime-info.html","searchKeys":["RuntimeInfo","constructor(version: String = ElideTool.version(), native: Boolean = ImageInfo.inImageCode(), env: Map<String, String> = capturedEnvVariables.associateWith { System.getenv(it) }.toSortedMap(), properties: Map<String, String> = System.getProperties().mapNotNull {\n      try {\n        it.key.toString() to it.value.toString()\n      } catch (err: Throwable) {\n        null\n      }\n    }.toMap().toSortedMap())","elide.tool.err.PersistedError.RuntimeInfo.RuntimeInfo"]},{"name":"constructor(warning: String?, logger: Logger, event: ErrorHandler.ErrorEvent)","description":"elide.tool.err.ErrorHandler.ErrorActionStrategy.Default.Default","location":"packages/cli/elide.tool.err/-error-handler/-error-action-strategy/-default/-default.html","searchKeys":["Default","constructor(warning: String?, logger: Logger, event: ErrorHandler.ErrorEvent)","elide.tool.err.ErrorHandler.ErrorActionStrategy.Default.Default"]},{"name":"constructor(warning: String?, logger: Logger, event: ErrorHandler.ErrorEvent)","description":"elide.tool.err.ErrorHandler.ErrorActionStrategy.Suppress.Suppress","location":"packages/cli/elide.tool.err/-error-handler/-error-action-strategy/-suppress/-suppress.html","searchKeys":["Suppress","constructor(warning: String?, logger: Logger, event: ErrorHandler.ErrorEvent)","elide.tool.err.ErrorHandler.ErrorActionStrategy.Suppress.Suppress"]},{"name":"data class AccessControlSettings(val sandbox: AccessControlOptions.SandboxSettings, val hostAccess: AccessControlOptions.HostAccessSettings) : Record","description":"elide.tool.cli.options.AccessControlOptions.AccessControlSettings","location":"packages/cli/elide.tool.cli.options/-access-control-options/-access-control-settings/index.html","searchKeys":["AccessControlSettings","data class AccessControlSettings(val sandbox: AccessControlOptions.SandboxSettings, val hostAccess: AccessControlOptions.HostAccessSettings) : Record","elide.tool.cli.options.AccessControlOptions.AccessControlSettings"]},{"name":"data class Crash(val logger: Logger, val event: ErrorHandler.ErrorEvent, val exitCode: Int = 1) : Record, ErrorHandler.ErrorActionStrategy","description":"elide.tool.err.ErrorHandler.ErrorActionStrategy.Crash","location":"packages/cli/elide.tool.err/-error-handler/-error-action-strategy/-crash/index.html","searchKeys":["Crash","data class Crash(val logger: Logger, val event: ErrorHandler.ErrorEvent, val exitCode: Int = 1) : Record, ErrorHandler.ErrorActionStrategy","elide.tool.err.ErrorHandler.ErrorActionStrategy.Crash"]},{"name":"data class Default(val warning: String?, val logger: Logger, val event: ErrorHandler.ErrorEvent) : Record, ErrorHandler.ErrorActionStrategy","description":"elide.tool.err.ErrorHandler.ErrorActionStrategy.Default","location":"packages/cli/elide.tool.err/-error-handler/-error-action-strategy/-default/index.html","searchKeys":["Default","data class Default(val warning: String?, val logger: Logger, val event: ErrorHandler.ErrorEvent) : Record, ErrorHandler.ErrorActionStrategy","elide.tool.err.ErrorHandler.ErrorActionStrategy.Default"]},{"name":"data class ElidePackage(val name: String? = null) : Record","description":"elide.tool.project.struct.ElidePackage","location":"packages/cli/elide.tool.project.struct/-elide-package/index.html","searchKeys":["ElidePackage","data class ElidePackage(val name: String? = null) : Record","elide.tool.project.struct.ElidePackage"]},{"name":"data class Error : CommandResult","description":"elide.tool.cli.CommandResult.Error","location":"packages/cli/elide.tool.cli/-command-result/-error/index.html","searchKeys":["Error","data class Error : CommandResult","elide.tool.cli.CommandResult.Error"]},{"name":"data class ErrorContext(val fatal: Boolean = true, val guest: Boolean = false, val coordinates: ErrorHandler.ErrorCoordinates? = null, val timestamp: Instant = Clock.System.now(), val stacktrace: String? = null, val frames: List<ErrorHandler.ErrorStackFrame>? = null, val language: GuestLanguage? = null, val uuid: Uuid = uuid4(), val thread: Thread? = null)","description":"elide.tool.err.ErrorHandler.ErrorContext","location":"packages/cli/elide.tool.err/-error-handler/-error-context/index.html","searchKeys":["ErrorContext","data class ErrorContext(val fatal: Boolean = true, val guest: Boolean = false, val coordinates: ErrorHandler.ErrorCoordinates? = null, val timestamp: Instant = Clock.System.now(), val stacktrace: String? = null, val frames: List<ErrorHandler.ErrorStackFrame>? = null, val language: GuestLanguage? = null, val uuid: Uuid = uuid4(), val thread: Thread? = null)","elide.tool.err.ErrorHandler.ErrorContext"]},{"name":"data class ErrorCoordinates(val file: String? = null, val line: Int? = null, val column: Int? = null, val threadId: Long? = null, val threadName: String? = null, val language: String? = null) : Record","description":"elide.tool.err.ErrorHandler.ErrorCoordinates","location":"packages/cli/elide.tool.err/-error-handler/-error-coordinates/index.html","searchKeys":["ErrorCoordinates","data class ErrorCoordinates(val file: String? = null, val line: Int? = null, val column: Int? = null, val threadId: Long? = null, val threadName: String? = null, val language: String? = null) : Record","elide.tool.err.ErrorHandler.ErrorCoordinates"]},{"name":"data class ErrorInfo(val className: String, val message: String? = null, val stacktrace: String? = null, val cause: PersistedError.ErrorInfo? = null, val coordinates: ErrorHandler.ErrorCoordinates? = null, val frames: List<ErrorHandler.ErrorStackFrame> = emptyList()) : Record","description":"elide.tool.err.PersistedError.ErrorInfo","location":"packages/cli/elide.tool.err/-persisted-error/-error-info/index.html","searchKeys":["ErrorInfo","data class ErrorInfo(val className: String, val message: String? = null, val stacktrace: String? = null, val cause: PersistedError.ErrorInfo? = null, val coordinates: ErrorHandler.ErrorCoordinates? = null, val frames: List<ErrorHandler.ErrorStackFrame> = emptyList()) : Record","elide.tool.err.PersistedError.ErrorInfo"]},{"name":"data class ErrorStackFrame : Record","description":"elide.tool.err.ErrorHandler.ErrorStackFrame","location":"packages/cli/elide.tool.err/-error-handler/-error-stack-frame/index.html","searchKeys":["ErrorStackFrame","data class ErrorStackFrame : Record","elide.tool.err.ErrorHandler.ErrorStackFrame"]},{"name":"data class HostAccessSettings(val allowAll: Boolean = DEFAULT_ALLOW_ALL, val allowIo: Boolean = DEFAULT_ALLOW_IO, val allowEnv: Boolean = DEFAULT_ALLOW_ENV, val allowNative: Boolean = DEFAULT_ALLOW_NATIVE, val allowThreads: Boolean = DEFAULT_ALLOW_THREADS, val allowProc: Boolean = DEFAULT_ALLOW_PROC) : Record","description":"elide.tool.cli.options.AccessControlOptions.HostAccessSettings","location":"packages/cli/elide.tool.cli.options/-access-control-options/-host-access-settings/index.html","searchKeys":["HostAccessSettings","data class HostAccessSettings(val allowAll: Boolean = DEFAULT_ALLOW_ALL, val allowIo: Boolean = DEFAULT_ALLOW_IO, val allowEnv: Boolean = DEFAULT_ALLOW_ENV, val allowNative: Boolean = DEFAULT_ALLOW_NATIVE, val allowThreads: Boolean = DEFAULT_ALLOW_THREADS, val allowProc: Boolean = DEFAULT_ALLOW_PROC) : Record","elide.tool.cli.options.AccessControlOptions.HostAccessSettings"]},{"name":"data class LibInfo(val group: String, val name: String, val path: String, val staticName: String) : Record, NativeLibInfo","description":"elide.tool.engine.NativeLib.LibInfo","location":"packages/cli/elide.tool.engine/-native-lib/-lib-info/index.html","searchKeys":["LibInfo","data class LibInfo(val group: String, val name: String, val path: String, val staticName: String) : Record, NativeLibInfo","elide.tool.engine.NativeLib.LibInfo"]},{"name":"data class NodePackage(val name: String? = null, val version: String? = null, val description: String? = null, val keywords: List<String>? = null, val homepage: String? = null, val license: String? = null, val files: List<String>? = null, val main: String? = null, val browser: String? = null, val repository: String? = null, val scripts: Map<String, String>? = null, val config: Map<String, JsonPrimitive>? = null, val dependencies: Map<String, String>? = null, val devDependencies: Map<String, String>? = null, val peerDependencies: Map<String, String>? = null, val peerDependenciesMeta: Map<String, Map<String, JsonPrimitive>>? = null, val bundleDependencies: List<String>? = null, val optionalDependencies: Map<String, String>? = null, val engines: Map<String, String>? = null, val os: List<String>? = null, val cpu: List<String>? = null, val private: Boolean = false, val publishConfig: Map<String, JsonPrimitive>? = null, val workspaces: List<String>? = null, val elide: ElidePackage? = null) : Record","description":"elide.tool.project.struct.nodepkg.NodePackage","location":"packages/cli/elide.tool.project.struct.nodepkg/-node-package/index.html","searchKeys":["NodePackage","data class NodePackage(val name: String? = null, val version: String? = null, val description: String? = null, val keywords: List<String>? = null, val homepage: String? = null, val license: String? = null, val files: List<String>? = null, val main: String? = null, val browser: String? = null, val repository: String? = null, val scripts: Map<String, String>? = null, val config: Map<String, JsonPrimitive>? = null, val dependencies: Map<String, String>? = null, val devDependencies: Map<String, String>? = null, val peerDependencies: Map<String, String>? = null, val peerDependenciesMeta: Map<String, Map<String, JsonPrimitive>>? = null, val bundleDependencies: List<String>? = null, val optionalDependencies: Map<String, String>? = null, val engines: Map<String, String>? = null, val os: List<String>? = null, val cpu: List<String>? = null, val private: Boolean = false, val publishConfig: Map<String, JsonPrimitive>? = null, val workspaces: List<String>? = null, val elide: ElidePackage? = null) : Record","elide.tool.project.struct.nodepkg.NodePackage"]},{"name":"data class PackageJsonProjectConfig : Record, ProjectConfig","description":"elide.tool.project.ProjectConfig.PackageJsonProjectConfig","location":"packages/cli/elide.tool.project/-project-config/-package-json-project-config/index.html","searchKeys":["PackageJsonProjectConfig","data class PackageJsonProjectConfig : Record, ProjectConfig","elide.tool.project.ProjectConfig.PackageJsonProjectConfig"]},{"name":"data class PackageOverrideMap(val inner: Map<String, String>? = null) : Record, NodePackage.ProjectRepo","description":"elide.tool.project.struct.nodepkg.NodePackage.PackageOverride.PackageOverrideMap","location":"packages/cli/elide.tool.project.struct.nodepkg/-node-package/-package-override/-package-override-map/index.html","searchKeys":["PackageOverrideMap","data class PackageOverrideMap(val inner: Map<String, String>? = null) : Record, NodePackage.ProjectRepo","elide.tool.project.struct.nodepkg.NodePackage.PackageOverride.PackageOverrideMap"]},{"name":"data class PackageOverrideString(val string: String? = null) : Record, NodePackage.ProjectRepo","description":"elide.tool.project.struct.nodepkg.NodePackage.PackageOverride.PackageOverrideString","location":"packages/cli/elide.tool.project.struct.nodepkg/-node-package/-package-override/-package-override-string/index.html","searchKeys":["PackageOverrideString","data class PackageOverrideString(val string: String? = null) : Record, NodePackage.ProjectRepo","elide.tool.project.struct.nodepkg.NodePackage.PackageOverride.PackageOverrideString"]},{"name":"data class PersistedError : Record","description":"elide.tool.err.PersistedError","location":"packages/cli/elide.tool.err/-persisted-error/index.html","searchKeys":["PersistedError","data class PersistedError : Record","elide.tool.err.PersistedError"]},{"name":"data class ProectBinString(val string: String? = null) : Record, NodePackage.ProjectBins","description":"elide.tool.project.struct.nodepkg.NodePackage.ProjectBins.ProectBinString","location":"packages/cli/elide.tool.project.struct.nodepkg/-node-package/-project-bins/-proect-bin-string/index.html","searchKeys":["ProectBinString","data class ProectBinString(val string: String? = null) : Record, NodePackage.ProjectBins","elide.tool.project.struct.nodepkg.NodePackage.ProjectBins.ProectBinString"]},{"name":"data class ProjectBinMap(val bins: Map<String, String>? = null) : Record, NodePackage.ProjectBins","description":"elide.tool.project.struct.nodepkg.NodePackage.ProjectBins.ProjectBinMap","location":"packages/cli/elide.tool.project.struct.nodepkg/-node-package/-project-bins/-project-bin-map/index.html","searchKeys":["ProjectBinMap","data class ProjectBinMap(val bins: Map<String, String>? = null) : Record, NodePackage.ProjectBins","elide.tool.project.struct.nodepkg.NodePackage.ProjectBins.ProjectBinMap"]},{"name":"data class ProjectBugsConig(val url: String? = null, val email: String? = null) : Record, NodePackage.ProjectBugs","description":"elide.tool.project.struct.nodepkg.NodePackage.ProjectBugs.ProjectBugsConig","location":"packages/cli/elide.tool.project.struct.nodepkg/-node-package/-project-bugs/-project-bugs-conig/index.html","searchKeys":["ProjectBugsConig","data class ProjectBugsConig(val url: String? = null, val email: String? = null) : Record, NodePackage.ProjectBugs","elide.tool.project.struct.nodepkg.NodePackage.ProjectBugs.ProjectBugsConig"]},{"name":"data class ProjectBugsUrl(val url: String? = null) : Record, NodePackage.ProjectBugs","description":"elide.tool.project.struct.nodepkg.NodePackage.ProjectBugs.ProjectBugsUrl","location":"packages/cli/elide.tool.project.struct.nodepkg/-node-package/-project-bugs/-project-bugs-url/index.html","searchKeys":["ProjectBugsUrl","data class ProjectBugsUrl(val url: String? = null) : Record, NodePackage.ProjectBugs","elide.tool.project.struct.nodepkg.NodePackage.ProjectBugs.ProjectBugsUrl"]},{"name":"data class ProjectDirectories(val bin: String? = null, val man: String? = null) : Record","description":"elide.tool.project.struct.nodepkg.NodePackage.ProjectDirectories","location":"packages/cli/elide.tool.project.struct.nodepkg/-node-package/-project-directories/index.html","searchKeys":["ProjectDirectories","data class ProjectDirectories(val bin: String? = null, val man: String? = null) : Record","elide.tool.project.struct.nodepkg.NodePackage.ProjectDirectories"]},{"name":"data class ProjectEnvironment : Record","description":"elide.tool.project.ProjectInfo.ProjectEnvironment","location":"packages/cli/elide.tool.project/-project-info/-project-environment/index.html","searchKeys":["ProjectEnvironment","data class ProjectEnvironment : Record","elide.tool.project.ProjectInfo.ProjectEnvironment"]},{"name":"data class ProjectFundingMap(val type: String? = null, val url: String? = null) : Record, NodePackage.ProjectFundingEntry","description":"elide.tool.project.struct.nodepkg.NodePackage.ProjectFundingEntry.ProjectFundingMap","location":"packages/cli/elide.tool.project.struct.nodepkg/-node-package/-project-funding-entry/-project-funding-map/index.html","searchKeys":["ProjectFundingMap","data class ProjectFundingMap(val type: String? = null, val url: String? = null) : Record, NodePackage.ProjectFundingEntry","elide.tool.project.struct.nodepkg.NodePackage.ProjectFundingEntry.ProjectFundingMap"]},{"name":"data class ProjectFundingString(val string: String? = null) : Record, NodePackage.ProjectFundingEntry","description":"elide.tool.project.struct.nodepkg.NodePackage.ProjectFundingEntry.ProjectFundingString","location":"packages/cli/elide.tool.project.struct.nodepkg/-node-package/-project-funding-entry/-project-funding-string/index.html","searchKeys":["ProjectFundingString","data class ProjectFundingString(val string: String? = null) : Record, NodePackage.ProjectFundingEntry","elide.tool.project.struct.nodepkg.NodePackage.ProjectFundingEntry.ProjectFundingString"]},{"name":"data class ProjectManList(val list: List<String>? = null) : Record, NodePackage.ProjectMans","description":"elide.tool.project.struct.nodepkg.NodePackage.ProjectMans.ProjectManList","location":"packages/cli/elide.tool.project.struct.nodepkg/-node-package/-project-mans/-project-man-list/index.html","searchKeys":["ProjectManList","data class ProjectManList(val list: List<String>? = null) : Record, NodePackage.ProjectMans","elide.tool.project.struct.nodepkg.NodePackage.ProjectMans.ProjectManList"]},{"name":"data class ProjectManString(val string: String? = null) : Record, NodePackage.ProjectMans","description":"elide.tool.project.struct.nodepkg.NodePackage.ProjectMans.ProjectManString","location":"packages/cli/elide.tool.project.struct.nodepkg/-node-package/-project-mans/-project-man-string/index.html","searchKeys":["ProjectManString","data class ProjectManString(val string: String? = null) : Record, NodePackage.ProjectMans","elide.tool.project.struct.nodepkg.NodePackage.ProjectMans.ProjectManString"]},{"name":"data class ProjectMultiFunding(val list: List<NodePackage.ProjectFundingEntry>? = null) : Record, NodePackage.ProjectFunding","description":"elide.tool.project.struct.nodepkg.NodePackage.ProjectFunding.ProjectMultiFunding","location":"packages/cli/elide.tool.project.struct.nodepkg/-node-package/-project-funding/-project-multi-funding/index.html","searchKeys":["ProjectMultiFunding","data class ProjectMultiFunding(val list: List<NodePackage.ProjectFundingEntry>? = null) : Record, NodePackage.ProjectFunding","elide.tool.project.struct.nodepkg.NodePackage.ProjectFunding.ProjectMultiFunding"]},{"name":"data class ProjectPersonMap(val name: String? = null, val url: String? = null, val email: String? = null) : Record, NodePackage.ProjectBugs","description":"elide.tool.project.struct.nodepkg.NodePackage.ProjectPerson.ProjectPersonMap","location":"packages/cli/elide.tool.project.struct.nodepkg/-node-package/-project-person/-project-person-map/index.html","searchKeys":["ProjectPersonMap","data class ProjectPersonMap(val name: String? = null, val url: String? = null, val email: String? = null) : Record, NodePackage.ProjectBugs","elide.tool.project.struct.nodepkg.NodePackage.ProjectPerson.ProjectPersonMap"]},{"name":"data class ProjectPersonString(val string: String) : Record, NodePackage.ProjectBugs","description":"elide.tool.project.struct.nodepkg.NodePackage.ProjectPerson.ProjectPersonString","location":"packages/cli/elide.tool.project.struct.nodepkg/-node-package/-project-person/-project-person-string/index.html","searchKeys":["ProjectPersonString","data class ProjectPersonString(val string: String) : Record, NodePackage.ProjectBugs","elide.tool.project.struct.nodepkg.NodePackage.ProjectPerson.ProjectPersonString"]},{"name":"data class ProjectRepoMap(val type: String? = null, val url: String? = null, val directory: String? = null) : Record, NodePackage.ProjectRepo","description":"elide.tool.project.struct.nodepkg.NodePackage.ProjectRepo.ProjectRepoMap","location":"packages/cli/elide.tool.project.struct.nodepkg/-node-package/-project-repo/-project-repo-map/index.html","searchKeys":["ProjectRepoMap","data class ProjectRepoMap(val type: String? = null, val url: String? = null, val directory: String? = null) : Record, NodePackage.ProjectRepo","elide.tool.project.struct.nodepkg.NodePackage.ProjectRepo.ProjectRepoMap"]},{"name":"data class ProjectRepoString(val string: String? = null) : Record, NodePackage.ProjectRepo","description":"elide.tool.project.struct.nodepkg.NodePackage.ProjectRepo.ProjectRepoString","location":"packages/cli/elide.tool.project.struct.nodepkg/-node-package/-project-repo/-project-repo-string/index.html","searchKeys":["ProjectRepoString","data class ProjectRepoString(val string: String? = null) : Record, NodePackage.ProjectRepo","elide.tool.project.struct.nodepkg.NodePackage.ProjectRepo.ProjectRepoString"]},{"name":"data class ProjectSingleFunding(val entry: NodePackage.ProjectFundingEntry? = null) : Record, NodePackage.ProjectFunding","description":"elide.tool.project.struct.nodepkg.NodePackage.ProjectFunding.ProjectSingleFunding","location":"packages/cli/elide.tool.project.struct.nodepkg/-node-package/-project-funding/-project-single-funding/index.html","searchKeys":["ProjectSingleFunding","data class ProjectSingleFunding(val entry: NodePackage.ProjectFundingEntry? = null) : Record, NodePackage.ProjectFunding","elide.tool.project.struct.nodepkg.NodePackage.ProjectFunding.ProjectSingleFunding"]},{"name":"data class Rethrow(val logger: Logger, val event: ErrorHandler.ErrorEvent, val throwable: Throwable = event.error) : Record, ErrorHandler.ErrorActionStrategy","description":"elide.tool.err.ErrorHandler.ErrorActionStrategy.Rethrow","location":"packages/cli/elide.tool.err/-error-handler/-error-action-strategy/-rethrow/index.html","searchKeys":["Rethrow","data class Rethrow(val logger: Logger, val event: ErrorHandler.ErrorEvent, val throwable: Throwable = event.error) : Record, ErrorHandler.ErrorActionStrategy","elide.tool.err.ErrorHandler.ErrorActionStrategy.Rethrow"]},{"name":"data class RuntimeInfo(val version: String = ElideTool.version(), val native: Boolean = ImageInfo.inImageCode(), val env: Map<String, String> = capturedEnvVariables.associateWith { System.getenv(it) }.toSortedMap(), val properties: Map<String, String> = System.getProperties().mapNotNull {\n      try {\n        it.key.toString() to it.value.toString()\n      } catch (err: Throwable) {\n        null\n      }\n    }.toMap().toSortedMap()) : Record","description":"elide.tool.err.PersistedError.RuntimeInfo","location":"packages/cli/elide.tool.err/-persisted-error/-runtime-info/index.html","searchKeys":["RuntimeInfo","data class RuntimeInfo(val version: String = ElideTool.version(), val native: Boolean = ImageInfo.inImageCode(), val env: Map<String, String> = capturedEnvVariables.associateWith { System.getenv(it) }.toSortedMap(), val properties: Map<String, String> = System.getProperties().mapNotNull {\n      try {\n        it.key.toString() to it.value.toString()\n      } catch (err: Throwable) {\n        null\n      }\n    }.toMap().toSortedMap()) : Record","elide.tool.err.PersistedError.RuntimeInfo"]},{"name":"data class SandboxSettings(val isolates: Boolean = DEFAULT_ISOLATES) : Record","description":"elide.tool.cli.options.AccessControlOptions.SandboxSettings","location":"packages/cli/elide.tool.cli.options/-access-control-options/-sandbox-settings/index.html","searchKeys":["SandboxSettings","data class SandboxSettings(val isolates: Boolean = DEFAULT_ISOLATES) : Record","elide.tool.cli.options.AccessControlOptions.SandboxSettings"]},{"name":"data class Suppress(val warning: String?, val logger: Logger, val event: ErrorHandler.ErrorEvent) : Record, ErrorHandler.ErrorActionStrategy","description":"elide.tool.err.ErrorHandler.ErrorActionStrategy.Suppress","location":"packages/cli/elide.tool.err/-error-handler/-error-action-strategy/-suppress/index.html","searchKeys":["Suppress","data class Suppress(val warning: String?, val logger: Logger, val event: ErrorHandler.ErrorEvent) : Record, ErrorHandler.ErrorActionStrategy","elide.tool.err.ErrorHandler.ErrorActionStrategy.Suppress"]},{"name":"data class Test(val path: String, val state: TestState, val failures: Collection<String> = emptyList(), val assertions: Collection<String> = emptyList())","description":"elide.tool.cli.output.Test","location":"packages/cli/elide.tool.cli.output/-test/index.html","searchKeys":["Test","data class Test(val path: String, val state: TestState, val failures: Collection<String> = emptyList(), val assertions: Collection<String> = emptyList())","elide.tool.cli.output.Test"]},{"name":"data class TestResultInfo(val result: TestResult.Result, val err: Throwable?, val start: Instant, val end: Instant, val output: StringBuilder?, val errOutput: StringBuilder?, val test: Testable<*>, val info: TestInfo, val messages: Collection<String>) : Record, TestResult","description":"elide.tool.testing.TestResult.TestResultInfo","location":"packages/cli/elide.tool.testing/-test-result/-test-result-info/index.html","searchKeys":["TestResultInfo","data class TestResultInfo(val result: TestResult.Result, val err: Throwable?, val start: Instant, val end: Instant, val output: StringBuilder?, val errOutput: StringBuilder?, val test: Testable<*>, val info: TestInfo, val messages: Collection<String>) : Record, TestResult","elide.tool.testing.TestResult.TestResultInfo"]},{"name":"data object ErrorUtils","description":"elide.tool.err.ErrorHandler.ErrorUtils","location":"packages/cli/elide.tool.err/-error-handler/-error-utils/index.html","searchKeys":["ErrorUtils","data object ErrorUtils","elide.tool.err.ErrorHandler.ErrorUtils"]},{"name":"data object Success : CommandResult","description":"elide.tool.cli.CommandResult.Success","location":"packages/cli/elide.tool.cli/-command-result/-success/index.html","searchKeys":["Success","data object Success : CommandResult","elide.tool.cli.CommandResult.Success"]},{"name":"enum Action : Enum<ErrorHandler.Action> ","description":"elide.tool.err.ErrorHandler.Action","location":"packages/cli/elide.tool.err/-error-handler/-action/index.html","searchKeys":["Action","enum Action : Enum<ErrorHandler.Action> ","elide.tool.err.ErrorHandler.Action"]},{"name":"enum GuestLanguage : Enum<GuestLanguage> , GuestLanguage","description":"elide.tool.cli.GuestLanguage","location":"packages/cli/elide.tool.cli/-guest-language/index.html","searchKeys":["GuestLanguage","enum GuestLanguage : Enum<GuestLanguage> , GuestLanguage","elide.tool.cli.GuestLanguage"]},{"name":"enum Result : Enum<TestResult.Result> ","description":"elide.tool.testing.TestResult.Result","location":"packages/cli/elide.tool.testing/-test-result/-result/index.html","searchKeys":["Result","enum Result : Enum<TestResult.Result> ","elide.tool.testing.TestResult.Result"]},{"name":"enum TestStage : Enum<TestContext.TestStage> ","description":"elide.tool.testing.TestContext.TestStage","location":"packages/cli/elide.tool.testing/-test-context/-test-stage/index.html","searchKeys":["TestStage","enum TestStage : Enum<TestContext.TestStage> ","elide.tool.testing.TestContext.TestStage"]},{"name":"enum TestState : Enum<TestState> ","description":"elide.tool.cli.output.TestState","location":"packages/cli/elide.tool.cli.output/-test-state/index.html","searchKeys":["TestState","enum TestState : Enum<TestState> ","elide.tool.cli.output.TestState"]},{"name":"enum Type : Enum<TestEvent.Type> ","description":"elide.tool.testing.TestEvent.Type","location":"packages/cli/elide.tool.testing/-test-event/-type/index.html","searchKeys":["Type","enum Type : Enum<TestEvent.Type> ","elide.tool.testing.TestEvent.Type"]},{"name":"fun <C : TestContext, T : Testable<C>> of(name: String, case: T): TestInfo","description":"elide.tool.testing.TestInfo.Companion.of","location":"packages/cli/elide.tool.testing/-test-info/-companion/of.html","searchKeys":["of","fun <C : TestContext, T : Testable<C>> of(name: String, case: T): TestInfo","elide.tool.testing.TestInfo.Companion.of"]},{"name":"fun <T> value(nonNullValue: T): Lazy<T>","description":"elide.tool.cli.control.Lazy.Companion.value","location":"packages/cli/elide.tool.cli.control/-lazy/-companion/value.html","searchKeys":["value","fun <T> value(nonNullValue: T): Lazy<T>","elide.tool.cli.control.Lazy.Companion.value"]},{"name":"fun <V> of(supplier: Supplier<V>): Lazy<V>","description":"elide.tool.cli.control.Lazy.Companion.of","location":"packages/cli/elide.tool.cli.control/-lazy/-companion/of.html","searchKeys":["of","fun <V> of(supplier: Supplier<V>): Lazy<V>","elide.tool.cli.control.Lazy.Companion.of"]},{"name":"fun ErrorHandler.ErrorEvent.coordinates(): ErrorHandler.ErrorCoordinates","description":"elide.tool.err.ErrorHandler.ErrorCoordinates.Companion.coordinates","location":"packages/cli/elide.tool.err/-error-handler/-error-coordinates/-companion/coordinates.html","searchKeys":["coordinates","fun ErrorHandler.ErrorEvent.coordinates(): ErrorHandler.ErrorCoordinates","elide.tool.err.ErrorHandler.ErrorCoordinates.Companion.coordinates"]},{"name":"fun Log(complete: SnapshotStateList<Test>)","description":"elide.tool.cli.output.Log","location":"packages/cli/elide.tool.cli.output/-log.html","searchKeys":["Log","fun Log(complete: SnapshotStateList<Test>)","elide.tool.cli.output.Log"]},{"name":"fun StackTraceElement.toFrame(): ErrorHandler.ErrorStackFrame","description":"elide.tool.err.ErrorHandler.ErrorStackFrame.Companion.toFrame","location":"packages/cli/elide.tool.err/-error-handler/-error-stack-frame/-companion/to-frame.html","searchKeys":["toFrame","fun StackTraceElement.toFrame(): ErrorHandler.ErrorStackFrame","elide.tool.err.ErrorHandler.ErrorStackFrame.Companion.toFrame"]},{"name":"fun Status(tests: List<Test>)","description":"elide.tool.cli.output.Status","location":"packages/cli/elide.tool.cli.output/-status.html","searchKeys":["Status","fun Status(tests: List<Test>)","elide.tool.cli.output.Status"]},{"name":"fun TestProgress(totalTests: Int, passed: Int, failed: Int, running: Int)","description":"elide.tool.cli.output.TestProgress","location":"packages/cli/elide.tool.cli.output/-test-progress.html","searchKeys":["TestProgress","fun TestProgress(totalTests: Int, passed: Int, failed: Int, running: Int)","elide.tool.cli.output.TestProgress"]},{"name":"fun TestRow(test: Test)","description":"elide.tool.cli.output.TestRow","location":"packages/cli/elide.tool.cli.output/-test-row.html","searchKeys":["TestRow","fun TestRow(test: Test)","elide.tool.cli.output.TestRow"]},{"name":"fun Throwable.buildStacktrace(): String","description":"elide.tool.err.ErrorHandler.ErrorUtils.buildStacktrace","location":"packages/cli/elide.tool.err/-error-handler/-error-utils/build-stacktrace.html","searchKeys":["buildStacktrace","fun Throwable.buildStacktrace(): String","elide.tool.err.ErrorHandler.ErrorUtils.buildStacktrace"]},{"name":"fun Throwable.walkFrames(): List<ErrorHandler.ErrorStackFrame>","description":"elide.tool.err.ErrorHandler.ErrorUtils.walkFrames","location":"packages/cli/elide.tool.err/-error-handler/-error-utils/walk-frames.html","searchKeys":["walkFrames","fun Throwable.walkFrames(): List<ErrorHandler.ErrorStackFrame>","elide.tool.err.ErrorHandler.ErrorUtils.walkFrames"]},{"name":"fun boot(workdir: WorkdirManager, properties: () -> List<Pair<String, String>>)","description":"elide.tool.engine.NativeEngine.boot","location":"packages/cli/elide.tool.engine/-native-engine/boot.html","searchKeys":["boot","fun boot(workdir: WorkdirManager, properties: () -> List<Pair<String, String>>)","elide.tool.engine.NativeEngine.boot"]},{"name":"fun create(event: ErrorHandler.ErrorEvent, id: Uuid = event.uuid, timestamp: Instant = event.timestamp): PersistedError","description":"elide.tool.err.PersistedError.Companion.create","location":"packages/cli/elide.tool.err/-persisted-error/-companion/create.html","searchKeys":["create","fun create(event: ErrorHandler.ErrorEvent, id: Uuid = event.uuid, timestamp: Instant = event.timestamp): PersistedError","elide.tool.err.PersistedError.Companion.create"]},{"name":"fun create(handler: ErrorHandler, event: ErrorHandler.ErrorEvent): ErrorHandler.ErrorHandlerContext","description":"elide.tool.err.ErrorHandler.Factory.create","location":"packages/cli/elide.tool.err/-error-handler/-factory/create.html","searchKeys":["create","fun create(handler: ErrorHandler, event: ErrorHandler.ErrorEvent): ErrorHandler.ErrorHandlerContext","elide.tool.err.ErrorHandler.Factory.create"]},{"name":"fun default(state: CommandState, ctx: CoroutineContext): CommandContext","description":"elide.tool.cli.CommandContext.Companion.default","location":"packages/cli/elide.tool.cli/-command-context/-companion/default.html","searchKeys":["default","fun default(state: CommandState, ctx: CoroutineContext): CommandContext","elide.tool.cli.CommandContext.Companion.default"]},{"name":"fun didLoad(group: String): Boolean","description":"elide.tool.engine.NativeEngine.didLoad","location":"packages/cli/elide.tool.engine/-native-engine/did-load.html","searchKeys":["didLoad","fun didLoad(group: String): Boolean","elide.tool.engine.NativeEngine.didLoad"]},{"name":"fun dropped(testInfo: TestInfo, test: Testable<*>, start: Instant, end: Instant = Clock.System.now()): TestResult","description":"elide.tool.testing.TestResult.Companion.dropped","location":"packages/cli/elide.tool.testing/-test-result/-companion/dropped.html","searchKeys":["dropped","fun dropped(testInfo: TestInfo, test: Testable<*>, start: Instant, end: Instant = Clock.System.now()): TestResult","elide.tool.testing.TestResult.Companion.dropped"]},{"name":"fun enforce(stage: TestContext.TestStage, vararg allowed: TestContext.TestStage)","description":"elide.tool.testing.TestContext.Utils.enforce","location":"packages/cli/elide.tool.testing/-test-context/-utils/enforce.html","searchKeys":["enforce","fun enforce(stage: TestContext.TestStage, vararg allowed: TestContext.TestStage)","elide.tool.testing.TestContext.Utils.enforce"]},{"name":"fun err(exitCode: Int = DEFAULT_ERROR_EXIT_CODE, message: String? = null): CommandResult","description":"elide.tool.cli.CommandResult.Companion.err","location":"packages/cli/elide.tool.cli/-command-result/-companion/err.html","searchKeys":["err","fun err(exitCode: Int = DEFAULT_ERROR_EXIT_CODE, message: String? = null): CommandResult","elide.tool.cli.CommandResult.Companion.err"]},{"name":"fun failure(testInfo: TestInfo, test: Testable<*>, start: Instant, end: Instant = Clock.System.now(), err: Throwable? = null, messages: Collection<String> = emptyList(), output: StringBuilder? = null, errOutput: StringBuilder? = null): TestResult","description":"elide.tool.testing.TestResult.Companion.failure","location":"packages/cli/elide.tool.testing/-test-result/-companion/failure.html","searchKeys":["failure","fun failure(testInfo: TestInfo, test: Testable<*>, start: Instant, end: Instant = Clock.System.now(), err: Throwable? = null, messages: Collection<String> = emptyList(), output: StringBuilder? = null, errOutput: StringBuilder? = null): TestResult","elide.tool.testing.TestResult.Companion.failure"]},{"name":"fun fromError(result: TestResult.Result, test: Testable<out TestContext>, start: Instant, info: TestInfo, end: Instant, err: Throwable? = null, messages: Collection<String> = emptyList(), output: StringBuilder? = null, errOutput: StringBuilder? = null): TestResult.TestResultInfo","description":"elide.tool.testing.TestResult.TestResultInfo.Companion.fromError","location":"packages/cli/elide.tool.testing/-test-result/-test-result-info/-companion/from-error.html","searchKeys":["fromError","fun fromError(result: TestResult.Result, test: Testable<out TestContext>, start: Instant, info: TestInfo, end: Instant, err: Throwable? = null, messages: Collection<String> = emptyList(), output: StringBuilder? = null, errOutput: StringBuilder? = null): TestResult.TestResultInfo","elide.tool.testing.TestResult.TestResultInfo.Companion.fromError"]},{"name":"fun fromInfo(result: TestResult.Result, test: Testable<out TestContext>, start: Instant, info: TestInfo, end: Instant, messages: Collection<String> = emptyList(), output: StringBuilder? = null, errOutput: StringBuilder? = null): TestResult.TestResultInfo","description":"elide.tool.testing.TestResult.TestResultInfo.Companion.fromInfo","location":"packages/cli/elide.tool.testing/-test-result/-test-result-info/-companion/from-info.html","searchKeys":["fromInfo","fun fromInfo(result: TestResult.Result, test: Testable<out TestContext>, start: Instant, info: TestInfo, end: Instant, messages: Collection<String> = emptyList(), output: StringBuilder? = null, errOutput: StringBuilder? = null): TestResult.TestResultInfo","elide.tool.testing.TestResult.TestResultInfo.Companion.fromInfo"]},{"name":"fun load(workdir: WorkdirManager, extraProps: List<Pair<String, String>>)","description":"elide.tool.engine.NativeEngine.load","location":"packages/cli/elide.tool.engine/-native-engine/load.html","searchKeys":["load","fun load(workdir: WorkdirManager, extraProps: List<Pair<String, String>>)","elide.tool.engine.NativeEngine.load"]},{"name":"fun main(args: Array<String>)","description":"elide.tool.cli.ElideTool.Companion.main","location":"packages/cli/elide.tool.cli/-elide-tool/-companion/main.html","searchKeys":["main","fun main(args: Array<String>)","elide.tool.cli.ElideTool.Companion.main"]},{"name":"fun of(): CommandResult","description":"elide.tool.cli.CommandResult.Success.of","location":"packages/cli/elide.tool.cli/-command-result/-success/of.html","searchKeys":["of","fun of(): CommandResult","elide.tool.cli.CommandResult.Success.of"]},{"name":"fun of(args: List<String>, debug: Boolean, verbose: Boolean, quiet: Boolean, pretty: Boolean): CommandOptions","description":"elide.tool.cli.state.CommandOptions.Companion.of","location":"packages/cli/elide.tool.cli.state/-command-options/-companion/of.html","searchKeys":["of","fun of(args: List<String>, debug: Boolean, verbose: Boolean, quiet: Boolean, pretty: Boolean): CommandOptions","elide.tool.cli.state.CommandOptions.Companion.of"]},{"name":"fun of(err: Throwable, context: ErrorHandler.ErrorContext? = null): ErrorHandler.ErrorEvent","description":"elide.tool.err.ErrorHandler.ErrorEvent.Companion.of","location":"packages/cli/elide.tool.err/-error-handler/-error-event/-companion/of.html","searchKeys":["of","fun of(err: Throwable, context: ErrorHandler.ErrorContext? = null): ErrorHandler.ErrorEvent","elide.tool.err.ErrorHandler.ErrorEvent.Companion.of"]},{"name":"fun of(group: String, name: String, path: String, staticName: String): NativeLib","description":"elide.tool.engine.NativeLib.Companion.of","location":"packages/cli/elide.tool.engine/-native-lib/-companion/of.html","searchKeys":["of","fun of(group: String, name: String, path: String, staticName: String): NativeLib","elide.tool.engine.NativeLib.Companion.of"]},{"name":"fun of(result: TestResult.Result, test: Testable<out TestContext>, start: Instant, testInfo: TestInfo, err: Throwable? = null, end: Instant, messages: Collection<String> = emptyList(), output: StringBuilder? = null, errOutput: StringBuilder? = null): TestResult","description":"elide.tool.testing.TestResult.Companion.of","location":"packages/cli/elide.tool.testing/-test-result/-companion/of.html","searchKeys":["of","fun of(result: TestResult.Result, test: Testable<out TestContext>, start: Instant, testInfo: TestInfo, err: Throwable? = null, end: Instant, messages: Collection<String> = emptyList(), output: StringBuilder? = null, errOutput: StringBuilder? = null): TestResult","elide.tool.testing.TestResult.Companion.of"]},{"name":"fun of(root: String, name: String? = null, env: ProjectInfo.ProjectEnvironment? = null, config: ProjectConfig? = null): ProjectInfo","description":"elide.tool.project.ProjectInfo.Companion.of","location":"packages/cli/elide.tool.project/-project-info/-companion/of.html","searchKeys":["of","fun of(root: String, name: String? = null, env: ProjectInfo.ProjectEnvironment? = null, config: ProjectConfig? = null): ProjectInfo","elide.tool.project.ProjectInfo.Companion.of"]},{"name":"fun packageJson(path: String, pkg: NodePackage): ProjectConfig.PackageJsonProjectConfig","description":"elide.tool.project.ProjectConfig.Companion.packageJson","location":"packages/cli/elide.tool.project/-project-config/-companion/package-json.html","searchKeys":["packageJson","fun packageJson(path: String, pkg: NodePackage): ProjectConfig.PackageJsonProjectConfig","elide.tool.project.ProjectConfig.Companion.packageJson"]},{"name":"fun runJestSample()","description":"elide.tool.cli.output.runJestSample","location":"packages/cli/elide.tool.cli.output/run-jest-sample.html","searchKeys":["runJestSample","fun runJestSample()","elide.tool.cli.output.runJestSample"]},{"name":"fun skipped(testInfo: TestInfo, test: Testable<*>, start: Instant, end: Instant = Clock.System.now(), messages: Collection<String> = emptyList(), output: StringBuilder? = null, errOutput: StringBuilder? = null): TestResult","description":"elide.tool.testing.TestResult.Companion.skipped","location":"packages/cli/elide.tool.testing/-test-result/-companion/skipped.html","searchKeys":["skipped","fun skipped(testInfo: TestInfo, test: Testable<*>, start: Instant, end: Instant = Clock.System.now(), messages: Collection<String> = emptyList(), output: StringBuilder? = null, errOutput: StringBuilder? = null): TestResult","elide.tool.testing.TestResult.Companion.skipped"]},{"name":"fun success(): CommandResult","description":"elide.tool.cli.CommandResult.Companion.success","location":"packages/cli/elide.tool.cli/-command-result/-companion/success.html","searchKeys":["success","fun success(): CommandResult","elide.tool.cli.CommandResult.Companion.success"]},{"name":"fun success(testInfo: TestInfo, test: Testable<*>, start: Instant, end: Instant = Clock.System.now(), messages: Collection<String> = emptyList(), output: StringBuilder? = null, errOutput: StringBuilder? = null): TestResult","description":"elide.tool.testing.TestResult.Companion.success","location":"packages/cli/elide.tool.testing/-test-result/-companion/success.html","searchKeys":["success","fun success(testInfo: TestInfo, test: Testable<*>, start: Instant, end: Instant = Clock.System.now(), messages: Collection<String> = emptyList(), output: StringBuilder? = null, errOutput: StringBuilder? = null): TestResult","elide.tool.testing.TestResult.Companion.success"]},{"name":"fun toSettings(): AccessControlOptions.AccessControlSettings","description":"elide.tool.cli.options.AccessControlOptions.toSettings","location":"packages/cli/elide.tool.cli.options/-access-control-options/to-settings.html","searchKeys":["toSettings","fun toSettings(): AccessControlOptions.AccessControlSettings","elide.tool.cli.options.AccessControlOptions.toSettings"]},{"name":"fun valueOf(value: String): ErrorHandler.Action","description":"elide.tool.err.ErrorHandler.Action.valueOf","location":"packages/cli/elide.tool.err/-error-handler/-action/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): ErrorHandler.Action","elide.tool.err.ErrorHandler.Action.valueOf"]},{"name":"fun valueOf(value: String): GuestLanguage","description":"elide.tool.cli.GuestLanguage.valueOf","location":"packages/cli/elide.tool.cli/-guest-language/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): GuestLanguage","elide.tool.cli.GuestLanguage.valueOf"]},{"name":"fun valueOf(value: String): TestContext.TestStage","description":"elide.tool.testing.TestContext.TestStage.valueOf","location":"packages/cli/elide.tool.testing/-test-context/-test-stage/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): TestContext.TestStage","elide.tool.testing.TestContext.TestStage.valueOf"]},{"name":"fun valueOf(value: String): TestEvent.Type","description":"elide.tool.testing.TestEvent.Type.valueOf","location":"packages/cli/elide.tool.testing/-test-event/-type/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): TestEvent.Type","elide.tool.testing.TestEvent.Type.valueOf"]},{"name":"fun valueOf(value: String): TestResult.Result","description":"elide.tool.testing.TestResult.Result.valueOf","location":"packages/cli/elide.tool.testing/-test-result/-result/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): TestResult.Result","elide.tool.testing.TestResult.Result.valueOf"]},{"name":"fun valueOf(value: String): TestState","description":"elide.tool.cli.output.TestState.valueOf","location":"packages/cli/elide.tool.cli.output/-test-state/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): TestState","elide.tool.cli.output.TestState.valueOf"]},{"name":"fun values(): Array<ErrorHandler.Action>","description":"elide.tool.err.ErrorHandler.Action.values","location":"packages/cli/elide.tool.err/-error-handler/-action/values.html","searchKeys":["values","fun values(): Array<ErrorHandler.Action>","elide.tool.err.ErrorHandler.Action.values"]},{"name":"fun values(): Array<GuestLanguage>","description":"elide.tool.cli.GuestLanguage.values","location":"packages/cli/elide.tool.cli/-guest-language/values.html","searchKeys":["values","fun values(): Array<GuestLanguage>","elide.tool.cli.GuestLanguage.values"]},{"name":"fun values(): Array<TestContext.TestStage>","description":"elide.tool.testing.TestContext.TestStage.values","location":"packages/cli/elide.tool.testing/-test-context/-test-stage/values.html","searchKeys":["values","fun values(): Array<TestContext.TestStage>","elide.tool.testing.TestContext.TestStage.values"]},{"name":"fun values(): Array<TestEvent.Type>","description":"elide.tool.testing.TestEvent.Type.values","location":"packages/cli/elide.tool.testing/-test-event/-type/values.html","searchKeys":["values","fun values(): Array<TestEvent.Type>","elide.tool.testing.TestEvent.Type.values"]},{"name":"fun values(): Array<TestResult.Result>","description":"elide.tool.testing.TestResult.Result.values","location":"packages/cli/elide.tool.testing/-test-result/-result/values.html","searchKeys":["values","fun values(): Array<TestResult.Result>","elide.tool.testing.TestResult.Result.values"]},{"name":"fun values(): Array<TestState>","description":"elide.tool.cli.output.TestState.values","location":"packages/cli/elide.tool.cli.output/-test-state/values.html","searchKeys":["values","fun values(): Array<TestState>","elide.tool.cli.output.TestState.values"]},{"name":"fun version(): String","description":"elide.tool.cli.ElideTool.Companion.version","location":"packages/cli/elide.tool.cli/-elide-tool/-companion/version.html","searchKeys":["version","fun version(): String","elide.tool.cli.ElideTool.Companion.version"]},{"name":"fun wrapping(map: SortedMap<String, EnvConfig.EnvVar>): ProjectInfo.ProjectEnvironment","description":"elide.tool.project.ProjectInfo.ProjectEnvironment.Companion.wrapping","location":"packages/cli/elide.tool.project/-project-info/-project-environment/-companion/wrapping.html","searchKeys":["wrapping","fun wrapping(map: SortedMap<String, EnvConfig.EnvVar>): ProjectInfo.ProjectEnvironment","elide.tool.project.ProjectInfo.ProjectEnvironment.Companion.wrapping"]},{"name":"inline suspend fun <R> assertDoesNotThrow(failureMessage: String? = null, crossinline op: suspend () -> R): R","description":"elide.tool.testing.TestContext.Companion.assertDoesNotThrow","location":"packages/cli/elide.tool.testing/-test-context/-companion/assert-does-not-throw.html","searchKeys":["assertDoesNotThrow","inline suspend fun <R> assertDoesNotThrow(failureMessage: String? = null, crossinline op: suspend () -> R): R","elide.tool.testing.TestContext.Companion.assertDoesNotThrow"]},{"name":"inline suspend fun <V> startMosaicSession(crossinline op: suspend MosaicScope.() -> V): V","description":"elide.tool.cli.AbstractToolCommand.startMosaicSession","location":"packages/cli/elide.tool.cli/-abstract-tool-command/start-mosaic-session.html","searchKeys":["startMosaicSession","inline suspend fun <V> startMosaicSession(crossinline op: suspend MosaicScope.() -> V): V","elide.tool.cli.AbstractToolCommand.startMosaicSession"]},{"name":"inline suspend fun <X> assertThrows(failureMessage: String? = null, crossinline op: suspend () -> Unit): X","description":"elide.tool.testing.TestContext.Companion.assertThrows","location":"packages/cli/elide.tool.testing/-test-context/-companion/assert-throws.html","searchKeys":["assertThrows","inline suspend fun <X> assertThrows(failureMessage: String? = null, crossinline op: suspend () -> Unit): X","elide.tool.testing.TestContext.Companion.assertThrows"]},{"name":"interface CommandApi","description":"elide.tool.cli.CommandApi","location":"packages/cli/elide.tool.cli/-command-api/index.html","searchKeys":["CommandApi","interface CommandApi","elide.tool.cli.CommandApi"]},{"name":"interface CommandContext : CoroutineScope","description":"elide.tool.cli.CommandContext","location":"packages/cli/elide.tool.cli/-command-context/index.html","searchKeys":["CommandContext","interface CommandContext : CoroutineScope","elide.tool.cli.CommandContext"]},{"name":"interface CommandResult","description":"elide.tool.cli.CommandResult","location":"packages/cli/elide.tool.cli/-command-result/index.html","searchKeys":["CommandResult","interface CommandResult","elide.tool.cli.CommandResult"]},{"name":"interface DefaultCommandContext : CommandContext","description":"elide.tool.cli.CommandContext.DefaultCommandContext","location":"packages/cli/elide.tool.cli/-command-context/-default-command-context/index.html","searchKeys":["DefaultCommandContext","interface DefaultCommandContext : CommandContext","elide.tool.cli.CommandContext.DefaultCommandContext"]},{"name":"interface ErrorActionStrategy","description":"elide.tool.err.ErrorHandler.ErrorActionStrategy","location":"packages/cli/elide.tool.err/-error-handler/-error-action-strategy/index.html","searchKeys":["ErrorActionStrategy","interface ErrorActionStrategy","elide.tool.err.ErrorHandler.ErrorActionStrategy"]},{"name":"interface ErrorEvent : Comparable<ErrorHandler.ErrorEvent> ","description":"elide.tool.err.ErrorHandler.ErrorEvent","location":"packages/cli/elide.tool.err/-error-handler/-error-event/index.html","searchKeys":["ErrorEvent","interface ErrorEvent : Comparable<ErrorHandler.ErrorEvent> ","elide.tool.err.ErrorHandler.ErrorEvent"]},{"name":"interface ErrorHandler : CommandLine.IExitCodeExceptionMapper, Thread.UncaughtExceptionHandler","description":"elide.tool.err.ErrorHandler","location":"packages/cli/elide.tool.err/-error-handler/index.html","searchKeys":["ErrorHandler","interface ErrorHandler : CommandLine.IExitCodeExceptionMapper, Thread.UncaughtExceptionHandler","elide.tool.err.ErrorHandler"]},{"name":"interface ErrorHandlerContext","description":"elide.tool.err.ErrorHandler.ErrorHandlerContext","location":"packages/cli/elide.tool.err/-error-handler/-error-handler-context/index.html","searchKeys":["ErrorHandlerContext","interface ErrorHandlerContext","elide.tool.err.ErrorHandler.ErrorHandlerContext"]},{"name":"interface ErrorRecorder","description":"elide.tool.err.ErrorRecorder","location":"packages/cli/elide.tool.err/-error-recorder/index.html","searchKeys":["ErrorRecorder","interface ErrorRecorder","elide.tool.err.ErrorRecorder"]},{"name":"interface LanguageOptions : RunnableOptionsMixin","description":"elide.tool.cli.options.LanguageOptions","location":"packages/cli/elide.tool.cli.options/-language-options/index.html","searchKeys":["LanguageOptions","interface LanguageOptions : RunnableOptionsMixin","elide.tool.cli.options.LanguageOptions"]},{"name":"interface NamedTest<Context : TestContext> : Testable<Context> ","description":"elide.tool.testing.NamedTest","location":"packages/cli/elide.tool.testing/-named-test/index.html","searchKeys":["NamedTest","interface NamedTest<Context : TestContext> : Testable<Context> ","elide.tool.testing.NamedTest"]},{"name":"interface NativeLibInfo : Comparable<NativeLib> ","description":"elide.tool.engine.NativeLibInfo","location":"packages/cli/elide.tool.engine/-native-lib-info/index.html","searchKeys":["NativeLibInfo","interface NativeLibInfo : Comparable<NativeLib> ","elide.tool.engine.NativeLibInfo"]},{"name":"interface OptionsMixin","description":"elide.tool.cli.options.OptionsMixin","location":"packages/cli/elide.tool.cli.options/-options-mixin/index.html","searchKeys":["OptionsMixin","interface OptionsMixin","elide.tool.cli.options.OptionsMixin"]},{"name":"interface PackageOverride","description":"elide.tool.project.struct.nodepkg.NodePackage.PackageOverride","location":"packages/cli/elide.tool.project.struct.nodepkg/-node-package/-package-override/index.html","searchKeys":["PackageOverride","interface PackageOverride","elide.tool.project.struct.nodepkg.NodePackage.PackageOverride"]},{"name":"interface ProjectBins","description":"elide.tool.project.struct.nodepkg.NodePackage.ProjectBins","location":"packages/cli/elide.tool.project.struct.nodepkg/-node-package/-project-bins/index.html","searchKeys":["ProjectBins","interface ProjectBins","elide.tool.project.struct.nodepkg.NodePackage.ProjectBins"]},{"name":"interface ProjectBugs","description":"elide.tool.project.struct.nodepkg.NodePackage.ProjectBugs","location":"packages/cli/elide.tool.project.struct.nodepkg/-node-package/-project-bugs/index.html","searchKeys":["ProjectBugs","interface ProjectBugs","elide.tool.project.struct.nodepkg.NodePackage.ProjectBugs"]},{"name":"interface ProjectConfig","description":"elide.tool.project.ProjectConfig","location":"packages/cli/elide.tool.project/-project-config/index.html","searchKeys":["ProjectConfig","interface ProjectConfig","elide.tool.project.ProjectConfig"]},{"name":"interface ProjectFunding","description":"elide.tool.project.struct.nodepkg.NodePackage.ProjectFunding","location":"packages/cli/elide.tool.project.struct.nodepkg/-node-package/-project-funding/index.html","searchKeys":["ProjectFunding","interface ProjectFunding","elide.tool.project.struct.nodepkg.NodePackage.ProjectFunding"]},{"name":"interface ProjectFundingEntry","description":"elide.tool.project.struct.nodepkg.NodePackage.ProjectFundingEntry","location":"packages/cli/elide.tool.project.struct.nodepkg/-node-package/-project-funding-entry/index.html","searchKeys":["ProjectFundingEntry","interface ProjectFundingEntry","elide.tool.project.struct.nodepkg.NodePackage.ProjectFundingEntry"]},{"name":"interface ProjectManager","description":"elide.tool.project.ProjectManager","location":"packages/cli/elide.tool.project/-project-manager/index.html","searchKeys":["ProjectManager","interface ProjectManager","elide.tool.project.ProjectManager"]},{"name":"interface ProjectMans","description":"elide.tool.project.struct.nodepkg.NodePackage.ProjectMans","location":"packages/cli/elide.tool.project.struct.nodepkg/-node-package/-project-mans/index.html","searchKeys":["ProjectMans","interface ProjectMans","elide.tool.project.struct.nodepkg.NodePackage.ProjectMans"]},{"name":"interface ProjectPerson","description":"elide.tool.project.struct.nodepkg.NodePackage.ProjectPerson","location":"packages/cli/elide.tool.project.struct.nodepkg/-node-package/-project-person/index.html","searchKeys":["ProjectPerson","interface ProjectPerson","elide.tool.project.struct.nodepkg.NodePackage.ProjectPerson"]},{"name":"interface ProjectRepo","description":"elide.tool.project.struct.nodepkg.NodePackage.ProjectRepo","location":"packages/cli/elide.tool.project.struct.nodepkg/-node-package/-project-repo/index.html","searchKeys":["ProjectRepo","interface ProjectRepo","elide.tool.project.struct.nodepkg.NodePackage.ProjectRepo"]},{"name":"interface RunnableOptionsMixin : OptionsMixin","description":"elide.tool.cli.options.RunnableOptionsMixin","location":"packages/cli/elide.tool.cli.options/-runnable-options-mixin/index.html","searchKeys":["RunnableOptionsMixin","interface RunnableOptionsMixin : OptionsMixin","elide.tool.cli.options.RunnableOptionsMixin"]},{"name":"interface SelfTestContext : TestContext","description":"elide.tool.testing.SelfTest.SelfTestContext","location":"packages/cli/elide.tool.testing/-self-test/-self-test-context/index.html","searchKeys":["SelfTestContext","interface SelfTestContext : TestContext","elide.tool.testing.SelfTest.SelfTestContext"]},{"name":"interface SpecializedCommandContext : CommandContext.DefaultCommandContext","description":"elide.tool.cli.CommandContext.SpecializedCommandContext","location":"packages/cli/elide.tool.cli/-command-context/-specialized-command-context/index.html","searchKeys":["SpecializedCommandContext","interface SpecializedCommandContext : CommandContext.DefaultCommandContext","elide.tool.cli.CommandContext.SpecializedCommandContext"]},{"name":"interface TestCase<Test : Testable<Context>, Context : TestContext>","description":"elide.tool.testing.TestCase","location":"packages/cli/elide.tool.testing/-test-case/index.html","searchKeys":["TestCase","interface TestCase<Test : Testable<Context>, Context : TestContext>","elide.tool.testing.TestCase"]},{"name":"interface TestContext : AutoCloseable","description":"elide.tool.testing.TestContext","location":"packages/cli/elide.tool.testing/-test-context/index.html","searchKeys":["TestContext","interface TestContext : AutoCloseable","elide.tool.testing.TestContext"]},{"name":"interface TestEvent<T : Testable<C>, C : TestContext>","description":"elide.tool.testing.TestEvent","location":"packages/cli/elide.tool.testing/-test-event/index.html","searchKeys":["TestEvent","interface TestEvent<T : Testable<C>, C : TestContext>","elide.tool.testing.TestEvent"]},{"name":"interface TestEventListener<T : Testable<C>, C : TestContext>","description":"elide.tool.testing.TestEventListener","location":"packages/cli/elide.tool.testing/-test-event-listener/index.html","searchKeys":["TestEventListener","interface TestEventListener<T : Testable<C>, C : TestContext>","elide.tool.testing.TestEventListener"]},{"name":"interface TestResult","description":"elide.tool.testing.TestResult","location":"packages/cli/elide.tool.testing/-test-result/index.html","searchKeys":["TestResult","interface TestResult","elide.tool.testing.TestResult"]},{"name":"interface Testable<Context : TestContext>","description":"elide.tool.testing.Testable","location":"packages/cli/elide.tool.testing/-testable/index.html","searchKeys":["Testable","interface Testable<Context : TestContext>","elide.tool.testing.Testable"]},{"name":"interface WorkdirHandle","description":"elide.tool.io.WorkdirManager.WorkdirHandle","location":"packages/cli/elide.tool.io/-workdir-manager/-workdir-handle/index.html","searchKeys":["WorkdirHandle","interface WorkdirHandle","elide.tool.io.WorkdirManager.WorkdirHandle"]},{"name":"interface WorkdirManager : AutoCloseable","description":"elide.tool.io.WorkdirManager","location":"packages/cli/elide.tool.io/-workdir-manager/index.html","searchKeys":["WorkdirManager","interface WorkdirManager : AutoCloseable","elide.tool.io.WorkdirManager"]},{"name":"object Companion","description":"elide.tool.cli.AbstractToolCommand.Companion","location":"packages/cli/elide.tool.cli/-abstract-tool-command/-companion/index.html","searchKeys":["Companion","object Companion","elide.tool.cli.AbstractToolCommand.Companion"]},{"name":"object Companion","description":"elide.tool.cli.CommandContext.Companion","location":"packages/cli/elide.tool.cli/-command-context/-companion/index.html","searchKeys":["Companion","object Companion","elide.tool.cli.CommandContext.Companion"]},{"name":"object Companion","description":"elide.tool.cli.CommandResult.Companion","location":"packages/cli/elide.tool.cli/-command-result/-companion/index.html","searchKeys":["Companion","object Companion","elide.tool.cli.CommandResult.Companion"]},{"name":"object Companion","description":"elide.tool.cli.ElideTool.Companion","location":"packages/cli/elide.tool.cli/-elide-tool/-companion/index.html","searchKeys":["Companion","object Companion","elide.tool.cli.ElideTool.Companion"]},{"name":"object Companion","description":"elide.tool.cli.GuestLanguage.Companion","location":"packages/cli/elide.tool.cli/-guest-language/-companion/index.html","searchKeys":["Companion","object Companion","elide.tool.cli.GuestLanguage.Companion"]},{"name":"object Companion","description":"elide.tool.cli.control.ExecutionController.Companion","location":"packages/cli/elide.tool.cli.control/-execution-controller/-companion/index.html","searchKeys":["Companion","object Companion","elide.tool.cli.control.ExecutionController.Companion"]},{"name":"object Companion","description":"elide.tool.cli.control.Lazy.Companion","location":"packages/cli/elide.tool.cli.control/-lazy/-companion/index.html","searchKeys":["Companion","object Companion","elide.tool.cli.control.Lazy.Companion"]},{"name":"object Companion","description":"elide.tool.cli.options.AccessControlOptions.AccessControlSettings.Companion","location":"packages/cli/elide.tool.cli.options/-access-control-options/-access-control-settings/-companion/index.html","searchKeys":["Companion","object Companion","elide.tool.cli.options.AccessControlOptions.AccessControlSettings.Companion"]},{"name":"object Companion","description":"elide.tool.cli.options.AccessControlOptions.HostAccessSettings.Companion","location":"packages/cli/elide.tool.cli.options/-access-control-options/-host-access-settings/-companion/index.html","searchKeys":["Companion","object Companion","elide.tool.cli.options.AccessControlOptions.HostAccessSettings.Companion"]},{"name":"object Companion","description":"elide.tool.cli.options.AccessControlOptions.SandboxSettings.Companion","location":"packages/cli/elide.tool.cli.options/-access-control-options/-sandbox-settings/-companion/index.html","searchKeys":["Companion","object Companion","elide.tool.cli.options.AccessControlOptions.SandboxSettings.Companion"]},{"name":"object Companion","description":"elide.tool.cli.state.CommandOptions.Companion","location":"packages/cli/elide.tool.cli.state/-command-options/-companion/index.html","searchKeys":["Companion","object Companion","elide.tool.cli.state.CommandOptions.Companion"]},{"name":"object Companion","description":"elide.tool.control.AbstractScriptEngineFactory.Companion","location":"packages/cli/elide.tool.control/-abstract-script-engine-factory/-companion/index.html","searchKeys":["Companion","object Companion","elide.tool.control.AbstractScriptEngineFactory.Companion"]},{"name":"object Companion","description":"elide.tool.engine.LanguageCondition.Companion","location":"packages/cli/elide.tool.engine/-language-condition/-companion/index.html","searchKeys":["Companion","object Companion","elide.tool.engine.LanguageCondition.Companion"]},{"name":"object Companion","description":"elide.tool.engine.NativeLib.Companion","location":"packages/cli/elide.tool.engine/-native-lib/-companion/index.html","searchKeys":["Companion","object Companion","elide.tool.engine.NativeLib.Companion"]},{"name":"object Companion","description":"elide.tool.err.ErrorHandler.ErrorContext.Companion","location":"packages/cli/elide.tool.err/-error-handler/-error-context/-companion/index.html","searchKeys":["Companion","object Companion","elide.tool.err.ErrorHandler.ErrorContext.Companion"]},{"name":"object Companion","description":"elide.tool.err.ErrorHandler.ErrorCoordinates.Companion","location":"packages/cli/elide.tool.err/-error-handler/-error-coordinates/-companion/index.html","searchKeys":["Companion","object Companion","elide.tool.err.ErrorHandler.ErrorCoordinates.Companion"]},{"name":"object Companion","description":"elide.tool.err.ErrorHandler.ErrorEvent.Companion","location":"packages/cli/elide.tool.err/-error-handler/-error-event/-companion/index.html","searchKeys":["Companion","object Companion","elide.tool.err.ErrorHandler.ErrorEvent.Companion"]},{"name":"object Companion","description":"elide.tool.err.ErrorHandler.ErrorStackFrame.Companion","location":"packages/cli/elide.tool.err/-error-handler/-error-stack-frame/-companion/index.html","searchKeys":["Companion","object Companion","elide.tool.err.ErrorHandler.ErrorStackFrame.Companion"]},{"name":"object Companion","description":"elide.tool.err.PersistedError.Companion","location":"packages/cli/elide.tool.err/-persisted-error/-companion/index.html","searchKeys":["Companion","object Companion","elide.tool.err.PersistedError.Companion"]},{"name":"object Companion","description":"elide.tool.err.PersistedError.RuntimeInfo.Companion","location":"packages/cli/elide.tool.err/-persisted-error/-runtime-info/-companion/index.html","searchKeys":["Companion","object Companion","elide.tool.err.PersistedError.RuntimeInfo.Companion"]},{"name":"object Companion","description":"elide.tool.project.ProjectConfig.Companion","location":"packages/cli/elide.tool.project/-project-config/-companion/index.html","searchKeys":["Companion","object Companion","elide.tool.project.ProjectConfig.Companion"]},{"name":"object Companion","description":"elide.tool.project.ProjectInfo.Companion","location":"packages/cli/elide.tool.project/-project-info/-companion/index.html","searchKeys":["Companion","object Companion","elide.tool.project.ProjectInfo.Companion"]},{"name":"object Companion","description":"elide.tool.project.ProjectInfo.ProjectEnvironment.Companion","location":"packages/cli/elide.tool.project/-project-info/-project-environment/-companion/index.html","searchKeys":["Companion","object Companion","elide.tool.project.ProjectInfo.ProjectEnvironment.Companion"]},{"name":"object Companion","description":"elide.tool.testing.TestContext.Companion","location":"packages/cli/elide.tool.testing/-test-context/-companion/index.html","searchKeys":["Companion","object Companion","elide.tool.testing.TestContext.Companion"]},{"name":"object Companion","description":"elide.tool.testing.TestInfo.Companion","location":"packages/cli/elide.tool.testing/-test-info/-companion/index.html","searchKeys":["Companion","object Companion","elide.tool.testing.TestInfo.Companion"]},{"name":"object Companion","description":"elide.tool.testing.TestResult.Companion","location":"packages/cli/elide.tool.testing/-test-result/-companion/index.html","searchKeys":["Companion","object Companion","elide.tool.testing.TestResult.Companion"]},{"name":"object Companion","description":"elide.tool.testing.TestResult.TestResultInfo.Companion","location":"packages/cli/elide.tool.testing/-test-result/-test-result-info/-companion/index.html","searchKeys":["Companion","object Companion","elide.tool.testing.TestResult.TestResultInfo.Companion"]},{"name":"object Factory","description":"elide.tool.err.ErrorHandler.Factory","location":"packages/cli/elide.tool.err/-error-handler/-factory/index.html","searchKeys":["Factory","object Factory","elide.tool.err.ErrorHandler.Factory"]},{"name":"object NativeEngine","description":"elide.tool.engine.NativeEngine","location":"packages/cli/elide.tool.engine/-native-engine/index.html","searchKeys":["NativeEngine","object NativeEngine","elide.tool.engine.NativeEngine"]},{"name":"object Utils","description":"elide.tool.testing.TestContext.Utils","location":"packages/cli/elide.tool.testing/-test-context/-utils/index.html","searchKeys":["Utils","object Utils","elide.tool.testing.TestContext.Utils"]},{"name":"open fun canRead(): Boolean","description":"elide.tool.io.WorkdirManager.WorkdirHandle.canRead","location":"packages/cli/elide.tool.io/-workdir-manager/-workdir-handle/can-read.html","searchKeys":["canRead","open fun canRead(): Boolean","elide.tool.io.WorkdirManager.WorkdirHandle.canRead"]},{"name":"open fun canWrite(): Boolean","description":"elide.tool.io.WorkdirManager.WorkdirHandle.canWrite","location":"packages/cli/elide.tool.io/-workdir-manager/-workdir-handle/can-write.html","searchKeys":["canWrite","open fun canWrite(): Boolean","elide.tool.io.WorkdirManager.WorkdirHandle.canWrite"]},{"name":"open fun context(state: CommandState, ctx: CoroutineContext): Context","description":"elide.tool.cli.AbstractToolCommand.context","location":"packages/cli/elide.tool.cli/-abstract-tool-command/context.html","searchKeys":["context","open fun context(state: CommandState, ctx: CoroutineContext): Context","elide.tool.cli.AbstractToolCommand.context"]},{"name":"open fun err(message: String? = \"An unknown error occurred\", exitCode: Int = -1): CommandResult","description":"elide.tool.cli.CommandContext.err","location":"packages/cli/elide.tool.cli/-command-context/err.html","searchKeys":["err","open fun err(message: String? = \"An unknown error occurred\", exitCode: Int = -1): CommandResult","elide.tool.cli.CommandContext.err"]},{"name":"open fun exists(): Boolean","description":"elide.tool.io.WorkdirManager.WorkdirHandle.exists","location":"packages/cli/elide.tool.io/-workdir-manager/-workdir-handle/exists.html","searchKeys":["exists","open fun exists(): Boolean","elide.tool.io.WorkdirManager.WorkdirHandle.exists"]},{"name":"open fun handleError(error: Throwable, context: ErrorHandler.ErrorContext? = null): ErrorHandler.ErrorActionStrategy","description":"elide.tool.err.ErrorHandler.handleError","location":"packages/cli/elide.tool.err/-error-handler/handle-error.html","searchKeys":["handleError","open fun handleError(error: Throwable, context: ErrorHandler.ErrorContext? = null): ErrorHandler.ErrorActionStrategy","elide.tool.err.ErrorHandler.handleError"]},{"name":"open fun output(out: StringBuilder)","description":"elide.tool.cli.CommandContext.output","location":"packages/cli/elide.tool.cli/-command-context/output.html","searchKeys":["output","open fun output(out: StringBuilder)","elide.tool.cli.CommandContext.output"]},{"name":"open fun resolve(file: File): File","description":"elide.tool.io.WorkdirManager.WorkdirHandle.resolve","location":"packages/cli/elide.tool.io/-workdir-manager/-workdir-handle/resolve.html","searchKeys":["resolve","open fun resolve(file: File): File","elide.tool.io.WorkdirManager.WorkdirHandle.resolve"]},{"name":"open fun resolve(path: String): File","description":"elide.tool.io.WorkdirManager.WorkdirHandle.resolve","location":"packages/cli/elide.tool.io/-workdir-manager/-workdir-handle/resolve.html","searchKeys":["resolve","open fun resolve(path: String): File","elide.tool.io.WorkdirManager.WorkdirHandle.resolve"]},{"name":"open fun success(): CommandResult","description":"elide.tool.cli.CommandContext.success","location":"packages/cli/elide.tool.cli/-command-context/success.html","searchKeys":["success","open fun success(): CommandResult","elide.tool.cli.CommandContext.success"]},{"name":"open fun testInfo(): TestInfo","description":"elide.tool.testing.Testable.testInfo","location":"packages/cli/elide.tool.testing/-testable/test-info.html","searchKeys":["testInfo","open fun testInfo(): TestInfo","elide.tool.testing.Testable.testInfo"]},{"name":"open operator fun invoke()","description":"elide.tool.err.ErrorHandler.ErrorActionStrategy.invoke","location":"packages/cli/elide.tool.err/-error-handler/-error-action-strategy/invoke.html","searchKeys":["invoke","open operator fun invoke()","elide.tool.err.ErrorHandler.ErrorActionStrategy.invoke"]},{"name":"open operator override fun compareTo(other: ErrorHandler.ErrorEvent): Int","description":"elide.tool.err.ErrorHandler.ErrorEvent.compareTo","location":"packages/cli/elide.tool.err/-error-handler/-error-event/compare-to.html","searchKeys":["compareTo","open operator override fun compareTo(other: ErrorHandler.ErrorEvent): Int","elide.tool.err.ErrorHandler.ErrorEvent.compareTo"]},{"name":"open operator override fun compareTo(other: NativeLib): Int","description":"elide.tool.engine.NativeLibInfo.compareTo","location":"packages/cli/elide.tool.engine/-native-lib-info/compare-to.html","searchKeys":["compareTo","open operator override fun compareTo(other: NativeLib): Int","elide.tool.engine.NativeLibInfo.compareTo"]},{"name":"open operator override fun invoke(className: String?, methodName: String?): String?","description":"elide.tool.cli.control.ExecutionController.invoke","location":"packages/cli/elide.tool.cli.control/-execution-controller/invoke.html","searchKeys":["invoke","open operator override fun invoke(className: String?, methodName: String?): String?","elide.tool.cli.control.ExecutionController.invoke"]},{"name":"open override fun addToClasspath(s: String?)","description":"elide.tool.cli.control.ExecutionController.addToClasspath","location":"packages/cli/elide.tool.cli.control/-execution-controller/add-to-classpath.html","searchKeys":["addToClasspath","open override fun addToClasspath(s: String?)","elide.tool.cli.control.ExecutionController.addToClasspath"]},{"name":"open override fun call(): Int","description":"elide.tool.cli.AbstractToolCommand.call","location":"packages/cli/elide.tool.cli/-abstract-tool-command/call.html","searchKeys":["call","open override fun call(): Int","elide.tool.cli.AbstractToolCommand.call"]},{"name":"open override fun close()","description":"elide.tool.cli.control.ExecutionController.close","location":"packages/cli/elide.tool.cli.control/-execution-controller/close.html","searchKeys":["close","open override fun close()","elide.tool.cli.control.ExecutionController.close"]},{"name":"open override fun extensionCommand(command: String, arg: Any?): Any","description":"elide.tool.cli.control.ExecutionController.extensionCommand","location":"packages/cli/elide.tool.cli.control/-execution-controller/extension-command.html","searchKeys":["extensionCommand","open override fun extensionCommand(command: String, arg: Any?): Any","elide.tool.cli.control.ExecutionController.extensionCommand"]},{"name":"open override fun generate(env: ExecutionEnv?, parameters: MutableMap<String, String>?): ExecutionControl","description":"elide.tool.cli.control.EspressoExecutionControlProvider.generate","location":"packages/cli/elide.tool.cli.control/-espresso-execution-control-provider/generate.html","searchKeys":["generate","open override fun generate(env: ExecutionEnv?, parameters: MutableMap<String, String>?): ExecutionControl","elide.tool.cli.control.EspressoExecutionControlProvider.generate"]},{"name":"open override fun get(): T?","description":"elide.tool.cli.control.Lazy.get","location":"packages/cli/elide.tool.cli.control/-lazy/get.html","searchKeys":["get","open override fun get(): T?","elide.tool.cli.control.Lazy.get"]},{"name":"open override fun getEngineName(): String","description":"elide.tool.control.AbstractScriptEngineFactory.getEngineName","location":"packages/cli/elide.tool.control/-abstract-script-engine-factory/get-engine-name.html","searchKeys":["getEngineName","open override fun getEngineName(): String","elide.tool.control.AbstractScriptEngineFactory.getEngineName"]},{"name":"open override fun getEngineVersion(): String","description":"elide.tool.control.AbstractScriptEngineFactory.getEngineVersion","location":"packages/cli/elide.tool.control/-abstract-script-engine-factory/get-engine-version.html","searchKeys":["getEngineVersion","open override fun getEngineVersion(): String","elide.tool.control.AbstractScriptEngineFactory.getEngineVersion"]},{"name":"open override fun getExitCode(exception: Throwable?): Int","description":"elide.tool.err.ErrorHandler.getExitCode","location":"packages/cli/elide.tool.err/-error-handler/get-exit-code.html","searchKeys":["getExitCode","open override fun getExitCode(exception: Throwable?): Int","elide.tool.err.ErrorHandler.getExitCode"]},{"name":"open override fun getExtensions(): MutableList<String>","description":"elide.tool.control.AbstractScriptEngineFactory.getExtensions","location":"packages/cli/elide.tool.control/-abstract-script-engine-factory/get-extensions.html","searchKeys":["getExtensions","open override fun getExtensions(): MutableList<String>","elide.tool.control.AbstractScriptEngineFactory.getExtensions"]},{"name":"open override fun getLanguageName(): String","description":"elide.tool.control.AbstractScriptEngineFactory.getLanguageName","location":"packages/cli/elide.tool.control/-abstract-script-engine-factory/get-language-name.html","searchKeys":["getLanguageName","open override fun getLanguageName(): String","elide.tool.control.AbstractScriptEngineFactory.getLanguageName"]},{"name":"open override fun getLanguageVersion(): String","description":"elide.tool.control.AbstractScriptEngineFactory.getLanguageVersion","location":"packages/cli/elide.tool.control/-abstract-script-engine-factory/get-language-version.html","searchKeys":["getLanguageVersion","open override fun getLanguageVersion(): String","elide.tool.control.AbstractScriptEngineFactory.getLanguageVersion"]},{"name":"open override fun getMethodCallSyntax(obj: String, m: String, vararg args: String): String","description":"elide.tool.control.AbstractScriptEngineFactory.getMethodCallSyntax","location":"packages/cli/elide.tool.control/-abstract-script-engine-factory/get-method-call-syntax.html","searchKeys":["getMethodCallSyntax","open override fun getMethodCallSyntax(obj: String, m: String, vararg args: String): String","elide.tool.control.AbstractScriptEngineFactory.getMethodCallSyntax"]},{"name":"open override fun getMimeTypes(): MutableList<String>?","description":"elide.tool.control.AbstractScriptEngineFactory.getMimeTypes","location":"packages/cli/elide.tool.control/-abstract-script-engine-factory/get-mime-types.html","searchKeys":["getMimeTypes","open override fun getMimeTypes(): MutableList<String>?","elide.tool.control.AbstractScriptEngineFactory.getMimeTypes"]},{"name":"open override fun getNames(): MutableList<String>?","description":"elide.tool.control.AbstractScriptEngineFactory.getNames","location":"packages/cli/elide.tool.control/-abstract-script-engine-factory/get-names.html","searchKeys":["getNames","open override fun getNames(): MutableList<String>?","elide.tool.control.AbstractScriptEngineFactory.getNames"]},{"name":"open override fun getOutputStatement(toDisplay: String): String","description":"elide.tool.control.AbstractScriptEngineFactory.getOutputStatement","location":"packages/cli/elide.tool.control/-abstract-script-engine-factory/get-output-statement.html","searchKeys":["getOutputStatement","open override fun getOutputStatement(toDisplay: String): String","elide.tool.control.AbstractScriptEngineFactory.getOutputStatement"]},{"name":"open override fun getParameter(key: String): Any?","description":"elide.tool.control.AbstractScriptEngineFactory.getParameter","location":"packages/cli/elide.tool.control/-abstract-script-engine-factory/get-parameter.html","searchKeys":["getParameter","open override fun getParameter(key: String): Any?","elide.tool.control.AbstractScriptEngineFactory.getParameter"]},{"name":"open override fun getProgram(vararg statements: String): String","description":"elide.tool.control.AbstractScriptEngineFactory.getProgram","location":"packages/cli/elide.tool.control/-abstract-script-engine-factory/get-program.html","searchKeys":["getProgram","open override fun getProgram(vararg statements: String): String","elide.tool.control.AbstractScriptEngineFactory.getProgram"]},{"name":"open override fun getScriptEngine(): ScriptEngine","description":"elide.tool.control.AbstractScriptEngineFactory.getScriptEngine","location":"packages/cli/elide.tool.control/-abstract-script-engine-factory/get-script-engine.html","searchKeys":["getScriptEngine","open override fun getScriptEngine(): ScriptEngine","elide.tool.control.AbstractScriptEngineFactory.getScriptEngine"]},{"name":"open override fun load(classBytecodes: Array<ExecutionControl.ClassBytecodes>)","description":"elide.tool.cli.control.ExecutionController.load","location":"packages/cli/elide.tool.cli.control/-execution-controller/load.html","searchKeys":["load","open override fun load(classBytecodes: Array<ExecutionControl.ClassBytecodes>)","elide.tool.cli.control.ExecutionController.load"]},{"name":"open override fun matches(context: ConditionContext<*>): Boolean","description":"elide.tool.engine.LanguageCondition.matches","location":"packages/cli/elide.tool.engine/-language-condition/matches.html","searchKeys":["matches","open override fun matches(context: ConditionContext<*>): Boolean","elide.tool.engine.LanguageCondition.matches"]},{"name":"open override fun name(): String","description":"elide.tool.cli.control.EspressoExecutionControlProvider.name","location":"packages/cli/elide.tool.cli.control/-espresso-execution-control-provider/name.html","searchKeys":["name","open override fun name(): String","elide.tool.cli.control.EspressoExecutionControlProvider.name"]},{"name":"open override fun redefine(classBytecodes: Array<ExecutionControl.ClassBytecodes>)","description":"elide.tool.cli.control.ExecutionController.redefine","location":"packages/cli/elide.tool.cli.control/-execution-controller/redefine.html","searchKeys":["redefine","open override fun redefine(classBytecodes: Array<ExecutionControl.ClassBytecodes>)","elide.tool.cli.control.ExecutionController.redefine"]},{"name":"open override fun run()","description":"elide.tool.cli.AbstractToolCommand.run","location":"packages/cli/elide.tool.cli/-abstract-tool-command/run.html","searchKeys":["run","open override fun run()","elide.tool.cli.AbstractToolCommand.run"]},{"name":"open override fun stop()","description":"elide.tool.cli.control.ExecutionController.stop","location":"packages/cli/elide.tool.cli.control/-execution-controller/stop.html","searchKeys":["stop","open override fun stop()","elide.tool.cli.control.ExecutionController.stop"]},{"name":"open override fun testInfo(): TestInfo","description":"elide.tool.testing.SelfTest.testInfo","location":"packages/cli/elide.tool.testing/-self-test/test-info.html","searchKeys":["testInfo","open override fun testInfo(): TestInfo","elide.tool.testing.SelfTest.testInfo"]},{"name":"open override fun toString(): String","description":"elide.tool.testing.TestContext.AssertionFailure.toString","location":"packages/cli/elide.tool.testing/-test-context/-assertion-failure/to-string.html","searchKeys":["toString","open override fun toString(): String","elide.tool.testing.TestContext.AssertionFailure.toString"]},{"name":"open override fun uncaughtException(thread: Thread, error: Throwable)","description":"elide.tool.err.ErrorHandler.uncaughtException","location":"packages/cli/elide.tool.err/-error-handler/uncaught-exception.html","searchKeys":["uncaughtException","open override fun uncaughtException(thread: Thread, error: Throwable)","elide.tool.err.ErrorHandler.uncaughtException"]},{"name":"open override fun varValue(className: String?, varName: String?): String?","description":"elide.tool.cli.control.ExecutionController.varValue","location":"packages/cli/elide.tool.cli.control/-execution-controller/var-value.html","searchKeys":["varValue","open override fun varValue(className: String?, varName: String?): String?","elide.tool.cli.control.ExecutionController.varValue"]},{"name":"open override val action: ErrorHandler.Action","description":"elide.tool.err.ErrorHandler.ErrorActionStrategy.Crash.action","location":"packages/cli/elide.tool.err/-error-handler/-error-action-strategy/-crash/action.html","searchKeys":["action","open override val action: ErrorHandler.Action","elide.tool.err.ErrorHandler.ErrorActionStrategy.Crash.action"]},{"name":"open override val action: ErrorHandler.Action","description":"elide.tool.err.ErrorHandler.ErrorActionStrategy.Default.action","location":"packages/cli/elide.tool.err/-error-handler/-error-action-strategy/-default/action.html","searchKeys":["action","open override val action: ErrorHandler.Action","elide.tool.err.ErrorHandler.ErrorActionStrategy.Default.action"]},{"name":"open override val action: ErrorHandler.Action","description":"elide.tool.err.ErrorHandler.ErrorActionStrategy.Rethrow.action","location":"packages/cli/elide.tool.err/-error-handler/-error-action-strategy/-rethrow/action.html","searchKeys":["action","open override val action: ErrorHandler.Action","elide.tool.err.ErrorHandler.ErrorActionStrategy.Rethrow.action"]},{"name":"open override val action: ErrorHandler.Action","description":"elide.tool.err.ErrorHandler.ErrorActionStrategy.Suppress.action","location":"packages/cli/elide.tool.err/-error-handler/-error-action-strategy/-suppress/action.html","searchKeys":["action","open override val action: ErrorHandler.Action","elide.tool.err.ErrorHandler.ErrorActionStrategy.Suppress.action"]},{"name":"open override val commandResult: AtomicReference<CommandResult>","description":"elide.tool.cli.AbstractToolCommand.commandResult","location":"packages/cli/elide.tool.cli/-abstract-tool-command/command-result.html","searchKeys":["commandResult","open override val commandResult: AtomicReference<CommandResult>","elide.tool.cli.AbstractToolCommand.commandResult"]},{"name":"open override val effectiveResult: TestResult.Result","description":"elide.tool.testing.TestResult.TestResultInfo.effectiveResult","location":"packages/cli/elide.tool.testing/-test-result/-test-result-info/effective-result.html","searchKeys":["effectiveResult","open override val effectiveResult: TestResult.Result","elide.tool.testing.TestResult.TestResultInfo.effectiveResult"]},{"name":"open override val end: Instant","description":"elide.tool.testing.TestResult.TestResultInfo.end","location":"packages/cli/elide.tool.testing/-test-result/-test-result-info/end.html","searchKeys":["end","open override val end: Instant","elide.tool.testing.TestResult.TestResultInfo.end"]},{"name":"open override val engine: GuestLanguage","description":"elide.tool.cli.options.EngineJavaScriptOptions.engine","location":"packages/cli/elide.tool.cli.options/-engine-java-script-options/engine.html","searchKeys":["engine","open override val engine: GuestLanguage","elide.tool.cli.options.EngineJavaScriptOptions.engine"]},{"name":"open override val engine: String","description":"elide.tool.cli.GuestLanguage.engine","location":"packages/cli/elide.tool.cli/-guest-language/engine.html","searchKeys":["engine","open override val engine: String","elide.tool.cli.GuestLanguage.engine"]},{"name":"open override val err: Throwable?","description":"elide.tool.testing.TestResult.TestResultInfo.err","location":"packages/cli/elide.tool.testing/-test-result/-test-result-info/err.html","searchKeys":["err","open override val err: Throwable?","elide.tool.testing.TestResult.TestResultInfo.err"]},{"name":"open override val errOutput: StringBuilder?","description":"elide.tool.testing.TestResult.TestResultInfo.errOutput","location":"packages/cli/elide.tool.testing/-test-result/-test-result-info/err-output.html","searchKeys":["errOutput","open override val errOutput: StringBuilder?","elide.tool.testing.TestResult.TestResultInfo.errOutput"]},{"name":"open override val event: ErrorHandler.ErrorEvent","description":"elide.tool.err.ErrorHandler.ErrorActionStrategy.Crash.event","location":"packages/cli/elide.tool.err/-error-handler/-error-action-strategy/-crash/event.html","searchKeys":["event","open override val event: ErrorHandler.ErrorEvent","elide.tool.err.ErrorHandler.ErrorActionStrategy.Crash.event"]},{"name":"open override val event: ErrorHandler.ErrorEvent","description":"elide.tool.err.ErrorHandler.ErrorActionStrategy.Default.event","location":"packages/cli/elide.tool.err/-error-handler/-error-action-strategy/-default/event.html","searchKeys":["event","open override val event: ErrorHandler.ErrorEvent","elide.tool.err.ErrorHandler.ErrorActionStrategy.Default.event"]},{"name":"open override val event: ErrorHandler.ErrorEvent","description":"elide.tool.err.ErrorHandler.ErrorActionStrategy.Rethrow.event","location":"packages/cli/elide.tool.err/-error-handler/-error-action-strategy/-rethrow/event.html","searchKeys":["event","open override val event: ErrorHandler.ErrorEvent","elide.tool.err.ErrorHandler.ErrorActionStrategy.Rethrow.event"]},{"name":"open override val event: ErrorHandler.ErrorEvent","description":"elide.tool.err.ErrorHandler.ErrorActionStrategy.Suppress.event","location":"packages/cli/elide.tool.err/-error-handler/-error-action-strategy/-suppress/event.html","searchKeys":["event","open override val event: ErrorHandler.ErrorEvent","elide.tool.err.ErrorHandler.ErrorActionStrategy.Suppress.event"]},{"name":"open override val exitCode: Int","description":"elide.tool.cli.CommandResult.Error.exitCode","location":"packages/cli/elide.tool.cli/-command-result/-error/exit-code.html","searchKeys":["exitCode","open override val exitCode: Int","elide.tool.cli.CommandResult.Error.exitCode"]},{"name":"open override val exitCode: Int","description":"elide.tool.cli.CommandResult.Success.exitCode","location":"packages/cli/elide.tool.cli/-command-result/-success/exit-code.html","searchKeys":["exitCode","open override val exitCode: Int","elide.tool.cli.CommandResult.Success.exitCode"]},{"name":"open override val exitCode: Int = 1","description":"elide.tool.err.ErrorHandler.ErrorActionStrategy.Crash.exitCode","location":"packages/cli/elide.tool.err/-error-handler/-error-action-strategy/-crash/exit-code.html","searchKeys":["exitCode","open override val exitCode: Int = 1","elide.tool.err.ErrorHandler.ErrorActionStrategy.Crash.exitCode"]},{"name":"open override val group: String","description":"elide.tool.engine.NativeLib.LibInfo.group","location":"packages/cli/elide.tool.engine/-native-lib/-lib-info/group.html","searchKeys":["group","open override val group: String","elide.tool.engine.NativeLib.LibInfo.group"]},{"name":"open override val info: TestInfo","description":"elide.tool.testing.TestResult.TestResultInfo.info","location":"packages/cli/elide.tool.testing/-test-result/-test-result-info/info.html","searchKeys":["info","open override val info: TestInfo","elide.tool.testing.TestResult.TestResultInfo.info"]},{"name":"open override val label: String","description":"elide.tool.cli.GuestLanguage.label","location":"packages/cli/elide.tool.cli/-guest-language/label.html","searchKeys":["label","open override val label: String","elide.tool.cli.GuestLanguage.label"]},{"name":"open override val logger: Logger","description":"elide.tool.err.ErrorHandler.ErrorActionStrategy.Crash.logger","location":"packages/cli/elide.tool.err/-error-handler/-error-action-strategy/-crash/logger.html","searchKeys":["logger","open override val logger: Logger","elide.tool.err.ErrorHandler.ErrorActionStrategy.Crash.logger"]},{"name":"open override val logger: Logger","description":"elide.tool.err.ErrorHandler.ErrorActionStrategy.Default.logger","location":"packages/cli/elide.tool.err/-error-handler/-error-action-strategy/-default/logger.html","searchKeys":["logger","open override val logger: Logger","elide.tool.err.ErrorHandler.ErrorActionStrategy.Default.logger"]},{"name":"open override val logger: Logger","description":"elide.tool.err.ErrorHandler.ErrorActionStrategy.Rethrow.logger","location":"packages/cli/elide.tool.err/-error-handler/-error-action-strategy/-rethrow/logger.html","searchKeys":["logger","open override val logger: Logger","elide.tool.err.ErrorHandler.ErrorActionStrategy.Rethrow.logger"]},{"name":"open override val logger: Logger","description":"elide.tool.err.ErrorHandler.ErrorActionStrategy.Suppress.logger","location":"packages/cli/elide.tool.err/-error-handler/-error-action-strategy/-suppress/logger.html","searchKeys":["logger","open override val logger: Logger","elide.tool.err.ErrorHandler.ErrorActionStrategy.Suppress.logger"]},{"name":"open override val messages: Collection<String>","description":"elide.tool.testing.TestResult.TestResultInfo.messages","location":"packages/cli/elide.tool.testing/-test-result/-test-result-info/messages.html","searchKeys":["messages","open override val messages: Collection<String>","elide.tool.testing.TestResult.TestResultInfo.messages"]},{"name":"open override val name: String","description":"elide.tool.engine.NativeLib.LibInfo.name","location":"packages/cli/elide.tool.engine/-native-lib/-lib-info/name.html","searchKeys":["name","open override val name: String","elide.tool.engine.NativeLib.LibInfo.name"]},{"name":"open override val name: String","description":"elide.tool.testing.SelfTest.name","location":"packages/cli/elide.tool.testing/-self-test/name.html","searchKeys":["name","open override val name: String","elide.tool.testing.SelfTest.name"]},{"name":"open override val name: String?","description":"elide.tool.project.ProjectConfig.PackageJsonProjectConfig.name","location":"packages/cli/elide.tool.project/-project-config/-package-json-project-config/name.html","searchKeys":["name","open override val name: String?","elide.tool.project.ProjectConfig.PackageJsonProjectConfig.name"]},{"name":"open override val ok: Boolean","description":"elide.tool.cli.CommandResult.Error.ok","location":"packages/cli/elide.tool.cli/-command-result/-error/ok.html","searchKeys":["ok","open override val ok: Boolean","elide.tool.cli.CommandResult.Error.ok"]},{"name":"open override val ok: Boolean","description":"elide.tool.cli.CommandResult.Success.ok","location":"packages/cli/elide.tool.cli/-command-result/-success/ok.html","searchKeys":["ok","open override val ok: Boolean","elide.tool.cli.CommandResult.Success.ok"]},{"name":"open override val output: StringBuilder?","description":"elide.tool.testing.TestResult.TestResultInfo.output","location":"packages/cli/elide.tool.testing/-test-result/-test-result-info/output.html","searchKeys":["output","open override val output: StringBuilder?","elide.tool.testing.TestResult.TestResultInfo.output"]},{"name":"open override val path: String","description":"elide.tool.engine.NativeLib.LibInfo.path","location":"packages/cli/elide.tool.engine/-native-lib/-lib-info/path.html","searchKeys":["path","open override val path: String","elide.tool.engine.NativeLib.LibInfo.path"]},{"name":"open override val path: String","description":"elide.tool.project.ProjectConfig.PackageJsonProjectConfig.path","location":"packages/cli/elide.tool.project/-project-config/-package-json-project-config/path.html","searchKeys":["path","open override val path: String","elide.tool.project.ProjectConfig.PackageJsonProjectConfig.path"]},{"name":"open override val result: TestResult.Result","description":"elide.tool.testing.TestResult.Dropped.result","location":"packages/cli/elide.tool.testing/-test-result/-dropped/result.html","searchKeys":["result","open override val result: TestResult.Result","elide.tool.testing.TestResult.Dropped.result"]},{"name":"open override val result: TestResult.Result","description":"elide.tool.testing.TestResult.Failure.result","location":"packages/cli/elide.tool.testing/-test-result/-failure/result.html","searchKeys":["result","open override val result: TestResult.Result","elide.tool.testing.TestResult.Failure.result"]},{"name":"open override val result: TestResult.Result","description":"elide.tool.testing.TestResult.Skipped.result","location":"packages/cli/elide.tool.testing/-test-result/-skipped/result.html","searchKeys":["result","open override val result: TestResult.Result","elide.tool.testing.TestResult.Skipped.result"]},{"name":"open override val result: TestResult.Result","description":"elide.tool.testing.TestResult.Success.result","location":"packages/cli/elide.tool.testing/-test-result/-success/result.html","searchKeys":["result","open override val result: TestResult.Result","elide.tool.testing.TestResult.Success.result"]},{"name":"open override val result: TestResult.Result","description":"elide.tool.testing.TestResult.TestResultInfo.result","location":"packages/cli/elide.tool.testing/-test-result/-test-result-info/result.html","searchKeys":["result","open override val result: TestResult.Result","elide.tool.testing.TestResult.TestResultInfo.result"]},{"name":"open override val start: Instant","description":"elide.tool.testing.TestResult.TestResultInfo.start","location":"packages/cli/elide.tool.testing/-test-result/-test-result-info/start.html","searchKeys":["start","open override val start: Instant","elide.tool.testing.TestResult.TestResultInfo.start"]},{"name":"open override val staticName: String","description":"elide.tool.engine.NativeLib.LibInfo.staticName","location":"packages/cli/elide.tool.engine/-native-lib/-lib-info/static-name.html","searchKeys":["staticName","open override val staticName: String","elide.tool.engine.NativeLib.LibInfo.staticName"]},{"name":"open override val symbol: String","description":"elide.tool.cli.GuestLanguage.symbol","location":"packages/cli/elide.tool.cli/-guest-language/symbol.html","searchKeys":["symbol","open override val symbol: String","elide.tool.cli.GuestLanguage.symbol"]},{"name":"open override val test: Testable<*>","description":"elide.tool.testing.TestResult.TestResultInfo.test","location":"packages/cli/elide.tool.testing/-test-result/-test-result-info/test.html","searchKeys":["test","open override val test: Testable<*>","elide.tool.testing.TestResult.TestResultInfo.test"]},{"name":"open override val throwable: Throwable","description":"elide.tool.err.ErrorHandler.ErrorActionStrategy.Rethrow.throwable","location":"packages/cli/elide.tool.err/-error-handler/-error-action-strategy/-rethrow/throwable.html","searchKeys":["throwable","open override val throwable: Throwable","elide.tool.err.ErrorHandler.ErrorActionStrategy.Rethrow.throwable"]},{"name":"open override val version: String?","description":"elide.tool.project.ProjectConfig.PackageJsonProjectConfig.version","location":"packages/cli/elide.tool.project/-project-config/-package-json-project-config/version.html","searchKeys":["version","open override val version: String?","elide.tool.project.ProjectConfig.PackageJsonProjectConfig.version"]},{"name":"open override val warning: String?","description":"elide.tool.err.ErrorHandler.ErrorActionStrategy.Default.warning","location":"packages/cli/elide.tool.err/-error-handler/-error-action-strategy/-default/warning.html","searchKeys":["warning","open override val warning: String?","elide.tool.err.ErrorHandler.ErrorActionStrategy.Default.warning"]},{"name":"open override val warning: String?","description":"elide.tool.err.ErrorHandler.ErrorActionStrategy.Suppress.warning","location":"packages/cli/elide.tool.err/-error-handler/-error-action-strategy/-suppress/warning.html","searchKeys":["warning","open override val warning: String?","elide.tool.err.ErrorHandler.ErrorActionStrategy.Suppress.warning"]},{"name":"open override var debug: Boolean","description":"elide.tool.cli.options.EngineJavaScriptOptions.debug","location":"packages/cli/elide.tool.cli.options/-engine-java-script-options/debug.html","searchKeys":["debug","open override var debug: Boolean","elide.tool.cli.options.EngineJavaScriptOptions.debug"]},{"name":"open suspend fun assert(condition: Boolean, failureMessage: String)","description":"elide.tool.testing.TestContext.assert","location":"packages/cli/elide.tool.testing/-test-context/assert.html","searchKeys":["assert","open suspend fun assert(condition: Boolean, failureMessage: String)","elide.tool.testing.TestContext.assert"]},{"name":"open suspend fun assert(condition: Boolean, op: () -> String = { \"assertion failed\" })","description":"elide.tool.testing.TestContext.assert","location":"packages/cli/elide.tool.testing/-test-context/assert.html","searchKeys":["assert","open suspend fun assert(condition: Boolean, op: () -> String = { \"assertion failed\" })","elide.tool.testing.TestContext.assert"]},{"name":"open suspend fun assertEquals(expected: Any?, value: Any?, failureMessage: String)","description":"elide.tool.testing.TestContext.assertEquals","location":"packages/cli/elide.tool.testing/-test-context/assert-equals.html","searchKeys":["assertEquals","open suspend fun assertEquals(expected: Any?, value: Any?, failureMessage: String)","elide.tool.testing.TestContext.assertEquals"]},{"name":"open suspend fun assertEquals(expected: Any?, value: Any?, op: () -> String = { \"value '$value' did not equal expected '$expected' when it should\" })","description":"elide.tool.testing.TestContext.assertEquals","location":"packages/cli/elide.tool.testing/-test-context/assert-equals.html","searchKeys":["assertEquals","open suspend fun assertEquals(expected: Any?, value: Any?, op: () -> String = { \"value '$value' did not equal expected '$expected' when it should\" })","elide.tool.testing.TestContext.assertEquals"]},{"name":"open suspend fun assertFalse(condition: Boolean, failureMessage: String)","description":"elide.tool.testing.TestContext.assertFalse","location":"packages/cli/elide.tool.testing/-test-context/assert-false.html","searchKeys":["assertFalse","open suspend fun assertFalse(condition: Boolean, failureMessage: String)","elide.tool.testing.TestContext.assertFalse"]},{"name":"open suspend fun assertFalse(condition: Boolean, op: () -> String = { \"assertion failed: not `false`\" })","description":"elide.tool.testing.TestContext.assertFalse","location":"packages/cli/elide.tool.testing/-test-context/assert-false.html","searchKeys":["assertFalse","open suspend fun assertFalse(condition: Boolean, op: () -> String = { \"assertion failed: not `false`\" })","elide.tool.testing.TestContext.assertFalse"]},{"name":"open suspend fun assertNotEquals(expected: Any?, value: Any?, failureMessage: String)","description":"elide.tool.testing.TestContext.assertNotEquals","location":"packages/cli/elide.tool.testing/-test-context/assert-not-equals.html","searchKeys":["assertNotEquals","open suspend fun assertNotEquals(expected: Any?, value: Any?, failureMessage: String)","elide.tool.testing.TestContext.assertNotEquals"]},{"name":"open suspend fun assertNotEquals(expected: Any?, value: Any?, op: () -> String = { \"value '$value' equals expected ('$expected') when it should not\" })","description":"elide.tool.testing.TestContext.assertNotEquals","location":"packages/cli/elide.tool.testing/-test-context/assert-not-equals.html","searchKeys":["assertNotEquals","open suspend fun assertNotEquals(expected: Any?, value: Any?, op: () -> String = { \"value '$value' equals expected ('$expected') when it should not\" })","elide.tool.testing.TestContext.assertNotEquals"]},{"name":"open suspend fun assertNotNull(value: Any?, failureMessage: String)","description":"elide.tool.testing.TestContext.assertNotNull","location":"packages/cli/elide.tool.testing/-test-context/assert-not-null.html","searchKeys":["assertNotNull","open suspend fun assertNotNull(value: Any?, failureMessage: String)","elide.tool.testing.TestContext.assertNotNull"]},{"name":"open suspend fun assertNotNull(value: Any?, op: () -> String = { \"required non-null, got `null`\" })","description":"elide.tool.testing.TestContext.assertNotNull","location":"packages/cli/elide.tool.testing/-test-context/assert-not-null.html","searchKeys":["assertNotNull","open suspend fun assertNotNull(value: Any?, op: () -> String = { \"required non-null, got `null`\" })","elide.tool.testing.TestContext.assertNotNull"]},{"name":"open suspend fun assertNull(value: Any?, failureMessage: String)","description":"elide.tool.testing.TestContext.assertNull","location":"packages/cli/elide.tool.testing/-test-context/assert-null.html","searchKeys":["assertNull","open suspend fun assertNull(value: Any?, failureMessage: String)","elide.tool.testing.TestContext.assertNull"]},{"name":"open suspend fun assertNull(value: Any?, op: () -> String = { \"required `null`, got $value\" })","description":"elide.tool.testing.TestContext.assertNull","location":"packages/cli/elide.tool.testing/-test-context/assert-null.html","searchKeys":["assertNull","open suspend fun assertNull(value: Any?, op: () -> String = { \"required `null`, got $value\" })","elide.tool.testing.TestContext.assertNull"]},{"name":"open suspend fun assertTrue(condition: Boolean, failureMessage: String)","description":"elide.tool.testing.TestContext.assertTrue","location":"packages/cli/elide.tool.testing/-test-context/assert-true.html","searchKeys":["assertTrue","open suspend fun assertTrue(condition: Boolean, failureMessage: String)","elide.tool.testing.TestContext.assertTrue"]},{"name":"open suspend fun assertTrue(condition: Boolean, op: () -> String = { \"assertion failed: not `true`\" })","description":"elide.tool.testing.TestContext.assertTrue","location":"packages/cli/elide.tool.testing/-test-context/assert-true.html","searchKeys":["assertTrue","open suspend fun assertTrue(condition: Boolean, op: () -> String = { \"assertion failed: not `true`\" })","elide.tool.testing.TestContext.assertTrue"]},{"name":"open suspend fun output(out: suspend StringBuilder.() -> Unit)","description":"elide.tool.cli.CommandContext.output","location":"packages/cli/elide.tool.cli/-command-context/output.html","searchKeys":["output","open suspend fun output(out: suspend StringBuilder.() -> Unit)","elide.tool.cli.CommandContext.output"]},{"name":"open suspend fun resolveProject(): ProjectInfo?","description":"elide.tool.project.ProjectManager.resolveProject","location":"packages/cli/elide.tool.project/-project-manager/resolve-project.html","searchKeys":["resolveProject","open suspend fun resolveProject(): ProjectInfo?","elide.tool.project.ProjectManager.resolveProject"]},{"name":"open suspend fun runTestIn(context: Context)","description":"elide.tool.testing.Testable.runTestIn","location":"packages/cli/elide.tool.testing/-testable/run-test-in.html","searchKeys":["runTestIn","open suspend fun runTestIn(context: Context)","elide.tool.testing.Testable.runTestIn"]},{"name":"open suspend override fun CommandContext.invoke(state: CommandState): CommandResult","description":"elide.tool.cli.ElideTool.invoke","location":"packages/cli/elide.tool.cli/-elide-tool/invoke.html","searchKeys":["invoke","open suspend override fun CommandContext.invoke(state: CommandState): CommandResult","elide.tool.cli.ElideTool.invoke"]},{"name":"open suspend override fun SelfTest.SelfTestContext.test()","description":"elide.tool.engine.EngineTest.test","location":"packages/cli/elide.tool.engine/-engine-test/test.html","searchKeys":["test","open suspend override fun SelfTest.SelfTestContext.test()","elide.tool.engine.EngineTest.test"]},{"name":"open suspend override fun SelfTest.SelfTestContext.test()","description":"elide.tool.engine.JsEngineTest.test","location":"packages/cli/elide.tool.engine/-js-engine-test/test.html","searchKeys":["test","open suspend override fun SelfTest.SelfTestContext.test()","elide.tool.engine.JsEngineTest.test"]},{"name":"open suspend override fun SelfTest.SelfTestContext.test()","description":"elide.tool.engine.JvmEngineTest.test","location":"packages/cli/elide.tool.engine/-jvm-engine-test/test.html","searchKeys":["test","open suspend override fun SelfTest.SelfTestContext.test()","elide.tool.engine.JvmEngineTest.test"]},{"name":"open suspend override fun SelfTest.SelfTestContext.test()","description":"elide.tool.engine.OsArchTest.test","location":"packages/cli/elide.tool.engine/-os-arch-test/test.html","searchKeys":["test","open suspend override fun SelfTest.SelfTestContext.test()","elide.tool.engine.OsArchTest.test"]},{"name":"open suspend override fun SelfTest.SelfTestContext.test()","description":"elide.tool.engine.OsNameTest.test","location":"packages/cli/elide.tool.engine/-os-name-test/test.html","searchKeys":["test","open suspend override fun SelfTest.SelfTestContext.test()","elide.tool.engine.OsNameTest.test"]},{"name":"open suspend override fun SelfTest.SelfTestContext.test()","description":"elide.tool.engine.PythonEngineTest.test","location":"packages/cli/elide.tool.engine/-python-engine-test/test.html","searchKeys":["test","open suspend override fun SelfTest.SelfTestContext.test()","elide.tool.engine.PythonEngineTest.test"]},{"name":"open suspend override fun SelfTest.SelfTestContext.test()","description":"elide.tool.engine.RubyEngineTest.test","location":"packages/cli/elide.tool.engine/-ruby-engine-test/test.html","searchKeys":["test","open suspend override fun SelfTest.SelfTestContext.test()","elide.tool.engine.RubyEngineTest.test"]},{"name":"open suspend override fun SelfTest.SelfTestContext.test()","description":"elide.tool.engine.WasmEngineTest.test","location":"packages/cli/elide.tool.engine/-wasm-engine-test/test.html","searchKeys":["test","open suspend override fun SelfTest.SelfTestContext.test()","elide.tool.engine.WasmEngineTest.test"]},{"name":"open suspend override fun SelfTest.SelfTestContext.test()","description":"elide.tool.err.ErrorHandlerAcquireTest.test","location":"packages/cli/elide.tool.err/-error-handler-acquire-test/test.html","searchKeys":["test","open suspend override fun SelfTest.SelfTestContext.test()","elide.tool.err.ErrorHandlerAcquireTest.test"]},{"name":"open suspend override fun SelfTest.SelfTestContext.test()","description":"elide.tool.err.ErrorRecorderAcquireTest.test","location":"packages/cli/elide.tool.err/-error-recorder-acquire-test/test.html","searchKeys":["test","open suspend override fun SelfTest.SelfTestContext.test()","elide.tool.err.ErrorRecorderAcquireTest.test"]},{"name":"open suspend override fun SelfTest.SelfTestContext.test()","description":"elide.tool.err.ErrorRecorderWriteTest.test","location":"packages/cli/elide.tool.err/-error-recorder-write-test/test.html","searchKeys":["test","open suspend override fun SelfTest.SelfTestContext.test()","elide.tool.err.ErrorRecorderWriteTest.test"]},{"name":"open suspend override fun SelfTest.SelfTestContext.test()","description":"elide.tool.io.TempWriteTest.test","location":"packages/cli/elide.tool.io/-temp-write-test/test.html","searchKeys":["test","open suspend override fun SelfTest.SelfTestContext.test()","elide.tool.io.TempWriteTest.test"]},{"name":"open suspend override fun SelfTest.SelfTestContext.test()","description":"elide.tool.io.TestCacheWrite.test","location":"packages/cli/elide.tool.io/-test-cache-write/test.html","searchKeys":["test","open suspend override fun SelfTest.SelfTestContext.test()","elide.tool.io.TestCacheWrite.test"]},{"name":"open suspend override fun SelfTest.SelfTestContext.test()","description":"elide.tool.io.WorkdirTest.test","location":"packages/cli/elide.tool.io/-workdir-test/test.html","searchKeys":["test","open suspend override fun SelfTest.SelfTestContext.test()","elide.tool.io.WorkdirTest.test"]},{"name":"open suspend override fun SelfTest.SelfTestContext.test()","description":"elide.tool.testing.SanitySelfTest.test","location":"packages/cli/elide.tool.testing/-sanity-self-test/test.html","searchKeys":["test","open suspend override fun SelfTest.SelfTestContext.test()","elide.tool.testing.SanitySelfTest.test"]},{"name":"open suspend override fun SelfTest.SelfTestContext.test()","description":"elide.tool.transport.EpollTest.test","location":"packages/cli/elide.tool.transport/-epoll-test/test.html","searchKeys":["test","open suspend override fun SelfTest.SelfTestContext.test()","elide.tool.transport.EpollTest.test"]},{"name":"open suspend override fun SelfTest.SelfTestContext.test()","description":"elide.tool.transport.KQueueTest.test","location":"packages/cli/elide.tool.transport/-k-queue-test/test.html","searchKeys":["test","open suspend override fun SelfTest.SelfTestContext.test()","elide.tool.transport.KQueueTest.test"]},{"name":"open suspend override fun SelfTest.SelfTestContext.test()","description":"elide.tool.transport.NativeCryptoTest.test","location":"packages/cli/elide.tool.transport/-native-crypto-test/test.html","searchKeys":["test","open suspend override fun SelfTest.SelfTestContext.test()","elide.tool.transport.NativeCryptoTest.test"]},{"name":"open suspend override fun SelfTest.SelfTestContext.test()","description":"elide.tool.transport.NativeTransportTest.test","location":"packages/cli/elide.tool.transport/-native-transport-test/test.html","searchKeys":["test","open suspend override fun SelfTest.SelfTestContext.test()","elide.tool.transport.NativeTransportTest.test"]},{"name":"open val absolutePath: String","description":"elide.tool.io.WorkdirManager.WorkdirHandle.absolutePath","location":"packages/cli/elide.tool.io/-workdir-manager/-workdir-handle/absolute-path.html","searchKeys":["absolutePath","open val absolutePath: String","elide.tool.io.WorkdirManager.WorkdirHandle.absolutePath"]},{"name":"open val errorType: String","description":"elide.tool.err.ErrorHandler.ErrorEvent.errorType","location":"packages/cli/elide.tool.err/-error-handler/-error-event/error-type.html","searchKeys":["errorType","open val errorType: String","elide.tool.err.ErrorHandler.ErrorEvent.errorType"]},{"name":"open val exitCode: Int","description":"elide.tool.cli.CommandApi.exitCode","location":"packages/cli/elide.tool.cli/-command-api/exit-code.html","searchKeys":["exitCode","open val exitCode: Int","elide.tool.cli.CommandApi.exitCode"]},{"name":"open val exitCode: Int","description":"elide.tool.err.ErrorHandler.ErrorActionStrategy.exitCode","location":"packages/cli/elide.tool.err/-error-handler/-error-action-strategy/exit-code.html","searchKeys":["exitCode","open val exitCode: Int","elide.tool.err.ErrorHandler.ErrorActionStrategy.exitCode"]},{"name":"open val localizedMessage: String?","description":"elide.tool.err.ErrorHandler.ErrorEvent.localizedMessage","location":"packages/cli/elide.tool.err/-error-handler/-error-event/localized-message.html","searchKeys":["localizedMessage","open val localizedMessage: String?","elide.tool.err.ErrorHandler.ErrorEvent.localizedMessage"]},{"name":"open val loggable: Boolean","description":"elide.tool.err.ErrorHandler.ErrorActionStrategy.loggable","location":"packages/cli/elide.tool.err/-error-handler/-error-action-strategy/loggable.html","searchKeys":["loggable","open val loggable: Boolean","elide.tool.err.ErrorHandler.ErrorActionStrategy.loggable"]},{"name":"open val message: String?","description":"elide.tool.err.ErrorHandler.ErrorEvent.message","location":"packages/cli/elide.tool.err/-error-handler/-error-event/message.html","searchKeys":["message","open val message: String?","elide.tool.err.ErrorHandler.ErrorEvent.message"]},{"name":"open val name: String?","description":"elide.tool.project.ProjectConfig.name","location":"packages/cli/elide.tool.project/-project-config/name.html","searchKeys":["name","open val name: String?","elide.tool.project.ProjectConfig.name"]},{"name":"open val throwable: Throwable","description":"elide.tool.err.ErrorHandler.ErrorActionStrategy.throwable","location":"packages/cli/elide.tool.err/-error-handler/-error-action-strategy/throwable.html","searchKeys":["throwable","open val throwable: Throwable","elide.tool.err.ErrorHandler.ErrorActionStrategy.throwable"]},{"name":"open val version: String?","description":"elide.tool.project.ProjectConfig.version","location":"packages/cli/elide.tool.project/-project-config/version.html","searchKeys":["version","open val version: String?","elide.tool.project.ProjectConfig.version"]},{"name":"open val warning: String?","description":"elide.tool.err.ErrorHandler.ErrorActionStrategy.warning","location":"packages/cli/elide.tool.err/-error-handler/-error-action-strategy/warning.html","searchKeys":["warning","open val warning: String?","elide.tool.err.ErrorHandler.ErrorActionStrategy.warning"]},{"name":"sealed class AbstractEngineOptions : LanguageOptions","description":"elide.tool.cli.options.AbstractEngineOptions","location":"packages/cli/elide.tool.cli.options/-abstract-engine-options/index.html","searchKeys":["AbstractEngineOptions","sealed class AbstractEngineOptions : LanguageOptions","elide.tool.cli.options.AbstractEngineOptions"]},{"name":"sealed class ToolCommandBase<T : CommandContext> : AbstractToolCommand<T> ","description":"elide.tool.cli.ToolCommandBase","location":"packages/cli/elide.tool.cli/-tool-command-base/index.html","searchKeys":["ToolCommandBase","sealed class ToolCommandBase<T : CommandContext> : AbstractToolCommand<T> ","elide.tool.cli.ToolCommandBase"]},{"name":"suspend fun <R> deferred(op: suspend () -> R): Deferred<R>","description":"elide.tool.cli.AbstractToolCommand.deferred","location":"packages/cli/elide.tool.cli/-abstract-tool-command/deferred.html","searchKeys":["deferred","suspend fun <R> deferred(op: suspend () -> R): Deferred<R>","elide.tool.cli.AbstractToolCommand.deferred"]},{"name":"suspend fun MosaicScope.Counter()","description":"elide.tool.cli.output.Counter","location":"packages/cli/elide.tool.cli.output/-counter.html","searchKeys":["Counter","suspend fun MosaicScope.Counter()","elide.tool.cli.output.Counter"]},{"name":"suspend fun assertion(name: String, stage: TestContext.TestStage, op: suspend () -> Pair<Boolean, Pair<String, Throwable?>?>)","description":"elide.tool.testing.TestContext.Utils.assertion","location":"packages/cli/elide.tool.testing/-test-context/-utils/assertion.html","searchKeys":["assertion","suspend fun assertion(name: String, stage: TestContext.TestStage, op: suspend () -> Pair<Boolean, Pair<String, Throwable?>?>)","elide.tool.testing.TestContext.Utils.assertion"]},{"name":"suspend fun runTest(case: Test, listener: TestEventListener<Test, Context>): TestResult","description":"elide.tool.testing.CommandTestRunner.runTest","location":"packages/cli/elide.tool.testing/-command-test-runner/run-test.html","searchKeys":["runTest","suspend fun runTest(case: Test, listener: TestEventListener<Test, Context>): TestResult","elide.tool.testing.CommandTestRunner.runTest"]},{"name":"suspend fun testRenderer(totalTests: Int, allTests: Flow<Pair<TestInfo, suspend () -> Deferred<TestResult>>>, workers: Int = 1)","description":"elide.tool.cli.output.testRenderer","location":"packages/cli/elide.tool.cli.output/test-renderer.html","searchKeys":["testRenderer","suspend fun testRenderer(totalTests: Int, allTests: Flow<Pair<TestInfo, suspend () -> Deferred<TestResult>>>, workers: Int = 1)","elide.tool.cli.output.testRenderer"]},{"name":"val DEFAULT: ErrorHandler.ErrorContext","description":"elide.tool.err.ErrorHandler.ErrorContext.Companion.DEFAULT","location":"packages/cli/elide.tool.err/-error-handler/-error-context/-companion/-d-e-f-a-u-l-t.html","searchKeys":["DEFAULT","val DEFAULT: ErrorHandler.ErrorContext","elide.tool.err.ErrorHandler.ErrorContext.Companion.DEFAULT"]},{"name":"val DEFAULTS: AccessControlOptions.AccessControlSettings","description":"elide.tool.cli.options.AccessControlOptions.AccessControlSettings.Companion.DEFAULTS","location":"packages/cli/elide.tool.cli.options/-access-control-options/-access-control-settings/-companion/-d-e-f-a-u-l-t-s.html","searchKeys":["DEFAULTS","val DEFAULTS: AccessControlOptions.AccessControlSettings","elide.tool.cli.options.AccessControlOptions.AccessControlSettings.Companion.DEFAULTS"]},{"name":"val DEFAULTS: AccessControlOptions.HostAccessSettings","description":"elide.tool.cli.options.AccessControlOptions.HostAccessSettings.Companion.DEFAULTS","location":"packages/cli/elide.tool.cli.options/-access-control-options/-host-access-settings/-companion/-d-e-f-a-u-l-t-s.html","searchKeys":["DEFAULTS","val DEFAULTS: AccessControlOptions.HostAccessSettings","elide.tool.cli.options.AccessControlOptions.HostAccessSettings.Companion.DEFAULTS"]},{"name":"val DEFAULTS: AccessControlOptions.SandboxSettings","description":"elide.tool.cli.options.AccessControlOptions.SandboxSettings.Companion.DEFAULTS","location":"packages/cli/elide.tool.cli.options/-access-control-options/-sandbox-settings/-companion/-d-e-f-a-u-l-t-s.html","searchKeys":["DEFAULTS","val DEFAULTS: AccessControlOptions.SandboxSettings","elide.tool.cli.options.AccessControlOptions.SandboxSettings.Companion.DEFAULTS"]},{"name":"val allowAll: Boolean","description":"elide.tool.cli.options.AccessControlOptions.HostAccessSettings.allowAll","location":"packages/cli/elide.tool.cli.options/-access-control-options/-host-access-settings/allow-all.html","searchKeys":["allowAll","val allowAll: Boolean","elide.tool.cli.options.AccessControlOptions.HostAccessSettings.allowAll"]},{"name":"val allowEnv: Boolean","description":"elide.tool.cli.options.AccessControlOptions.HostAccessSettings.allowEnv","location":"packages/cli/elide.tool.cli.options/-access-control-options/-host-access-settings/allow-env.html","searchKeys":["allowEnv","val allowEnv: Boolean","elide.tool.cli.options.AccessControlOptions.HostAccessSettings.allowEnv"]},{"name":"val allowIo: Boolean","description":"elide.tool.cli.options.AccessControlOptions.HostAccessSettings.allowIo","location":"packages/cli/elide.tool.cli.options/-access-control-options/-host-access-settings/allow-io.html","searchKeys":["allowIo","val allowIo: Boolean","elide.tool.cli.options.AccessControlOptions.HostAccessSettings.allowIo"]},{"name":"val allowNative: Boolean","description":"elide.tool.cli.options.AccessControlOptions.HostAccessSettings.allowNative","location":"packages/cli/elide.tool.cli.options/-access-control-options/-host-access-settings/allow-native.html","searchKeys":["allowNative","val allowNative: Boolean","elide.tool.cli.options.AccessControlOptions.HostAccessSettings.allowNative"]},{"name":"val allowProc: Boolean","description":"elide.tool.cli.options.AccessControlOptions.HostAccessSettings.allowProc","location":"packages/cli/elide.tool.cli.options/-access-control-options/-host-access-settings/allow-proc.html","searchKeys":["allowProc","val allowProc: Boolean","elide.tool.cli.options.AccessControlOptions.HostAccessSettings.allowProc"]},{"name":"val allowThreads: Boolean","description":"elide.tool.cli.options.AccessControlOptions.HostAccessSettings.allowThreads","location":"packages/cli/elide.tool.cli.options/-access-control-options/-host-access-settings/allow-threads.html","searchKeys":["allowThreads","val allowThreads: Boolean","elide.tool.cli.options.AccessControlOptions.HostAccessSettings.allowThreads"]},{"name":"val arch: HostPlatform.Architecture","description":"elide.tool.err.PersistedError.arch","location":"packages/cli/elide.tool.err/-persisted-error/arch.html","searchKeys":["arch","val arch: HostPlatform.Architecture","elide.tool.err.PersistedError.arch"]},{"name":"val args: List<String>","description":"elide.tool.cli.state.CommandOptions.args","location":"packages/cli/elide.tool.cli.state/-command-options/args.html","searchKeys":["args","val args: List<String>","elide.tool.cli.state.CommandOptions.args"]},{"name":"val args: List<String>","description":"elide.tool.err.PersistedError.args","location":"packages/cli/elide.tool.err/-persisted-error/args.html","searchKeys":["args","val args: List<String>","elide.tool.err.PersistedError.args"]},{"name":"val assertions: Collection<String>","description":"elide.tool.cli.output.Test.assertions","location":"packages/cli/elide.tool.cli.output/-test/assertions.html","searchKeys":["assertions","val assertions: Collection<String>","elide.tool.cli.output.Test.assertions"]},{"name":"val bin: String? = null","description":"elide.tool.project.struct.nodepkg.NodePackage.ProjectDirectories.bin","location":"packages/cli/elide.tool.project.struct.nodepkg/-node-package/-project-directories/bin.html","searchKeys":["bin","val bin: String? = null","elide.tool.project.struct.nodepkg.NodePackage.ProjectDirectories.bin"]},{"name":"val bins: Map<String, String>? = null","description":"elide.tool.project.struct.nodepkg.NodePackage.ProjectBins.ProjectBinMap.bins","location":"packages/cli/elide.tool.project.struct.nodepkg/-node-package/-project-bins/-project-bin-map/bins.html","searchKeys":["bins","val bins: Map<String, String>? = null","elide.tool.project.struct.nodepkg.NodePackage.ProjectBins.ProjectBinMap.bins"]},{"name":"val browser: String? = null","description":"elide.tool.project.struct.nodepkg.NodePackage.browser","location":"packages/cli/elide.tool.project.struct.nodepkg/-node-package/browser.html","searchKeys":["browser","val browser: String? = null","elide.tool.project.struct.nodepkg.NodePackage.browser"]},{"name":"val bundleDependencies: List<String>? = null","description":"elide.tool.project.struct.nodepkg.NodePackage.bundleDependencies","location":"packages/cli/elide.tool.project.struct.nodepkg/-node-package/bundle-dependencies.html","searchKeys":["bundleDependencies","val bundleDependencies: List<String>? = null","elide.tool.project.struct.nodepkg.NodePackage.bundleDependencies"]},{"name":"val cause: PersistedError.ErrorInfo? = null","description":"elide.tool.err.PersistedError.ErrorInfo.cause","location":"packages/cli/elide.tool.err/-persisted-error/-error-info/cause.html","searchKeys":["cause","val cause: PersistedError.ErrorInfo? = null","elide.tool.err.PersistedError.ErrorInfo.cause"]},{"name":"val classLoaderName: String? = null","description":"elide.tool.err.ErrorHandler.ErrorStackFrame.classLoaderName","location":"packages/cli/elide.tool.err/-error-handler/-error-stack-frame/class-loader-name.html","searchKeys":["classLoaderName","val classLoaderName: String? = null","elide.tool.err.ErrorHandler.ErrorStackFrame.classLoaderName"]},{"name":"val className: String","description":"elide.tool.err.PersistedError.ErrorInfo.className","location":"packages/cli/elide.tool.err/-persisted-error/-error-info/class-name.html","searchKeys":["className","val className: String","elide.tool.err.PersistedError.ErrorInfo.className"]},{"name":"val className: String? = null","description":"elide.tool.err.ErrorHandler.ErrorStackFrame.className","location":"packages/cli/elide.tool.err/-error-handler/-error-stack-frame/class-name.html","searchKeys":["className","val className: String? = null","elide.tool.err.ErrorHandler.ErrorStackFrame.className"]},{"name":"val column: Int? = null","description":"elide.tool.err.ErrorHandler.ErrorCoordinates.column","location":"packages/cli/elide.tool.err/-error-handler/-error-coordinates/column.html","searchKeys":["column","val column: Int? = null","elide.tool.err.ErrorHandler.ErrorCoordinates.column"]},{"name":"val columnNumber: Int? = null","description":"elide.tool.err.ErrorHandler.ErrorStackFrame.columnNumber","location":"packages/cli/elide.tool.err/-error-handler/-error-stack-frame/column-number.html","searchKeys":["columnNumber","val columnNumber: Int? = null","elide.tool.err.ErrorHandler.ErrorStackFrame.columnNumber"]},{"name":"val config: Map<String, JsonPrimitive>? = null","description":"elide.tool.project.struct.nodepkg.NodePackage.config","location":"packages/cli/elide.tool.project.struct.nodepkg/-node-package/config.html","searchKeys":["config","val config: Map<String, JsonPrimitive>? = null","elide.tool.project.struct.nodepkg.NodePackage.config"]},{"name":"val config: ProjectConfig?","description":"elide.tool.project.ProjectInfo.config","location":"packages/cli/elide.tool.project/-project-info/config.html","searchKeys":["config","val config: ProjectConfig?","elide.tool.project.ProjectInfo.config"]},{"name":"val coordinates: ErrorHandler.ErrorCoordinates? = null","description":"elide.tool.err.ErrorHandler.ErrorContext.coordinates","location":"packages/cli/elide.tool.err/-error-handler/-error-context/coordinates.html","searchKeys":["coordinates","val coordinates: ErrorHandler.ErrorCoordinates? = null","elide.tool.err.ErrorHandler.ErrorContext.coordinates"]},{"name":"val coordinates: ErrorHandler.ErrorCoordinates? = null","description":"elide.tool.err.PersistedError.ErrorInfo.coordinates","location":"packages/cli/elide.tool.err/-persisted-error/-error-info/coordinates.html","searchKeys":["coordinates","val coordinates: ErrorHandler.ErrorCoordinates? = null","elide.tool.err.PersistedError.ErrorInfo.coordinates"]},{"name":"val cpu: List<String>? = null","description":"elide.tool.project.struct.nodepkg.NodePackage.cpu","location":"packages/cli/elide.tool.project.struct.nodepkg/-node-package/cpu.html","searchKeys":["cpu","val cpu: List<String>? = null","elide.tool.project.struct.nodepkg.NodePackage.cpu"]},{"name":"val debug: Boolean","description":"elide.tool.cli.state.CommandOptions.debug","location":"packages/cli/elide.tool.cli.state/-command-options/debug.html","searchKeys":["debug","val debug: Boolean","elide.tool.cli.state.CommandOptions.debug"]},{"name":"val dependencies: Map<String, String>? = null","description":"elide.tool.project.struct.nodepkg.NodePackage.dependencies","location":"packages/cli/elide.tool.project.struct.nodepkg/-node-package/dependencies.html","searchKeys":["dependencies","val dependencies: Map<String, String>? = null","elide.tool.project.struct.nodepkg.NodePackage.dependencies"]},{"name":"val description: String? = null","description":"elide.tool.project.struct.nodepkg.NodePackage.description","location":"packages/cli/elide.tool.project.struct.nodepkg/-node-package/description.html","searchKeys":["description","val description: String? = null","elide.tool.project.struct.nodepkg.NodePackage.description"]},{"name":"val devDependencies: Map<String, String>? = null","description":"elide.tool.project.struct.nodepkg.NodePackage.devDependencies","location":"packages/cli/elide.tool.project.struct.nodepkg/-node-package/dev-dependencies.html","searchKeys":["devDependencies","val devDependencies: Map<String, String>? = null","elide.tool.project.struct.nodepkg.NodePackage.devDependencies"]},{"name":"val directory: String? = null","description":"elide.tool.project.struct.nodepkg.NodePackage.ProjectRepo.ProjectRepoMap.directory","location":"packages/cli/elide.tool.project.struct.nodepkg/-node-package/-project-repo/-project-repo-map/directory.html","searchKeys":["directory","val directory: String? = null","elide.tool.project.struct.nodepkg.NodePackage.ProjectRepo.ProjectRepoMap.directory"]},{"name":"val elide: ElidePackage? = null","description":"elide.tool.project.struct.nodepkg.NodePackage.elide","location":"packages/cli/elide.tool.project.struct.nodepkg/-node-package/elide.html","searchKeys":["elide","val elide: ElidePackage? = null","elide.tool.project.struct.nodepkg.NodePackage.elide"]},{"name":"val email: String? = null","description":"elide.tool.project.struct.nodepkg.NodePackage.ProjectBugs.ProjectBugsConig.email","location":"packages/cli/elide.tool.project.struct.nodepkg/-node-package/-project-bugs/-project-bugs-conig/email.html","searchKeys":["email","val email: String? = null","elide.tool.project.struct.nodepkg.NodePackage.ProjectBugs.ProjectBugsConig.email"]},{"name":"val email: String? = null","description":"elide.tool.project.struct.nodepkg.NodePackage.ProjectPerson.ProjectPersonMap.email","location":"packages/cli/elide.tool.project.struct.nodepkg/-node-package/-project-person/-project-person-map/email.html","searchKeys":["email","val email: String? = null","elide.tool.project.struct.nodepkg.NodePackage.ProjectPerson.ProjectPersonMap.email"]},{"name":"val engine: GraalVMGuest","description":"elide.tool.control.AbstractScriptEngineFactory.engine","location":"packages/cli/elide.tool.control/-abstract-script-engine-factory/engine.html","searchKeys":["engine","val engine: GraalVMGuest","elide.tool.control.AbstractScriptEngineFactory.engine"]},{"name":"val engines: Map<String, String>? = null","description":"elide.tool.project.struct.nodepkg.NodePackage.engines","location":"packages/cli/elide.tool.project.struct.nodepkg/-node-package/engines.html","searchKeys":["engines","val engines: Map<String, String>? = null","elide.tool.project.struct.nodepkg.NodePackage.engines"]},{"name":"val entries: EnumEntries<ErrorHandler.Action>","description":"elide.tool.err.ErrorHandler.Action.entries","location":"packages/cli/elide.tool.err/-error-handler/-action/entries.html","searchKeys":["entries","val entries: EnumEntries<ErrorHandler.Action>","elide.tool.err.ErrorHandler.Action.entries"]},{"name":"val entries: EnumEntries<GuestLanguage>","description":"elide.tool.cli.GuestLanguage.entries","location":"packages/cli/elide.tool.cli/-guest-language/entries.html","searchKeys":["entries","val entries: EnumEntries<GuestLanguage>","elide.tool.cli.GuestLanguage.entries"]},{"name":"val entries: EnumEntries<TestContext.TestStage>","description":"elide.tool.testing.TestContext.TestStage.entries","location":"packages/cli/elide.tool.testing/-test-context/-test-stage/entries.html","searchKeys":["entries","val entries: EnumEntries<TestContext.TestStage>","elide.tool.testing.TestContext.TestStage.entries"]},{"name":"val entries: EnumEntries<TestEvent.Type>","description":"elide.tool.testing.TestEvent.Type.entries","location":"packages/cli/elide.tool.testing/-test-event/-type/entries.html","searchKeys":["entries","val entries: EnumEntries<TestEvent.Type>","elide.tool.testing.TestEvent.Type.entries"]},{"name":"val entries: EnumEntries<TestResult.Result>","description":"elide.tool.testing.TestResult.Result.entries","location":"packages/cli/elide.tool.testing/-test-result/-result/entries.html","searchKeys":["entries","val entries: EnumEntries<TestResult.Result>","elide.tool.testing.TestResult.Result.entries"]},{"name":"val entries: EnumEntries<TestState>","description":"elide.tool.cli.output.TestState.entries","location":"packages/cli/elide.tool.cli.output/-test-state/entries.html","searchKeys":["entries","val entries: EnumEntries<TestState>","elide.tool.cli.output.TestState.entries"]},{"name":"val entry: NodePackage.ProjectFundingEntry? = null","description":"elide.tool.project.struct.nodepkg.NodePackage.ProjectFunding.ProjectSingleFunding.entry","location":"packages/cli/elide.tool.project.struct.nodepkg/-node-package/-project-funding/-project-single-funding/entry.html","searchKeys":["entry","val entry: NodePackage.ProjectFundingEntry? = null","elide.tool.project.struct.nodepkg.NodePackage.ProjectFunding.ProjectSingleFunding.entry"]},{"name":"val env: Map<String, String>","description":"elide.tool.err.PersistedError.RuntimeInfo.env","location":"packages/cli/elide.tool.err/-persisted-error/-runtime-info/env.html","searchKeys":["env","val env: Map<String, String>","elide.tool.err.PersistedError.RuntimeInfo.env"]},{"name":"val env: ProjectInfo.ProjectEnvironment?","description":"elide.tool.project.ProjectInfo.env","location":"packages/cli/elide.tool.project/-project-info/env.html","searchKeys":["env","val env: ProjectInfo.ProjectEnvironment?","elide.tool.project.ProjectInfo.env"]},{"name":"val error: PersistedError.ErrorInfo","description":"elide.tool.err.PersistedError.error","location":"packages/cli/elide.tool.err/-persisted-error/error.html","searchKeys":["error","val error: PersistedError.ErrorInfo","elide.tool.err.PersistedError.error"]},{"name":"val failures: Collection<String>","description":"elide.tool.cli.output.Test.failures","location":"packages/cli/elide.tool.cli.output/-test/failures.html","searchKeys":["failures","val failures: Collection<String>","elide.tool.cli.output.Test.failures"]},{"name":"val fatal: Boolean = true","description":"elide.tool.err.ErrorHandler.ErrorContext.fatal","location":"packages/cli/elide.tool.err/-error-handler/-error-context/fatal.html","searchKeys":["fatal","val fatal: Boolean = true","elide.tool.err.ErrorHandler.ErrorContext.fatal"]},{"name":"val file: String? = null","description":"elide.tool.err.ErrorHandler.ErrorCoordinates.file","location":"packages/cli/elide.tool.err/-error-handler/-error-coordinates/file.html","searchKeys":["file","val file: String? = null","elide.tool.err.ErrorHandler.ErrorCoordinates.file"]},{"name":"val fileName: String? = null","description":"elide.tool.err.ErrorHandler.ErrorStackFrame.fileName","location":"packages/cli/elide.tool.err/-error-handler/-error-stack-frame/file-name.html","searchKeys":["fileName","val fileName: String? = null","elide.tool.err.ErrorHandler.ErrorStackFrame.fileName"]},{"name":"val files: List<String>? = null","description":"elide.tool.project.struct.nodepkg.NodePackage.files","location":"packages/cli/elide.tool.project.struct.nodepkg/-node-package/files.html","searchKeys":["files","val files: List<String>? = null","elide.tool.project.struct.nodepkg.NodePackage.files"]},{"name":"val frames: List<ErrorHandler.ErrorStackFrame>","description":"elide.tool.err.PersistedError.ErrorInfo.frames","location":"packages/cli/elide.tool.err/-persisted-error/-error-info/frames.html","searchKeys":["frames","val frames: List<ErrorHandler.ErrorStackFrame>","elide.tool.err.PersistedError.ErrorInfo.frames"]},{"name":"val frames: List<ErrorHandler.ErrorStackFrame>? = null","description":"elide.tool.err.ErrorHandler.ErrorContext.frames","location":"packages/cli/elide.tool.err/-error-handler/-error-context/frames.html","searchKeys":["frames","val frames: List<ErrorHandler.ErrorStackFrame>? = null","elide.tool.err.ErrorHandler.ErrorContext.frames"]},{"name":"val guest: Boolean = false","description":"elide.tool.err.ErrorHandler.ErrorContext.guest","location":"packages/cli/elide.tool.err/-error-handler/-error-context/guest.html","searchKeys":["guest","val guest: Boolean = false","elide.tool.err.ErrorHandler.ErrorContext.guest"]},{"name":"val homepage: String? = null","description":"elide.tool.project.struct.nodepkg.NodePackage.homepage","location":"packages/cli/elide.tool.project.struct.nodepkg/-node-package/homepage.html","searchKeys":["homepage","val homepage: String? = null","elide.tool.project.struct.nodepkg.NodePackage.homepage"]},{"name":"val hostAccess: AccessControlOptions.HostAccessSettings","description":"elide.tool.cli.options.AccessControlOptions.AccessControlSettings.hostAccess","location":"packages/cli/elide.tool.cli.options/-access-control-options/-access-control-settings/host-access.html","searchKeys":["hostAccess","val hostAccess: AccessControlOptions.HostAccessSettings","elide.tool.cli.options.AccessControlOptions.AccessControlSettings.hostAccess"]},{"name":"val id: String","description":"elide.tool.err.PersistedError.id","location":"packages/cli/elide.tool.err/-persisted-error/id.html","searchKeys":["id","val id: String","elide.tool.err.PersistedError.id"]},{"name":"val inner: Map<String, String>? = null","description":"elide.tool.project.struct.nodepkg.NodePackage.PackageOverride.PackageOverrideMap.inner","location":"packages/cli/elide.tool.project.struct.nodepkg/-node-package/-package-override/-package-override-map/inner.html","searchKeys":["inner","val inner: Map<String, String>? = null","elide.tool.project.struct.nodepkg.NodePackage.PackageOverride.PackageOverrideMap.inner"]},{"name":"val isNativeMethod: Boolean = false","description":"elide.tool.err.ErrorHandler.ErrorStackFrame.isNativeMethod","location":"packages/cli/elide.tool.err/-error-handler/-error-stack-frame/is-native-method.html","searchKeys":["isNativeMethod","val isNativeMethod: Boolean = false","elide.tool.err.ErrorHandler.ErrorStackFrame.isNativeMethod"]},{"name":"val isolates: Boolean","description":"elide.tool.cli.options.AccessControlOptions.SandboxSettings.isolates","location":"packages/cli/elide.tool.cli.options/-access-control-options/-sandbox-settings/isolates.html","searchKeys":["isolates","val isolates: Boolean","elide.tool.cli.options.AccessControlOptions.SandboxSettings.isolates"]},{"name":"val keywords: List<String>? = null","description":"elide.tool.project.struct.nodepkg.NodePackage.keywords","location":"packages/cli/elide.tool.project.struct.nodepkg/-node-package/keywords.html","searchKeys":["keywords","val keywords: List<String>? = null","elide.tool.project.struct.nodepkg.NodePackage.keywords"]},{"name":"val language: GuestLanguage? = null","description":"elide.tool.err.ErrorHandler.ErrorContext.language","location":"packages/cli/elide.tool.err/-error-handler/-error-context/language.html","searchKeys":["language","val language: GuestLanguage? = null","elide.tool.err.ErrorHandler.ErrorContext.language"]},{"name":"val language: String? = null","description":"elide.tool.err.ErrorHandler.ErrorCoordinates.language","location":"packages/cli/elide.tool.err/-error-handler/-error-coordinates/language.html","searchKeys":["language","val language: String? = null","elide.tool.err.ErrorHandler.ErrorCoordinates.language"]},{"name":"val license: String? = null","description":"elide.tool.project.struct.nodepkg.NodePackage.license","location":"packages/cli/elide.tool.project.struct.nodepkg/-node-package/license.html","searchKeys":["license","val license: String? = null","elide.tool.project.struct.nodepkg.NodePackage.license"]},{"name":"val line: Int? = null","description":"elide.tool.err.ErrorHandler.ErrorCoordinates.line","location":"packages/cli/elide.tool.err/-error-handler/-error-coordinates/line.html","searchKeys":["line","val line: Int? = null","elide.tool.err.ErrorHandler.ErrorCoordinates.line"]},{"name":"val lineNumber: Int? = null","description":"elide.tool.err.ErrorHandler.ErrorStackFrame.lineNumber","location":"packages/cli/elide.tool.err/-error-handler/-error-stack-frame/line-number.html","searchKeys":["lineNumber","val lineNumber: Int? = null","elide.tool.err.ErrorHandler.ErrorStackFrame.lineNumber"]},{"name":"val list: List<NodePackage.ProjectFundingEntry>? = null","description":"elide.tool.project.struct.nodepkg.NodePackage.ProjectFunding.ProjectMultiFunding.list","location":"packages/cli/elide.tool.project.struct.nodepkg/-node-package/-project-funding/-project-multi-funding/list.html","searchKeys":["list","val list: List<NodePackage.ProjectFundingEntry>? = null","elide.tool.project.struct.nodepkg.NodePackage.ProjectFunding.ProjectMultiFunding.list"]},{"name":"val list: List<String>? = null","description":"elide.tool.project.struct.nodepkg.NodePackage.ProjectMans.ProjectManList.list","location":"packages/cli/elide.tool.project.struct.nodepkg/-node-package/-project-mans/-project-man-list/list.html","searchKeys":["list","val list: List<String>? = null","elide.tool.project.struct.nodepkg.NodePackage.ProjectMans.ProjectManList.list"]},{"name":"val main: String? = null","description":"elide.tool.project.struct.nodepkg.NodePackage.main","location":"packages/cli/elide.tool.project.struct.nodepkg/-node-package/main.html","searchKeys":["main","val main: String? = null","elide.tool.project.struct.nodepkg.NodePackage.main"]},{"name":"val man: String? = null","description":"elide.tool.project.struct.nodepkg.NodePackage.ProjectDirectories.man","location":"packages/cli/elide.tool.project.struct.nodepkg/-node-package/-project-directories/man.html","searchKeys":["man","val man: String? = null","elide.tool.project.struct.nodepkg.NodePackage.ProjectDirectories.man"]},{"name":"val message: String","description":"elide.tool.cli.CommandResult.Error.message","location":"packages/cli/elide.tool.cli/-command-result/-error/message.html","searchKeys":["message","val message: String","elide.tool.cli.CommandResult.Error.message"]},{"name":"val message: String? = null","description":"elide.tool.err.PersistedError.ErrorInfo.message","location":"packages/cli/elide.tool.err/-persisted-error/-error-info/message.html","searchKeys":["message","val message: String? = null","elide.tool.err.PersistedError.ErrorInfo.message"]},{"name":"val methodName: String? = null","description":"elide.tool.err.ErrorHandler.ErrorStackFrame.methodName","location":"packages/cli/elide.tool.err/-error-handler/-error-stack-frame/method-name.html","searchKeys":["methodName","val methodName: String? = null","elide.tool.err.ErrorHandler.ErrorStackFrame.methodName"]},{"name":"val moduleName: String? = null","description":"elide.tool.err.ErrorHandler.ErrorStackFrame.moduleName","location":"packages/cli/elide.tool.err/-error-handler/-error-stack-frame/module-name.html","searchKeys":["moduleName","val moduleName: String? = null","elide.tool.err.ErrorHandler.ErrorStackFrame.moduleName"]},{"name":"val moduleVersion: String? = null","description":"elide.tool.err.ErrorHandler.ErrorStackFrame.moduleVersion","location":"packages/cli/elide.tool.err/-error-handler/-error-stack-frame/module-version.html","searchKeys":["moduleVersion","val moduleVersion: String? = null","elide.tool.err.ErrorHandler.ErrorStackFrame.moduleVersion"]},{"name":"val name: String","description":"elide.tool.annotations.EmbeddedTest.name","location":"packages/cli/elide.tool.annotations/-embedded-test/name.html","searchKeys":["name","val name: String","elide.tool.annotations.EmbeddedTest.name"]},{"name":"val name: String","description":"elide.tool.testing.TestInfo.name","location":"packages/cli/elide.tool.testing/-test-info/name.html","searchKeys":["name","val name: String","elide.tool.testing.TestInfo.name"]},{"name":"val name: String?","description":"elide.tool.project.ProjectInfo.name","location":"packages/cli/elide.tool.project/-project-info/name.html","searchKeys":["name","val name: String?","elide.tool.project.ProjectInfo.name"]},{"name":"val name: String? = null","description":"elide.tool.project.struct.ElidePackage.name","location":"packages/cli/elide.tool.project.struct/-elide-package/name.html","searchKeys":["name","val name: String? = null","elide.tool.project.struct.ElidePackage.name"]},{"name":"val name: String? = null","description":"elide.tool.project.struct.nodepkg.NodePackage.ProjectPerson.ProjectPersonMap.name","location":"packages/cli/elide.tool.project.struct.nodepkg/-node-package/-project-person/-project-person-map/name.html","searchKeys":["name","val name: String? = null","elide.tool.project.struct.nodepkg.NodePackage.ProjectPerson.ProjectPersonMap.name"]},{"name":"val name: String? = null","description":"elide.tool.project.struct.nodepkg.NodePackage.name","location":"packages/cli/elide.tool.project.struct.nodepkg/-node-package/name.html","searchKeys":["name","val name: String? = null","elide.tool.project.struct.nodepkg.NodePackage.name"]},{"name":"val native: Boolean","description":"elide.tool.err.PersistedError.RuntimeInfo.native","location":"packages/cli/elide.tool.err/-persisted-error/-runtime-info/native.html","searchKeys":["native","val native: Boolean","elide.tool.err.PersistedError.RuntimeInfo.native"]},{"name":"val ok: Boolean","description":"elide.tool.testing.TestResult.Result.ok","location":"packages/cli/elide.tool.testing/-test-result/-result/ok.html","searchKeys":["ok","val ok: Boolean","elide.tool.testing.TestResult.Result.ok"]},{"name":"val optionalDependencies: Map<String, String>? = null","description":"elide.tool.project.struct.nodepkg.NodePackage.optionalDependencies","location":"packages/cli/elide.tool.project.struct.nodepkg/-node-package/optional-dependencies.html","searchKeys":["optionalDependencies","val optionalDependencies: Map<String, String>? = null","elide.tool.project.struct.nodepkg.NodePackage.optionalDependencies"]},{"name":"val os: HostPlatform.OperatingSystem","description":"elide.tool.err.PersistedError.os","location":"packages/cli/elide.tool.err/-persisted-error/os.html","searchKeys":["os","val os: HostPlatform.OperatingSystem","elide.tool.err.PersistedError.os"]},{"name":"val os: List<String>? = null","description":"elide.tool.project.struct.nodepkg.NodePackage.os","location":"packages/cli/elide.tool.project.struct.nodepkg/-node-package/os.html","searchKeys":["os","val os: List<String>? = null","elide.tool.project.struct.nodepkg.NodePackage.os"]},{"name":"val path: String","description":"elide.tool.cli.output.Test.path","location":"packages/cli/elide.tool.cli.output/-test/path.html","searchKeys":["path","val path: String","elide.tool.cli.output.Test.path"]},{"name":"val peerDependencies: Map<String, String>? = null","description":"elide.tool.project.struct.nodepkg.NodePackage.peerDependencies","location":"packages/cli/elide.tool.project.struct.nodepkg/-node-package/peer-dependencies.html","searchKeys":["peerDependencies","val peerDependencies: Map<String, String>? = null","elide.tool.project.struct.nodepkg.NodePackage.peerDependencies"]},{"name":"val peerDependenciesMeta: Map<String, Map<String, JsonPrimitive>>? = null","description":"elide.tool.project.struct.nodepkg.NodePackage.peerDependenciesMeta","location":"packages/cli/elide.tool.project.struct.nodepkg/-node-package/peer-dependencies-meta.html","searchKeys":["peerDependenciesMeta","val peerDependenciesMeta: Map<String, Map<String, JsonPrimitive>>? = null","elide.tool.project.struct.nodepkg.NodePackage.peerDependenciesMeta"]},{"name":"val pretty: Boolean","description":"elide.tool.cli.state.CommandOptions.pretty","location":"packages/cli/elide.tool.cli.state/-command-options/pretty.html","searchKeys":["pretty","val pretty: Boolean","elide.tool.cli.state.CommandOptions.pretty"]},{"name":"val private: Boolean = false","description":"elide.tool.project.struct.nodepkg.NodePackage.private","location":"packages/cli/elide.tool.project.struct.nodepkg/-node-package/private.html","searchKeys":["private","val private: Boolean = false","elide.tool.project.struct.nodepkg.NodePackage.private"]},{"name":"val properties: Map<String, String>","description":"elide.tool.err.PersistedError.RuntimeInfo.properties","location":"packages/cli/elide.tool.err/-persisted-error/-runtime-info/properties.html","searchKeys":["properties","val properties: Map<String, String>","elide.tool.err.PersistedError.RuntimeInfo.properties"]},{"name":"val publishConfig: Map<String, JsonPrimitive>? = null","description":"elide.tool.project.struct.nodepkg.NodePackage.publishConfig","location":"packages/cli/elide.tool.project.struct.nodepkg/-node-package/publish-config.html","searchKeys":["publishConfig","val publishConfig: Map<String, JsonPrimitive>? = null","elide.tool.project.struct.nodepkg.NodePackage.publishConfig"]},{"name":"val quiet: Boolean","description":"elide.tool.cli.state.CommandOptions.quiet","location":"packages/cli/elide.tool.cli.state/-command-options/quiet.html","searchKeys":["quiet","val quiet: Boolean","elide.tool.cli.state.CommandOptions.quiet"]},{"name":"val repository: String? = null","description":"elide.tool.project.struct.nodepkg.NodePackage.repository","location":"packages/cli/elide.tool.project.struct.nodepkg/-node-package/repository.html","searchKeys":["repository","val repository: String? = null","elide.tool.project.struct.nodepkg.NodePackage.repository"]},{"name":"val root: String?","description":"elide.tool.project.ProjectInfo.root","location":"packages/cli/elide.tool.project/-project-info/root.html","searchKeys":["root","val root: String?","elide.tool.project.ProjectInfo.root"]},{"name":"val runtime: PersistedError.RuntimeInfo","description":"elide.tool.err.PersistedError.runtime","location":"packages/cli/elide.tool.err/-persisted-error/runtime.html","searchKeys":["runtime","val runtime: PersistedError.RuntimeInfo","elide.tool.err.PersistedError.runtime"]},{"name":"val sandbox: AccessControlOptions.SandboxSettings","description":"elide.tool.cli.options.AccessControlOptions.AccessControlSettings.sandbox","location":"packages/cli/elide.tool.cli.options/-access-control-options/-access-control-settings/sandbox.html","searchKeys":["sandbox","val sandbox: AccessControlOptions.SandboxSettings","elide.tool.cli.options.AccessControlOptions.AccessControlSettings.sandbox"]},{"name":"val scripts: Map<String, String>? = null","description":"elide.tool.project.struct.nodepkg.NodePackage.scripts","location":"packages/cli/elide.tool.project.struct.nodepkg/-node-package/scripts.html","searchKeys":["scripts","val scripts: Map<String, String>? = null","elide.tool.project.struct.nodepkg.NodePackage.scripts"]},{"name":"val stacktrace: String? = null","description":"elide.tool.err.ErrorHandler.ErrorContext.stacktrace","location":"packages/cli/elide.tool.err/-error-handler/-error-context/stacktrace.html","searchKeys":["stacktrace","val stacktrace: String? = null","elide.tool.err.ErrorHandler.ErrorContext.stacktrace"]},{"name":"val stacktrace: String? = null","description":"elide.tool.err.PersistedError.ErrorInfo.stacktrace","location":"packages/cli/elide.tool.err/-persisted-error/-error-info/stacktrace.html","searchKeys":["stacktrace","val stacktrace: String? = null","elide.tool.err.PersistedError.ErrorInfo.stacktrace"]},{"name":"val state: TestState","description":"elide.tool.cli.output.Test.state","location":"packages/cli/elide.tool.cli.output/-test/state.html","searchKeys":["state","val state: TestState","elide.tool.cli.output.Test.state"]},{"name":"val string: String","description":"elide.tool.project.struct.nodepkg.NodePackage.ProjectPerson.ProjectPersonString.string","location":"packages/cli/elide.tool.project.struct.nodepkg/-node-package/-project-person/-project-person-string/string.html","searchKeys":["string","val string: String","elide.tool.project.struct.nodepkg.NodePackage.ProjectPerson.ProjectPersonString.string"]},{"name":"val string: String? = null","description":"elide.tool.project.struct.nodepkg.NodePackage.PackageOverride.PackageOverrideString.string","location":"packages/cli/elide.tool.project.struct.nodepkg/-node-package/-package-override/-package-override-string/string.html","searchKeys":["string","val string: String? = null","elide.tool.project.struct.nodepkg.NodePackage.PackageOverride.PackageOverrideString.string"]},{"name":"val string: String? = null","description":"elide.tool.project.struct.nodepkg.NodePackage.ProjectBins.ProectBinString.string","location":"packages/cli/elide.tool.project.struct.nodepkg/-node-package/-project-bins/-proect-bin-string/string.html","searchKeys":["string","val string: String? = null","elide.tool.project.struct.nodepkg.NodePackage.ProjectBins.ProectBinString.string"]},{"name":"val string: String? = null","description":"elide.tool.project.struct.nodepkg.NodePackage.ProjectFundingEntry.ProjectFundingString.string","location":"packages/cli/elide.tool.project.struct.nodepkg/-node-package/-project-funding-entry/-project-funding-string/string.html","searchKeys":["string","val string: String? = null","elide.tool.project.struct.nodepkg.NodePackage.ProjectFundingEntry.ProjectFundingString.string"]},{"name":"val string: String? = null","description":"elide.tool.project.struct.nodepkg.NodePackage.ProjectMans.ProjectManString.string","location":"packages/cli/elide.tool.project.struct.nodepkg/-node-package/-project-mans/-project-man-string/string.html","searchKeys":["string","val string: String? = null","elide.tool.project.struct.nodepkg.NodePackage.ProjectMans.ProjectManString.string"]},{"name":"val string: String? = null","description":"elide.tool.project.struct.nodepkg.NodePackage.ProjectRepo.ProjectRepoString.string","location":"packages/cli/elide.tool.project.struct.nodepkg/-node-package/-project-repo/-project-repo-string/string.html","searchKeys":["string","val string: String? = null","elide.tool.project.struct.nodepkg.NodePackage.ProjectRepo.ProjectRepoString.string"]},{"name":"val thread: Thread? = null","description":"elide.tool.err.ErrorHandler.ErrorContext.thread","location":"packages/cli/elide.tool.err/-error-handler/-error-context/thread.html","searchKeys":["thread","val thread: Thread? = null","elide.tool.err.ErrorHandler.ErrorContext.thread"]},{"name":"val threadId: Long? = null","description":"elide.tool.err.ErrorHandler.ErrorCoordinates.threadId","location":"packages/cli/elide.tool.err/-error-handler/-error-coordinates/thread-id.html","searchKeys":["threadId","val threadId: Long? = null","elide.tool.err.ErrorHandler.ErrorCoordinates.threadId"]},{"name":"val threadName: String? = null","description":"elide.tool.err.ErrorHandler.ErrorCoordinates.threadName","location":"packages/cli/elide.tool.err/-error-handler/-error-coordinates/thread-name.html","searchKeys":["threadName","val threadName: String? = null","elide.tool.err.ErrorHandler.ErrorCoordinates.threadName"]},{"name":"val timestamp: Instant","description":"elide.tool.err.ErrorHandler.ErrorContext.timestamp","location":"packages/cli/elide.tool.err/-error-handler/-error-context/timestamp.html","searchKeys":["timestamp","val timestamp: Instant","elide.tool.err.ErrorHandler.ErrorContext.timestamp"]},{"name":"val timestamp: Instant","description":"elide.tool.err.PersistedError.timestamp","location":"packages/cli/elide.tool.err/-persisted-error/timestamp.html","searchKeys":["timestamp","val timestamp: Instant","elide.tool.err.PersistedError.timestamp"]},{"name":"val type: String? = null","description":"elide.tool.project.struct.nodepkg.NodePackage.ProjectFundingEntry.ProjectFundingMap.type","location":"packages/cli/elide.tool.project.struct.nodepkg/-node-package/-project-funding-entry/-project-funding-map/type.html","searchKeys":["type","val type: String? = null","elide.tool.project.struct.nodepkg.NodePackage.ProjectFundingEntry.ProjectFundingMap.type"]},{"name":"val type: String? = null","description":"elide.tool.project.struct.nodepkg.NodePackage.ProjectRepo.ProjectRepoMap.type","location":"packages/cli/elide.tool.project.struct.nodepkg/-node-package/-project-repo/-project-repo-map/type.html","searchKeys":["type","val type: String? = null","elide.tool.project.struct.nodepkg.NodePackage.ProjectRepo.ProjectRepoMap.type"]},{"name":"val url: String? = null","description":"elide.tool.project.struct.nodepkg.NodePackage.ProjectBugs.ProjectBugsConig.url","location":"packages/cli/elide.tool.project.struct.nodepkg/-node-package/-project-bugs/-project-bugs-conig/url.html","searchKeys":["url","val url: String? = null","elide.tool.project.struct.nodepkg.NodePackage.ProjectBugs.ProjectBugsConig.url"]},{"name":"val url: String? = null","description":"elide.tool.project.struct.nodepkg.NodePackage.ProjectBugs.ProjectBugsUrl.url","location":"packages/cli/elide.tool.project.struct.nodepkg/-node-package/-project-bugs/-project-bugs-url/url.html","searchKeys":["url","val url: String? = null","elide.tool.project.struct.nodepkg.NodePackage.ProjectBugs.ProjectBugsUrl.url"]},{"name":"val url: String? = null","description":"elide.tool.project.struct.nodepkg.NodePackage.ProjectFundingEntry.ProjectFundingMap.url","location":"packages/cli/elide.tool.project.struct.nodepkg/-node-package/-project-funding-entry/-project-funding-map/url.html","searchKeys":["url","val url: String? = null","elide.tool.project.struct.nodepkg.NodePackage.ProjectFundingEntry.ProjectFundingMap.url"]},{"name":"val url: String? = null","description":"elide.tool.project.struct.nodepkg.NodePackage.ProjectPerson.ProjectPersonMap.url","location":"packages/cli/elide.tool.project.struct.nodepkg/-node-package/-project-person/-project-person-map/url.html","searchKeys":["url","val url: String? = null","elide.tool.project.struct.nodepkg.NodePackage.ProjectPerson.ProjectPersonMap.url"]},{"name":"val url: String? = null","description":"elide.tool.project.struct.nodepkg.NodePackage.ProjectRepo.ProjectRepoMap.url","location":"packages/cli/elide.tool.project.struct.nodepkg/-node-package/-project-repo/-project-repo-map/url.html","searchKeys":["url","val url: String? = null","elide.tool.project.struct.nodepkg.NodePackage.ProjectRepo.ProjectRepoMap.url"]},{"name":"val uuid: Uuid","description":"elide.tool.err.ErrorHandler.ErrorContext.uuid","location":"packages/cli/elide.tool.err/-error-handler/-error-context/uuid.html","searchKeys":["uuid","val uuid: Uuid","elide.tool.err.ErrorHandler.ErrorContext.uuid"]},{"name":"val vars: SortedMap<String, EnvConfig.EnvVar>","description":"elide.tool.project.ProjectInfo.ProjectEnvironment.vars","location":"packages/cli/elide.tool.project/-project-info/-project-environment/vars.html","searchKeys":["vars","val vars: SortedMap<String, EnvConfig.EnvVar>","elide.tool.project.ProjectInfo.ProjectEnvironment.vars"]},{"name":"val verbose: Boolean","description":"elide.tool.cli.state.CommandOptions.verbose","location":"packages/cli/elide.tool.cli.state/-command-options/verbose.html","searchKeys":["verbose","val verbose: Boolean","elide.tool.cli.state.CommandOptions.verbose"]},{"name":"val version: Int = 1","description":"elide.tool.err.PersistedError.version","location":"packages/cli/elide.tool.err/-persisted-error/version.html","searchKeys":["version","val version: Int = 1","elide.tool.err.PersistedError.version"]},{"name":"val version: String","description":"elide.tool.err.PersistedError.RuntimeInfo.version","location":"packages/cli/elide.tool.err/-persisted-error/-runtime-info/version.html","searchKeys":["version","val version: String","elide.tool.err.PersistedError.RuntimeInfo.version"]},{"name":"val version: String?","description":"elide.tool.project.ProjectInfo.version","location":"packages/cli/elide.tool.project/-project-info/version.html","searchKeys":["version","val version: String?","elide.tool.project.ProjectInfo.version"]},{"name":"val version: String? = null","description":"elide.tool.project.struct.nodepkg.NodePackage.version","location":"packages/cli/elide.tool.project.struct.nodepkg/-node-package/version.html","searchKeys":["version","val version: String? = null","elide.tool.project.struct.nodepkg.NodePackage.version"]},{"name":"val workspaces: List<String>? = null","description":"elide.tool.project.struct.nodepkg.NodePackage.workspaces","location":"packages/cli/elide.tool.project.struct.nodepkg/-node-package/workspaces.html","searchKeys":["workspaces","val workspaces: List<String>? = null","elide.tool.project.struct.nodepkg.NodePackage.workspaces"]},{"name":"value class CommandOptions","description":"elide.tool.cli.state.CommandOptions","location":"packages/cli/elide.tool.cli.state/-command-options/index.html","searchKeys":["CommandOptions","value class CommandOptions","elide.tool.cli.state.CommandOptions"]},{"name":"value class CommandState","description":"elide.tool.cli.state.CommandState","location":"packages/cli/elide.tool.cli.state/-command-state/index.html","searchKeys":["CommandState","value class CommandState","elide.tool.cli.state.CommandState"]},{"name":"value class Dropped : TestResult","description":"elide.tool.testing.TestResult.Dropped","location":"packages/cli/elide.tool.testing/-test-result/-dropped/index.html","searchKeys":["Dropped","value class Dropped : TestResult","elide.tool.testing.TestResult.Dropped"]},{"name":"value class Failure : TestResult","description":"elide.tool.testing.TestResult.Failure","location":"packages/cli/elide.tool.testing/-test-result/-failure/index.html","searchKeys":["Failure","value class Failure : TestResult","elide.tool.testing.TestResult.Failure"]},{"name":"value class NativeLib : NativeLibInfo","description":"elide.tool.engine.NativeLib","location":"packages/cli/elide.tool.engine/-native-lib/index.html","searchKeys":["NativeLib","value class NativeLib : NativeLibInfo","elide.tool.engine.NativeLib"]},{"name":"value class ProjectInfo","description":"elide.tool.project.ProjectInfo","location":"packages/cli/elide.tool.project/-project-info/index.html","searchKeys":["ProjectInfo","value class ProjectInfo","elide.tool.project.ProjectInfo"]},{"name":"value class Skipped : TestResult","description":"elide.tool.testing.TestResult.Skipped","location":"packages/cli/elide.tool.testing/-test-result/-skipped/index.html","searchKeys":["Skipped","value class Skipped : TestResult","elide.tool.testing.TestResult.Skipped"]},{"name":"value class Success : TestResult","description":"elide.tool.testing.TestResult.Success","location":"packages/cli/elide.tool.testing/-test-result/-success/index.html","searchKeys":["Success","value class Success : TestResult","elide.tool.testing.TestResult.Success"]},{"name":"value class TestInfo","description":"elide.tool.testing.TestInfo","location":"packages/cli/elide.tool.testing/-test-info/index.html","searchKeys":["TestInfo","value class TestInfo","elide.tool.testing.TestInfo"]},{"name":"var debug: Boolean","description":"elide.tool.cli.options.CommonOptions.debug","location":"packages/cli/elide.tool.cli.options/-common-options/debug.html","searchKeys":["debug","var debug: Boolean","elide.tool.cli.options.CommonOptions.debug"]},{"name":"var pretty: Boolean","description":"elide.tool.cli.options.CommonOptions.pretty","location":"packages/cli/elide.tool.cli.options/-common-options/pretty.html","searchKeys":["pretty","var pretty: Boolean","elide.tool.cli.options.CommonOptions.pretty"]},{"name":"var quiet: Boolean","description":"elide.tool.cli.options.CommonOptions.quiet","location":"packages/cli/elide.tool.cli.options/-common-options/quiet.html","searchKeys":["quiet","var quiet: Boolean","elide.tool.cli.options.CommonOptions.quiet"]},{"name":"var selftest: Boolean","description":"elide.tool.cli.ElideTool.selftest","location":"packages/cli/elide.tool.cli/-elide-tool/selftest.html","searchKeys":["selftest","var selftest: Boolean","elide.tool.cli.ElideTool.selftest"]},{"name":"var verbose: Boolean","description":"elide.tool.cli.options.CommonOptions.verbose","location":"packages/cli/elide.tool.cli.options/-common-options/verbose.html","searchKeys":["verbose","var verbose: Boolean","elide.tool.cli.options.CommonOptions.verbose"]},{"name":"const val SERVICE_VERSION: String","description":"dev.elide.ElideRuntime.SERVICE_VERSION","location":"packages/runtime/dev.elide/-elide-runtime/-s-e-r-v-i-c-e_-v-e-r-s-i-o-n.html","searchKeys":["SERVICE_VERSION","const val SERVICE_VERSION: String","dev.elide.ElideRuntime.SERVICE_VERSION"]},{"name":"object ElideRuntime","description":"dev.elide.ElideRuntime","location":"packages/runtime/dev.elide/-elide-runtime/index.html","searchKeys":["ElideRuntime","object ElideRuntime","dev.elide.ElideRuntime"]},{"name":"abstract fun render(): R","description":"elide.ssr.ResponseRenderer.render","location":"packages/ssr/elide.ssr/-response-renderer/render.html","searchKeys":["render","abstract fun render(): R","elide.ssr.ResponseRenderer.render"]},{"name":"class Error(val err: Any, val status: Int = 500, val headers: Map<String, String> = emptyMap()) : StreamResponse","description":"elide.ssr.StreamResponse.Error","location":"packages/ssr/elide.ssr/-stream-response/-error/index.html","searchKeys":["Error","class Error(val err: Any, val status: Int = 500, val headers: Map<String, String> = emptyMap()) : StreamResponse","elide.ssr.StreamResponse.Error"]},{"name":"class Success(val stream: RenderedStream) : StreamResponse","description":"elide.ssr.StreamResponse.Success","location":"packages/ssr/elide.ssr/-stream-response/-success/index.html","searchKeys":["Success","class Success(val stream: RenderedStream) : StreamResponse","elide.ssr.StreamResponse.Success"]},{"name":"constructor(err: Any, status: Int = 500, headers: Map<String, String> = emptyMap())","description":"elide.ssr.StreamResponse.Error.Error","location":"packages/ssr/elide.ssr/-stream-response/-error/-error.html","searchKeys":["Error","constructor(err: Any, status: Int = 500, headers: Map<String, String> = emptyMap())","elide.ssr.StreamResponse.Error.Error"]},{"name":"constructor(ids: Array<String>, key: String, css: String)","description":"elide.ssr.CssChunk.CssChunk","location":"packages/ssr/elide.ssr/-css-chunk/-css-chunk.html","searchKeys":["CssChunk","constructor(ids: Array<String>, key: String, css: String)","elide.ssr.CssChunk.CssChunk"]},{"name":"constructor(request: HttpRequest<*>, principal: Principal?, path: String = request.path)","description":"elide.ssr.type.RequestState.RequestState","location":"packages/ssr/elide.ssr.type/-request-state/-request-state.html","searchKeys":["RequestState","constructor(request: HttpRequest<*>, principal: Principal?, path: String = request.path)","elide.ssr.type.RequestState.RequestState"]},{"name":"constructor(status: Int, html: String, headers: Map<String, String>, criticalCss: String, styleChunks: Array<CssChunk>)","description":"elide.ssr.RenderedStream.RenderedStream","location":"packages/ssr/elide.ssr/-rendered-stream/-rendered-stream.html","searchKeys":["RenderedStream","constructor(status: Int, html: String, headers: Map<String, String>, criticalCss: String, styleChunks: Array<CssChunk>)","elide.ssr.RenderedStream.RenderedStream"]},{"name":"constructor(stream: RenderedStream)","description":"elide.ssr.StreamResponse.Success.Success","location":"packages/ssr/elide.ssr/-stream-response/-success/-success.html","searchKeys":["Success","constructor(stream: RenderedStream)","elide.ssr.StreamResponse.Success.Success"]},{"name":"data class CssChunk constructor(val ids: Array<String>, val key: String, val css: String)","description":"elide.ssr.CssChunk","location":"packages/ssr/elide.ssr/-css-chunk/index.html","searchKeys":["CssChunk","data class CssChunk constructor(val ids: Array<String>, val key: String, val css: String)","elide.ssr.CssChunk"]},{"name":"data class RenderedStream constructor(val status: Int, val html: String, val headers: Map<String, String>, val criticalCss: String, val styleChunks: Array<CssChunk>)","description":"elide.ssr.RenderedStream","location":"packages/ssr/elide.ssr/-rendered-stream/index.html","searchKeys":["RenderedStream","data class RenderedStream constructor(val status: Int, val html: String, val headers: Map<String, String>, val criticalCss: String, val styleChunks: Array<CssChunk>)","elide.ssr.RenderedStream"]},{"name":"data class RequestState(val request: HttpRequest<*>, val principal: Principal?, val path: String = request.path)","description":"elide.ssr.type.RequestState","location":"packages/ssr/elide.ssr.type/-request-state/index.html","searchKeys":["RequestState","data class RequestState(val request: HttpRequest<*>, val principal: Principal?, val path: String = request.path)","elide.ssr.type.RequestState"]},{"name":"expect annotation class Polyglot","description":"elide.vm.annotations.Polyglot","location":"packages/ssr/elide.vm.annotations/-polyglot/index.html","searchKeys":["Polyglot","expect annotation class Polyglot","elide.vm.annotations.Polyglot"]},{"name":"expect annotation class Props","description":"elide.ssr.annotations.Props","location":"packages/ssr/elide.ssr.annotations/-props/index.html","searchKeys":["Props","expect annotation class Props","elide.ssr.annotations.Props"]},{"name":"fun error(thr: Throwable): StreamResponse","description":"elide.ssr.StreamResponse.Companion.error","location":"packages/ssr/elide.ssr/-stream-response/-companion/error.html","searchKeys":["error","fun error(thr: Throwable): StreamResponse","elide.ssr.StreamResponse.Companion.error"]},{"name":"fun success(content: String, headers: Map<String, String> = emptyMap(), status: Int = 200, criticalCss: String = \"\", styleChunks: Array<CssChunk> = emptyArray()): StreamResponse","description":"elide.ssr.StreamResponse.Companion.success","location":"packages/ssr/elide.ssr/-stream-response/-companion/success.html","searchKeys":["success","fun success(content: String, headers: Map<String, String> = emptyMap(), status: Int = 200, criticalCss: String = \"\", styleChunks: Array<CssChunk> = emptyArray()): StreamResponse","elide.ssr.StreamResponse.Companion.success"]},{"name":"interface ResponseRenderer<R>","description":"elide.ssr.ResponseRenderer","location":"packages/ssr/elide.ssr/-response-renderer/index.html","searchKeys":["ResponseRenderer","interface ResponseRenderer<R>","elide.ssr.ResponseRenderer"]},{"name":"interface ServerRenderer : ResponseRenderer<ByteArrayOutputStream> ","description":"elide.ssr.ServerRenderer","location":"packages/ssr/elide.ssr/-server-renderer/index.html","searchKeys":["ServerRenderer","interface ServerRenderer : ResponseRenderer<ByteArrayOutputStream> ","elide.ssr.ServerRenderer"]},{"name":"interface ServerResponse","description":"elide.ssr.ServerResponse","location":"packages/ssr/elide.ssr/-server-response/index.html","searchKeys":["ServerResponse","interface ServerResponse","elide.ssr.ServerResponse"]},{"name":"object Companion","description":"elide.ssr.StreamResponse.Companion","location":"packages/ssr/elide.ssr/-stream-response/-companion/index.html","searchKeys":["Companion","object Companion","elide.ssr.StreamResponse.Companion"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"elide.ssr.CssChunk.equals","location":"packages/ssr/elide.ssr/-css-chunk/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","elide.ssr.CssChunk.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"elide.ssr.RenderedStream.equals","location":"packages/ssr/elide.ssr/-rendered-stream/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","elide.ssr.RenderedStream.equals"]},{"name":"open override fun hashCode(): Int","description":"elide.ssr.CssChunk.hashCode","location":"packages/ssr/elide.ssr/-css-chunk/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","elide.ssr.CssChunk.hashCode"]},{"name":"open override fun hashCode(): Int","description":"elide.ssr.RenderedStream.hashCode","location":"packages/ssr/elide.ssr/-rendered-stream/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","elide.ssr.RenderedStream.hashCode"]},{"name":"open override fun toString(): String","description":"elide.ssr.CssChunk.toString","location":"packages/ssr/elide.ssr/-css-chunk/to-string.html","searchKeys":["toString","open override fun toString(): String","elide.ssr.CssChunk.toString"]},{"name":"open override val content: String","description":"elide.ssr.StreamResponse.content","location":"packages/ssr/elide.ssr/-stream-response/content.html","searchKeys":["content","open override val content: String","elide.ssr.StreamResponse.content"]},{"name":"open override val fin: Boolean = true","description":"elide.ssr.StreamResponse.fin","location":"packages/ssr/elide.ssr/-stream-response/fin.html","searchKeys":["fin","open override val fin: Boolean = true","elide.ssr.StreamResponse.fin"]},{"name":"open override val hasContent: Boolean = false","description":"elide.ssr.StreamResponse.hasContent","location":"packages/ssr/elide.ssr/-stream-response/has-content.html","searchKeys":["hasContent","open override val hasContent: Boolean = false","elide.ssr.StreamResponse.hasContent"]},{"name":"open override val headers: Map<String, String>","description":"elide.ssr.StreamResponse.headers","location":"packages/ssr/elide.ssr/-stream-response/headers.html","searchKeys":["headers","open override val headers: Map<String, String>","elide.ssr.StreamResponse.headers"]},{"name":"open override val status: Int = 200","description":"elide.ssr.StreamResponse.status","location":"packages/ssr/elide.ssr/-stream-response/status.html","searchKeys":["status","open override val status: Int = 200","elide.ssr.StreamResponse.status"]},{"name":"open val content: String","description":"elide.ssr.ServerResponse.content","location":"packages/ssr/elide.ssr/-server-response/content.html","searchKeys":["content","open val content: String","elide.ssr.ServerResponse.content"]},{"name":"open val css: String","description":"elide.ssr.ServerResponse.css","location":"packages/ssr/elide.ssr/-server-response/css.html","searchKeys":["css","open val css: String","elide.ssr.ServerResponse.css"]},{"name":"open val fin: Boolean","description":"elide.ssr.ServerResponse.fin","location":"packages/ssr/elide.ssr/-server-response/fin.html","searchKeys":["fin","open val fin: Boolean","elide.ssr.ServerResponse.fin"]},{"name":"open val hasContent: Boolean","description":"elide.ssr.ServerResponse.hasContent","location":"packages/ssr/elide.ssr/-server-response/has-content.html","searchKeys":["hasContent","open val hasContent: Boolean","elide.ssr.ServerResponse.hasContent"]},{"name":"open val headers: Map<String, String>?","description":"elide.ssr.ServerResponse.headers","location":"packages/ssr/elide.ssr/-server-response/headers.html","searchKeys":["headers","open val headers: Map<String, String>?","elide.ssr.ServerResponse.headers"]},{"name":"open val status: Int?","description":"elide.ssr.ServerResponse.status","location":"packages/ssr/elide.ssr/-server-response/status.html","searchKeys":["status","open val status: Int?","elide.ssr.ServerResponse.status"]},{"name":"sealed class StreamResponse : ServerResponse","description":"elide.ssr.StreamResponse","location":"packages/ssr/elide.ssr/-stream-response/index.html","searchKeys":["StreamResponse","sealed class StreamResponse : ServerResponse","elide.ssr.StreamResponse"]},{"name":"val criticalCss: String","description":"elide.ssr.RenderedStream.criticalCss","location":"packages/ssr/elide.ssr/-rendered-stream/critical-css.html","searchKeys":["criticalCss","val criticalCss: String","elide.ssr.RenderedStream.criticalCss"]},{"name":"val css: String","description":"elide.ssr.CssChunk.css","location":"packages/ssr/elide.ssr/-css-chunk/css.html","searchKeys":["css","val css: String","elide.ssr.CssChunk.css"]},{"name":"val err: Any","description":"elide.ssr.StreamResponse.Error.err","location":"packages/ssr/elide.ssr/-stream-response/-error/err.html","searchKeys":["err","val err: Any","elide.ssr.StreamResponse.Error.err"]},{"name":"val headers: Map<String, String>","description":"elide.ssr.RenderedStream.headers","location":"packages/ssr/elide.ssr/-rendered-stream/headers.html","searchKeys":["headers","val headers: Map<String, String>","elide.ssr.RenderedStream.headers"]},{"name":"val html: String","description":"elide.ssr.RenderedStream.html","location":"packages/ssr/elide.ssr/-rendered-stream/html.html","searchKeys":["html","val html: String","elide.ssr.RenderedStream.html"]},{"name":"val ids: Array<String>","description":"elide.ssr.CssChunk.ids","location":"packages/ssr/elide.ssr/-css-chunk/ids.html","searchKeys":["ids","val ids: Array<String>","elide.ssr.CssChunk.ids"]},{"name":"val key: String","description":"elide.ssr.CssChunk.key","location":"packages/ssr/elide.ssr/-css-chunk/key.html","searchKeys":["key","val key: String","elide.ssr.CssChunk.key"]},{"name":"val path: String","description":"elide.ssr.type.RequestState.path","location":"packages/ssr/elide.ssr.type/-request-state/path.html","searchKeys":["path","val path: String","elide.ssr.type.RequestState.path"]},{"name":"val principal: Principal?","description":"elide.ssr.type.RequestState.principal","location":"packages/ssr/elide.ssr.type/-request-state/principal.html","searchKeys":["principal","val principal: Principal?","elide.ssr.type.RequestState.principal"]},{"name":"val request: HttpRequest<*>","description":"elide.ssr.type.RequestState.request","location":"packages/ssr/elide.ssr.type/-request-state/request.html","searchKeys":["request","val request: HttpRequest<*>","elide.ssr.type.RequestState.request"]},{"name":"val status: Int","description":"elide.ssr.RenderedStream.status","location":"packages/ssr/elide.ssr/-rendered-stream/status.html","searchKeys":["status","val status: Int","elide.ssr.RenderedStream.status"]},{"name":"val stream: RenderedStream","description":"elide.ssr.StreamResponse.Success.stream","location":"packages/ssr/elide.ssr/-stream-response/-success/stream.html","searchKeys":["stream","val stream: RenderedStream","elide.ssr.StreamResponse.Success.stream"]},{"name":"val styleChunks: Array<CssChunk>","description":"elide.ssr.RenderedStream.styleChunks","location":"packages/ssr/elide.ssr/-rendered-stream/style-chunks.html","searchKeys":["styleChunks","val styleChunks: Array<CssChunk>","elide.ssr.RenderedStream.styleChunks"]},{"name":"GENERIC","description":"elide.server.assets.AssetType.GENERIC","location":"packages/server/elide.server.assets/-asset-type/-g-e-n-e-r-i-c/index.html","searchKeys":["GENERIC","GENERIC","elide.server.assets.AssetType.GENERIC"]},{"name":"SCRIPT","description":"elide.server.assets.AssetType.SCRIPT","location":"packages/server/elide.server.assets/-asset-type/-s-c-r-i-p-t/index.html","searchKeys":["SCRIPT","SCRIPT","elide.server.assets.AssetType.SCRIPT"]},{"name":"STYLESHEET","description":"elide.server.assets.AssetType.STYLESHEET","location":"packages/server/elide.server.assets/-asset-type/-s-t-y-l-e-s-h-e-e-t/index.html","searchKeys":["STYLESHEET","STYLESHEET","elide.server.assets.AssetType.STYLESHEET"]},{"name":"TEXT","description":"elide.server.assets.AssetType.TEXT","location":"packages/server/elide.server.assets/-asset-type/-t-e-x-t/index.html","searchKeys":["TEXT","TEXT","elide.server.assets.AssetType.TEXT"]},{"name":"abstract class BaseController : ElideController","description":"elide.server.controller.BaseController","location":"packages/server/elide.server.controller/-base-controller/index.html","searchKeys":["BaseController","abstract class BaseController : ElideController","elide.server.controller.BaseController"]},{"name":"abstract class BaseResponseHandler<ResponseBody> : ResponseHandler<ResponseBody> ","description":"elide.server.BaseResponseHandler","location":"packages/server/elide.server/-base-response-handler/index.html","searchKeys":["BaseResponseHandler","abstract class BaseResponseHandler<ResponseBody> : ResponseHandler<ResponseBody> ","elide.server.BaseResponseHandler"]},{"name":"abstract class BuiltinController : PageController, StatusEnabledController","description":"elide.server.controller.builtin.BuiltinController","location":"packages/server/elide.server.controller.builtin/-builtin-controller/index.html","searchKeys":["BuiltinController","abstract class BuiltinController : PageController, StatusEnabledController","elide.server.controller.builtin.BuiltinController"]},{"name":"abstract class PageController : BaseController","description":"elide.server.controller.PageController","location":"packages/server/elide.server.controller/-page-controller/index.html","searchKeys":["PageController","abstract class PageController : BaseController","elide.server.controller.PageController"]},{"name":"abstract class PageWithProps<State : Any> : PageController","description":"elide.server.controller.PageWithProps","location":"packages/server/elide.server.controller/-page-with-props/index.html","searchKeys":["PageWithProps","abstract class PageWithProps<State : Any> : PageController","elide.server.controller.PageWithProps"]},{"name":"abstract fun assets(): AssetManager","description":"elide.server.controller.ElideController.assets","location":"packages/server/elide.server.controller/-elide-controller/assets.html","searchKeys":["assets","abstract fun assets(): AssetManager","elide.server.controller.ElideController.assets"]},{"name":"abstract fun context(): ApplicationContext","description":"elide.server.controller.ElideController.context","location":"packages/server/elide.server.controller/-elide-controller/context.html","searchKeys":["context","abstract fun context(): ApplicationContext","elide.server.controller.ElideController.context"]},{"name":"abstract fun findByModuleId(moduleId: AssetModuleId): ServerAsset?","description":"elide.server.assets.AssetResolver.findByModuleId","location":"packages/server/elide.server.assets/-asset-resolver/find-by-module-id.html","searchKeys":["findByModuleId","abstract fun findByModuleId(moduleId: AssetModuleId): ServerAsset?","elide.server.assets.AssetResolver.findByModuleId"]},{"name":"abstract fun findLoadManifest(candidates: List<Pair<ManifestFormat, String>>): AssetBundle?","description":"elide.server.assets.AssetManifestLoader.findLoadManifest","location":"packages/server/elide.server.assets/-asset-manifest-loader/find-load-manifest.html","searchKeys":["findLoadManifest","abstract fun findLoadManifest(candidates: List<Pair<ManifestFormat, String>>): AssetBundle?","elide.server.assets.AssetManifestLoader.findLoadManifest"]},{"name":"abstract fun findManifest(candidates: List<Pair<ManifestFormat, String>>): Pair<ManifestFormat, InputStream>?","description":"elide.server.assets.AssetManifestLoader.findManifest","location":"packages/server/elide.server.assets/-asset-manifest-loader/find-manifest.html","searchKeys":["findManifest","abstract fun findManifest(candidates: List<Pair<ManifestFormat, String>>): Pair<ManifestFormat, InputStream>?","elide.server.assets.AssetManifestLoader.findManifest"]},{"name":"abstract fun linkForAsset(module: AssetModuleId, overrideType: AssetType? = null): String","description":"elide.server.assets.AssetManager.linkForAsset","location":"packages/server/elide.server.assets/-asset-manager/link-for-asset.html","searchKeys":["linkForAsset","abstract fun linkForAsset(module: AssetModuleId, overrideType: AssetType? = null): String","elide.server.assets.AssetManager.linkForAsset"]},{"name":"abstract fun pointerTo(moduleId: AssetModuleId): AssetPointer?","description":"elide.server.assets.AssetReader.pointerTo","location":"packages/server/elide.server.assets/-asset-reader/pointer-to.html","searchKeys":["pointerTo","abstract fun pointerTo(moduleId: AssetModuleId): AssetPointer?","elide.server.assets.AssetReader.pointerTo"]},{"name":"abstract fun resolve(path: String): ServerAsset?","description":"elide.server.assets.AssetResolver.resolve","location":"packages/server/elide.server.assets/-asset-resolver/resolve.html","searchKeys":["resolve","abstract fun resolve(path: String): ServerAsset?","elide.server.assets.AssetResolver.resolve"]},{"name":"abstract fun service(): ListeningExecutorService","description":"elide.server.runtime.AppExecutor.service","location":"packages/server/elide.server.runtime/-app-executor/service.html","searchKeys":["service","abstract fun service(): ListeningExecutorService","elide.server.runtime.AppExecutor.service"]},{"name":"abstract suspend fun handle(request: HttpRequest<out Any>): RawResponse","description":"elide.server.controller.builtin.BuiltinController.handle","location":"packages/server/elide.server.controller.builtin/-builtin-controller/handle.html","searchKeys":["handle","abstract suspend fun handle(request: HttpRequest<out Any>): RawResponse","elide.server.controller.builtin.BuiltinController.handle"]},{"name":"abstract suspend fun readAsync(descriptor: ServerAsset, request: HttpRequest<*>): Deferred<RenderedAsset>","description":"elide.server.assets.AssetReader.readAsync","location":"packages/server/elide.server.assets/-asset-reader/read-async.html","searchKeys":["readAsync","abstract suspend fun readAsync(descriptor: ServerAsset, request: HttpRequest<*>): Deferred<RenderedAsset>","elide.server.assets.AssetReader.readAsync"]},{"name":"abstract suspend fun render(): Publisher<R>","description":"elide.server.StreamingSuspensionRenderer.render","location":"packages/server/elide.server/-streaming-suspension-renderer/render.html","searchKeys":["render","abstract suspend fun render(): Publisher<R>","elide.server.StreamingSuspensionRenderer.render"]},{"name":"abstract suspend fun render(): R","description":"elide.server.SuspensionRenderer.render","location":"packages/server/elide.server/-suspension-renderer/render.html","searchKeys":["render","abstract suspend fun render(): R","elide.server.SuspensionRenderer.render"]},{"name":"abstract suspend fun renderAssetAsync(request: HttpRequest<*>, asset: ServerAsset): Deferred<StreamedAssetResponse>","description":"elide.server.assets.AssetManager.renderAssetAsync","location":"packages/server/elide.server.assets/-asset-manager/render-asset-async.html","searchKeys":["renderAssetAsync","abstract suspend fun renderAssetAsync(request: HttpRequest<*>, asset: ServerAsset): Deferred<StreamedAssetResponse>","elide.server.assets.AssetManager.renderAssetAsync"]},{"name":"abstract suspend fun respond(response: MutableHttpResponse<ResponseBody>): MutableHttpResponse<ResponseBody>","description":"elide.server.ResponseHandler.respond","location":"packages/server/elide.server/-response-handler/respond.html","searchKeys":["respond","abstract suspend fun respond(response: MutableHttpResponse<ResponseBody>): MutableHttpResponse<ResponseBody>","elide.server.ResponseHandler.respond"]},{"name":"abstract val logging: Logger","description":"elide.server.assets.AssetManager.logging","location":"packages/server/elide.server.assets/-asset-manager/logging.html","searchKeys":["logging","abstract val logging: Logger","elide.server.assets.AssetManager.logging"]},{"name":"abstract val reader: AssetReader","description":"elide.server.assets.AssetManager.reader","location":"packages/server/elide.server.assets/-asset-manager/reader.html","searchKeys":["reader","abstract val reader: AssetReader","elide.server.assets.AssetManager.reader"]},{"name":"annotation class Page(val route: String = UriMapping.DEFAULT_URI, val name: String = \"\", val produces: Array<String> = [MediaType.TEXT_HTML], val consumes: Array<String> = [], val precompile: Boolean = true)","description":"elide.server.annotations.Page","location":"packages/server/elide.server.annotations/-page/index.html","searchKeys":["Page","annotation class Page(val route: String = UriMapping.DEFAULT_URI, val name: String = \"\", val produces: Array<String> = [MediaType.TEXT_HTML], val consumes: Array<String> = [], val precompile: Boolean = true)","elide.server.annotations.Page"]},{"name":"class AppStartupListener : ApplicationEventListener<ServerStartupEvent> ","description":"elide.server.Application.AppStartupListener","location":"packages/server/elide.server/-application/-app-startup-listener/index.html","searchKeys":["AppStartupListener","class AppStartupListener : ApplicationEventListener<ServerStartupEvent> ","elide.server.Application.AppStartupListener"]},{"name":"class AssetController constructor(assetManager: AssetManager) : StatusEnabledController","description":"elide.server.assets.AssetController","location":"packages/server/elide.server.assets/-asset-controller/index.html","searchKeys":["AssetController","class AssetController constructor(assetManager: AssetManager) : StatusEnabledController","elide.server.assets.AssetController"]},{"name":"class AssetHandler(initialExpectedType: AssetType? = null, handler: ElideController, request: HttpRequest<*>, moduleId: AtomicReference<AssetModuleId?> = AtomicReference(null), expectedType: AtomicReference<AssetType?> = AtomicReference(initialExpectedType)) : BaseResponseHandler<ByteArray> ","description":"elide.server.AssetHandler","location":"packages/server/elide.server/-asset-handler/index.html","searchKeys":["AssetHandler","class AssetHandler(initialExpectedType: AssetType? = null, handler: ElideController, request: HttpRequest<*>, moduleId: AtomicReference<AssetModuleId?> = AtomicReference(null), expectedType: AtomicReference<AssetType?> = AtomicReference(initialExpectedType)) : BaseResponseHandler<ByteArray> ","elide.server.AssetHandler"]},{"name":"class DefaultExecutor constructor(uncaughtHandler: Thread.UncaughtExceptionHandler) : AppExecutor","description":"elide.server.runtime.AppExecutor.DefaultExecutor","location":"packages/server/elide.server.runtime/-app-executor/-default-executor/index.html","searchKeys":["DefaultExecutor","class DefaultExecutor constructor(uncaughtHandler: Thread.UncaughtExceptionHandler) : AppExecutor","elide.server.runtime.AppExecutor.DefaultExecutor"]},{"name":"class HeaderFinalizingFilter : HttpServerFilter","description":"elide.server.http.HeaderFinalizingFilter","location":"packages/server/elide.server.http/-header-finalizing-filter/index.html","searchKeys":["HeaderFinalizingFilter","class HeaderFinalizingFilter : HttpServerFilter","elide.server.http.HeaderFinalizingFilter"]},{"name":"class HtmlRenderer(prettyhtml: Boolean = false, handler: PageController? = null, builder: suspend HTML.() -> Unit) : SuspensionRenderer<ByteArrayOutputStream> ","description":"elide.server.HtmlRenderer","location":"packages/server/elide.server/-html-renderer/index.html","searchKeys":["HtmlRenderer","class HtmlRenderer(prettyhtml: Boolean = false, handler: PageController? = null, builder: suspend HTML.() -> Unit) : SuspensionRenderer<ByteArrayOutputStream> ","elide.server.HtmlRenderer"]},{"name":"class NotFoundController : BuiltinController","description":"elide.server.controller.builtin.NotFoundController","location":"packages/server/elide.server.controller.builtin/-not-found-controller/index.html","searchKeys":["NotFoundController","class NotFoundController : BuiltinController","elide.server.controller.builtin.NotFoundController"]},{"name":"class RenderedAsset(val module: AssetModuleId, val type: AssetType, val variant: CompressionMode, val headers: Map<String, String>, val size: Long, val lastModified: Long, val digest: Pair<HashAlgorithm, ByteString>?, val producer: () -> ByteString)","description":"elide.server.assets.RenderedAsset","location":"packages/server/elide.server.assets/-rendered-asset/index.html","searchKeys":["RenderedAsset","class RenderedAsset(val module: AssetModuleId, val type: AssetType, val variant: CompressionMode, val headers: Map<String, String>, val size: Long, val lastModified: Long, val digest: Pair<HashAlgorithm, ByteString>?, val producer: () -> ByteString)","elide.server.assets.RenderedAsset"]},{"name":"class RequestContextFilter : HttpServerFilter","description":"elide.server.http.RequestContextFilter","location":"packages/server/elide.server.http/-request-context-filter/index.html","searchKeys":["RequestContextFilter","class RequestContextFilter : HttpServerFilter","elide.server.http.RequestContextFilter"]},{"name":"class Script(descriptor: AssetBundle.ScriptBundle, index: SortedSet<Int>?) : ServerAsset","description":"elide.server.assets.ServerAsset.Script","location":"packages/server/elide.server.assets/-server-asset/-script/index.html","searchKeys":["Script","class Script(descriptor: AssetBundle.ScriptBundle, index: SortedSet<Int>?) : ServerAsset","elide.server.assets.ServerAsset.Script"]},{"name":"class ServerAssetManager : AssetManager","description":"elide.server.assets.ServerAssetManager","location":"packages/server/elide.server.assets/-server-asset-manager/index.html","searchKeys":["ServerAssetManager","class ServerAssetManager : AssetManager","elide.server.assets.ServerAssetManager"]},{"name":"class ServerAssetReader : AssetReader","description":"elide.server.assets.ServerAssetReader","location":"packages/server/elide.server.assets/-server-asset-reader/index.html","searchKeys":["ServerAssetReader","class ServerAssetReader : AssetReader","elide.server.assets.ServerAssetReader"]},{"name":"class ServerConfigurator : ApplicationContextConfigurer","description":"elide.server.cfg.ServerConfigurator","location":"packages/server/elide.server.cfg/-server-configurator/index.html","searchKeys":["ServerConfigurator","class ServerConfigurator : ApplicationContextConfigurer","elide.server.cfg.ServerConfigurator"]},{"name":"class ServerErrorController : BuiltinController","description":"elide.server.controller.builtin.ServerErrorController","location":"packages/server/elide.server.controller.builtin/-server-error-controller/index.html","searchKeys":["ServerErrorController","class ServerErrorController : BuiltinController","elide.server.controller.builtin.ServerErrorController"]},{"name":"class ServerRenderAgent(val dom: HTML, controller: PageController, request: HttpRequest<*>)","description":"elide.server.controller.PageController.ServerRenderAgent","location":"packages/server/elide.server.controller/-page-controller/-server-render-agent/index.html","searchKeys":["ServerRenderAgent","class ServerRenderAgent(val dom: HTML, controller: PageController, request: HttpRequest<*>)","elide.server.controller.PageController.ServerRenderAgent"]},{"name":"class ServerSSRRenderer(body: BODY, handler: ElideController, request: HttpRequest<*>, script: ExecutableScript, buffer: StringBuilder = StringBuilder(), job: AtomicReference<Job?> = AtomicReference(null)) : SuspensionRenderer<ByteArrayOutputStream> ","description":"elide.server.ssr.ServerSSRRenderer","location":"packages/server/elide.server.ssr/-server-s-s-r-renderer/index.html","searchKeys":["ServerSSRRenderer","class ServerSSRRenderer(body: BODY, handler: ElideController, request: HttpRequest<*>, script: ExecutableScript, buffer: StringBuilder = StringBuilder(), job: AtomicReference<Job?> = AtomicReference(null)) : SuspensionRenderer<ByteArrayOutputStream> ","elide.server.ssr.ServerSSRRenderer"]},{"name":"class Stylesheet(descriptor: AssetBundle.StyleBundle, index: SortedSet<Int>?) : ServerAsset","description":"elide.server.assets.ServerAsset.Stylesheet","location":"packages/server/elide.server.assets/-server-asset/-stylesheet/index.html","searchKeys":["Stylesheet","class Stylesheet(descriptor: AssetBundle.StyleBundle, index: SortedSet<Int>?) : ServerAsset","elide.server.assets.ServerAsset.Stylesheet"]},{"name":"class Text(descriptor: AssetBundle.GenericBundle, index: SortedSet<Int>?) : ServerAsset","description":"elide.server.assets.ServerAsset.Text","location":"packages/server/elide.server.assets/-server-asset/-text/index.html","searchKeys":["Text","class Text(descriptor: AssetBundle.GenericBundle, index: SortedSet<Int>?) : ServerAsset","elide.server.assets.ServerAsset.Text"]},{"name":"const val DEFAULT_ASSET_PREFIX: String","description":"elide.server.cfg.AssetConfig.Companion.DEFAULT_ASSET_PREFIX","location":"packages/server/elide.server.cfg/-asset-config/-companion/-d-e-f-a-u-l-t_-a-s-s-e-t_-p-r-e-f-i-x.html","searchKeys":["DEFAULT_ASSET_PREFIX","const val DEFAULT_ASSET_PREFIX: String","elide.server.cfg.AssetConfig.Companion.DEFAULT_ASSET_PREFIX"]},{"name":"const val DEFAULT_ENABLE_ETAGS: Boolean = true","description":"elide.server.cfg.AssetConfig.Companion.DEFAULT_ENABLE_ETAGS","location":"packages/server/elide.server.cfg/-asset-config/-companion/-d-e-f-a-u-l-t_-e-n-a-b-l-e_-e-t-a-g-s.html","searchKeys":["DEFAULT_ENABLE_ETAGS","const val DEFAULT_ENABLE_ETAGS: Boolean = true","elide.server.cfg.AssetConfig.Companion.DEFAULT_ENABLE_ETAGS"]},{"name":"const val DEFAULT_PREFER_WEAK_ETAGS: Boolean = false","description":"elide.server.cfg.AssetConfig.Companion.DEFAULT_PREFER_WEAK_ETAGS","location":"packages/server/elide.server.cfg/-asset-config/-companion/-d-e-f-a-u-l-t_-p-r-e-f-e-r_-w-e-a-k_-e-t-a-g-s.html","searchKeys":["DEFAULT_PREFER_WEAK_ETAGS","const val DEFAULT_PREFER_WEAK_ETAGS: Boolean = false","elide.server.cfg.AssetConfig.Companion.DEFAULT_PREFER_WEAK_ETAGS"]},{"name":"const val DEFAULT_REWRITING_ENABLED: Boolean = true","description":"elide.server.cfg.AssetConfig.Companion.DEFAULT_REWRITING_ENABLED","location":"packages/server/elide.server.cfg/-asset-config/-companion/-d-e-f-a-u-l-t_-r-e-w-r-i-t-i-n-g_-e-n-a-b-l-e-d.html","searchKeys":["DEFAULT_REWRITING_ENABLED","const val DEFAULT_REWRITING_ENABLED: Boolean = true","elide.server.cfg.AssetConfig.Companion.DEFAULT_REWRITING_ENABLED"]},{"name":"const val DEFAULT_SSR_DOM_ID: String","description":"elide.server.DEFAULT_SSR_DOM_ID","location":"packages/server/elide.server/-d-e-f-a-u-l-t_-s-s-r_-d-o-m_-i-d.html","searchKeys":["DEFAULT_SSR_DOM_ID","const val DEFAULT_SSR_DOM_ID: String","elide.server.DEFAULT_SSR_DOM_ID"]},{"name":"const val EMBEDDED_ROOT: String","description":"elide.server.EMBEDDED_ROOT","location":"packages/server/elide.server/-e-m-b-e-d-d-e-d_-r-o-o-t.html","searchKeys":["EMBEDDED_ROOT","const val EMBEDDED_ROOT: String","elide.server.EMBEDDED_ROOT"]},{"name":"const val priority: Int","description":"elide.server.runtime.AppExecutor.DefaultSettings.priority","location":"packages/server/elide.server.runtime/-app-executor/-default-settings/priority.html","searchKeys":["priority","const val priority: Int","elide.server.runtime.AppExecutor.DefaultSettings.priority"]},{"name":"const val ssrId: String","description":"elide.server.ssr.ServerSSRRenderer.Companion.ssrId","location":"packages/server/elide.server.ssr/-server-s-s-r-renderer/-companion/ssr-id.html","searchKeys":["ssrId","const val ssrId: String","elide.server.ssr.ServerSSRRenderer.Companion.ssrId"]},{"name":"const val waitTimeout: Long = 10","description":"elide.server.assets.ServerAssetManager.Companion.waitTimeout","location":"packages/server/elide.server.assets/-server-asset-manager/-companion/wait-timeout.html","searchKeys":["waitTimeout","const val waitTimeout: Long = 10","elide.server.assets.ServerAssetManager.Companion.waitTimeout"]},{"name":"constructor()","description":"elide.server.Application.AppStartupListener.AppStartupListener","location":"packages/server/elide.server/-application/-app-startup-listener/-app-startup-listener.html","searchKeys":["AppStartupListener","constructor()","elide.server.Application.AppStartupListener.AppStartupListener"]},{"name":"constructor()","description":"elide.server.BaseResponseHandler.BaseResponseHandler","location":"packages/server/elide.server/-base-response-handler/-base-response-handler.html","searchKeys":["BaseResponseHandler","constructor()","elide.server.BaseResponseHandler.BaseResponseHandler"]},{"name":"constructor()","description":"elide.server.cfg.ServerConfigurator.ServerConfigurator","location":"packages/server/elide.server.cfg/-server-configurator/-server-configurator.html","searchKeys":["ServerConfigurator","constructor()","elide.server.cfg.ServerConfigurator.ServerConfigurator"]},{"name":"constructor()","description":"elide.server.controller.BaseController.BaseController","location":"packages/server/elide.server.controller/-base-controller/-base-controller.html","searchKeys":["BaseController","constructor()","elide.server.controller.BaseController.BaseController"]},{"name":"constructor()","description":"elide.server.controller.PageController.PageController","location":"packages/server/elide.server.controller/-page-controller/-page-controller.html","searchKeys":["PageController","constructor()","elide.server.controller.PageController.PageController"]},{"name":"constructor()","description":"elide.server.controller.builtin.BuiltinController.BuiltinController","location":"packages/server/elide.server.controller.builtin/-builtin-controller/-builtin-controller.html","searchKeys":["BuiltinController","constructor()","elide.server.controller.builtin.BuiltinController.BuiltinController"]},{"name":"constructor()","description":"elide.server.controller.builtin.NotFoundController.NotFoundController","location":"packages/server/elide.server.controller.builtin/-not-found-controller/-not-found-controller.html","searchKeys":["NotFoundController","constructor()","elide.server.controller.builtin.NotFoundController.NotFoundController"]},{"name":"constructor()","description":"elide.server.controller.builtin.ServerErrorController.ServerErrorController","location":"packages/server/elide.server.controller.builtin/-server-error-controller/-server-error-controller.html","searchKeys":["ServerErrorController","constructor()","elide.server.controller.builtin.ServerErrorController.ServerErrorController"]},{"name":"constructor()","description":"elide.server.http.HeaderFinalizingFilter.HeaderFinalizingFilter","location":"packages/server/elide.server.http/-header-finalizing-filter/-header-finalizing-filter.html","searchKeys":["HeaderFinalizingFilter","constructor()","elide.server.http.HeaderFinalizingFilter.HeaderFinalizingFilter"]},{"name":"constructor()","description":"elide.server.http.RequestContextFilter.RequestContextFilter","location":"packages/server/elide.server.http/-request-context-filter/-request-context-filter.html","searchKeys":["RequestContextFilter","constructor()","elide.server.http.RequestContextFilter.RequestContextFilter"]},{"name":"constructor()","description":"elide.server.runtime.jvm.UncaughtExceptionHandler.UncaughtExceptionHandler","location":"packages/server/elide.server.runtime.jvm/-uncaught-exception-handler/-uncaught-exception-handler.html","searchKeys":["UncaughtExceptionHandler","constructor()","elide.server.runtime.jvm.UncaughtExceptionHandler.UncaughtExceptionHandler"]},{"name":"constructor(assetManager: AssetManager)","description":"elide.server.assets.AssetController.AssetController","location":"packages/server/elide.server.assets/-asset-controller/-asset-controller.html","searchKeys":["AssetController","constructor(assetManager: AssetManager)","elide.server.assets.AssetController.AssetController"]},{"name":"constructor(assets: AssetConfig = object : AssetConfig {})","description":"elide.server.cfg.ServerConfig.ServerConfig","location":"packages/server/elide.server.cfg/-server-config/-server-config.html","searchKeys":["ServerConfig","constructor(assets: AssetConfig = object : AssetConfig {})","elide.server.cfg.ServerConfig.ServerConfig"]},{"name":"constructor(body: BODY, handler: ElideController, request: HttpRequest<*>, script: ExecutableScript, buffer: StringBuilder = StringBuilder(), job: AtomicReference<Job?> = AtomicReference(null))","description":"elide.server.ssr.ServerSSRRenderer.ServerSSRRenderer","location":"packages/server/elide.server.ssr/-server-s-s-r-renderer/-server-s-s-r-renderer.html","searchKeys":["ServerSSRRenderer","constructor(body: BODY, handler: ElideController, request: HttpRequest<*>, script: ExecutableScript, buffer: StringBuilder = StringBuilder(), job: AtomicReference<Job?> = AtomicReference(null))","elide.server.ssr.ServerSSRRenderer.ServerSSRRenderer"]},{"name":"constructor(descriptor: AssetBundle.GenericBundle, index: SortedSet<Int>?)","description":"elide.server.assets.ServerAsset.Text.Text","location":"packages/server/elide.server.assets/-server-asset/-text/-text.html","searchKeys":["Text","constructor(descriptor: AssetBundle.GenericBundle, index: SortedSet<Int>?)","elide.server.assets.ServerAsset.Text.Text"]},{"name":"constructor(descriptor: AssetBundle.ScriptBundle, index: SortedSet<Int>?)","description":"elide.server.assets.ServerAsset.Script.Script","location":"packages/server/elide.server.assets/-server-asset/-script/-script.html","searchKeys":["Script","constructor(descriptor: AssetBundle.ScriptBundle, index: SortedSet<Int>?)","elide.server.assets.ServerAsset.Script.Script"]},{"name":"constructor(descriptor: AssetBundle.StyleBundle, index: SortedSet<Int>?)","description":"elide.server.assets.ServerAsset.Stylesheet.Stylesheet","location":"packages/server/elide.server.assets/-server-asset/-stylesheet/-stylesheet.html","searchKeys":["Stylesheet","constructor(descriptor: AssetBundle.StyleBundle, index: SortedSet<Int>?)","elide.server.assets.ServerAsset.Stylesheet.Stylesheet"]},{"name":"constructor(dom: HTML, controller: PageController, request: HttpRequest<*>)","description":"elide.server.controller.PageController.ServerRenderAgent.ServerRenderAgent","location":"packages/server/elide.server.controller/-page-controller/-server-render-agent/-server-render-agent.html","searchKeys":["ServerRenderAgent","constructor(dom: HTML, controller: PageController, request: HttpRequest<*>)","elide.server.controller.PageController.ServerRenderAgent.ServerRenderAgent"]},{"name":"constructor(initialExpectedType: AssetType? = null, handler: ElideController, request: HttpRequest<*>, moduleId: AtomicReference<AssetModuleId?> = AtomicReference(null), expectedType: AtomicReference<AssetType?> = AtomicReference(initialExpectedType))","description":"elide.server.AssetHandler.AssetHandler","location":"packages/server/elide.server/-asset-handler/-asset-handler.html","searchKeys":["AssetHandler","constructor(initialExpectedType: AssetType? = null, handler: ElideController, request: HttpRequest<*>, moduleId: AtomicReference<AssetModuleId?> = AtomicReference(null), expectedType: AtomicReference<AssetType?> = AtomicReference(initialExpectedType))","elide.server.AssetHandler.AssetHandler"]},{"name":"constructor(module: AssetModuleId, assetType: AssetType, href: String, type: String? = null, inline: Boolean = false, preload: Boolean = false)","description":"elide.server.assets.AssetReference.AssetReference","location":"packages/server/elide.server.assets/-asset-reference/-asset-reference.html","searchKeys":["AssetReference","constructor(module: AssetModuleId, assetType: AssetType, href: String, type: String? = null, inline: Boolean = false, preload: Boolean = false)","elide.server.assets.AssetReference.AssetReference"]},{"name":"constructor(module: AssetModuleId, type: AssetType, variant: CompressionMode, headers: Map<String, String>, size: Long, lastModified: Long, digest: Pair<HashAlgorithm, ByteString>?, producer: () -> ByteString)","description":"elide.server.assets.RenderedAsset.RenderedAsset","location":"packages/server/elide.server.assets/-rendered-asset/-rendered-asset.html","searchKeys":["RenderedAsset","constructor(module: AssetModuleId, type: AssetType, variant: CompressionMode, headers: Map<String, String>, size: Long, lastModified: Long, digest: Pair<HashAlgorithm, ByteString>?, producer: () -> ByteString)","elide.server.assets.RenderedAsset.RenderedAsset"]},{"name":"constructor(moduleId: AssetModuleId, type: AssetType, token: String, tag: String, etag: String, modified: Long, index: SortedSet<Int>?)","description":"elide.server.assets.AssetPointer.AssetPointer","location":"packages/server/elide.server.assets/-asset-pointer/-asset-pointer.html","searchKeys":["AssetPointer","constructor(moduleId: AssetModuleId, type: AssetType, token: String, tag: String, etag: String, modified: Long, index: SortedSet<Int>?)","elide.server.assets.AssetPointer.AssetPointer"]},{"name":"constructor(name: String)","description":"elide.server.http.RequestContext.Key.Key","location":"packages/server/elide.server.http/-request-context/-key/-key.html","searchKeys":["Key","constructor(name: String)","elide.server.http.RequestContext.Key.Key"]},{"name":"constructor(prettyhtml: Boolean = false, handler: PageController? = null, builder: suspend HTML.() -> Unit)","description":"elide.server.HtmlRenderer.HtmlRenderer","location":"packages/server/elide.server/-html-renderer/-html-renderer.html","searchKeys":["HtmlRenderer","constructor(prettyhtml: Boolean = false, handler: PageController? = null, builder: suspend HTML.() -> Unit)","elide.server.HtmlRenderer.HtmlRenderer"]},{"name":"constructor(uncaughtHandler: Thread.UncaughtExceptionHandler)","description":"elide.server.runtime.AppExecutor.DefaultExecutor.DefaultExecutor","location":"packages/server/elide.server.runtime/-app-executor/-default-executor/-default-executor.html","searchKeys":["DefaultExecutor","constructor(uncaughtHandler: Thread.UncaughtExceptionHandler)","elide.server.runtime.AppExecutor.DefaultExecutor.DefaultExecutor"]},{"name":"data class AssetPointer(val moduleId: AssetModuleId, val type: AssetType, val token: String, val tag: String, val etag: String, val modified: Long, val index: SortedSet<Int>?) : Serializable","description":"elide.server.assets.AssetPointer","location":"packages/server/elide.server.assets/-asset-pointer/index.html","searchKeys":["AssetPointer","data class AssetPointer(val moduleId: AssetModuleId, val type: AssetType, val token: String, val tag: String, val etag: String, val modified: Long, val index: SortedSet<Int>?) : Serializable","elide.server.assets.AssetPointer"]},{"name":"data class AssetReference(val module: AssetModuleId, val assetType: AssetType, val href: String, val type: String? = null, val inline: Boolean = false, val preload: Boolean = false) : Serializable","description":"elide.server.assets.AssetReference","location":"packages/server/elide.server.assets/-asset-reference/index.html","searchKeys":["AssetReference","data class AssetReference(val module: AssetModuleId, val assetType: AssetType, val href: String, val type: String? = null, val inline: Boolean = false, val preload: Boolean = false) : Serializable","elide.server.assets.AssetReference"]},{"name":"data class Key(val name: String)","description":"elide.server.http.RequestContext.Key","location":"packages/server/elide.server.http/-request-context/-key/index.html","searchKeys":["Key","data class Key(val name: String)","elide.server.http.RequestContext.Key"]},{"name":"data class ServerConfig(var assets: AssetConfig = object : AssetConfig {})","description":"elide.server.cfg.ServerConfig","location":"packages/server/elide.server.cfg/-server-config/index.html","searchKeys":["ServerConfig","data class ServerConfig(var assets: AssetConfig = object : AssetConfig {})","elide.server.cfg.ServerConfig"]},{"name":"enum AssetType : Enum<AssetType> ","description":"elide.server.assets.AssetType","location":"packages/server/elide.server.assets/-asset-type/index.html","searchKeys":["AssetType","enum AssetType : Enum<AssetType> ","elide.server.assets.AssetType"]},{"name":"fun BODY.script(asset: AssetReference, defer: Boolean = false, async: Boolean = false, type: String = JAVASCRIPT_TYPE, attrs: Map<String, String>? = null)","description":"elide.server.script","location":"packages/server/elide.server/script.html","searchKeys":["script","fun BODY.script(asset: AssetReference, defer: Boolean = false, async: Boolean = false, type: String = JAVASCRIPT_TYPE, attrs: Map<String, String>? = null)","elide.server.script"]},{"name":"fun BODY.script(uri: String, defer: Boolean = false, async: Boolean = false, type: String = JAVASCRIPT_TYPE, attrs: Map<String, String>? = null)","description":"elide.server.script","location":"packages/server/elide.server/script.html","searchKeys":["script","fun BODY.script(uri: String, defer: Boolean = false, async: Boolean = false, type: String = JAVASCRIPT_TYPE, attrs: Map<String, String>? = null)","elide.server.script"]},{"name":"fun HEAD.script(asset: AssetReference, defer: Boolean = false, async: Boolean = false, nomodule: Boolean = false, type: String = JAVASCRIPT_TYPE, attrs: Map<String, String>? = null)","description":"elide.server.script","location":"packages/server/elide.server/script.html","searchKeys":["script","fun HEAD.script(asset: AssetReference, defer: Boolean = false, async: Boolean = false, nomodule: Boolean = false, type: String = JAVASCRIPT_TYPE, attrs: Map<String, String>? = null)","elide.server.script"]},{"name":"fun HEAD.script(uri: String, defer: Boolean = false, async: Boolean = false, type: String = JAVASCRIPT_TYPE, attrs: Map<String, String>? = null)","description":"elide.server.script","location":"packages/server/elide.server/script.html","searchKeys":["script","fun HEAD.script(uri: String, defer: Boolean = false, async: Boolean = false, type: String = JAVASCRIPT_TYPE, attrs: Map<String, String>? = null)","elide.server.script"]},{"name":"fun HEAD.stylesheet(asset: AssetReference, media: String? = null, attrs: SortedMap<String, String>? = null)","description":"elide.server.stylesheet","location":"packages/server/elide.server/stylesheet.html","searchKeys":["stylesheet","fun HEAD.stylesheet(asset: AssetReference, media: String? = null, attrs: SortedMap<String, String>? = null)","elide.server.stylesheet"]},{"name":"fun HEAD.stylesheet(uri: String, media: String? = null, attrs: Map<String, String>? = null)","description":"elide.server.stylesheet","location":"packages/server/elide.server/stylesheet.html","searchKeys":["stylesheet","fun HEAD.stylesheet(uri: String, media: String? = null, attrs: Map<String, String>? = null)","elide.server.stylesheet"]},{"name":"fun acquire(): AppExecutor","description":"elide.server.runtime.AppExecutor.DefaultExecutor.Companion.acquire","location":"packages/server/elide.server.runtime/-app-executor/-default-executor/-companion/acquire.html","searchKeys":["acquire","fun acquire(): AppExecutor","elide.server.runtime.AppExecutor.DefaultExecutor.Companion.acquire"]},{"name":"fun asset(module: AssetModuleId, handler: PageController.AssetReferenceBuilder.() -> Unit? = null): AssetReference","description":"elide.server.controller.PageController.asset","location":"packages/server/elide.server.controller/-page-controller/asset.html","searchKeys":["asset","fun asset(module: AssetModuleId, handler: PageController.AssetReferenceBuilder.() -> Unit? = null): AssetReference","elide.server.controller.PageController.asset"]},{"name":"fun assetType(type: AssetType)","description":"elide.server.AssetHandler.assetType","location":"packages/server/elide.server/-asset-handler/asset-type.html","searchKeys":["assetType","fun assetType(type: AssetType)","elide.server.AssetHandler.assetType"]},{"name":"fun css(block: CssBuilder.() -> Unit): FinalizedAssetResponse","description":"elide.server.css","location":"packages/server/elide.server/css.html","searchKeys":["css","fun css(block: CssBuilder.() -> Unit): FinalizedAssetResponse","elide.server.css"]},{"name":"fun initialize()","description":"elide.server.runtime.jvm.SecurityProviderConfigurator.initialize","location":"packages/server/elide.server.runtime.jvm/-security-provider-configurator/initialize.html","searchKeys":["initialize","fun initialize()","elide.server.runtime.jvm.SecurityProviderConfigurator.initialize"]},{"name":"fun initializeOnWarmup(callable: suspend () -> Unit)","description":"elide.server.Application.Initialization.initializeOnWarmup","location":"packages/server/elide.server/-application/-initialization/initialize-on-warmup.html","searchKeys":["initializeOnWarmup","fun initializeOnWarmup(callable: suspend () -> Unit)","elide.server.Application.Initialization.initializeOnWarmup"]},{"name":"fun initializeWithServer(callable: suspend () -> Unit)","description":"elide.server.Application.Initialization.initializeWithServer","location":"packages/server/elide.server/-application/-initialization/initialize-with-server.html","searchKeys":["initializeWithServer","fun initializeWithServer(callable: suspend () -> Unit)","elide.server.Application.Initialization.initializeWithServer"]},{"name":"fun module(id: AssetModuleId, type: AssetType? = null)","description":"elide.server.AssetHandler.module","location":"packages/server/elide.server/-asset-handler/module.html","searchKeys":["module","fun module(id: AssetModuleId, type: AssetType? = null)","elide.server.AssetHandler.module"]},{"name":"fun overrideExecutor(exec: ListeningScheduledExecutorService)","description":"elide.server.runtime.AppExecutor.DefaultExecutor.overrideExecutor","location":"packages/server/elide.server.runtime/-app-executor/-default-executor/override-executor.html","searchKeys":["overrideExecutor","fun overrideExecutor(exec: ListeningScheduledExecutorService)","elide.server.runtime.AppExecutor.DefaultExecutor.overrideExecutor"]},{"name":"fun ready(): Boolean","description":"elide.server.runtime.jvm.SecurityProviderConfigurator.ready","location":"packages/server/elide.server.runtime.jvm/-security-provider-configurator/ready.html","searchKeys":["ready","fun ready(): Boolean","elide.server.runtime.jvm.SecurityProviderConfigurator.ready"]},{"name":"fun staticFile(file: String, contentType: String): HttpResponse<*>","description":"elide.server.staticFile","location":"packages/server/elide.server/static-file.html","searchKeys":["staticFile","fun staticFile(file: String, contentType: String): HttpResponse<*>","elide.server.staticFile"]},{"name":"fun valueOf(value: String): AssetType","description":"elide.server.assets.AssetType.valueOf","location":"packages/server/elide.server.assets/-asset-type/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): AssetType","elide.server.assets.AssetType.valueOf"]},{"name":"fun values(): Array<AssetType>","description":"elide.server.assets.AssetType.values","location":"packages/server/elide.server.assets/-asset-type/values.html","searchKeys":["values","fun values(): Array<AssetType>","elide.server.assets.AssetType.values"]},{"name":"inline suspend fun <T : Tag, R> T.visitAndFinalizeSuspend(consumer: TagConsumer<R>, crossinline block: suspend T.() -> Unit): R","description":"elide.server.visitAndFinalizeSuspend","location":"packages/server/elide.server/visit-and-finalize-suspend.html","searchKeys":["visitAndFinalizeSuspend","inline suspend fun <T : Tag, R> T.visitAndFinalizeSuspend(consumer: TagConsumer<R>, crossinline block: suspend T.() -> Unit): R","elide.server.visitAndFinalizeSuspend"]},{"name":"inline suspend fun <T : Tag> T.visitSuspend(crossinline block: suspend T.() -> Unit)","description":"kotlinx.html.visitSuspend","location":"packages/server/kotlinx.html/visit-suspend.html","searchKeys":["visitSuspend","inline suspend fun <T : Tag> T.visitSuspend(crossinline block: suspend T.() -> Unit)","kotlinx.html.visitSuspend"]},{"name":"inline suspend fun <T : Tag> T.visitTagSuspend(crossinline block: suspend T.() -> Unit)","description":"kotlinx.html.visitTagSuspend","location":"packages/server/kotlinx.html/visit-tag-suspend.html","searchKeys":["visitTagSuspend","inline suspend fun <T : Tag> T.visitTagSuspend(crossinline block: suspend T.() -> Unit)","kotlinx.html.visitTagSuspend"]},{"name":"inline suspend fun <T, C : TagConsumer<T>> C.htmlSuspend(namespace: String? = null, crossinline block: suspend HTML.() -> Unit): T","description":"elide.server.htmlSuspend","location":"packages/server/elide.server/html-suspend.html","searchKeys":["htmlSuspend","inline suspend fun <T, C : TagConsumer<T>> C.htmlSuspend(namespace: String? = null, crossinline block: suspend HTML.() -> Unit): T","elide.server.htmlSuspend"]},{"name":"inline suspend fun HTML.body(classes: String? = null, crossinline block: suspend BODY.() -> Unit)","description":"kotlinx.html.tagext.body","location":"packages/server/kotlinx.html.tagext/body.html","searchKeys":["body","inline suspend fun HTML.body(classes: String? = null, crossinline block: suspend BODY.() -> Unit)","kotlinx.html.tagext.body"]},{"name":"inline suspend fun HTML.head(crossinline block: suspend HEAD.() -> Unit)","description":"kotlinx.html.tagext.head","location":"packages/server/kotlinx.html.tagext/head.html","searchKeys":["head","inline suspend fun HTML.head(crossinline block: suspend HEAD.() -> Unit)","kotlinx.html.tagext.head"]},{"name":"inline suspend fun body(classes: String? = null, crossinline block: suspend BODY.() -> Unit)","description":"elide.server.controller.PageController.ServerRenderAgent.body","location":"packages/server/elide.server.controller/-page-controller/-server-render-agent/body.html","searchKeys":["body","inline suspend fun body(classes: String? = null, crossinline block: suspend BODY.() -> Unit)","elide.server.controller.PageController.ServerRenderAgent.body"]},{"name":"inline suspend fun head(crossinline block: suspend HEAD.() -> Unit)","description":"elide.server.controller.PageController.ServerRenderAgent.head","location":"packages/server/elide.server.controller/-page-controller/-server-render-agent/head.html","searchKeys":["head","inline suspend fun head(crossinline block: suspend HEAD.() -> Unit)","elide.server.controller.PageController.ServerRenderAgent.head"]},{"name":"inner class AssetReferenceBuilder","description":"elide.server.controller.PageController.AssetReferenceBuilder","location":"packages/server/elide.server.controller/-page-controller/-asset-reference-builder/index.html","searchKeys":["AssetReferenceBuilder","inner class AssetReferenceBuilder","elide.server.controller.PageController.AssetReferenceBuilder"]},{"name":"interface AppExecutor","description":"elide.server.runtime.AppExecutor","location":"packages/server/elide.server.runtime/-app-executor/index.html","searchKeys":["AppExecutor","interface AppExecutor","elide.server.runtime.AppExecutor"]},{"name":"interface Application","description":"elide.server.Application","location":"packages/server/elide.server/-application/index.html","searchKeys":["Application","interface Application","elide.server.Application"]},{"name":"interface AssetConfig : Toggleable","description":"elide.server.cfg.AssetConfig","location":"packages/server/elide.server.cfg/-asset-config/index.html","searchKeys":["AssetConfig","interface AssetConfig : Toggleable","elide.server.cfg.AssetConfig"]},{"name":"interface AssetManager","description":"elide.server.assets.AssetManager","location":"packages/server/elide.server.assets/-asset-manager/index.html","searchKeys":["AssetManager","interface AssetManager","elide.server.assets.AssetManager"]},{"name":"interface AssetManifestLoader","description":"elide.server.assets.AssetManifestLoader","location":"packages/server/elide.server.assets/-asset-manifest-loader/index.html","searchKeys":["AssetManifestLoader","interface AssetManifestLoader","elide.server.assets.AssetManifestLoader"]},{"name":"interface AssetReader : AssetResolver","description":"elide.server.assets.AssetReader","location":"packages/server/elide.server.assets/-asset-reader/index.html","searchKeys":["AssetReader","interface AssetReader : AssetResolver","elide.server.assets.AssetReader"]},{"name":"interface AssetResolver","description":"elide.server.assets.AssetResolver","location":"packages/server/elide.server.assets/-asset-resolver/index.html","searchKeys":["AssetResolver","interface AssetResolver","elide.server.assets.AssetResolver"]},{"name":"interface ElideController","description":"elide.server.controller.ElideController","location":"packages/server/elide.server.controller/-elide-controller/index.html","searchKeys":["ElideController","interface ElideController","elide.server.controller.ElideController"]},{"name":"interface ResponseHandler<ResponseBody>","description":"elide.server.ResponseHandler","location":"packages/server/elide.server/-response-handler/index.html","searchKeys":["ResponseHandler","interface ResponseHandler<ResponseBody>","elide.server.ResponseHandler"]},{"name":"interface ServerInitializer","description":"elide.server.ServerInitializer","location":"packages/server/elide.server/-server-initializer/index.html","searchKeys":["ServerInitializer","interface ServerInitializer","elide.server.ServerInitializer"]},{"name":"interface StatusEnabledController","description":"elide.server.controller.StatusEnabledController","location":"packages/server/elide.server.controller/-status-enabled-controller/index.html","searchKeys":["StatusEnabledController","interface StatusEnabledController","elide.server.controller.StatusEnabledController"]},{"name":"interface StreamingSuspensionRenderer<R>","description":"elide.server.StreamingSuspensionRenderer","location":"packages/server/elide.server/-streaming-suspension-renderer/index.html","searchKeys":["StreamingSuspensionRenderer","interface StreamingSuspensionRenderer<R>","elide.server.StreamingSuspensionRenderer"]},{"name":"interface SuspensionRenderer<R>","description":"elide.server.SuspensionRenderer","location":"packages/server/elide.server/-suspension-renderer/index.html","searchKeys":["SuspensionRenderer","interface SuspensionRenderer<R>","elide.server.SuspensionRenderer"]},{"name":"object Companion","description":"elide.server.assets.AssetManifestLoader.Companion","location":"packages/server/elide.server.assets/-asset-manifest-loader/-companion/index.html","searchKeys":["Companion","object Companion","elide.server.assets.AssetManifestLoader.Companion"]},{"name":"object Companion","description":"elide.server.assets.ServerAssetManager.Companion","location":"packages/server/elide.server.assets/-server-asset-manager/-companion/index.html","searchKeys":["Companion","object Companion","elide.server.assets.ServerAssetManager.Companion"]},{"name":"object Companion","description":"elide.server.cfg.AssetConfig.Companion","location":"packages/server/elide.server.cfg/-asset-config/-companion/index.html","searchKeys":["Companion","object Companion","elide.server.cfg.AssetConfig.Companion"]},{"name":"object Companion","description":"elide.server.cfg.ServerConfigurator.Companion","location":"packages/server/elide.server.cfg/-server-configurator/-companion/index.html","searchKeys":["Companion","object Companion","elide.server.cfg.ServerConfigurator.Companion"]},{"name":"object Companion","description":"elide.server.http.RequestContext.Key.Companion","location":"packages/server/elide.server.http/-request-context/-key/-companion/index.html","searchKeys":["Companion","object Companion","elide.server.http.RequestContext.Key.Companion"]},{"name":"object Companion","description":"elide.server.runtime.AppExecutor.Companion","location":"packages/server/elide.server.runtime/-app-executor/-companion/index.html","searchKeys":["Companion","object Companion","elide.server.runtime.AppExecutor.Companion"]},{"name":"object Companion","description":"elide.server.runtime.AppExecutor.DefaultExecutor.Companion","location":"packages/server/elide.server.runtime/-app-executor/-default-executor/-companion/index.html","searchKeys":["Companion","object Companion","elide.server.runtime.AppExecutor.DefaultExecutor.Companion"]},{"name":"object Companion","description":"elide.server.ssr.ServerSSRRenderer.Companion","location":"packages/server/elide.server.ssr/-server-s-s-r-renderer/-companion/index.html","searchKeys":["Companion","object Companion","elide.server.ssr.ServerSSRRenderer.Companion"]},{"name":"object DefaultSettings","description":"elide.server.runtime.AppExecutor.DefaultSettings","location":"packages/server/elide.server.runtime/-app-executor/-default-settings/index.html","searchKeys":["DefaultSettings","object DefaultSettings","elide.server.runtime.AppExecutor.DefaultSettings"]},{"name":"object Initialization","description":"elide.server.Application.Initialization","location":"packages/server/elide.server/-application/-initialization/index.html","searchKeys":["Initialization","object Initialization","elide.server.Application.Initialization"]},{"name":"object RequestContext","description":"elide.server.http.RequestContext","location":"packages/server/elide.server.http/-request-context/index.html","searchKeys":["RequestContext","object RequestContext","elide.server.http.RequestContext"]},{"name":"object SecurityProviderConfigurator","description":"elide.server.runtime.jvm.SecurityProviderConfigurator","location":"packages/server/elide.server.runtime.jvm/-security-provider-configurator/index.html","searchKeys":["SecurityProviderConfigurator","object SecurityProviderConfigurator","elide.server.runtime.jvm.SecurityProviderConfigurator"]},{"name":"open class UncaughtExceptionHandler : Thread.UncaughtExceptionHandler","description":"elide.server.runtime.jvm.UncaughtExceptionHandler","location":"packages/server/elide.server.runtime.jvm/-uncaught-exception-handler/index.html","searchKeys":["UncaughtExceptionHandler","open class UncaughtExceptionHandler : Thread.UncaughtExceptionHandler","elide.server.runtime.jvm.UncaughtExceptionHandler"]},{"name":"open fun boot(args: Array<String>)","description":"elide.server.Application.boot","location":"packages/server/elide.server/-application/boot.html","searchKeys":["boot","open fun boot(args: Array<String>)","elide.server.Application.boot"]},{"name":"open fun executor(): Executor","description":"elide.server.runtime.AppExecutor.executor","location":"packages/server/elide.server.runtime/-app-executor/executor.html","searchKeys":["executor","open fun executor(): Executor","elide.server.runtime.AppExecutor.executor"]},{"name":"open fun findAssetByModuleId(asset: AssetModuleId): AssetPointer?","description":"elide.server.assets.AssetManager.findAssetByModuleId","location":"packages/server/elide.server.assets/-asset-manager/find-asset-by-module-id.html","searchKeys":["findAssetByModuleId","open fun findAssetByModuleId(asset: AssetModuleId): AssetPointer?","elide.server.assets.AssetManager.findAssetByModuleId"]},{"name":"open fun findLoadManifest(): AssetBundle?","description":"elide.server.assets.AssetManifestLoader.findLoadManifest","location":"packages/server/elide.server.assets/-asset-manifest-loader/find-load-manifest.html","searchKeys":["findLoadManifest","open fun findLoadManifest(): AssetBundle?","elide.server.assets.AssetManifestLoader.findLoadManifest"]},{"name":"open fun findManifest(): Pair<ManifestFormat, InputStream>?","description":"elide.server.assets.AssetManifestLoader.findManifest","location":"packages/server/elide.server.assets/-asset-manifest-loader/find-manifest.html","searchKeys":["findManifest","open fun findManifest(): Pair<ManifestFormat, InputStream>?","elide.server.assets.AssetManifestLoader.findManifest"]},{"name":"open fun initialize()","description":"elide.server.ServerInitializer.initialize","location":"packages/server/elide.server/-server-initializer/initialize.html","searchKeys":["initialize","open fun initialize()","elide.server.ServerInitializer.initialize"]},{"name":"open fun resolve(request: HttpRequest<*>): ServerAsset?","description":"elide.server.assets.AssetResolver.resolve","location":"packages/server/elide.server.assets/-asset-resolver/resolve.html","searchKeys":["resolve","open fun resolve(request: HttpRequest<*>): ServerAsset?","elide.server.assets.AssetResolver.resolve"]},{"name":"open fun resolve(request: HttpRequest<*>, moduleId: String? = null): ServerAsset?","description":"elide.server.assets.AssetManager.resolve","location":"packages/server/elide.server.assets/-asset-manager/resolve.html","searchKeys":["resolve","open fun resolve(request: HttpRequest<*>, moduleId: String? = null): ServerAsset?","elide.server.assets.AssetManager.resolve"]},{"name":"open fun serveNotFoundAsync(request: HttpRequest<*>): Deferred<StreamedAssetResponse>","description":"elide.server.assets.AssetManager.serveNotFoundAsync","location":"packages/server/elide.server.assets/-asset-manager/serve-not-found-async.html","searchKeys":["serveNotFoundAsync","open fun serveNotFoundAsync(request: HttpRequest<*>): Deferred<StreamedAssetResponse>","elide.server.assets.AssetManager.serveNotFoundAsync"]},{"name":"open override fun assets(): AssetManager","description":"elide.server.controller.PageController.assets","location":"packages/server/elide.server.controller/-page-controller/assets.html","searchKeys":["assets","open override fun assets(): AssetManager","elide.server.controller.PageController.assets"]},{"name":"open override fun configure(builder: ApplicationContextBuilder)","description":"elide.server.cfg.ServerConfigurator.configure","location":"packages/server/elide.server.cfg/-server-configurator/configure.html","searchKeys":["configure","open override fun configure(builder: ApplicationContextBuilder)","elide.server.cfg.ServerConfigurator.configure"]},{"name":"open override fun context(): ApplicationContext","description":"elide.server.controller.PageController.context","location":"packages/server/elide.server.controller/-page-controller/context.html","searchKeys":["context","open override fun context(): ApplicationContext","elide.server.controller.PageController.context"]},{"name":"open override fun doFilter(request: HttpRequest<*>, chain: ServerFilterChain): Publisher<MutableHttpResponse<*>>","description":"elide.server.http.HeaderFinalizingFilter.doFilter","location":"packages/server/elide.server.http/-header-finalizing-filter/do-filter.html","searchKeys":["doFilter","open override fun doFilter(request: HttpRequest<*>, chain: ServerFilterChain): Publisher<MutableHttpResponse<*>>","elide.server.http.HeaderFinalizingFilter.doFilter"]},{"name":"open override fun doFilter(request: HttpRequest<*>, chain: ServerFilterChain): Publisher<MutableHttpResponse<*>>","description":"elide.server.http.RequestContextFilter.doFilter","location":"packages/server/elide.server.http/-request-context-filter/do-filter.html","searchKeys":["doFilter","open override fun doFilter(request: HttpRequest<*>, chain: ServerFilterChain): Publisher<MutableHttpResponse<*>>","elide.server.http.RequestContextFilter.doFilter"]},{"name":"open override fun findByModuleId(moduleId: AssetModuleId): ServerAsset?","description":"elide.server.assets.ServerAssetReader.findByModuleId","location":"packages/server/elide.server.assets/-server-asset-reader/find-by-module-id.html","searchKeys":["findByModuleId","open override fun findByModuleId(moduleId: AssetModuleId): ServerAsset?","elide.server.assets.ServerAssetReader.findByModuleId"]},{"name":"open override fun linkForAsset(module: AssetModuleId, overrideType: AssetType?): String","description":"elide.server.assets.ServerAssetManager.linkForAsset","location":"packages/server/elide.server.assets/-server-asset-manager/link-for-asset.html","searchKeys":["linkForAsset","open override fun linkForAsset(module: AssetModuleId, overrideType: AssetType?): String","elide.server.assets.ServerAssetManager.linkForAsset"]},{"name":"open override fun onApplicationEvent(event: ServerStartupEvent)","description":"elide.server.Application.AppStartupListener.onApplicationEvent","location":"packages/server/elide.server/-application/-app-startup-listener/on-application-event.html","searchKeys":["onApplicationEvent","open override fun onApplicationEvent(event: ServerStartupEvent)","elide.server.Application.AppStartupListener.onApplicationEvent"]},{"name":"open override fun pointerTo(moduleId: AssetModuleId): AssetPointer?","description":"elide.server.assets.ServerAssetReader.pointerTo","location":"packages/server/elide.server.assets/-server-asset-reader/pointer-to.html","searchKeys":["pointerTo","open override fun pointerTo(moduleId: AssetModuleId): AssetPointer?","elide.server.assets.ServerAssetReader.pointerTo"]},{"name":"open override fun resolve(path: String): ServerAsset?","description":"elide.server.assets.ServerAssetReader.resolve","location":"packages/server/elide.server.assets/-server-asset-reader/resolve.html","searchKeys":["resolve","open override fun resolve(path: String): ServerAsset?","elide.server.assets.ServerAssetReader.resolve"]},{"name":"open override fun service(): ListeningScheduledExecutorService","description":"elide.server.runtime.AppExecutor.DefaultExecutor.service","location":"packages/server/elide.server.runtime/-app-executor/-default-executor/service.html","searchKeys":["service","open override fun service(): ListeningScheduledExecutorService","elide.server.runtime.AppExecutor.DefaultExecutor.service"]},{"name":"open override fun uncaughtException(thread: Thread, err: Throwable)","description":"elide.server.runtime.jvm.UncaughtExceptionHandler.uncaughtException","location":"packages/server/elide.server.runtime.jvm/-uncaught-exception-handler/uncaught-exception.html","searchKeys":["uncaughtException","open override fun uncaughtException(thread: Thread, err: Throwable)","elide.server.runtime.jvm.UncaughtExceptionHandler.uncaughtException"]},{"name":"open override val logging: Logger","description":"elide.server.assets.ServerAssetManager.logging","location":"packages/server/elide.server.assets/-server-asset-manager/logging.html","searchKeys":["logging","open override val logging: Logger","elide.server.assets.ServerAssetManager.logging"]},{"name":"open override val reader: AssetReader","description":"elide.server.assets.ServerAssetManager.reader","location":"packages/server/elide.server.assets/-server-asset-manager/reader.html","searchKeys":["reader","open override val reader: AssetReader","elide.server.assets.ServerAssetManager.reader"]},{"name":"open suspend fun finalizeAsync(state: RequestState): Deferred<Pair<State?, String?>>","description":"elide.server.controller.PageWithProps.finalizeAsync","location":"packages/server/elide.server.controller/-page-with-props/finalize-async.html","searchKeys":["finalizeAsync","open suspend fun finalizeAsync(state: RequestState): Deferred<Pair<State?, String?>>","elide.server.controller.PageWithProps.finalizeAsync"]},{"name":"open suspend fun props(state: RequestState): State?","description":"elide.server.controller.PageWithProps.props","location":"packages/server/elide.server.controller/-page-with-props/props.html","searchKeys":["props","open suspend fun props(state: RequestState): State?","elide.server.controller.PageWithProps.props"]},{"name":"open suspend fun propsAsync(state: RequestState): Deferred<State?>","description":"elide.server.controller.PageWithProps.propsAsync","location":"packages/server/elide.server.controller/-page-with-props/props-async.html","searchKeys":["propsAsync","open suspend fun propsAsync(state: RequestState): Deferred<State?>","elide.server.controller.PageWithProps.propsAsync"]},{"name":"open suspend fun serveAsync(request: HttpRequest<*>, moduleId: String? = null): Deferred<StreamedAssetResponse>","description":"elide.server.assets.AssetManager.serveAsync","location":"packages/server/elide.server.assets/-asset-manager/serve-async.html","searchKeys":["serveAsync","open suspend fun serveAsync(request: HttpRequest<*>, moduleId: String? = null): Deferred<StreamedAssetResponse>","elide.server.assets.AssetManager.serveAsync"]},{"name":"open suspend override fun handle(request: HttpRequest<out Any>): RawResponse","description":"elide.server.controller.builtin.NotFoundController.handle","location":"packages/server/elide.server.controller.builtin/-not-found-controller/handle.html","searchKeys":["handle","open suspend override fun handle(request: HttpRequest<out Any>): RawResponse","elide.server.controller.builtin.NotFoundController.handle"]},{"name":"open suspend override fun handle(request: HttpRequest<out Any>): RawResponse","description":"elide.server.controller.builtin.ServerErrorController.handle","location":"packages/server/elide.server.controller.builtin/-server-error-controller/handle.html","searchKeys":["handle","open suspend override fun handle(request: HttpRequest<out Any>): RawResponse","elide.server.controller.builtin.ServerErrorController.handle"]},{"name":"open suspend override fun readAsync(descriptor: ServerAsset, request: HttpRequest<*>): Deferred<RenderedAsset>","description":"elide.server.assets.ServerAssetReader.readAsync","location":"packages/server/elide.server.assets/-server-asset-reader/read-async.html","searchKeys":["readAsync","open suspend override fun readAsync(descriptor: ServerAsset, request: HttpRequest<*>): Deferred<RenderedAsset>","elide.server.assets.ServerAssetReader.readAsync"]},{"name":"open suspend override fun render(): ByteArrayOutputStream","description":"elide.server.HtmlRenderer.render","location":"packages/server/elide.server/-html-renderer/render.html","searchKeys":["render","open suspend override fun render(): ByteArrayOutputStream","elide.server.HtmlRenderer.render"]},{"name":"open suspend override fun render(): ByteArrayOutputStream","description":"elide.server.ssr.ServerSSRRenderer.render","location":"packages/server/elide.server.ssr/-server-s-s-r-renderer/render.html","searchKeys":["render","open suspend override fun render(): ByteArrayOutputStream","elide.server.ssr.ServerSSRRenderer.render"]},{"name":"open suspend override fun renderAssetAsync(request: HttpRequest<*>, asset: ServerAsset): Deferred<StreamedAssetResponse>","description":"elide.server.assets.ServerAssetManager.renderAssetAsync","location":"packages/server/elide.server.assets/-server-asset-manager/render-asset-async.html","searchKeys":["renderAssetAsync","open suspend override fun renderAssetAsync(request: HttpRequest<*>, asset: ServerAsset): Deferred<StreamedAssetResponse>","elide.server.assets.ServerAssetManager.renderAssetAsync"]},{"name":"open suspend override fun respond(response: MutableHttpResponse<ResponseBody>): MutableHttpResponse<ResponseBody>","description":"elide.server.BaseResponseHandler.respond","location":"packages/server/elide.server/-base-response-handler/respond.html","searchKeys":["respond","open suspend override fun respond(response: MutableHttpResponse<ResponseBody>): MutableHttpResponse<ResponseBody>","elide.server.BaseResponseHandler.respond"]},{"name":"open val etags: Boolean?","description":"elide.server.cfg.AssetConfig.etags","location":"packages/server/elide.server.cfg/-asset-config/etags.html","searchKeys":["etags","open val etags: Boolean?","elide.server.cfg.AssetConfig.etags"]},{"name":"open val hashLinks: Boolean?","description":"elide.server.cfg.AssetConfig.hashLinks","location":"packages/server/elide.server.cfg/-asset-config/hash-links.html","searchKeys":["hashLinks","open val hashLinks: Boolean?","elide.server.cfg.AssetConfig.hashLinks"]},{"name":"open val preferWeakEtags: Boolean?","description":"elide.server.cfg.AssetConfig.preferWeakEtags","location":"packages/server/elide.server.cfg/-asset-config/prefer-weak-etags.html","searchKeys":["preferWeakEtags","open val preferWeakEtags: Boolean?","elide.server.cfg.AssetConfig.preferWeakEtags"]},{"name":"open val prefix: String?","description":"elide.server.cfg.AssetConfig.prefix","location":"packages/server/elide.server.cfg/-asset-config/prefix.html","searchKeys":["prefix","open val prefix: String?","elide.server.cfg.AssetConfig.prefix"]},{"name":"open val rewriting: Boolean?","description":"elide.server.cfg.AssetConfig.rewriting","location":"packages/server/elide.server.cfg/-asset-config/rewriting.html","searchKeys":["rewriting","open val rewriting: Boolean?","elide.server.cfg.AssetConfig.rewriting"]},{"name":"sealed class ServerAsset","description":"elide.server.assets.ServerAsset","location":"packages/server/elide.server.assets/-server-asset/index.html","searchKeys":["ServerAsset","sealed class ServerAsset","elide.server.assets.ServerAsset"]},{"name":"suspend fun <R> async(operation: suspend () -> R): Deferred<R>","description":"elide.server.runtime.AppExecutor.Companion.async","location":"packages/server/elide.server.runtime/-app-executor/-companion/async.html","searchKeys":["async","suspend fun <R> async(operation: suspend () -> R): Deferred<R>","elide.server.runtime.AppExecutor.Companion.async"]},{"name":"suspend fun <R> io(operation: suspend () -> R): R","description":"elide.server.runtime.AppExecutor.Companion.io","location":"packages/server/elide.server.runtime/-app-executor/-companion/io.html","searchKeys":["io","suspend fun <R> io(operation: suspend () -> R): R","elide.server.runtime.AppExecutor.Companion.io"]},{"name":"suspend fun BODY.injectSSR(handler: ElideController, request: HttpRequest<*>, domId: String = DEFAULT_SSR_DOM_ID, classes: Set<String> = emptySet(), attrs: List<Pair<String, String>> = emptyList(), path: String? = null, embeddedRoot: String? = null)","description":"elide.server.injectSSR","location":"packages/server/elide.server/inject-s-s-r.html","searchKeys":["injectSSR","suspend fun BODY.injectSSR(handler: ElideController, request: HttpRequest<*>, domId: String = DEFAULT_SSR_DOM_ID, classes: Set<String> = emptySet(), attrs: List<Pair<String, String>> = emptyList(), path: String? = null, embeddedRoot: String? = null)","elide.server.injectSSR"]},{"name":"suspend fun BODY.render(domId: String = DEFAULT_SSR_DOM_ID, classes: Set<String> = emptySet(), attrs: List<Pair<String, String>> = emptyList(), path: String? = null, embeddedRoot: String? = null)","description":"elide.server.controller.PageController.ServerRenderAgent.render","location":"packages/server/elide.server.controller/-page-controller/-server-render-agent/render.html","searchKeys":["render","suspend fun BODY.render(domId: String = DEFAULT_SSR_DOM_ID, classes: Set<String> = emptySet(), attrs: List<Pair<String, String>> = emptyList(), path: String? = null, embeddedRoot: String? = null)","elide.server.controller.PageController.ServerRenderAgent.render"]},{"name":"suspend fun BODY.streamSSR(handler: ElideController, request: HttpRequest<*>, domId: String = DEFAULT_SSR_DOM_ID, classes: Set<String> = emptySet(), attrs: List<Pair<String, String>> = emptyList(), path: String = SSR_SCRIPT_DEFAULT, embeddedRoot: String = EMBEDDED_ROOT)","description":"elide.server.streamSSR","location":"packages/server/elide.server/stream-s-s-r.html","searchKeys":["streamSSR","suspend fun BODY.streamSSR(handler: ElideController, request: HttpRequest<*>, domId: String = DEFAULT_SSR_DOM_ID, classes: Set<String> = emptySet(), attrs: List<Pair<String, String>> = emptyList(), path: String = SSR_SCRIPT_DEFAULT, embeddedRoot: String = EMBEDDED_ROOT)","elide.server.streamSSR"]},{"name":"suspend fun PageController.asset(request: HttpRequest<*>, moduleId: AssetModuleId, type: AssetType? = null): FinalizedAssetResponse","description":"elide.server.asset","location":"packages/server/elide.server/asset.html","searchKeys":["asset","suspend fun PageController.asset(request: HttpRequest<*>, moduleId: AssetModuleId, type: AssetType? = null): FinalizedAssetResponse","elide.server.asset"]},{"name":"suspend fun PageController.asset(request: HttpRequest<*>, type: AssetType? = null, block: suspend AssetHandler.() -> Unit): FinalizedAssetResponse","description":"elide.server.asset","location":"packages/server/elide.server/asset.html","searchKeys":["asset","suspend fun PageController.asset(request: HttpRequest<*>, type: AssetType? = null, block: suspend AssetHandler.() -> Unit): FinalizedAssetResponse","elide.server.asset"]},{"name":"suspend fun PageController.html(block: suspend HTML.() -> Unit): RawResponse","description":"elide.server.html","location":"packages/server/elide.server/html.html","searchKeys":["html","suspend fun PageController.html(block: suspend HTML.() -> Unit): RawResponse","elide.server.html"]},{"name":"suspend fun PageController.script(request: HttpRequest<*>, block: AssetHandler.() -> Unit): FinalizedAssetResponse","description":"elide.server.script","location":"packages/server/elide.server/script.html","searchKeys":["script","suspend fun PageController.script(request: HttpRequest<*>, block: AssetHandler.() -> Unit): FinalizedAssetResponse","elide.server.script"]},{"name":"suspend fun PageController.script(request: HttpRequest<*>, moduleId: AssetModuleId): FinalizedAssetResponse","description":"elide.server.script","location":"packages/server/elide.server/script.html","searchKeys":["script","suspend fun PageController.script(request: HttpRequest<*>, moduleId: AssetModuleId): FinalizedAssetResponse","elide.server.script"]},{"name":"suspend fun PageController.stylesheet(request: HttpRequest<*>, block: AssetHandler.() -> Unit): FinalizedAssetResponse","description":"elide.server.stylesheet","location":"packages/server/elide.server/stylesheet.html","searchKeys":["stylesheet","suspend fun PageController.stylesheet(request: HttpRequest<*>, block: AssetHandler.() -> Unit): FinalizedAssetResponse","elide.server.stylesheet"]},{"name":"suspend fun PageController.stylesheet(request: HttpRequest<*>, moduleId: AssetModuleId): FinalizedAssetResponse","description":"elide.server.stylesheet","location":"packages/server/elide.server/stylesheet.html","searchKeys":["stylesheet","suspend fun PageController.stylesheet(request: HttpRequest<*>, moduleId: AssetModuleId): FinalizedAssetResponse","elide.server.stylesheet"]},{"name":"suspend fun assetGet(request: HttpRequest<*>, tag: String, ext: String): FinalizedAssetResponse","description":"elide.server.assets.AssetController.assetGet","location":"packages/server/elide.server.assets/-asset-controller/asset-get.html","searchKeys":["assetGet","suspend fun assetGet(request: HttpRequest<*>, tag: String, ext: String): FinalizedAssetResponse","elide.server.assets.AssetController.assetGet"]},{"name":"suspend fun renderResponse(response: MutableHttpResponse<ByteArrayOutputStream>): MutableHttpResponse<ByteArrayOutputStream>","description":"elide.server.ssr.ServerSSRRenderer.renderResponse","location":"packages/server/elide.server.ssr/-server-s-s-r-renderer/render-response.html","searchKeys":["renderResponse","suspend fun renderResponse(response: MutableHttpResponse<ByteArrayOutputStream>): MutableHttpResponse<ByteArrayOutputStream>","elide.server.ssr.ServerSSRRenderer.renderResponse"]},{"name":"suspend fun renderSuspendAsync(): Deferred<String>","description":"elide.server.ssr.ServerSSRRenderer.renderSuspendAsync","location":"packages/server/elide.server.ssr/-server-s-s-r-renderer/render-suspend-async.html","searchKeys":["renderSuspendAsync","suspend fun renderSuspendAsync(): Deferred<String>","elide.server.ssr.ServerSSRRenderer.renderSuspendAsync"]},{"name":"suspend fun ssr(request: HttpRequest<*>, path: String = SSR_SCRIPT_DEFAULT, response: MutableHttpResponse<ByteArrayOutputStream> = HttpResponse.ok(), wrap: Boolean = false, block: suspend HTML.() -> Unit): Mono<HttpResponse<Publisher<ByteArray>>>","description":"elide.server.ssr","location":"packages/server/elide.server/ssr.html","searchKeys":["ssr","suspend fun ssr(request: HttpRequest<*>, path: String = SSR_SCRIPT_DEFAULT, response: MutableHttpResponse<ByteArrayOutputStream> = HttpResponse.ok(), wrap: Boolean = false, block: suspend HTML.() -> Unit): Mono<HttpResponse<Publisher<ByteArray>>>","elide.server.ssr"]},{"name":"typealias AssetModuleId = String","description":"elide.server.AssetModuleId","location":"packages/server/elide.server/-asset-module-id/index.html","searchKeys":["AssetModuleId","typealias AssetModuleId = String","elide.server.AssetModuleId"]},{"name":"typealias AssetTag = String","description":"elide.server.AssetTag","location":"packages/server/elide.server/-asset-tag/index.html","searchKeys":["AssetTag","typealias AssetTag = String","elide.server.AssetTag"]},{"name":"typealias Eager = elide.annotations.Eager","description":"elide.server.annotations.Eager","location":"packages/server/elide.server.annotations/-eager/index.html","searchKeys":["Eager","typealias Eager = elide.annotations.Eager","elide.server.annotations.Eager"]},{"name":"typealias FinalizedAsset = ByteArray","description":"elide.server.FinalizedAsset","location":"packages/server/elide.server/-finalized-asset/index.html","searchKeys":["FinalizedAsset","typealias FinalizedAsset = ByteArray","elide.server.FinalizedAsset"]},{"name":"typealias FinalizedAssetResponse = MutableHttpResponse<FinalizedAsset>","description":"elide.server.FinalizedAssetResponse","location":"packages/server/elide.server/-finalized-asset-response/index.html","searchKeys":["FinalizedAssetResponse","typealias FinalizedAssetResponse = MutableHttpResponse<FinalizedAsset>","elide.server.FinalizedAssetResponse"]},{"name":"typealias RawPayload = ByteArray","description":"elide.server.RawPayload","location":"packages/server/elide.server/-raw-payload/index.html","searchKeys":["RawPayload","typealias RawPayload = ByteArray","elide.server.RawPayload"]},{"name":"typealias RawResponse = HttpResponse<RawPayload>","description":"elide.server.RawResponse","location":"packages/server/elide.server/-raw-response/index.html","searchKeys":["RawResponse","typealias RawResponse = HttpResponse<RawPayload>","elide.server.RawResponse"]},{"name":"typealias StreamedAsset = Pair<MediaType, ByteArray>","description":"elide.server.StreamedAsset","location":"packages/server/elide.server/-streamed-asset/index.html","searchKeys":["StreamedAsset","typealias StreamedAsset = Pair<MediaType, ByteArray>","elide.server.StreamedAsset"]},{"name":"typealias StreamedAssetResponse = MutableHttpResponse<StreamedAsset>","description":"elide.server.StreamedAssetResponse","location":"packages/server/elide.server/-streamed-asset-response/index.html","searchKeys":["StreamedAssetResponse","typealias StreamedAssetResponse = MutableHttpResponse<StreamedAsset>","elide.server.StreamedAssetResponse"]},{"name":"val ASSET_MANAGER: RequestContext.Key","description":"elide.server.http.RequestContext.Key.Companion.ASSET_MANAGER","location":"packages/server/elide.server.http/-request-context/-key/-companion/-a-s-s-e-t_-m-a-n-a-g-e-r.html","searchKeys":["ASSET_MANAGER","val ASSET_MANAGER: RequestContext.Key","elide.server.http.RequestContext.Key.Companion.ASSET_MANAGER"]},{"name":"val DEFAULT_INVOCATION_BASE: String? = null","description":"elide.server.DEFAULT_INVOCATION_BASE","location":"packages/server/elide.server/-d-e-f-a-u-l-t_-i-n-v-o-c-a-t-i-o-n_-b-a-s-e.html","searchKeys":["DEFAULT_INVOCATION_BASE","val DEFAULT_INVOCATION_BASE: String? = null","elide.server.DEFAULT_INVOCATION_BASE"]},{"name":"val assetType: AssetType","description":"elide.server.assets.AssetReference.assetType","location":"packages/server/elide.server.assets/-asset-reference/asset-type.html","searchKeys":["assetType","val assetType: AssetType","elide.server.assets.AssetReference.assetType"]},{"name":"val bannedConfig: SortedSet<String>","description":"elide.server.cfg.ServerConfigurator.Companion.bannedConfig","location":"packages/server/elide.server.cfg/-server-configurator/-companion/banned-config.html","searchKeys":["bannedConfig","val bannedConfig: SortedSet<String>","elide.server.cfg.ServerConfigurator.Companion.bannedConfig"]},{"name":"val baseMap: SortedMap<String, Any>","description":"elide.server.cfg.ServerConfigurator.Companion.baseMap","location":"packages/server/elide.server.cfg/-server-configurator/-companion/base-map.html","searchKeys":["baseMap","val baseMap: SortedMap<String, Any>","elide.server.cfg.ServerConfigurator.Companion.baseMap"]},{"name":"val cipherSuites: List<String>","description":"elide.server.cfg.ServerConfigurator.Companion.cipherSuites","location":"packages/server/elide.server.cfg/-server-configurator/-companion/cipher-suites.html","searchKeys":["cipherSuites","val cipherSuites: List<String>","elide.server.cfg.ServerConfigurator.Companion.cipherSuites"]},{"name":"val consumes: Array<String>","description":"elide.server.annotations.Page.consumes","location":"packages/server/elide.server.annotations/-page/consumes.html","searchKeys":["consumes","val consumes: Array<String>","elide.server.annotations.Page.consumes"]},{"name":"val defaultAccessLogExclusions: SortedSet<String>","description":"elide.server.cfg.ServerConfigurator.Companion.defaultAccessLogExclusions","location":"packages/server/elide.server.cfg/-server-configurator/-companion/default-access-log-exclusions.html","searchKeys":["defaultAccessLogExclusions","val defaultAccessLogExclusions: SortedSet<String>","elide.server.cfg.ServerConfigurator.Companion.defaultAccessLogExclusions"]},{"name":"val digest: Pair<HashAlgorithm, ByteString>?","description":"elide.server.assets.RenderedAsset.digest","location":"packages/server/elide.server.assets/-rendered-asset/digest.html","searchKeys":["digest","val digest: Pair<HashAlgorithm, ByteString>?","elide.server.assets.RenderedAsset.digest"]},{"name":"val dom: HTML","description":"elide.server.controller.PageController.ServerRenderAgent.dom","location":"packages/server/elide.server.controller/-page-controller/-server-render-agent/dom.html","searchKeys":["dom","val dom: HTML","elide.server.controller.PageController.ServerRenderAgent.dom"]},{"name":"val entries: EnumEntries<AssetType>","description":"elide.server.assets.AssetType.entries","location":"packages/server/elide.server.assets/-asset-type/entries.html","searchKeys":["entries","val entries: EnumEntries<AssetType>","elide.server.assets.AssetType.entries"]},{"name":"val etag: String","description":"elide.server.assets.AssetPointer.etag","location":"packages/server/elide.server.assets/-asset-pointer/etag.html","searchKeys":["etag","val etag: String","elide.server.assets.AssetPointer.etag"]},{"name":"val headers: Map<String, String>","description":"elide.server.assets.RenderedAsset.headers","location":"packages/server/elide.server.assets/-rendered-asset/headers.html","searchKeys":["headers","val headers: Map<String, String>","elide.server.assets.RenderedAsset.headers"]},{"name":"val href: String","description":"elide.server.assets.AssetReference.href","location":"packages/server/elide.server.assets/-asset-reference/href.html","searchKeys":["href","val href: String","elide.server.assets.AssetReference.href"]},{"name":"val index: SortedSet<Int>?","description":"elide.server.assets.AssetPointer.index","location":"packages/server/elide.server.assets/-asset-pointer/--index--.html","searchKeys":["index","val index: SortedSet<Int>?","elide.server.assets.AssetPointer.index"]},{"name":"val inline: Boolean = false","description":"elide.server.assets.AssetReference.inline","location":"packages/server/elide.server.assets/-asset-reference/inline.html","searchKeys":["inline","val inline: Boolean = false","elide.server.assets.AssetReference.inline"]},{"name":"val labsMap: SortedMap<String, Any>","description":"elide.server.cfg.ServerConfigurator.Companion.labsMap","location":"packages/server/elide.server.cfg/-server-configurator/-companion/labs-map.html","searchKeys":["labsMap","val labsMap: SortedMap<String, Any>","elide.server.cfg.ServerConfigurator.Companion.labsMap"]},{"name":"val lastModified: Long","description":"elide.server.assets.RenderedAsset.lastModified","location":"packages/server/elide.server.assets/-rendered-asset/last-modified.html","searchKeys":["lastModified","val lastModified: Long","elide.server.assets.RenderedAsset.lastModified"]},{"name":"val modified: Long","description":"elide.server.assets.AssetPointer.modified","location":"packages/server/elide.server.assets/-asset-pointer/modified.html","searchKeys":["modified","val modified: Long","elide.server.assets.AssetPointer.modified"]},{"name":"val module: AssetModuleId","description":"elide.server.assets.AssetReference.module","location":"packages/server/elide.server.assets/-asset-reference/module.html","searchKeys":["module","val module: AssetModuleId","elide.server.assets.AssetReference.module"]},{"name":"val module: AssetModuleId","description":"elide.server.assets.RenderedAsset.module","location":"packages/server/elide.server.assets/-rendered-asset/module.html","searchKeys":["module","val module: AssetModuleId","elide.server.assets.RenderedAsset.module"]},{"name":"val moduleId: AssetModuleId","description":"elide.server.assets.AssetPointer.moduleId","location":"packages/server/elide.server.assets/-asset-pointer/module-id.html","searchKeys":["moduleId","val moduleId: AssetModuleId","elide.server.assets.AssetPointer.moduleId"]},{"name":"val name: String","description":"elide.server.annotations.Page.name","location":"packages/server/elide.server.annotations/-page/name.html","searchKeys":["name","val name: String","elide.server.annotations.Page.name"]},{"name":"val name: String","description":"elide.server.http.RequestContext.Key.name","location":"packages/server/elide.server.http/-request-context/-key/name.html","searchKeys":["name","val name: String","elide.server.http.RequestContext.Key.name"]},{"name":"val nonTestMap: SortedMap<String, Any>","description":"elide.server.cfg.ServerConfigurator.Companion.nonTestMap","location":"packages/server/elide.server.cfg/-server-configurator/-companion/non-test-map.html","searchKeys":["nonTestMap","val nonTestMap: SortedMap<String, Any>","elide.server.cfg.ServerConfigurator.Companion.nonTestMap"]},{"name":"val poolSize: Int","description":"elide.server.runtime.AppExecutor.DefaultSettings.poolSize","location":"packages/server/elide.server.runtime/-app-executor/-default-settings/pool-size.html","searchKeys":["poolSize","val poolSize: Int","elide.server.runtime.AppExecutor.DefaultSettings.poolSize"]},{"name":"val precompile: Boolean = true","description":"elide.server.annotations.Page.precompile","location":"packages/server/elide.server.annotations/-page/precompile.html","searchKeys":["precompile","val precompile: Boolean = true","elide.server.annotations.Page.precompile"]},{"name":"val preload: Boolean = false","description":"elide.server.assets.AssetReference.preload","location":"packages/server/elide.server.assets/-asset-reference/preload.html","searchKeys":["preload","val preload: Boolean = false","elide.server.assets.AssetReference.preload"]},{"name":"val producer: () -> ByteString","description":"elide.server.assets.RenderedAsset.producer","location":"packages/server/elide.server.assets/-rendered-asset/producer.html","searchKeys":["producer","val producer: () -> ByteString","elide.server.assets.RenderedAsset.producer"]},{"name":"val produces: Array<String>","description":"elide.server.annotations.Page.produces","location":"packages/server/elide.server.annotations/-page/produces.html","searchKeys":["produces","val produces: Array<String>","elide.server.annotations.Page.produces"]},{"name":"val route: String","description":"elide.server.annotations.Page.route","location":"packages/server/elide.server.annotations/-page/route.html","searchKeys":["route","val route: String","elide.server.annotations.Page.route"]},{"name":"val size: Long","description":"elide.server.assets.RenderedAsset.size","location":"packages/server/elide.server.assets/-rendered-asset/size.html","searchKeys":["size","val size: Long","elide.server.assets.RenderedAsset.size"]},{"name":"val systemProps: SortedMap<String, String>","description":"elide.server.cfg.ServerConfigurator.Companion.systemProps","location":"packages/server/elide.server.cfg/-server-configurator/-companion/system-props.html","searchKeys":["systemProps","val systemProps: SortedMap<String, String>","elide.server.cfg.ServerConfigurator.Companion.systemProps"]},{"name":"val tag: String","description":"elide.server.assets.AssetPointer.tag","location":"packages/server/elide.server.assets/-asset-pointer/tag.html","searchKeys":["tag","val tag: String","elide.server.assets.AssetPointer.tag"]},{"name":"val token: String","description":"elide.server.assets.AssetPointer.token","location":"packages/server/elide.server.assets/-asset-pointer/token.html","searchKeys":["token","val token: String","elide.server.assets.AssetPointer.token"]},{"name":"val type: AssetType","description":"elide.server.assets.AssetPointer.type","location":"packages/server/elide.server.assets/-asset-pointer/type.html","searchKeys":["type","val type: AssetType","elide.server.assets.AssetPointer.type"]},{"name":"val type: AssetType","description":"elide.server.assets.RenderedAsset.type","location":"packages/server/elide.server.assets/-rendered-asset/type.html","searchKeys":["type","val type: AssetType","elide.server.assets.RenderedAsset.type"]},{"name":"val type: String? = null","description":"elide.server.assets.AssetReference.type","location":"packages/server/elide.server.assets/-asset-reference/type.html","searchKeys":["type","val type: String? = null","elide.server.assets.AssetReference.type"]},{"name":"val variant: CompressionMode","description":"elide.server.assets.RenderedAsset.variant","location":"packages/server/elide.server.assets/-rendered-asset/variant.html","searchKeys":["variant","val variant: CompressionMode","elide.server.assets.RenderedAsset.variant"]},{"name":"var assets: AssetConfig","description":"elide.server.cfg.ServerConfig.assets","location":"packages/server/elide.server.cfg/-server-config/assets.html","searchKeys":["assets","var assets: AssetConfig","elide.server.cfg.ServerConfig.assets"]},{"name":"var inline: Boolean","description":"elide.server.controller.PageController.AssetReferenceBuilder.inline","location":"packages/server/elide.server.controller/-page-controller/-asset-reference-builder/inline.html","searchKeys":["inline","var inline: Boolean","elide.server.controller.PageController.AssetReferenceBuilder.inline"]},{"name":"var module: AssetModuleId","description":"elide.server.controller.PageController.AssetReferenceBuilder.module","location":"packages/server/elide.server.controller/-page-controller/-asset-reference-builder/module.html","searchKeys":["module","var module: AssetModuleId","elide.server.controller.PageController.AssetReferenceBuilder.module"]},{"name":"var preload: Boolean","description":"elide.server.controller.PageController.AssetReferenceBuilder.preload","location":"packages/server/elide.server.controller/-page-controller/-asset-reference-builder/preload.html","searchKeys":["preload","var preload: Boolean","elide.server.controller.PageController.AssetReferenceBuilder.preload"]},{"name":"class Jvm","description":"elide.runtime.plugins.jvm.Jvm","location":"packages/graalvm-jvm/elide.runtime.plugins.jvm/-jvm/index.html","searchKeys":["Jvm","class Jvm","elide.runtime.plugins.jvm.Jvm"]},{"name":"class JvmConfig : AbstractLanguageConfig","description":"elide.runtime.plugins.jvm.JvmConfig","location":"packages/graalvm-jvm/elide.runtime.plugins.jvm/-jvm-config/index.html","searchKeys":["JvmConfig","class JvmConfig : AbstractLanguageConfig","elide.runtime.plugins.jvm.JvmConfig"]},{"name":"class JvmRuntimeConfig : Toggleable, GuestRuntimeConfiguration","description":"elide.runtime.gvm.jvm.cfg.JvmRuntimeConfig","location":"packages/graalvm-jvm/elide.runtime.gvm.jvm.cfg/-jvm-runtime-config/index.html","searchKeys":["JvmRuntimeConfig","class JvmRuntimeConfig : Toggleable, GuestRuntimeConfiguration","elide.runtime.gvm.jvm.cfg.JvmRuntimeConfig"]},{"name":"class JvmServerAdapter","description":"elide.runtime.gvm.internals.jvm.JvmServerAdapter","location":"packages/graalvm-jvm/elide.runtime.gvm.internals.jvm/-jvm-server-adapter/index.html","searchKeys":["JvmServerAdapter","class JvmServerAdapter","elide.runtime.gvm.internals.jvm.JvmServerAdapter"]},{"name":"const val DEFAULT_ENABLED: Boolean = true","description":"elide.runtime.gvm.jvm.cfg.JvmRuntimeConfig.Companion.DEFAULT_ENABLED","location":"packages/graalvm-jvm/elide.runtime.gvm.jvm.cfg/-jvm-runtime-config/-companion/-d-e-f-a-u-l-t_-e-n-a-b-l-e-d.html","searchKeys":["DEFAULT_ENABLED","const val DEFAULT_ENABLED: Boolean = true","elide.runtime.gvm.jvm.cfg.JvmRuntimeConfig.Companion.DEFAULT_ENABLED"]},{"name":"constructor()","description":"elide.runtime.gvm.internals.jvm.JvmServerAdapter.JvmServerAdapter","location":"packages/graalvm-jvm/elide.runtime.gvm.internals.jvm/-jvm-server-adapter/-jvm-server-adapter.html","searchKeys":["JvmServerAdapter","constructor()","elide.runtime.gvm.internals.jvm.JvmServerAdapter.JvmServerAdapter"]},{"name":"constructor()","description":"elide.runtime.gvm.jvm.cfg.JvmRuntimeConfig.JvmRuntimeConfig","location":"packages/graalvm-jvm/elide.runtime.gvm.jvm.cfg/-jvm-runtime-config/-jvm-runtime-config.html","searchKeys":["JvmRuntimeConfig","constructor()","elide.runtime.gvm.jvm.cfg.JvmRuntimeConfig.JvmRuntimeConfig"]},{"name":"fun JvmConfig.classpath(vararg paths: Path)","description":"elide.runtime.plugins.jvm.classpath","location":"packages/graalvm-jvm/elide.runtime.plugins.jvm/classpath.html","searchKeys":["classpath","fun JvmConfig.classpath(vararg paths: Path)","elide.runtime.plugins.jvm.classpath"]},{"name":"fun PolyglotContext.guestClass(name: String): ReadOnlyProperty<Any, PolyglotValue>","description":"elide.runtime.plugins.jvm.interop.guestClass","location":"packages/graalvm-jvm/elide.runtime.plugins.jvm.interop/guest-class.html","searchKeys":["guestClass","fun PolyglotContext.guestClass(name: String): ReadOnlyProperty<Any, PolyglotValue>","elide.runtime.plugins.jvm.interop.guestClass"]},{"name":"fun PolyglotContext.loadGuestClass(name: String): PolyglotValue","description":"elide.runtime.plugins.jvm.interop.loadGuestClass","location":"packages/graalvm-jvm/elide.runtime.plugins.jvm.interop/load-guest-class.html","searchKeys":["loadGuestClass","fun PolyglotContext.loadGuestClass(name: String): PolyglotValue","elide.runtime.plugins.jvm.interop.loadGuestClass"]},{"name":"fun PolyglotContext.runJvm(mainClassName: String, mainMethodName: String = \"main\", arguments: Array<String> = arrayOf()): Int","description":"elide.runtime.plugins.jvm.runJvm","location":"packages/graalvm-jvm/elide.runtime.plugins.jvm/run-jvm.html","searchKeys":["runJvm","fun PolyglotContext.runJvm(mainClassName: String, mainMethodName: String = \"main\", arguments: Array<String> = arrayOf()): Int","elide.runtime.plugins.jvm.runJvm"]},{"name":"fun PolyglotValue.asBooleanArray(): BooleanArray","description":"elide.runtime.plugins.jvm.interop.asBooleanArray","location":"packages/graalvm-jvm/elide.runtime.plugins.jvm.interop/as-boolean-array.html","searchKeys":["asBooleanArray","fun PolyglotValue.asBooleanArray(): BooleanArray","elide.runtime.plugins.jvm.interop.asBooleanArray"]},{"name":"fun PolyglotValue.asBooleanOrNull(): Boolean?","description":"elide.runtime.plugins.jvm.interop.asBooleanOrNull","location":"packages/graalvm-jvm/elide.runtime.plugins.jvm.interop/as-boolean-or-null.html","searchKeys":["asBooleanOrNull","fun PolyglotValue.asBooleanOrNull(): Boolean?","elide.runtime.plugins.jvm.interop.asBooleanOrNull"]},{"name":"fun PolyglotValue.asByteArray(): ByteArray","description":"elide.runtime.plugins.jvm.interop.asByteArray","location":"packages/graalvm-jvm/elide.runtime.plugins.jvm.interop/as-byte-array.html","searchKeys":["asByteArray","fun PolyglotValue.asByteArray(): ByteArray","elide.runtime.plugins.jvm.interop.asByteArray"]},{"name":"fun PolyglotValue.asByteOrNull(): Byte?","description":"elide.runtime.plugins.jvm.interop.asByteOrNull","location":"packages/graalvm-jvm/elide.runtime.plugins.jvm.interop/as-byte-or-null.html","searchKeys":["asByteOrNull","fun PolyglotValue.asByteOrNull(): Byte?","elide.runtime.plugins.jvm.interop.asByteOrNull"]},{"name":"fun PolyglotValue.asCharArray(): CharArray","description":"elide.runtime.plugins.jvm.interop.asCharArray","location":"packages/graalvm-jvm/elide.runtime.plugins.jvm.interop/as-char-array.html","searchKeys":["asCharArray","fun PolyglotValue.asCharArray(): CharArray","elide.runtime.plugins.jvm.interop.asCharArray"]},{"name":"fun PolyglotValue.asCharOrNull(): Char?","description":"elide.runtime.plugins.jvm.interop.asCharOrNull","location":"packages/graalvm-jvm/elide.runtime.plugins.jvm.interop/as-char-or-null.html","searchKeys":["asCharOrNull","fun PolyglotValue.asCharOrNull(): Char?","elide.runtime.plugins.jvm.interop.asCharOrNull"]},{"name":"fun PolyglotValue.asDoubleArray(): DoubleArray","description":"elide.runtime.plugins.jvm.interop.asDoubleArray","location":"packages/graalvm-jvm/elide.runtime.plugins.jvm.interop/as-double-array.html","searchKeys":["asDoubleArray","fun PolyglotValue.asDoubleArray(): DoubleArray","elide.runtime.plugins.jvm.interop.asDoubleArray"]},{"name":"fun PolyglotValue.asDoubleOrNull(): Double?","description":"elide.runtime.plugins.jvm.interop.asDoubleOrNull","location":"packages/graalvm-jvm/elide.runtime.plugins.jvm.interop/as-double-or-null.html","searchKeys":["asDoubleOrNull","fun PolyglotValue.asDoubleOrNull(): Double?","elide.runtime.plugins.jvm.interop.asDoubleOrNull"]},{"name":"fun PolyglotValue.asFloatArray(): FloatArray","description":"elide.runtime.plugins.jvm.interop.asFloatArray","location":"packages/graalvm-jvm/elide.runtime.plugins.jvm.interop/as-float-array.html","searchKeys":["asFloatArray","fun PolyglotValue.asFloatArray(): FloatArray","elide.runtime.plugins.jvm.interop.asFloatArray"]},{"name":"fun PolyglotValue.asFloatOrNull(): Float?","description":"elide.runtime.plugins.jvm.interop.asFloatOrNull","location":"packages/graalvm-jvm/elide.runtime.plugins.jvm.interop/as-float-or-null.html","searchKeys":["asFloatOrNull","fun PolyglotValue.asFloatOrNull(): Float?","elide.runtime.plugins.jvm.interop.asFloatOrNull"]},{"name":"fun PolyglotValue.asIntArray(): IntArray","description":"elide.runtime.plugins.jvm.interop.asIntArray","location":"packages/graalvm-jvm/elide.runtime.plugins.jvm.interop/as-int-array.html","searchKeys":["asIntArray","fun PolyglotValue.asIntArray(): IntArray","elide.runtime.plugins.jvm.interop.asIntArray"]},{"name":"fun PolyglotValue.asIntOrNull(): Int?","description":"elide.runtime.plugins.jvm.interop.asIntOrNull","location":"packages/graalvm-jvm/elide.runtime.plugins.jvm.interop/as-int-or-null.html","searchKeys":["asIntOrNull","fun PolyglotValue.asIntOrNull(): Int?","elide.runtime.plugins.jvm.interop.asIntOrNull"]},{"name":"fun PolyglotValue.asLongArray(): LongArray","description":"elide.runtime.plugins.jvm.interop.asLongArray","location":"packages/graalvm-jvm/elide.runtime.plugins.jvm.interop/as-long-array.html","searchKeys":["asLongArray","fun PolyglotValue.asLongArray(): LongArray","elide.runtime.plugins.jvm.interop.asLongArray"]},{"name":"fun PolyglotValue.asLongOrNull(): Long?","description":"elide.runtime.plugins.jvm.interop.asLongOrNull","location":"packages/graalvm-jvm/elide.runtime.plugins.jvm.interop/as-long-or-null.html","searchKeys":["asLongOrNull","fun PolyglotValue.asLongOrNull(): Long?","elide.runtime.plugins.jvm.interop.asLongOrNull"]},{"name":"fun PolyglotValue.asShortArray(): ShortArray","description":"elide.runtime.plugins.jvm.interop.asShortArray","location":"packages/graalvm-jvm/elide.runtime.plugins.jvm.interop/as-short-array.html","searchKeys":["asShortArray","fun PolyglotValue.asShortArray(): ShortArray","elide.runtime.plugins.jvm.interop.asShortArray"]},{"name":"fun PolyglotValue.asShortOrNull(): Short?","description":"elide.runtime.plugins.jvm.interop.asShortOrNull","location":"packages/graalvm-jvm/elide.runtime.plugins.jvm.interop/as-short-or-null.html","searchKeys":["asShortOrNull","fun PolyglotValue.asShortOrNull(): Short?","elide.runtime.plugins.jvm.interop.asShortOrNull"]},{"name":"fun PolyglotValue.asStringOrNull(): String?","description":"elide.runtime.plugins.jvm.interop.asStringOrNull","location":"packages/graalvm-jvm/elide.runtime.plugins.jvm.interop/as-string-or-null.html","searchKeys":["asStringOrNull","fun PolyglotValue.asStringOrNull(): String?","elide.runtime.plugins.jvm.interop.asStringOrNull"]},{"name":"fun classpath(paths: Iterable<String>)","description":"elide.runtime.plugins.jvm.JvmConfig.classpath","location":"packages/graalvm-jvm/elide.runtime.plugins.jvm/-jvm-config/classpath.html","searchKeys":["classpath","fun classpath(paths: Iterable<String>)","elide.runtime.plugins.jvm.JvmConfig.classpath"]},{"name":"fun classpath(vararg paths: String)","description":"elide.runtime.plugins.jvm.JvmConfig.classpath","location":"packages/graalvm-jvm/elide.runtime.plugins.jvm/-jvm-config/classpath.html","searchKeys":["classpath","fun classpath(vararg paths: String)","elide.runtime.plugins.jvm.JvmConfig.classpath"]},{"name":"inline fun <T> PolyglotValue.asHostArray(map: (PolyglotValue) -> T): Array<T>","description":"elide.runtime.plugins.jvm.interop.asHostArray","location":"packages/graalvm-jvm/elide.runtime.plugins.jvm.interop/as-host-array.html","searchKeys":["asHostArray","inline fun <T> PolyglotValue.asHostArray(map: (PolyglotValue) -> T): Array<T>","elide.runtime.plugins.jvm.interop.asHostArray"]},{"name":"object Companion","description":"elide.runtime.gvm.jvm.cfg.JvmRuntimeConfig.Companion","location":"packages/graalvm-jvm/elide.runtime.gvm.jvm.cfg/-jvm-runtime-config/-companion/index.html","searchKeys":["Companion","object Companion","elide.runtime.gvm.jvm.cfg.JvmRuntimeConfig.Companion"]},{"name":"object JVM","description":"elide.runtime.gvm.jvm.JVM","location":"packages/graalvm-jvm/elide.runtime.gvm.jvm/-j-v-m/index.html","searchKeys":["JVM","object JVM","elide.runtime.gvm.jvm.JVM"]},{"name":"object Plugin : AbstractLanguagePlugin<JvmConfig, Jvm> ","description":"elide.runtime.plugins.jvm.Jvm.Plugin","location":"packages/graalvm-jvm/elide.runtime.plugins.jvm/-jvm/-plugin/index.html","searchKeys":["Plugin","object Plugin : AbstractLanguagePlugin<JvmConfig, Jvm> ","elide.runtime.plugins.jvm.Jvm.Plugin"]},{"name":"open override fun install(scope: EnginePlugin.InstallationScope, configuration: JvmConfig.() -> Unit): Jvm","description":"elide.runtime.plugins.jvm.Jvm.Plugin.install","location":"packages/graalvm-jvm/elide.runtime.plugins.jvm/-jvm/-plugin/install.html","searchKeys":["install","open override fun install(scope: EnginePlugin.InstallationScope, configuration: JvmConfig.() -> Unit): Jvm","elide.runtime.plugins.jvm.Jvm.Plugin.install"]},{"name":"open override fun isEnabled(): Boolean","description":"elide.runtime.gvm.jvm.cfg.JvmRuntimeConfig.isEnabled","location":"packages/graalvm-jvm/elide.runtime.gvm.jvm.cfg/-jvm-runtime-config/is-enabled.html","searchKeys":["isEnabled","open override fun isEnabled(): Boolean","elide.runtime.gvm.jvm.cfg.JvmRuntimeConfig.isEnabled"]},{"name":"open override val key: EnginePlugin.Key<Jvm>","description":"elide.runtime.plugins.jvm.Jvm.Plugin.key","location":"packages/graalvm-jvm/elide.runtime.plugins.jvm/-jvm/-plugin/key.html","searchKeys":["key","open override val key: EnginePlugin.Key<Jvm>","elide.runtime.plugins.jvm.Jvm.Plugin.key"]},{"name":"open override val languageId: String","description":"elide.runtime.plugins.jvm.Jvm.Plugin.languageId","location":"packages/graalvm-jvm/elide.runtime.plugins.jvm/-jvm/-plugin/language-id.html","searchKeys":["languageId","open override val languageId: String","elide.runtime.plugins.jvm.Jvm.Plugin.languageId"]},{"name":"val DEFAULT_CHARSET: Charset","description":"elide.runtime.gvm.jvm.cfg.JvmRuntimeConfig.Companion.DEFAULT_CHARSET","location":"packages/graalvm-jvm/elide.runtime.gvm.jvm.cfg/-jvm-runtime-config/-companion/-d-e-f-a-u-l-t_-c-h-a-r-s-e-t.html","searchKeys":["DEFAULT_CHARSET","val DEFAULT_CHARSET: Charset","elide.runtime.gvm.jvm.cfg.JvmRuntimeConfig.Companion.DEFAULT_CHARSET"]},{"name":"val DEFAULT_LOCALE: Locale","description":"elide.runtime.gvm.jvm.cfg.JvmRuntimeConfig.Companion.DEFAULT_LOCALE","location":"packages/graalvm-jvm/elide.runtime.gvm.jvm.cfg/-jvm-runtime-config/-companion/-d-e-f-a-u-l-t_-l-o-c-a-l-e.html","searchKeys":["DEFAULT_LOCALE","val DEFAULT_LOCALE: Locale","elide.runtime.gvm.jvm.cfg.JvmRuntimeConfig.Companion.DEFAULT_LOCALE"]},{"name":"val DEFAULT_TIMEZONE: ZoneId","description":"elide.runtime.gvm.jvm.cfg.JvmRuntimeConfig.Companion.DEFAULT_TIMEZONE","location":"packages/graalvm-jvm/elide.runtime.gvm.jvm.cfg/-jvm-runtime-config/-companion/-d-e-f-a-u-l-t_-t-i-m-e-z-o-n-e.html","searchKeys":["DEFAULT_TIMEZONE","val DEFAULT_TIMEZONE: ZoneId","elide.runtime.gvm.jvm.cfg.JvmRuntimeConfig.Companion.DEFAULT_TIMEZONE"]},{"name":"val charset: Charset?","description":"elide.runtime.gvm.jvm.cfg.JvmRuntimeConfig.charset","location":"packages/graalvm-jvm/elide.runtime.gvm.jvm.cfg/-jvm-runtime-config/charset.html","searchKeys":["charset","val charset: Charset?","elide.runtime.gvm.jvm.cfg.JvmRuntimeConfig.charset"]},{"name":"val config: JvmConfig","description":"elide.runtime.plugins.jvm.Jvm.config","location":"packages/graalvm-jvm/elide.runtime.plugins.jvm/-jvm/config.html","searchKeys":["config","val config: JvmConfig","elide.runtime.plugins.jvm.Jvm.config"]},{"name":"val defaultLocale: Locale?","description":"elide.runtime.gvm.jvm.cfg.JvmRuntimeConfig.defaultLocale","location":"packages/graalvm-jvm/elide.runtime.gvm.jvm.cfg/-jvm-runtime-config/default-locale.html","searchKeys":["defaultLocale","val defaultLocale: Locale?","elide.runtime.gvm.jvm.cfg.JvmRuntimeConfig.defaultLocale"]},{"name":"val locale: Locale?","description":"elide.runtime.gvm.jvm.cfg.JvmRuntimeConfig.locale","location":"packages/graalvm-jvm/elide.runtime.gvm.jvm.cfg/-jvm-runtime-config/locale.html","searchKeys":["locale","val locale: Locale?","elide.runtime.gvm.jvm.cfg.JvmRuntimeConfig.locale"]},{"name":"val timezone: ZoneId?","description":"elide.runtime.gvm.jvm.cfg.JvmRuntimeConfig.timezone","location":"packages/graalvm-jvm/elide.runtime.gvm.jvm.cfg/-jvm-runtime-config/timezone.html","searchKeys":["timezone","val timezone: ZoneId?","elide.runtime.gvm.jvm.cfg.JvmRuntimeConfig.timezone"]},{"name":"var multithreading: Boolean","description":"elide.runtime.plugins.jvm.JvmConfig.multithreading","location":"packages/graalvm-jvm/elide.runtime.plugins.jvm/-jvm-config/multithreading.html","searchKeys":["multithreading","var multithreading: Boolean","elide.runtime.plugins.jvm.JvmConfig.multithreading"]},{"name":"CLIENT_ERROR","description":"elide.http.api.HttpStatus.Type.CLIENT_ERROR","location":"packages/serverless/elide.http.api/-http-status/-type/-c-l-i-e-n-t_-e-r-r-o-r/index.html","searchKeys":["CLIENT_ERROR","CLIENT_ERROR","elide.http.api.HttpStatus.Type.CLIENT_ERROR"]},{"name":"CONNECT","description":"elide.http.api.StandardHttpMethod.CONNECT","location":"packages/serverless/elide.http.api/-standard-http-method/-c-o-n-n-e-c-t/index.html","searchKeys":["CONNECT","CONNECT","elide.http.api.StandardHttpMethod.CONNECT"]},{"name":"DELETE","description":"elide.http.api.StandardHttpMethod.DELETE","location":"packages/serverless/elide.http.api/-standard-http-method/-d-e-l-e-t-e/index.html","searchKeys":["DELETE","DELETE","elide.http.api.StandardHttpMethod.DELETE"]},{"name":"GET","description":"elide.http.api.StandardHttpMethod.GET","location":"packages/serverless/elide.http.api/-standard-http-method/-g-e-t/index.html","searchKeys":["GET","GET","elide.http.api.StandardHttpMethod.GET"]},{"name":"HEAD","description":"elide.http.api.StandardHttpMethod.HEAD","location":"packages/serverless/elide.http.api/-standard-http-method/-h-e-a-d/index.html","searchKeys":["HEAD","HEAD","elide.http.api.StandardHttpMethod.HEAD"]},{"name":"HTTP_1_1","description":"elide.http.api.HttpVersion.HTTP_1_1","location":"packages/serverless/elide.http.api/-http-version/-h-t-t-p_1_1/index.html","searchKeys":["HTTP_1_1","HTTP_1_1","elide.http.api.HttpVersion.HTTP_1_1"]},{"name":"HTTP_2","description":"elide.http.api.HttpVersion.HTTP_2","location":"packages/serverless/elide.http.api/-http-version/-h-t-t-p_2/index.html","searchKeys":["HTTP_2","HTTP_2","elide.http.api.HttpVersion.HTTP_2"]},{"name":"HTTP_3","description":"elide.http.api.HttpVersion.HTTP_3","location":"packages/serverless/elide.http.api/-http-version/-h-t-t-p_3/index.html","searchKeys":["HTTP_3","HTTP_3","elide.http.api.HttpVersion.HTTP_3"]},{"name":"INFORMATIONAL","description":"elide.http.api.HttpStatus.Type.INFORMATIONAL","location":"packages/serverless/elide.http.api/-http-status/-type/-i-n-f-o-r-m-a-t-i-o-n-a-l/index.html","searchKeys":["INFORMATIONAL","INFORMATIONAL","elide.http.api.HttpStatus.Type.INFORMATIONAL"]},{"name":"OPTIONS","description":"elide.http.api.StandardHttpMethod.OPTIONS","location":"packages/serverless/elide.http.api/-standard-http-method/-o-p-t-i-o-n-s/index.html","searchKeys":["OPTIONS","OPTIONS","elide.http.api.StandardHttpMethod.OPTIONS"]},{"name":"PATCH","description":"elide.http.api.StandardHttpMethod.PATCH","location":"packages/serverless/elide.http.api/-standard-http-method/-p-a-t-c-h/index.html","searchKeys":["PATCH","PATCH","elide.http.api.StandardHttpMethod.PATCH"]},{"name":"POST","description":"elide.http.api.StandardHttpMethod.POST","location":"packages/serverless/elide.http.api/-standard-http-method/-p-o-s-t/index.html","searchKeys":["POST","POST","elide.http.api.StandardHttpMethod.POST"]},{"name":"PUT","description":"elide.http.api.StandardHttpMethod.PUT","location":"packages/serverless/elide.http.api/-standard-http-method/-p-u-t/index.html","searchKeys":["PUT","PUT","elide.http.api.StandardHttpMethod.PUT"]},{"name":"REDIRECTION","description":"elide.http.api.HttpStatus.Type.REDIRECTION","location":"packages/serverless/elide.http.api/-http-status/-type/-r-e-d-i-r-e-c-t-i-o-n/index.html","searchKeys":["REDIRECTION","REDIRECTION","elide.http.api.HttpStatus.Type.REDIRECTION"]},{"name":"REQUEST","description":"elide.http.api.HttpMessageType.REQUEST","location":"packages/serverless/elide.http.api/-http-message-type/-r-e-q-u-e-s-t/index.html","searchKeys":["REQUEST","REQUEST","elide.http.api.HttpMessageType.REQUEST"]},{"name":"RESPONSE","description":"elide.http.api.HttpMessageType.RESPONSE","location":"packages/serverless/elide.http.api/-http-message-type/-r-e-s-p-o-n-s-e/index.html","searchKeys":["RESPONSE","RESPONSE","elide.http.api.HttpMessageType.RESPONSE"]},{"name":"SERVER_ERROR","description":"elide.http.api.HttpStatus.Type.SERVER_ERROR","location":"packages/serverless/elide.http.api/-http-status/-type/-s-e-r-v-e-r_-e-r-r-o-r/index.html","searchKeys":["SERVER_ERROR","SERVER_ERROR","elide.http.api.HttpStatus.Type.SERVER_ERROR"]},{"name":"SUCCESSFUL","description":"elide.http.api.HttpStatus.Type.SUCCESSFUL","location":"packages/serverless/elide.http.api/-http-status/-type/-s-u-c-c-e-s-s-f-u-l/index.html","searchKeys":["SUCCESSFUL","SUCCESSFUL","elide.http.api.HttpStatus.Type.SUCCESSFUL"]},{"name":"TRACE","description":"elide.http.api.StandardHttpMethod.TRACE","location":"packages/serverless/elide.http.api/-standard-http-method/-t-r-a-c-e/index.html","searchKeys":["TRACE","TRACE","elide.http.api.StandardHttpMethod.TRACE"]},{"name":"abstract class HttpMessage(val version: HttpVersion = HTTP_2, val headers: HttpHeaders = HttpHeaders.empty()) : HttpMessage","description":"elide.http.HttpMessage","location":"packages/serverless/elide.http/-http-message/index.html","searchKeys":["HttpMessage","abstract class HttpMessage(val version: HttpVersion = HTTP_2, val headers: HttpHeaders = HttpHeaders.empty()) : HttpMessage","elide.http.HttpMessage"]},{"name":"abstract class MutableHttpMessage(body: MutableHttpPayload? = null, var version: HttpVersion = HTTP_2, val headers: MutableHttpHeaders = MutableHttpHeaders.create()) : MutableHttpMessage","description":"elide.http.MutableHttpMessage","location":"packages/serverless/elide.http/-mutable-http-message/index.html","searchKeys":["MutableHttpMessage","abstract class MutableHttpMessage(body: MutableHttpPayload? = null, var version: HttpVersion = HTTP_2, val headers: MutableHttpHeaders = MutableHttpHeaders.create()) : MutableHttpMessage","elide.http.MutableHttpMessage"]},{"name":"abstract fun add(key: HttpHeaders.HeaderName, value: HttpString)","description":"elide.http.api.MutableHttpHeaders.add","location":"packages/serverless/elide.http.api/-mutable-http-headers/add.html","searchKeys":["add","abstract fun add(key: HttpHeaders.HeaderName, value: HttpString)","elide.http.api.MutableHttpHeaders.add"]},{"name":"abstract fun copy(source: HttpRequest, method: HttpMethod? = null, path: HttpString? = null, query: HttpMapping<HttpString, HttpString>? = null): HttpRequest","description":"elide.http.api.HttpRequest.Factory.copy","location":"packages/serverless/elide.http.api/-http-request/-factory/copy.html","searchKeys":["copy","abstract fun copy(source: HttpRequest, method: HttpMethod? = null, path: HttpString? = null, query: HttpMapping<HttpString, HttpString>? = null): HttpRequest","elide.http.api.HttpRequest.Factory.copy"]},{"name":"abstract fun create(): MutableHttpHeaders","description":"elide.http.api.MutableHttpHeaders.Factory.create","location":"packages/serverless/elide.http.api/-mutable-http-headers/-factory/create.html","searchKeys":["create","abstract fun create(): MutableHttpHeaders","elide.http.api.MutableHttpHeaders.Factory.create"]},{"name":"abstract fun create(method: HttpMethod = Defaults.METHOD, path: HttpString = Defaults.PATH, query: HttpMapping<HttpString, HttpString>? = null): HttpRequest","description":"elide.http.api.HttpRequest.Factory.create","location":"packages/serverless/elide.http.api/-http-request/-factory/create.html","searchKeys":["create","abstract fun create(method: HttpMethod = Defaults.METHOD, path: HttpString = Defaults.PATH, query: HttpMapping<HttpString, HttpString>? = null): HttpRequest","elide.http.api.HttpRequest.Factory.create"]},{"name":"abstract fun getAll(key: HttpHeaders.HeaderName): Sequence<HttpString>","description":"elide.http.api.HttpHeaders.getAll","location":"packages/serverless/elide.http.api/-http-headers/get-all.html","searchKeys":["getAll","abstract fun getAll(key: HttpHeaders.HeaderName): Sequence<HttpString>","elide.http.api.HttpHeaders.getAll"]},{"name":"abstract fun of(collection: Collection<Pair<String, String>>): HttpHeaders","description":"elide.http.api.HttpHeaders.Factory.of","location":"packages/serverless/elide.http.api/-http-headers/-factory/of.html","searchKeys":["of","abstract fun of(collection: Collection<Pair<String, String>>): HttpHeaders","elide.http.api.HttpHeaders.Factory.of"]},{"name":"abstract fun of(map: Map<String, String>): HttpHeaders","description":"elide.http.api.HttpHeaders.Factory.of","location":"packages/serverless/elide.http.api/-http-headers/-factory/of.html","searchKeys":["of","abstract fun of(map: Map<String, String>): HttpHeaders","elide.http.api.HttpHeaders.Factory.of"]},{"name":"abstract fun of(pairs: Sequence<Pair<String, String>>): HttpHeaders","description":"elide.http.api.HttpHeaders.Factory.of","location":"packages/serverless/elide.http.api/-http-headers/-factory/of.html","searchKeys":["of","abstract fun of(pairs: Sequence<Pair<String, String>>): HttpHeaders","elide.http.api.HttpHeaders.Factory.of"]},{"name":"abstract fun of(vararg pairs: Pair<String, String>): HttpHeaders","description":"elide.http.api.HttpHeaders.Factory.of","location":"packages/serverless/elide.http.api/-http-headers/-factory/of.html","searchKeys":["of","abstract fun of(vararg pairs: Pair<String, String>): HttpHeaders","elide.http.api.HttpHeaders.Factory.of"]},{"name":"abstract fun remove(key: HttpHeaders.HeaderName, value: HttpString)","description":"elide.http.api.MutableHttpHeaders.remove","location":"packages/serverless/elide.http.api/-mutable-http-headers/remove.html","searchKeys":["remove","abstract fun remove(key: HttpHeaders.HeaderName, value: HttpString)","elide.http.api.MutableHttpHeaders.remove"]},{"name":"abstract operator fun contains(key: HttpHeaders.HeaderName): Boolean","description":"elide.http.api.HttpHeaders.contains","location":"packages/serverless/elide.http.api/-http-headers/contains.html","searchKeys":["contains","abstract operator fun contains(key: HttpHeaders.HeaderName): Boolean","elide.http.api.HttpHeaders.contains"]},{"name":"abstract operator fun set(key: HttpHeaders.HeaderName, value: HttpString)","description":"elide.http.api.MutableHttpHeaders.set","location":"packages/serverless/elide.http.api/-mutable-http-headers/set.html","searchKeys":["set","abstract operator fun set(key: HttpHeaders.HeaderName, value: HttpString)","elide.http.api.MutableHttpHeaders.set"]},{"name":"abstract operator override fun get(key: HttpHeaders.HeaderName): HttpHeaders.HeaderValue?","description":"elide.http.api.HttpHeaders.get","location":"packages/serverless/elide.http.api/-http-headers/get.html","searchKeys":["get","abstract operator override fun get(key: HttpHeaders.HeaderName): HttpHeaders.HeaderValue?","elide.http.api.HttpHeaders.get"]},{"name":"abstract override fun copy(source: HttpRequest, method: HttpMethod?, path: HttpString?, query: HttpMapping<HttpString, HttpString>?): MutableHttpRequest","description":"elide.http.api.MutableHttpRequest.Factory.copy","location":"packages/serverless/elide.http.api/-mutable-http-request/-factory/copy.html","searchKeys":["copy","abstract override fun copy(source: HttpRequest, method: HttpMethod?, path: HttpString?, query: HttpMapping<HttpString, HttpString>?): MutableHttpRequest","elide.http.api.MutableHttpRequest.Factory.copy"]},{"name":"abstract override fun create(method: HttpMethod, path: HttpString, query: HttpMapping<HttpString, HttpString>?): MutableHttpRequest","description":"elide.http.api.MutableHttpRequest.Factory.create","location":"packages/serverless/elide.http.api/-mutable-http-request/-factory/create.html","searchKeys":["create","abstract override fun create(method: HttpMethod, path: HttpString, query: HttpMapping<HttpString, HttpString>?): MutableHttpRequest","elide.http.api.MutableHttpRequest.Factory.create"]},{"name":"abstract override fun of(collection: Collection<Pair<String, String>>): MutableHttpHeaders","description":"elide.http.api.MutableHttpHeaders.Factory.of","location":"packages/serverless/elide.http.api/-mutable-http-headers/-factory/of.html","searchKeys":["of","abstract override fun of(collection: Collection<Pair<String, String>>): MutableHttpHeaders","elide.http.api.MutableHttpHeaders.Factory.of"]},{"name":"abstract override fun of(map: Map<String, String>): MutableHttpHeaders","description":"elide.http.api.MutableHttpHeaders.Factory.of","location":"packages/serverless/elide.http.api/-mutable-http-headers/-factory/of.html","searchKeys":["of","abstract override fun of(map: Map<String, String>): MutableHttpHeaders","elide.http.api.MutableHttpHeaders.Factory.of"]},{"name":"abstract override fun of(pairs: Sequence<Pair<String, String>>): MutableHttpHeaders","description":"elide.http.api.MutableHttpHeaders.Factory.of","location":"packages/serverless/elide.http.api/-mutable-http-headers/-factory/of.html","searchKeys":["of","abstract override fun of(pairs: Sequence<Pair<String, String>>): MutableHttpHeaders","elide.http.api.MutableHttpHeaders.Factory.of"]},{"name":"abstract override fun of(vararg pairs: Pair<String, String>): MutableHttpHeaders","description":"elide.http.api.MutableHttpHeaders.Factory.of","location":"packages/serverless/elide.http.api/-mutable-http-headers/-factory/of.html","searchKeys":["of","abstract override fun of(vararg pairs: Pair<String, String>): MutableHttpHeaders","elide.http.api.MutableHttpHeaders.Factory.of"]},{"name":"abstract override fun remove(key: HttpHeaders.HeaderName): HttpHeaders.HeaderValue?","description":"elide.http.api.MutableHttpHeaders.remove","location":"packages/serverless/elide.http.api/-mutable-http-headers/remove.html","searchKeys":["remove","abstract override fun remove(key: HttpHeaders.HeaderName): HttpHeaders.HeaderValue?","elide.http.api.MutableHttpHeaders.remove"]},{"name":"abstract override val body: MutableHttpPayload","description":"elide.http.api.MutableHttpMessage.body","location":"packages/serverless/elide.http.api/-mutable-http-message/body.html","searchKeys":["body","abstract override val body: MutableHttpPayload","elide.http.api.MutableHttpMessage.body"]},{"name":"abstract override val headers: MutableHttpHeaders","description":"elide.http.api.MutableHttpMessage.headers","location":"packages/serverless/elide.http.api/-mutable-http-message/headers.html","searchKeys":["headers","abstract override val headers: MutableHttpHeaders","elide.http.api.MutableHttpMessage.headers"]},{"name":"abstract override val trailers: HttpHeaders","description":"elide.http.api.MutableHttpResponse.trailers","location":"packages/serverless/elide.http.api/-mutable-http-response/trailers.html","searchKeys":["trailers","abstract override val trailers: HttpHeaders","elide.http.api.MutableHttpResponse.trailers"]},{"name":"abstract override var method: HttpMethod","description":"elide.http.api.MutableHttpRequest.method","location":"packages/serverless/elide.http.api/-mutable-http-request/method.html","searchKeys":["method","abstract override var method: HttpMethod","elide.http.api.MutableHttpRequest.method"]},{"name":"abstract override var path: HttpString","description":"elide.http.api.MutableHttpRequest.path","location":"packages/serverless/elide.http.api/-mutable-http-request/path.html","searchKeys":["path","abstract override var path: HttpString","elide.http.api.MutableHttpRequest.path"]},{"name":"abstract override var query: MutableHttpMapping<HttpString, HttpString>","description":"elide.http.api.MutableHttpRequest.query","location":"packages/serverless/elide.http.api/-mutable-http-request/query.html","searchKeys":["query","abstract override var query: MutableHttpMapping<HttpString, HttpString>","elide.http.api.MutableHttpRequest.query"]},{"name":"abstract override var status: HttpStatus","description":"elide.http.api.MutableHttpResponse.status","location":"packages/serverless/elide.http.api/-mutable-http-response/status.html","searchKeys":["status","abstract override var status: HttpStatus","elide.http.api.MutableHttpResponse.status"]},{"name":"abstract override var url: URL","description":"elide.http.api.MutableHttpRequest.url","location":"packages/serverless/elide.http.api/-mutable-http-request/url.html","searchKeys":["url","abstract override var url: URL","elide.http.api.MutableHttpRequest.url"]},{"name":"abstract val allValues: Collection<Value>","description":"elide.http.api.HttpHeaderValue.allValues","location":"packages/serverless/elide.http.api/-http-header-value/all-values.html","searchKeys":["allValues","abstract val allValues: Collection<Value>","elide.http.api.HttpHeaderValue.allValues"]},{"name":"abstract val allValues: List<HttpString>","description":"elide.http.api.HttpHeaders.HeaderValue.allValues","location":"packages/serverless/elide.http.api/-http-headers/-header-value/all-values.html","searchKeys":["allValues","abstract val allValues: List<HttpString>","elide.http.api.HttpHeaders.HeaderValue.allValues"]},{"name":"abstract val asString: String","description":"elide.http.api.HttpHeaderValue.asString","location":"packages/serverless/elide.http.api/-http-header-value/as-string.html","searchKeys":["asString","abstract val asString: String","elide.http.api.HttpHeaderValue.asString"]},{"name":"abstract val asString: String","description":"elide.http.api.HttpHeaders.HeaderValue.asString","location":"packages/serverless/elide.http.api/-http-headers/-header-value/as-string.html","searchKeys":["asString","abstract val asString: String","elide.http.api.HttpHeaders.HeaderValue.asString"]},{"name":"abstract val body: Boolean","description":"elide.http.api.HttpMethod.body","location":"packages/serverless/elide.http.api/-http-method/body.html","searchKeys":["body","abstract val body: Boolean","elide.http.api.HttpMethod.body"]},{"name":"abstract val body: HttpPayload","description":"elide.http.api.HttpMessage.body","location":"packages/serverless/elide.http.api/-http-message/body.html","searchKeys":["body","abstract val body: HttpPayload","elide.http.api.HttpMessage.body"]},{"name":"abstract val bytes: HttpBytes","description":"elide.http.api.HttpPayload.bytes","location":"packages/serverless/elide.http.api/-http-payload/bytes.html","searchKeys":["bytes","abstract val bytes: HttpBytes","elide.http.api.HttpPayload.bytes"]},{"name":"abstract val code: HttpStatusCode","description":"elide.http.api.HttpStatus.code","location":"packages/serverless/elide.http.api/-http-status/code.html","searchKeys":["code","abstract val code: HttpStatusCode","elide.http.api.HttpStatus.code"]},{"name":"abstract val contentType: Mimetype?","description":"elide.http.api.HttpPayload.contentType","location":"packages/serverless/elide.http.api/-http-payload/content-type.html","searchKeys":["contentType","abstract val contentType: Mimetype?","elide.http.api.HttpPayload.contentType"]},{"name":"abstract val headers: HttpHeaders","description":"elide.http.api.HttpMessage.headers","location":"packages/serverless/elide.http.api/-http-message/headers.html","searchKeys":["headers","abstract val headers: HttpHeaders","elide.http.api.HttpMessage.headers"]},{"name":"abstract val idempotent: Boolean","description":"elide.http.api.HttpMethod.idempotent","location":"packages/serverless/elide.http.api/-http-method/idempotent.html","searchKeys":["idempotent","abstract val idempotent: Boolean","elide.http.api.HttpMethod.idempotent"]},{"name":"abstract val method: HttpMethod","description":"elide.http.api.HttpRequest.method","location":"packages/serverless/elide.http.api/-http-request/method.html","searchKeys":["method","abstract val method: HttpMethod","elide.http.api.HttpRequest.method"]},{"name":"abstract val mutable: Boolean","description":"elide.http.api.HttpPayload.mutable","location":"packages/serverless/elide.http.api/-http-payload/mutable.html","searchKeys":["mutable","abstract val mutable: Boolean","elide.http.api.HttpPayload.mutable"]},{"name":"abstract val name: HttpHeaders.HeaderName","description":"elide.http.api.HttpHeader.name","location":"packages/serverless/elide.http.api/-http-header/name.html","searchKeys":["name","abstract val name: HttpHeaders.HeaderName","elide.http.api.HttpHeader.name"]},{"name":"abstract val name: HttpString","description":"elide.http.api.HttpMethod.name","location":"packages/serverless/elide.http.api/-http-method/name.html","searchKeys":["name","abstract val name: HttpString","elide.http.api.HttpMethod.name"]},{"name":"abstract val path: HttpString","description":"elide.http.api.HttpRequest.path","location":"packages/serverless/elide.http.api/-http-request/path.html","searchKeys":["path","abstract val path: HttpString","elide.http.api.HttpRequest.path"]},{"name":"abstract val present: Boolean","description":"elide.http.api.HttpPayload.present","location":"packages/serverless/elide.http.api/-http-payload/present.html","searchKeys":["present","abstract val present: Boolean","elide.http.api.HttpPayload.present"]},{"name":"abstract val query: HttpMapping<HttpString, HttpString>","description":"elide.http.api.HttpRequest.query","location":"packages/serverless/elide.http.api/-http-request/query.html","searchKeys":["query","abstract val query: HttpMapping<HttpString, HttpString>","elide.http.api.HttpRequest.query"]},{"name":"abstract val size: ULong","description":"elide.http.api.HttpPayload.size","location":"packages/serverless/elide.http.api/-http-payload/size.html","searchKeys":["size","abstract val size: ULong","elide.http.api.HttpPayload.size"]},{"name":"abstract val status: HttpStatus","description":"elide.http.api.HttpResponse.status","location":"packages/serverless/elide.http.api/-http-response/status.html","searchKeys":["status","abstract val status: HttpStatus","elide.http.api.HttpResponse.status"]},{"name":"abstract val text: HttpString?","description":"elide.http.api.HttpStatus.text","location":"packages/serverless/elide.http.api/-http-status/text.html","searchKeys":["text","abstract val text: HttpString?","elide.http.api.HttpStatus.text"]},{"name":"abstract val trailers: HttpHeaders","description":"elide.http.api.HttpResponse.trailers","location":"packages/serverless/elide.http.api/-http-response/trailers.html","searchKeys":["trailers","abstract val trailers: HttpHeaders","elide.http.api.HttpResponse.trailers"]},{"name":"abstract val type: HttpMessageType","description":"elide.http.api.HttpMessage.type","location":"packages/serverless/elide.http.api/-http-message/type.html","searchKeys":["type","abstract val type: HttpMessageType","elide.http.api.HttpMessage.type"]},{"name":"abstract val type: HttpStatus.Type?","description":"elide.http.api.HttpStatus.type","location":"packages/serverless/elide.http.api/-http-status/type.html","searchKeys":["type","abstract val type: HttpStatus.Type?","elide.http.api.HttpStatus.type"]},{"name":"abstract val type: KClass<Value>","description":"elide.http.api.HttpHeader.type","location":"packages/serverless/elide.http.api/-http-header/type.html","searchKeys":["type","abstract val type: KClass<Value>","elide.http.api.HttpHeader.type"]},{"name":"abstract val url: URL","description":"elide.http.api.HttpRequest.url","location":"packages/serverless/elide.http.api/-http-request/url.html","searchKeys":["url","abstract val url: URL","elide.http.api.HttpRequest.url"]},{"name":"abstract val value: Value","description":"elide.http.api.HttpHeaderValue.value","location":"packages/serverless/elide.http.api/-http-header-value/value.html","searchKeys":["value","abstract val value: Value","elide.http.api.HttpHeaderValue.value"]},{"name":"abstract val version: HttpVersion","description":"elide.http.api.HttpMessage.version","location":"packages/serverless/elide.http.api/-http-message/version.html","searchKeys":["version","abstract val version: HttpVersion","elide.http.api.HttpMessage.version"]},{"name":"abstract val write: Boolean","description":"elide.http.api.HttpMethod.write","location":"packages/serverless/elide.http.api/-http-method/write.html","searchKeys":["write","abstract val write: Boolean","elide.http.api.HttpMethod.write"]},{"name":"class Bytes(val bytes: HttpBytes, val contentType: Mimetype? = null) : HttpPayload","description":"elide.http.HttpPayload.Bytes","location":"packages/serverless/elide.http/-http-payload/-bytes/index.html","searchKeys":["Bytes","class Bytes(val bytes: HttpBytes, val contentType: Mimetype? = null) : HttpPayload","elide.http.HttpPayload.Bytes"]},{"name":"class Bytes(var bytes: HttpBytes, var contentType: Mimetype? = null) : MutableHttpPayload","description":"elide.http.MutableHttpPayload.Bytes","location":"packages/serverless/elide.http/-mutable-http-payload/-bytes/index.html","searchKeys":["Bytes","class Bytes(var bytes: HttpBytes, var contentType: Mimetype? = null) : MutableHttpPayload","elide.http.MutableHttpPayload.Bytes"]},{"name":"class CaseInsensitiveHttpString : CharSequence","description":"elide.http.api.CaseInsensitiveHttpString","location":"packages/serverless/elide.http.api/-case-insensitive-http-string/index.html","searchKeys":["CaseInsensitiveHttpString","class CaseInsensitiveHttpString : CharSequence","elide.http.api.CaseInsensitiveHttpString"]},{"name":"class HeaderName : CharSequence, Comparable<HttpHeaders.HeaderName> ","description":"elide.http.api.HttpHeaders.HeaderName","location":"packages/serverless/elide.http.api/-http-headers/-header-name/index.html","searchKeys":["HeaderName","class HeaderName : CharSequence, Comparable<HttpHeaders.HeaderName> ","elide.http.api.HttpHeaders.HeaderName"]},{"name":"class HttpHeaders : HttpHeaders, Map<HttpHeaders.HeaderName, HttpHeaders.HeaderValue> ","description":"elide.http.HttpHeaders","location":"packages/serverless/elide.http/-http-headers/index.html","searchKeys":["HttpHeaders","class HttpHeaders : HttpHeaders, Map<HttpHeaders.HeaderName, HttpHeaders.HeaderValue> ","elide.http.HttpHeaders"]},{"name":"class HttpMapping<Key : Comparable<Key>, HttpText, Value : HttpText> : HttpMapping<Key, Value> , SortedMap<Key, Value> ","description":"elide.http.HttpMapping","location":"packages/serverless/elide.http/-http-mapping/index.html","searchKeys":["HttpMapping","class HttpMapping<Key : Comparable<Key>, HttpText, Value : HttpText> : HttpMapping<Key, Value> , SortedMap<Key, Value> ","elide.http.HttpMapping"]},{"name":"class MutableHttpHeaders : MutableHttpHeaders, MutableMap<HttpHeaders.HeaderName, HttpHeaders.HeaderValue> ","description":"elide.http.MutableHttpHeaders","location":"packages/serverless/elide.http/-mutable-http-headers/index.html","searchKeys":["MutableHttpHeaders","class MutableHttpHeaders : MutableHttpHeaders, MutableMap<HttpHeaders.HeaderName, HttpHeaders.HeaderValue> ","elide.http.MutableHttpHeaders"]},{"name":"class MutableHttpMapping<Key : Comparable<Key>, HttpText, Value : HttpText> : MutableHttpMapping<Key, Value> , MutableSortedMap<Key, Value> ","description":"elide.http.MutableHttpMapping","location":"packages/serverless/elide.http/-mutable-http-mapping/index.html","searchKeys":["MutableHttpMapping","class MutableHttpMapping<Key : Comparable<Key>, HttpText, Value : HttpText> : MutableHttpMapping<Key, Value> , MutableSortedMap<Key, Value> ","elide.http.MutableHttpMapping"]},{"name":"class Text(text: HttpBytes, val contentType: Mimetype? = null, val encoding: Encoding = Encoding.UTF_8) : HttpPayload","description":"elide.http.HttpPayload.Text","location":"packages/serverless/elide.http/-http-payload/-text/index.html","searchKeys":["Text","class Text(text: HttpBytes, val contentType: Mimetype? = null, val encoding: Encoding = Encoding.UTF_8) : HttpPayload","elide.http.HttpPayload.Text"]},{"name":"class Text(text: HttpBytes, var contentType: Mimetype? = null, var encoding: Encoding = Encoding.UTF_8) : MutableHttpPayload","description":"elide.http.MutableHttpPayload.Text","location":"packages/serverless/elide.http/-mutable-http-payload/-text/index.html","searchKeys":["Text","class Text(text: HttpBytes, var contentType: Mimetype? = null, var encoding: Encoding = Encoding.UTF_8) : MutableHttpPayload","elide.http.MutableHttpPayload.Text"]},{"name":"const val PATH: HttpString","description":"elide.http.api.HttpRequest.Defaults.PATH","location":"packages/serverless/elide.http.api/-http-request/-defaults/-p-a-t-h.html","searchKeys":["PATH","const val PATH: HttpString","elide.http.api.HttpRequest.Defaults.PATH"]},{"name":"constructor()","description":"elide.http.HttpRequest.HttpRequest","location":"packages/serverless/elide.http/-http-request/-http-request.html","searchKeys":["HttpRequest","constructor()","elide.http.HttpRequest.HttpRequest"]},{"name":"constructor()","description":"elide.http.HttpResponse.HttpResponse","location":"packages/serverless/elide.http/-http-response/-http-response.html","searchKeys":["HttpResponse","constructor()","elide.http.HttpResponse.HttpResponse"]},{"name":"constructor()","description":"elide.http.MutableHttpRequest.MutableHttpRequest","location":"packages/serverless/elide.http/-mutable-http-request/-mutable-http-request.html","searchKeys":["MutableHttpRequest","constructor()","elide.http.MutableHttpRequest.MutableHttpRequest"]},{"name":"constructor()","description":"elide.http.MutableHttpResponse.MutableHttpResponse","location":"packages/serverless/elide.http/-mutable-http-response/-mutable-http-response.html","searchKeys":["MutableHttpResponse","constructor()","elide.http.MutableHttpResponse.MutableHttpResponse"]},{"name":"constructor(body: MutableHttpPayload? = null, version: HttpVersion = HTTP_2, headers: MutableHttpHeaders = MutableHttpHeaders.create())","description":"elide.http.MutableHttpMessage.MutableHttpMessage","location":"packages/serverless/elide.http/-mutable-http-message/-mutable-http-message.html","searchKeys":["MutableHttpMessage","constructor(body: MutableHttpPayload? = null, version: HttpVersion = HTTP_2, headers: MutableHttpHeaders = MutableHttpHeaders.create())","elide.http.MutableHttpMessage.MutableHttpMessage"]},{"name":"constructor(bytes: HttpBytes, contentType: Mimetype? = null)","description":"elide.http.HttpPayload.Bytes.Bytes","location":"packages/serverless/elide.http/-http-payload/-bytes/-bytes.html","searchKeys":["Bytes","constructor(bytes: HttpBytes, contentType: Mimetype? = null)","elide.http.HttpPayload.Bytes.Bytes"]},{"name":"constructor(bytes: HttpBytes, contentType: Mimetype? = null)","description":"elide.http.MutableHttpPayload.Bytes.Bytes","location":"packages/serverless/elide.http/-mutable-http-payload/-bytes/-bytes.html","searchKeys":["Bytes","constructor(bytes: HttpBytes, contentType: Mimetype? = null)","elide.http.MutableHttpPayload.Bytes.Bytes"]},{"name":"constructor(code: HttpStatusCode, reason: HttpString? = null)","description":"elide.http.HttpStatus.HttpStatusInfo.HttpStatusInfo","location":"packages/serverless/elide.http/-http-status/-http-status-info/-http-status-info.html","searchKeys":["HttpStatusInfo","constructor(code: HttpStatusCode, reason: HttpString? = null)","elide.http.HttpStatus.HttpStatusInfo.HttpStatusInfo"]},{"name":"constructor(method: StandardHttpMethod)","description":"elide.http.HttpMethod.Standard.Standard","location":"packages/serverless/elide.http/-http-method/-standard/-standard.html","searchKeys":["Standard","constructor(method: StandardHttpMethod)","elide.http.HttpMethod.Standard.Standard"]},{"name":"constructor(name: String, body: Boolean = false, idempotent: Boolean = false, write: Boolean = false)","description":"elide.http.HttpMethod.Custom.Custom","location":"packages/serverless/elide.http/-http-method/-custom/-custom.html","searchKeys":["Custom","constructor(name: String, body: Boolean = false, idempotent: Boolean = false, write: Boolean = false)","elide.http.HttpMethod.Custom.Custom"]},{"name":"constructor(statusInfo: HttpStatus.HttpStatusInfo)","description":"elide.http.HttpStatus.HttpStatus","location":"packages/serverless/elide.http/-http-status/-http-status.html","searchKeys":["HttpStatus","constructor(statusInfo: HttpStatus.HttpStatusInfo)","elide.http.HttpStatus.HttpStatus"]},{"name":"constructor(text: HttpBytes, contentType: Mimetype? = null, encoding: Encoding = Encoding.UTF_8)","description":"elide.http.HttpPayload.Text.Text","location":"packages/serverless/elide.http/-http-payload/-text/-text.html","searchKeys":["Text","constructor(text: HttpBytes, contentType: Mimetype? = null, encoding: Encoding = Encoding.UTF_8)","elide.http.HttpPayload.Text.Text"]},{"name":"constructor(text: HttpBytes, contentType: Mimetype? = null, encoding: Encoding = Encoding.UTF_8)","description":"elide.http.MutableHttpPayload.Text.Text","location":"packages/serverless/elide.http/-mutable-http-payload/-text/-text.html","searchKeys":["Text","constructor(text: HttpBytes, contentType: Mimetype? = null, encoding: Encoding = Encoding.UTF_8)","elide.http.MutableHttpPayload.Text.Text"]},{"name":"constructor(urlInfo: URL.ParsedURL)","description":"elide.net.URL.URL","location":"packages/serverless/elide.net/-u-r-l/-u-r-l.html","searchKeys":["URL","constructor(urlInfo: URL.ParsedURL)","elide.net.URL.URL"]},{"name":"constructor(value: String)","description":"elide.http.api.HttpHeaders.HeaderValue.SingleValue.SingleValue","location":"packages/serverless/elide.http.api/-http-headers/-header-value/-single-value/-single-value.html","searchKeys":["SingleValue","constructor(value: String)","elide.http.api.HttpHeaders.HeaderValue.SingleValue.SingleValue"]},{"name":"constructor(values: Array<out String>)","description":"elide.http.api.HttpHeaders.HeaderValue.MultiValue.MultiValue","location":"packages/serverless/elide.http.api/-http-headers/-header-value/-multi-value/-multi-value.html","searchKeys":["MultiValue","constructor(values: Array<out String>)","elide.http.api.HttpHeaders.HeaderValue.MultiValue.MultiValue"]},{"name":"constructor(version: HttpVersion = HTTP_2, headers: HttpHeaders = HttpHeaders.empty())","description":"elide.http.HttpMessage.HttpMessage","location":"packages/serverless/elide.http/-http-message/-http-message.html","searchKeys":["HttpMessage","constructor(version: HttpVersion = HTTP_2, headers: HttpHeaders = HttpHeaders.empty())","elide.http.HttpMessage.HttpMessage"]},{"name":"data class Custom(val name: String, val body: Boolean = false, val idempotent: Boolean = false, val write: Boolean = false) : HttpMethod","description":"elide.http.HttpMethod.Custom","location":"packages/serverless/elide.http/-http-method/-custom/index.html","searchKeys":["Custom","data class Custom(val name: String, val body: Boolean = false, val idempotent: Boolean = false, val write: Boolean = false) : HttpMethod","elide.http.HttpMethod.Custom"]},{"name":"data class HttpStatusInfo(val code: HttpStatusCode, val reason: HttpString? = null)","description":"elide.http.HttpStatus.HttpStatusInfo","location":"packages/serverless/elide.http/-http-status/-http-status-info/index.html","searchKeys":["HttpStatusInfo","data class HttpStatusInfo(val code: HttpStatusCode, val reason: HttpString? = null)","elide.http.HttpStatus.HttpStatusInfo"]},{"name":"data object ContentLanguage","description":"elide.http.api.HttpHeaderValue.ContentLanguage","location":"packages/serverless/elide.http.api/-http-header-value/-content-language/index.html","searchKeys":["ContentLanguage","data object ContentLanguage","elide.http.api.HttpHeaderValue.ContentLanguage"]},{"name":"data object ContentType","description":"elide.http.api.HttpHeaderValue.ContentType","location":"packages/serverless/elide.http.api/-http-header-value/-content-type/index.html","searchKeys":["ContentType","data object ContentType","elide.http.api.HttpHeaderValue.ContentType"]},{"name":"data object Defaults","description":"elide.http.api.HttpRequest.Defaults","location":"packages/serverless/elide.http.api/-http-request/-defaults/index.html","searchKeys":["Defaults","data object Defaults","elide.http.api.HttpRequest.Defaults"]},{"name":"data object Empty : HttpPayload","description":"elide.http.HttpPayload.Empty","location":"packages/serverless/elide.http/-http-payload/-empty/index.html","searchKeys":["Empty","data object Empty : HttpPayload","elide.http.HttpPayload.Empty"]},{"name":"data object Empty : MutableHttpPayload","description":"elide.http.MutableHttpPayload.Empty","location":"packages/serverless/elide.http/-mutable-http-payload/-empty/index.html","searchKeys":["Empty","data object Empty : MutableHttpPayload","elide.http.MutableHttpPayload.Empty"]},{"name":"enum HttpMessageType : Enum<HttpMessageType> ","description":"elide.http.api.HttpMessageType","location":"packages/serverless/elide.http.api/-http-message-type/index.html","searchKeys":["HttpMessageType","enum HttpMessageType : Enum<HttpMessageType> ","elide.http.api.HttpMessageType"]},{"name":"enum HttpStatusCode : Enum<HttpStatusCode> ","description":"elide.http.HttpStatusCode","location":"packages/serverless/elide.http/-http-status-code/index.html","searchKeys":["HttpStatusCode","enum HttpStatusCode : Enum<HttpStatusCode> ","elide.http.HttpStatusCode"]},{"name":"enum HttpVersion : Enum<HttpVersion> ","description":"elide.http.api.HttpVersion","location":"packages/serverless/elide.http.api/-http-version/index.html","searchKeys":["HttpVersion","enum HttpVersion : Enum<HttpVersion> ","elide.http.api.HttpVersion"]},{"name":"enum StandardHttpMethod : Enum<StandardHttpMethod> , HttpMethod","description":"elide.http.api.StandardHttpMethod","location":"packages/serverless/elide.http.api/-standard-http-method/index.html","searchKeys":["StandardHttpMethod","enum StandardHttpMethod : Enum<StandardHttpMethod> , HttpMethod","elide.http.api.StandardHttpMethod"]},{"name":"enum Type : Enum<HttpStatus.Type> ","description":"elide.http.api.HttpStatus.Type","location":"packages/serverless/elide.http.api/-http-status/-type/index.html","searchKeys":["Type","enum Type : Enum<HttpStatus.Type> ","elide.http.api.HttpStatus.Type"]},{"name":"expect class HttpBytes","description":"elide.http.HttpBytes","location":"packages/serverless/elide.http/-http-bytes/index.html","searchKeys":["HttpBytes","expect class HttpBytes","elide.http.HttpBytes"]},{"name":"expect class HttpRequest : HttpMessage, HttpRequest","description":"elide.http.HttpRequest","location":"packages/serverless/elide.http/-http-request/index.html","searchKeys":["HttpRequest","expect class HttpRequest : HttpMessage, HttpRequest","elide.http.HttpRequest"]},{"name":"expect class HttpResponse : HttpMessage, HttpResponse","description":"elide.http.HttpResponse","location":"packages/serverless/elide.http/-http-response/index.html","searchKeys":["HttpResponse","expect class HttpResponse : HttpMessage, HttpResponse","elide.http.HttpResponse"]},{"name":"expect class MutableHttpRequest : MutableHttpMessage, MutableHttpRequest","description":"elide.http.MutableHttpRequest","location":"packages/serverless/elide.http/-mutable-http-request/index.html","searchKeys":["MutableHttpRequest","expect class MutableHttpRequest : MutableHttpMessage, MutableHttpRequest","elide.http.MutableHttpRequest"]},{"name":"expect class MutableHttpResponse : MutableHttpMessage, MutableHttpResponse","description":"elide.http.MutableHttpResponse","location":"packages/serverless/elide.http/-mutable-http-response/index.html","searchKeys":["MutableHttpResponse","expect class MutableHttpResponse : MutableHttpMessage, MutableHttpResponse","elide.http.MutableHttpResponse"]},{"name":"expect object Companion","description":"elide.http.HttpBytes.Companion","location":"packages/serverless/elide.http/-http-bytes/-companion/index.html","searchKeys":["Companion","expect object Companion","elide.http.HttpBytes.Companion"]},{"name":"expect object Companion","description":"elide.http.HttpResponse.Companion","location":"packages/serverless/elide.http/-http-response/-companion/index.html","searchKeys":["Companion","expect object Companion","elide.http.HttpResponse.Companion"]},{"name":"expect object Companion : HttpRequest.Factory","description":"elide.http.HttpRequest.Companion","location":"packages/serverless/elide.http/-http-request/-companion/index.html","searchKeys":["Companion","expect object Companion : HttpRequest.Factory","elide.http.HttpRequest.Companion"]},{"name":"expect open override fun copy(source: HttpRequest, method: HttpMethod?, path: HttpString?, query: HttpMapping<HttpString, HttpString>?): HttpRequest","description":"elide.http.HttpRequest.Companion.copy","location":"packages/serverless/elide.http/-http-request/-companion/copy.html","searchKeys":["copy","expect open override fun copy(source: HttpRequest, method: HttpMethod?, path: HttpString?, query: HttpMapping<HttpString, HttpString>?): HttpRequest","elide.http.HttpRequest.Companion.copy"]},{"name":"expect open override fun create(method: HttpMethod, path: HttpString, query: HttpMapping<HttpString, HttpString>?): HttpRequest","description":"elide.http.HttpRequest.Companion.create","location":"packages/serverless/elide.http/-http-request/-companion/create.html","searchKeys":["create","expect open override fun create(method: HttpMethod, path: HttpString, query: HttpMapping<HttpString, HttpString>?): HttpRequest","elide.http.HttpRequest.Companion.create"]},{"name":"expect open override val method: HttpMethod","description":"elide.http.HttpRequest.method","location":"packages/serverless/elide.http/-http-request/method.html","searchKeys":["method","expect open override val method: HttpMethod","elide.http.HttpRequest.method"]},{"name":"expect open override val path: HttpString","description":"elide.http.HttpRequest.path","location":"packages/serverless/elide.http/-http-request/path.html","searchKeys":["path","expect open override val path: HttpString","elide.http.HttpRequest.path"]},{"name":"expect open override val query: HttpMapping<HttpString, HttpString>","description":"elide.http.HttpRequest.query","location":"packages/serverless/elide.http/-http-request/query.html","searchKeys":["query","expect open override val query: HttpMapping<HttpString, HttpString>","elide.http.HttpRequest.query"]},{"name":"expect open override val status: HttpStatus","description":"elide.http.HttpResponse.status","location":"packages/serverless/elide.http/-http-response/status.html","searchKeys":["status","expect open override val status: HttpStatus","elide.http.HttpResponse.status"]},{"name":"expect open override val trailers: HttpHeaders","description":"elide.http.HttpResponse.trailers","location":"packages/serverless/elide.http/-http-response/trailers.html","searchKeys":["trailers","expect open override val trailers: HttpHeaders","elide.http.HttpResponse.trailers"]},{"name":"expect open override val url: URL","description":"elide.http.HttpRequest.url","location":"packages/serverless/elide.http/-http-request/url.html","searchKeys":["url","expect open override val url: URL","elide.http.HttpRequest.url"]},{"name":"expect open override var method: HttpMethod","description":"elide.http.MutableHttpRequest.method","location":"packages/serverless/elide.http/-mutable-http-request/method.html","searchKeys":["method","expect open override var method: HttpMethod","elide.http.MutableHttpRequest.method"]},{"name":"expect open override var path: HttpString","description":"elide.http.MutableHttpRequest.path","location":"packages/serverless/elide.http/-mutable-http-request/path.html","searchKeys":["path","expect open override var path: HttpString","elide.http.MutableHttpRequest.path"]},{"name":"expect open override var query: MutableHttpMapping<HttpString, HttpString>","description":"elide.http.MutableHttpRequest.query","location":"packages/serverless/elide.http/-mutable-http-request/query.html","searchKeys":["query","expect open override var query: MutableHttpMapping<HttpString, HttpString>","elide.http.MutableHttpRequest.query"]},{"name":"expect open override var status: HttpStatus","description":"elide.http.MutableHttpResponse.status","location":"packages/serverless/elide.http/-mutable-http-response/status.html","searchKeys":["status","expect open override var status: HttpStatus","elide.http.MutableHttpResponse.status"]},{"name":"expect open override var trailers: HttpHeaders","description":"elide.http.MutableHttpResponse.trailers","location":"packages/serverless/elide.http/-mutable-http-response/trailers.html","searchKeys":["trailers","expect open override var trailers: HttpHeaders","elide.http.MutableHttpResponse.trailers"]},{"name":"expect open override var url: URL","description":"elide.http.MutableHttpRequest.url","location":"packages/serverless/elide.http/-mutable-http-request/url.html","searchKeys":["url","expect open override var url: URL","elide.http.MutableHttpRequest.url"]},{"name":"expect val EMPTY: HttpBytes","description":"elide.http.HttpBytes.Companion.EMPTY","location":"packages/serverless/elide.http/-http-bytes/-companion/-e-m-p-t-y.html","searchKeys":["EMPTY","expect val EMPTY: HttpBytes","elide.http.HttpBytes.Companion.EMPTY"]},{"name":"expect val size: ULong","description":"elide.http.HttpBytes.size","location":"packages/serverless/elide.http/-http-bytes/size.html","searchKeys":["size","expect val size: ULong","elide.http.HttpBytes.size"]},{"name":"fun <Key : HttpText, Value : HttpText> empty(): MutableHttpMapping<Key, Value>","description":"elide.http.MutableHttpMapping.Companion.empty","location":"packages/serverless/elide.http/-mutable-http-mapping/-companion/empty.html","searchKeys":["empty","fun <Key : HttpText, Value : HttpText> empty(): MutableHttpMapping<Key, Value>","elide.http.MutableHttpMapping.Companion.empty"]},{"name":"fun empty(): HttpHeaders","description":"elide.http.HttpHeaders.Companion.empty","location":"packages/serverless/elide.http/-http-headers/-companion/empty.html","searchKeys":["empty","fun empty(): HttpHeaders","elide.http.HttpHeaders.Companion.empty"]},{"name":"fun fromCode(code: HttpStatusCode): HttpStatus.Type?","description":"elide.http.api.HttpStatus.Type.Companion.fromCode","location":"packages/serverless/elide.http.api/-http-status/-type/-companion/from-code.html","searchKeys":["fromCode","fun fromCode(code: HttpStatusCode): HttpStatus.Type?","elide.http.api.HttpStatus.Type.Companion.fromCode"]},{"name":"fun multi(values: Collection<String>): HttpHeaders.HeaderValue","description":"elide.http.api.HttpHeaders.HeaderValue.Companion.multi","location":"packages/serverless/elide.http.api/-http-headers/-header-value/-companion/multi.html","searchKeys":["multi","fun multi(values: Collection<String>): HttpHeaders.HeaderValue","elide.http.api.HttpHeaders.HeaderValue.Companion.multi"]},{"name":"fun multi(vararg values: String): HttpHeaders.HeaderValue","description":"elide.http.api.HttpHeaders.HeaderValue.Companion.multi","location":"packages/serverless/elide.http.api/-http-headers/-header-value/-companion/multi.html","searchKeys":["multi","fun multi(vararg values: String): HttpHeaders.HeaderValue","elide.http.api.HttpHeaders.HeaderValue.Companion.multi"]},{"name":"fun mutable(collection: Collection<Pair<String, String>>): MutableHttpHeaders","description":"elide.http.HttpHeaders.Companion.mutable","location":"packages/serverless/elide.http/-http-headers/-companion/mutable.html","searchKeys":["mutable","fun mutable(collection: Collection<Pair<String, String>>): MutableHttpHeaders","elide.http.HttpHeaders.Companion.mutable"]},{"name":"fun mutable(collection: Sequence<Pair<String, String>>): MutableHttpHeaders","description":"elide.http.HttpHeaders.Companion.mutable","location":"packages/serverless/elide.http/-http-headers/-companion/mutable.html","searchKeys":["mutable","fun mutable(collection: Sequence<Pair<String, String>>): MutableHttpHeaders","elide.http.HttpHeaders.Companion.mutable"]},{"name":"fun mutable(map: Map<String, String>): MutableHttpHeaders","description":"elide.http.HttpHeaders.Companion.mutable","location":"packages/serverless/elide.http/-http-headers/-companion/mutable.html","searchKeys":["mutable","fun mutable(map: Map<String, String>): MutableHttpHeaders","elide.http.HttpHeaders.Companion.mutable"]},{"name":"fun mutable(vararg pairs: Pair<String, String>): MutableHttpHeaders","description":"elide.http.HttpHeaders.Companion.mutable","location":"packages/serverless/elide.http/-http-headers/-companion/mutable.html","searchKeys":["mutable","fun mutable(vararg pairs: Pair<String, String>): MutableHttpHeaders","elide.http.HttpHeaders.Companion.mutable"]},{"name":"fun of(name: String): HttpHeaders.HeaderName","description":"elide.http.api.HttpHeaders.HeaderName.Companion.of","location":"packages/serverless/elide.http.api/-http-headers/-header-name/-companion/of.html","searchKeys":["of","fun of(name: String): HttpHeaders.HeaderName","elide.http.api.HttpHeaders.HeaderName.Companion.of"]},{"name":"fun of(value: Collection<String>): HttpHeaders.HeaderValue","description":"elide.http.api.HttpHeaders.HeaderValue.Companion.of","location":"packages/serverless/elide.http.api/-http-headers/-header-value/-companion/of.html","searchKeys":["of","fun of(value: Collection<String>): HttpHeaders.HeaderValue","elide.http.api.HttpHeaders.HeaderValue.Companion.of"]},{"name":"fun of(value: HttpString): CaseInsensitiveHttpString","description":"elide.http.api.CaseInsensitiveHttpString.Companion.of","location":"packages/serverless/elide.http.api/-case-insensitive-http-string/-companion/of.html","searchKeys":["of","fun of(value: HttpString): CaseInsensitiveHttpString","elide.http.api.CaseInsensitiveHttpString.Companion.of"]},{"name":"fun single(value: String): HttpHeaders.HeaderValue","description":"elide.http.api.HttpHeaders.HeaderValue.Companion.single","location":"packages/serverless/elide.http.api/-http-headers/-header-value/-companion/single.html","searchKeys":["single","fun single(value: String): HttpHeaders.HeaderValue","elide.http.api.HttpHeaders.HeaderValue.Companion.single"]},{"name":"fun valueOf(value: String): HttpMessageType","description":"elide.http.api.HttpMessageType.valueOf","location":"packages/serverless/elide.http.api/-http-message-type/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): HttpMessageType","elide.http.api.HttpMessageType.valueOf"]},{"name":"fun valueOf(value: String): HttpStatus.Type","description":"elide.http.api.HttpStatus.Type.valueOf","location":"packages/serverless/elide.http.api/-http-status/-type/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): HttpStatus.Type","elide.http.api.HttpStatus.Type.valueOf"]},{"name":"fun valueOf(value: String): HttpStatusCode","description":"elide.http.HttpStatusCode.valueOf","location":"packages/serverless/elide.http/-http-status-code/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): HttpStatusCode","elide.http.HttpStatusCode.valueOf"]},{"name":"fun valueOf(value: String): HttpVersion","description":"elide.http.api.HttpVersion.valueOf","location":"packages/serverless/elide.http.api/-http-version/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): HttpVersion","elide.http.api.HttpVersion.valueOf"]},{"name":"fun valueOf(value: String): StandardHttpMethod","description":"elide.http.api.StandardHttpMethod.valueOf","location":"packages/serverless/elide.http.api/-standard-http-method/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): StandardHttpMethod","elide.http.api.StandardHttpMethod.valueOf"]},{"name":"fun values(): Array<HttpMessageType>","description":"elide.http.api.HttpMessageType.values","location":"packages/serverless/elide.http.api/-http-message-type/values.html","searchKeys":["values","fun values(): Array<HttpMessageType>","elide.http.api.HttpMessageType.values"]},{"name":"fun values(): Array<HttpStatus.Type>","description":"elide.http.api.HttpStatus.Type.values","location":"packages/serverless/elide.http.api/-http-status/-type/values.html","searchKeys":["values","fun values(): Array<HttpStatus.Type>","elide.http.api.HttpStatus.Type.values"]},{"name":"fun values(): Array<HttpStatusCode>","description":"elide.http.HttpStatusCode.values","location":"packages/serverless/elide.http/-http-status-code/values.html","searchKeys":["values","fun values(): Array<HttpStatusCode>","elide.http.HttpStatusCode.values"]},{"name":"fun values(): Array<HttpVersion>","description":"elide.http.api.HttpVersion.values","location":"packages/serverless/elide.http.api/-http-version/values.html","searchKeys":["values","fun values(): Array<HttpVersion>","elide.http.api.HttpVersion.values"]},{"name":"fun values(): Array<StandardHttpMethod>","description":"elide.http.api.StandardHttpMethod.values","location":"packages/serverless/elide.http.api/-standard-http-method/values.html","searchKeys":["values","fun values(): Array<StandardHttpMethod>","elide.http.api.StandardHttpMethod.values"]},{"name":"interface Factory","description":"elide.http.api.HttpHeaders.Factory","location":"packages/serverless/elide.http.api/-http-headers/-factory/index.html","searchKeys":["Factory","interface Factory","elide.http.api.HttpHeaders.Factory"]},{"name":"interface Factory","description":"elide.http.api.HttpRequest.Factory","location":"packages/serverless/elide.http.api/-http-request/-factory/index.html","searchKeys":["Factory","interface Factory","elide.http.api.HttpRequest.Factory"]},{"name":"interface Factory","description":"elide.http.api.HttpResponse.Factory","location":"packages/serverless/elide.http.api/-http-response/-factory/index.html","searchKeys":["Factory","interface Factory","elide.http.api.HttpResponse.Factory"]},{"name":"interface Factory : HttpHeaders.Factory","description":"elide.http.api.MutableHttpHeaders.Factory","location":"packages/serverless/elide.http.api/-mutable-http-headers/-factory/index.html","searchKeys":["Factory","interface Factory : HttpHeaders.Factory","elide.http.api.MutableHttpHeaders.Factory"]},{"name":"interface Factory : HttpRequest.Factory","description":"elide.http.api.MutableHttpRequest.Factory","location":"packages/serverless/elide.http.api/-mutable-http-request/-factory/index.html","searchKeys":["Factory","interface Factory : HttpRequest.Factory","elide.http.api.MutableHttpRequest.Factory"]},{"name":"interface Factory : HttpResponse.Factory","description":"elide.http.api.MutableHttpResponse.Factory","location":"packages/serverless/elide.http.api/-mutable-http-response/-factory/index.html","searchKeys":["Factory","interface Factory : HttpResponse.Factory","elide.http.api.MutableHttpResponse.Factory"]},{"name":"interface HeaderValue : Comparable<String> , Collection<String> ","description":"elide.http.api.HttpHeaders.HeaderValue","location":"packages/serverless/elide.http.api/-http-headers/-header-value/index.html","searchKeys":["HeaderValue","interface HeaderValue : Comparable<String> , Collection<String> ","elide.http.api.HttpHeaders.HeaderValue"]},{"name":"interface HttpHeader<Value : Any> : Comparable<HttpHeader<*>> ","description":"elide.http.api.HttpHeader","location":"packages/serverless/elide.http.api/-http-header/index.html","searchKeys":["HttpHeader","interface HttpHeader<Value : Any> : Comparable<HttpHeader<*>> ","elide.http.api.HttpHeader"]},{"name":"interface HttpHeaderValue<Value : Any>","description":"elide.http.api.HttpHeaderValue","location":"packages/serverless/elide.http.api/-http-header-value/index.html","searchKeys":["HttpHeaderValue","interface HttpHeaderValue<Value : Any>","elide.http.api.HttpHeaderValue"]},{"name":"interface HttpHeaders : HttpMapping<HttpHeaders.HeaderName, HttpHeaders.HeaderValue> ","description":"elide.http.api.HttpHeaders","location":"packages/serverless/elide.http.api/-http-headers/index.html","searchKeys":["HttpHeaders","interface HttpHeaders : HttpMapping<HttpHeaders.HeaderName, HttpHeaders.HeaderValue> ","elide.http.api.HttpHeaders"]},{"name":"interface HttpMapping<Key : HttpText, Value> : Map<Key, Value> ","description":"elide.http.api.HttpMapping","location":"packages/serverless/elide.http.api/-http-mapping/index.html","searchKeys":["HttpMapping","interface HttpMapping<Key : HttpText, Value> : Map<Key, Value> ","elide.http.api.HttpMapping"]},{"name":"interface HttpMessage","description":"elide.http.api.HttpMessage","location":"packages/serverless/elide.http.api/-http-message/index.html","searchKeys":["HttpMessage","interface HttpMessage","elide.http.api.HttpMessage"]},{"name":"interface HttpMethod","description":"elide.http.api.HttpMethod","location":"packages/serverless/elide.http.api/-http-method/index.html","searchKeys":["HttpMethod","interface HttpMethod","elide.http.api.HttpMethod"]},{"name":"interface HttpMethod : HttpMethod","description":"elide.http.HttpMethod","location":"packages/serverless/elide.http/-http-method/index.html","searchKeys":["HttpMethod","interface HttpMethod : HttpMethod","elide.http.HttpMethod"]},{"name":"interface HttpPayload","description":"elide.http.api.HttpPayload","location":"packages/serverless/elide.http.api/-http-payload/index.html","searchKeys":["HttpPayload","interface HttpPayload","elide.http.api.HttpPayload"]},{"name":"interface HttpRequest : HttpMessage","description":"elide.http.api.HttpRequest","location":"packages/serverless/elide.http.api/-http-request/index.html","searchKeys":["HttpRequest","interface HttpRequest : HttpMessage","elide.http.api.HttpRequest"]},{"name":"interface HttpResponse : HttpMessage","description":"elide.http.api.HttpResponse","location":"packages/serverless/elide.http.api/-http-response/index.html","searchKeys":["HttpResponse","interface HttpResponse : HttpMessage","elide.http.api.HttpResponse"]},{"name":"interface HttpStatus","description":"elide.http.api.HttpStatus","location":"packages/serverless/elide.http.api/-http-status/index.html","searchKeys":["HttpStatus","interface HttpStatus","elide.http.api.HttpStatus"]},{"name":"interface MutableHttpHeaders : HttpHeaders, MutableHttpMapping<HttpHeaders.HeaderName, HttpHeaders.HeaderValue> ","description":"elide.http.api.MutableHttpHeaders","location":"packages/serverless/elide.http.api/-mutable-http-headers/index.html","searchKeys":["MutableHttpHeaders","interface MutableHttpHeaders : HttpHeaders, MutableHttpMapping<HttpHeaders.HeaderName, HttpHeaders.HeaderValue> ","elide.http.api.MutableHttpHeaders"]},{"name":"interface MutableHttpMapping<Key : HttpText, Value> : MutableMap<Key, Value> , HttpMapping<Key, Value> ","description":"elide.http.api.MutableHttpMapping","location":"packages/serverless/elide.http.api/-mutable-http-mapping/index.html","searchKeys":["MutableHttpMapping","interface MutableHttpMapping<Key : HttpText, Value> : MutableMap<Key, Value> , HttpMapping<Key, Value> ","elide.http.api.MutableHttpMapping"]},{"name":"interface MutableHttpMessage : HttpMessage","description":"elide.http.api.MutableHttpMessage","location":"packages/serverless/elide.http.api/-mutable-http-message/index.html","searchKeys":["MutableHttpMessage","interface MutableHttpMessage : HttpMessage","elide.http.api.MutableHttpMessage"]},{"name":"interface MutableHttpPayload : HttpPayload","description":"elide.http.api.MutableHttpPayload","location":"packages/serverless/elide.http.api/-mutable-http-payload/index.html","searchKeys":["MutableHttpPayload","interface MutableHttpPayload : HttpPayload","elide.http.api.MutableHttpPayload"]},{"name":"interface MutableHttpRequest : MutableHttpMessage, HttpRequest","description":"elide.http.api.MutableHttpRequest","location":"packages/serverless/elide.http.api/-mutable-http-request/index.html","searchKeys":["MutableHttpRequest","interface MutableHttpRequest : MutableHttpMessage, HttpRequest","elide.http.api.MutableHttpRequest"]},{"name":"interface MutableHttpResponse : MutableHttpMessage, HttpResponse","description":"elide.http.api.MutableHttpResponse","location":"packages/serverless/elide.http.api/-mutable-http-response/index.html","searchKeys":["MutableHttpResponse","interface MutableHttpResponse : MutableHttpMessage, HttpResponse","elide.http.api.MutableHttpResponse"]},{"name":"interface URL","description":"elide.net.api.URL","location":"packages/serverless/elide.net.api/-u-r-l/index.html","searchKeys":["URL","interface URL","elide.net.api.URL"]},{"name":"interface URLInfo","description":"elide.net.api.URLInfo","location":"packages/serverless/elide.net.api/-u-r-l-info/index.html","searchKeys":["URLInfo","interface URLInfo","elide.net.api.URLInfo"]},{"name":"object Companion","description":"elide.http.MutableHttpMapping.Companion","location":"packages/serverless/elide.http/-mutable-http-mapping/-companion/index.html","searchKeys":["Companion","object Companion","elide.http.MutableHttpMapping.Companion"]},{"name":"object Companion","description":"elide.http.api.CaseInsensitiveHttpString.Companion","location":"packages/serverless/elide.http.api/-case-insensitive-http-string/-companion/index.html","searchKeys":["Companion","object Companion","elide.http.api.CaseInsensitiveHttpString.Companion"]},{"name":"object Companion","description":"elide.http.api.HttpHeader.Companion","location":"packages/serverless/elide.http.api/-http-header/-companion/index.html","searchKeys":["Companion","object Companion","elide.http.api.HttpHeader.Companion"]},{"name":"object Companion","description":"elide.http.api.HttpHeaderValue.Companion","location":"packages/serverless/elide.http.api/-http-header-value/-companion/index.html","searchKeys":["Companion","object Companion","elide.http.api.HttpHeaderValue.Companion"]},{"name":"object Companion","description":"elide.http.api.HttpHeaders.HeaderName.Companion","location":"packages/serverless/elide.http.api/-http-headers/-header-name/-companion/index.html","searchKeys":["Companion","object Companion","elide.http.api.HttpHeaders.HeaderName.Companion"]},{"name":"object Companion","description":"elide.http.api.HttpHeaders.HeaderValue.Companion","location":"packages/serverless/elide.http.api/-http-headers/-header-value/-companion/index.html","searchKeys":["Companion","object Companion","elide.http.api.HttpHeaders.HeaderValue.Companion"]},{"name":"object Companion","description":"elide.http.api.HttpStatus.Type.Companion","location":"packages/serverless/elide.http.api/-http-status/-type/-companion/index.html","searchKeys":["Companion","object Companion","elide.http.api.HttpStatus.Type.Companion"]},{"name":"object Companion","description":"elide.http.api.Mimetype.Companion","location":"packages/serverless/elide.http.api/-mimetype/-companion/index.html","searchKeys":["Companion","object Companion","elide.http.api.Mimetype.Companion"]},{"name":"object Companion","description":"elide.http.api.StandardHttpMethod.Companion","location":"packages/serverless/elide.http.api/-standard-http-method/-companion/index.html","searchKeys":["Companion","object Companion","elide.http.api.StandardHttpMethod.Companion"]},{"name":"object Companion : HttpHeaders.Factory","description":"elide.http.HttpHeaders.Companion","location":"packages/serverless/elide.http/-http-headers/-companion/index.html","searchKeys":["Companion","object Companion : HttpHeaders.Factory","elide.http.HttpHeaders.Companion"]},{"name":"object Companion : MutableHttpHeaders.Factory","description":"elide.http.MutableHttpHeaders.Companion","location":"packages/serverless/elide.http/-mutable-http-headers/-companion/index.html","searchKeys":["Companion","object Companion : MutableHttpHeaders.Factory","elide.http.MutableHttpHeaders.Companion"]},{"name":"object HttpRequests","description":"elide.http.HttpRequests","location":"packages/serverless/elide.http/-http-requests/index.html","searchKeys":["HttpRequests","object HttpRequests","elide.http.HttpRequests"]},{"name":"open fun add(key: String, value: HttpString)","description":"elide.http.api.MutableHttpHeaders.add","location":"packages/serverless/elide.http.api/-mutable-http-headers/add.html","searchKeys":["add","open fun add(key: String, value: HttpString)","elide.http.api.MutableHttpHeaders.add"]},{"name":"open fun compareTo(other: HttpHeaders.HeaderValue): Int","description":"elide.http.api.HttpHeaders.HeaderValue.compareTo","location":"packages/serverless/elide.http.api/-http-headers/-header-value/compare-to.html","searchKeys":["compareTo","open fun compareTo(other: HttpHeaders.HeaderValue): Int","elide.http.api.HttpHeaders.HeaderValue.compareTo"]},{"name":"open fun contentTypeOrDefault(): Mimetype","description":"elide.http.api.HttpPayload.contentTypeOrDefault","location":"packages/serverless/elide.http.api/-http-payload/content-type-or-default.html","searchKeys":["contentTypeOrDefault","open fun contentTypeOrDefault(): Mimetype","elide.http.api.HttpPayload.contentTypeOrDefault"]},{"name":"open fun getAll(key: String): Sequence<HttpString>","description":"elide.http.api.HttpHeaders.getAll","location":"packages/serverless/elide.http.api/-http-headers/get-all.html","searchKeys":["getAll","open fun getAll(key: String): Sequence<HttpString>","elide.http.api.HttpHeaders.getAll"]},{"name":"open operator fun contains(key: String): Boolean","description":"elide.http.api.HttpHeaders.contains","location":"packages/serverless/elide.http.api/-http-headers/contains.html","searchKeys":["contains","open operator fun contains(key: String): Boolean","elide.http.api.HttpHeaders.contains"]},{"name":"open operator fun get(key: String): String?","description":"elide.http.api.HttpHeaders.get","location":"packages/serverless/elide.http.api/-http-headers/get.html","searchKeys":["get","open operator fun get(key: String): String?","elide.http.api.HttpHeaders.get"]},{"name":"open operator fun set(key: String, value: HttpString)","description":"elide.http.api.MutableHttpHeaders.set","location":"packages/serverless/elide.http.api/-mutable-http-headers/set.html","searchKeys":["set","open operator fun set(key: String, value: HttpString)","elide.http.api.MutableHttpHeaders.set"]},{"name":"open operator override fun compareTo(other: HttpHeader<*>): Int","description":"elide.http.api.HttpHeader.compareTo","location":"packages/serverless/elide.http.api/-http-header/compare-to.html","searchKeys":["compareTo","open operator override fun compareTo(other: HttpHeader<*>): Int","elide.http.api.HttpHeader.compareTo"]},{"name":"open operator override fun compareTo(other: HttpHeaders.HeaderName): Int","description":"elide.http.api.HttpHeaders.HeaderName.compareTo","location":"packages/serverless/elide.http.api/-http-headers/-header-name/compare-to.html","searchKeys":["compareTo","open operator override fun compareTo(other: HttpHeaders.HeaderName): Int","elide.http.api.HttpHeaders.HeaderName.compareTo"]},{"name":"open operator override fun compareTo(other: String): Int","description":"elide.http.api.HttpHeaders.HeaderValue.SingleValue.compareTo","location":"packages/serverless/elide.http.api/-http-headers/-header-value/-single-value/compare-to.html","searchKeys":["compareTo","open operator override fun compareTo(other: String): Int","elide.http.api.HttpHeaders.HeaderValue.SingleValue.compareTo"]},{"name":"open operator override fun compareTo(other: String): Int","description":"elide.http.api.HttpHeaders.HeaderValue.compareTo","location":"packages/serverless/elide.http.api/-http-headers/-header-value/compare-to.html","searchKeys":["compareTo","open operator override fun compareTo(other: String): Int","elide.http.api.HttpHeaders.HeaderValue.compareTo"]},{"name":"open operator override fun contains(element: String): Boolean","description":"elide.http.api.HttpHeaders.HeaderValue.SingleValue.contains","location":"packages/serverless/elide.http.api/-http-headers/-header-value/-single-value/contains.html","searchKeys":["contains","open operator override fun contains(element: String): Boolean","elide.http.api.HttpHeaders.HeaderValue.SingleValue.contains"]},{"name":"open operator override fun contains(element: String): Boolean","description":"elide.http.api.HttpHeaders.HeaderValue.contains","location":"packages/serverless/elide.http.api/-http-headers/-header-value/contains.html","searchKeys":["contains","open operator override fun contains(element: String): Boolean","elide.http.api.HttpHeaders.HeaderValue.contains"]},{"name":"open operator override fun contains(key: HttpHeaders.HeaderName): Boolean","description":"elide.http.HttpHeaders.contains","location":"packages/serverless/elide.http/-http-headers/contains.html","searchKeys":["contains","open operator override fun contains(key: HttpHeaders.HeaderName): Boolean","elide.http.HttpHeaders.contains"]},{"name":"open operator override fun contains(key: HttpHeaders.HeaderName): Boolean","description":"elide.http.MutableHttpHeaders.contains","location":"packages/serverless/elide.http/-mutable-http-headers/contains.html","searchKeys":["contains","open operator override fun contains(key: HttpHeaders.HeaderName): Boolean","elide.http.MutableHttpHeaders.contains"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"elide.http.api.CaseInsensitiveHttpString.equals","location":"packages/serverless/elide.http.api/-case-insensitive-http-string/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","elide.http.api.CaseInsensitiveHttpString.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"elide.http.api.HttpHeaders.HeaderName.equals","location":"packages/serverless/elide.http.api/-http-headers/-header-name/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","elide.http.api.HttpHeaders.HeaderName.equals"]},{"name":"open operator override fun get(index: Int): Char","description":"elide.http.api.HttpHeaders.HeaderName.get","location":"packages/serverless/elide.http.api/-http-headers/-header-name/get.html","searchKeys":["get","open operator override fun get(index: Int): Char","elide.http.api.HttpHeaders.HeaderName.get"]},{"name":"open operator override fun get(key: HttpHeaders.HeaderName): HttpHeaders.HeaderValue?","description":"elide.http.HttpHeaders.get","location":"packages/serverless/elide.http/-http-headers/get.html","searchKeys":["get","open operator override fun get(key: HttpHeaders.HeaderName): HttpHeaders.HeaderValue?","elide.http.HttpHeaders.get"]},{"name":"open operator override fun get(key: HttpHeaders.HeaderName): HttpHeaders.HeaderValue?","description":"elide.http.MutableHttpHeaders.get","location":"packages/serverless/elide.http/-mutable-http-headers/get.html","searchKeys":["get","open operator override fun get(key: HttpHeaders.HeaderName): HttpHeaders.HeaderValue?","elide.http.MutableHttpHeaders.get"]},{"name":"open operator override fun iterator(): Iterator<String>","description":"elide.http.api.HttpHeaders.HeaderValue.SingleValue.iterator","location":"packages/serverless/elide.http.api/-http-headers/-header-value/-single-value/iterator.html","searchKeys":["iterator","open operator override fun iterator(): Iterator<String>","elide.http.api.HttpHeaders.HeaderValue.SingleValue.iterator"]},{"name":"open operator override fun iterator(): Iterator<String>","description":"elide.http.api.HttpHeaders.HeaderValue.iterator","location":"packages/serverless/elide.http.api/-http-headers/-header-value/iterator.html","searchKeys":["iterator","open operator override fun iterator(): Iterator<String>","elide.http.api.HttpHeaders.HeaderValue.iterator"]},{"name":"open operator override fun set(key: HttpHeaders.HeaderName, value: HttpString)","description":"elide.http.MutableHttpHeaders.set","location":"packages/serverless/elide.http/-mutable-http-headers/set.html","searchKeys":["set","open operator override fun set(key: HttpHeaders.HeaderName, value: HttpString)","elide.http.MutableHttpHeaders.set"]},{"name":"open override fun add(key: HttpHeaders.HeaderName, value: HttpString)","description":"elide.http.MutableHttpHeaders.add","location":"packages/serverless/elide.http/-mutable-http-headers/add.html","searchKeys":["add","open override fun add(key: HttpHeaders.HeaderName, value: HttpString)","elide.http.MutableHttpHeaders.add"]},{"name":"open override fun containsAll(elements: Collection<String>): Boolean","description":"elide.http.api.HttpHeaders.HeaderValue.SingleValue.containsAll","location":"packages/serverless/elide.http.api/-http-headers/-header-value/-single-value/contains-all.html","searchKeys":["containsAll","open override fun containsAll(elements: Collection<String>): Boolean","elide.http.api.HttpHeaders.HeaderValue.SingleValue.containsAll"]},{"name":"open override fun containsAll(elements: Collection<String>): Boolean","description":"elide.http.api.HttpHeaders.HeaderValue.containsAll","location":"packages/serverless/elide.http.api/-http-headers/-header-value/contains-all.html","searchKeys":["containsAll","open override fun containsAll(elements: Collection<String>): Boolean","elide.http.api.HttpHeaders.HeaderValue.containsAll"]},{"name":"open override fun create(): MutableHttpHeaders","description":"elide.http.MutableHttpHeaders.Companion.create","location":"packages/serverless/elide.http/-mutable-http-headers/-companion/create.html","searchKeys":["create","open override fun create(): MutableHttpHeaders","elide.http.MutableHttpHeaders.Companion.create"]},{"name":"open override fun getAll(key: HttpHeaders.HeaderName): Sequence<HttpString>","description":"elide.http.HttpHeaders.getAll","location":"packages/serverless/elide.http/-http-headers/get-all.html","searchKeys":["getAll","open override fun getAll(key: HttpHeaders.HeaderName): Sequence<HttpString>","elide.http.HttpHeaders.getAll"]},{"name":"open override fun getAll(key: HttpHeaders.HeaderName): Sequence<HttpString>","description":"elide.http.MutableHttpHeaders.getAll","location":"packages/serverless/elide.http/-mutable-http-headers/get-all.html","searchKeys":["getAll","open override fun getAll(key: HttpHeaders.HeaderName): Sequence<HttpString>","elide.http.MutableHttpHeaders.getAll"]},{"name":"open override fun hashCode(): Int","description":"elide.http.api.CaseInsensitiveHttpString.hashCode","location":"packages/serverless/elide.http.api/-case-insensitive-http-string/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","elide.http.api.CaseInsensitiveHttpString.hashCode"]},{"name":"open override fun hashCode(): Int","description":"elide.http.api.HttpHeaders.HeaderName.hashCode","location":"packages/serverless/elide.http.api/-http-headers/-header-name/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","elide.http.api.HttpHeaders.HeaderName.hashCode"]},{"name":"open override fun isEmpty(): Boolean","description":"elide.http.api.HttpHeaders.HeaderValue.SingleValue.isEmpty","location":"packages/serverless/elide.http.api/-http-headers/-header-value/-single-value/is-empty.html","searchKeys":["isEmpty","open override fun isEmpty(): Boolean","elide.http.api.HttpHeaders.HeaderValue.SingleValue.isEmpty"]},{"name":"open override fun isEmpty(): Boolean","description":"elide.http.api.HttpHeaders.HeaderValue.isEmpty","location":"packages/serverless/elide.http.api/-http-headers/-header-value/is-empty.html","searchKeys":["isEmpty","open override fun isEmpty(): Boolean","elide.http.api.HttpHeaders.HeaderValue.isEmpty"]},{"name":"open override fun of(collection: Collection<Pair<String, String>>): HttpHeaders","description":"elide.http.HttpHeaders.Companion.of","location":"packages/serverless/elide.http/-http-headers/-companion/of.html","searchKeys":["of","open override fun of(collection: Collection<Pair<String, String>>): HttpHeaders","elide.http.HttpHeaders.Companion.of"]},{"name":"open override fun of(collection: Collection<Pair<String, String>>): MutableHttpHeaders","description":"elide.http.MutableHttpHeaders.Companion.of","location":"packages/serverless/elide.http/-mutable-http-headers/-companion/of.html","searchKeys":["of","open override fun of(collection: Collection<Pair<String, String>>): MutableHttpHeaders","elide.http.MutableHttpHeaders.Companion.of"]},{"name":"open override fun of(map: Map<String, String>): HttpHeaders","description":"elide.http.HttpHeaders.Companion.of","location":"packages/serverless/elide.http/-http-headers/-companion/of.html","searchKeys":["of","open override fun of(map: Map<String, String>): HttpHeaders","elide.http.HttpHeaders.Companion.of"]},{"name":"open override fun of(map: Map<String, String>): MutableHttpHeaders","description":"elide.http.MutableHttpHeaders.Companion.of","location":"packages/serverless/elide.http/-mutable-http-headers/-companion/of.html","searchKeys":["of","open override fun of(map: Map<String, String>): MutableHttpHeaders","elide.http.MutableHttpHeaders.Companion.of"]},{"name":"open override fun of(pairs: Sequence<Pair<String, String>>): HttpHeaders","description":"elide.http.HttpHeaders.Companion.of","location":"packages/serverless/elide.http/-http-headers/-companion/of.html","searchKeys":["of","open override fun of(pairs: Sequence<Pair<String, String>>): HttpHeaders","elide.http.HttpHeaders.Companion.of"]},{"name":"open override fun of(pairs: Sequence<Pair<String, String>>): MutableHttpHeaders","description":"elide.http.MutableHttpHeaders.Companion.of","location":"packages/serverless/elide.http/-mutable-http-headers/-companion/of.html","searchKeys":["of","open override fun of(pairs: Sequence<Pair<String, String>>): MutableHttpHeaders","elide.http.MutableHttpHeaders.Companion.of"]},{"name":"open override fun of(vararg pairs: Pair<String, String>): HttpHeaders","description":"elide.http.HttpHeaders.Companion.of","location":"packages/serverless/elide.http/-http-headers/-companion/of.html","searchKeys":["of","open override fun of(vararg pairs: Pair<String, String>): HttpHeaders","elide.http.HttpHeaders.Companion.of"]},{"name":"open override fun of(vararg pairs: Pair<String, String>): MutableHttpHeaders","description":"elide.http.MutableHttpHeaders.Companion.of","location":"packages/serverless/elide.http/-mutable-http-headers/-companion/of.html","searchKeys":["of","open override fun of(vararg pairs: Pair<String, String>): MutableHttpHeaders","elide.http.MutableHttpHeaders.Companion.of"]},{"name":"open override fun remove(key: HttpHeaders.HeaderName, value: HttpString)","description":"elide.http.MutableHttpHeaders.remove","location":"packages/serverless/elide.http/-mutable-http-headers/remove.html","searchKeys":["remove","open override fun remove(key: HttpHeaders.HeaderName, value: HttpString)","elide.http.MutableHttpHeaders.remove"]},{"name":"open override fun subSequence(startIndex: Int, endIndex: Int): CharSequence","description":"elide.http.api.HttpHeaders.HeaderName.subSequence","location":"packages/serverless/elide.http.api/-http-headers/-header-name/sub-sequence.html","searchKeys":["subSequence","open override fun subSequence(startIndex: Int, endIndex: Int): CharSequence","elide.http.api.HttpHeaders.HeaderName.subSequence"]},{"name":"open override fun toString(): HttpString","description":"elide.http.api.CaseInsensitiveHttpString.toString","location":"packages/serverless/elide.http.api/-case-insensitive-http-string/to-string.html","searchKeys":["toString","open override fun toString(): HttpString","elide.http.api.CaseInsensitiveHttpString.toString"]},{"name":"open override fun toString(): String","description":"elide.http.api.HttpEncoding.toString","location":"packages/serverless/elide.http.api/-http-encoding/to-string.html","searchKeys":["toString","open override fun toString(): String","elide.http.api.HttpEncoding.toString"]},{"name":"open override fun toString(): String","description":"elide.http.api.HttpHeaders.HeaderName.toString","location":"packages/serverless/elide.http.api/-http-headers/-header-name/to-string.html","searchKeys":["toString","open override fun toString(): String","elide.http.api.HttpHeaders.HeaderName.toString"]},{"name":"open override fun toString(): String","description":"elide.http.api.HttpHeaders.HeaderValue.MultiValue.toString","location":"packages/serverless/elide.http.api/-http-headers/-header-value/-multi-value/to-string.html","searchKeys":["toString","open override fun toString(): String","elide.http.api.HttpHeaders.HeaderValue.MultiValue.toString"]},{"name":"open override fun toString(): String","description":"elide.http.api.HttpHeaders.HeaderValue.SingleValue.toString","location":"packages/serverless/elide.http.api/-http-headers/-header-value/-single-value/to-string.html","searchKeys":["toString","open override fun toString(): String","elide.http.api.HttpHeaders.HeaderValue.SingleValue.toString"]},{"name":"open override fun toString(): String","description":"elide.http.api.HttpToken.toString","location":"packages/serverless/elide.http.api/-http-token/to-string.html","searchKeys":["toString","open override fun toString(): String","elide.http.api.HttpToken.toString"]},{"name":"open override fun toString(): String","description":"elide.http.api.HttpTokenList.toString","location":"packages/serverless/elide.http.api/-http-token-list/to-string.html","searchKeys":["toString","open override fun toString(): String","elide.http.api.HttpTokenList.toString"]},{"name":"open override fun toString(): String","description":"elide.http.api.Language.toString","location":"packages/serverless/elide.http.api/-language/to-string.html","searchKeys":["toString","open override fun toString(): String","elide.http.api.Language.toString"]},{"name":"open override fun toString(): String","description":"elide.http.api.Mimetype.toString","location":"packages/serverless/elide.http.api/-mimetype/to-string.html","searchKeys":["toString","open override fun toString(): String","elide.http.api.Mimetype.toString"]},{"name":"open override val allValues: List<HttpString>","description":"elide.http.api.HttpHeaders.HeaderValue.MultiValue.allValues","location":"packages/serverless/elide.http.api/-http-headers/-header-value/-multi-value/all-values.html","searchKeys":["allValues","open override val allValues: List<HttpString>","elide.http.api.HttpHeaders.HeaderValue.MultiValue.allValues"]},{"name":"open override val allValues: List<HttpString>","description":"elide.http.api.HttpHeaders.HeaderValue.SingleValue.allValues","location":"packages/serverless/elide.http.api/-http-headers/-header-value/-single-value/all-values.html","searchKeys":["allValues","open override val allValues: List<HttpString>","elide.http.api.HttpHeaders.HeaderValue.SingleValue.allValues"]},{"name":"open override val asString: String","description":"elide.http.api.HttpEncoding.asString","location":"packages/serverless/elide.http.api/-http-encoding/as-string.html","searchKeys":["asString","open override val asString: String","elide.http.api.HttpEncoding.asString"]},{"name":"open override val asString: String","description":"elide.http.api.HttpHeaders.HeaderValue.MultiValue.asString","location":"packages/serverless/elide.http.api/-http-headers/-header-value/-multi-value/as-string.html","searchKeys":["asString","open override val asString: String","elide.http.api.HttpHeaders.HeaderValue.MultiValue.asString"]},{"name":"open override val asString: String","description":"elide.http.api.HttpHeaders.HeaderValue.SingleValue.asString","location":"packages/serverless/elide.http.api/-http-headers/-header-value/-single-value/as-string.html","searchKeys":["asString","open override val asString: String","elide.http.api.HttpHeaders.HeaderValue.SingleValue.asString"]},{"name":"open override val asString: String","description":"elide.http.api.HttpTokenList.asString","location":"packages/serverless/elide.http.api/-http-token-list/as-string.html","searchKeys":["asString","open override val asString: String","elide.http.api.HttpTokenList.asString"]},{"name":"open override val body: Boolean = false","description":"elide.http.HttpMethod.Custom.body","location":"packages/serverless/elide.http/-http-method/-custom/body.html","searchKeys":["body","open override val body: Boolean = false","elide.http.HttpMethod.Custom.body"]},{"name":"open override val body: Boolean = false","description":"elide.http.api.StandardHttpMethod.body","location":"packages/serverless/elide.http.api/-standard-http-method/body.html","searchKeys":["body","open override val body: Boolean = false","elide.http.api.StandardHttpMethod.body"]},{"name":"open override val body: HttpPayload","description":"elide.http.HttpMessage.body","location":"packages/serverless/elide.http/-http-message/body.html","searchKeys":["body","open override val body: HttpPayload","elide.http.HttpMessage.body"]},{"name":"open override val bytes: HttpBytes","description":"elide.http.HttpPayload.bytes","location":"packages/serverless/elide.http/-http-payload/bytes.html","searchKeys":["bytes","open override val bytes: HttpBytes","elide.http.HttpPayload.bytes"]},{"name":"open override val code: HttpStatusCode","description":"elide.http.HttpStatus.code","location":"packages/serverless/elide.http/-http-status/code.html","searchKeys":["code","open override val code: HttpStatusCode","elide.http.HttpStatus.code"]},{"name":"open override val contentType: Mimetype? = null","description":"elide.http.HttpPayload.contentType","location":"packages/serverless/elide.http/-http-payload/content-type.html","searchKeys":["contentType","open override val contentType: Mimetype? = null","elide.http.HttpPayload.contentType"]},{"name":"open override val headers: HttpHeaders","description":"elide.http.HttpMessage.headers","location":"packages/serverless/elide.http/-http-message/headers.html","searchKeys":["headers","open override val headers: HttpHeaders","elide.http.HttpMessage.headers"]},{"name":"open override val headers: MutableHttpHeaders","description":"elide.http.MutableHttpMessage.headers","location":"packages/serverless/elide.http/-mutable-http-message/headers.html","searchKeys":["headers","open override val headers: MutableHttpHeaders","elide.http.MutableHttpMessage.headers"]},{"name":"open override val idempotent: Boolean","description":"elide.http.api.StandardHttpMethod.idempotent","location":"packages/serverless/elide.http.api/-standard-http-method/idempotent.html","searchKeys":["idempotent","open override val idempotent: Boolean","elide.http.api.StandardHttpMethod.idempotent"]},{"name":"open override val idempotent: Boolean = false","description":"elide.http.HttpMethod.Custom.idempotent","location":"packages/serverless/elide.http/-http-method/-custom/idempotent.html","searchKeys":["idempotent","open override val idempotent: Boolean = false","elide.http.HttpMethod.Custom.idempotent"]},{"name":"open override val length: Int","description":"elide.http.api.HttpHeaders.HeaderName.length","location":"packages/serverless/elide.http.api/-http-headers/-header-name/length.html","searchKeys":["length","open override val length: Int","elide.http.api.HttpHeaders.HeaderName.length"]},{"name":"open override val mutable: Boolean","description":"elide.http.HttpPayload.mutable","location":"packages/serverless/elide.http/-http-payload/mutable.html","searchKeys":["mutable","open override val mutable: Boolean","elide.http.HttpPayload.mutable"]},{"name":"open override val mutable: Boolean","description":"elide.http.MutableHttpPayload.mutable","location":"packages/serverless/elide.http/-mutable-http-payload/mutable.html","searchKeys":["mutable","open override val mutable: Boolean","elide.http.MutableHttpPayload.mutable"]},{"name":"open override val mutable: Boolean","description":"elide.http.api.HttpRequest.mutable","location":"packages/serverless/elide.http.api/-http-request/mutable.html","searchKeys":["mutable","open override val mutable: Boolean","elide.http.api.HttpRequest.mutable"]},{"name":"open override val mutable: Boolean","description":"elide.http.api.MutableHttpMessage.mutable","location":"packages/serverless/elide.http.api/-mutable-http-message/mutable.html","searchKeys":["mutable","open override val mutable: Boolean","elide.http.api.MutableHttpMessage.mutable"]},{"name":"open override val mutable: Boolean","description":"elide.http.api.MutableHttpRequest.mutable","location":"packages/serverless/elide.http.api/-mutable-http-request/mutable.html","searchKeys":["mutable","open override val mutable: Boolean","elide.http.api.MutableHttpRequest.mutable"]},{"name":"open override val name: String","description":"elide.http.HttpMethod.Custom.name","location":"packages/serverless/elide.http/-http-method/-custom/name.html","searchKeys":["name","open override val name: String","elide.http.HttpMethod.Custom.name"]},{"name":"open override val name: String","description":"elide.http.HttpMethod.Standard.name","location":"packages/serverless/elide.http/-http-method/-standard/name.html","searchKeys":["name","open override val name: String","elide.http.HttpMethod.Standard.name"]},{"name":"open override val present: Boolean","description":"elide.http.HttpPayload.Empty.present","location":"packages/serverless/elide.http/-http-payload/-empty/present.html","searchKeys":["present","open override val present: Boolean","elide.http.HttpPayload.Empty.present"]},{"name":"open override val present: Boolean","description":"elide.http.HttpPayload.present","location":"packages/serverless/elide.http/-http-payload/present.html","searchKeys":["present","open override val present: Boolean","elide.http.HttpPayload.present"]},{"name":"open override val present: Boolean","description":"elide.http.MutableHttpPayload.Empty.present","location":"packages/serverless/elide.http/-mutable-http-payload/-empty/present.html","searchKeys":["present","open override val present: Boolean","elide.http.MutableHttpPayload.Empty.present"]},{"name":"open override val present: Boolean","description":"elide.http.MutableHttpPayload.present","location":"packages/serverless/elide.http/-mutable-http-payload/present.html","searchKeys":["present","open override val present: Boolean","elide.http.MutableHttpPayload.present"]},{"name":"open override val size: Int","description":"elide.http.api.HttpHeaders.HeaderValue.SingleValue.size","location":"packages/serverless/elide.http.api/-http-headers/-header-value/-single-value/size.html","searchKeys":["size","open override val size: Int","elide.http.api.HttpHeaders.HeaderValue.SingleValue.size"]},{"name":"open override val size: Int","description":"elide.http.api.HttpHeaders.HeaderValue.size","location":"packages/serverless/elide.http.api/-http-headers/-header-value/size.html","searchKeys":["size","open override val size: Int","elide.http.api.HttpHeaders.HeaderValue.size"]},{"name":"open override val size: ULong","description":"elide.http.HttpPayload.size","location":"packages/serverless/elide.http/-http-payload/size.html","searchKeys":["size","open override val size: ULong","elide.http.HttpPayload.size"]},{"name":"open override val text: HttpString?","description":"elide.http.HttpStatus.text","location":"packages/serverless/elide.http/-http-status/text.html","searchKeys":["text","open override val text: HttpString?","elide.http.HttpStatus.text"]},{"name":"open override val token: HttpString","description":"elide.http.api.HttpToken.token","location":"packages/serverless/elide.http.api/-http-token/token.html","searchKeys":["token","open override val token: HttpString","elide.http.api.HttpToken.token"]},{"name":"open override val token: String","description":"elide.http.api.HttpEncoding.token","location":"packages/serverless/elide.http.api/-http-encoding/token.html","searchKeys":["token","open override val token: String","elide.http.api.HttpEncoding.token"]},{"name":"open override val token: String","description":"elide.http.api.Language.token","location":"packages/serverless/elide.http.api/-language/token.html","searchKeys":["token","open override val token: String","elide.http.api.Language.token"]},{"name":"open override val token: String","description":"elide.http.api.Mimetype.token","location":"packages/serverless/elide.http.api/-mimetype/token.html","searchKeys":["token","open override val token: String","elide.http.api.Mimetype.token"]},{"name":"open override val tokens: List<String>","description":"elide.http.api.HttpTokenList.tokens","location":"packages/serverless/elide.http.api/-http-token-list/tokens.html","searchKeys":["tokens","open override val tokens: List<String>","elide.http.api.HttpTokenList.tokens"]},{"name":"open override val type: HttpMessageType","description":"elide.http.api.HttpRequest.type","location":"packages/serverless/elide.http.api/-http-request/type.html","searchKeys":["type","open override val type: HttpMessageType","elide.http.api.HttpRequest.type"]},{"name":"open override val type: HttpMessageType","description":"elide.http.api.HttpResponse.type","location":"packages/serverless/elide.http.api/-http-response/type.html","searchKeys":["type","open override val type: HttpMessageType","elide.http.api.HttpResponse.type"]},{"name":"open override val type: HttpStatus.Type?","description":"elide.http.HttpStatus.type","location":"packages/serverless/elide.http/-http-status/type.html","searchKeys":["type","open override val type: HttpStatus.Type?","elide.http.HttpStatus.type"]},{"name":"open override val version: HttpVersion","description":"elide.http.HttpMessage.version","location":"packages/serverless/elide.http/-http-message/version.html","searchKeys":["version","open override val version: HttpVersion","elide.http.HttpMessage.version"]},{"name":"open override val write: Boolean = false","description":"elide.http.HttpMethod.Custom.write","location":"packages/serverless/elide.http/-http-method/-custom/write.html","searchKeys":["write","open override val write: Boolean = false","elide.http.HttpMethod.Custom.write"]},{"name":"open override val write: Boolean = false","description":"elide.http.api.StandardHttpMethod.write","location":"packages/serverless/elide.http.api/-standard-http-method/write.html","searchKeys":["write","open override val write: Boolean = false","elide.http.api.StandardHttpMethod.write"]},{"name":"open override var body: MutableHttpPayload","description":"elide.http.MutableHttpMessage.body","location":"packages/serverless/elide.http/-mutable-http-message/body.html","searchKeys":["body","open override var body: MutableHttpPayload","elide.http.MutableHttpMessage.body"]},{"name":"open override var bytes: HttpBytes","description":"elide.http.MutableHttpPayload.bytes","location":"packages/serverless/elide.http/-mutable-http-payload/bytes.html","searchKeys":["bytes","open override var bytes: HttpBytes","elide.http.MutableHttpPayload.bytes"]},{"name":"open override var contentType: Mimetype?","description":"elide.http.MutableHttpPayload.contentType","location":"packages/serverless/elide.http/-mutable-http-payload/content-type.html","searchKeys":["contentType","open override var contentType: Mimetype?","elide.http.MutableHttpPayload.contentType"]},{"name":"open override var version: HttpVersion","description":"elide.http.MutableHttpMessage.version","location":"packages/serverless/elide.http/-mutable-http-message/version.html","searchKeys":["version","open override var version: HttpVersion","elide.http.MutableHttpMessage.version"]},{"name":"open val mutable: Boolean","description":"elide.http.api.HttpMessage.mutable","location":"packages/serverless/elide.http.api/-http-message/mutable.html","searchKeys":["mutable","open val mutable: Boolean","elide.http.api.HttpMessage.mutable"]},{"name":"sealed class HttpPayload : HttpPayload","description":"elide.http.HttpPayload","location":"packages/serverless/elide.http/-http-payload/index.html","searchKeys":["HttpPayload","sealed class HttpPayload : HttpPayload","elide.http.HttpPayload"]},{"name":"sealed class MutableHttpPayload : HttpPayload, MutableHttpPayload","description":"elide.http.MutableHttpPayload","location":"packages/serverless/elide.http/-mutable-http-payload/index.html","searchKeys":["MutableHttpPayload","sealed class MutableHttpPayload : HttpPayload, MutableHttpPayload","elide.http.MutableHttpPayload"]},{"name":"sealed class ParsedURL : URLInfo","description":"elide.net.URL.ParsedURL","location":"packages/serverless/elide.net/-u-r-l/-parsed-u-r-l/index.html","searchKeys":["ParsedURL","sealed class ParsedURL : URLInfo","elide.net.URL.ParsedURL"]},{"name":"typealias HttpStatusCode = UInt","description":"elide.http.api.HttpStatusCode","location":"packages/serverless/elide.http.api/-http-status-code/index.html","searchKeys":["HttpStatusCode","typealias HttpStatusCode = UInt","elide.http.api.HttpStatusCode"]},{"name":"typealias HttpString = String","description":"elide.http.api.HttpString","location":"packages/serverless/elide.http.api/-http-string/index.html","searchKeys":["HttpString","typealias HttpString = String","elide.http.api.HttpString"]},{"name":"typealias HttpText = CharSequence","description":"elide.http.api.HttpText","location":"packages/serverless/elide.http.api/-http-text/index.html","searchKeys":["HttpText","typealias HttpText = CharSequence","elide.http.api.HttpText"]},{"name":"val ACCEPT: HttpHeader<Mimetype>","description":"elide.http.api.HttpHeader.Companion.ACCEPT","location":"packages/serverless/elide.http.api/-http-header/-companion/-a-c-c-e-p-t.html","searchKeys":["ACCEPT","val ACCEPT: HttpHeader<Mimetype>","elide.http.api.HttpHeader.Companion.ACCEPT"]},{"name":"val ACCEPT_CHARSET: HttpHeader<String>","description":"elide.http.api.HttpHeader.Companion.ACCEPT_CHARSET","location":"packages/serverless/elide.http.api/-http-header/-companion/-a-c-c-e-p-t_-c-h-a-r-s-e-t.html","searchKeys":["ACCEPT_CHARSET","val ACCEPT_CHARSET: HttpHeader<String>","elide.http.api.HttpHeader.Companion.ACCEPT_CHARSET"]},{"name":"val ACCEPT_ENCODING: HttpHeader<HttpEncoding>","description":"elide.http.api.HttpHeader.Companion.ACCEPT_ENCODING","location":"packages/serverless/elide.http.api/-http-header/-companion/-a-c-c-e-p-t_-e-n-c-o-d-i-n-g.html","searchKeys":["ACCEPT_ENCODING","val ACCEPT_ENCODING: HttpHeader<HttpEncoding>","elide.http.api.HttpHeader.Companion.ACCEPT_ENCODING"]},{"name":"val ACCEPT_LANGUAGE: HttpHeader<Language>","description":"elide.http.api.HttpHeader.Companion.ACCEPT_LANGUAGE","location":"packages/serverless/elide.http.api/-http-header/-companion/-a-c-c-e-p-t_-l-a-n-g-u-a-g-e.html","searchKeys":["ACCEPT_LANGUAGE","val ACCEPT_LANGUAGE: HttpHeader<Language>","elide.http.api.HttpHeader.Companion.ACCEPT_LANGUAGE"]},{"name":"val ACCEPT_RANGES: HttpHeader<String>","description":"elide.http.api.HttpHeader.Companion.ACCEPT_RANGES","location":"packages/serverless/elide.http.api/-http-header/-companion/-a-c-c-e-p-t_-r-a-n-g-e-s.html","searchKeys":["ACCEPT_RANGES","val ACCEPT_RANGES: HttpHeader<String>","elide.http.api.HttpHeader.Companion.ACCEPT_RANGES"]},{"name":"val AGE: HttpHeader<String>","description":"elide.http.api.HttpHeader.Companion.AGE","location":"packages/serverless/elide.http.api/-http-header/-companion/-a-g-e.html","searchKeys":["AGE","val AGE: HttpHeader<String>","elide.http.api.HttpHeader.Companion.AGE"]},{"name":"val AUTHORIZATION: HttpHeader<String>","description":"elide.http.api.HttpHeader.Companion.AUTHORIZATION","location":"packages/serverless/elide.http.api/-http-header/-companion/-a-u-t-h-o-r-i-z-a-t-i-o-n.html","searchKeys":["AUTHORIZATION","val AUTHORIZATION: HttpHeader<String>","elide.http.api.HttpHeader.Companion.AUTHORIZATION"]},{"name":"val AUTHORIZATION_INFO: HttpHeader<String>","description":"elide.http.api.HttpHeader.Companion.AUTHORIZATION_INFO","location":"packages/serverless/elide.http.api/-http-header/-companion/-a-u-t-h-o-r-i-z-a-t-i-o-n_-i-n-f-o.html","searchKeys":["AUTHORIZATION_INFO","val AUTHORIZATION_INFO: HttpHeader<String>","elide.http.api.HttpHeader.Companion.AUTHORIZATION_INFO"]},{"name":"val BROTLI: HttpHeaderValue<String>","description":"elide.http.api.HttpHeaderValue.Companion.BROTLI","location":"packages/serverless/elide.http.api/-http-header-value/-companion/-b-r-o-t-l-i.html","searchKeys":["BROTLI","val BROTLI: HttpHeaderValue<String>","elide.http.api.HttpHeaderValue.Companion.BROTLI"]},{"name":"val CACHE_CONTROL: HttpHeader<String>","description":"elide.http.api.HttpHeader.Companion.CACHE_CONTROL","location":"packages/serverless/elide.http.api/-http-header/-companion/-c-a-c-h-e_-c-o-n-t-r-o-l.html","searchKeys":["CACHE_CONTROL","val CACHE_CONTROL: HttpHeader<String>","elide.http.api.HttpHeader.Companion.CACHE_CONTROL"]},{"name":"val CONTENT_ENCODING: HttpHeader<String>","description":"elide.http.api.HttpHeader.Companion.CONTENT_ENCODING","location":"packages/serverless/elide.http.api/-http-header/-companion/-c-o-n-t-e-n-t_-e-n-c-o-d-i-n-g.html","searchKeys":["CONTENT_ENCODING","val CONTENT_ENCODING: HttpHeader<String>","elide.http.api.HttpHeader.Companion.CONTENT_ENCODING"]},{"name":"val CONTENT_LANGUAGE: HttpHeader<String>","description":"elide.http.api.HttpHeader.Companion.CONTENT_LANGUAGE","location":"packages/serverless/elide.http.api/-http-header/-companion/-c-o-n-t-e-n-t_-l-a-n-g-u-a-g-e.html","searchKeys":["CONTENT_LANGUAGE","val CONTENT_LANGUAGE: HttpHeader<String>","elide.http.api.HttpHeader.Companion.CONTENT_LANGUAGE"]},{"name":"val CONTENT_LENGTH: HttpHeader<ULong>","description":"elide.http.api.HttpHeader.Companion.CONTENT_LENGTH","location":"packages/serverless/elide.http.api/-http-header/-companion/-c-o-n-t-e-n-t_-l-e-n-g-t-h.html","searchKeys":["CONTENT_LENGTH","val CONTENT_LENGTH: HttpHeader<ULong>","elide.http.api.HttpHeader.Companion.CONTENT_LENGTH"]},{"name":"val CONTENT_TYPE: HttpHeader<String>","description":"elide.http.api.HttpHeader.Companion.CONTENT_TYPE","location":"packages/serverless/elide.http.api/-http-header/-companion/-c-o-n-t-e-n-t_-t-y-p-e.html","searchKeys":["CONTENT_TYPE","val CONTENT_TYPE: HttpHeader<String>","elide.http.api.HttpHeader.Companion.CONTENT_TYPE"]},{"name":"val COOKIE: HttpHeader<String>","description":"elide.http.api.HttpHeader.Companion.COOKIE","location":"packages/serverless/elide.http.api/-http-header/-companion/-c-o-o-k-i-e.html","searchKeys":["COOKIE","val COOKIE: HttpHeader<String>","elide.http.api.HttpHeader.Companion.COOKIE"]},{"name":"val DATE: HttpHeader<Instant>","description":"elide.http.api.HttpHeader.Companion.DATE","location":"packages/serverless/elide.http.api/-http-header/-companion/-d-a-t-e.html","searchKeys":["DATE","val DATE: HttpHeader<Instant>","elide.http.api.HttpHeader.Companion.DATE"]},{"name":"val DEFLATE: HttpHeaderValue<String>","description":"elide.http.api.HttpHeaderValue.Companion.DEFLATE","location":"packages/serverless/elide.http.api/-http-header-value/-companion/-d-e-f-l-a-t-e.html","searchKeys":["DEFLATE","val DEFLATE: HttpHeaderValue<String>","elide.http.api.HttpHeaderValue.Companion.DEFLATE"]},{"name":"val ENGLISH: Language","description":"elide.http.api.HttpHeaderValue.Companion.ENGLISH","location":"packages/serverless/elide.http.api/-http-header-value/-companion/-e-n-g-l-i-s-h.html","searchKeys":["ENGLISH","val ENGLISH: Language","elide.http.api.HttpHeaderValue.Companion.ENGLISH"]},{"name":"val ENGLISH: Language","description":"elide.http.api.HttpHeaderValue.ContentLanguage.ENGLISH","location":"packages/serverless/elide.http.api/-http-header-value/-content-language/-e-n-g-l-i-s-h.html","searchKeys":["ENGLISH","val ENGLISH: Language","elide.http.api.HttpHeaderValue.ContentLanguage.ENGLISH"]},{"name":"val ETAG: HttpHeader<String>","description":"elide.http.api.HttpHeader.Companion.ETAG","location":"packages/serverless/elide.http.api/-http-header/-companion/-e-t-a-g.html","searchKeys":["ETAG","val ETAG: HttpHeader<String>","elide.http.api.HttpHeader.Companion.ETAG"]},{"name":"val EXPIRES: HttpHeader<String>","description":"elide.http.api.HttpHeader.Companion.EXPIRES","location":"packages/serverless/elide.http.api/-http-header/-companion/-e-x-p-i-r-e-s.html","searchKeys":["EXPIRES","val EXPIRES: HttpHeader<String>","elide.http.api.HttpHeader.Companion.EXPIRES"]},{"name":"val FRENCH: Language","description":"elide.http.api.HttpHeaderValue.Companion.FRENCH","location":"packages/serverless/elide.http.api/-http-header-value/-companion/-f-r-e-n-c-h.html","searchKeys":["FRENCH","val FRENCH: Language","elide.http.api.HttpHeaderValue.Companion.FRENCH"]},{"name":"val FRENCH: Language","description":"elide.http.api.HttpHeaderValue.ContentLanguage.FRENCH","location":"packages/serverless/elide.http.api/-http-header-value/-content-language/-f-r-e-n-c-h.html","searchKeys":["FRENCH","val FRENCH: Language","elide.http.api.HttpHeaderValue.ContentLanguage.FRENCH"]},{"name":"val GERMAN: Language","description":"elide.http.api.HttpHeaderValue.Companion.GERMAN","location":"packages/serverless/elide.http.api/-http-header-value/-companion/-g-e-r-m-a-n.html","searchKeys":["GERMAN","val GERMAN: Language","elide.http.api.HttpHeaderValue.Companion.GERMAN"]},{"name":"val GERMAN: Language","description":"elide.http.api.HttpHeaderValue.ContentLanguage.GERMAN","location":"packages/serverless/elide.http.api/-http-header-value/-content-language/-g-e-r-m-a-n.html","searchKeys":["GERMAN","val GERMAN: Language","elide.http.api.HttpHeaderValue.ContentLanguage.GERMAN"]},{"name":"val GZIP: HttpHeaderValue<String>","description":"elide.http.api.HttpHeaderValue.Companion.GZIP","location":"packages/serverless/elide.http.api/-http-header-value/-companion/-g-z-i-p.html","searchKeys":["GZIP","val GZIP: HttpHeaderValue<String>","elide.http.api.HttpHeaderValue.Companion.GZIP"]},{"name":"val HOST: HttpHeader<String>","description":"elide.http.api.HttpHeader.Companion.HOST","location":"packages/serverless/elide.http.api/-http-header/-companion/-h-o-s-t.html","searchKeys":["HOST","val HOST: HttpHeader<String>","elide.http.api.HttpHeader.Companion.HOST"]},{"name":"val HTML: Mimetype","description":"elide.http.api.HttpHeaderValue.Companion.HTML","location":"packages/serverless/elide.http.api/-http-header-value/-companion/-h-t-m-l.html","searchKeys":["HTML","val HTML: Mimetype","elide.http.api.HttpHeaderValue.Companion.HTML"]},{"name":"val HTML: Mimetype","description":"elide.http.api.HttpHeaderValue.ContentType.HTML","location":"packages/serverless/elide.http.api/-http-header-value/-content-type/-h-t-m-l.html","searchKeys":["HTML","val HTML: Mimetype","elide.http.api.HttpHeaderValue.ContentType.HTML"]},{"name":"val IDENTITY: HttpHeaderValue<String>","description":"elide.http.api.HttpHeaderValue.Companion.IDENTITY","location":"packages/serverless/elide.http.api/-http-header-value/-companion/-i-d-e-n-t-i-t-y.html","searchKeys":["IDENTITY","val IDENTITY: HttpHeaderValue<String>","elide.http.api.HttpHeaderValue.Companion.IDENTITY"]},{"name":"val JSON: Mimetype","description":"elide.http.api.HttpHeaderValue.Companion.JSON","location":"packages/serverless/elide.http.api/-http-header-value/-companion/-j-s-o-n.html","searchKeys":["JSON","val JSON: Mimetype","elide.http.api.HttpHeaderValue.Companion.JSON"]},{"name":"val JSON: Mimetype","description":"elide.http.api.HttpHeaderValue.ContentType.JSON","location":"packages/serverless/elide.http.api/-http-header-value/-content-type/-j-s-o-n.html","searchKeys":["JSON","val JSON: Mimetype","elide.http.api.HttpHeaderValue.ContentType.JSON"]},{"name":"val LAST_MODIFIED: HttpHeader<String>","description":"elide.http.api.HttpHeader.Companion.LAST_MODIFIED","location":"packages/serverless/elide.http.api/-http-header/-companion/-l-a-s-t_-m-o-d-i-f-i-e-d.html","searchKeys":["LAST_MODIFIED","val LAST_MODIFIED: HttpHeader<String>","elide.http.api.HttpHeader.Companion.LAST_MODIFIED"]},{"name":"val LOCATION: HttpHeader<String>","description":"elide.http.api.HttpHeader.Companion.LOCATION","location":"packages/serverless/elide.http.api/-http-header/-companion/-l-o-c-a-t-i-o-n.html","searchKeys":["LOCATION","val LOCATION: HttpHeader<String>","elide.http.api.HttpHeader.Companion.LOCATION"]},{"name":"val METHOD: HttpMethod","description":"elide.http.api.HttpRequest.Defaults.METHOD","location":"packages/serverless/elide.http.api/-http-request/-defaults/-m-e-t-h-o-d.html","searchKeys":["METHOD","val METHOD: HttpMethod","elide.http.api.HttpRequest.Defaults.METHOD"]},{"name":"val NO_CACHE: HttpHeaderValue<String>","description":"elide.http.api.HttpHeaderValue.Companion.NO_CACHE","location":"packages/serverless/elide.http.api/-http-header-value/-companion/-n-o_-c-a-c-h-e.html","searchKeys":["NO_CACHE","val NO_CACHE: HttpHeaderValue<String>","elide.http.api.HttpHeaderValue.Companion.NO_CACHE"]},{"name":"val NO_STORE: HttpHeaderValue<String>","description":"elide.http.api.HttpHeaderValue.Companion.NO_STORE","location":"packages/serverless/elide.http.api/-http-header-value/-companion/-n-o_-s-t-o-r-e.html","searchKeys":["NO_STORE","val NO_STORE: HttpHeaderValue<String>","elide.http.api.HttpHeaderValue.Companion.NO_STORE"]},{"name":"val OctetStream: Mimetype","description":"elide.http.api.Mimetype.Companion.OctetStream","location":"packages/serverless/elide.http.api/-mimetype/-companion/-octet-stream.html","searchKeys":["OctetStream","val OctetStream: Mimetype","elide.http.api.Mimetype.Companion.OctetStream"]},{"name":"val PRIVATE: HttpHeaderValue<String>","description":"elide.http.api.HttpHeaderValue.Companion.PRIVATE","location":"packages/serverless/elide.http.api/-http-header-value/-companion/-p-r-i-v-a-t-e.html","searchKeys":["PRIVATE","val PRIVATE: HttpHeaderValue<String>","elide.http.api.HttpHeaderValue.Companion.PRIVATE"]},{"name":"val PUBLIC: HttpHeaderValue<String>","description":"elide.http.api.HttpHeaderValue.Companion.PUBLIC","location":"packages/serverless/elide.http.api/-http-header-value/-companion/-p-u-b-l-i-c.html","searchKeys":["PUBLIC","val PUBLIC: HttpHeaderValue<String>","elide.http.api.HttpHeaderValue.Companion.PUBLIC"]},{"name":"val SERVER: HttpHeader<String>","description":"elide.http.api.HttpHeader.Companion.SERVER","location":"packages/serverless/elide.http.api/-http-header/-companion/-s-e-r-v-e-r.html","searchKeys":["SERVER","val SERVER: HttpHeader<String>","elide.http.api.HttpHeader.Companion.SERVER"]},{"name":"val SET_COOKIE: HttpHeader<String>","description":"elide.http.api.HttpHeader.Companion.SET_COOKIE","location":"packages/serverless/elide.http.api/-http-header/-companion/-s-e-t_-c-o-o-k-i-e.html","searchKeys":["SET_COOKIE","val SET_COOKIE: HttpHeader<String>","elide.http.api.HttpHeader.Companion.SET_COOKIE"]},{"name":"val SPANISH: Language","description":"elide.http.api.HttpHeaderValue.Companion.SPANISH","location":"packages/serverless/elide.http.api/-http-header-value/-companion/-s-p-a-n-i-s-h.html","searchKeys":["SPANISH","val SPANISH: Language","elide.http.api.HttpHeaderValue.Companion.SPANISH"]},{"name":"val SPANISH: Language","description":"elide.http.api.HttpHeaderValue.ContentLanguage.SPANISH","location":"packages/serverless/elide.http.api/-http-header-value/-content-language/-s-p-a-n-i-s-h.html","searchKeys":["SPANISH","val SPANISH: Language","elide.http.api.HttpHeaderValue.ContentLanguage.SPANISH"]},{"name":"val String.asHeaderName: HttpHeaders.HeaderName","description":"elide.http.api.HttpHeaders.HeaderName.Companion.asHeaderName","location":"packages/serverless/elide.http.api/-http-headers/-header-name/-companion/as-header-name.html","searchKeys":["asHeaderName","val String.asHeaderName: HttpHeaders.HeaderName","elide.http.api.HttpHeaders.HeaderName.Companion.asHeaderName"]},{"name":"val TEXT: Mimetype","description":"elide.http.api.HttpHeaderValue.Companion.TEXT","location":"packages/serverless/elide.http.api/-http-header-value/-companion/-t-e-x-t.html","searchKeys":["TEXT","val TEXT: Mimetype","elide.http.api.HttpHeaderValue.Companion.TEXT"]},{"name":"val TEXT: Mimetype","description":"elide.http.api.HttpHeaderValue.ContentType.TEXT","location":"packages/serverless/elide.http.api/-http-header-value/-content-type/-t-e-x-t.html","searchKeys":["TEXT","val TEXT: Mimetype","elide.http.api.HttpHeaderValue.ContentType.TEXT"]},{"name":"val Text: Mimetype","description":"elide.http.api.Mimetype.Companion.Text","location":"packages/serverless/elide.http.api/-mimetype/-companion/-text.html","searchKeys":["Text","val Text: Mimetype","elide.http.api.Mimetype.Companion.Text"]},{"name":"val UTF8: HttpEncoding","description":"elide.http.api.HttpHeaderValue.Companion.UTF8","location":"packages/serverless/elide.http.api/-http-header-value/-companion/-u-t-f8.html","searchKeys":["UTF8","val UTF8: HttpEncoding","elide.http.api.HttpHeaderValue.Companion.UTF8"]},{"name":"val XML: Mimetype","description":"elide.http.api.HttpHeaderValue.Companion.XML","location":"packages/serverless/elide.http.api/-http-header-value/-companion/-x-m-l.html","searchKeys":["XML","val XML: Mimetype","elide.http.api.HttpHeaderValue.Companion.XML"]},{"name":"val XML: Mimetype","description":"elide.http.api.HttpHeaderValue.ContentType.XML","location":"packages/serverless/elide.http.api/-http-header-value/-content-type/-x-m-l.html","searchKeys":["XML","val XML: Mimetype","elide.http.api.HttpHeaderValue.ContentType.XML"]},{"name":"val all: Collection<HttpHeaderValue<String>>","description":"elide.http.api.HttpHeaderValue.Companion.all","location":"packages/serverless/elide.http.api/-http-header-value/-companion/all.html","searchKeys":["all","val all: Collection<HttpHeaderValue<String>>","elide.http.api.HttpHeaderValue.Companion.all"]},{"name":"val all: Collection<Language>","description":"elide.http.api.HttpHeaderValue.ContentLanguage.all","location":"packages/serverless/elide.http.api/-http-header-value/-content-language/all.html","searchKeys":["all","val all: Collection<Language>","elide.http.api.HttpHeaderValue.ContentLanguage.all"]},{"name":"val all: Collection<Mimetype>","description":"elide.http.api.HttpHeaderValue.ContentType.all","location":"packages/serverless/elide.http.api/-http-header-value/-content-type/all.html","searchKeys":["all","val all: Collection<Mimetype>","elide.http.api.HttpHeaderValue.ContentType.all"]},{"name":"val code: HttpStatusCode","description":"elide.http.HttpStatus.HttpStatusInfo.code","location":"packages/serverless/elide.http/-http-status/-http-status-info/code.html","searchKeys":["code","val code: HttpStatusCode","elide.http.HttpStatus.HttpStatusInfo.code"]},{"name":"val description: String","description":"elide.http.api.HttpStatus.Type.description","location":"packages/serverless/elide.http.api/-http-status/-type/description.html","searchKeys":["description","val description: String","elide.http.api.HttpStatus.Type.description"]},{"name":"val encoding: Encoding","description":"elide.http.HttpPayload.Text.encoding","location":"packages/serverless/elide.http/-http-payload/-text/encoding.html","searchKeys":["encoding","val encoding: Encoding","elide.http.HttpPayload.Text.encoding"]},{"name":"val entries: EnumEntries<HttpMessageType>","description":"elide.http.api.HttpMessageType.entries","location":"packages/serverless/elide.http.api/-http-message-type/entries.html","searchKeys":["entries","val entries: EnumEntries<HttpMessageType>","elide.http.api.HttpMessageType.entries"]},{"name":"val entries: EnumEntries<HttpStatus.Type>","description":"elide.http.api.HttpStatus.Type.entries","location":"packages/serverless/elide.http.api/-http-status/-type/entries.html","searchKeys":["entries","val entries: EnumEntries<HttpStatus.Type>","elide.http.api.HttpStatus.Type.entries"]},{"name":"val entries: EnumEntries<HttpStatusCode>","description":"elide.http.HttpStatusCode.entries","location":"packages/serverless/elide.http/-http-status-code/entries.html","searchKeys":["entries","val entries: EnumEntries<HttpStatusCode>","elide.http.HttpStatusCode.entries"]},{"name":"val entries: EnumEntries<HttpVersion>","description":"elide.http.api.HttpVersion.entries","location":"packages/serverless/elide.http.api/-http-version/entries.html","searchKeys":["entries","val entries: EnumEntries<HttpVersion>","elide.http.api.HttpVersion.entries"]},{"name":"val entries: EnumEntries<StandardHttpMethod>","description":"elide.http.api.StandardHttpMethod.entries","location":"packages/serverless/elide.http.api/-standard-http-method/entries.html","searchKeys":["entries","val entries: EnumEntries<StandardHttpMethod>","elide.http.api.StandardHttpMethod.entries"]},{"name":"val err: Boolean = false","description":"elide.http.api.HttpStatus.Type.err","location":"packages/serverless/elide.http.api/-http-status/-type/err.html","searchKeys":["err","val err: Boolean = false","elide.http.api.HttpStatus.Type.err"]},{"name":"val method: StandardHttpMethod","description":"elide.http.HttpMethod.Standard.method","location":"packages/serverless/elide.http/-http-method/-standard/method.html","searchKeys":["method","val method: StandardHttpMethod","elide.http.HttpMethod.Standard.method"]},{"name":"val name: CaseInsensitiveHttpString","description":"elide.http.api.HttpHeaders.HeaderName.name","location":"packages/serverless/elide.http.api/-http-headers/-header-name/name.html","searchKeys":["name","val name: CaseInsensitiveHttpString","elide.http.api.HttpHeaders.HeaderName.name"]},{"name":"val original: HttpString","description":"elide.http.api.CaseInsensitiveHttpString.original","location":"packages/serverless/elide.http.api/-case-insensitive-http-string/original.html","searchKeys":["original","val original: HttpString","elide.http.api.CaseInsensitiveHttpString.original"]},{"name":"val range: IntRange","description":"elide.http.api.HttpStatus.Type.range","location":"packages/serverless/elide.http.api/-http-status/-type/range.html","searchKeys":["range","val range: IntRange","elide.http.api.HttpStatus.Type.range"]},{"name":"val readMethods: Set<StandardHttpMethod>","description":"elide.http.api.StandardHttpMethod.Companion.readMethods","location":"packages/serverless/elide.http.api/-standard-http-method/-companion/read-methods.html","searchKeys":["readMethods","val readMethods: Set<StandardHttpMethod>","elide.http.api.StandardHttpMethod.Companion.readMethods"]},{"name":"val reason: HttpString? = null","description":"elide.http.HttpStatus.HttpStatusInfo.reason","location":"packages/serverless/elide.http/-http-status/-http-status-info/reason.html","searchKeys":["reason","val reason: HttpString? = null","elide.http.HttpStatus.HttpStatusInfo.reason"]},{"name":"val serverFault: Boolean = false","description":"elide.http.api.HttpStatus.Type.serverFault","location":"packages/serverless/elide.http.api/-http-status/-type/server-fault.html","searchKeys":["serverFault","val serverFault: Boolean = false","elide.http.api.HttpStatus.Type.serverFault"]},{"name":"val urlInfo: URL.ParsedURL","description":"elide.net.URL.urlInfo","location":"packages/serverless/elide.net/-u-r-l/url-info.html","searchKeys":["urlInfo","val urlInfo: URL.ParsedURL","elide.net.URL.urlInfo"]},{"name":"val writeMethods: Set<StandardHttpMethod>","description":"elide.http.api.StandardHttpMethod.Companion.writeMethods","location":"packages/serverless/elide.http.api/-standard-http-method/-companion/write-methods.html","searchKeys":["writeMethods","val writeMethods: Set<StandardHttpMethod>","elide.http.api.StandardHttpMethod.Companion.writeMethods"]},{"name":"value class HttpEncoding : HeaderValueTokenType<String> ","description":"elide.http.api.HttpEncoding","location":"packages/serverless/elide.http.api/-http-encoding/index.html","searchKeys":["HttpEncoding","value class HttpEncoding : HeaderValueTokenType<String> ","elide.http.api.HttpEncoding"]},{"name":"value class HttpStatus(statusInfo: HttpStatus.HttpStatusInfo) : HttpStatus","description":"elide.http.HttpStatus","location":"packages/serverless/elide.http/-http-status/index.html","searchKeys":["HttpStatus","value class HttpStatus(statusInfo: HttpStatus.HttpStatusInfo) : HttpStatus","elide.http.HttpStatus"]},{"name":"value class HttpToken : HeaderValueTokenType<HttpString> , HttpHeaderValue<String> ","description":"elide.http.api.HttpToken","location":"packages/serverless/elide.http.api/-http-token/index.html","searchKeys":["HttpToken","value class HttpToken : HeaderValueTokenType<HttpString> , HttpHeaderValue<String> ","elide.http.api.HttpToken"]},{"name":"value class HttpTokenList : HeaderValueMultiTokenType<String> , HttpHeaderValue<String> ","description":"elide.http.api.HttpTokenList","location":"packages/serverless/elide.http.api/-http-token-list/index.html","searchKeys":["HttpTokenList","value class HttpTokenList : HeaderValueMultiTokenType<String> , HttpHeaderValue<String> ","elide.http.api.HttpTokenList"]},{"name":"value class Language : HeaderValueTokenType<String> , HttpHeaderValue<String> ","description":"elide.http.api.Language","location":"packages/serverless/elide.http.api/-language/index.html","searchKeys":["Language","value class Language : HeaderValueTokenType<String> , HttpHeaderValue<String> ","elide.http.api.Language"]},{"name":"value class Mimetype : HeaderValueTokenType<String> , HttpHeaderValue<String> ","description":"elide.http.api.Mimetype","location":"packages/serverless/elide.http.api/-mimetype/index.html","searchKeys":["Mimetype","value class Mimetype : HeaderValueTokenType<String> , HttpHeaderValue<String> ","elide.http.api.Mimetype"]},{"name":"value class MultiValue(values: Array<out String>) : HttpHeaders.HeaderValue, Comparable<String> ","description":"elide.http.api.HttpHeaders.HeaderValue.MultiValue","location":"packages/serverless/elide.http.api/-http-headers/-header-value/-multi-value/index.html","searchKeys":["MultiValue","value class MultiValue(values: Array<out String>) : HttpHeaders.HeaderValue, Comparable<String> ","elide.http.api.HttpHeaders.HeaderValue.MultiValue"]},{"name":"value class SingleValue(value: String) : HttpHeaders.HeaderValue, Comparable<String> ","description":"elide.http.api.HttpHeaders.HeaderValue.SingleValue","location":"packages/serverless/elide.http.api/-http-headers/-header-value/-single-value/index.html","searchKeys":["SingleValue","value class SingleValue(value: String) : HttpHeaders.HeaderValue, Comparable<String> ","elide.http.api.HttpHeaders.HeaderValue.SingleValue"]},{"name":"value class Standard(val method: StandardHttpMethod) : HttpMethod","description":"elide.http.HttpMethod.Standard","location":"packages/serverless/elide.http/-http-method/-standard/index.html","searchKeys":["Standard","value class Standard(val method: StandardHttpMethod) : HttpMethod","elide.http.HttpMethod.Standard"]},{"name":"value class URL(val urlInfo: URL.ParsedURL) : URL","description":"elide.net.URL","location":"packages/serverless/elide.net/-u-r-l/index.html","searchKeys":["URL","value class URL(val urlInfo: URL.ParsedURL) : URL","elide.net.URL"]},{"name":"var encoding: Encoding","description":"elide.http.MutableHttpPayload.Text.encoding","location":"packages/serverless/elide.http/-mutable-http-payload/-text/encoding.html","searchKeys":["encoding","var encoding: Encoding","elide.http.MutableHttpPayload.Text.encoding"]},{"name":"class Wasm","description":"elide.runtime.plugins.wasm.Wasm","location":"packages/graalvm-wasm/elide.runtime.plugins.wasm/-wasm/index.html","searchKeys":["Wasm","class Wasm","elide.runtime.plugins.wasm.Wasm"]},{"name":"class WasmConfig : AbstractLanguageConfig","description":"elide.runtime.plugins.wasm.WasmConfig","location":"packages/graalvm-wasm/elide.runtime.plugins.wasm/-wasm-config/index.html","searchKeys":["WasmConfig","class WasmConfig : AbstractLanguageConfig","elide.runtime.plugins.wasm.WasmConfig"]},{"name":"object Plugin : AbstractLanguagePlugin<WasmConfig, Wasm> ","description":"elide.runtime.plugins.wasm.Wasm.Plugin","location":"packages/graalvm-wasm/elide.runtime.plugins.wasm/-wasm/-plugin/index.html","searchKeys":["Plugin","object Plugin : AbstractLanguagePlugin<WasmConfig, Wasm> ","elide.runtime.plugins.wasm.Wasm.Plugin"]},{"name":"object WebAssembly","description":"elide.runtime.gvm.wasm.WebAssembly","location":"packages/graalvm-wasm/elide.runtime.gvm.wasm/-web-assembly/index.html","searchKeys":["WebAssembly","object WebAssembly","elide.runtime.gvm.wasm.WebAssembly"]},{"name":"open override fun install(scope: EnginePlugin.InstallationScope, configuration: WasmConfig.() -> Unit): Wasm","description":"elide.runtime.plugins.wasm.Wasm.Plugin.install","location":"packages/graalvm-wasm/elide.runtime.plugins.wasm/-wasm/-plugin/install.html","searchKeys":["install","open override fun install(scope: EnginePlugin.InstallationScope, configuration: WasmConfig.() -> Unit): Wasm","elide.runtime.plugins.wasm.Wasm.Plugin.install"]},{"name":"open override val key: EnginePlugin.Key<Wasm>","description":"elide.runtime.plugins.wasm.Wasm.Plugin.key","location":"packages/graalvm-wasm/elide.runtime.plugins.wasm/-wasm/-plugin/key.html","searchKeys":["key","open override val key: EnginePlugin.Key<Wasm>","elide.runtime.plugins.wasm.Wasm.Plugin.key"]},{"name":"open override val languageId: String","description":"elide.runtime.plugins.wasm.Wasm.Plugin.languageId","location":"packages/graalvm-wasm/elide.runtime.plugins.wasm/-wasm/-plugin/language-id.html","searchKeys":["languageId","open override val languageId: String","elide.runtime.plugins.wasm.Wasm.Plugin.languageId"]},{"name":"ALLOW_ALIAS","description":"kotlinx.serialization.protobuf.schema.ProtoOption.EnumOption.ALLOW_ALIAS","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-enum-option/-a-l-l-o-w_-a-l-i-a-s/index.html","searchKeys":["ALLOW_ALIAS","ALLOW_ALIAS","kotlinx.serialization.protobuf.schema.ProtoOption.EnumOption.ALLOW_ALIAS"]},{"name":"CC_ENABLE_ARENAS","description":"kotlinx.serialization.protobuf.schema.ProtoOption.FileOption.CC_ENABLE_ARENAS","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-file-option/-c-c_-e-n-a-b-l-e_-a-r-e-n-a-s/index.html","searchKeys":["CC_ENABLE_ARENAS","CC_ENABLE_ARENAS","kotlinx.serialization.protobuf.schema.ProtoOption.FileOption.CC_ENABLE_ARENAS"]},{"name":"CC_GENERIC_SERVICES","description":"kotlinx.serialization.protobuf.schema.ProtoOption.FileOption.CC_GENERIC_SERVICES","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-file-option/-c-c_-g-e-n-e-r-i-c_-s-e-r-v-i-c-e-s/index.html","searchKeys":["CC_GENERIC_SERVICES","CC_GENERIC_SERVICES","kotlinx.serialization.protobuf.schema.ProtoOption.FileOption.CC_GENERIC_SERVICES"]},{"name":"CSHARP_NAMESPACE","description":"kotlinx.serialization.protobuf.schema.ProtoOption.FileOption.CSHARP_NAMESPACE","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-file-option/-c-s-h-a-r-p_-n-a-m-e-s-p-a-c-e/index.html","searchKeys":["CSHARP_NAMESPACE","CSHARP_NAMESPACE","kotlinx.serialization.protobuf.schema.ProtoOption.FileOption.CSHARP_NAMESPACE"]},{"name":"CTYPE","description":"kotlinx.serialization.protobuf.schema.ProtoOption.FieldOption.CTYPE","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-field-option/-c-t-y-p-e/index.html","searchKeys":["CTYPE","CTYPE","kotlinx.serialization.protobuf.schema.ProtoOption.FieldOption.CTYPE"]},{"name":"CUSTOM","description":"elide.model.token.TokenType.CUSTOM","location":"packages/model/elide.model.token/-token-type/-c-u-s-t-o-m/index.html","searchKeys":["CUSTOM","CUSTOM","elide.model.token.TokenType.CUSTOM"]},{"name":"DEPRECATED","description":"kotlinx.serialization.protobuf.schema.ProtoOption.EnumOption.DEPRECATED","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-enum-option/-d-e-p-r-e-c-a-t-e-d/index.html","searchKeys":["DEPRECATED","DEPRECATED","kotlinx.serialization.protobuf.schema.ProtoOption.EnumOption.DEPRECATED"]},{"name":"DEPRECATED","description":"kotlinx.serialization.protobuf.schema.ProtoOption.EnumValueOption.DEPRECATED","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-enum-value-option/-d-e-p-r-e-c-a-t-e-d/index.html","searchKeys":["DEPRECATED","DEPRECATED","kotlinx.serialization.protobuf.schema.ProtoOption.EnumValueOption.DEPRECATED"]},{"name":"DEPRECATED","description":"kotlinx.serialization.protobuf.schema.ProtoOption.FieldOption.DEPRECATED","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-field-option/-d-e-p-r-e-c-a-t-e-d/index.html","searchKeys":["DEPRECATED","DEPRECATED","kotlinx.serialization.protobuf.schema.ProtoOption.FieldOption.DEPRECATED"]},{"name":"DEPRECATED","description":"kotlinx.serialization.protobuf.schema.ProtoOption.FileOption.DEPRECATED","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-file-option/-d-e-p-r-e-c-a-t-e-d/index.html","searchKeys":["DEPRECATED","DEPRECATED","kotlinx.serialization.protobuf.schema.ProtoOption.FileOption.DEPRECATED"]},{"name":"DEPRECATED","description":"kotlinx.serialization.protobuf.schema.ProtoOption.MessageOption.DEPRECATED","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-message-option/-d-e-p-r-e-c-a-t-e-d/index.html","searchKeys":["DEPRECATED","DEPRECATED","kotlinx.serialization.protobuf.schema.ProtoOption.MessageOption.DEPRECATED"]},{"name":"DEPRECATED","description":"kotlinx.serialization.protobuf.schema.ProtoOption.MethodOption.DEPRECATED","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-method-option/-d-e-p-r-e-c-a-t-e-d/index.html","searchKeys":["DEPRECATED","DEPRECATED","kotlinx.serialization.protobuf.schema.ProtoOption.MethodOption.DEPRECATED"]},{"name":"DEPRECATED","description":"kotlinx.serialization.protobuf.schema.ProtoOption.ServiceOption.DEPRECATED","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-service-option/-d-e-p-r-e-c-a-t-e-d/index.html","searchKeys":["DEPRECATED","DEPRECATED","kotlinx.serialization.protobuf.schema.ProtoOption.ServiceOption.DEPRECATED"]},{"name":"ENUM","description":"kotlinx.serialization.protobuf.schema.ProtoOption.Target.ENUM","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-target/-e-n-u-m/index.html","searchKeys":["ENUM","ENUM","kotlinx.serialization.protobuf.schema.ProtoOption.Target.ENUM"]},{"name":"ENUM_VALUE","description":"kotlinx.serialization.protobuf.schema.ProtoOption.Target.ENUM_VALUE","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-target/-e-n-u-m_-v-a-l-u-e/index.html","searchKeys":["ENUM_VALUE","ENUM_VALUE","kotlinx.serialization.protobuf.schema.ProtoOption.Target.ENUM_VALUE"]},{"name":"FIELD","description":"kotlinx.serialization.protobuf.schema.ProtoOption.Target.FIELD","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-target/-f-i-e-l-d/index.html","searchKeys":["FIELD","FIELD","kotlinx.serialization.protobuf.schema.ProtoOption.Target.FIELD"]},{"name":"FILE","description":"kotlinx.serialization.protobuf.schema.ProtoOption.Target.FILE","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-target/-f-i-l-e/index.html","searchKeys":["FILE","FILE","kotlinx.serialization.protobuf.schema.ProtoOption.Target.FILE"]},{"name":"GO_PACKAGE","description":"kotlinx.serialization.protobuf.schema.ProtoOption.FileOption.GO_PACKAGE","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-file-option/-g-o_-p-a-c-k-a-g-e/index.html","searchKeys":["GO_PACKAGE","GO_PACKAGE","kotlinx.serialization.protobuf.schema.ProtoOption.FileOption.GO_PACKAGE"]},{"name":"IDEMPOTENCY_LEVEL","description":"kotlinx.serialization.protobuf.schema.ProtoOption.MethodOption.IDEMPOTENCY_LEVEL","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-method-option/-i-d-e-m-p-o-t-e-n-c-y_-l-e-v-e-l/index.html","searchKeys":["IDEMPOTENCY_LEVEL","IDEMPOTENCY_LEVEL","kotlinx.serialization.protobuf.schema.ProtoOption.MethodOption.IDEMPOTENCY_LEVEL"]},{"name":"JAVA_GENERATE_EQUALS_AND_HASH","description":"kotlinx.serialization.protobuf.schema.ProtoOption.FileOption.JAVA_GENERATE_EQUALS_AND_HASH","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-file-option/-j-a-v-a_-g-e-n-e-r-a-t-e_-e-q-u-a-l-s_-a-n-d_-h-a-s-h/index.html","searchKeys":["JAVA_GENERATE_EQUALS_AND_HASH","JAVA_GENERATE_EQUALS_AND_HASH","kotlinx.serialization.protobuf.schema.ProtoOption.FileOption.JAVA_GENERATE_EQUALS_AND_HASH"]},{"name":"JAVA_GENERIC_SERVICES","description":"kotlinx.serialization.protobuf.schema.ProtoOption.FileOption.JAVA_GENERIC_SERVICES","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-file-option/-j-a-v-a_-g-e-n-e-r-i-c_-s-e-r-v-i-c-e-s/index.html","searchKeys":["JAVA_GENERIC_SERVICES","JAVA_GENERIC_SERVICES","kotlinx.serialization.protobuf.schema.ProtoOption.FileOption.JAVA_GENERIC_SERVICES"]},{"name":"JAVA_MULTIPLE_FILES","description":"kotlinx.serialization.protobuf.schema.ProtoOption.FileOption.JAVA_MULTIPLE_FILES","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-file-option/-j-a-v-a_-m-u-l-t-i-p-l-e_-f-i-l-e-s/index.html","searchKeys":["JAVA_MULTIPLE_FILES","JAVA_MULTIPLE_FILES","kotlinx.serialization.protobuf.schema.ProtoOption.FileOption.JAVA_MULTIPLE_FILES"]},{"name":"JAVA_OUTER_CLASSNAME","description":"kotlinx.serialization.protobuf.schema.ProtoOption.FileOption.JAVA_OUTER_CLASSNAME","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-file-option/-j-a-v-a_-o-u-t-e-r_-c-l-a-s-s-n-a-m-e/index.html","searchKeys":["JAVA_OUTER_CLASSNAME","JAVA_OUTER_CLASSNAME","kotlinx.serialization.protobuf.schema.ProtoOption.FileOption.JAVA_OUTER_CLASSNAME"]},{"name":"JAVA_PACKAGE","description":"kotlinx.serialization.protobuf.schema.ProtoOption.FileOption.JAVA_PACKAGE","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-file-option/-j-a-v-a_-p-a-c-k-a-g-e/index.html","searchKeys":["JAVA_PACKAGE","JAVA_PACKAGE","kotlinx.serialization.protobuf.schema.ProtoOption.FileOption.JAVA_PACKAGE"]},{"name":"JAVA_STRING_CHECK_UTF8","description":"kotlinx.serialization.protobuf.schema.ProtoOption.FileOption.JAVA_STRING_CHECK_UTF8","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-file-option/-j-a-v-a_-s-t-r-i-n-g_-c-h-e-c-k_-u-t-f8/index.html","searchKeys":["JAVA_STRING_CHECK_UTF8","JAVA_STRING_CHECK_UTF8","kotlinx.serialization.protobuf.schema.ProtoOption.FileOption.JAVA_STRING_CHECK_UTF8"]},{"name":"JSTYPE","description":"kotlinx.serialization.protobuf.schema.ProtoOption.FieldOption.JSTYPE","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-field-option/-j-s-t-y-p-e/index.html","searchKeys":["JSTYPE","JSTYPE","kotlinx.serialization.protobuf.schema.ProtoOption.FieldOption.JSTYPE"]},{"name":"JWT","description":"elide.model.token.TokenType.JWT","location":"packages/model/elide.model.token/-token-type/-j-w-t/index.html","searchKeys":["JWT","JWT","elide.model.token.TokenType.JWT"]},{"name":"LAZY","description":"kotlinx.serialization.protobuf.schema.ProtoOption.FieldOption.LAZY","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-field-option/-l-a-z-y/index.html","searchKeys":["LAZY","LAZY","kotlinx.serialization.protobuf.schema.ProtoOption.FieldOption.LAZY"]},{"name":"MAP_ENTRY","description":"kotlinx.serialization.protobuf.schema.ProtoOption.MessageOption.MAP_ENTRY","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-message-option/-m-a-p_-e-n-t-r-y/index.html","searchKeys":["MAP_ENTRY","MAP_ENTRY","kotlinx.serialization.protobuf.schema.ProtoOption.MessageOption.MAP_ENTRY"]},{"name":"MESSAGE","description":"kotlinx.serialization.protobuf.schema.ProtoOption.Target.MESSAGE","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-target/-m-e-s-s-a-g-e/index.html","searchKeys":["MESSAGE","MESSAGE","kotlinx.serialization.protobuf.schema.ProtoOption.Target.MESSAGE"]},{"name":"MESSAGE_SET_WIRE_FORMAT","description":"kotlinx.serialization.protobuf.schema.ProtoOption.MessageOption.MESSAGE_SET_WIRE_FORMAT","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-message-option/-m-e-s-s-a-g-e_-s-e-t_-w-i-r-e_-f-o-r-m-a-t/index.html","searchKeys":["MESSAGE_SET_WIRE_FORMAT","MESSAGE_SET_WIRE_FORMAT","kotlinx.serialization.protobuf.schema.ProtoOption.MessageOption.MESSAGE_SET_WIRE_FORMAT"]},{"name":"METHOD","description":"kotlinx.serialization.protobuf.schema.ProtoOption.Target.METHOD","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-target/-m-e-t-h-o-d/index.html","searchKeys":["METHOD","METHOD","kotlinx.serialization.protobuf.schema.ProtoOption.Target.METHOD"]},{"name":"NO_STANDARD_DESCRIPTOR_ACCESSOR","description":"kotlinx.serialization.protobuf.schema.ProtoOption.MessageOption.NO_STANDARD_DESCRIPTOR_ACCESSOR","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-message-option/-n-o_-s-t-a-n-d-a-r-d_-d-e-s-c-r-i-p-t-o-r_-a-c-c-e-s-s-o-r/index.html","searchKeys":["NO_STANDARD_DESCRIPTOR_ACCESSOR","NO_STANDARD_DESCRIPTOR_ACCESSOR","kotlinx.serialization.protobuf.schema.ProtoOption.MessageOption.NO_STANDARD_DESCRIPTOR_ACCESSOR"]},{"name":"OAUTH2_ACCESS_TOKEN","description":"elide.model.token.TokenType.OAUTH2_ACCESS_TOKEN","location":"packages/model/elide.model.token/-token-type/-o-a-u-t-h2_-a-c-c-e-s-s_-t-o-k-e-n/index.html","searchKeys":["OAUTH2_ACCESS_TOKEN","OAUTH2_ACCESS_TOKEN","elide.model.token.TokenType.OAUTH2_ACCESS_TOKEN"]},{"name":"OAUTH2_CODE","description":"elide.model.token.TokenType.OAUTH2_CODE","location":"packages/model/elide.model.token/-token-type/-o-a-u-t-h2_-c-o-d-e/index.html","searchKeys":["OAUTH2_CODE","OAUTH2_CODE","elide.model.token.TokenType.OAUTH2_CODE"]},{"name":"OAUTH2_REFRESH_TOKEN","description":"elide.model.token.TokenType.OAUTH2_REFRESH_TOKEN","location":"packages/model/elide.model.token/-token-type/-o-a-u-t-h2_-r-e-f-r-e-s-h_-t-o-k-e-n/index.html","searchKeys":["OAUTH2_REFRESH_TOKEN","OAUTH2_REFRESH_TOKEN","elide.model.token.TokenType.OAUTH2_REFRESH_TOKEN"]},{"name":"OBJC_CLASS_PREFIX","description":"kotlinx.serialization.protobuf.schema.ProtoOption.FileOption.OBJC_CLASS_PREFIX","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-file-option/-o-b-j-c_-c-l-a-s-s_-p-r-e-f-i-x/index.html","searchKeys":["OBJC_CLASS_PREFIX","OBJC_CLASS_PREFIX","kotlinx.serialization.protobuf.schema.ProtoOption.FileOption.OBJC_CLASS_PREFIX"]},{"name":"OPTIMIZE_FOR","description":"kotlinx.serialization.protobuf.schema.ProtoOption.FileOption.OPTIMIZE_FOR","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-file-option/-o-p-t-i-m-i-z-e_-f-o-r/index.html","searchKeys":["OPTIMIZE_FOR","OPTIMIZE_FOR","kotlinx.serialization.protobuf.schema.ProtoOption.FileOption.OPTIMIZE_FOR"]},{"name":"PACKED","description":"kotlinx.serialization.protobuf.schema.ProtoOption.FieldOption.PACKED","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-field-option/-p-a-c-k-e-d/index.html","searchKeys":["PACKED","PACKED","kotlinx.serialization.protobuf.schema.ProtoOption.FieldOption.PACKED"]},{"name":"PHP_CLASS_PREFIX","description":"kotlinx.serialization.protobuf.schema.ProtoOption.FileOption.PHP_CLASS_PREFIX","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-file-option/-p-h-p_-c-l-a-s-s_-p-r-e-f-i-x/index.html","searchKeys":["PHP_CLASS_PREFIX","PHP_CLASS_PREFIX","kotlinx.serialization.protobuf.schema.ProtoOption.FileOption.PHP_CLASS_PREFIX"]},{"name":"PHP_METADATA_NAMESPACE","description":"kotlinx.serialization.protobuf.schema.ProtoOption.FileOption.PHP_METADATA_NAMESPACE","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-file-option/-p-h-p_-m-e-t-a-d-a-t-a_-n-a-m-e-s-p-a-c-e/index.html","searchKeys":["PHP_METADATA_NAMESPACE","PHP_METADATA_NAMESPACE","kotlinx.serialization.protobuf.schema.ProtoOption.FileOption.PHP_METADATA_NAMESPACE"]},{"name":"PHP_NAMESPACE","description":"kotlinx.serialization.protobuf.schema.ProtoOption.FileOption.PHP_NAMESPACE","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-file-option/-p-h-p_-n-a-m-e-s-p-a-c-e/index.html","searchKeys":["PHP_NAMESPACE","PHP_NAMESPACE","kotlinx.serialization.protobuf.schema.ProtoOption.FileOption.PHP_NAMESPACE"]},{"name":"PROTO2","description":"kotlinx.serialization.protobuf.schema.ProtoBufSyntaxVersion.PROTO2","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-buf-syntax-version/-p-r-o-t-o2/index.html","searchKeys":["PROTO2","PROTO2","kotlinx.serialization.protobuf.schema.ProtoBufSyntaxVersion.PROTO2"]},{"name":"PROTO3","description":"kotlinx.serialization.protobuf.schema.ProtoBufSyntaxVersion.PROTO3","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-buf-syntax-version/-p-r-o-t-o3/index.html","searchKeys":["PROTO3","PROTO3","kotlinx.serialization.protobuf.schema.ProtoBufSyntaxVersion.PROTO3"]},{"name":"PY_GENERIC_SERVICES","description":"kotlinx.serialization.protobuf.schema.ProtoOption.FileOption.PY_GENERIC_SERVICES","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-file-option/-p-y_-g-e-n-e-r-i-c_-s-e-r-v-i-c-e-s/index.html","searchKeys":["PY_GENERIC_SERVICES","PY_GENERIC_SERVICES","kotlinx.serialization.protobuf.schema.ProtoOption.FileOption.PY_GENERIC_SERVICES"]},{"name":"RUBY_PACKAGE","description":"kotlinx.serialization.protobuf.schema.ProtoOption.FileOption.RUBY_PACKAGE","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-file-option/-r-u-b-y_-p-a-c-k-a-g-e/index.html","searchKeys":["RUBY_PACKAGE","RUBY_PACKAGE","kotlinx.serialization.protobuf.schema.ProtoOption.FileOption.RUBY_PACKAGE"]},{"name":"SERVICE","description":"kotlinx.serialization.protobuf.schema.ProtoOption.Target.SERVICE","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-target/-s-e-r-v-i-c-e/index.html","searchKeys":["SERVICE","SERVICE","kotlinx.serialization.protobuf.schema.ProtoOption.Target.SERVICE"]},{"name":"SWIFT_PREFIX","description":"kotlinx.serialization.protobuf.schema.ProtoOption.FileOption.SWIFT_PREFIX","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-file-option/-s-w-i-f-t_-p-r-e-f-i-x/index.html","searchKeys":["SWIFT_PREFIX","SWIFT_PREFIX","kotlinx.serialization.protobuf.schema.ProtoOption.FileOption.SWIFT_PREFIX"]},{"name":"WEAK","description":"kotlinx.serialization.protobuf.schema.ProtoOption.FieldOption.WEAK","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-field-option/-w-e-a-k/index.html","searchKeys":["WEAK","WEAK","kotlinx.serialization.protobuf.schema.ProtoOption.FieldOption.WEAK"]},{"name":"abstract fun generateSchemaText(descriptors: List<SerialDescriptor>, options: ProtoBufGeneratorOptions = ProtoBufGeneratorOptions.DEFAULTS): String","description":"kotlinx.serialization.protobuf.schema.ProtoBufSchemaBuilder.generateSchemaText","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-buf-schema-builder/generate-schema-text.html","searchKeys":["generateSchemaText","abstract fun generateSchemaText(descriptors: List<SerialDescriptor>, options: ProtoBufGeneratorOptions = ProtoBufGeneratorOptions.DEFAULTS): String","kotlinx.serialization.protobuf.schema.ProtoBufSchemaBuilder.generateSchemaText"]},{"name":"abstract val option: ProtoOption<T>","description":"kotlinx.serialization.protobuf.schema.ProtoOption.KnownOption.option","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-known-option/option.html","searchKeys":["option","abstract val option: ProtoOption<T>","kotlinx.serialization.protobuf.schema.ProtoOption.KnownOption.option"]},{"name":"abstract val scope: ProtoOption.Scope","description":"kotlinx.serialization.protobuf.schema.ProtoOption.scope","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/scope.html","searchKeys":["scope","abstract val scope: ProtoOption.Scope","kotlinx.serialization.protobuf.schema.ProtoOption.scope"]},{"name":"abstract val symbol: String","description":"kotlinx.serialization.protobuf.schema.ProtoOption.SymbolicOption.symbol","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-symbolic-option/symbol.html","searchKeys":["symbol","abstract val symbol: String","kotlinx.serialization.protobuf.schema.ProtoOption.SymbolicOption.symbol"]},{"name":"abstract val symbol: String","description":"kotlinx.serialization.protobuf.schema.ProtoOption.symbol","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/symbol.html","searchKeys":["symbol","abstract val symbol: String","kotlinx.serialization.protobuf.schema.ProtoOption.symbol"]},{"name":"abstract val targets: EnumSet<ProtoOption.Target>","description":"kotlinx.serialization.protobuf.schema.ProtoOption.targets","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/targets.html","searchKeys":["targets","abstract val targets: EnumSet<ProtoOption.Target>","kotlinx.serialization.protobuf.schema.ProtoOption.targets"]},{"name":"abstract val value: T?","description":"kotlinx.serialization.protobuf.schema.ProtoOption.value","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/value.html","searchKeys":["value","abstract val value: T?","kotlinx.serialization.protobuf.schema.ProtoOption.value"]},{"name":"annotation class Model","description":"elide.model.annotations.Model","location":"packages/model/elide.model.annotations/-model/index.html","searchKeys":["Model","annotation class Model","elide.model.annotations.Model"]},{"name":"annotation class ProtoDeprecated","description":"kotlinx.serialization.protobuf.ProtoDeprecated","location":"packages/model/kotlinx.serialization.protobuf/-proto-deprecated/index.html","searchKeys":["ProtoDeprecated","annotation class ProtoDeprecated","kotlinx.serialization.protobuf.ProtoDeprecated"]},{"name":"annotation class ProtoEnum(val unknownName: String, val aliases: Boolean)","description":"kotlinx.serialization.protobuf.ProtoEnum","location":"packages/model/kotlinx.serialization.protobuf/-proto-enum/index.html","searchKeys":["ProtoEnum","annotation class ProtoEnum(val unknownName: String, val aliases: Boolean)","kotlinx.serialization.protobuf.ProtoEnum"]},{"name":"annotation class ProtoFieldName(val name: String)","description":"kotlinx.serialization.protobuf.ProtoFieldName","location":"packages/model/kotlinx.serialization.protobuf/-proto-field-name/index.html","searchKeys":["ProtoFieldName","annotation class ProtoFieldName(val name: String)","kotlinx.serialization.protobuf.ProtoFieldName"]},{"name":"annotation class ProtoFieldsPreserve(val name: String)","description":"kotlinx.serialization.protobuf.ProtoFieldsPreserve","location":"packages/model/kotlinx.serialization.protobuf/-proto-fields-preserve/index.html","searchKeys":["ProtoFieldsPreserve","annotation class ProtoFieldsPreserve(val name: String)","kotlinx.serialization.protobuf.ProtoFieldsPreserve"]},{"name":"annotation class ProtoUnknown","description":"kotlinx.serialization.protobuf.ProtoUnknown","location":"packages/model/kotlinx.serialization.protobuf/-proto-unknown/index.html","searchKeys":["ProtoUnknown","annotation class ProtoUnknown","kotlinx.serialization.protobuf.ProtoUnknown"]},{"name":"class All : ProtoOption.Scope","description":"kotlinx.serialization.protobuf.schema.ProtoOption.Scope.All","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-scope/-all/index.html","searchKeys":["All","class All : ProtoOption.Scope","kotlinx.serialization.protobuf.schema.ProtoOption.Scope.All"]},{"name":"class Enum(val enumName: String) : ProtoOption.Scope","description":"kotlinx.serialization.protobuf.schema.ProtoOption.Scope.Enum","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-scope/-enum/index.html","searchKeys":["Enum","class Enum(val enumName: String) : ProtoOption.Scope","kotlinx.serialization.protobuf.schema.ProtoOption.Scope.Enum"]},{"name":"class Global : ProtoOption.Scope","description":"kotlinx.serialization.protobuf.schema.ProtoOption.Scope.Global","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-scope/-global/index.html","searchKeys":["Global","class Global : ProtoOption.Scope","kotlinx.serialization.protobuf.schema.ProtoOption.Scope.Global"]},{"name":"class Message(val messageName: String) : ProtoOption.Scope","description":"kotlinx.serialization.protobuf.schema.ProtoOption.Scope.Message","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-scope/-message/index.html","searchKeys":["Message","class Message(val messageName: String) : ProtoOption.Scope","kotlinx.serialization.protobuf.schema.ProtoOption.Scope.Message"]},{"name":"class None : ProtoOption.Scope","description":"kotlinx.serialization.protobuf.schema.ProtoOption.Scope.None","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-scope/-none/index.html","searchKeys":["None","class None : ProtoOption.Scope","kotlinx.serialization.protobuf.schema.ProtoOption.Scope.None"]},{"name":"class Package(val packageName: String) : ProtoOption.Scope","description":"kotlinx.serialization.protobuf.schema.ProtoOption.Scope.Package","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-scope/-package/index.html","searchKeys":["Package","class Package(val packageName: String) : ProtoOption.Scope","kotlinx.serialization.protobuf.schema.ProtoOption.Scope.Package"]},{"name":"constructor()","description":"elide.model.WireMessage.WireMessage","location":"packages/model/elide.model/-wire-message/-wire-message.html","searchKeys":["WireMessage","constructor()","elide.model.WireMessage.WireMessage"]},{"name":"constructor()","description":"kotlinx.serialization.protobuf.schema.ProtoOption.Scope.All.All","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-scope/-all/-all.html","searchKeys":["All","constructor()","kotlinx.serialization.protobuf.schema.ProtoOption.Scope.All.All"]},{"name":"constructor()","description":"kotlinx.serialization.protobuf.schema.ProtoOption.Scope.Global.Global","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-scope/-global/-global.html","searchKeys":["Global","constructor()","kotlinx.serialization.protobuf.schema.ProtoOption.Scope.Global.Global"]},{"name":"constructor()","description":"kotlinx.serialization.protobuf.schema.ProtoOption.Scope.None.None","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-scope/-none/-none.html","searchKeys":["None","constructor()","kotlinx.serialization.protobuf.schema.ProtoOption.Scope.None.None"]},{"name":"constructor(checkUtf8: Boolean = false)","description":"kotlinx.serialization.protobuf.schema.ProtoOption.FileOptions.JavaStringCheckUtf8.JavaStringCheckUtf8","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-file-options/-java-string-check-utf8/-java-string-check-utf8.html","searchKeys":["JavaStringCheckUtf8","constructor(checkUtf8: Boolean = false)","kotlinx.serialization.protobuf.schema.ProtoOption.FileOptions.JavaStringCheckUtf8.JavaStringCheckUtf8"]},{"name":"constructor(className: String)","description":"kotlinx.serialization.protobuf.schema.ProtoOption.FileOptions.JavaOuterClassname.JavaOuterClassname","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-file-options/-java-outer-classname/-java-outer-classname.html","searchKeys":["JavaOuterClassname","constructor(className: String)","kotlinx.serialization.protobuf.schema.ProtoOption.FileOptions.JavaOuterClassname.JavaOuterClassname"]},{"name":"constructor(deprecated: Boolean = true)","description":"kotlinx.serialization.protobuf.schema.ProtoOption.FileOptions.Deprecated.Deprecated","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-file-options/-deprecated/-deprecated.html","searchKeys":["Deprecated","constructor(deprecated: Boolean = true)","kotlinx.serialization.protobuf.schema.ProtoOption.FileOptions.Deprecated.Deprecated"]},{"name":"constructor(deprecated: Boolean = true, scope: ProtoOption.Scope)","description":"kotlinx.serialization.protobuf.schema.ProtoOption.MessageOptions.Deprecated.Deprecated","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-message-options/-deprecated/-deprecated.html","searchKeys":["Deprecated","constructor(deprecated: Boolean = true, scope: ProtoOption.Scope)","kotlinx.serialization.protobuf.schema.ProtoOption.MessageOptions.Deprecated.Deprecated"]},{"name":"constructor(enumName: String)","description":"kotlinx.serialization.protobuf.schema.ProtoOption.Scope.Enum.Enum","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-scope/-enum/-enum.html","searchKeys":["Enum","constructor(enumName: String)","kotlinx.serialization.protobuf.schema.ProtoOption.Scope.Enum.Enum"]},{"name":"constructor(generateEqualsAndHash: Boolean = true)","description":"kotlinx.serialization.protobuf.schema.ProtoOption.FileOptions.JavaGenerateEqualsAndHash.JavaGenerateEqualsAndHash","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-file-options/-java-generate-equals-and-hash/-java-generate-equals-and-hash.html","searchKeys":["JavaGenerateEqualsAndHash","constructor(generateEqualsAndHash: Boolean = true)","kotlinx.serialization.protobuf.schema.ProtoOption.FileOptions.JavaGenerateEqualsAndHash.JavaGenerateEqualsAndHash"]},{"name":"constructor(messageName: String)","description":"kotlinx.serialization.protobuf.schema.ProtoOption.Scope.Message.Message","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-scope/-message/-message.html","searchKeys":["Message","constructor(messageName: String)","kotlinx.serialization.protobuf.schema.ProtoOption.Scope.Message.Message"]},{"name":"constructor(messageSetWireFormat: Boolean, scope: ProtoOption.Scope)","description":"kotlinx.serialization.protobuf.schema.ProtoOption.MessageOptions.MessageSetWireFormat.MessageSetWireFormat","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-message-options/-message-set-wire-format/-message-set-wire-format.html","searchKeys":["MessageSetWireFormat","constructor(messageSetWireFormat: Boolean, scope: ProtoOption.Scope)","kotlinx.serialization.protobuf.schema.ProtoOption.MessageOptions.MessageSetWireFormat.MessageSetWireFormat"]},{"name":"constructor(multipleFiles: Boolean = true)","description":"kotlinx.serialization.protobuf.schema.ProtoOption.FileOptions.JavaMultipleFiles.JavaMultipleFiles","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-file-options/-java-multiple-files/-java-multiple-files.html","searchKeys":["JavaMultipleFiles","constructor(multipleFiles: Boolean = true)","kotlinx.serialization.protobuf.schema.ProtoOption.FileOptions.JavaMultipleFiles.JavaMultipleFiles"]},{"name":"constructor(noStandardDescriptorAccessor: Boolean = true, scope: ProtoOption.Scope)","description":"kotlinx.serialization.protobuf.schema.ProtoOption.MessageOptions.NoStandardDescriptorAccessor.NoStandardDescriptorAccessor","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-message-options/-no-standard-descriptor-accessor/-no-standard-descriptor-accessor.html","searchKeys":["NoStandardDescriptorAccessor","constructor(noStandardDescriptorAccessor: Boolean = true, scope: ProtoOption.Scope)","kotlinx.serialization.protobuf.schema.ProtoOption.MessageOptions.NoStandardDescriptorAccessor.NoStandardDescriptorAccessor"]},{"name":"constructor(optimizeFor: DescriptorProtos.FileOptions.OptimizeMode)","description":"kotlinx.serialization.protobuf.schema.ProtoOption.FileOptions.OptimizeFor.OptimizeFor","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-file-options/-optimize-for/-optimize-for.html","searchKeys":["OptimizeFor","constructor(optimizeFor: DescriptorProtos.FileOptions.OptimizeMode)","kotlinx.serialization.protobuf.schema.ProtoOption.FileOptions.OptimizeFor.OptimizeFor"]},{"name":"constructor(packageName: String)","description":"kotlinx.serialization.protobuf.schema.ProtoOption.FileOptions.JavaPackage.JavaPackage","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-file-options/-java-package/-java-package.html","searchKeys":["JavaPackage","constructor(packageName: String)","kotlinx.serialization.protobuf.schema.ProtoOption.FileOptions.JavaPackage.JavaPackage"]},{"name":"constructor(packageName: String)","description":"kotlinx.serialization.protobuf.schema.ProtoOption.Scope.Package.Package","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-scope/-package/-package.html","searchKeys":["Package","constructor(packageName: String)","kotlinx.serialization.protobuf.schema.ProtoOption.Scope.Package.Package"]},{"name":"constructor(packageName: String? = null, packageOptions: Map<String, String>? = null, protoOptions: Collection<ProtoOption<*>> = emptyList(), emitWarningComments: Boolean = false, syntaxVersion: ProtoBufSyntaxVersion = ProtoBufSyntaxVersion.PROTO2)","description":"kotlinx.serialization.protobuf.schema.ProtoBufGeneratorOptions.ProtoBufGeneratorOptions","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-buf-generator-options/-proto-buf-generator-options.html","searchKeys":["ProtoBufGeneratorOptions","constructor(packageName: String? = null, packageOptions: Map<String, String>? = null, protoOptions: Collection<ProtoOption<*>> = emptyList(), emitWarningComments: Boolean = false, syntaxVersion: ProtoBufSyntaxVersion = ProtoBufSyntaxVersion.PROTO2)","kotlinx.serialization.protobuf.schema.ProtoBufGeneratorOptions.ProtoBufGeneratorOptions"]},{"name":"data class Deprecated(val deprecated: Boolean = true) : ProtoOption.KnownFileOption<Boolean> ","description":"kotlinx.serialization.protobuf.schema.ProtoOption.FileOptions.Deprecated","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-file-options/-deprecated/index.html","searchKeys":["Deprecated","data class Deprecated(val deprecated: Boolean = true) : ProtoOption.KnownFileOption<Boolean> ","kotlinx.serialization.protobuf.schema.ProtoOption.FileOptions.Deprecated"]},{"name":"data class Deprecated(val deprecated: Boolean = true, val scope: ProtoOption.Scope) : ProtoOption.KnownMessageOption<Boolean> ","description":"kotlinx.serialization.protobuf.schema.ProtoOption.MessageOptions.Deprecated","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-message-options/-deprecated/index.html","searchKeys":["Deprecated","data class Deprecated(val deprecated: Boolean = true, val scope: ProtoOption.Scope) : ProtoOption.KnownMessageOption<Boolean> ","kotlinx.serialization.protobuf.schema.ProtoOption.MessageOptions.Deprecated"]},{"name":"data class JavaGenerateEqualsAndHash(val generateEqualsAndHash: Boolean = true) : ProtoOption.KnownFileOption<Boolean> ","description":"kotlinx.serialization.protobuf.schema.ProtoOption.FileOptions.JavaGenerateEqualsAndHash","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-file-options/-java-generate-equals-and-hash/index.html","searchKeys":["JavaGenerateEqualsAndHash","data class JavaGenerateEqualsAndHash(val generateEqualsAndHash: Boolean = true) : ProtoOption.KnownFileOption<Boolean> ","kotlinx.serialization.protobuf.schema.ProtoOption.FileOptions.JavaGenerateEqualsAndHash"]},{"name":"data class JavaMultipleFiles(val multipleFiles: Boolean = true) : ProtoOption.KnownFileOption<Boolean> ","description":"kotlinx.serialization.protobuf.schema.ProtoOption.FileOptions.JavaMultipleFiles","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-file-options/-java-multiple-files/index.html","searchKeys":["JavaMultipleFiles","data class JavaMultipleFiles(val multipleFiles: Boolean = true) : ProtoOption.KnownFileOption<Boolean> ","kotlinx.serialization.protobuf.schema.ProtoOption.FileOptions.JavaMultipleFiles"]},{"name":"data class JavaOuterClassname(val className: String) : ProtoOption.KnownFileOption<String> ","description":"kotlinx.serialization.protobuf.schema.ProtoOption.FileOptions.JavaOuterClassname","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-file-options/-java-outer-classname/index.html","searchKeys":["JavaOuterClassname","data class JavaOuterClassname(val className: String) : ProtoOption.KnownFileOption<String> ","kotlinx.serialization.protobuf.schema.ProtoOption.FileOptions.JavaOuterClassname"]},{"name":"data class JavaPackage(val packageName: String) : ProtoOption.KnownFileOption<String> ","description":"kotlinx.serialization.protobuf.schema.ProtoOption.FileOptions.JavaPackage","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-file-options/-java-package/index.html","searchKeys":["JavaPackage","data class JavaPackage(val packageName: String) : ProtoOption.KnownFileOption<String> ","kotlinx.serialization.protobuf.schema.ProtoOption.FileOptions.JavaPackage"]},{"name":"data class JavaStringCheckUtf8(val checkUtf8: Boolean = false) : ProtoOption.KnownFileOption<Boolean> ","description":"kotlinx.serialization.protobuf.schema.ProtoOption.FileOptions.JavaStringCheckUtf8","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-file-options/-java-string-check-utf8/index.html","searchKeys":["JavaStringCheckUtf8","data class JavaStringCheckUtf8(val checkUtf8: Boolean = false) : ProtoOption.KnownFileOption<Boolean> ","kotlinx.serialization.protobuf.schema.ProtoOption.FileOptions.JavaStringCheckUtf8"]},{"name":"data class MessageSetWireFormat(val messageSetWireFormat: Boolean, val scope: ProtoOption.Scope) : ProtoOption.KnownMessageOption<Boolean> ","description":"kotlinx.serialization.protobuf.schema.ProtoOption.MessageOptions.MessageSetWireFormat","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-message-options/-message-set-wire-format/index.html","searchKeys":["MessageSetWireFormat","data class MessageSetWireFormat(val messageSetWireFormat: Boolean, val scope: ProtoOption.Scope) : ProtoOption.KnownMessageOption<Boolean> ","kotlinx.serialization.protobuf.schema.ProtoOption.MessageOptions.MessageSetWireFormat"]},{"name":"data class NoStandardDescriptorAccessor(val noStandardDescriptorAccessor: Boolean = true, val scope: ProtoOption.Scope) : ProtoOption.KnownMessageOption<Boolean> ","description":"kotlinx.serialization.protobuf.schema.ProtoOption.MessageOptions.NoStandardDescriptorAccessor","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-message-options/-no-standard-descriptor-accessor/index.html","searchKeys":["NoStandardDescriptorAccessor","data class NoStandardDescriptorAccessor(val noStandardDescriptorAccessor: Boolean = true, val scope: ProtoOption.Scope) : ProtoOption.KnownMessageOption<Boolean> ","kotlinx.serialization.protobuf.schema.ProtoOption.MessageOptions.NoStandardDescriptorAccessor"]},{"name":"data class OptimizeFor(val optimizeFor: DescriptorProtos.FileOptions.OptimizeMode) : ProtoOption.KnownFileOption<DescriptorProtos.FileOptions.OptimizeMode> ","description":"kotlinx.serialization.protobuf.schema.ProtoOption.FileOptions.OptimizeFor","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-file-options/-optimize-for/index.html","searchKeys":["OptimizeFor","data class OptimizeFor(val optimizeFor: DescriptorProtos.FileOptions.OptimizeMode) : ProtoOption.KnownFileOption<DescriptorProtos.FileOptions.OptimizeMode> ","kotlinx.serialization.protobuf.schema.ProtoOption.FileOptions.OptimizeFor"]},{"name":"data class ProtoBufGeneratorOptions(val packageName: String? = null, val packageOptions: Map<String, String>? = null, val protoOptions: Collection<ProtoOption<*>> = emptyList(), val emitWarningComments: Boolean = false, val syntaxVersion: ProtoBufSyntaxVersion = ProtoBufSyntaxVersion.PROTO2)","description":"kotlinx.serialization.protobuf.schema.ProtoBufGeneratorOptions","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-buf-generator-options/index.html","searchKeys":["ProtoBufGeneratorOptions","data class ProtoBufGeneratorOptions(val packageName: String? = null, val packageOptions: Map<String, String>? = null, val protoOptions: Collection<ProtoOption<*>> = emptyList(), val emitWarningComments: Boolean = false, val syntaxVersion: ProtoBufSyntaxVersion = ProtoBufSyntaxVersion.PROTO2)","kotlinx.serialization.protobuf.schema.ProtoBufGeneratorOptions"]},{"name":"enum EnumOption : Enum<ProtoOption.EnumOption> , ProtoOption.SymbolicOption","description":"kotlinx.serialization.protobuf.schema.ProtoOption.EnumOption","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-enum-option/index.html","searchKeys":["EnumOption","enum EnumOption : Enum<ProtoOption.EnumOption> , ProtoOption.SymbolicOption","kotlinx.serialization.protobuf.schema.ProtoOption.EnumOption"]},{"name":"enum EnumValueOption : Enum<ProtoOption.EnumValueOption> , ProtoOption.SymbolicOption","description":"kotlinx.serialization.protobuf.schema.ProtoOption.EnumValueOption","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-enum-value-option/index.html","searchKeys":["EnumValueOption","enum EnumValueOption : Enum<ProtoOption.EnumValueOption> , ProtoOption.SymbolicOption","kotlinx.serialization.protobuf.schema.ProtoOption.EnumValueOption"]},{"name":"enum FieldOption : Enum<ProtoOption.FieldOption> , ProtoOption.SymbolicOption","description":"kotlinx.serialization.protobuf.schema.ProtoOption.FieldOption","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-field-option/index.html","searchKeys":["FieldOption","enum FieldOption : Enum<ProtoOption.FieldOption> , ProtoOption.SymbolicOption","kotlinx.serialization.protobuf.schema.ProtoOption.FieldOption"]},{"name":"enum FileOption : Enum<ProtoOption.FileOption> , ProtoOption.SymbolicOption","description":"kotlinx.serialization.protobuf.schema.ProtoOption.FileOption","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-file-option/index.html","searchKeys":["FileOption","enum FileOption : Enum<ProtoOption.FileOption> , ProtoOption.SymbolicOption","kotlinx.serialization.protobuf.schema.ProtoOption.FileOption"]},{"name":"enum MessageOption : Enum<ProtoOption.MessageOption> , ProtoOption.SymbolicOption","description":"kotlinx.serialization.protobuf.schema.ProtoOption.MessageOption","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-message-option/index.html","searchKeys":["MessageOption","enum MessageOption : Enum<ProtoOption.MessageOption> , ProtoOption.SymbolicOption","kotlinx.serialization.protobuf.schema.ProtoOption.MessageOption"]},{"name":"enum MethodOption : Enum<ProtoOption.MethodOption> , ProtoOption.SymbolicOption","description":"kotlinx.serialization.protobuf.schema.ProtoOption.MethodOption","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-method-option/index.html","searchKeys":["MethodOption","enum MethodOption : Enum<ProtoOption.MethodOption> , ProtoOption.SymbolicOption","kotlinx.serialization.protobuf.schema.ProtoOption.MethodOption"]},{"name":"enum ProtoBufSyntaxVersion : Enum<ProtoBufSyntaxVersion> ","description":"kotlinx.serialization.protobuf.schema.ProtoBufSyntaxVersion","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-buf-syntax-version/index.html","searchKeys":["ProtoBufSyntaxVersion","enum ProtoBufSyntaxVersion : Enum<ProtoBufSyntaxVersion> ","kotlinx.serialization.protobuf.schema.ProtoBufSyntaxVersion"]},{"name":"enum ServiceOption : Enum<ProtoOption.ServiceOption> , ProtoOption.SymbolicOption","description":"kotlinx.serialization.protobuf.schema.ProtoOption.ServiceOption","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-service-option/index.html","searchKeys":["ServiceOption","enum ServiceOption : Enum<ProtoOption.ServiceOption> , ProtoOption.SymbolicOption","kotlinx.serialization.protobuf.schema.ProtoOption.ServiceOption"]},{"name":"enum Target : Enum<ProtoOption.Target> ","description":"kotlinx.serialization.protobuf.schema.ProtoOption.Target","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-target/index.html","searchKeys":["Target","enum Target : Enum<ProtoOption.Target> ","kotlinx.serialization.protobuf.schema.ProtoOption.Target"]},{"name":"enum TokenType : Enum<TokenType> ","description":"elide.model.token.TokenType","location":"packages/model/elide.model.token/-token-type/index.html","searchKeys":["TokenType","enum TokenType : Enum<TokenType> ","elide.model.token.TokenType"]},{"name":"expect abstract fun toMessage(): M","description":"elide.model.AppModel.toMessage","location":"packages/model/elide.model/-app-model/to-message.html","searchKeys":["toMessage","expect abstract fun toMessage(): M","elide.model.AppModel.toMessage"]},{"name":"expect class Token(type: TokenType, value: TokenValue)","description":"elide.model.token.Token","location":"packages/model/elide.model.token/-token/index.html","searchKeys":["Token","expect class Token(type: TokenType, value: TokenValue)","elide.model.token.Token"]},{"name":"expect class TokenValue(value: String)","description":"elide.model.token.TokenValue","location":"packages/model/elide.model.token/-token-value/index.html","searchKeys":["TokenValue","expect class TokenValue(value: String)","elide.model.token.TokenValue"]},{"name":"expect constructor(type: TokenType, value: TokenValue)","description":"elide.model.token.Token.Token","location":"packages/model/elide.model.token/-token/-token.html","searchKeys":["Token","expect constructor(type: TokenType, value: TokenValue)","elide.model.token.Token.Token"]},{"name":"expect constructor(value: String)","description":"elide.model.token.TokenValue.TokenValue","location":"packages/model/elide.model.token/-token-value/-token-value.html","searchKeys":["TokenValue","expect constructor(value: String)","elide.model.token.TokenValue.TokenValue"]},{"name":"expect interface AppModel<M : WireMessage>","description":"elide.model.AppModel","location":"packages/model/elide.model/-app-model/index.html","searchKeys":["AppModel","expect interface AppModel<M : WireMessage>","elide.model.AppModel"]},{"name":"expect interface AppRecord<K, M : WireMessage>","description":"elide.model.AppRecord","location":"packages/model/elide.model/-app-record/index.html","searchKeys":["AppRecord","expect interface AppRecord<K, M : WireMessage>","elide.model.AppRecord"]},{"name":"expect interface StampedRecord<K, M : WireMessage> : AppRecord<K, M> ","description":"elide.model.StampedRecord","location":"packages/model/elide.model/-stamped-record/index.html","searchKeys":["StampedRecord","expect interface StampedRecord<K, M : WireMessage> : AppRecord<K, M> ","elide.model.StampedRecord"]},{"name":"expect interface VersionedRecord<K, M : WireMessage> : StampedRecord<K, M> ","description":"elide.model.VersionedRecord","location":"packages/model/elide.model/-versioned-record/index.html","searchKeys":["VersionedRecord","expect interface VersionedRecord<K, M : WireMessage> : StampedRecord<K, M> ","elide.model.VersionedRecord"]},{"name":"expect object InstantFactory","description":"elide.model.util.InstantFactory","location":"packages/model/elide.model.util/-instant-factory/index.html","searchKeys":["InstantFactory","expect object InstantFactory","elide.model.util.InstantFactory"]},{"name":"expect open class WireMessage","description":"elide.model.WireMessage","location":"packages/model/elide.model/-wire-message/index.html","searchKeys":["WireMessage","expect open class WireMessage","elide.model.WireMessage"]},{"name":"expect open fun createdAt(): Instant?","description":"elide.model.StampedRecord.createdAt","location":"packages/model/elide.model/-stamped-record/created-at.html","searchKeys":["createdAt","expect open fun createdAt(): Instant?","elide.model.StampedRecord.createdAt"]},{"name":"expect open fun displayName(): String?","description":"elide.model.AppRecord.displayName","location":"packages/model/elide.model/-app-record/display-name.html","searchKeys":["displayName","expect open fun displayName(): String?","elide.model.AppRecord.displayName"]},{"name":"expect open fun id(): K?","description":"elide.model.AppRecord.id","location":"packages/model/elide.model/-app-record/id.html","searchKeys":["id","expect open fun id(): K?","elide.model.AppRecord.id"]},{"name":"expect open fun parentId(): K?","description":"elide.model.AppRecord.parentId","location":"packages/model/elide.model/-app-record/parent-id.html","searchKeys":["parentId","expect open fun parentId(): K?","elide.model.AppRecord.parentId"]},{"name":"expect open fun toSerializedBytes(): ByteArray","description":"elide.model.WireMessage.toSerializedBytes","location":"packages/model/elide.model/-wire-message/to-serialized-bytes.html","searchKeys":["toSerializedBytes","expect open fun toSerializedBytes(): ByteArray","elide.model.WireMessage.toSerializedBytes"]},{"name":"expect open fun toSerializedString(): String","description":"elide.model.WireMessage.toSerializedString","location":"packages/model/elide.model/-wire-message/to-serialized-string.html","searchKeys":["toSerializedString","expect open fun toSerializedString(): String","elide.model.WireMessage.toSerializedString"]},{"name":"expect open fun updatedAt(): Instant?","description":"elide.model.StampedRecord.updatedAt","location":"packages/model/elide.model/-stamped-record/updated-at.html","searchKeys":["updatedAt","expect open fun updatedAt(): Instant?","elide.model.StampedRecord.updatedAt"]},{"name":"expect open fun version(): Long","description":"elide.model.VersionedRecord.version","location":"packages/model/elide.model/-versioned-record/version.html","searchKeys":["version","expect open fun version(): Long","elide.model.VersionedRecord.version"]},{"name":"expect val type: TokenType","description":"elide.model.token.Token.type","location":"packages/model/elide.model.token/-token/type.html","searchKeys":["type","expect val type: TokenType","elide.model.token.Token.type"]},{"name":"expect val value: String","description":"elide.model.token.TokenValue.value","location":"packages/model/elide.model.token/-token-value/value.html","searchKeys":["value","expect val value: String","elide.model.token.TokenValue.value"]},{"name":"expect val value: TokenValue","description":"elide.model.token.Token.value","location":"packages/model/elide.model.token/-token/value.html","searchKeys":["value","expect val value: TokenValue","elide.model.token.Token.value"]},{"name":"fun date(subject: Timestamp): Date","description":"elide.model.util.InstantFactory.date","location":"packages/model/elide.model.util/-instant-factory/date.html","searchKeys":["date","fun date(subject: Timestamp): Date","elide.model.util.InstantFactory.date"]},{"name":"fun generateSchemaText(descriptors: List<SerialDescriptor>, options: ProtoBufGeneratorOptions = ProtoBufGeneratorOptions.DEFAULTS): String","description":"kotlinx.serialization.protobuf.schema.ProtoBufSchemaGenerator.generateSchemaText","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-buf-schema-generator/generate-schema-text.html","searchKeys":["generateSchemaText","fun generateSchemaText(descriptors: List<SerialDescriptor>, options: ProtoBufGeneratorOptions = ProtoBufGeneratorOptions.DEFAULTS): String","kotlinx.serialization.protobuf.schema.ProtoBufSchemaGenerator.generateSchemaText"]},{"name":"fun generateSchemaText(descriptors: List<SerialDescriptor>, packageName: String? = null, options: Map<String, String> = emptyMap()): String","description":"kotlinx.serialization.protobuf.schema.ProtoBufSchemaGenerator.generateSchemaText","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-buf-schema-generator/generate-schema-text.html","searchKeys":["generateSchemaText","fun generateSchemaText(descriptors: List<SerialDescriptor>, packageName: String? = null, options: Map<String, String> = emptyMap()): String","kotlinx.serialization.protobuf.schema.ProtoBufSchemaGenerator.generateSchemaText"]},{"name":"fun generateSchemaText(rootDescriptor: SerialDescriptor, packageName: String? = null, options: Map<String, String> = emptyMap()): String","description":"kotlinx.serialization.protobuf.schema.ProtoBufSchemaGenerator.generateSchemaText","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-buf-schema-generator/generate-schema-text.html","searchKeys":["generateSchemaText","fun generateSchemaText(rootDescriptor: SerialDescriptor, packageName: String? = null, options: Map<String, String> = emptyMap()): String","kotlinx.serialization.protobuf.schema.ProtoBufSchemaGenerator.generateSchemaText"]},{"name":"fun getProto(): Any","description":"elide.model.WireMessage.getProto","location":"packages/model/elide.model/-wire-message/get-proto.html","searchKeys":["getProto","fun getProto(): Any","elide.model.WireMessage.getProto"]},{"name":"fun instant(subject: Timestamp): Instant","description":"elide.model.util.InstantFactory.instant","location":"packages/model/elide.model.util/-instant-factory/instant.html","searchKeys":["instant","fun instant(subject: Timestamp): Instant","elide.model.util.InstantFactory.instant"]},{"name":"fun valueOf(value: String): ProtoBufSyntaxVersion","description":"kotlinx.serialization.protobuf.schema.ProtoBufSyntaxVersion.valueOf","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-buf-syntax-version/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): ProtoBufSyntaxVersion","kotlinx.serialization.protobuf.schema.ProtoBufSyntaxVersion.valueOf"]},{"name":"fun valueOf(value: String): ProtoOption.EnumOption","description":"kotlinx.serialization.protobuf.schema.ProtoOption.EnumOption.valueOf","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-enum-option/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): ProtoOption.EnumOption","kotlinx.serialization.protobuf.schema.ProtoOption.EnumOption.valueOf"]},{"name":"fun valueOf(value: String): ProtoOption.EnumValueOption","description":"kotlinx.serialization.protobuf.schema.ProtoOption.EnumValueOption.valueOf","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-enum-value-option/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): ProtoOption.EnumValueOption","kotlinx.serialization.protobuf.schema.ProtoOption.EnumValueOption.valueOf"]},{"name":"fun valueOf(value: String): ProtoOption.FieldOption","description":"kotlinx.serialization.protobuf.schema.ProtoOption.FieldOption.valueOf","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-field-option/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): ProtoOption.FieldOption","kotlinx.serialization.protobuf.schema.ProtoOption.FieldOption.valueOf"]},{"name":"fun valueOf(value: String): ProtoOption.FileOption","description":"kotlinx.serialization.protobuf.schema.ProtoOption.FileOption.valueOf","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-file-option/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): ProtoOption.FileOption","kotlinx.serialization.protobuf.schema.ProtoOption.FileOption.valueOf"]},{"name":"fun valueOf(value: String): ProtoOption.MessageOption","description":"kotlinx.serialization.protobuf.schema.ProtoOption.MessageOption.valueOf","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-message-option/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): ProtoOption.MessageOption","kotlinx.serialization.protobuf.schema.ProtoOption.MessageOption.valueOf"]},{"name":"fun valueOf(value: String): ProtoOption.MethodOption","description":"kotlinx.serialization.protobuf.schema.ProtoOption.MethodOption.valueOf","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-method-option/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): ProtoOption.MethodOption","kotlinx.serialization.protobuf.schema.ProtoOption.MethodOption.valueOf"]},{"name":"fun valueOf(value: String): ProtoOption.ServiceOption","description":"kotlinx.serialization.protobuf.schema.ProtoOption.ServiceOption.valueOf","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-service-option/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): ProtoOption.ServiceOption","kotlinx.serialization.protobuf.schema.ProtoOption.ServiceOption.valueOf"]},{"name":"fun valueOf(value: String): ProtoOption.Target","description":"kotlinx.serialization.protobuf.schema.ProtoOption.Target.valueOf","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-target/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): ProtoOption.Target","kotlinx.serialization.protobuf.schema.ProtoOption.Target.valueOf"]},{"name":"fun valueOf(value: String): TokenType","description":"elide.model.token.TokenType.valueOf","location":"packages/model/elide.model.token/-token-type/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): TokenType","elide.model.token.TokenType.valueOf"]},{"name":"fun values(): Array<ProtoBufSyntaxVersion>","description":"kotlinx.serialization.protobuf.schema.ProtoBufSyntaxVersion.values","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-buf-syntax-version/values.html","searchKeys":["values","fun values(): Array<ProtoBufSyntaxVersion>","kotlinx.serialization.protobuf.schema.ProtoBufSyntaxVersion.values"]},{"name":"fun values(): Array<ProtoOption.EnumOption>","description":"kotlinx.serialization.protobuf.schema.ProtoOption.EnumOption.values","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-enum-option/values.html","searchKeys":["values","fun values(): Array<ProtoOption.EnumOption>","kotlinx.serialization.protobuf.schema.ProtoOption.EnumOption.values"]},{"name":"fun values(): Array<ProtoOption.EnumValueOption>","description":"kotlinx.serialization.protobuf.schema.ProtoOption.EnumValueOption.values","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-enum-value-option/values.html","searchKeys":["values","fun values(): Array<ProtoOption.EnumValueOption>","kotlinx.serialization.protobuf.schema.ProtoOption.EnumValueOption.values"]},{"name":"fun values(): Array<ProtoOption.FieldOption>","description":"kotlinx.serialization.protobuf.schema.ProtoOption.FieldOption.values","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-field-option/values.html","searchKeys":["values","fun values(): Array<ProtoOption.FieldOption>","kotlinx.serialization.protobuf.schema.ProtoOption.FieldOption.values"]},{"name":"fun values(): Array<ProtoOption.FileOption>","description":"kotlinx.serialization.protobuf.schema.ProtoOption.FileOption.values","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-file-option/values.html","searchKeys":["values","fun values(): Array<ProtoOption.FileOption>","kotlinx.serialization.protobuf.schema.ProtoOption.FileOption.values"]},{"name":"fun values(): Array<ProtoOption.MessageOption>","description":"kotlinx.serialization.protobuf.schema.ProtoOption.MessageOption.values","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-message-option/values.html","searchKeys":["values","fun values(): Array<ProtoOption.MessageOption>","kotlinx.serialization.protobuf.schema.ProtoOption.MessageOption.values"]},{"name":"fun values(): Array<ProtoOption.MethodOption>","description":"kotlinx.serialization.protobuf.schema.ProtoOption.MethodOption.values","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-method-option/values.html","searchKeys":["values","fun values(): Array<ProtoOption.MethodOption>","kotlinx.serialization.protobuf.schema.ProtoOption.MethodOption.values"]},{"name":"fun values(): Array<ProtoOption.ServiceOption>","description":"kotlinx.serialization.protobuf.schema.ProtoOption.ServiceOption.values","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-service-option/values.html","searchKeys":["values","fun values(): Array<ProtoOption.ServiceOption>","kotlinx.serialization.protobuf.schema.ProtoOption.ServiceOption.values"]},{"name":"fun values(): Array<ProtoOption.Target>","description":"kotlinx.serialization.protobuf.schema.ProtoOption.Target.values","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-target/values.html","searchKeys":["values","fun values(): Array<ProtoOption.Target>","kotlinx.serialization.protobuf.schema.ProtoOption.Target.values"]},{"name":"fun values(): Array<TokenType>","description":"elide.model.token.TokenType.values","location":"packages/model/elide.model.token/-token-type/values.html","searchKeys":["values","fun values(): Array<TokenType>","elide.model.token.TokenType.values"]},{"name":"interface BooleanOption : ProtoOption<Boolean> ","description":"kotlinx.serialization.protobuf.schema.ProtoOption.BooleanOption","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-boolean-option/index.html","searchKeys":["BooleanOption","interface BooleanOption : ProtoOption<Boolean> ","kotlinx.serialization.protobuf.schema.ProtoOption.BooleanOption"]},{"name":"interface EnumTypeOption<T : Enum<T>> : ProtoOption<T> ","description":"kotlinx.serialization.protobuf.schema.ProtoOption.EnumTypeOption","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-enum-type-option/index.html","searchKeys":["EnumTypeOption","interface EnumTypeOption<T : Enum<T>> : ProtoOption<T> ","kotlinx.serialization.protobuf.schema.ProtoOption.EnumTypeOption"]},{"name":"interface KnownOption<T : Any> : ProtoOption<T> ","description":"kotlinx.serialization.protobuf.schema.ProtoOption.KnownOption","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-known-option/index.html","searchKeys":["KnownOption","interface KnownOption<T : Any> : ProtoOption<T> ","kotlinx.serialization.protobuf.schema.ProtoOption.KnownOption"]},{"name":"interface ProtoBufSchemaBuilder","description":"kotlinx.serialization.protobuf.schema.ProtoBufSchemaBuilder","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-buf-schema-builder/index.html","searchKeys":["ProtoBufSchemaBuilder","interface ProtoBufSchemaBuilder","kotlinx.serialization.protobuf.schema.ProtoBufSchemaBuilder"]},{"name":"interface ProtoOption<T : Any>","description":"kotlinx.serialization.protobuf.schema.ProtoOption","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/index.html","searchKeys":["ProtoOption","interface ProtoOption<T : Any>","kotlinx.serialization.protobuf.schema.ProtoOption"]},{"name":"interface StringOption : ProtoOption<String> ","description":"kotlinx.serialization.protobuf.schema.ProtoOption.StringOption","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-string-option/index.html","searchKeys":["StringOption","interface StringOption : ProtoOption<String> ","kotlinx.serialization.protobuf.schema.ProtoOption.StringOption"]},{"name":"interface SymbolicOption","description":"kotlinx.serialization.protobuf.schema.ProtoOption.SymbolicOption","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-symbolic-option/index.html","searchKeys":["SymbolicOption","interface SymbolicOption","kotlinx.serialization.protobuf.schema.ProtoOption.SymbolicOption"]},{"name":"object All","description":"kotlinx.serialization.protobuf.schema.ProtoOption.All","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-all/index.html","searchKeys":["All","object All","kotlinx.serialization.protobuf.schema.ProtoOption.All"]},{"name":"object Companion","description":"kotlinx.serialization.protobuf.schema.ProtoBufGeneratorOptions.Companion","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-buf-generator-options/-companion/index.html","searchKeys":["Companion","object Companion","kotlinx.serialization.protobuf.schema.ProtoBufGeneratorOptions.Companion"]},{"name":"object Companion","description":"kotlinx.serialization.protobuf.schema.ProtoOption.Scope.Companion","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-scope/-companion/index.html","searchKeys":["Companion","object Companion","kotlinx.serialization.protobuf.schema.ProtoOption.Scope.Companion"]},{"name":"object EnumOptions","description":"kotlinx.serialization.protobuf.schema.ProtoOption.EnumOptions","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-enum-options/index.html","searchKeys":["EnumOptions","object EnumOptions","kotlinx.serialization.protobuf.schema.ProtoOption.EnumOptions"]},{"name":"object EnumValueOptions","description":"kotlinx.serialization.protobuf.schema.ProtoOption.EnumValueOptions","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-enum-value-options/index.html","searchKeys":["EnumValueOptions","object EnumValueOptions","kotlinx.serialization.protobuf.schema.ProtoOption.EnumValueOptions"]},{"name":"object FieldOptions","description":"kotlinx.serialization.protobuf.schema.ProtoOption.FieldOptions","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-field-options/index.html","searchKeys":["FieldOptions","object FieldOptions","kotlinx.serialization.protobuf.schema.ProtoOption.FieldOptions"]},{"name":"object FileOptions","description":"kotlinx.serialization.protobuf.schema.ProtoOption.FileOptions","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-file-options/index.html","searchKeys":["FileOptions","object FileOptions","kotlinx.serialization.protobuf.schema.ProtoOption.FileOptions"]},{"name":"object MessageOptions","description":"kotlinx.serialization.protobuf.schema.ProtoOption.MessageOptions","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-message-options/index.html","searchKeys":["MessageOptions","object MessageOptions","kotlinx.serialization.protobuf.schema.ProtoOption.MessageOptions"]},{"name":"object MethodOptions","description":"kotlinx.serialization.protobuf.schema.ProtoOption.MethodOptions","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-method-options/index.html","searchKeys":["MethodOptions","object MethodOptions","kotlinx.serialization.protobuf.schema.ProtoOption.MethodOptions"]},{"name":"object ProtoBufSchemaGenerator","description":"kotlinx.serialization.protobuf.schema.ProtoBufSchemaGenerator","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-buf-schema-generator/index.html","searchKeys":["ProtoBufSchemaGenerator","object ProtoBufSchemaGenerator","kotlinx.serialization.protobuf.schema.ProtoBufSchemaGenerator"]},{"name":"object ServiceOptions","description":"kotlinx.serialization.protobuf.schema.ProtoOption.ServiceOptions","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-service-options/index.html","searchKeys":["ServiceOptions","object ServiceOptions","kotlinx.serialization.protobuf.schema.ProtoOption.ServiceOptions"]},{"name":"open fun render(): String","description":"kotlinx.serialization.protobuf.schema.ProtoOption.render","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/render.html","searchKeys":["render","open fun render(): String","kotlinx.serialization.protobuf.schema.ProtoOption.render"]},{"name":"open override val builtin: Boolean","description":"kotlinx.serialization.protobuf.schema.ProtoOption.KnownOption.builtin","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-known-option/builtin.html","searchKeys":["builtin","open override val builtin: Boolean","kotlinx.serialization.protobuf.schema.ProtoOption.KnownOption.builtin"]},{"name":"open override val builtin: Boolean = true","description":"kotlinx.serialization.protobuf.schema.ProtoOption.KnownFileOption.builtin","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-known-file-option/builtin.html","searchKeys":["builtin","open override val builtin: Boolean = true","kotlinx.serialization.protobuf.schema.ProtoOption.KnownFileOption.builtin"]},{"name":"open override val builtin: Boolean = true","description":"kotlinx.serialization.protobuf.schema.ProtoOption.KnownMessageOption.builtin","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-known-message-option/builtin.html","searchKeys":["builtin","open override val builtin: Boolean = true","kotlinx.serialization.protobuf.schema.ProtoOption.KnownMessageOption.builtin"]},{"name":"open override val scope: ProtoOption.Scope","description":"kotlinx.serialization.protobuf.schema.ProtoOption.KnownFileOption.scope","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-known-file-option/scope.html","searchKeys":["scope","open override val scope: ProtoOption.Scope","kotlinx.serialization.protobuf.schema.ProtoOption.KnownFileOption.scope"]},{"name":"open override val scope: ProtoOption.Scope","description":"kotlinx.serialization.protobuf.schema.ProtoOption.MessageOptions.Deprecated.scope","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-message-options/-deprecated/scope.html","searchKeys":["scope","open override val scope: ProtoOption.Scope","kotlinx.serialization.protobuf.schema.ProtoOption.MessageOptions.Deprecated.scope"]},{"name":"open override val scope: ProtoOption.Scope","description":"kotlinx.serialization.protobuf.schema.ProtoOption.MessageOptions.MessageSetWireFormat.scope","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-message-options/-message-set-wire-format/scope.html","searchKeys":["scope","open override val scope: ProtoOption.Scope","kotlinx.serialization.protobuf.schema.ProtoOption.MessageOptions.MessageSetWireFormat.scope"]},{"name":"open override val scope: ProtoOption.Scope","description":"kotlinx.serialization.protobuf.schema.ProtoOption.MessageOptions.NoStandardDescriptorAccessor.scope","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-message-options/-no-standard-descriptor-accessor/scope.html","searchKeys":["scope","open override val scope: ProtoOption.Scope","kotlinx.serialization.protobuf.schema.ProtoOption.MessageOptions.NoStandardDescriptorAccessor.scope"]},{"name":"open override val symbol: String","description":"kotlinx.serialization.protobuf.schema.ProtoOption.EnumOption.symbol","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-enum-option/symbol.html","searchKeys":["symbol","open override val symbol: String","kotlinx.serialization.protobuf.schema.ProtoOption.EnumOption.symbol"]},{"name":"open override val symbol: String","description":"kotlinx.serialization.protobuf.schema.ProtoOption.EnumValueOption.symbol","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-enum-value-option/symbol.html","searchKeys":["symbol","open override val symbol: String","kotlinx.serialization.protobuf.schema.ProtoOption.EnumValueOption.symbol"]},{"name":"open override val symbol: String","description":"kotlinx.serialization.protobuf.schema.ProtoOption.FieldOption.symbol","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-field-option/symbol.html","searchKeys":["symbol","open override val symbol: String","kotlinx.serialization.protobuf.schema.ProtoOption.FieldOption.symbol"]},{"name":"open override val symbol: String","description":"kotlinx.serialization.protobuf.schema.ProtoOption.FileOption.symbol","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-file-option/symbol.html","searchKeys":["symbol","open override val symbol: String","kotlinx.serialization.protobuf.schema.ProtoOption.FileOption.symbol"]},{"name":"open override val symbol: String","description":"kotlinx.serialization.protobuf.schema.ProtoOption.KnownFileOption.symbol","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-known-file-option/symbol.html","searchKeys":["symbol","open override val symbol: String","kotlinx.serialization.protobuf.schema.ProtoOption.KnownFileOption.symbol"]},{"name":"open override val symbol: String","description":"kotlinx.serialization.protobuf.schema.ProtoOption.KnownMessageOption.symbol","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-known-message-option/symbol.html","searchKeys":["symbol","open override val symbol: String","kotlinx.serialization.protobuf.schema.ProtoOption.KnownMessageOption.symbol"]},{"name":"open override val symbol: String","description":"kotlinx.serialization.protobuf.schema.ProtoOption.MessageOption.symbol","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-message-option/symbol.html","searchKeys":["symbol","open override val symbol: String","kotlinx.serialization.protobuf.schema.ProtoOption.MessageOption.symbol"]},{"name":"open override val symbol: String","description":"kotlinx.serialization.protobuf.schema.ProtoOption.MethodOption.symbol","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-method-option/symbol.html","searchKeys":["symbol","open override val symbol: String","kotlinx.serialization.protobuf.schema.ProtoOption.MethodOption.symbol"]},{"name":"open override val symbol: String","description":"kotlinx.serialization.protobuf.schema.ProtoOption.ServiceOption.symbol","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-service-option/symbol.html","searchKeys":["symbol","open override val symbol: String","kotlinx.serialization.protobuf.schema.ProtoOption.ServiceOption.symbol"]},{"name":"open override val symbolValue: String","description":"kotlinx.serialization.protobuf.schema.ProtoOption.BooleanOption.symbolValue","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-boolean-option/symbol-value.html","searchKeys":["symbolValue","open override val symbolValue: String","kotlinx.serialization.protobuf.schema.ProtoOption.BooleanOption.symbolValue"]},{"name":"open override val symbolValue: String","description":"kotlinx.serialization.protobuf.schema.ProtoOption.EnumTypeOption.symbolValue","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-enum-type-option/symbol-value.html","searchKeys":["symbolValue","open override val symbolValue: String","kotlinx.serialization.protobuf.schema.ProtoOption.EnumTypeOption.symbolValue"]},{"name":"open override val symbolValue: String","description":"kotlinx.serialization.protobuf.schema.ProtoOption.StringOption.symbolValue","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-string-option/symbol-value.html","searchKeys":["symbolValue","open override val symbolValue: String","kotlinx.serialization.protobuf.schema.ProtoOption.StringOption.symbolValue"]},{"name":"open override val targets: EnumSet<ProtoOption.Target>","description":"kotlinx.serialization.protobuf.schema.ProtoOption.KnownFileOption.targets","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-known-file-option/targets.html","searchKeys":["targets","open override val targets: EnumSet<ProtoOption.Target>","kotlinx.serialization.protobuf.schema.ProtoOption.KnownFileOption.targets"]},{"name":"open override val targets: EnumSet<ProtoOption.Target>","description":"kotlinx.serialization.protobuf.schema.ProtoOption.KnownMessageOption.targets","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-known-message-option/targets.html","searchKeys":["targets","open override val targets: EnumSet<ProtoOption.Target>","kotlinx.serialization.protobuf.schema.ProtoOption.KnownMessageOption.targets"]},{"name":"open override val value: T","description":"kotlinx.serialization.protobuf.schema.ProtoOption.KnownFileOption.value","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-known-file-option/value.html","searchKeys":["value","open override val value: T","kotlinx.serialization.protobuf.schema.ProtoOption.KnownFileOption.value"]},{"name":"open override val value: T","description":"kotlinx.serialization.protobuf.schema.ProtoOption.KnownMessageOption.value","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-known-message-option/value.html","searchKeys":["value","open override val value: T","kotlinx.serialization.protobuf.schema.ProtoOption.KnownMessageOption.value"]},{"name":"open val builtin: Boolean","description":"kotlinx.serialization.protobuf.schema.ProtoOption.builtin","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/builtin.html","searchKeys":["builtin","open val builtin: Boolean","kotlinx.serialization.protobuf.schema.ProtoOption.builtin"]},{"name":"open val imports: Set<String>","description":"kotlinx.serialization.protobuf.schema.ProtoOption.imports","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/imports.html","searchKeys":["imports","open val imports: Set<String>","kotlinx.serialization.protobuf.schema.ProtoOption.imports"]},{"name":"open val isPresent: Boolean","description":"kotlinx.serialization.protobuf.schema.ProtoOption.isPresent","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/is-present.html","searchKeys":["isPresent","open val isPresent: Boolean","kotlinx.serialization.protobuf.schema.ProtoOption.isPresent"]},{"name":"open val symbolValue: String","description":"kotlinx.serialization.protobuf.schema.ProtoOption.symbolValue","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/symbol-value.html","searchKeys":["symbolValue","open val symbolValue: String","kotlinx.serialization.protobuf.schema.ProtoOption.symbolValue"]},{"name":"sealed class KnownFileOption<T : Any> : ProtoOption<T> ","description":"kotlinx.serialization.protobuf.schema.ProtoOption.KnownFileOption","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-known-file-option/index.html","searchKeys":["KnownFileOption","sealed class KnownFileOption<T : Any> : ProtoOption<T> ","kotlinx.serialization.protobuf.schema.ProtoOption.KnownFileOption"]},{"name":"sealed class KnownMessageOption<T : Any> : ProtoOption<T> ","description":"kotlinx.serialization.protobuf.schema.ProtoOption.KnownMessageOption","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-known-message-option/index.html","searchKeys":["KnownMessageOption","sealed class KnownMessageOption<T : Any> : ProtoOption<T> ","kotlinx.serialization.protobuf.schema.ProtoOption.KnownMessageOption"]},{"name":"sealed class Scope","description":"kotlinx.serialization.protobuf.schema.ProtoOption.Scope","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-scope/index.html","searchKeys":["Scope","sealed class Scope","kotlinx.serialization.protobuf.schema.ProtoOption.Scope"]},{"name":"val ALL: ProtoOption.Scope.All","description":"kotlinx.serialization.protobuf.schema.ProtoOption.Scope.Companion.ALL","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-scope/-companion/-a-l-l.html","searchKeys":["ALL","val ALL: ProtoOption.Scope.All","kotlinx.serialization.protobuf.schema.ProtoOption.Scope.Companion.ALL"]},{"name":"val DEFAULTS: List<ProtoOption.KnownFileOption<*>>","description":"kotlinx.serialization.protobuf.schema.ProtoOption.FileOptions.DEFAULTS","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-file-options/-d-e-f-a-u-l-t-s.html","searchKeys":["DEFAULTS","val DEFAULTS: List<ProtoOption.KnownFileOption<*>>","kotlinx.serialization.protobuf.schema.ProtoOption.FileOptions.DEFAULTS"]},{"name":"val DEFAULTS: List<ProtoOption<*>>","description":"kotlinx.serialization.protobuf.schema.ProtoOption.All.DEFAULTS","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-all/-d-e-f-a-u-l-t-s.html","searchKeys":["DEFAULTS","val DEFAULTS: List<ProtoOption<*>>","kotlinx.serialization.protobuf.schema.ProtoOption.All.DEFAULTS"]},{"name":"val DEFAULTS: ProtoBufGeneratorOptions","description":"kotlinx.serialization.protobuf.schema.ProtoBufGeneratorOptions.Companion.DEFAULTS","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-buf-generator-options/-companion/-d-e-f-a-u-l-t-s.html","searchKeys":["DEFAULTS","val DEFAULTS: ProtoBufGeneratorOptions","kotlinx.serialization.protobuf.schema.ProtoBufGeneratorOptions.Companion.DEFAULTS"]},{"name":"val GLOBAL: ProtoOption.Scope.Global","description":"kotlinx.serialization.protobuf.schema.ProtoOption.Scope.Companion.GLOBAL","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-scope/-companion/-g-l-o-b-a-l.html","searchKeys":["GLOBAL","val GLOBAL: ProtoOption.Scope.Global","kotlinx.serialization.protobuf.schema.ProtoOption.Scope.Companion.GLOBAL"]},{"name":"val NONE: ProtoOption.Scope.None","description":"kotlinx.serialization.protobuf.schema.ProtoOption.Scope.Companion.NONE","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-scope/-companion/-n-o-n-e.html","searchKeys":["NONE","val NONE: ProtoOption.Scope.None","kotlinx.serialization.protobuf.schema.ProtoOption.Scope.Companion.NONE"]},{"name":"val aliases: Boolean","description":"kotlinx.serialization.protobuf.ProtoEnum.aliases","location":"packages/model/kotlinx.serialization.protobuf/-proto-enum/aliases.html","searchKeys":["aliases","val aliases: Boolean","kotlinx.serialization.protobuf.ProtoEnum.aliases"]},{"name":"val checkUtf8: Boolean = false","description":"kotlinx.serialization.protobuf.schema.ProtoOption.FileOptions.JavaStringCheckUtf8.checkUtf8","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-file-options/-java-string-check-utf8/check-utf8.html","searchKeys":["checkUtf8","val checkUtf8: Boolean = false","kotlinx.serialization.protobuf.schema.ProtoOption.FileOptions.JavaStringCheckUtf8.checkUtf8"]},{"name":"val className: String","description":"kotlinx.serialization.protobuf.schema.ProtoOption.FileOptions.JavaOuterClassname.className","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-file-options/-java-outer-classname/class-name.html","searchKeys":["className","val className: String","kotlinx.serialization.protobuf.schema.ProtoOption.FileOptions.JavaOuterClassname.className"]},{"name":"val deprecated: Boolean = true","description":"kotlinx.serialization.protobuf.schema.ProtoOption.FileOptions.Deprecated.deprecated","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-file-options/-deprecated/deprecated.html","searchKeys":["deprecated","val deprecated: Boolean = true","kotlinx.serialization.protobuf.schema.ProtoOption.FileOptions.Deprecated.deprecated"]},{"name":"val deprecated: Boolean = true","description":"kotlinx.serialization.protobuf.schema.ProtoOption.MessageOptions.Deprecated.deprecated","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-message-options/-deprecated/deprecated.html","searchKeys":["deprecated","val deprecated: Boolean = true","kotlinx.serialization.protobuf.schema.ProtoOption.MessageOptions.Deprecated.deprecated"]},{"name":"val emitWarningComments: Boolean = false","description":"kotlinx.serialization.protobuf.schema.ProtoBufGeneratorOptions.emitWarningComments","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-buf-generator-options/emit-warning-comments.html","searchKeys":["emitWarningComments","val emitWarningComments: Boolean = false","kotlinx.serialization.protobuf.schema.ProtoBufGeneratorOptions.emitWarningComments"]},{"name":"val entries: EnumEntries<ProtoBufSyntaxVersion>","description":"kotlinx.serialization.protobuf.schema.ProtoBufSyntaxVersion.entries","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-buf-syntax-version/entries.html","searchKeys":["entries","val entries: EnumEntries<ProtoBufSyntaxVersion>","kotlinx.serialization.protobuf.schema.ProtoBufSyntaxVersion.entries"]},{"name":"val entries: EnumEntries<ProtoOption.EnumOption>","description":"kotlinx.serialization.protobuf.schema.ProtoOption.EnumOption.entries","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-enum-option/entries.html","searchKeys":["entries","val entries: EnumEntries<ProtoOption.EnumOption>","kotlinx.serialization.protobuf.schema.ProtoOption.EnumOption.entries"]},{"name":"val entries: EnumEntries<ProtoOption.EnumValueOption>","description":"kotlinx.serialization.protobuf.schema.ProtoOption.EnumValueOption.entries","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-enum-value-option/entries.html","searchKeys":["entries","val entries: EnumEntries<ProtoOption.EnumValueOption>","kotlinx.serialization.protobuf.schema.ProtoOption.EnumValueOption.entries"]},{"name":"val entries: EnumEntries<ProtoOption.FieldOption>","description":"kotlinx.serialization.protobuf.schema.ProtoOption.FieldOption.entries","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-field-option/entries.html","searchKeys":["entries","val entries: EnumEntries<ProtoOption.FieldOption>","kotlinx.serialization.protobuf.schema.ProtoOption.FieldOption.entries"]},{"name":"val entries: EnumEntries<ProtoOption.FileOption>","description":"kotlinx.serialization.protobuf.schema.ProtoOption.FileOption.entries","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-file-option/entries.html","searchKeys":["entries","val entries: EnumEntries<ProtoOption.FileOption>","kotlinx.serialization.protobuf.schema.ProtoOption.FileOption.entries"]},{"name":"val entries: EnumEntries<ProtoOption.MessageOption>","description":"kotlinx.serialization.protobuf.schema.ProtoOption.MessageOption.entries","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-message-option/entries.html","searchKeys":["entries","val entries: EnumEntries<ProtoOption.MessageOption>","kotlinx.serialization.protobuf.schema.ProtoOption.MessageOption.entries"]},{"name":"val entries: EnumEntries<ProtoOption.MethodOption>","description":"kotlinx.serialization.protobuf.schema.ProtoOption.MethodOption.entries","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-method-option/entries.html","searchKeys":["entries","val entries: EnumEntries<ProtoOption.MethodOption>","kotlinx.serialization.protobuf.schema.ProtoOption.MethodOption.entries"]},{"name":"val entries: EnumEntries<ProtoOption.ServiceOption>","description":"kotlinx.serialization.protobuf.schema.ProtoOption.ServiceOption.entries","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-service-option/entries.html","searchKeys":["entries","val entries: EnumEntries<ProtoOption.ServiceOption>","kotlinx.serialization.protobuf.schema.ProtoOption.ServiceOption.entries"]},{"name":"val entries: EnumEntries<ProtoOption.Target>","description":"kotlinx.serialization.protobuf.schema.ProtoOption.Target.entries","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-target/entries.html","searchKeys":["entries","val entries: EnumEntries<ProtoOption.Target>","kotlinx.serialization.protobuf.schema.ProtoOption.Target.entries"]},{"name":"val entries: EnumEntries<TokenType>","description":"elide.model.token.TokenType.entries","location":"packages/model/elide.model.token/-token-type/entries.html","searchKeys":["entries","val entries: EnumEntries<TokenType>","elide.model.token.TokenType.entries"]},{"name":"val enumName: String","description":"kotlinx.serialization.protobuf.schema.ProtoOption.Scope.Enum.enumName","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-scope/-enum/enum-name.html","searchKeys":["enumName","val enumName: String","kotlinx.serialization.protobuf.schema.ProtoOption.Scope.Enum.enumName"]},{"name":"val generateEqualsAndHash: Boolean = true","description":"kotlinx.serialization.protobuf.schema.ProtoOption.FileOptions.JavaGenerateEqualsAndHash.generateEqualsAndHash","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-file-options/-java-generate-equals-and-hash/generate-equals-and-hash.html","searchKeys":["generateEqualsAndHash","val generateEqualsAndHash: Boolean = true","kotlinx.serialization.protobuf.schema.ProtoOption.FileOptions.JavaGenerateEqualsAndHash.generateEqualsAndHash"]},{"name":"val messageName: String","description":"kotlinx.serialization.protobuf.schema.ProtoOption.Scope.Message.messageName","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-scope/-message/message-name.html","searchKeys":["messageName","val messageName: String","kotlinx.serialization.protobuf.schema.ProtoOption.Scope.Message.messageName"]},{"name":"val messageSetWireFormat: Boolean","description":"kotlinx.serialization.protobuf.schema.ProtoOption.MessageOptions.MessageSetWireFormat.messageSetWireFormat","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-message-options/-message-set-wire-format/message-set-wire-format.html","searchKeys":["messageSetWireFormat","val messageSetWireFormat: Boolean","kotlinx.serialization.protobuf.schema.ProtoOption.MessageOptions.MessageSetWireFormat.messageSetWireFormat"]},{"name":"val multipleFiles: Boolean = true","description":"kotlinx.serialization.protobuf.schema.ProtoOption.FileOptions.JavaMultipleFiles.multipleFiles","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-file-options/-java-multiple-files/multiple-files.html","searchKeys":["multipleFiles","val multipleFiles: Boolean = true","kotlinx.serialization.protobuf.schema.ProtoOption.FileOptions.JavaMultipleFiles.multipleFiles"]},{"name":"val name: String","description":"kotlinx.serialization.protobuf.ProtoFieldName.name","location":"packages/model/kotlinx.serialization.protobuf/-proto-field-name/name.html","searchKeys":["name","val name: String","kotlinx.serialization.protobuf.ProtoFieldName.name"]},{"name":"val name: String","description":"kotlinx.serialization.protobuf.ProtoFieldsPreserve.name","location":"packages/model/kotlinx.serialization.protobuf/-proto-fields-preserve/name.html","searchKeys":["name","val name: String","kotlinx.serialization.protobuf.ProtoFieldsPreserve.name"]},{"name":"val noStandardDescriptorAccessor: Boolean = true","description":"kotlinx.serialization.protobuf.schema.ProtoOption.MessageOptions.NoStandardDescriptorAccessor.noStandardDescriptorAccessor","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-message-options/-no-standard-descriptor-accessor/no-standard-descriptor-accessor.html","searchKeys":["noStandardDescriptorAccessor","val noStandardDescriptorAccessor: Boolean = true","kotlinx.serialization.protobuf.schema.ProtoOption.MessageOptions.NoStandardDescriptorAccessor.noStandardDescriptorAccessor"]},{"name":"val optimizeFor: DescriptorProtos.FileOptions.OptimizeMode","description":"kotlinx.serialization.protobuf.schema.ProtoOption.FileOptions.OptimizeFor.optimizeFor","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-file-options/-optimize-for/optimize-for.html","searchKeys":["optimizeFor","val optimizeFor: DescriptorProtos.FileOptions.OptimizeMode","kotlinx.serialization.protobuf.schema.ProtoOption.FileOptions.OptimizeFor.optimizeFor"]},{"name":"val option: ProtoOption.FileOption","description":"kotlinx.serialization.protobuf.schema.ProtoOption.KnownFileOption.option","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-known-file-option/option.html","searchKeys":["option","val option: ProtoOption.FileOption","kotlinx.serialization.protobuf.schema.ProtoOption.KnownFileOption.option"]},{"name":"val option: ProtoOption.MessageOption","description":"kotlinx.serialization.protobuf.schema.ProtoOption.KnownMessageOption.option","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-known-message-option/option.html","searchKeys":["option","val option: ProtoOption.MessageOption","kotlinx.serialization.protobuf.schema.ProtoOption.KnownMessageOption.option"]},{"name":"val packageName: String","description":"kotlinx.serialization.protobuf.schema.ProtoOption.FileOptions.JavaPackage.packageName","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-file-options/-java-package/package-name.html","searchKeys":["packageName","val packageName: String","kotlinx.serialization.protobuf.schema.ProtoOption.FileOptions.JavaPackage.packageName"]},{"name":"val packageName: String","description":"kotlinx.serialization.protobuf.schema.ProtoOption.Scope.Package.packageName","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-scope/-package/package-name.html","searchKeys":["packageName","val packageName: String","kotlinx.serialization.protobuf.schema.ProtoOption.Scope.Package.packageName"]},{"name":"val packageName: String? = null","description":"kotlinx.serialization.protobuf.schema.ProtoBufGeneratorOptions.packageName","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-buf-generator-options/package-name.html","searchKeys":["packageName","val packageName: String? = null","kotlinx.serialization.protobuf.schema.ProtoBufGeneratorOptions.packageName"]},{"name":"val packageOptions: Map<String, String>? = null","description":"kotlinx.serialization.protobuf.schema.ProtoBufGeneratorOptions.packageOptions","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-buf-generator-options/package-options.html","searchKeys":["packageOptions","val packageOptions: Map<String, String>? = null","kotlinx.serialization.protobuf.schema.ProtoBufGeneratorOptions.packageOptions"]},{"name":"val protoOptions: Collection<ProtoOption<*>>","description":"kotlinx.serialization.protobuf.schema.ProtoBufGeneratorOptions.protoOptions","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-buf-generator-options/proto-options.html","searchKeys":["protoOptions","val protoOptions: Collection<ProtoOption<*>>","kotlinx.serialization.protobuf.schema.ProtoBufGeneratorOptions.protoOptions"]},{"name":"val symbol: String","description":"kotlinx.serialization.protobuf.schema.ProtoOption.Scope.symbol","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-option/-scope/symbol.html","searchKeys":["symbol","val symbol: String","kotlinx.serialization.protobuf.schema.ProtoOption.Scope.symbol"]},{"name":"val syntaxVersion: ProtoBufSyntaxVersion","description":"kotlinx.serialization.protobuf.schema.ProtoBufGeneratorOptions.syntaxVersion","location":"packages/model/kotlinx.serialization.protobuf.schema/-proto-buf-generator-options/syntax-version.html","searchKeys":["syntaxVersion","val syntaxVersion: ProtoBufSyntaxVersion","kotlinx.serialization.protobuf.schema.ProtoBufGeneratorOptions.syntaxVersion"]},{"name":"val unknownName: String","description":"kotlinx.serialization.protobuf.ProtoEnum.unknownName","location":"packages/model/kotlinx.serialization.protobuf/-proto-enum/unknown-name.html","searchKeys":["unknownName","val unknownName: String","kotlinx.serialization.protobuf.ProtoEnum.unknownName"]},{"name":"BASE64","description":"elide.proto.impl.data.KxEncoding.BASE64","location":"packages/proto/proto-kotlinx/elide.proto.impl.data/-kx-encoding/-b-a-s-e64/index.html","searchKeys":["BASE64","BASE64","elide.proto.impl.data.KxEncoding.BASE64"]},{"name":"HEX","description":"elide.proto.impl.data.KxEncoding.HEX","location":"packages/proto/proto-kotlinx/elide.proto.impl.data/-kx-encoding/-h-e-x/index.html","searchKeys":["HEX","HEX","elide.proto.impl.data.KxEncoding.HEX"]},{"name":"IDENTITY","description":"elide.proto.impl.data.KxHashAlgorithm.IDENTITY","location":"packages/proto/proto-kotlinx/elide.proto.impl.data/-kx-hash-algorithm/-i-d-e-n-t-i-t-y/index.html","searchKeys":["IDENTITY","IDENTITY","elide.proto.impl.data.KxHashAlgorithm.IDENTITY"]},{"name":"MD5","description":"elide.proto.impl.data.KxHashAlgorithm.MD5","location":"packages/proto/proto-kotlinx/elide.proto.impl.data/-kx-hash-algorithm/-m-d5/index.html","searchKeys":["MD5","MD5","elide.proto.impl.data.KxHashAlgorithm.MD5"]},{"name":"SHA1","description":"elide.proto.impl.data.KxHashAlgorithm.SHA1","location":"packages/proto/proto-kotlinx/elide.proto.impl.data/-kx-hash-algorithm/-s-h-a1/index.html","searchKeys":["SHA1","SHA1","elide.proto.impl.data.KxHashAlgorithm.SHA1"]},{"name":"SHA256","description":"elide.proto.impl.data.KxHashAlgorithm.SHA256","location":"packages/proto/proto-kotlinx/elide.proto.impl.data/-kx-hash-algorithm/-s-h-a256/index.html","searchKeys":["SHA256","SHA256","elide.proto.impl.data.KxHashAlgorithm.SHA256"]},{"name":"SHA3_224","description":"elide.proto.impl.data.KxHashAlgorithm.SHA3_224","location":"packages/proto/proto-kotlinx/elide.proto.impl.data/-kx-hash-algorithm/-s-h-a3_224/index.html","searchKeys":["SHA3_224","SHA3_224","elide.proto.impl.data.KxHashAlgorithm.SHA3_224"]},{"name":"SHA3_256","description":"elide.proto.impl.data.KxHashAlgorithm.SHA3_256","location":"packages/proto/proto-kotlinx/elide.proto.impl.data/-kx-hash-algorithm/-s-h-a3_256/index.html","searchKeys":["SHA3_256","SHA3_256","elide.proto.impl.data.KxHashAlgorithm.SHA3_256"]},{"name":"SHA3_512","description":"elide.proto.impl.data.KxHashAlgorithm.SHA3_512","location":"packages/proto/proto-kotlinx/elide.proto.impl.data/-kx-hash-algorithm/-s-h-a3_512/index.html","searchKeys":["SHA3_512","SHA3_512","elide.proto.impl.data.KxHashAlgorithm.SHA3_512"]},{"name":"SHA512","description":"elide.proto.impl.data.KxHashAlgorithm.SHA512","location":"packages/proto/proto-kotlinx/elide.proto.impl.data/-kx-hash-algorithm/-s-h-a512/index.html","searchKeys":["SHA512","SHA512","elide.proto.impl.data.KxHashAlgorithm.SHA512"]},{"name":"abstract class AbstractElideKotlinXProtocol : ElideProtocol","description":"elide.proto.impl.AbstractElideKotlinXProtocol","location":"packages/proto/proto-kotlinx/elide.proto.impl/-abstract-elide-kotlin-x-protocol/index.html","searchKeys":["AbstractElideKotlinXProtocol","abstract class AbstractElideKotlinXProtocol : ElideProtocol","elide.proto.impl.AbstractElideKotlinXProtocol"]},{"name":"class Builder : DataContainer.IBuilder<KxDataContainer, KxDataFingerprint, KxDataFingerprint.Builder, KxHashAlgorithm, KxEncoding, KxDataContainer.Builder> ","description":"elide.proto.impl.data.KxDataContainer.Builder","location":"packages/proto/proto-kotlinx/elide.proto.impl.data/-kx-data-container/-builder/index.html","searchKeys":["Builder","class Builder : DataContainer.IBuilder<KxDataContainer, KxDataFingerprint, KxDataFingerprint.Builder, KxHashAlgorithm, KxEncoding, KxDataContainer.Builder> ","elide.proto.impl.data.KxDataContainer.Builder"]},{"name":"class Builder : DataFingerprint.IBuilder<KxDataFingerprint, KxHashAlgorithm, KxEncoding, KxDataFingerprint.Builder> ","description":"elide.proto.impl.data.KxDataFingerprint.Builder","location":"packages/proto/proto-kotlinx/elide.proto.impl.data/-kx-data-fingerprint/-builder/index.html","searchKeys":["Builder","class Builder : DataFingerprint.IBuilder<KxDataFingerprint, KxHashAlgorithm, KxEncoding, KxDataFingerprint.Builder> ","elide.proto.impl.data.KxDataFingerprint.Builder"]},{"name":"class ElideKotlinXProtocol : AbstractElideKotlinXProtocol","description":"elide.proto.impl.ElideKotlinXProtocol","location":"packages/proto/proto-kotlinx/elide.proto.impl/-elide-kotlin-x-protocol/index.html","searchKeys":["ElideKotlinXProtocol","class ElideKotlinXProtocol : AbstractElideKotlinXProtocol","elide.proto.impl.ElideKotlinXProtocol"]},{"name":"class KotlinXModelStrategy : ElideProtocol.ModelAdapterStrategy","description":"elide.proto.impl.AbstractElideKotlinXProtocol.KotlinXModelStrategy","location":"packages/proto/proto-kotlinx/elide.proto.impl/-abstract-elide-kotlin-x-protocol/-kotlin-x-model-strategy/index.html","searchKeys":["KotlinXModelStrategy","class KotlinXModelStrategy : ElideProtocol.ModelAdapterStrategy","elide.proto.impl.AbstractElideKotlinXProtocol.KotlinXModelStrategy"]},{"name":"class KxDataContainer : DataContainer<KxDataContainer, KxDataContainer.Builder, KxDataFingerprint, KxDataFingerprint.Builder, KxHashAlgorithm, KxEncoding> ","description":"elide.proto.impl.data.KxDataContainer","location":"packages/proto/proto-kotlinx/elide.proto.impl.data/-kx-data-container/index.html","searchKeys":["KxDataContainer","class KxDataContainer : DataContainer<KxDataContainer, KxDataContainer.Builder, KxDataFingerprint, KxDataFingerprint.Builder, KxHashAlgorithm, KxEncoding> ","elide.proto.impl.data.KxDataContainer"]},{"name":"class KxDataFingerprint : DataFingerprint<KxDataFingerprint, KxDataFingerprint.Builder, KxHashAlgorithm, KxEncoding> ","description":"elide.proto.impl.data.KxDataFingerprint","location":"packages/proto/proto-kotlinx/elide.proto.impl.data/-kx-data-fingerprint/index.html","searchKeys":["KxDataFingerprint","class KxDataFingerprint : DataFingerprint<KxDataFingerprint, KxDataFingerprint.Builder, KxHashAlgorithm, KxEncoding> ","elide.proto.impl.data.KxDataFingerprint"]},{"name":"class TimestampBuilder(var seconds: Long, var nanos: Int) : Timestamp.IBuilder<KxTimestamp> ","description":"elide.proto.impl.wkt.KxTimestamp.TimestampBuilder","location":"packages/proto/proto-kotlinx/elide.proto.impl.wkt/-kx-timestamp/-timestamp-builder/index.html","searchKeys":["TimestampBuilder","class TimestampBuilder(var seconds: Long, var nanos: Int) : Timestamp.IBuilder<KxTimestamp> ","elide.proto.impl.wkt.KxTimestamp.TimestampBuilder"]},{"name":"constructor()","description":"elide.proto.impl.AbstractElideKotlinXProtocol.AbstractElideKotlinXProtocol","location":"packages/proto/proto-kotlinx/elide.proto.impl/-abstract-elide-kotlin-x-protocol/-abstract-elide-kotlin-x-protocol.html","searchKeys":["AbstractElideKotlinXProtocol","constructor()","elide.proto.impl.AbstractElideKotlinXProtocol.AbstractElideKotlinXProtocol"]},{"name":"constructor()","description":"elide.proto.impl.AbstractElideKotlinXProtocol.KotlinXModelStrategy.KotlinXModelStrategy","location":"packages/proto/proto-kotlinx/elide.proto.impl/-abstract-elide-kotlin-x-protocol/-kotlin-x-model-strategy/-kotlin-x-model-strategy.html","searchKeys":["KotlinXModelStrategy","constructor()","elide.proto.impl.AbstractElideKotlinXProtocol.KotlinXModelStrategy.KotlinXModelStrategy"]},{"name":"constructor()","description":"elide.proto.impl.ElideKotlinXProtocol.ElideKotlinXProtocol","location":"packages/proto/proto-kotlinx/elide.proto.impl/-elide-kotlin-x-protocol/-elide-kotlin-x-protocol.html","searchKeys":["ElideKotlinXProtocol","constructor()","elide.proto.impl.ElideKotlinXProtocol.ElideKotlinXProtocol"]},{"name":"constructor()","description":"elide.proto.impl.data.KxDataContainer.Builder.Builder","location":"packages/proto/proto-kotlinx/elide.proto.impl.data/-kx-data-container/-builder/-builder.html","searchKeys":["Builder","constructor()","elide.proto.impl.data.KxDataContainer.Builder.Builder"]},{"name":"constructor()","description":"elide.proto.impl.data.KxDataFingerprint.Builder.Builder","location":"packages/proto/proto-kotlinx/elide.proto.impl.data/-kx-data-fingerprint/-builder/-builder.html","searchKeys":["Builder","constructor()","elide.proto.impl.data.KxDataFingerprint.Builder.Builder"]},{"name":"constructor(seconds: Long, nanos: Int)","description":"elide.proto.impl.wkt.KxTimestamp.TimestampBuilder.TimestampBuilder","location":"packages/proto/proto-kotlinx/elide.proto.impl.wkt/-kx-timestamp/-timestamp-builder/-timestamp-builder.html","searchKeys":["TimestampBuilder","constructor(seconds: Long, nanos: Int)","elide.proto.impl.wkt.KxTimestamp.TimestampBuilder.TimestampBuilder"]},{"name":"enum KxEncoding : Enum<KxEncoding> , Symbolic<Int> ","description":"elide.proto.impl.data.KxEncoding","location":"packages/proto/proto-kotlinx/elide.proto.impl.data/-kx-encoding/index.html","searchKeys":["KxEncoding","enum KxEncoding : Enum<KxEncoding> , Symbolic<Int> ","elide.proto.impl.data.KxEncoding"]},{"name":"enum KxHashAlgorithm : Enum<KxHashAlgorithm> , Symbolic<Int> ","description":"elide.proto.impl.data.KxHashAlgorithm","location":"packages/proto/proto-kotlinx/elide.proto.impl.data/-kx-hash-algorithm/index.html","searchKeys":["KxHashAlgorithm","enum KxHashAlgorithm : Enum<KxHashAlgorithm> , Symbolic<Int> ","elide.proto.impl.data.KxHashAlgorithm"]},{"name":"fun valueOf(value: String): KxEncoding","description":"elide.proto.impl.data.KxEncoding.valueOf","location":"packages/proto/proto-kotlinx/elide.proto.impl.data/-kx-encoding/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): KxEncoding","elide.proto.impl.data.KxEncoding.valueOf"]},{"name":"fun valueOf(value: String): KxHashAlgorithm","description":"elide.proto.impl.data.KxHashAlgorithm.valueOf","location":"packages/proto/proto-kotlinx/elide.proto.impl.data/-kx-hash-algorithm/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): KxHashAlgorithm","elide.proto.impl.data.KxHashAlgorithm.valueOf"]},{"name":"fun values(): Array<KxEncoding>","description":"elide.proto.impl.data.KxEncoding.values","location":"packages/proto/proto-kotlinx/elide.proto.impl.data/-kx-encoding/values.html","searchKeys":["values","fun values(): Array<KxEncoding>","elide.proto.impl.data.KxEncoding.values"]},{"name":"fun values(): Array<KxHashAlgorithm>","description":"elide.proto.impl.data.KxHashAlgorithm.values","location":"packages/proto/proto-kotlinx/elide.proto.impl.data/-kx-hash-algorithm/values.html","searchKeys":["values","fun values(): Array<KxHashAlgorithm>","elide.proto.impl.data.KxHashAlgorithm.values"]},{"name":"object Companion : Symbolic.SealedResolver<Int, KxEncoding> ","description":"elide.proto.impl.data.KxEncoding.Companion","location":"packages/proto/proto-kotlinx/elide.proto.impl.data/-kx-encoding/-companion/index.html","searchKeys":["Companion","object Companion : Symbolic.SealedResolver<Int, KxEncoding> ","elide.proto.impl.data.KxEncoding.Companion"]},{"name":"object Companion : Symbolic.SealedResolver<Int, KxHashAlgorithm> ","description":"elide.proto.impl.data.KxHashAlgorithm.Companion","location":"packages/proto/proto-kotlinx/elide.proto.impl.data/-kx-hash-algorithm/-companion/index.html","searchKeys":["Companion","object Companion : Symbolic.SealedResolver<Int, KxHashAlgorithm> ","elide.proto.impl.data.KxHashAlgorithm.Companion"]},{"name":"object Factory : DataContainer.Factory<KxDataContainer, KxDataContainer.Builder, KxDataFingerprint, KxDataFingerprint.Builder, KxHashAlgorithm, KxEncoding> ","description":"elide.proto.impl.data.KxDataContainer.Factory","location":"packages/proto/proto-kotlinx/elide.proto.impl.data/-kx-data-container/-factory/index.html","searchKeys":["Factory","object Factory : DataContainer.Factory<KxDataContainer, KxDataContainer.Builder, KxDataFingerprint, KxDataFingerprint.Builder, KxHashAlgorithm, KxEncoding> ","elide.proto.impl.data.KxDataContainer.Factory"]},{"name":"object Factory : DataFingerprint.Factory<KxDataFingerprint, KxDataFingerprint.Builder, KxHashAlgorithm, KxEncoding> ","description":"elide.proto.impl.data.KxDataFingerprint.Factory","location":"packages/proto/proto-kotlinx/elide.proto.impl.data/-kx-data-fingerprint/-factory/index.html","searchKeys":["Factory","object Factory : DataFingerprint.Factory<KxDataFingerprint, KxDataFingerprint.Builder, KxHashAlgorithm, KxEncoding> ","elide.proto.impl.data.KxDataFingerprint.Factory"]},{"name":"object Factory : Timestamp.Factory<KxTimestamp, KxTimestamp.TimestampBuilder> ","description":"elide.proto.impl.wkt.KxTimestamp.Factory","location":"packages/proto/proto-kotlinx/elide.proto.impl.wkt/-kx-timestamp/-factory/index.html","searchKeys":["Factory","object Factory : Timestamp.Factory<KxTimestamp, KxTimestamp.TimestampBuilder> ","elide.proto.impl.wkt.KxTimestamp.Factory"]},{"name":"open override fun algorithm(): KxHashAlgorithm","description":"elide.proto.impl.data.KxDataFingerprint.algorithm","location":"packages/proto/proto-kotlinx/elide.proto.impl.data/-kx-data-fingerprint/algorithm.html","searchKeys":["algorithm","open override fun algorithm(): KxHashAlgorithm","elide.proto.impl.data.KxDataFingerprint.algorithm"]},{"name":"open override fun base(): KClass<*>?","description":"elide.proto.impl.AbstractElideKotlinXProtocol.base","location":"packages/proto/proto-kotlinx/elide.proto.impl/-abstract-elide-kotlin-x-protocol/base.html","searchKeys":["base","open override fun base(): KClass<*>?","elide.proto.impl.AbstractElideKotlinXProtocol.base"]},{"name":"open override fun build(): KxDataContainer","description":"elide.proto.impl.data.KxDataContainer.Builder.build","location":"packages/proto/proto-kotlinx/elide.proto.impl.data/-kx-data-container/-builder/build.html","searchKeys":["build","open override fun build(): KxDataContainer","elide.proto.impl.data.KxDataContainer.Builder.build"]},{"name":"open override fun build(): KxDataFingerprint","description":"elide.proto.impl.data.KxDataFingerprint.Builder.build","location":"packages/proto/proto-kotlinx/elide.proto.impl.data/-kx-data-fingerprint/-builder/build.html","searchKeys":["build","open override fun build(): KxDataFingerprint","elide.proto.impl.data.KxDataFingerprint.Builder.build"]},{"name":"open override fun build(): KxTimestamp","description":"elide.proto.impl.wkt.KxTimestamp.TimestampBuilder.build","location":"packages/proto/proto-kotlinx/elide.proto.impl.wkt/-kx-timestamp/-timestamp-builder/build.html","searchKeys":["build","open override fun build(): KxTimestamp","elide.proto.impl.wkt.KxTimestamp.TimestampBuilder.build"]},{"name":"open override fun builder(): KxDataContainer.Builder","description":"elide.proto.impl.data.KxDataContainer.Factory.builder","location":"packages/proto/proto-kotlinx/elide.proto.impl.data/-kx-data-container/-factory/builder.html","searchKeys":["builder","open override fun builder(): KxDataContainer.Builder","elide.proto.impl.data.KxDataContainer.Factory.builder"]},{"name":"open override fun builder(): KxDataFingerprint.Builder","description":"elide.proto.impl.data.KxDataFingerprint.Factory.builder","location":"packages/proto/proto-kotlinx/elide.proto.impl.data/-kx-data-fingerprint/-factory/builder.html","searchKeys":["builder","open override fun builder(): KxDataFingerprint.Builder","elide.proto.impl.data.KxDataFingerprint.Factory.builder"]},{"name":"open override fun builder(): KxTimestamp.TimestampBuilder","description":"elide.proto.impl.wkt.KxTimestamp.Factory.builder","location":"packages/proto/proto-kotlinx/elide.proto.impl.wkt/-kx-timestamp/-factory/builder.html","searchKeys":["builder","open override fun builder(): KxTimestamp.TimestampBuilder","elide.proto.impl.wkt.KxTimestamp.Factory.builder"]},{"name":"open override fun bytes(): ByteArray","description":"elide.proto.impl.data.KxDataContainer.bytes","location":"packages/proto/proto-kotlinx/elide.proto.impl.data/-kx-data-container/bytes.html","searchKeys":["bytes","open override fun bytes(): ByteArray","elide.proto.impl.data.KxDataContainer.bytes"]},{"name":"open override fun bytes(): ByteArray","description":"elide.proto.impl.data.KxDataFingerprint.bytes","location":"packages/proto/proto-kotlinx/elide.proto.impl.data/-kx-data-fingerprint/bytes.html","searchKeys":["bytes","open override fun bytes(): ByteArray","elide.proto.impl.data.KxDataFingerprint.bytes"]},{"name":"open override fun copy(model: KxDataContainer): KxDataContainer","description":"elide.proto.impl.data.KxDataContainer.Factory.copy","location":"packages/proto/proto-kotlinx/elide.proto.impl.data/-kx-data-container/-factory/copy.html","searchKeys":["copy","open override fun copy(model: KxDataContainer): KxDataContainer","elide.proto.impl.data.KxDataContainer.Factory.copy"]},{"name":"open override fun copy(model: KxDataFingerprint): KxDataFingerprint","description":"elide.proto.impl.data.KxDataFingerprint.Factory.copy","location":"packages/proto/proto-kotlinx/elide.proto.impl.data/-kx-data-fingerprint/-factory/copy.html","searchKeys":["copy","open override fun copy(model: KxDataFingerprint): KxDataFingerprint","elide.proto.impl.data.KxDataFingerprint.Factory.copy"]},{"name":"open override fun copy(model: KxTimestamp): KxTimestamp","description":"elide.proto.impl.wkt.KxTimestamp.Factory.copy","location":"packages/proto/proto-kotlinx/elide.proto.impl.wkt/-kx-timestamp/-factory/copy.html","searchKeys":["copy","open override fun copy(model: KxTimestamp): KxTimestamp","elide.proto.impl.wkt.KxTimestamp.Factory.copy"]},{"name":"open override fun create(algorithm: KxHashAlgorithm, base64: Base64Data): KxDataFingerprint","description":"elide.proto.impl.data.KxDataFingerprint.Factory.create","location":"packages/proto/proto-kotlinx/elide.proto.impl.data/-kx-data-fingerprint/-factory/create.html","searchKeys":["create","open override fun create(algorithm: KxHashAlgorithm, base64: Base64Data): KxDataFingerprint","elide.proto.impl.data.KxDataFingerprint.Factory.create"]},{"name":"open override fun create(algorithm: KxHashAlgorithm, data: ByteArray): KxDataFingerprint","description":"elide.proto.impl.data.KxDataFingerprint.Factory.create","location":"packages/proto/proto-kotlinx/elide.proto.impl.data/-kx-data-fingerprint/-factory/create.html","searchKeys":["create","open override fun create(algorithm: KxHashAlgorithm, data: ByteArray): KxDataFingerprint","elide.proto.impl.data.KxDataFingerprint.Factory.create"]},{"name":"open override fun create(algorithm: KxHashAlgorithm, data: String): KxDataFingerprint","description":"elide.proto.impl.data.KxDataFingerprint.Factory.create","location":"packages/proto/proto-kotlinx/elide.proto.impl.data/-kx-data-fingerprint/-factory/create.html","searchKeys":["create","open override fun create(algorithm: KxHashAlgorithm, data: String): KxDataFingerprint","elide.proto.impl.data.KxDataFingerprint.Factory.create"]},{"name":"open override fun create(algorithm: KxHashAlgorithm, data: String, encoding: KxEncoding): KxDataFingerprint","description":"elide.proto.impl.data.KxDataFingerprint.Factory.create","location":"packages/proto/proto-kotlinx/elide.proto.impl.data/-kx-data-fingerprint/-factory/create.html","searchKeys":["create","open override fun create(algorithm: KxHashAlgorithm, data: String, encoding: KxEncoding): KxDataFingerprint","elide.proto.impl.data.KxDataFingerprint.Factory.create"]},{"name":"open override fun create(algorithm: KxHashAlgorithm, hex: HexData): KxDataFingerprint","description":"elide.proto.impl.data.KxDataFingerprint.Factory.create","location":"packages/proto/proto-kotlinx/elide.proto.impl.data/-kx-data-fingerprint/-factory/create.html","searchKeys":["create","open override fun create(algorithm: KxHashAlgorithm, hex: HexData): KxDataFingerprint","elide.proto.impl.data.KxDataFingerprint.Factory.create"]},{"name":"open override fun create(base64: Base64Data): KxDataContainer","description":"elide.proto.impl.data.KxDataContainer.Factory.create","location":"packages/proto/proto-kotlinx/elide.proto.impl.data/-kx-data-container/-factory/create.html","searchKeys":["create","open override fun create(base64: Base64Data): KxDataContainer","elide.proto.impl.data.KxDataContainer.Factory.create"]},{"name":"open override fun create(data: ByteArray): KxDataContainer","description":"elide.proto.impl.data.KxDataContainer.Factory.create","location":"packages/proto/proto-kotlinx/elide.proto.impl.data/-kx-data-container/-factory/create.html","searchKeys":["create","open override fun create(data: ByteArray): KxDataContainer","elide.proto.impl.data.KxDataContainer.Factory.create"]},{"name":"open override fun create(data: String): KxDataContainer","description":"elide.proto.impl.data.KxDataContainer.Factory.create","location":"packages/proto/proto-kotlinx/elide.proto.impl.data/-kx-data-container/-factory/create.html","searchKeys":["create","open override fun create(data: String): KxDataContainer","elide.proto.impl.data.KxDataContainer.Factory.create"]},{"name":"open override fun create(encoding: KxEncoding, data: ByteArray): KxDataContainer","description":"elide.proto.impl.data.KxDataContainer.Factory.create","location":"packages/proto/proto-kotlinx/elide.proto.impl.data/-kx-data-container/-factory/create.html","searchKeys":["create","open override fun create(encoding: KxEncoding, data: ByteArray): KxDataContainer","elide.proto.impl.data.KxDataContainer.Factory.create"]},{"name":"open override fun create(hex: HexData): KxDataContainer","description":"elide.proto.impl.data.KxDataContainer.Factory.create","location":"packages/proto/proto-kotlinx/elide.proto.impl.data/-kx-data-container/-factory/create.html","searchKeys":["create","open override fun create(hex: HexData): KxDataContainer","elide.proto.impl.data.KxDataContainer.Factory.create"]},{"name":"open override fun create(op: KxDataContainer.Builder.() -> Unit): KxDataContainer","description":"elide.proto.impl.data.KxDataContainer.Factory.create","location":"packages/proto/proto-kotlinx/elide.proto.impl.data/-kx-data-container/-factory/create.html","searchKeys":["create","open override fun create(op: KxDataContainer.Builder.() -> Unit): KxDataContainer","elide.proto.impl.data.KxDataContainer.Factory.create"]},{"name":"open override fun create(op: KxDataFingerprint.Builder.() -> Unit): KxDataFingerprint","description":"elide.proto.impl.data.KxDataFingerprint.Factory.create","location":"packages/proto/proto-kotlinx/elide.proto.impl.data/-kx-data-fingerprint/-factory/create.html","searchKeys":["create","open override fun create(op: KxDataFingerprint.Builder.() -> Unit): KxDataFingerprint","elide.proto.impl.data.KxDataFingerprint.Factory.create"]},{"name":"open override fun defaultInstance(): KxDataContainer","description":"elide.proto.impl.data.KxDataContainer.Factory.defaultInstance","location":"packages/proto/proto-kotlinx/elide.proto.impl.data/-kx-data-container/-factory/default-instance.html","searchKeys":["defaultInstance","open override fun defaultInstance(): KxDataContainer","elide.proto.impl.data.KxDataContainer.Factory.defaultInstance"]},{"name":"open override fun defaultInstance(): KxDataFingerprint","description":"elide.proto.impl.data.KxDataFingerprint.Factory.defaultInstance","location":"packages/proto/proto-kotlinx/elide.proto.impl.data/-kx-data-fingerprint/-factory/default-instance.html","searchKeys":["defaultInstance","open override fun defaultInstance(): KxDataFingerprint","elide.proto.impl.data.KxDataFingerprint.Factory.defaultInstance"]},{"name":"open override fun defaultInstance(): KxTimestamp","description":"elide.proto.impl.wkt.KxTimestamp.Factory.defaultInstance","location":"packages/proto/proto-kotlinx/elide.proto.impl.wkt/-kx-timestamp/-factory/default-instance.html","searchKeys":["defaultInstance","open override fun defaultInstance(): KxTimestamp","elide.proto.impl.wkt.KxTimestamp.Factory.defaultInstance"]},{"name":"open override fun dialects(): Set<ElideProtocol.Dialect>","description":"elide.proto.impl.AbstractElideKotlinXProtocol.dialects","location":"packages/proto/proto-kotlinx/elide.proto.impl/-abstract-elide-kotlin-x-protocol/dialects.html","searchKeys":["dialects","open override fun dialects(): Set<ElideProtocol.Dialect>","elide.proto.impl.AbstractElideKotlinXProtocol.dialects"]},{"name":"open override fun empty(): KxDataContainer","description":"elide.proto.impl.data.KxDataContainer.Factory.empty","location":"packages/proto/proto-kotlinx/elide.proto.impl.data/-kx-data-container/-factory/empty.html","searchKeys":["empty","open override fun empty(): KxDataContainer","elide.proto.impl.data.KxDataContainer.Factory.empty"]},{"name":"open override fun empty(): KxDataFingerprint","description":"elide.proto.impl.data.KxDataFingerprint.Factory.empty","location":"packages/proto/proto-kotlinx/elide.proto.impl.data/-kx-data-fingerprint/-factory/empty.html","searchKeys":["empty","open override fun empty(): KxDataFingerprint","elide.proto.impl.data.KxDataFingerprint.Factory.empty"]},{"name":"open override fun empty(): KxTimestamp","description":"elide.proto.impl.wkt.KxTimestamp.Factory.empty","location":"packages/proto/proto-kotlinx/elide.proto.impl.wkt/-kx-timestamp/-factory/empty.html","searchKeys":["empty","open override fun empty(): KxTimestamp","elide.proto.impl.wkt.KxTimestamp.Factory.empty"]},{"name":"open override fun encoding(): KxEncoding","description":"elide.proto.impl.data.KxDataFingerprint.encoding","location":"packages/proto/proto-kotlinx/elide.proto.impl.data/-kx-data-fingerprint/encoding.html","searchKeys":["encoding","open override fun encoding(): KxEncoding","elide.proto.impl.data.KxDataFingerprint.encoding"]},{"name":"open override fun encoding(): KxEncoding?","description":"elide.proto.impl.data.KxDataContainer.encoding","location":"packages/proto/proto-kotlinx/elide.proto.impl.data/-kx-data-container/encoding.html","searchKeys":["encoding","open override fun encoding(): KxEncoding?","elide.proto.impl.data.KxDataContainer.encoding"]},{"name":"open override fun engine(): ElideProtocol.ImplementationLibrary","description":"elide.proto.impl.AbstractElideKotlinXProtocol.engine","location":"packages/proto/proto-kotlinx/elide.proto.impl/-abstract-elide-kotlin-x-protocol/engine.html","searchKeys":["engine","open override fun engine(): ElideProtocol.ImplementationLibrary","elide.proto.impl.AbstractElideKotlinXProtocol.engine"]},{"name":"open override fun factory(): KxDataContainer.Factory","description":"elide.proto.impl.data.KxDataContainer.factory","location":"packages/proto/proto-kotlinx/elide.proto.impl.data/-kx-data-container/factory.html","searchKeys":["factory","open override fun factory(): KxDataContainer.Factory","elide.proto.impl.data.KxDataContainer.factory"]},{"name":"open override fun factory(): KxDataFingerprint.Factory","description":"elide.proto.impl.data.KxDataFingerprint.factory","location":"packages/proto/proto-kotlinx/elide.proto.impl.data/-kx-data-fingerprint/factory.html","searchKeys":["factory","open override fun factory(): KxDataFingerprint.Factory","elide.proto.impl.data.KxDataFingerprint.factory"]},{"name":"open override fun factory(): KxTimestamp.Factory","description":"elide.proto.impl.wkt.KxTimestamp.factory","location":"packages/proto/proto-kotlinx/elide.proto.impl.wkt/-kx-timestamp/factory.html","searchKeys":["factory","open override fun factory(): KxTimestamp.Factory","elide.proto.impl.wkt.KxTimestamp.factory"]},{"name":"open override fun fingerprint(): DataFingerprint<*, *, *, *>?","description":"elide.proto.impl.data.KxDataContainer.fingerprint","location":"packages/proto/proto-kotlinx/elide.proto.impl.data/-kx-data-container/fingerprint.html","searchKeys":["fingerprint","open override fun fingerprint(): DataFingerprint<*, *, *, *>?","elide.proto.impl.data.KxDataContainer.fingerprint"]},{"name":"open override fun model(): DataModelStrategy<KxHashAlgorithm, KxEncoding, KxDataContainer, KxDataContainer.Builder, KxDataFingerprint, KxDataFingerprint.Builder, KxTimestamp, KxTimestamp.TimestampBuilder>","description":"elide.proto.impl.AbstractElideKotlinXProtocol.KotlinXModelStrategy.model","location":"packages/proto/proto-kotlinx/elide.proto.impl/-abstract-elide-kotlin-x-protocol/-kotlin-x-model-strategy/model.html","searchKeys":["model","open override fun model(): DataModelStrategy<KxHashAlgorithm, KxEncoding, KxDataContainer, KxDataContainer.Builder, KxDataFingerprint, KxDataFingerprint.Builder, KxTimestamp, KxTimestamp.TimestampBuilder>","elide.proto.impl.AbstractElideKotlinXProtocol.KotlinXModelStrategy.model"]},{"name":"open override fun mutate(op: KxDataContainer.Builder.() -> Unit): KxDataContainer","description":"elide.proto.impl.data.KxDataContainer.mutate","location":"packages/proto/proto-kotlinx/elide.proto.impl.data/-kx-data-container/mutate.html","searchKeys":["mutate","open override fun mutate(op: KxDataContainer.Builder.() -> Unit): KxDataContainer","elide.proto.impl.data.KxDataContainer.mutate"]},{"name":"open override fun resolve(symbol: Int): KxEncoding","description":"elide.proto.impl.data.KxEncoding.Companion.resolve","location":"packages/proto/proto-kotlinx/elide.proto.impl.data/-kx-encoding/-companion/resolve.html","searchKeys":["resolve","open override fun resolve(symbol: Int): KxEncoding","elide.proto.impl.data.KxEncoding.Companion.resolve"]},{"name":"open override fun resolve(symbol: Int): KxHashAlgorithm","description":"elide.proto.impl.data.KxHashAlgorithm.Companion.resolve","location":"packages/proto/proto-kotlinx/elide.proto.impl.data/-kx-hash-algorithm/-companion/resolve.html","searchKeys":["resolve","open override fun resolve(symbol: Int): KxHashAlgorithm","elide.proto.impl.data.KxHashAlgorithm.Companion.resolve"]},{"name":"open override fun setAlgorithm(value: KxHashAlgorithm): KxDataFingerprint.Builder","description":"elide.proto.impl.data.KxDataFingerprint.Builder.setAlgorithm","location":"packages/proto/proto-kotlinx/elide.proto.impl.data/-kx-data-fingerprint/-builder/set-algorithm.html","searchKeys":["setAlgorithm","open override fun setAlgorithm(value: KxHashAlgorithm): KxDataFingerprint.Builder","elide.proto.impl.data.KxDataFingerprint.Builder.setAlgorithm"]},{"name":"open override fun setBase64(value: Base64Data): KxDataContainer.Builder","description":"elide.proto.impl.data.KxDataContainer.Builder.setBase64","location":"packages/proto/proto-kotlinx/elide.proto.impl.data/-kx-data-container/-builder/set-base64.html","searchKeys":["setBase64","open override fun setBase64(value: Base64Data): KxDataContainer.Builder","elide.proto.impl.data.KxDataContainer.Builder.setBase64"]},{"name":"open override fun setData(value: ByteArray): KxDataContainer.Builder","description":"elide.proto.impl.data.KxDataContainer.Builder.setData","location":"packages/proto/proto-kotlinx/elide.proto.impl.data/-kx-data-container/-builder/set-data.html","searchKeys":["setData","open override fun setData(value: ByteArray): KxDataContainer.Builder","elide.proto.impl.data.KxDataContainer.Builder.setData"]},{"name":"open override fun setData(value: String): KxDataContainer.Builder","description":"elide.proto.impl.data.KxDataContainer.Builder.setData","location":"packages/proto/proto-kotlinx/elide.proto.impl.data/-kx-data-container/-builder/set-data.html","searchKeys":["setData","open override fun setData(value: String): KxDataContainer.Builder","elide.proto.impl.data.KxDataContainer.Builder.setData"]},{"name":"open override fun setEncoding(value: KxEncoding): KxDataFingerprint.Builder","description":"elide.proto.impl.data.KxDataFingerprint.Builder.setEncoding","location":"packages/proto/proto-kotlinx/elide.proto.impl.data/-kx-data-fingerprint/-builder/set-encoding.html","searchKeys":["setEncoding","open override fun setEncoding(value: KxEncoding): KxDataFingerprint.Builder","elide.proto.impl.data.KxDataFingerprint.Builder.setEncoding"]},{"name":"open override fun setFingerprint(data: ByteArray): KxDataFingerprint.Builder","description":"elide.proto.impl.data.KxDataFingerprint.Builder.setFingerprint","location":"packages/proto/proto-kotlinx/elide.proto.impl.data/-kx-data-fingerprint/-builder/set-fingerprint.html","searchKeys":["setFingerprint","open override fun setFingerprint(data: ByteArray): KxDataFingerprint.Builder","elide.proto.impl.data.KxDataFingerprint.Builder.setFingerprint"]},{"name":"open override fun setFingerprint(data: ByteArray, withAlgorith: KxHashAlgorithm): KxDataFingerprint.Builder","description":"elide.proto.impl.data.KxDataFingerprint.Builder.setFingerprint","location":"packages/proto/proto-kotlinx/elide.proto.impl.data/-kx-data-fingerprint/-builder/set-fingerprint.html","searchKeys":["setFingerprint","open override fun setFingerprint(data: ByteArray, withAlgorith: KxHashAlgorithm): KxDataFingerprint.Builder","elide.proto.impl.data.KxDataFingerprint.Builder.setFingerprint"]},{"name":"open override fun setFingerprint(value: ByteArray, withAlgorith: KxHashAlgorithm, withEncoding: KxEncoding): KxDataFingerprint.Builder","description":"elide.proto.impl.data.KxDataFingerprint.Builder.setFingerprint","location":"packages/proto/proto-kotlinx/elide.proto.impl.data/-kx-data-fingerprint/-builder/set-fingerprint.html","searchKeys":["setFingerprint","open override fun setFingerprint(value: ByteArray, withAlgorith: KxHashAlgorithm, withEncoding: KxEncoding): KxDataFingerprint.Builder","elide.proto.impl.data.KxDataFingerprint.Builder.setFingerprint"]},{"name":"open override fun setHex(value: HexData): KxDataContainer.Builder","description":"elide.proto.impl.data.KxDataContainer.Builder.setHex","location":"packages/proto/proto-kotlinx/elide.proto.impl.data/-kx-data-container/-builder/set-hex.html","searchKeys":["setHex","open override fun setHex(value: HexData): KxDataContainer.Builder","elide.proto.impl.data.KxDataContainer.Builder.setHex"]},{"name":"open override fun strategy(): ElideProtocol.ModelAdapterStrategy","description":"elide.proto.impl.AbstractElideKotlinXProtocol.strategy","location":"packages/proto/proto-kotlinx/elide.proto.impl/-abstract-elide-kotlin-x-protocol/strategy.html","searchKeys":["strategy","open override fun strategy(): ElideProtocol.ModelAdapterStrategy","elide.proto.impl.AbstractElideKotlinXProtocol.strategy"]},{"name":"open override fun toBuilder(): KxDataContainer.Builder","description":"elide.proto.impl.data.KxDataContainer.toBuilder","location":"packages/proto/proto-kotlinx/elide.proto.impl.data/-kx-data-container/to-builder.html","searchKeys":["toBuilder","open override fun toBuilder(): KxDataContainer.Builder","elide.proto.impl.data.KxDataContainer.toBuilder"]},{"name":"open override fun toBuilder(): KxDataFingerprint.Builder","description":"elide.proto.impl.data.KxDataFingerprint.toBuilder","location":"packages/proto/proto-kotlinx/elide.proto.impl.data/-kx-data-fingerprint/to-builder.html","searchKeys":["toBuilder","open override fun toBuilder(): KxDataFingerprint.Builder","elide.proto.impl.data.KxDataFingerprint.toBuilder"]},{"name":"open override fun toBuilder(): KxTimestamp.TimestampBuilder","description":"elide.proto.impl.wkt.KxTimestamp.toBuilder","location":"packages/proto/proto-kotlinx/elide.proto.impl.wkt/-kx-timestamp/to-builder.html","searchKeys":["toBuilder","open override fun toBuilder(): KxTimestamp.TimestampBuilder","elide.proto.impl.wkt.KxTimestamp.toBuilder"]},{"name":"open override fun toInstant(): Instant","description":"elide.proto.impl.wkt.KxTimestamp.toInstant","location":"packages/proto/proto-kotlinx/elide.proto.impl.wkt/-kx-timestamp/to-instant.html","searchKeys":["toInstant","open override fun toInstant(): Instant","elide.proto.impl.wkt.KxTimestamp.toInstant"]},{"name":"open override val compression: Boolean","description":"elide.proto.impl.AbstractElideKotlinXProtocol.compression","location":"packages/proto/proto-kotlinx/elide.proto.impl/-abstract-elide-kotlin-x-protocol/compression.html","searchKeys":["compression","open override val compression: Boolean","elide.proto.impl.AbstractElideKotlinXProtocol.compression"]},{"name":"open override val reflection: Boolean","description":"elide.proto.impl.AbstractElideKotlinXProtocol.reflection","location":"packages/proto/proto-kotlinx/elide.proto.impl/-abstract-elide-kotlin-x-protocol/reflection.html","searchKeys":["reflection","open override val reflection: Boolean","elide.proto.impl.AbstractElideKotlinXProtocol.reflection"]},{"name":"open override val symbol: Int","description":"elide.proto.impl.data.KxEncoding.symbol","location":"packages/proto/proto-kotlinx/elide.proto.impl.data/-kx-encoding/symbol.html","searchKeys":["symbol","open override val symbol: Int","elide.proto.impl.data.KxEncoding.symbol"]},{"name":"open override val symbol: Int","description":"elide.proto.impl.data.KxHashAlgorithm.symbol","location":"packages/proto/proto-kotlinx/elide.proto.impl.data/-kx-hash-algorithm/symbol.html","searchKeys":["symbol","open override val symbol: Int","elide.proto.impl.data.KxHashAlgorithm.symbol"]},{"name":"open override var algorithm: KxHashAlgorithm","description":"elide.proto.impl.data.KxDataFingerprint.Builder.algorithm","location":"packages/proto/proto-kotlinx/elide.proto.impl.data/-kx-data-fingerprint/-builder/algorithm.html","searchKeys":["algorithm","open override var algorithm: KxHashAlgorithm","elide.proto.impl.data.KxDataFingerprint.Builder.algorithm"]},{"name":"open override var data: ByteArray","description":"elide.proto.impl.data.KxDataContainer.Builder.data","location":"packages/proto/proto-kotlinx/elide.proto.impl.data/-kx-data-container/-builder/data.html","searchKeys":["data","open override var data: ByteArray","elide.proto.impl.data.KxDataContainer.Builder.data"]},{"name":"open override var encoding: KxEncoding","description":"elide.proto.impl.data.KxDataContainer.Builder.encoding","location":"packages/proto/proto-kotlinx/elide.proto.impl.data/-kx-data-container/-builder/encoding.html","searchKeys":["encoding","open override var encoding: KxEncoding","elide.proto.impl.data.KxDataContainer.Builder.encoding"]},{"name":"open override var encoding: KxEncoding","description":"elide.proto.impl.data.KxDataFingerprint.Builder.encoding","location":"packages/proto/proto-kotlinx/elide.proto.impl.data/-kx-data-fingerprint/-builder/encoding.html","searchKeys":["encoding","open override var encoding: KxEncoding","elide.proto.impl.data.KxDataFingerprint.Builder.encoding"]},{"name":"open override var fingerprint: ByteArray","description":"elide.proto.impl.data.KxDataFingerprint.Builder.fingerprint","location":"packages/proto/proto-kotlinx/elide.proto.impl.data/-kx-data-fingerprint/-builder/fingerprint.html","searchKeys":["fingerprint","open override var fingerprint: ByteArray","elide.proto.impl.data.KxDataFingerprint.Builder.fingerprint"]},{"name":"open override var nanos: Int","description":"elide.proto.impl.wkt.KxTimestamp.TimestampBuilder.nanos","location":"packages/proto/proto-kotlinx/elide.proto.impl.wkt/-kx-timestamp/-timestamp-builder/nanos.html","searchKeys":["nanos","open override var nanos: Int","elide.proto.impl.wkt.KxTimestamp.TimestampBuilder.nanos"]},{"name":"open override var seconds: Long","description":"elide.proto.impl.wkt.KxTimestamp.TimestampBuilder.seconds","location":"packages/proto/proto-kotlinx/elide.proto.impl.wkt/-kx-timestamp/-timestamp-builder/seconds.html","searchKeys":["seconds","open override var seconds: Long","elide.proto.impl.wkt.KxTimestamp.TimestampBuilder.seconds"]},{"name":"val entries: EnumEntries<KxEncoding>","description":"elide.proto.impl.data.KxEncoding.entries","location":"packages/proto/proto-kotlinx/elide.proto.impl.data/-kx-encoding/entries.html","searchKeys":["entries","val entries: EnumEntries<KxEncoding>","elide.proto.impl.data.KxEncoding.entries"]},{"name":"val entries: EnumEntries<KxHashAlgorithm>","description":"elide.proto.impl.data.KxHashAlgorithm.entries","location":"packages/proto/proto-kotlinx/elide.proto.impl.data/-kx-hash-algorithm/entries.html","searchKeys":["entries","val entries: EnumEntries<KxHashAlgorithm>","elide.proto.impl.data.KxHashAlgorithm.entries"]},{"name":"value class KxTimestamp : Timestamp<KxTimestamp, KxTimestamp.TimestampBuilder> ","description":"elide.proto.impl.wkt.KxTimestamp","location":"packages/proto/proto-kotlinx/elide.proto.impl.wkt/-kx-timestamp/index.html","searchKeys":["KxTimestamp","value class KxTimestamp : Timestamp<KxTimestamp, KxTimestamp.TimestampBuilder> ","elide.proto.impl.wkt.KxTimestamp"]},{"name":"class Java","description":"elide.runtime.plugins.java.Java","location":"packages/graalvm-java/elide.runtime.plugins.java/-java/index.html","searchKeys":["Java","class Java","elide.runtime.plugins.java.Java"]},{"name":"class JavaConfig","description":"elide.runtime.plugins.java.JavaConfig","location":"packages/graalvm-java/elide.runtime.plugins.java/-java-config/index.html","searchKeys":["JavaConfig","class JavaConfig","elide.runtime.plugins.java.JavaConfig"]},{"name":"fun PolyglotContext.java(source: String, name: String? = null): PolyglotValue","description":"elide.runtime.plugins.java.java","location":"packages/graalvm-java/elide.runtime.plugins.java/java.html","searchKeys":["java","fun PolyglotContext.java(source: String, name: String? = null): PolyglotValue","elide.runtime.plugins.java.java"]},{"name":"object Plugin : AbstractLanguagePlugin<JavaConfig, Java> ","description":"elide.runtime.plugins.java.Java.Plugin","location":"packages/graalvm-java/elide.runtime.plugins.java/-java/-plugin/index.html","searchKeys":["Plugin","object Plugin : AbstractLanguagePlugin<JavaConfig, Java> ","elide.runtime.plugins.java.Java.Plugin"]},{"name":"open override fun install(scope: EnginePlugin.InstallationScope, configuration: JavaConfig.() -> Unit): Java","description":"elide.runtime.plugins.java.Java.Plugin.install","location":"packages/graalvm-java/elide.runtime.plugins.java/-java/-plugin/install.html","searchKeys":["install","open override fun install(scope: EnginePlugin.InstallationScope, configuration: JavaConfig.() -> Unit): Java","elide.runtime.plugins.java.Java.Plugin.install"]},{"name":"open override val key: EnginePlugin.Key<Java>","description":"elide.runtime.plugins.java.Java.Plugin.key","location":"packages/graalvm-java/elide.runtime.plugins.java/-java/-plugin/key.html","searchKeys":["key","open override val key: EnginePlugin.Key<Java>","elide.runtime.plugins.java.Java.Plugin.key"]},{"name":"open override val languageId: String","description":"elide.runtime.plugins.java.Java.Plugin.languageId","location":"packages/graalvm-java/elide.runtime.plugins.java/-java/-plugin/language-id.html","searchKeys":["languageId","open override val languageId: String","elide.runtime.plugins.java.Java.Plugin.languageId"]},{"name":"abstract fun constructStyleTagsFromChunks(critical: EmotionCriticalToChunks): String","description":"emotion.server.worker.EmotionServer.constructStyleTagsFromChunks","location":"packages/graalvm-react/emotion.server.worker/-emotion-server/construct-style-tags-from-chunks.html","searchKeys":["constructStyleTagsFromChunks","abstract fun constructStyleTagsFromChunks(critical: EmotionCriticalToChunks): String","emotion.server.worker.EmotionServer.constructStyleTagsFromChunks"]},{"name":"abstract fun extractCriticalToChunks(html: String): EmotionCriticalToChunks","description":"emotion.server.worker.EmotionServer.extractCriticalToChunks","location":"packages/graalvm-react/emotion.server.worker/-emotion-server/extract-critical-to-chunks.html","searchKeys":["extractCriticalToChunks","abstract fun extractCriticalToChunks(html: String): EmotionCriticalToChunks","emotion.server.worker.EmotionServer.extractCriticalToChunks"]},{"name":"abstract override var children: ReactNode?","description":"mui.material.NoSsrProps.children","location":"packages/graalvm-react/mui.material/-no-ssr-props/children.html","searchKeys":["children","abstract override var children: ReactNode?","mui.material.NoSsrProps.children"]},{"name":"abstract var css: String","description":"emotion.server.worker.StyleInfo.css","location":"packages/graalvm-react/emotion.server.worker/-style-info/css.html","searchKeys":["css","abstract var css: String","emotion.server.worker.StyleInfo.css"]},{"name":"abstract var html: String","description":"emotion.server.worker.EmotionCriticalToChunks.html","location":"packages/graalvm-react/emotion.server.worker/-emotion-critical-to-chunks/html.html","searchKeys":["html","abstract var html: String","emotion.server.worker.EmotionCriticalToChunks.html"]},{"name":"abstract var ids: List<String>","description":"emotion.server.worker.StyleInfo.ids","location":"packages/graalvm-react/emotion.server.worker/-style-info/ids.html","searchKeys":["ids","abstract var ids: List<String>","emotion.server.worker.StyleInfo.ids"]},{"name":"abstract var key: String","description":"emotion.server.worker.StyleInfo.key","location":"packages/graalvm-react/emotion.server.worker/-style-info/key.html","searchKeys":["key","abstract var key: String","emotion.server.worker.StyleInfo.key"]},{"name":"abstract var styles: List<StyleInfo>","description":"emotion.server.worker.EmotionCriticalToChunks.styles","location":"packages/graalvm-react/emotion.server.worker/-emotion-critical-to-chunks/styles.html","searchKeys":["styles","abstract var styles: List<StyleInfo>","emotion.server.worker.EmotionCriticalToChunks.styles"]},{"name":"const val DEFAULT_EL_TYPE: String","description":"elide.js.ssr.DEFAULT_EL_TYPE","location":"packages/graalvm-react/elide.js.ssr/-d-e-f-a-u-l-t_-e-l_-t-y-p-e.html","searchKeys":["DEFAULT_EL_TYPE","const val DEFAULT_EL_TYPE: String","elide.js.ssr.DEFAULT_EL_TYPE"]},{"name":"const val RENDER_ROOT_ID: String","description":"elide.js.ssr.RENDER_ROOT_ID","location":"packages/graalvm-react/elide.js.ssr/-r-e-n-d-e-r_-r-o-o-t_-i-d.html","searchKeys":["RENDER_ROOT_ID","const val RENDER_ROOT_ID: String","elide.js.ssr.RENDER_ROOT_ID"]},{"name":"const val SERVING_MODE_SSR: String","description":"elide.js.ssr.SERVING_MODE_SSR","location":"packages/graalvm-react/elide.js.ssr/-s-e-r-v-i-n-g_-m-o-d-e_-s-s-r.html","searchKeys":["SERVING_MODE_SSR","const val SERVING_MODE_SSR: String","elide.js.ssr.SERVING_MODE_SSR"]},{"name":"const val SSR_DATA_ID: String","description":"elide.js.ssr.SSR_DATA_ID","location":"packages/graalvm-react/elide.js.ssr/-s-s-r_-d-a-t-a_-i-d.html","searchKeys":["SSR_DATA_ID","const val SSR_DATA_ID: String","elide.js.ssr.SSR_DATA_ID"]},{"name":"const val SSR_FLAG: String","description":"elide.js.ssr.SSR_FLAG","location":"packages/graalvm-react/elide.js.ssr/-s-s-r_-f-l-a-g.html","searchKeys":["SSR_FLAG","const val SSR_FLAG: String","elide.js.ssr.SSR_FLAG"]},{"name":"external fun createEmotionServer(cache: dynamic): EmotionServer","description":"emotion.server.worker.createEmotionServer","location":"packages/graalvm-react/emotion.server.worker/create-emotion-server.html","searchKeys":["createEmotionServer","external fun createEmotionServer(cache: dynamic): EmotionServer","emotion.server.worker.createEmotionServer"]},{"name":"external interface EmotionCriticalToChunks","description":"emotion.server.worker.EmotionCriticalToChunks","location":"packages/graalvm-react/emotion.server.worker/-emotion-critical-to-chunks/index.html","searchKeys":["EmotionCriticalToChunks","external interface EmotionCriticalToChunks","emotion.server.worker.EmotionCriticalToChunks"]},{"name":"external interface EmotionServer","description":"emotion.server.worker.EmotionServer","location":"packages/graalvm-react/emotion.server.worker/-emotion-server/index.html","searchKeys":["EmotionServer","external interface EmotionServer","emotion.server.worker.EmotionServer"]},{"name":"external interface NoSsrProps : PropsWithChildren","description":"mui.material.NoSsrProps","location":"packages/graalvm-react/mui.material/-no-ssr-props/index.html","searchKeys":["NoSsrProps","external interface NoSsrProps : PropsWithChildren","mui.material.NoSsrProps"]},{"name":"external interface StyleInfo","description":"emotion.server.worker.StyleInfo","location":"packages/graalvm-react/emotion.server.worker/-style-info/index.html","searchKeys":["StyleInfo","external interface StyleInfo","emotion.server.worker.StyleInfo"]},{"name":"external val NoSsr: FC<NoSsrProps>","description":"mui.material.NoSsr","location":"packages/graalvm-react/mui.material/-no-ssr.html","searchKeys":["NoSsr","external val NoSsr: FC<NoSsrProps>","mui.material.NoSsr"]},{"name":"fun <AppProps : Props> boot(init: (AppProps?) -> ReactElement<*>)","description":"elide.js.ssr.boot","location":"packages/graalvm-react/elide.js.ssr/boot.html","searchKeys":["boot","fun <AppProps : Props> boot(init: (AppProps?) -> ReactElement<*>)","elide.js.ssr.boot"]},{"name":"val hydrate: (container: Element, initialChildren: ReactNode, options: HydrationOptions) -> Root","description":"elide.js.ssr.hydrate","location":"packages/graalvm-react/elide.js.ssr/hydrate.html","searchKeys":["hydrate","val hydrate: (container: Element, initialChildren: ReactNode, options: HydrationOptions) -> Root","elide.js.ssr.hydrate"]},{"name":"var GridProps.xs: Int","description":"mui.material.xs","location":"packages/graalvm-react/mui.material/xs.html","searchKeys":["xs","var GridProps.xs: Int","mui.material.xs"]}]