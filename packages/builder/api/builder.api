public abstract interface class elide/tooling/archive/ArchiveBuilder {
	public static final field Companion Lelide/tooling/archive/ArchiveBuilder$Companion;
	public abstract fun finalizeArchive ()V
	public abstract fun packFile (Ljava/nio/file/Path;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveEntry;
	public static fun zipBuilder (Ljava/nio/file/Path;Lkotlin/jvm/functions/Function1;)Lelide/tooling/archive/ArchiveBuilder$ZipBuilder;
	public static fun zipBuilder (Lorg/apache/commons/compress/archivers/ArchiveOutputStream;)Lelide/tooling/archive/ArchiveBuilder$ZipBuilder;
}

public final class elide/tooling/archive/ArchiveBuilder$Companion {
	public final fun zipBuilder (Ljava/nio/file/Path;Lkotlin/jvm/functions/Function1;)Lelide/tooling/archive/ArchiveBuilder$ZipBuilder;
	public final fun zipBuilder (Lorg/apache/commons/compress/archivers/ArchiveOutputStream;)Lelide/tooling/archive/ArchiveBuilder$ZipBuilder;
	public static synthetic fun zipBuilder$default (Lelide/tooling/archive/ArchiveBuilder$Companion;Ljava/nio/file/Path;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lelide/tooling/archive/ArchiveBuilder$ZipBuilder;
}

public final class elide/tooling/archive/ArchiveBuilder$ZipBuilder : elide/tooling/archive/ArchiveBuilder {
	public fun finalizeArchive ()V
	public fun packFile (Ljava/nio/file/Path;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveEntry;
}

public final class elide/tooling/archive/ZipTasks {
	public static final field INSTANCE Lelide/tooling/archive/ZipTasks;
	public final fun zip (Lelide/exec/Action$ActionContext;Ljava/nio/file/Path;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Lelide/exec/Result;
	public static synthetic fun zip$default (Lelide/tooling/archive/ZipTasks;Lelide/exec/Action$ActionContext;Ljava/nio/file/Path;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lelide/exec/Result;
}

public final class elide/tooling/builder/BuildDriver {
	public static final field INSTANCE Lelide/tooling/builder/BuildDriver;
	public static final fun buildProject (Lkotlinx/coroutines/CoroutineScope;Lio/micronaut/context/BeanContext;Lelide/tooling/project/ElideProject;Lelide/tooling/config/BuildConfigurator$BuildConfiguration;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun buildProject$default (Lkotlinx/coroutines/CoroutineScope;Lio/micronaut/context/BeanContext;Lelide/tooling/project/ElideProject;Lelide/tooling/config/BuildConfigurator$BuildConfiguration;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static final fun configure (Lio/micronaut/context/BeanContext;Lelide/tooling/project/ElideProject;Lelide/tooling/config/BuildConfigurator$BuildSettings;Lelide/tooling/config/BuildConfigurator;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun configure$default (Lio/micronaut/context/BeanContext;Lelide/tooling/project/ElideProject;Lelide/tooling/config/BuildConfigurator$BuildSettings;Lelide/tooling/config/BuildConfigurator;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static final fun dependencies (Lkotlinx/coroutines/CoroutineScope;Lelide/tooling/config/BuildConfigurator$BuildConfiguration;)Lkotlinx/coroutines/Deferred;
	public static final fun resolve (Lkotlinx/coroutines/CoroutineScope;Lelide/tooling/config/BuildConfigurator$BuildConfiguration;Ljava/util/List;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun resolve$default (Lkotlinx/coroutines/CoroutineScope;Lelide/tooling/config/BuildConfigurator$BuildConfiguration;Ljava/util/List;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
}

public final class elide/tooling/builder/TestDriver {
	public static final field INSTANCE Lelide/tooling/builder/TestDriver;
	public static final fun configureTests (Lkotlinx/coroutines/CoroutineScope;Lio/micronaut/context/BeanContext;Lelide/tooling/project/ElideProject;Lelide/runtime/intrinsics/testing/TestingRegistrar;Lkotlin/jvm/functions/Function1;Lelide/tooling/registry/ResolverRegistry;Lelide/exec/ActionScope;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun configureTests$default (Lkotlinx/coroutines/CoroutineScope;Lio/micronaut/context/BeanContext;Lelide/tooling/project/ElideProject;Lelide/runtime/intrinsics/testing/TestingRegistrar;Lkotlin/jvm/functions/Function1;Lelide/tooling/registry/ResolverRegistry;Lelide/exec/ActionScope;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static final fun discoverTests (Lkotlinx/coroutines/CoroutineScope;Lio/micronaut/context/BeanContext;Lelide/tooling/project/ElideProject;Lelide/runtime/intrinsics/testing/TestingRegistrar;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun discoverTests$default (Lkotlinx/coroutines/CoroutineScope;Lio/micronaut/context/BeanContext;Lelide/tooling/project/ElideProject;Lelide/runtime/intrinsics/testing/TestingRegistrar;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
}

public final class elide/tooling/cli/Statics {
	public static final field INSTANCE Lelide/tooling/cli/Statics;
	public static field err Ljava/io/PrintStream;
	public static field out Ljava/io/PrintStream;
	public final fun assignStreams (Ljava/io/PrintStream;Ljava/io/PrintStream;Ljava/io/InputStream;)V
	public final fun getArgs ()[Ljava/lang/String;
	public final fun getBin ()Ljava/lang/String;
	public final fun getBinPath ()Ljava/nio/file/Path;
	public final fun getDisableStreams ()Z
	public final fun getElideHome ()Ljava/nio/file/Path;
	public final fun getIn ()Ljava/io/InputStream;
	public final fun getLogging ()Lelide/runtime/Logger;
	public final fun getNoColor ()Z
	public final fun getResourcesPath ()Ljava/nio/file/Path;
	public final fun getServerLogger ()Lelide/runtime/Logger;
	public final fun getTerminal ()Lcom/github/ajalt/mordant/terminal/Terminal;
	public final fun mountArgs (Ljava/lang/String;[Ljava/lang/String;)V
}

public final class elide/tooling/config/BuildConfiguration {
	public static final field INSTANCE Lelide/tooling/config/BuildConfiguration;
	public static final fun configure (Lelide/tooling/project/ElideProject;Lio/micronaut/context/BeanContext;Lelide/tooling/config/BuildConfigurator$BuildConfiguration;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun configure (Lelide/tooling/project/ElideProject;Lio/micronaut/context/BeanContext;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun create ()Lelide/tooling/config/BuildConfigurator$BuildConfiguration;
	public static final fun create (Ljava/nio/file/Path;Lelide/tooling/config/BuildConfigurator$MutableBuildSettings;)Lelide/tooling/config/BuildConfigurator$BuildConfiguration;
	public static synthetic fun create$default (Ljava/nio/file/Path;Lelide/tooling/config/BuildConfigurator$MutableBuildSettings;ILjava/lang/Object;)Lelide/tooling/config/BuildConfigurator$BuildConfiguration;
}

public abstract interface class elide/tooling/config/BuildConfigurator : elide/tooling/config/ProjectConfigurator {
	public abstract fun contribute (Lelide/tooling/config/BuildConfigurator$ElideBuildState;Lelide/tooling/config/BuildConfigurator$BuildConfiguration;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun dependsOn ()Ljava/util/List;
}

public final class elide/tooling/config/BuildConfigurator$AcquisitionFinished : elide/tooling/config/BuildConfigurator$BuildEvent {
	public static final field INSTANCE Lelide/tooling/config/BuildConfigurator$AcquisitionFinished;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/config/BuildConfigurator$AcquisitionStart : elide/tooling/config/BuildConfigurator$BuildEvent {
	public static final field INSTANCE Lelide/tooling/config/BuildConfigurator$AcquisitionStart;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/config/BuildConfigurator$ArtifactDownloaded : elide/tooling/config/BuildConfigurator$TransferEvent {
	public static final field INSTANCE Lelide/tooling/config/BuildConfigurator$ArtifactDownloaded;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/config/BuildConfigurator$ArtifactDownloading : elide/tooling/config/BuildConfigurator$TransferEvent {
	public static final field INSTANCE Lelide/tooling/config/BuildConfigurator$ArtifactDownloading;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/config/BuildConfigurator$ArtifactResolved : elide/tooling/config/BuildConfigurator$TransferEvent {
	public static final field INSTANCE Lelide/tooling/config/BuildConfigurator$ArtifactResolved;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/config/BuildConfigurator$ArtifactResolving : elide/tooling/config/BuildConfigurator$TransferEvent {
	public static final field INSTANCE Lelide/tooling/config/BuildConfigurator$ArtifactResolving;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract interface class elide/tooling/config/BuildConfigurator$BuildConfiguration {
	public abstract fun getActionScope ()Lelide/exec/ActionScope;
	public abstract fun getProjectRoot ()Ljava/nio/file/Path;
	public abstract fun getResolvers ()Lelide/tooling/registry/ResolverRegistry;
	public abstract fun getSettings ()Lelide/tooling/config/BuildConfigurator$MutableBuildSettings;
	public abstract fun getTaskGraph ()Lcom/google/common/graph/ImmutableGraph$Builder;
}

public abstract interface class elide/tooling/config/BuildConfigurator$BuildConsoleController {
	public abstract fun onCurrentWork (Lelide/tooling/config/BuildConfigurator$BuildWork;)V
}

public abstract interface class elide/tooling/config/BuildConfigurator$BuildEvent : elide/tooling/config/BuildConfigurator$BuildNotify {
}

public abstract interface class elide/tooling/config/BuildConfigurator$BuildEventController {
	public abstract fun bind (Lelide/tooling/config/BuildConfigurator$BuildEvent;Lkotlin/jvm/functions/Function3;)V
	public abstract fun emit (Lelide/tooling/config/BuildConfigurator$BuildEvent;)V
	public abstract fun emit (Lelide/tooling/config/BuildConfigurator$BuildEvent;Ljava/lang/Object;)V
	public static synthetic fun emit$default (Lelide/tooling/config/BuildConfigurator$BuildEventController;Lelide/tooling/config/BuildConfigurator$BuildEvent;Ljava/lang/Object;ILjava/lang/Object;)V
}

public abstract interface class elide/tooling/config/BuildConfigurator$BuildEventListener {
	public fun onError (Lelide/tooling/config/BuildConfigurator$BuildEvent;)V
	public fun onEventBegin (Lelide/tooling/config/BuildConfigurator$BuildEvent;)V
	public fun onEventEnd (Lelide/tooling/config/BuildConfigurator$BuildEvent;)V
	public fun onProgress (Lelide/tooling/config/BuildConfigurator$BuildEvent;)V
	public fun onProgress (Lelide/tooling/config/BuildConfigurator$BuildTransfer;Lelide/tooling/config/BuildConfigurator$BuildEvent;)V
	public fun onProgress (Lelide/tooling/config/BuildConfigurator$BuildWorker;Lelide/tooling/config/BuildConfigurator$BuildEvent;)V
	public fun onTransferEnd (Lelide/tooling/config/BuildConfigurator$BuildTransfer;)V
	public fun onTransferError (Lelide/tooling/config/BuildConfigurator$BuildTransfer;Lelide/tooling/config/BuildConfigurator$BuildEvent;)V
	public fun onTransferStart (Lelide/tooling/config/BuildConfigurator$BuildTransfer;Lelide/tooling/config/BuildConfigurator$BuildEvent;)V
	public fun onWorkerEnd (Lelide/tooling/config/BuildConfigurator$BuildWorker;)V
	public fun onWorkerError (Lelide/tooling/config/BuildConfigurator$BuildWorker;Lelide/tooling/config/BuildConfigurator$BuildEvent;)V
	public fun onWorkerStart (Lelide/tooling/config/BuildConfigurator$BuildWorker;Ljava/lang/String;)V
}

public abstract interface class elide/tooling/config/BuildConfigurator$BuildNotify {
}

public abstract interface class elide/tooling/config/BuildConfigurator$BuildSettings {
	public abstract fun getBuildMode ()Lelide/tooling/BuildMode;
	public abstract fun getCaching ()Z
	public abstract fun getChecks ()Z
	public abstract fun getDebug ()Z
	public abstract fun getDependencies ()Z
	public abstract fun getDeploy ()Z
	public abstract fun getDocs ()Z
	public abstract fun getDry ()Z
	public abstract fun getPreserve ()Z
	public abstract fun getRelease ()Z
	public abstract fun getSources ()Z
	public abstract fun getVerbose ()Z
	public abstract fun toMutable ()Lelide/tooling/config/BuildConfigurator$MutableBuildSettings;
}

public abstract interface class elide/tooling/config/BuildConfigurator$BuildTransfer : elide/tooling/config/BuildConfigurator$BuildNotify {
}

public abstract interface class elide/tooling/config/BuildConfigurator$BuildWork : elide/tooling/config/BuildConfigurator$BuildEvent {
}

public abstract interface class elide/tooling/config/BuildConfigurator$BuildWorker : elide/tooling/config/BuildConfigurator$BuildNotify {
}

public abstract interface class elide/tooling/config/BuildConfigurator$ElideBuildState {
	public abstract fun getBeanContext ()Lio/micronaut/context/BeanContext;
	public abstract fun getConfig ()Lelide/tooling/config/BuildConfigurator$BuildConfiguration;
	public abstract fun getConsole ()Lelide/tooling/config/BuildConfigurator$BuildConsoleController;
	public abstract fun getEvents ()Lelide/tooling/config/BuildConfigurator$BuildEventController;
	public abstract fun getLayout ()Lelide/tooling/config/BuildConfigurator$ProjectDirectories;
	public abstract fun getManifest ()Lelide/tooling/project/manifest/ElidePackageManifest;
	public abstract fun getProject ()Lelide/tooling/project/ElideConfiguredProject;
	public abstract fun getResourcesPath ()Ljava/nio/file/Path;
}

public final class elide/tooling/config/BuildConfigurator$ImmutableBuildSettings : java/lang/Record, elide/tooling/config/BuildConfigurator$BuildSettings {
	public static final field Companion Lelide/tooling/config/BuildConfigurator$ImmutableBuildSettings$Companion;
	public fun <init> (ZZZZZZZZLelide/tooling/BuildMode;ZZZ)V
	public fun buildMode ()Lelide/tooling/BuildMode;
	public fun caching ()Z
	public fun checks ()Z
	public final fun component1 ()Z
	public final fun component10 ()Z
	public final fun component11 ()Z
	public final fun component12 ()Z
	public final fun component2 ()Z
	public final fun component3 ()Z
	public final fun component4 ()Z
	public final fun component5 ()Z
	public final fun component6 ()Z
	public final fun component7 ()Z
	public final fun component8 ()Z
	public final fun component9 ()Lelide/tooling/BuildMode;
	public final fun copy (ZZZZZZZZLelide/tooling/BuildMode;ZZZ)Lelide/tooling/config/BuildConfigurator$ImmutableBuildSettings;
	public static synthetic fun copy$default (Lelide/tooling/config/BuildConfigurator$ImmutableBuildSettings;ZZZZZZZZLelide/tooling/BuildMode;ZZZILjava/lang/Object;)Lelide/tooling/config/BuildConfigurator$ImmutableBuildSettings;
	public fun debug ()Z
	public fun dependencies ()Z
	public fun deploy ()Z
	public fun docs ()Z
	public fun dry ()Z
	public fun equals (Ljava/lang/Object;)Z
	public synthetic fun getBuildMode ()Lelide/tooling/BuildMode;
	public synthetic fun getCaching ()Z
	public synthetic fun getChecks ()Z
	public synthetic fun getDebug ()Z
	public synthetic fun getDependencies ()Z
	public synthetic fun getDeploy ()Z
	public synthetic fun getDocs ()Z
	public synthetic fun getDry ()Z
	public synthetic fun getPreserve ()Z
	public synthetic fun getRelease ()Z
	public synthetic fun getSources ()Z
	public synthetic fun getVerbose ()Z
	public fun hashCode ()I
	public fun preserve ()Z
	public fun release ()Z
	public fun sources ()Z
	public fun toMutable ()Lelide/tooling/config/BuildConfigurator$MutableBuildSettings;
	public fun toString ()Ljava/lang/String;
	public fun verbose ()Z
}

public final synthetic class elide/tooling/config/BuildConfigurator$ImmutableBuildSettings$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/config/BuildConfigurator$ImmutableBuildSettings$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/config/BuildConfigurator$ImmutableBuildSettings;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/config/BuildConfigurator$ImmutableBuildSettings;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/config/BuildConfigurator$ImmutableBuildSettings$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/config/BuildConfigurator$MetadataDownloaded : elide/tooling/config/BuildConfigurator$TransferEvent {
	public static final field INSTANCE Lelide/tooling/config/BuildConfigurator$MetadataDownloaded;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/config/BuildConfigurator$MetadataDownloading : elide/tooling/config/BuildConfigurator$TransferEvent {
	public static final field INSTANCE Lelide/tooling/config/BuildConfigurator$MetadataDownloading;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/config/BuildConfigurator$MutableBuildSettings : elide/tooling/config/BuildConfigurator$BuildSettings {
	public fun <init> ()V
	public fun <init> (ZZZZZZZZLelide/tooling/BuildMode;ZZZ)V
	public synthetic fun <init> (ZZZZZZZZLelide/tooling/BuildMode;ZZZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun build ()Lelide/tooling/config/BuildConfigurator$BuildSettings;
	public final fun component1 ()Z
	public final fun component10 ()Z
	public final fun component11 ()Z
	public final fun component12 ()Z
	public final fun component2 ()Z
	public final fun component3 ()Z
	public final fun component4 ()Z
	public final fun component5 ()Z
	public final fun component6 ()Z
	public final fun component7 ()Z
	public final fun component8 ()Z
	public final fun component9 ()Lelide/tooling/BuildMode;
	public final fun copy (ZZZZZZZZLelide/tooling/BuildMode;ZZZ)Lelide/tooling/config/BuildConfigurator$MutableBuildSettings;
	public static synthetic fun copy$default (Lelide/tooling/config/BuildConfigurator$MutableBuildSettings;ZZZZZZZZLelide/tooling/BuildMode;ZZZILjava/lang/Object;)Lelide/tooling/config/BuildConfigurator$MutableBuildSettings;
	public fun equals (Ljava/lang/Object;)Z
	public fun getBuildMode ()Lelide/tooling/BuildMode;
	public fun getCaching ()Z
	public fun getChecks ()Z
	public fun getDebug ()Z
	public fun getDependencies ()Z
	public fun getDeploy ()Z
	public fun getDocs ()Z
	public fun getDry ()Z
	public fun getPreserve ()Z
	public fun getRelease ()Z
	public fun getSources ()Z
	public fun getVerbose ()Z
	public fun hashCode ()I
	public fun setBuildMode (Lelide/tooling/BuildMode;)V
	public fun setCaching (Z)V
	public fun setChecks (Z)V
	public fun setDebug (Z)V
	public fun setDependencies (Z)V
	public fun setDeploy (Z)V
	public fun setDocs (Z)V
	public fun setDry (Z)V
	public fun setPreserve (Z)V
	public fun setRelease (Z)V
	public fun setSources (Z)V
	public fun setVerbose (Z)V
	public fun toMutable ()Lelide/tooling/config/BuildConfigurator$MutableBuildSettings;
	public fun toString ()Ljava/lang/String;
}

public abstract interface class elide/tooling/config/BuildConfigurator$ProjectDirectories {
	public static final field Companion Lelide/tooling/config/BuildConfigurator$ProjectDirectories$Companion;
	public static fun forProject (Lelide/tooling/project/ElideProject;)Lelide/tooling/config/BuildConfigurator$ProjectDirectories;
	public fun getArtifacts ()Ljava/nio/file/Path;
	public fun getCache ()Ljava/nio/file/Path;
	public fun getDependencies ()Ljava/nio/file/Path;
	public fun getDevRoot ()Ljava/nio/file/Path;
	public abstract fun getProjectRoot ()Ljava/nio/file/Path;
	public fun getWorkspaceRoot ()Ljava/nio/file/Path;
}

public final class elide/tooling/config/BuildConfigurator$ProjectDirectories$Companion {
	public final fun forProject (Lelide/tooling/project/ElideProject;)Lelide/tooling/config/BuildConfigurator$ProjectDirectories;
}

public abstract interface class elide/tooling/config/BuildConfigurator$RepositoryEvent : elide/tooling/config/BuildConfigurator$BuildEvent {
}

public final class elide/tooling/config/BuildConfigurator$ResolutionFailed : elide/tooling/config/BuildConfigurator$BuildEvent {
	public static final field INSTANCE Lelide/tooling/config/BuildConfigurator$ResolutionFailed;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/config/BuildConfigurator$ResolutionFinished : elide/tooling/config/BuildConfigurator$BuildEvent {
	public static final field INSTANCE Lelide/tooling/config/BuildConfigurator$ResolutionFinished;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/config/BuildConfigurator$ResolutionProgress : elide/tooling/config/BuildConfigurator$BuildEvent {
	public static final field INSTANCE Lelide/tooling/config/BuildConfigurator$ResolutionProgress;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/config/BuildConfigurator$ResolutionStart : elide/tooling/config/BuildConfigurator$BuildEvent {
	public static final field INSTANCE Lelide/tooling/config/BuildConfigurator$ResolutionStart;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/config/BuildConfigurator$TaskState : java/lang/Record {
	public fun <init> ()V
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/Long;Ljava/lang/Long;Lelide/tooling/config/BuildConfigurator$WorkStatus;Ljava/lang/Object;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/Long;Ljava/lang/Long;Lelide/tooling/config/BuildConfigurator$WorkStatus;Ljava/lang/Object;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/lang/Long;
	public final fun component4 ()Ljava/lang/Long;
	public final fun component5 ()Lelide/tooling/config/BuildConfigurator$WorkStatus;
	public final fun component6 ()Ljava/lang/Object;
	public final fun context ()Ljava/lang/Object;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;Ljava/lang/Long;Ljava/lang/Long;Lelide/tooling/config/BuildConfigurator$WorkStatus;Ljava/lang/Object;)Lelide/tooling/config/BuildConfigurator$TaskState;
	public static synthetic fun copy$default (Lelide/tooling/config/BuildConfigurator$TaskState;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Long;Ljava/lang/Long;Lelide/tooling/config/BuildConfigurator$WorkStatus;Ljava/lang/Object;ILjava/lang/Object;)Lelide/tooling/config/BuildConfigurator$TaskState;
	public final fun done ()Ljava/lang/Long;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun label ()Ljava/lang/String;
	public final fun name ()Ljava/lang/String;
	public final fun status ()Lelide/tooling/config/BuildConfigurator$WorkStatus;
	public fun toString ()Ljava/lang/String;
	public final fun total ()Ljava/lang/Long;
}

public final class elide/tooling/config/BuildConfigurator$TransferCorrupted : elide/tooling/config/BuildConfigurator$TransferEvent {
	public static final field INSTANCE Lelide/tooling/config/BuildConfigurator$TransferCorrupted;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract interface class elide/tooling/config/BuildConfigurator$TransferEvent : elide/tooling/config/BuildConfigurator$BuildEvent {
}

public final class elide/tooling/config/BuildConfigurator$TransferFailed : elide/tooling/config/BuildConfigurator$TransferEvent {
	public static final field INSTANCE Lelide/tooling/config/BuildConfigurator$TransferFailed;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/config/BuildConfigurator$TransferInitiated : elide/tooling/config/BuildConfigurator$TransferEvent {
	public static final field INSTANCE Lelide/tooling/config/BuildConfigurator$TransferInitiated;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/config/BuildConfigurator$TransferProgress : elide/tooling/config/BuildConfigurator$TransferEvent {
	public static final field INSTANCE Lelide/tooling/config/BuildConfigurator$TransferProgress;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/config/BuildConfigurator$TransferStart : elide/tooling/config/BuildConfigurator$TransferEvent {
	public static final field INSTANCE Lelide/tooling/config/BuildConfigurator$TransferStart;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/config/BuildConfigurator$TransferState : java/lang/Record {
	public fun <init> ()V
	public fun <init> (Ljava/lang/String;Ljava/lang/Long;Ljava/lang/Long;Ljava/lang/String;Ljava/lang/String;Lelide/tooling/config/BuildConfigurator$TransferStatus;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/Long;Ljava/lang/Long;Ljava/lang/String;Ljava/lang/String;Lelide/tooling/config/BuildConfigurator$TransferStatus;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun bytesDone ()Ljava/lang/Long;
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/Long;
	public final fun component3 ()Ljava/lang/Long;
	public final fun component4 ()Ljava/lang/String;
	public final fun component5 ()Ljava/lang/String;
	public final fun component6 ()Lelide/tooling/config/BuildConfigurator$TransferStatus;
	public final fun copy (Ljava/lang/String;Ljava/lang/Long;Ljava/lang/Long;Ljava/lang/String;Ljava/lang/String;Lelide/tooling/config/BuildConfigurator$TransferStatus;)Lelide/tooling/config/BuildConfigurator$TransferState;
	public static synthetic fun copy$default (Lelide/tooling/config/BuildConfigurator$TransferState;Ljava/lang/String;Ljava/lang/Long;Ljava/lang/Long;Ljava/lang/String;Ljava/lang/String;Lelide/tooling/config/BuildConfigurator$TransferStatus;ILjava/lang/Object;)Lelide/tooling/config/BuildConfigurator$TransferState;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun name ()Ljava/lang/String;
	public final fun repositoryId ()Ljava/lang/String;
	public final fun repositoryUrl ()Ljava/lang/String;
	public final fun size ()Ljava/lang/Long;
	public final fun status ()Lelide/tooling/config/BuildConfigurator$TransferStatus;
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/config/BuildConfigurator$TransferStatus : java/lang/Enum {
	public static final field CORRUPTED Lelide/tooling/config/BuildConfigurator$TransferStatus;
	public static final field FAILED Lelide/tooling/config/BuildConfigurator$TransferStatus;
	public static final field INITIATED Lelide/tooling/config/BuildConfigurator$TransferStatus;
	public static final field PROGRESSED Lelide/tooling/config/BuildConfigurator$TransferStatus;
	public static final field STARTED Lelide/tooling/config/BuildConfigurator$TransferStatus;
	public static final field SUCCEEDED Lelide/tooling/config/BuildConfigurator$TransferStatus;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public static fun valueOf (Ljava/lang/String;)Lelide/tooling/config/BuildConfigurator$TransferStatus;
	public static fun values ()[Lelide/tooling/config/BuildConfigurator$TransferStatus;
}

public final class elide/tooling/config/BuildConfigurator$TransferSucceeded : elide/tooling/config/BuildConfigurator$TransferEvent {
	public static final field INSTANCE Lelide/tooling/config/BuildConfigurator$TransferSucceeded;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/config/BuildConfigurator$WorkStatus : java/lang/Enum {
	public static final field FAILED Lelide/tooling/config/BuildConfigurator$WorkStatus;
	public static final field INITIATED Lelide/tooling/config/BuildConfigurator$WorkStatus;
	public static final field PROGRESSED Lelide/tooling/config/BuildConfigurator$WorkStatus;
	public static final field STARTED Lelide/tooling/config/BuildConfigurator$WorkStatus;
	public static final field SUCCEEDED Lelide/tooling/config/BuildConfigurator$WorkStatus;
	public static final field UNKNOWN Lelide/tooling/config/BuildConfigurator$WorkStatus;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public static fun valueOf (Ljava/lang/String;)Lelide/tooling/config/BuildConfigurator$WorkStatus;
	public static fun values ()[Lelide/tooling/config/BuildConfigurator$WorkStatus;
}

public final class elide/tooling/config/BuildConfigurators {
	public static final field INSTANCE Lelide/tooling/config/BuildConfigurators;
	public static final fun collect ()Lkotlin/sequences/Sequence;
	public static final fun contribute (Lio/micronaut/context/BeanContext;Lelide/tooling/project/ElideConfiguredProject;Lelide/tooling/config/BuildConfigurator$BuildConfiguration;Lelide/tooling/config/BuildConfigurator;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun contribute (Lio/micronaut/context/BeanContext;Lelide/tooling/project/ElideConfiguredProject;Lkotlin/sequences/Sequence;Lelide/tooling/config/BuildConfigurator$BuildConfiguration;Lelide/tooling/config/BuildConfigurator;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun contribute$default (Lio/micronaut/context/BeanContext;Lelide/tooling/project/ElideConfiguredProject;Lelide/tooling/config/BuildConfigurator$BuildConfiguration;Lelide/tooling/config/BuildConfigurator;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static synthetic fun contribute$default (Lio/micronaut/context/BeanContext;Lelide/tooling/project/ElideConfiguredProject;Lkotlin/sequences/Sequence;Lelide/tooling/config/BuildConfigurator$BuildConfiguration;Lelide/tooling/config/BuildConfigurator;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
}

public abstract interface class elide/tooling/config/ProjectConfigurator {
}

public final class elide/tooling/config/TestConfiguration {
	public static final field INSTANCE Lelide/tooling/config/TestConfiguration;
	public static final fun configureTests (Lelide/tooling/project/ElideProject;Lio/micronaut/context/BeanContext;Lelide/runtime/intrinsics/testing/TestingRegistrar;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun configureTests (Lelide/tooling/project/ElideProject;Lio/micronaut/context/BeanContext;Lelide/tooling/config/TestConfigurator$TestConfiguration;Lelide/runtime/intrinsics/testing/TestingRegistrar;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun configureTests$default (Lelide/tooling/project/ElideProject;Lio/micronaut/context/BeanContext;Lelide/runtime/intrinsics/testing/TestingRegistrar;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static final fun create ()Lelide/tooling/config/TestConfigurator$TestConfiguration;
	public static final fun create (Ljava/nio/file/Path;Lelide/exec/ActionScope;Lelide/tooling/registry/ResolverRegistry;Lelide/tooling/config/TestConfigurator$MutableTestSettings;)Lelide/tooling/config/TestConfigurator$TestConfiguration;
	public static synthetic fun create$default (Ljava/nio/file/Path;Lelide/exec/ActionScope;Lelide/tooling/registry/ResolverRegistry;Lelide/tooling/config/TestConfigurator$MutableTestSettings;ILjava/lang/Object;)Lelide/tooling/config/TestConfigurator$TestConfiguration;
}

public abstract interface class elide/tooling/config/TestConfigurator : elide/tooling/config/ProjectConfigurator {
	public abstract fun contribute (Lelide/tooling/config/TestConfigurator$ElideTestState;Lelide/tooling/config/TestConfigurator$TestConfiguration;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class elide/tooling/config/TestConfigurator$ElideTestState {
	public abstract fun getBeanContext ()Lio/micronaut/context/BeanContext;
	public abstract fun getEvents ()Lelide/tooling/config/TestConfigurator$TestEventController;
	public abstract fun getLayout ()Lelide/tooling/config/BuildConfigurator$ProjectDirectories;
	public abstract fun getManifest ()Lelide/tooling/project/manifest/ElidePackageManifest;
	public abstract fun getProject ()Lelide/tooling/project/ElideConfiguredProject;
	public abstract fun getRegistrar ()Lelide/runtime/intrinsics/testing/TestingRegistrar;
	public abstract fun getResourcesPath ()Ljava/nio/file/Path;
}

public final class elide/tooling/config/TestConfigurator$ImmutableTestSettings : java/lang/Record, elide/tooling/config/TestConfigurator$TestSettings {
	public fun <init> ()V
	public fun <init> (ZZ)V
	public synthetic fun <init> (ZZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Z
	public final fun component2 ()Z
	public final fun copy (ZZ)Lelide/tooling/config/TestConfigurator$ImmutableTestSettings;
	public static synthetic fun copy$default (Lelide/tooling/config/TestConfigurator$ImmutableTestSettings;ZZILjava/lang/Object;)Lelide/tooling/config/TestConfigurator$ImmutableTestSettings;
	public fun enableCoverage ()Z
	public fun enableDiscovery ()Z
	public fun equals (Ljava/lang/Object;)Z
	public synthetic fun getEnableCoverage ()Z
	public synthetic fun getEnableDiscovery ()Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/config/TestConfigurator$MutableTestSettings : elide/tooling/config/TestConfigurator$TestSettings {
	public fun <init> ()V
	public fun <init> (ZZ)V
	public synthetic fun <init> (ZZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Z
	public final fun component2 ()Z
	public final fun copy (ZZ)Lelide/tooling/config/TestConfigurator$MutableTestSettings;
	public static synthetic fun copy$default (Lelide/tooling/config/TestConfigurator$MutableTestSettings;ZZILjava/lang/Object;)Lelide/tooling/config/TestConfigurator$MutableTestSettings;
	public fun equals (Ljava/lang/Object;)Z
	public fun getEnableCoverage ()Z
	public fun getEnableDiscovery ()Z
	public fun hashCode ()I
	public fun setEnableCoverage (Z)V
	public fun setEnableDiscovery (Z)V
	public fun toString ()Ljava/lang/String;
}

public abstract interface class elide/tooling/config/TestConfigurator$TestConfiguration {
	public abstract fun getActionScope ()Lelide/exec/ActionScope;
	public abstract fun getProjectRoot ()Ljava/nio/file/Path;
	public abstract fun getResolvers ()Lelide/tooling/registry/ResolverRegistry;
	public abstract fun getSettings ()Lelide/tooling/config/TestConfigurator$MutableTestSettings;
}

public abstract interface class elide/tooling/config/TestConfigurator$TestEvent : elide/tooling/config/TestConfigurator$TestNotify {
}

public abstract interface class elide/tooling/config/TestConfigurator$TestEventController {
	public abstract fun emit (Lelide/tooling/config/TestConfigurator$TestNotify;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class elide/tooling/config/TestConfigurator$TestEventController$Binder {
	public abstract fun bind (Lelide/tooling/config/TestConfigurator$TestNotify;Ljava/lang/Class;Lkotlin/jvm/functions/Function3;)Lelide/tooling/config/TestConfigurator$TestEventController$Binder;
}

public final class elide/tooling/config/TestConfigurator$TestEventController$Inert : elide/tooling/config/TestConfigurator$TestEventController {
	public static final field INSTANCE Lelide/tooling/config/TestConfigurator$TestEventController$Inert;
	public fun emit (Lelide/tooling/config/TestConfigurator$TestNotify;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/config/TestConfigurator$TestFail : elide/tooling/config/TestConfigurator$TestStatus {
	public static final field INSTANCE Lelide/tooling/config/TestConfigurator$TestFail;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract interface class elide/tooling/config/TestConfigurator$TestNotify {
}

public final class elide/tooling/config/TestConfigurator$TestPass : elide/tooling/config/TestConfigurator$TestStatus {
	public static final field INSTANCE Lelide/tooling/config/TestConfigurator$TestPass;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract interface class elide/tooling/config/TestConfigurator$TestSettings {
	public abstract fun getEnableCoverage ()Z
	public abstract fun getEnableDiscovery ()Z
}

public final class elide/tooling/config/TestConfigurator$TestSkip : elide/tooling/config/TestConfigurator$TestStatus {
	public static final field INSTANCE Lelide/tooling/config/TestConfigurator$TestSkip;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract interface class elide/tooling/config/TestConfigurator$TestStatus : elide/tooling/config/TestConfigurator$TestNotify {
}

public abstract interface class elide/tooling/config/TestConfigurator$TestWork : elide/tooling/config/TestConfigurator$TestEvent {
}

public abstract interface class elide/tooling/config/TestConfigurator$TestWorker : elide/tooling/config/TestConfigurator$TestNotify {
}

public final class elide/tooling/config/TestConfigurators {
	public static final field INSTANCE Lelide/tooling/config/TestConfigurators;
	public static final fun collect ()Lkotlin/sequences/Sequence;
	public static final fun contribute (Lio/micronaut/context/BeanContext;Lelide/tooling/project/ElideConfiguredProject;Lelide/runtime/intrinsics/testing/TestingRegistrar;Lelide/tooling/config/TestConfigurator$TestConfiguration;Lelide/tooling/config/TestConfigurator;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun contribute (Lio/micronaut/context/BeanContext;Lelide/tooling/project/ElideConfiguredProject;Lelide/runtime/intrinsics/testing/TestingRegistrar;Lkotlin/sequences/Sequence;Lelide/tooling/config/TestConfigurator$TestConfiguration;Lelide/tooling/config/TestConfigurator;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun contribute$default (Lio/micronaut/context/BeanContext;Lelide/tooling/project/ElideConfiguredProject;Lelide/runtime/intrinsics/testing/TestingRegistrar;Lelide/tooling/config/TestConfigurator$TestConfiguration;Lelide/tooling/config/TestConfigurator;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static synthetic fun contribute$default (Lio/micronaut/context/BeanContext;Lelide/tooling/project/ElideConfiguredProject;Lelide/runtime/intrinsics/testing/TestingRegistrar;Lkotlin/sequences/Sequence;Lelide/tooling/config/TestConfigurator$TestConfiguration;Lelide/tooling/config/TestConfigurator;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
}

public abstract interface class elide/tooling/containers/ContainerComponent {
	public static final field Companion Lelide/tooling/containers/ContainerComponent$Companion;
	public abstract fun asString ()Ljava/lang/String;
}

public final class elide/tooling/containers/ContainerComponent$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract interface class elide/tooling/containers/ContainerCoordinate : elide/tooling/containers/ContainerComponent {
	public static final field Companion Lelide/tooling/containers/ContainerCoordinate$Companion;
	public abstract fun getHash ()Lelide/tooling/containers/ContainerHash;
	public abstract fun getName ()Ljava/lang/String;
	public abstract fun getRegistry ()Lelide/tooling/containers/ContainerRegistry;
	public abstract fun getTag ()Lelide/tooling/containers/ContainerTag;
	public static fun of (Ljava/lang/String;)Lelide/tooling/containers/ContainerCoordinate;
	public static fun of (Ljava/lang/String;Lelide/tooling/containers/ContainerRegistry;)Lelide/tooling/containers/ContainerCoordinate;
	public static fun of (Ljava/lang/String;Lelide/tooling/containers/ContainerRegistry;Lelide/tooling/containers/ContainerTag;)Lelide/tooling/containers/ContainerCoordinate;
	public static fun parse (Ljava/lang/String;)Lelide/tooling/containers/ContainerCoordinate;
	public static fun parseSafe-IoAF18A (Ljava/lang/String;)Ljava/lang/Object;
}

public final class elide/tooling/containers/ContainerCoordinate$Companion {
	public final fun of (Ljava/lang/String;)Lelide/tooling/containers/ContainerCoordinate;
	public final fun of (Ljava/lang/String;Lelide/tooling/containers/ContainerRegistry;)Lelide/tooling/containers/ContainerCoordinate;
	public final fun of (Ljava/lang/String;Lelide/tooling/containers/ContainerRegistry;Lelide/tooling/containers/ContainerTag;)Lelide/tooling/containers/ContainerCoordinate;
	public final fun parse (Ljava/lang/String;)Lelide/tooling/containers/ContainerCoordinate;
	public final fun parseSafe-IoAF18A (Ljava/lang/String;)Ljava/lang/Object;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/containers/ContainerCoordinate$CoordinateInfo : java/lang/Record, elide/tooling/containers/ContainerCoordinate {
	public static final field Companion Lelide/tooling/containers/ContainerCoordinate$CoordinateInfo$Companion;
	public fun asString ()Ljava/lang/String;
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Lelide/tooling/containers/ContainerRegistry;
	public final fun component3 ()Lelide/tooling/containers/ContainerTag;
	public final fun component4 ()Lelide/tooling/containers/ContainerHash;
	public fun equals (Ljava/lang/Object;)Z
	public synthetic fun getHash ()Lelide/tooling/containers/ContainerHash;
	public synthetic fun getName ()Ljava/lang/String;
	public synthetic fun getRegistry ()Lelide/tooling/containers/ContainerRegistry;
	public synthetic fun getTag ()Lelide/tooling/containers/ContainerTag;
	public fun hash ()Lelide/tooling/containers/ContainerHash;
	public fun hashCode ()I
	public fun name ()Ljava/lang/String;
	public fun registry ()Lelide/tooling/containers/ContainerRegistry;
	public fun tag ()Lelide/tooling/containers/ContainerTag;
	public fun toString ()Ljava/lang/String;
}

public final synthetic class elide/tooling/containers/ContainerCoordinate$CoordinateInfo$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/containers/ContainerCoordinate$CoordinateInfo$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/containers/ContainerCoordinate$CoordinateInfo;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/containers/ContainerCoordinate$CoordinateInfo;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/containers/ContainerCoordinate$CoordinateInfo$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract interface class elide/tooling/containers/ContainerHash : elide/tooling/containers/ContainerComponent {
	public static final field Companion Lelide/tooling/containers/ContainerHash$Companion;
	public fun asString ()Ljava/lang/String;
	public abstract fun getHashType ()Lelide/tooling/containers/ContainerHashType;
	public abstract fun getHashValue ()Ljava/lang/String;
	public static fun none ()Lelide/tooling/containers/ContainerHash;
	public static fun of (Lelide/tooling/containers/ContainerHashType;Ljava/lang/String;)Lelide/tooling/containers/ContainerHash;
}

public final class elide/tooling/containers/ContainerHash$Companion {
	public final fun none ()Lelide/tooling/containers/ContainerHash;
	public final fun of (Lelide/tooling/containers/ContainerHashType;Ljava/lang/String;)Lelide/tooling/containers/ContainerHash;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/containers/ContainerHash$HashPair : elide/tooling/containers/ContainerHash {
	public static final field Companion Lelide/tooling/containers/ContainerHash$HashPair$Companion;
	public static final synthetic fun box-impl (Lkotlin/Pair;)Lelide/tooling/containers/ContainerHash$HashPair;
	public fun equals (Ljava/lang/Object;)Z
	public static fun equals-impl (Lkotlin/Pair;Ljava/lang/Object;)Z
	public static final fun equals-impl0 (Lkotlin/Pair;Lkotlin/Pair;)Z
	public fun getHashType ()Lelide/tooling/containers/ContainerHashType;
	public static fun getHashType-impl (Lkotlin/Pair;)Lelide/tooling/containers/ContainerHashType;
	public fun getHashValue ()Ljava/lang/String;
	public static fun getHashValue-impl (Lkotlin/Pair;)Ljava/lang/String;
	public fun hashCode ()I
	public static fun hashCode-impl (Lkotlin/Pair;)I
	public fun toString ()Ljava/lang/String;
	public static fun toString-impl (Lkotlin/Pair;)Ljava/lang/String;
	public final synthetic fun unbox-impl ()Lkotlin/Pair;
}

public final synthetic class elide/tooling/containers/ContainerHash$HashPair$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/containers/ContainerHash$HashPair$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun deserialize-6aVz-CE (Lkotlinx/serialization/encoding/Decoder;)Lkotlin/Pair;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public final fun serialize-uTjUWKg (Lkotlinx/serialization/encoding/Encoder;Lkotlin/Pair;)V
}

public final class elide/tooling/containers/ContainerHash$HashPair$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/containers/ContainerHash$None : elide/tooling/containers/ContainerHash {
	public static final field INSTANCE Lelide/tooling/containers/ContainerHash$None;
	public fun asString ()Ljava/lang/String;
	public fun equals (Ljava/lang/Object;)Z
	public fun getHashType ()Lelide/tooling/containers/ContainerHashType;
	public fun getHashValue ()Ljava/lang/String;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/containers/ContainerHashType : java/lang/Enum, elide/core/api/Symbolic, elide/tooling/containers/ContainerComponent {
	public static final field Companion Lelide/tooling/containers/ContainerHashType$Companion;
	public static final field SHA256 Lelide/tooling/containers/ContainerHashType;
	public fun asString ()Ljava/lang/String;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public synthetic fun getSymbol ()Ljava/lang/Object;
	public fun getSymbol ()Ljava/lang/String;
	public static fun valueOf (Ljava/lang/String;)Lelide/tooling/containers/ContainerHashType;
	public static fun values ()[Lelide/tooling/containers/ContainerHashType;
}

public final class elide/tooling/containers/ContainerHashType$Companion : elide/core/api/Symbolic$SealedResolver {
	public synthetic fun resolve (Ljava/lang/Object;)Lelide/core/api/Symbolic;
	public fun resolve (Ljava/lang/String;)Lelide/tooling/containers/ContainerHashType;
}

public abstract interface class elide/tooling/containers/ContainerRegistry : elide/tooling/containers/ContainerComponent {
	public static final field Companion Lelide/tooling/containers/ContainerRegistry$Companion;
	public fun asString ()Ljava/lang/String;
	public abstract fun getPrefix ()Ljava/lang/String;
	public static fun none (Ljava/lang/String;)Lelide/tooling/containers/ContainerRegistry;
	public static fun of (Ljava/lang/String;)Lelide/tooling/containers/ContainerRegistry;
}

public final class elide/tooling/containers/ContainerRegistry$Companion {
	public final fun none (Ljava/lang/String;)Lelide/tooling/containers/ContainerRegistry;
	public final fun of (Ljava/lang/String;)Lelide/tooling/containers/ContainerRegistry;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/containers/ContainerRegistry$ContainerRegistryPrefix : elide/tooling/containers/ContainerRegistry {
	public static final field Companion Lelide/tooling/containers/ContainerRegistry$ContainerRegistryPrefix$Companion;
	public static final synthetic fun box-impl (Ljava/lang/String;)Lelide/tooling/containers/ContainerRegistry$ContainerRegistryPrefix;
	public fun equals (Ljava/lang/Object;)Z
	public static fun equals-impl (Ljava/lang/String;Ljava/lang/Object;)Z
	public static final fun equals-impl0 (Ljava/lang/String;Ljava/lang/String;)Z
	public fun getPrefix ()Ljava/lang/String;
	public fun hashCode ()I
	public static fun hashCode-impl (Ljava/lang/String;)I
	public fun toString ()Ljava/lang/String;
	public static fun toString-impl (Ljava/lang/String;)Ljava/lang/String;
	public final synthetic fun unbox-impl ()Ljava/lang/String;
}

public final synthetic class elide/tooling/containers/ContainerRegistry$ContainerRegistryPrefix$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/containers/ContainerRegistry$ContainerRegistryPrefix$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun deserialize-Y1vMqfg (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/String;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public final fun serialize-eBneNr0 (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/String;)V
}

public final class elide/tooling/containers/ContainerRegistry$ContainerRegistryPrefix$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/containers/ContainerRegistry$None : elide/tooling/containers/ContainerRegistry {
	public static final field INSTANCE Lelide/tooling/containers/ContainerRegistry$None;
	public fun asString ()Ljava/lang/String;
	public fun equals (Ljava/lang/Object;)Z
	public fun getPrefix ()Ljava/lang/String;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toString ()Ljava/lang/String;
}

public abstract interface class elide/tooling/containers/ContainerTag : elide/tooling/containers/ContainerComponent {
	public static final field Companion Lelide/tooling/containers/ContainerTag$Companion;
	public static fun none ()Lelide/tooling/containers/ContainerTag;
	public static fun of (Ljava/lang/String;)Lelide/tooling/containers/ContainerTag;
}

public final class elide/tooling/containers/ContainerTag$Companion {
	public final fun none ()Lelide/tooling/containers/ContainerTag;
	public final fun of (Ljava/lang/String;)Lelide/tooling/containers/ContainerTag;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/containers/ContainerTag$None : elide/tooling/containers/ContainerTag {
	public static final field INSTANCE Lelide/tooling/containers/ContainerTag$None;
	public fun asString ()Ljava/lang/String;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/containers/ContainerTag$Tag : elide/tooling/containers/ContainerTag {
	public static final field Companion Lelide/tooling/containers/ContainerTag$Tag$Companion;
	public fun asString ()Ljava/lang/String;
	public static fun asString-impl (Ljava/lang/String;)Ljava/lang/String;
	public static final synthetic fun box-impl (Ljava/lang/String;)Lelide/tooling/containers/ContainerTag$Tag;
	public fun equals (Ljava/lang/Object;)Z
	public static fun equals-impl (Ljava/lang/String;Ljava/lang/Object;)Z
	public static final fun equals-impl0 (Ljava/lang/String;Ljava/lang/String;)Z
	public final fun getValue ()Ljava/lang/String;
	public fun hashCode ()I
	public static fun hashCode-impl (Ljava/lang/String;)I
	public fun toString ()Ljava/lang/String;
	public static fun toString-impl (Ljava/lang/String;)Ljava/lang/String;
	public final synthetic fun unbox-impl ()Ljava/lang/String;
}

public final synthetic class elide/tooling/containers/ContainerTag$Tag$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/containers/ContainerTag$Tag$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun deserialize-ZToRGGQ (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/String;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public final fun serialize-yepf2Ic (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/String;)V
}

public final class elide/tooling/containers/ContainerTag$Tag$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/containers/DefaultBaseImages {
	public static final field DISTROLESS_JVM_21 Ljava/lang/String;
	public static final field INSTANCE Lelide/tooling/containers/DefaultBaseImages;
	public static final field JVM Ljava/lang/String;
	public static final field NATIVE Ljava/lang/String;
	public static final field ORACLE_JVM Ljava/lang/String;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/containers/JibDriver : elide/tooling/AbstractTool {
	public static final field Companion Lelide/tooling/containers/JibDriver$Companion;
	public fun <init> (Lelide/tooling/Arguments;Lelide/tooling/Environment;Lelide/tooling/containers/JibDriver$JibInputs;Lelide/tooling/containers/JibDriver$JibOutputs;Lkotlin/jvm/functions/Function1;Ljava/nio/file/Path;)V
	public synthetic fun <init> (Lelide/tooling/Arguments;Lelide/tooling/Environment;Lelide/tooling/containers/JibDriver$JibInputs;Lelide/tooling/containers/JibDriver$JibOutputs;Lkotlin/jvm/functions/Function1;Ljava/nio/file/Path;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public static final fun baseContainer (Lelide/tooling/containers/ContainerCoordinate;)Lelide/tooling/containers/JibDriver$JibInputs;
	public static final fun dockerOutput (Lelide/tooling/containers/ContainerCoordinate;)Lelide/tooling/containers/JibDriver$JibOutputs;
	public final fun getInputs ()Lelide/tooling/containers/JibDriver$JibInputs;
	public final fun getOutputs ()Lelide/tooling/containers/JibDriver$JibOutputs;
	public fun invoke (Lelide/tooling/AbstractTool$EmbeddedToolState;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun jarInput (Ljava/nio/file/Path;)Lelide/tooling/containers/JibDriver$JibInputs;
	public static final fun jibInputs (Ljava/util/Collection;)Lelide/tooling/containers/JibDriver$JibInputs;
	public static final fun jibInputs ([Lelide/tooling/containers/JibDriver$JibInputs;)Lelide/tooling/containers/JibDriver$JibInputs;
	public static final fun tarballOutput (Ljava/nio/file/Path;)Lelide/tooling/containers/JibDriver$JibOutputs;
	public static final fun targetContainer (Lelide/tooling/containers/ContainerCoordinate;)Lelide/tooling/containers/JibDriver$JibInputs;
}

public final class elide/tooling/containers/JibDriver$Companion {
	public final fun baseContainer (Lelide/tooling/containers/ContainerCoordinate;)Lelide/tooling/containers/JibDriver$JibInputs;
	public final fun dockerOutput (Lelide/tooling/containers/ContainerCoordinate;)Lelide/tooling/containers/JibDriver$JibOutputs;
	public final fun jarInput (Ljava/nio/file/Path;)Lelide/tooling/containers/JibDriver$JibInputs;
	public final fun jibInputs (Ljava/util/Collection;)Lelide/tooling/containers/JibDriver$JibInputs;
	public final fun jibInputs ([Lelide/tooling/containers/JibDriver$JibInputs;)Lelide/tooling/containers/JibDriver$JibInputs;
	public final fun tarballOutput (Ljava/nio/file/Path;)Lelide/tooling/containers/JibDriver$JibOutputs;
	public final fun targetContainer (Lelide/tooling/containers/ContainerCoordinate;)Lelide/tooling/containers/JibDriver$JibInputs;
}

public abstract interface class elide/tooling/containers/JibDriver$JibConfigurator {
	public abstract fun getArgs ()Lelide/tooling/MutableArguments;
}

public abstract interface class elide/tooling/containers/JibDriver$JibInputs : elide/tooling/Inputs$Files {
}

public final class elide/tooling/containers/JibDriver$JibInputs$BaseContainer : elide/tooling/Inputs$None, elide/tooling/containers/JibDriver$JibInputs {
	public static final field Companion Lelide/tooling/containers/JibDriver$JibInputs$BaseContainer$Companion;
	public final fun component1 ()Lelide/tooling/containers/ContainerCoordinate;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getCoordinate ()Lelide/tooling/containers/ContainerCoordinate;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final synthetic class elide/tooling/containers/JibDriver$JibInputs$BaseContainer$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/containers/JibDriver$JibInputs$BaseContainer$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/containers/JibDriver$JibInputs$BaseContainer;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/containers/JibDriver$JibInputs$BaseContainer;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/containers/JibDriver$JibInputs$BaseContainer$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/containers/JibDriver$JibInputs$Compound : elide/tooling/Inputs$Compound, elide/tooling/containers/JibDriver$JibInputs {
	public static final field Companion Lelide/tooling/containers/JibDriver$JibInputs$Compound$Companion;
	public fun <init> ()V
	public final fun component1 ()Ljava/util/Collection;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getConstituents ()Ljava/util/Collection;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final synthetic class elide/tooling/containers/JibDriver$JibInputs$Compound$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/containers/JibDriver$JibInputs$Compound$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/containers/JibDriver$JibInputs$Compound;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/containers/JibDriver$JibInputs$Compound;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/containers/JibDriver$JibInputs$Compound$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/containers/JibDriver$JibInputs$Jar : elide/tooling/Inputs$Files, elide/tooling/containers/JibDriver$JibInputs {
	public static final field Companion Lelide/tooling/containers/JibDriver$JibInputs$Jar$Companion;
	public final fun component1 ()Ljava/nio/file/Path;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getPath ()Ljava/nio/file/Path;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final synthetic class elide/tooling/containers/JibDriver$JibInputs$Jar$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/containers/JibDriver$JibInputs$Jar$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/containers/JibDriver$JibInputs$Jar;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/containers/JibDriver$JibInputs$Jar;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/containers/JibDriver$JibInputs$Jar$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/containers/JibDriver$JibInputs$NoInputs : elide/tooling/Inputs$None, elide/tooling/containers/JibDriver$JibInputs {
	public static final field INSTANCE Lelide/tooling/containers/JibDriver$JibInputs$NoInputs;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/containers/JibDriver$JibInputs$TargetContainer : elide/tooling/Inputs$None, elide/tooling/containers/JibDriver$JibInputs {
	public static final field Companion Lelide/tooling/containers/JibDriver$JibInputs$TargetContainer$Companion;
	public final fun component1 ()Lelide/tooling/containers/ContainerCoordinate;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getCoordinate ()Lelide/tooling/containers/ContainerCoordinate;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final synthetic class elide/tooling/containers/JibDriver$JibInputs$TargetContainer$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/containers/JibDriver$JibInputs$TargetContainer$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/containers/JibDriver$JibInputs$TargetContainer;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/containers/JibDriver$JibInputs$TargetContainer;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/containers/JibDriver$JibInputs$TargetContainer$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract interface class elide/tooling/containers/JibDriver$JibOutputs {
	public static final field Companion Lelide/tooling/containers/JibDriver$JibOutputs$Companion;
	public abstract fun flatten ()Lelide/tooling/Outputs;
}

public final class elide/tooling/containers/JibDriver$JibOutputs$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/containers/JibDriver$JibOutputs$NoOutputs : elide/tooling/Outputs$None, elide/tooling/containers/JibDriver$JibOutputs {
	public static final field INSTANCE Lelide/tooling/containers/JibDriver$JibOutputs$NoOutputs;
	public fun equals (Ljava/lang/Object;)Z
	public fun flatten ()Lelide/tooling/Outputs;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/containers/JibDriver$JibOutputs$OutputToDocker : elide/tooling/Outputs$None, elide/tooling/containers/JibDriver$JibOutputs {
	public static final field Companion Lelide/tooling/containers/JibDriver$JibOutputs$OutputToDocker$Companion;
	public final fun component1 ()Lelide/tooling/containers/ContainerCoordinate;
	public fun equals (Ljava/lang/Object;)Z
	public fun flatten ()Lelide/tooling/Outputs;
	public final fun getTag ()Lelide/tooling/containers/ContainerCoordinate;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final synthetic class elide/tooling/containers/JibDriver$JibOutputs$OutputToDocker$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/containers/JibDriver$JibOutputs$OutputToDocker$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/containers/JibDriver$JibOutputs$OutputToDocker;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/containers/JibDriver$JibOutputs$OutputToDocker;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/containers/JibDriver$JibOutputs$OutputToDocker$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/containers/JibDriver$JibOutputs$Tarball : elide/tooling/Outputs$Disk$File, elide/tooling/containers/JibDriver$JibOutputs {
	public static final field Companion Lelide/tooling/containers/JibDriver$JibOutputs$Tarball$Companion;
	public final fun component1 ()Ljava/nio/file/Path;
	public fun equals (Ljava/lang/Object;)Z
	public fun flatten ()Lelide/tooling/Outputs;
	public final fun getPath ()Ljava/nio/file/Path;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final synthetic class elide/tooling/containers/JibDriver$JibOutputs$Tarball$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/containers/JibDriver$JibOutputs$Tarball$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/containers/JibDriver$JibOutputs$Tarball;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/containers/JibDriver$JibOutputs$Tarball;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/containers/JibDriver$JibOutputs$Tarball$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/containers/JibDriverKt {
	public static final field JIB Ljava/lang/String;
	public static final field JIB_DESCRIPTION Ljava/lang/String;
	public static final field JIB_VERSION Ljava/lang/String;
	public static final fun getJib ()Lelide/tooling/Tool$CommandLineTool;
}

public abstract interface class elide/tooling/containers/MutableContainerCoordinate : elide/tooling/containers/ContainerCoordinate {
	public abstract fun getHash ()Lelide/tooling/containers/ContainerHash;
	public abstract fun getName ()Ljava/lang/String;
	public abstract fun getRegistry ()Lelide/tooling/containers/ContainerRegistry;
	public abstract fun getTag ()Lelide/tooling/containers/ContainerTag;
	public abstract fun setHash (Lelide/tooling/containers/ContainerHash;)V
	public abstract fun setName (Ljava/lang/String;)V
	public abstract fun setRegistry (Lelide/tooling/containers/ContainerRegistry;)V
	public abstract fun setTag (Lelide/tooling/containers/ContainerTag;)V
}

public final class elide/tooling/coverage/CoverageJsonReport {
	public static final field Companion Lelide/tooling/coverage/CoverageJsonReport$Companion;
	public fun <init> (Ljava/util/List;)V
	public final fun component1 ()Ljava/util/List;
	public final fun copy (Ljava/util/List;)Lelide/tooling/coverage/CoverageJsonReport;
	public static synthetic fun copy$default (Lelide/tooling/coverage/CoverageJsonReport;Ljava/util/List;ILjava/lang/Object;)Lelide/tooling/coverage/CoverageJsonReport;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getEntries ()Ljava/util/List;
	public fun hashCode ()I
	public static final fun parse (Ljava/io/InputStream;)Lelide/tooling/coverage/CoverageJsonReport;
	public static final fun parse (Ljava/lang/String;)Lelide/tooling/coverage/CoverageJsonReport;
	public final fun toJson ()Ljava/lang/String;
	public final fun toJson (Ljava/io/OutputStream;)V
	public fun toString ()Ljava/lang/String;
}

public final synthetic class elide/tooling/coverage/CoverageJsonReport$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/coverage/CoverageJsonReport$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/coverage/CoverageJsonReport;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/coverage/CoverageJsonReport;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/coverage/CoverageJsonReport$Companion {
	public final fun parse (Ljava/io/InputStream;)Lelide/tooling/coverage/CoverageJsonReport;
	public final fun parse (Ljava/lang/String;)Lelide/tooling/coverage/CoverageJsonReport;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/coverage/CoverageJsonReport$CoverageInfoStanza {
	public static final field Companion Lelide/tooling/coverage/CoverageJsonReport$CoverageInfoStanza$Companion;
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/util/List;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/util/List;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;Ljava/util/List;)Lelide/tooling/coverage/CoverageJsonReport$CoverageInfoStanza;
	public static synthetic fun copy$default (Lelide/tooling/coverage/CoverageJsonReport$CoverageInfoStanza;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;ILjava/lang/Object;)Lelide/tooling/coverage/CoverageJsonReport$CoverageInfoStanza;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getName ()Ljava/lang/String;
	public final fun getPath ()Ljava/lang/String;
	public final fun getRoots ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final synthetic class elide/tooling/coverage/CoverageJsonReport$CoverageInfoStanza$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/coverage/CoverageJsonReport$CoverageInfoStanza$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/coverage/CoverageJsonReport$CoverageInfoStanza;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/coverage/CoverageJsonReport$CoverageInfoStanza;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/coverage/CoverageJsonReport$CoverageInfoStanza$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/coverage/CoverageJsonReport$CoverageRoot {
	public static final field Companion Lelide/tooling/coverage/CoverageJsonReport$CoverageRoot$Companion;
	public fun <init> (Ljava/lang/String;ZLjava/lang/Integer;Lelide/tooling/coverage/CoverageJsonReport$CoverageSourceSection;Ljava/util/List;)V
	public synthetic fun <init> (Ljava/lang/String;ZLjava/lang/Integer;Lelide/tooling/coverage/CoverageJsonReport$CoverageSourceSection;Ljava/util/List;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Z
	public final fun component3 ()Ljava/lang/Integer;
	public final fun component4 ()Lelide/tooling/coverage/CoverageJsonReport$CoverageSourceSection;
	public final fun component5 ()Ljava/util/List;
	public final fun copy (Ljava/lang/String;ZLjava/lang/Integer;Lelide/tooling/coverage/CoverageJsonReport$CoverageSourceSection;Ljava/util/List;)Lelide/tooling/coverage/CoverageJsonReport$CoverageRoot;
	public static synthetic fun copy$default (Lelide/tooling/coverage/CoverageJsonReport$CoverageRoot;Ljava/lang/String;ZLjava/lang/Integer;Lelide/tooling/coverage/CoverageJsonReport$CoverageSourceSection;Ljava/util/List;ILjava/lang/Object;)Lelide/tooling/coverage/CoverageJsonReport$CoverageRoot;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getCount ()Ljava/lang/Integer;
	public final fun getCovered ()Z
	public final fun getName ()Ljava/lang/String;
	public final fun getSections ()Ljava/util/List;
	public final fun getSourceSection ()Lelide/tooling/coverage/CoverageJsonReport$CoverageSourceSection;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final synthetic class elide/tooling/coverage/CoverageJsonReport$CoverageRoot$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/coverage/CoverageJsonReport$CoverageRoot$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/coverage/CoverageJsonReport$CoverageRoot;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/coverage/CoverageJsonReport$CoverageRoot;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/coverage/CoverageJsonReport$CoverageRoot$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/coverage/CoverageJsonReport$CoverageSection {
	public static final field Companion Lelide/tooling/coverage/CoverageJsonReport$CoverageSection$Companion;
	public fun <init> (ZLjava/lang/Integer;Lelide/tooling/coverage/CoverageJsonReport$CoverageSourceSection;)V
	public synthetic fun <init> (ZLjava/lang/Integer;Lelide/tooling/coverage/CoverageJsonReport$CoverageSourceSection;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Z
	public final fun component2 ()Ljava/lang/Integer;
	public final fun component3 ()Lelide/tooling/coverage/CoverageJsonReport$CoverageSourceSection;
	public final fun copy (ZLjava/lang/Integer;Lelide/tooling/coverage/CoverageJsonReport$CoverageSourceSection;)Lelide/tooling/coverage/CoverageJsonReport$CoverageSection;
	public static synthetic fun copy$default (Lelide/tooling/coverage/CoverageJsonReport$CoverageSection;ZLjava/lang/Integer;Lelide/tooling/coverage/CoverageJsonReport$CoverageSourceSection;ILjava/lang/Object;)Lelide/tooling/coverage/CoverageJsonReport$CoverageSection;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getCount ()Ljava/lang/Integer;
	public final fun getCovered ()Z
	public final fun getSourceSection ()Lelide/tooling/coverage/CoverageJsonReport$CoverageSourceSection;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final synthetic class elide/tooling/coverage/CoverageJsonReport$CoverageSection$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/coverage/CoverageJsonReport$CoverageSection$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/coverage/CoverageJsonReport$CoverageSection;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/coverage/CoverageJsonReport$CoverageSection;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/coverage/CoverageJsonReport$CoverageSection$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/coverage/CoverageJsonReport$CoverageSourceSection {
	public static final field Companion Lelide/tooling/coverage/CoverageJsonReport$CoverageSourceSection$Companion;
	public fun <init> (Ljava/lang/String;IIIIIII)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()I
	public final fun component3 ()I
	public final fun component4 ()I
	public final fun component5 ()I
	public final fun component6 ()I
	public final fun component7 ()I
	public final fun component8 ()I
	public final fun copy (Ljava/lang/String;IIIIIII)Lelide/tooling/coverage/CoverageJsonReport$CoverageSourceSection;
	public static synthetic fun copy$default (Lelide/tooling/coverage/CoverageJsonReport$CoverageSourceSection;Ljava/lang/String;IIIIIIIILjava/lang/Object;)Lelide/tooling/coverage/CoverageJsonReport$CoverageSourceSection;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getCharEndIndex ()I
	public final fun getCharIndex ()I
	public final fun getCharLength ()I
	public final fun getCharacters ()Ljava/lang/String;
	public final fun getEndColumn ()I
	public final fun getEndLine ()I
	public final fun getStartColumn ()I
	public final fun getStartLine ()I
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final synthetic class elide/tooling/coverage/CoverageJsonReport$CoverageSourceSection$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/coverage/CoverageJsonReport$CoverageSourceSection$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/coverage/CoverageJsonReport$CoverageSourceSection;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/coverage/CoverageJsonReport$CoverageSourceSection;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/coverage/CoverageJsonReport$CoverageSourceSection$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final synthetic class elide/tooling/gvm/nativeImage/$NativeImageDriver$Introspection : io/micronaut/inject/beans/AbstractInitializableBeanIntrospectionAndReference {
	public static final field $ANNOTATION_METADATA Lio/micronaut/core/annotation/AnnotationMetadata;
	public fun <init> ()V
	public fun hasBuilder ()Z
	public fun isBuildable ()Z
}

public final class elide/tooling/gvm/nativeImage/ElideNativeBuildConfiguration {
}

public final class elide/tooling/gvm/nativeImage/NativeImageDriver : elide/tooling/AbstractTool {
	public static final field Companion Lelide/tooling/gvm/nativeImage/NativeImageDriver$Companion;
	public fun <init> (Lelide/tooling/Arguments;Lelide/tooling/Environment;Lelide/tooling/gvm/nativeImage/NativeImageDriver$NativeImageInputs;Lelide/tooling/gvm/nativeImage/NativeImageDriver$NativeImageOutputs;Lkotlin/jvm/functions/Function1;Ljava/nio/file/Path;)V
	public synthetic fun <init> (Lelide/tooling/Arguments;Lelide/tooling/Environment;Lelide/tooling/gvm/nativeImage/NativeImageDriver$NativeImageInputs;Lelide/tooling/gvm/nativeImage/NativeImageDriver$NativeImageOutputs;Lkotlin/jvm/functions/Function1;Ljava/nio/file/Path;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public static final fun create (Lelide/tooling/Arguments;Lelide/tooling/Environment;Lelide/tooling/gvm/nativeImage/NativeImageDriver$NativeImageInputs;Lelide/tooling/gvm/nativeImage/NativeImageDriver$NativeImageOutputs;Ljava/nio/file/Path;Lkotlin/jvm/functions/Function1;)Lelide/tooling/gvm/nativeImage/NativeImageDriver;
	public final fun getInputs ()Lelide/tooling/gvm/nativeImage/NativeImageDriver$NativeImageInputs;
	public final fun getOutputs ()Lelide/tooling/gvm/nativeImage/NativeImageDriver$NativeImageOutputs;
	public fun invoke (Lelide/tooling/AbstractTool$EmbeddedToolState;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun nativeImageInputs (Lkotlin/sequences/Sequence;)Lelide/tooling/gvm/nativeImage/NativeImageDriver$NativeImageInputs;
	public static final fun outputBinary (Ljava/nio/file/Path;)Lelide/tooling/gvm/nativeImage/NativeImageDriver$NativeImageOutputs;
	public static final fun sharedLibrary (Ljava/nio/file/Path;)Lelide/tooling/gvm/nativeImage/NativeImageDriver$NativeImageOutputs;
}

public final class elide/tooling/gvm/nativeImage/NativeImageDriver$Companion {
	public final fun create (Lelide/tooling/Arguments;Lelide/tooling/Environment;Lelide/tooling/gvm/nativeImage/NativeImageDriver$NativeImageInputs;Lelide/tooling/gvm/nativeImage/NativeImageDriver$NativeImageOutputs;Ljava/nio/file/Path;Lkotlin/jvm/functions/Function1;)Lelide/tooling/gvm/nativeImage/NativeImageDriver;
	public static synthetic fun create$default (Lelide/tooling/gvm/nativeImage/NativeImageDriver$Companion;Lelide/tooling/Arguments;Lelide/tooling/Environment;Lelide/tooling/gvm/nativeImage/NativeImageDriver$NativeImageInputs;Lelide/tooling/gvm/nativeImage/NativeImageDriver$NativeImageOutputs;Ljava/nio/file/Path;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lelide/tooling/gvm/nativeImage/NativeImageDriver;
	public final fun nativeImageInputs (Lkotlin/sequences/Sequence;)Lelide/tooling/gvm/nativeImage/NativeImageDriver$NativeImageInputs;
	public final fun outputBinary (Ljava/nio/file/Path;)Lelide/tooling/gvm/nativeImage/NativeImageDriver$NativeImageOutputs;
	public final fun sharedLibrary (Ljava/nio/file/Path;)Lelide/tooling/gvm/nativeImage/NativeImageDriver$NativeImageOutputs;
}

public abstract interface class elide/tooling/gvm/nativeImage/NativeImageDriver$NativeImageConfigurator {
	public abstract fun getArgs ()Lelide/tooling/MutableArguments;
}

public abstract interface class elide/tooling/gvm/nativeImage/NativeImageDriver$NativeImageInputs : elide/tooling/Inputs$Files {
}

public final class elide/tooling/gvm/nativeImage/NativeImageDriver$NativeImageInputs$Paths : elide/tooling/gvm/nativeImage/NativeImageDriver$NativeImageInputs {
	public final fun getPaths ()Ljava/util/List;
}

public abstract interface class elide/tooling/gvm/nativeImage/NativeImageDriver$NativeImageOutputs {
	public abstract fun flatten ()Lelide/tooling/Outputs;
}

public final class elide/tooling/gvm/nativeImage/NativeImageDriver$NativeImageOutputs$NativeBinary : elide/tooling/Outputs$Disk$Directory, elide/tooling/gvm/nativeImage/NativeImageDriver$NativeImageOutputs {
	public fun flatten ()Lelide/tooling/Outputs;
	public final fun getPath ()Ljava/nio/file/Path;
}

public final class elide/tooling/gvm/nativeImage/NativeImageDriver$NativeImageOutputs$SharedLibrary : elide/tooling/Outputs$Disk$Directory, elide/tooling/gvm/nativeImage/NativeImageDriver$NativeImageOutputs {
	public fun flatten ()Lelide/tooling/Outputs;
	public final fun getPath ()Ljava/nio/file/Path;
}

public final class elide/tooling/gvm/nativeImage/NativeImageDriverKt {
	public static final field EMBEDDED_JDK_VERSION Ljava/lang/String;
	public static final field GRAALVM_VERSION Ljava/lang/String;
	public static final field NATIVE_IMAGE Ljava/lang/String;
	public static final field NI_COMPILER_DESCRIPTION Ljava/lang/String;
	public static final fun getNativeImage ()Lelide/tooling/Tool$CommandLineTool;
	public static final fun getSvmIsSupported ()Z
}

public class elide/tooling/gvm/nativeImage/NativeImageResult : java/lang/RuntimeException {
	public fun getError ()Ljava/lang/Throwable;
	public fun isSuccess ()Z
}

public final class elide/tooling/img/ImageFormat : java/lang/Enum, elide/core/api/Symbolic {
	public static final field AVIF Lelide/tooling/img/ImageFormat;
	public static final field Companion Lelide/tooling/img/ImageFormat$Companion;
	public static final field GIF Lelide/tooling/img/ImageFormat;
	public static final field JPG Lelide/tooling/img/ImageFormat;
	public static final field PNG Lelide/tooling/img/ImageFormat;
	public static final field SVG Lelide/tooling/img/ImageFormat;
	public static final field WEBP Lelide/tooling/img/ImageFormat;
	public final fun getAliases ()[Ljava/lang/String;
	public final fun getContentType ()Ljava/lang/String;
	public final fun getEncodable ()Z
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public final fun getOptimizable ()Z
	public synthetic fun getSymbol ()Ljava/lang/Object;
	public fun getSymbol ()Ljava/lang/String;
	public static fun valueOf (Ljava/lang/String;)Lelide/tooling/img/ImageFormat;
	public static fun values ()[Lelide/tooling/img/ImageFormat;
}

public final class elide/tooling/img/ImageFormat$Companion : elide/core/api/Symbolic$SealedResolver {
	public synthetic fun resolve (Ljava/lang/Object;)Lelide/core/api/Symbolic;
	public fun resolve (Ljava/lang/String;)Lelide/tooling/img/ImageFormat;
}

public abstract interface class elide/tooling/img/ImageOptions {
	public fun check ()Lkotlin/Pair;
	public abstract fun getDebug ()Z
	public abstract fun getFormat ()Lelide/tooling/img/ImageFormat;
}

public final class elide/tooling/img/ImageOptions$AvifOptions : java/lang/Record, elide/tooling/img/ImageOptions {
	public fun <init> ()V
	public fun <init> (Z)V
	public synthetic fun <init> (ZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Z
	public final fun copy (Z)Lelide/tooling/img/ImageOptions$AvifOptions;
	public static synthetic fun copy$default (Lelide/tooling/img/ImageOptions$AvifOptions;ZILjava/lang/Object;)Lelide/tooling/img/ImageOptions$AvifOptions;
	public fun debug ()Z
	public fun equals (Ljava/lang/Object;)Z
	public fun format ()Lelide/tooling/img/ImageFormat;
	public synthetic fun getDebug ()Z
	public synthetic fun getFormat ()Lelide/tooling/img/ImageFormat;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/img/ImageOptions$JpgOptions : java/lang/Record, elide/tooling/img/ImageOptions {
	public fun <init> ()V
	public fun <init> (Z)V
	public synthetic fun <init> (ZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Z
	public final fun copy (Z)Lelide/tooling/img/ImageOptions$JpgOptions;
	public static synthetic fun copy$default (Lelide/tooling/img/ImageOptions$JpgOptions;ZILjava/lang/Object;)Lelide/tooling/img/ImageOptions$JpgOptions;
	public fun debug ()Z
	public fun equals (Ljava/lang/Object;)Z
	public fun format ()Lelide/tooling/img/ImageFormat;
	public synthetic fun getDebug ()Z
	public synthetic fun getFormat ()Lelide/tooling/img/ImageFormat;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/img/ImageOptions$PngOptions : java/lang/Record, elide/tooling/img/ImageOptions {
	public fun <init> ()V
	public fun <init> (Z)V
	public synthetic fun <init> (ZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Z
	public final fun copy (Z)Lelide/tooling/img/ImageOptions$PngOptions;
	public static synthetic fun copy$default (Lelide/tooling/img/ImageOptions$PngOptions;ZILjava/lang/Object;)Lelide/tooling/img/ImageOptions$PngOptions;
	public fun debug ()Z
	public fun equals (Ljava/lang/Object;)Z
	public fun format ()Lelide/tooling/img/ImageFormat;
	public synthetic fun getDebug ()Z
	public synthetic fun getFormat ()Lelide/tooling/img/ImageFormat;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/img/ImageOptions$WebpOptions : java/lang/Record, elide/tooling/img/ImageOptions {
	public fun <init> ()V
	public fun <init> (Z)V
	public synthetic fun <init> (ZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Z
	public final fun copy (Z)Lelide/tooling/img/ImageOptions$WebpOptions;
	public static synthetic fun copy$default (Lelide/tooling/img/ImageOptions$WebpOptions;ZILjava/lang/Object;)Lelide/tooling/img/ImageOptions$WebpOptions;
	public fun debug ()Z
	public fun equals (Ljava/lang/Object;)Z
	public fun format ()Lelide/tooling/img/ImageFormat;
	public synthetic fun getDebug ()Z
	public synthetic fun getFormat ()Lelide/tooling/img/ImageFormat;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/img/Images {
	public static final field INSTANCE Lelide/tooling/img/Images;
	public final fun compress (Lelide/tooling/img/ImageOptions;Lkotlin/coroutines/CoroutineContext;Lelide/tooling/img/Images$ImageSource;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun compress$default (Lelide/tooling/img/Images;Lelide/tooling/img/ImageOptions;Lkotlin/coroutines/CoroutineContext;Lelide/tooling/img/Images$ImageSource;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public final fun convert (Ljava/lang/String;Lelide/tooling/img/ImageOptions;Lkotlin/coroutines/CoroutineContext;Lelide/tooling/img/Images$ImageSource;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun convert$default (Lelide/tooling/img/Images;Ljava/lang/String;Lelide/tooling/img/ImageOptions;Lkotlin/coroutines/CoroutineContext;Lelide/tooling/img/Images$ImageSource;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public final fun imageBufferFor ([B)Ljava/nio/ByteBuffer;
	public final fun imageBufferForSize-WZ4Q5Ns (I)Ljava/nio/ByteBuffer;
	public final fun load ()V
}

public final class elide/tooling/img/Images$ImageData : elide/tooling/img/Images$ImageResult {
	public final fun getOptions ()Lelide/tooling/img/ImageOptions;
	public final fun getResult ()Ljava/nio/ByteBuffer;
	public fun isSuccess ()Z
}

public abstract interface class elide/tooling/img/Images$ImageFile : elide/tooling/img/Images$ImageSource {
	public abstract fun atPath ()Ljava/nio/file/Path;
	public fun provide ()Ljava/nio/ByteBuffer;
}

public abstract interface class elide/tooling/img/Images$ImageResult {
	public abstract fun isSuccess ()Z
}

public abstract interface class elide/tooling/img/Images$ImageSource {
	public abstract fun provide ()Ljava/nio/ByteBuffer;
}

public abstract interface class elide/tooling/img/Images$ImageSourceInMemory : elide/tooling/img/Images$ImageSource {
}

public final class elide/tooling/img/Images$ImgOperationError : java/lang/Exception, elide/tooling/img/Images$ImageResult {
	public fun <init> (Lelide/tooling/img/ImageOptions;Ljava/lang/String;Ljava/lang/Throwable;)V
	public synthetic fun <init> (Lelide/tooling/img/ImageOptions;Ljava/lang/String;Ljava/lang/Throwable;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getOptions ()Lelide/tooling/img/ImageOptions;
	public fun isSuccess ()Z
}

public synthetic class elide/tooling/js/resolver/$NpmResolver$Definition : io/micronaut/context/AbstractInitializableBeanDefinitionAndReference {
	public static final field $ANNOTATION_METADATA Lio/micronaut/core/annotation/AnnotationMetadata;
	public fun <init> ()V
	protected fun <init> (Ljava/lang/Class;Lio/micronaut/context/AbstractInitializableBeanDefinition$MethodOrFieldReference;)V
	public fun instantiate (Lio/micronaut/context/BeanResolutionContext;Lio/micronaut/context/BeanContext;)Ljava/lang/Object;
	public fun isEnabled (Lio/micronaut/context/BeanContext;)Z
	public fun isEnabled (Lio/micronaut/context/BeanContext;Lio/micronaut/context/BeanResolutionContext;)Z
	public fun load ()Lio/micronaut/inject/BeanDefinition;
}

public final class elide/tooling/js/resolver/NpmResolver : elide/tooling/deps/DependencyResolver$NpmResolver {
	public fun <init> (Ljakarta/inject/Provider;Ljakarta/inject/Provider;Lkotlin/jvm/functions/Function3;Lkotlin/jvm/functions/Function3;)V
	public fun close ()V
	public fun resolve (Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun seal (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final synthetic class elide/tooling/jvm/$JarTool$Introspection : io/micronaut/inject/beans/AbstractInitializableBeanIntrospectionAndReference {
	public static final field $ANNOTATION_METADATA Lio/micronaut/core/annotation/AnnotationMetadata;
	public fun <init> ()V
	public fun hasBuilder ()Z
	public fun isBuildable ()Z
}

public final synthetic class elide/tooling/jvm/$JavaCompiler$Introspection : io/micronaut/inject/beans/AbstractInitializableBeanIntrospectionAndReference {
	public static final field $ANNOTATION_METADATA Lio/micronaut/core/annotation/AnnotationMetadata;
	public fun <init> ()V
	public fun hasBuilder ()Z
	public fun isBuildable ()Z
}

public final synthetic class elide/tooling/jvm/$JavadocTool$Introspection : io/micronaut/inject/beans/AbstractInitializableBeanIntrospectionAndReference {
	public static final field $ANNOTATION_METADATA Lio/micronaut/core/annotation/AnnotationMetadata;
	public fun <init> ()V
	public fun hasBuilder ()Z
	public fun isBuildable ()Z
}

public abstract interface class elide/tooling/jvm/AnnotationProcessor {
}

public abstract interface class elide/tooling/jvm/JarConfigurator {
}

public final class elide/tooling/jvm/JarTool : elide/tooling/GenericTool {
	public static final field Companion Lelide/tooling/jvm/JarTool$Companion;
	public fun <init> (Lelide/tooling/Arguments;Lelide/tooling/Environment;Lelide/tooling/jvm/JarTool$JarToolInputs;Lelide/tooling/jvm/JarTool$JarToolOutputs;)V
	public fun amendArgs (Lelide/tooling/MutableArguments;)V
	public static final fun create (Lelide/tooling/Arguments;Lelide/tooling/Environment;Lelide/tooling/jvm/JarTool$JarToolInputs;Lelide/tooling/jvm/JarTool$JarToolOutputs;)Lelide/tooling/jvm/JarTool;
	public synthetic fun createTool ()Ljava/lang/Object;
	public fun createTool ()Lsun/tools/jar/JarToolProvider;
	public fun getInputs ()Lelide/tooling/jvm/JarTool$JarToolInputs;
	public synthetic fun getInputs ()Ljava/lang/Object;
	public fun getOutputs ()Lelide/tooling/jvm/JarTool$JarToolOutputs;
	public synthetic fun getOutputs ()Ljava/lang/Object;
	public fun getTaskDescription ()Ljava/lang/String;
	public fun getToolLogger ()Lelide/runtime/Logger;
	public static final fun jarFiles (Lkotlin/sequences/Sequence;)Lelide/tooling/jvm/JarTool$JarToolInputs;
	public static final fun outputJar (Ljava/nio/file/Path;Ljava/nio/file/Path;)Lelide/tooling/jvm/JarTool$JarToolOutputs;
	public fun toolRun (Ljava/io/PrintWriter;Ljava/io/PrintWriter;[Ljava/lang/String;)I
}

public final class elide/tooling/jvm/JarTool$Companion {
	public final fun create (Lelide/tooling/Arguments;Lelide/tooling/Environment;Lelide/tooling/jvm/JarTool$JarToolInputs;Lelide/tooling/jvm/JarTool$JarToolOutputs;)Lelide/tooling/jvm/JarTool;
	public final fun jarFiles (Lkotlin/sequences/Sequence;)Lelide/tooling/jvm/JarTool$JarToolInputs;
	public final fun outputJar (Ljava/nio/file/Path;Ljava/nio/file/Path;)Lelide/tooling/jvm/JarTool$JarToolOutputs;
	public static synthetic fun outputJar$default (Lelide/tooling/jvm/JarTool$Companion;Ljava/nio/file/Path;Ljava/nio/file/Path;ILjava/lang/Object;)Lelide/tooling/jvm/JarTool$JarToolOutputs;
}

public abstract interface class elide/tooling/jvm/JarTool$JarToolInputs : elide/tooling/Inputs$Files {
}

public final class elide/tooling/jvm/JarTool$JarToolInputs$InputFiles : elide/tooling/jvm/JarTool$JarToolInputs {
	public static final synthetic fun box-impl (Lkotlinx/collections/immutable/PersistentList;)Lelide/tooling/jvm/JarTool$JarToolInputs$InputFiles;
	public static fun constructor-impl (Lkotlinx/collections/immutable/PersistentList;)Lkotlinx/collections/immutable/PersistentList;
	public fun equals (Ljava/lang/Object;)Z
	public static fun equals-impl (Lkotlinx/collections/immutable/PersistentList;Ljava/lang/Object;)Z
	public static final fun equals-impl0 (Lkotlinx/collections/immutable/PersistentList;Lkotlinx/collections/immutable/PersistentList;)Z
	public final fun getFiles ()Lkotlinx/collections/immutable/PersistentList;
	public fun hashCode ()I
	public static fun hashCode-impl (Lkotlinx/collections/immutable/PersistentList;)I
	public fun toString ()Ljava/lang/String;
	public static fun toString-impl (Lkotlinx/collections/immutable/PersistentList;)Ljava/lang/String;
	public final synthetic fun unbox-impl ()Lkotlinx/collections/immutable/PersistentList;
}

public final class elide/tooling/jvm/JarTool$JarToolInputs$NoInputs : elide/tooling/jvm/JarTool$JarToolInputs {
	public static final field INSTANCE Lelide/tooling/jvm/JarTool$JarToolInputs$NoInputs;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract interface class elide/tooling/jvm/JarTool$JarToolOutputs {
	public abstract fun flatten ()Lelide/tooling/Outputs;
}

public final class elide/tooling/jvm/JarTool$JarToolOutputs$Jar : elide/tooling/Outputs$Disk$File, elide/tooling/jvm/JarTool$JarToolOutputs {
	public static final synthetic fun box-impl (Lkotlin/Pair;)Lelide/tooling/jvm/JarTool$JarToolOutputs$Jar;
	public static fun constructor-impl (Lkotlin/Pair;)Lkotlin/Pair;
	public fun equals (Ljava/lang/Object;)Z
	public static fun equals-impl (Lkotlin/Pair;Ljava/lang/Object;)Z
	public static final fun equals-impl0 (Lkotlin/Pair;Lkotlin/Pair;)Z
	public fun flatten ()Lelide/tooling/Outputs;
	public static fun flatten-impl (Lkotlin/Pair;)Lelide/tooling/Outputs;
	public static final fun getDirectory-impl (Lkotlin/Pair;)Ljava/nio/file/Path;
	public static final fun getPath-impl (Lkotlin/Pair;)Ljava/nio/file/Path;
	public fun hashCode ()I
	public static fun hashCode-impl (Lkotlin/Pair;)I
	public fun toString ()Ljava/lang/String;
	public static fun toString-impl (Lkotlin/Pair;)Ljava/lang/String;
	public final synthetic fun unbox-impl ()Lkotlin/Pair;
}

public final class elide/tooling/jvm/JarTool$JarToolOutputs$NoOutputs : elide/tooling/Outputs$None, elide/tooling/jvm/JarTool$JarToolOutputs {
	public static final field INSTANCE Lelide/tooling/jvm/JarTool$JarToolOutputs$NoOutputs;
	public fun equals (Ljava/lang/Object;)Z
	public fun flatten ()Lelide/tooling/Outputs;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/jvm/JarToolKt {
	public static final field JAR Ljava/lang/String;
	public static final field JARTOOL_DESCRIPTION Ljava/lang/String;
	public static final fun getJartool ()Lelide/tooling/Tool$CommandLineTool;
}

public final class elide/tooling/jvm/JavaCompiler : elide/tooling/AbstractTool {
	public static final field Companion Lelide/tooling/jvm/JavaCompiler$Companion;
	public fun <init> (Lelide/tooling/Arguments;Lelide/tooling/Environment;Lelide/tooling/jvm/JavaCompiler$JavaCompilerInputs;Lelide/tooling/jvm/JavaCompiler$JavaCompilerOutputs;Ljava/util/List;)V
	public synthetic fun <init> (Lelide/tooling/Arguments;Lelide/tooling/Environment;Lelide/tooling/jvm/JavaCompiler$JavaCompilerInputs;Lelide/tooling/jvm/JavaCompiler$JavaCompilerOutputs;Ljava/util/List;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public static final fun classesDir (Ljava/nio/file/Path;)Lelide/tooling/jvm/JavaCompiler$JavaCompilerOutputs;
	public static final fun create (Lelide/tooling/Arguments;Lelide/tooling/Environment;Lelide/tooling/jvm/JavaCompiler$JavaCompilerInputs;Lelide/tooling/jvm/JavaCompiler$JavaCompilerOutputs;)Lelide/tooling/jvm/JavaCompiler;
	public final fun getArgs ()Lelide/tooling/Arguments;
	public final fun getEnv ()Lelide/tooling/Environment;
	public final fun getInputs ()Lelide/tooling/jvm/JavaCompiler$JavaCompilerInputs;
	public final fun getOutputs ()Lelide/tooling/jvm/JavaCompiler$JavaCompilerOutputs;
	public final fun getProcessors ()Ljava/util/List;
	public fun invoke (Lelide/tooling/AbstractTool$EmbeddedToolState;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun jvmStyleArgs (Lelide/tooling/Tool$CommandLineTool;Lelide/tooling/Arguments;)Lkotlin/Triple;
	public static final fun resolveFileArgInput (Ljava/lang/String;)Ljava/util/List;
	public static final fun resolveJavaToolchain (Lelide/tooling/Tool$CommandLineTool;)Ljava/nio/file/Path;
	public static final fun sources-xvaZahk (Lkotlin/sequences/Sequence;)Lkotlinx/collections/immutable/PersistentList;
	public fun supported ()Z
}

public final class elide/tooling/jvm/JavaCompiler$Companion {
	public final fun classesDir (Ljava/nio/file/Path;)Lelide/tooling/jvm/JavaCompiler$JavaCompilerOutputs;
	public final fun create (Lelide/tooling/Arguments;Lelide/tooling/Environment;Lelide/tooling/jvm/JavaCompiler$JavaCompilerInputs;Lelide/tooling/jvm/JavaCompiler$JavaCompilerOutputs;)Lelide/tooling/jvm/JavaCompiler;
	public final fun jvmStyleArgs (Lelide/tooling/Tool$CommandLineTool;Lelide/tooling/Arguments;)Lkotlin/Triple;
	public final fun resolveFileArgInput (Ljava/lang/String;)Ljava/util/List;
	public final fun resolveJavaToolchain (Lelide/tooling/Tool$CommandLineTool;)Ljava/nio/file/Path;
	public final fun sources-xvaZahk (Lkotlin/sequences/Sequence;)Lkotlinx/collections/immutable/PersistentList;
}

public abstract interface class elide/tooling/jvm/JavaCompiler$JavaCompilerInputs : elide/tooling/Inputs$Files {
}

public final class elide/tooling/jvm/JavaCompiler$JavaCompilerInputs$SourceFiles : elide/tooling/jvm/JavaCompiler$JavaCompilerInputs {
	public static final synthetic fun box-impl (Lkotlinx/collections/immutable/PersistentList;)Lelide/tooling/jvm/JavaCompiler$JavaCompilerInputs$SourceFiles;
	public static fun constructor-impl (Lkotlinx/collections/immutable/PersistentList;)Lkotlinx/collections/immutable/PersistentList;
	public fun equals (Ljava/lang/Object;)Z
	public static fun equals-impl (Lkotlinx/collections/immutable/PersistentList;Ljava/lang/Object;)Z
	public static final fun equals-impl0 (Lkotlinx/collections/immutable/PersistentList;Lkotlinx/collections/immutable/PersistentList;)Z
	public final fun getFiles ()Lkotlinx/collections/immutable/PersistentList;
	public fun hashCode ()I
	public static fun hashCode-impl (Lkotlinx/collections/immutable/PersistentList;)I
	public fun toString ()Ljava/lang/String;
	public static fun toString-impl (Lkotlinx/collections/immutable/PersistentList;)Ljava/lang/String;
	public final synthetic fun unbox-impl ()Lkotlinx/collections/immutable/PersistentList;
}

public abstract interface class elide/tooling/jvm/JavaCompiler$JavaCompilerOutputs {
	public abstract fun flatten ()Lelide/tooling/Outputs;
}

public final class elide/tooling/jvm/JavaCompiler$JavaCompilerOutputs$Classes : elide/tooling/Outputs$Disk$Directory, elide/tooling/jvm/JavaCompiler$JavaCompilerOutputs {
	public static final synthetic fun box-impl (Ljava/nio/file/Path;)Lelide/tooling/jvm/JavaCompiler$JavaCompilerOutputs$Classes;
	public static fun constructor-impl (Ljava/nio/file/Path;)Ljava/nio/file/Path;
	public fun equals (Ljava/lang/Object;)Z
	public static fun equals-impl (Ljava/nio/file/Path;Ljava/lang/Object;)Z
	public static final fun equals-impl0 (Ljava/nio/file/Path;Ljava/nio/file/Path;)Z
	public fun flatten ()Lelide/tooling/Outputs;
	public static fun flatten-impl (Ljava/nio/file/Path;)Lelide/tooling/Outputs;
	public final fun getDirectory ()Ljava/nio/file/Path;
	public fun hashCode ()I
	public static fun hashCode-impl (Ljava/nio/file/Path;)I
	public fun toString ()Ljava/lang/String;
	public static fun toString-impl (Ljava/nio/file/Path;)Ljava/lang/String;
	public final synthetic fun unbox-impl ()Ljava/nio/file/Path;
}

public final class elide/tooling/jvm/JavaCompilerKt {
	public static final field JAVAC Ljava/lang/String;
	public static final field JAVAC_DESCRIPTION Ljava/lang/String;
	public static final fun getJavaIsSupported ()Z
	public static final fun getJavac ()Lelide/tooling/Tool$CommandLineTool;
}

public final class elide/tooling/jvm/JavadocTool : elide/tooling/GenericTool {
	public fun <init> (Lelide/tooling/Arguments;Lelide/tooling/Environment;Lelide/tooling/jvm/JavadocTool$JavadocInputs;Lelide/tooling/jvm/JavadocTool$JavadocOutputs;)V
	public fun amendArgs (Lelide/tooling/MutableArguments;)V
	public synthetic fun createTool ()Ljava/lang/Object;
	public fun createTool ()Ljdk/javadoc/internal/tool/JavadocToolProvider;
	public fun getInputs ()Lelide/tooling/jvm/JavadocTool$JavadocInputs;
	public synthetic fun getInputs ()Ljava/lang/Object;
	public fun getOutputs ()Lelide/tooling/jvm/JavadocTool$JavadocOutputs;
	public synthetic fun getOutputs ()Ljava/lang/Object;
	public fun getTaskDescription ()Ljava/lang/String;
	public fun getToolLogger ()Lelide/runtime/Logger;
	public fun toolRun (Ljava/io/PrintWriter;Ljava/io/PrintWriter;[Ljava/lang/String;)I
}

public abstract interface class elide/tooling/jvm/JavadocTool$JavadocInputs : elide/tooling/Inputs$Files {
}

public final class elide/tooling/jvm/JavadocTool$JavadocInputs$NoInputs : elide/tooling/jvm/JavadocTool$JavadocInputs {
	public static final field INSTANCE Lelide/tooling/jvm/JavadocTool$JavadocInputs$NoInputs;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract interface class elide/tooling/jvm/JavadocTool$JavadocOutputs {
	public abstract fun flatten ()Lelide/tooling/Outputs;
}

public final class elide/tooling/jvm/JavadocTool$JavadocOutputs$NoOutputs : elide/tooling/Outputs$None, elide/tooling/jvm/JavadocTool$JavadocOutputs {
	public static final field INSTANCE Lelide/tooling/jvm/JavadocTool$JavadocOutputs$NoOutputs;
	public fun equals (Ljava/lang/Object;)Z
	public fun flatten ()Lelide/tooling/Outputs;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/jvm/JavadocToolKt {
	public static final field JAVADOC Ljava/lang/String;
	public static final field JAVADOCTOOL_DESCRIPTION Ljava/lang/String;
	public static final fun getJavadoc ()Lelide/tooling/Tool$CommandLineTool;
}

public abstract interface class elide/tooling/jvm/gradle/AttributeValue {
	public static final field Companion Lelide/tooling/jvm/gradle/AttributeValue$Companion;
}

public final class elide/tooling/jvm/gradle/AttributeValue$BooleanValue : java/lang/Record, elide/tooling/jvm/gradle/AttributeValue {
	public static final field Companion Lelide/tooling/jvm/gradle/AttributeValue$BooleanValue$Companion;
	public fun <init> (Z)V
	public final fun component1 ()Z
	public final fun copy (Z)Lelide/tooling/jvm/gradle/AttributeValue$BooleanValue;
	public static synthetic fun copy$default (Lelide/tooling/jvm/gradle/AttributeValue$BooleanValue;ZILjava/lang/Object;)Lelide/tooling/jvm/gradle/AttributeValue$BooleanValue;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public final fun value ()Z
}

public final synthetic class elide/tooling/jvm/gradle/AttributeValue$BooleanValue$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/jvm/gradle/AttributeValue$BooleanValue$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/jvm/gradle/AttributeValue$BooleanValue;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/jvm/gradle/AttributeValue$BooleanValue;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/jvm/gradle/AttributeValue$BooleanValue$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/jvm/gradle/AttributeValue$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/jvm/gradle/AttributeValue$NumberValue : java/lang/Record, elide/tooling/jvm/gradle/AttributeValue {
	public static final field Companion Lelide/tooling/jvm/gradle/AttributeValue$NumberValue$Companion;
	public fun <init> (I)V
	public final fun component1 ()I
	public final fun copy (I)Lelide/tooling/jvm/gradle/AttributeValue$NumberValue;
	public static synthetic fun copy$default (Lelide/tooling/jvm/gradle/AttributeValue$NumberValue;IILjava/lang/Object;)Lelide/tooling/jvm/gradle/AttributeValue$NumberValue;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public final fun value ()I
}

public final synthetic class elide/tooling/jvm/gradle/AttributeValue$NumberValue$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/jvm/gradle/AttributeValue$NumberValue$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/jvm/gradle/AttributeValue$NumberValue;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/jvm/gradle/AttributeValue$NumberValue;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/jvm/gradle/AttributeValue$NumberValue$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/jvm/gradle/AttributeValue$StringValue : java/lang/Record, elide/tooling/jvm/gradle/AttributeValue {
	public static final field Companion Lelide/tooling/jvm/gradle/AttributeValue$StringValue$Companion;
	public fun <init> (Ljava/lang/String;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;)Lelide/tooling/jvm/gradle/AttributeValue$StringValue;
	public static synthetic fun copy$default (Lelide/tooling/jvm/gradle/AttributeValue$StringValue;Ljava/lang/String;ILjava/lang/Object;)Lelide/tooling/jvm/gradle/AttributeValue$StringValue;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public final fun value ()Ljava/lang/String;
}

public final synthetic class elide/tooling/jvm/gradle/AttributeValue$StringValue$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/jvm/gradle/AttributeValue$StringValue$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/jvm/gradle/AttributeValue$StringValue;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/jvm/gradle/AttributeValue$StringValue;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/jvm/gradle/AttributeValue$StringValue$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/jvm/gradle/AttributeValues {
	public static final field CLASSES Ljava/lang/String;
	public static final field DOCUMENTATION Ljava/lang/String;
	public static final field EMBEDDED Ljava/lang/String;
	public static final field EXTERNAL Ljava/lang/String;
	public static final field INSTANCE Lelide/tooling/jvm/gradle/AttributeValues;
	public static final field INTEGRATION Ljava/lang/String;
	public static final field JAR Ljava/lang/String;
	public static final field JAVADOC Ljava/lang/String;
	public static final field JAVA_API Ljava/lang/String;
	public static final field JAVA_RUNTIME Ljava/lang/String;
	public static final field JAVA_RUNTIME_JARS Ljava/lang/String;
	public static final field LIBRARY Ljava/lang/String;
	public static final field MILESTONE Ljava/lang/String;
	public static final field PLATFORM Ljava/lang/String;
	public static final field RELEASE Ljava/lang/String;
	public static final field RESOURCES Ljava/lang/String;
	public static final field SHADOWED Ljava/lang/String;
	public static final field SOURCES Ljava/lang/String;
}

public final class elide/tooling/jvm/gradle/Capability : java/lang/Record {
	public static final field Companion Lelide/tooling/jvm/gradle/Capability$Companion;
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lelide/tooling/jvm/gradle/Capability;
	public static synthetic fun copy$default (Lelide/tooling/jvm/gradle/Capability;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Lelide/tooling/jvm/gradle/Capability;
	public fun equals (Ljava/lang/Object;)Z
	public final fun group ()Ljava/lang/String;
	public fun hashCode ()I
	public final fun name ()Ljava/lang/String;
	public fun toString ()Ljava/lang/String;
	public final fun version ()Ljava/lang/String;
}

public final synthetic class elide/tooling/jvm/gradle/Capability$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/jvm/gradle/Capability$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/jvm/gradle/Capability;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/jvm/gradle/Capability;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/jvm/gradle/Capability$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/jvm/gradle/Dependency : java/lang/Record {
	public static final field Companion Lelide/tooling/jvm/gradle/Dependency$Companion;
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Lelide/tooling/jvm/gradle/VersionConstraint;Ljava/util/List;Ljava/lang/String;Ljava/util/Map;Ljava/util/List;Ljava/lang/Boolean;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;Lelide/tooling/jvm/gradle/VersionConstraint;Ljava/util/List;Ljava/lang/String;Ljava/util/Map;Ljava/util/List;Ljava/lang/Boolean;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun attributes ()Ljava/util/Map;
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Lelide/tooling/jvm/gradle/VersionConstraint;
	public final fun component4 ()Ljava/util/List;
	public final fun component5 ()Ljava/lang/String;
	public final fun component6 ()Ljava/util/Map;
	public final fun component7 ()Ljava/util/List;
	public final fun component8 ()Ljava/lang/Boolean;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;Lelide/tooling/jvm/gradle/VersionConstraint;Ljava/util/List;Ljava/lang/String;Ljava/util/Map;Ljava/util/List;Ljava/lang/Boolean;)Lelide/tooling/jvm/gradle/Dependency;
	public static synthetic fun copy$default (Lelide/tooling/jvm/gradle/Dependency;Ljava/lang/String;Ljava/lang/String;Lelide/tooling/jvm/gradle/VersionConstraint;Ljava/util/List;Ljava/lang/String;Ljava/util/Map;Ljava/util/List;Ljava/lang/Boolean;ILjava/lang/Object;)Lelide/tooling/jvm/gradle/Dependency;
	public final fun endorseStrictVersions ()Ljava/lang/Boolean;
	public fun equals (Ljava/lang/Object;)Z
	public final fun excludes ()Ljava/util/List;
	public final fun group ()Ljava/lang/String;
	public fun hashCode ()I
	public final fun module ()Ljava/lang/String;
	public final fun reason ()Ljava/lang/String;
	public final fun requestedCapabilities ()Ljava/util/List;
	public fun toString ()Ljava/lang/String;
	public final fun version ()Lelide/tooling/jvm/gradle/VersionConstraint;
}

public final synthetic class elide/tooling/jvm/gradle/Dependency$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/jvm/gradle/Dependency$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/jvm/gradle/Dependency;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/jvm/gradle/Dependency;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/jvm/gradle/Dependency$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/jvm/gradle/DependencyConstraint : java/lang/Record {
	public static final field Companion Lelide/tooling/jvm/gradle/DependencyConstraint$Companion;
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Lelide/tooling/jvm/gradle/VersionConstraint;Ljava/lang/String;Ljava/util/Map;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;Lelide/tooling/jvm/gradle/VersionConstraint;Ljava/lang/String;Ljava/util/Map;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun attributes ()Ljava/util/Map;
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Lelide/tooling/jvm/gradle/VersionConstraint;
	public final fun component4 ()Ljava/lang/String;
	public final fun component5 ()Ljava/util/Map;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;Lelide/tooling/jvm/gradle/VersionConstraint;Ljava/lang/String;Ljava/util/Map;)Lelide/tooling/jvm/gradle/DependencyConstraint;
	public static synthetic fun copy$default (Lelide/tooling/jvm/gradle/DependencyConstraint;Ljava/lang/String;Ljava/lang/String;Lelide/tooling/jvm/gradle/VersionConstraint;Ljava/lang/String;Ljava/util/Map;ILjava/lang/Object;)Lelide/tooling/jvm/gradle/DependencyConstraint;
	public fun equals (Ljava/lang/Object;)Z
	public final fun group ()Ljava/lang/String;
	public fun hashCode ()I
	public final fun module ()Ljava/lang/String;
	public final fun reason ()Ljava/lang/String;
	public fun toString ()Ljava/lang/String;
	public final fun version ()Lelide/tooling/jvm/gradle/VersionConstraint;
}

public final synthetic class elide/tooling/jvm/gradle/DependencyConstraint$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/jvm/gradle/DependencyConstraint$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/jvm/gradle/DependencyConstraint;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/jvm/gradle/DependencyConstraint;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/jvm/gradle/DependencyConstraint$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/jvm/gradle/Exclusion : java/lang/Record {
	public static final field Companion Lelide/tooling/jvm/gradle/Exclusion$Companion;
	public fun <init> (Ljava/lang/String;Ljava/lang/String;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;)Lelide/tooling/jvm/gradle/Exclusion;
	public static synthetic fun copy$default (Lelide/tooling/jvm/gradle/Exclusion;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Lelide/tooling/jvm/gradle/Exclusion;
	public fun equals (Ljava/lang/Object;)Z
	public final fun group ()Ljava/lang/String;
	public fun hashCode ()I
	public final fun module ()Ljava/lang/String;
	public fun toString ()Ljava/lang/String;
}

public final synthetic class elide/tooling/jvm/gradle/Exclusion$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/jvm/gradle/Exclusion$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/jvm/gradle/Exclusion;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/jvm/gradle/Exclusion;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/jvm/gradle/Exclusion$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/jvm/gradle/FileInfo : java/lang/Record {
	public static final field Companion Lelide/tooling/jvm/gradle/FileInfo$Companion;
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/Long;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/Long;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/lang/Long;
	public final fun component4 ()Ljava/lang/String;
	public final fun component5 ()Ljava/lang/String;
	public final fun component6 ()Ljava/lang/String;
	public final fun component7 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;Ljava/lang/Long;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lelide/tooling/jvm/gradle/FileInfo;
	public static synthetic fun copy$default (Lelide/tooling/jvm/gradle/FileInfo;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Long;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Lelide/tooling/jvm/gradle/FileInfo;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun md5 ()Ljava/lang/String;
	public final fun name ()Ljava/lang/String;
	public final fun sha1 ()Ljava/lang/String;
	public final fun sha256 ()Ljava/lang/String;
	public final fun sha512 ()Ljava/lang/String;
	public final fun size ()Ljava/lang/Long;
	public fun toString ()Ljava/lang/String;
	public final fun url ()Ljava/lang/String;
}

public final synthetic class elide/tooling/jvm/gradle/FileInfo$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/jvm/gradle/FileInfo$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/jvm/gradle/FileInfo;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/jvm/gradle/FileInfo;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/jvm/gradle/FileInfo$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/jvm/gradle/GradleAttributeSerializer : kotlinx/serialization/KSerializer {
	public static final field INSTANCE Lelide/tooling/jvm/gradle/GradleAttributeSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/jvm/gradle/AttributeValue;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/jvm/gradle/AttributeValue;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/jvm/gradle/GradleModuleMetadata : java/lang/Record {
	public static final field Companion Lelide/tooling/jvm/gradle/GradleModuleMetadata$Companion;
	public fun <init> (Ljava/lang/String;Lelide/tooling/jvm/gradle/GradleModuleMetadata$Component;Lelide/tooling/jvm/gradle/GradleModuleMetadata$CreatedBy;Ljava/util/List;)V
	public synthetic fun <init> (Ljava/lang/String;Lelide/tooling/jvm/gradle/GradleModuleMetadata$Component;Lelide/tooling/jvm/gradle/GradleModuleMetadata$CreatedBy;Ljava/util/List;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component ()Lelide/tooling/jvm/gradle/GradleModuleMetadata$Component;
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Lelide/tooling/jvm/gradle/GradleModuleMetadata$Component;
	public final fun component3 ()Lelide/tooling/jvm/gradle/GradleModuleMetadata$CreatedBy;
	public final fun component4 ()Ljava/util/List;
	public final fun copy (Ljava/lang/String;Lelide/tooling/jvm/gradle/GradleModuleMetadata$Component;Lelide/tooling/jvm/gradle/GradleModuleMetadata$CreatedBy;Ljava/util/List;)Lelide/tooling/jvm/gradle/GradleModuleMetadata;
	public static synthetic fun copy$default (Lelide/tooling/jvm/gradle/GradleModuleMetadata;Ljava/lang/String;Lelide/tooling/jvm/gradle/GradleModuleMetadata$Component;Lelide/tooling/jvm/gradle/GradleModuleMetadata$CreatedBy;Ljava/util/List;ILjava/lang/Object;)Lelide/tooling/jvm/gradle/GradleModuleMetadata;
	public final fun createdBy ()Lelide/tooling/jvm/gradle/GradleModuleMetadata$CreatedBy;
	public fun equals (Ljava/lang/Object;)Z
	public final fun formatVersion ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public final fun variants ()Ljava/util/List;
}

public final synthetic class elide/tooling/jvm/gradle/GradleModuleMetadata$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/jvm/gradle/GradleModuleMetadata$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/jvm/gradle/GradleModuleMetadata;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/jvm/gradle/GradleModuleMetadata;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/jvm/gradle/GradleModuleMetadata$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/jvm/gradle/GradleModuleMetadata$Component : java/lang/Record {
	public static final field Companion Lelide/tooling/jvm/gradle/GradleModuleMetadata$Component$Companion;
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun attributes ()Ljava/util/Map;
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/lang/String;
	public final fun component4 ()Ljava/lang/String;
	public final fun component5 ()Ljava/util/Map;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Lelide/tooling/jvm/gradle/GradleModuleMetadata$Component;
	public static synthetic fun copy$default (Lelide/tooling/jvm/gradle/GradleModuleMetadata$Component;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;ILjava/lang/Object;)Lelide/tooling/jvm/gradle/GradleModuleMetadata$Component;
	public fun equals (Ljava/lang/Object;)Z
	public final fun group ()Ljava/lang/String;
	public fun hashCode ()I
	public final fun module ()Ljava/lang/String;
	public fun toString ()Ljava/lang/String;
	public final fun url ()Ljava/lang/String;
	public final fun version ()Ljava/lang/String;
}

public final synthetic class elide/tooling/jvm/gradle/GradleModuleMetadata$Component$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/jvm/gradle/GradleModuleMetadata$Component$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/jvm/gradle/GradleModuleMetadata$Component;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/jvm/gradle/GradleModuleMetadata$Component;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/jvm/gradle/GradleModuleMetadata$Component$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/jvm/gradle/GradleModuleMetadata$CreatedBy : java/lang/Record {
	public static final field Companion Lelide/tooling/jvm/gradle/GradleModuleMetadata$CreatedBy$Companion;
	public fun <init> ()V
	public fun <init> (Lelide/tooling/jvm/gradle/GradleModuleMetadata$CreatedBy$GradleInfo;)V
	public synthetic fun <init> (Lelide/tooling/jvm/gradle/GradleModuleMetadata$CreatedBy$GradleInfo;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Lelide/tooling/jvm/gradle/GradleModuleMetadata$CreatedBy$GradleInfo;
	public final fun copy (Lelide/tooling/jvm/gradle/GradleModuleMetadata$CreatedBy$GradleInfo;)Lelide/tooling/jvm/gradle/GradleModuleMetadata$CreatedBy;
	public static synthetic fun copy$default (Lelide/tooling/jvm/gradle/GradleModuleMetadata$CreatedBy;Lelide/tooling/jvm/gradle/GradleModuleMetadata$CreatedBy$GradleInfo;ILjava/lang/Object;)Lelide/tooling/jvm/gradle/GradleModuleMetadata$CreatedBy;
	public fun equals (Ljava/lang/Object;)Z
	public final fun gradle ()Lelide/tooling/jvm/gradle/GradleModuleMetadata$CreatedBy$GradleInfo;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final synthetic class elide/tooling/jvm/gradle/GradleModuleMetadata$CreatedBy$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/jvm/gradle/GradleModuleMetadata$CreatedBy$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/jvm/gradle/GradleModuleMetadata$CreatedBy;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/jvm/gradle/GradleModuleMetadata$CreatedBy;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/jvm/gradle/GradleModuleMetadata$CreatedBy$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/jvm/gradle/GradleModuleMetadata$CreatedBy$GradleInfo : java/lang/Record {
	public static final field Companion Lelide/tooling/jvm/gradle/GradleModuleMetadata$CreatedBy$GradleInfo$Companion;
	public fun <init> (Ljava/lang/String;Ljava/lang/String;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun buildId ()Ljava/lang/String;
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;)Lelide/tooling/jvm/gradle/GradleModuleMetadata$CreatedBy$GradleInfo;
	public static synthetic fun copy$default (Lelide/tooling/jvm/gradle/GradleModuleMetadata$CreatedBy$GradleInfo;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Lelide/tooling/jvm/gradle/GradleModuleMetadata$CreatedBy$GradleInfo;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public final fun version ()Ljava/lang/String;
}

public final synthetic class elide/tooling/jvm/gradle/GradleModuleMetadata$CreatedBy$GradleInfo$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/jvm/gradle/GradleModuleMetadata$CreatedBy$GradleInfo$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/jvm/gradle/GradleModuleMetadata$CreatedBy$GradleInfo;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/jvm/gradle/GradleModuleMetadata$CreatedBy$GradleInfo;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/jvm/gradle/GradleModuleMetadata$CreatedBy$GradleInfo$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/jvm/gradle/StandardAttributes {
	public static final field BUNDLING Ljava/lang/String;
	public static final field CATEGORY Ljava/lang/String;
	public static final field DOCS_TYPE Ljava/lang/String;
	public static final field INSTANCE Lelide/tooling/jvm/gradle/StandardAttributes;
	public static final field JVM_ENVIRONMENT Ljava/lang/String;
	public static final field JVM_VERSION Ljava/lang/String;
	public static final field KOTLIN_NATIVE_TARGET Ljava/lang/String;
	public static final field KOTLIN_PLATFORM_TYPE Ljava/lang/String;
	public static final field LIBRARYELEMENTS Ljava/lang/String;
	public static final field STATUS Ljava/lang/String;
	public static final field USAGE Ljava/lang/String;
}

public final class elide/tooling/jvm/gradle/Variant : java/lang/Record {
	public static final field Companion Lelide/tooling/jvm/gradle/Variant$Companion;
	public fun <init> (Ljava/lang/String;Ljava/util/Map;Lelide/tooling/jvm/gradle/Variant$AvailableAt;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/util/Map;Lelide/tooling/jvm/gradle/Variant$AvailableAt;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun attributes ()Ljava/util/Map;
	public final fun available ()Lelide/tooling/jvm/gradle/Variant$AvailableAt;
	public final fun capabilities ()Ljava/util/List;
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/util/Map;
	public final fun component3 ()Lelide/tooling/jvm/gradle/Variant$AvailableAt;
	public final fun component4 ()Ljava/util/List;
	public final fun component5 ()Ljava/util/List;
	public final fun component6 ()Ljava/util/List;
	public final fun component7 ()Ljava/util/List;
	public final fun copy (Ljava/lang/String;Ljava/util/Map;Lelide/tooling/jvm/gradle/Variant$AvailableAt;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;)Lelide/tooling/jvm/gradle/Variant;
	public static synthetic fun copy$default (Lelide/tooling/jvm/gradle/Variant;Ljava/lang/String;Ljava/util/Map;Lelide/tooling/jvm/gradle/Variant$AvailableAt;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;ILjava/lang/Object;)Lelide/tooling/jvm/gradle/Variant;
	public final fun dependencies ()Ljava/util/List;
	public final fun dependencyConstraints ()Ljava/util/List;
	public fun equals (Ljava/lang/Object;)Z
	public final fun files ()Ljava/util/List;
	public fun hashCode ()I
	public final fun name ()Ljava/lang/String;
	public fun toString ()Ljava/lang/String;
}

public final synthetic class elide/tooling/jvm/gradle/Variant$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/jvm/gradle/Variant$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/jvm/gradle/Variant;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/jvm/gradle/Variant;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/jvm/gradle/Variant$AvailableAt : java/lang/Record {
	public static final field Companion Lelide/tooling/jvm/gradle/Variant$AvailableAt$Companion;
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/lang/String;
	public final fun component4 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lelide/tooling/jvm/gradle/Variant$AvailableAt;
	public static synthetic fun copy$default (Lelide/tooling/jvm/gradle/Variant$AvailableAt;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Lelide/tooling/jvm/gradle/Variant$AvailableAt;
	public fun equals (Ljava/lang/Object;)Z
	public final fun group ()Ljava/lang/String;
	public fun hashCode ()I
	public final fun module ()Ljava/lang/String;
	public fun toString ()Ljava/lang/String;
	public final fun url ()Ljava/lang/String;
	public final fun version ()Ljava/lang/String;
}

public final synthetic class elide/tooling/jvm/gradle/Variant$AvailableAt$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/jvm/gradle/Variant$AvailableAt$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/jvm/gradle/Variant$AvailableAt;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/jvm/gradle/Variant$AvailableAt;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/jvm/gradle/Variant$AvailableAt$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/jvm/gradle/Variant$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract interface class elide/tooling/jvm/gradle/VersionConstraint {
	public static final field Companion Lelide/tooling/jvm/gradle/VersionConstraint$Companion;
}

public final class elide/tooling/jvm/gradle/VersionConstraint$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/jvm/gradle/VersionConstraint$Rich : java/lang/Record, elide/tooling/jvm/gradle/VersionConstraint {
	public static final field Companion Lelide/tooling/jvm/gradle/VersionConstraint$Rich$Companion;
	public fun <init> ()V
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/lang/String;
	public final fun component4 ()Ljava/util/List;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;)Lelide/tooling/jvm/gradle/VersionConstraint$Rich;
	public static synthetic fun copy$default (Lelide/tooling/jvm/gradle/VersionConstraint$Rich;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;ILjava/lang/Object;)Lelide/tooling/jvm/gradle/VersionConstraint$Rich;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun prefers ()Ljava/lang/String;
	public final fun rejects ()Ljava/util/List;
	public final fun requires ()Ljava/lang/String;
	public final fun strictly ()Ljava/lang/String;
	public fun toString ()Ljava/lang/String;
}

public final synthetic class elide/tooling/jvm/gradle/VersionConstraint$Rich$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/jvm/gradle/VersionConstraint$Rich$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/jvm/gradle/VersionConstraint$Rich;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/jvm/gradle/VersionConstraint$Rich;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/jvm/gradle/VersionConstraint$Rich$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/jvm/gradle/VersionConstraint$Simple : elide/tooling/jvm/gradle/VersionConstraint {
	public static final field Companion Lelide/tooling/jvm/gradle/VersionConstraint$Simple$Companion;
	public static final synthetic fun box-impl (Ljava/lang/String;)Lelide/tooling/jvm/gradle/VersionConstraint$Simple;
	public static fun constructor-impl (Ljava/lang/String;)Ljava/lang/String;
	public fun equals (Ljava/lang/Object;)Z
	public static fun equals-impl (Ljava/lang/String;Ljava/lang/Object;)Z
	public static final fun equals-impl0 (Ljava/lang/String;Ljava/lang/String;)Z
	public final fun getVersion ()Ljava/lang/String;
	public fun hashCode ()I
	public static fun hashCode-impl (Ljava/lang/String;)I
	public fun toString ()Ljava/lang/String;
	public static fun toString-impl (Ljava/lang/String;)Ljava/lang/String;
	public final synthetic fun unbox-impl ()Ljava/lang/String;
}

public final synthetic class elide/tooling/jvm/gradle/VersionConstraint$Simple$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/jvm/gradle/VersionConstraint$Simple$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun deserialize--rlYjjw (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/String;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public final fun serialize-JiECGHQ (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/String;)V
}

public final class elide/tooling/jvm/gradle/VersionConstraint$Simple$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/jvm/gradle/VersionConstraintSerializer : kotlinx/serialization/KSerializer {
	public static final field INSTANCE Lelide/tooling/jvm/gradle/VersionConstraintSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/jvm/gradle/VersionConstraint;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/jvm/gradle/VersionConstraint;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public synthetic class elide/tooling/jvm/resolver/$GmmAwareArtifactDescriptorReader$Definition : io/micronaut/context/AbstractInitializableBeanDefinitionAndReference {
	public static final field $ANNOTATION_METADATA Lio/micronaut/core/annotation/AnnotationMetadata;
	public fun <init> ()V
	protected fun <init> (Ljava/lang/Class;Lio/micronaut/context/AbstractInitializableBeanDefinition$MethodOrFieldReference;)V
	public fun instantiate (Lio/micronaut/context/BeanResolutionContext;Lio/micronaut/context/BeanContext;)Ljava/lang/Object;
	public fun isEnabled (Lio/micronaut/context/BeanContext;)Z
	public fun isEnabled (Lio/micronaut/context/BeanContext;Lio/micronaut/context/BeanResolutionContext;)Z
	public fun load ()Lio/micronaut/inject/BeanDefinition;
}

public synthetic class elide/tooling/jvm/resolver/$RepositorySystemFactory$Definition : io/micronaut/context/AbstractInitializableBeanDefinitionAndReference {
	public static final field $ANNOTATION_METADATA Lio/micronaut/core/annotation/AnnotationMetadata;
	public fun <init> ()V
	protected fun <init> (Ljava/lang/Class;Lio/micronaut/context/AbstractInitializableBeanDefinition$MethodOrFieldReference;)V
	public fun instantiate (Lio/micronaut/context/BeanResolutionContext;Lio/micronaut/context/BeanContext;)Ljava/lang/Object;
	public fun isEnabled (Lio/micronaut/context/BeanContext;)Z
	public fun isEnabled (Lio/micronaut/context/BeanContext;Lio/micronaut/context/BeanResolutionContext;)Z
	public fun load ()Lio/micronaut/inject/BeanDefinition;
}

public synthetic class elide/tooling/jvm/resolver/$RepositorySystemFactory$MavenLocator0$Definition : io/micronaut/context/AbstractInitializableBeanDefinitionAndReference {
	public static final field $ANNOTATION_METADATA Lio/micronaut/core/annotation/AnnotationMetadata;
	public fun <init> ()V
	protected fun <init> (Ljava/lang/Class;Lio/micronaut/context/AbstractInitializableBeanDefinition$MethodOrFieldReference;)V
	public fun instantiate (Lio/micronaut/context/BeanResolutionContext;Lio/micronaut/context/BeanContext;)Ljava/lang/Object;
	public fun isEnabled (Lio/micronaut/context/BeanContext;)Z
	public fun isEnabled (Lio/micronaut/context/BeanContext;Lio/micronaut/context/BeanResolutionContext;)Z
	public fun load ()Lio/micronaut/inject/BeanDefinition;
}

public synthetic class elide/tooling/jvm/resolver/$RepositorySystemFactory$RemoteRepositoryManager3$Definition : io/micronaut/context/AbstractInitializableBeanDefinitionAndReference {
	public static final field $ANNOTATION_METADATA Lio/micronaut/core/annotation/AnnotationMetadata;
	public fun <init> ()V
	protected fun <init> (Ljava/lang/Class;Lio/micronaut/context/AbstractInitializableBeanDefinition$MethodOrFieldReference;)V
	public fun instantiate (Lio/micronaut/context/BeanResolutionContext;Lio/micronaut/context/BeanContext;)Ljava/lang/Object;
	public fun isEnabled (Lio/micronaut/context/BeanContext;)Z
	public fun isEnabled (Lio/micronaut/context/BeanContext;Lio/micronaut/context/BeanResolutionContext;)Z
	public fun load ()Lio/micronaut/inject/BeanDefinition;
}

public synthetic class elide/tooling/jvm/resolver/$RepositorySystemFactory$RepositorySystem1$Definition : io/micronaut/context/AbstractInitializableBeanDefinitionAndReference {
	public static final field $ANNOTATION_METADATA Lio/micronaut/core/annotation/AnnotationMetadata;
	public fun <init> ()V
	protected fun <init> (Ljava/lang/Class;Lio/micronaut/context/AbstractInitializableBeanDefinition$MethodOrFieldReference;)V
	public fun instantiate (Lio/micronaut/context/BeanResolutionContext;Lio/micronaut/context/BeanContext;)Ljava/lang/Object;
	public fun isEnabled (Lio/micronaut/context/BeanContext;)Z
	public fun isEnabled (Lio/micronaut/context/BeanContext;Lio/micronaut/context/BeanResolutionContext;)Z
	public fun load ()Lio/micronaut/inject/BeanDefinition;
}

public synthetic class elide/tooling/jvm/resolver/$RepositorySystemFactory$RepositorySystemSession2$Definition : io/micronaut/context/AbstractInitializableBeanDefinitionAndReference {
	public static final field $ANNOTATION_METADATA Lio/micronaut/core/annotation/AnnotationMetadata;
	public fun <init> ()V
	protected fun <init> (Ljava/lang/Class;Lio/micronaut/context/AbstractInitializableBeanDefinition$MethodOrFieldReference;)V
	public fun instantiate (Lio/micronaut/context/BeanResolutionContext;Lio/micronaut/context/BeanContext;)Ljava/lang/Object;
	public fun isEnabled (Lio/micronaut/context/BeanContext;)Z
	public fun isEnabled (Lio/micronaut/context/BeanContext;Lio/micronaut/context/BeanResolutionContext;)Z
	public fun load ()Lio/micronaut/inject/BeanDefinition;
}

public abstract interface class elide/tooling/jvm/resolver/AetherProjectProvider {
	public abstract fun buildState ()Lelide/tooling/config/BuildConfigurator$ElideBuildState;
}

public final class elide/tooling/jvm/resolver/MavenAetherResolver : elide/tooling/ClasspathsProvider, elide/tooling/deps/DependencyResolver$MavenResolver, java/lang/AutoCloseable {
	public static final field Companion Lelide/tooling/jvm/resolver/MavenAetherResolver$Companion;
	public fun classpathProvider (Lelide/tooling/ClasspathSpec;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun close ()V
	public fun contribute (Ljava/nio/file/Path;Lelide/tooling/project/ElideProject;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun resolve (Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun seal (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class elide/tooling/jvm/resolver/MavenAetherResolver$Companion {
}

public final class elide/tooling/jvm/resolver/MavenClassifier : java/lang/Enum, elide/core/api/Symbolic {
	public static final field Default Lelide/tooling/jvm/resolver/MavenClassifier;
	public static final field Docs Lelide/tooling/jvm/resolver/MavenClassifier;
	public static final field Sources Lelide/tooling/jvm/resolver/MavenClassifier;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public synthetic fun getSymbol ()Ljava/lang/Object;
	public fun getSymbol ()Ljava/lang/String;
	public static fun valueOf (Ljava/lang/String;)Lelide/tooling/jvm/resolver/MavenClassifier;
	public static fun values ()[Lelide/tooling/jvm/resolver/MavenClassifier;
}

public final class elide/tooling/jvm/resolver/MavenResolverErrors : java/lang/RuntimeException {
	public final fun getErrors ()Ljava/util/List;
}

public final class elide/tooling/jvm/resolver/RepositorySystemFactory {
	public fun <init> ()V
	public final fun mavenLocator (Lelide/tooling/jvm/resolver/AetherProjectProvider;)Lorg/eclipse/aether/impl/DefaultServiceLocator;
	public final fun remoteRepositoryManager (Lorg/eclipse/aether/impl/DefaultServiceLocator;)Lorg/eclipse/aether/impl/RemoteRepositoryManager;
	public final fun repositorySystem (Lorg/eclipse/aether/impl/DefaultServiceLocator;)Lorg/eclipse/aether/internal/impl/DefaultRepositorySystem;
	public final fun repositorySystemSession ()Lorg/eclipse/aether/DefaultRepositorySystemSession;
}

public final synthetic class elide/tooling/kotlin/$KotlinCompiler$Introspection : io/micronaut/inject/beans/AbstractInitializableBeanIntrospectionAndReference {
	public static final field $ANNOTATION_METADATA Lio/micronaut/core/annotation/AnnotationMetadata;
	public fun <init> ()V
	public fun hasBuilder ()Z
	public fun isBuildable ()Z
}

public final class elide/tooling/kotlin/KotlinCompiler : elide/tooling/AbstractTool {
	public static final field Companion Lelide/tooling/kotlin/KotlinCompiler$Companion;
	public fun <init> (Lelide/tooling/Arguments;Lelide/tooling/Environment;Lelide/tooling/kotlin/KotlinCompiler$KotlinCompilerInputs;Lelide/tooling/kotlin/KotlinCompiler$KotlinCompilerOutputs;Lkotlin/jvm/functions/Function1;Ljava/nio/file/Path;Z)V
	public synthetic fun <init> (Lelide/tooling/Arguments;Lelide/tooling/Environment;Lelide/tooling/kotlin/KotlinCompiler$KotlinCompilerInputs;Lelide/tooling/kotlin/KotlinCompiler$KotlinCompilerOutputs;Lkotlin/jvm/functions/Function1;Ljava/nio/file/Path;ZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public static final fun classesDir (Ljava/nio/file/Path;)Lelide/tooling/kotlin/KotlinCompiler$KotlinCompilerOutputs;
	public static final fun configureDefaultPlugins (Lorg/jetbrains/kotlin/cli/common/arguments/K2JVMCompilerArguments;ZZZ)Ljava/util/Set;
	public static final fun create (Lelide/tooling/Arguments;Lelide/tooling/Environment;Lelide/tooling/kotlin/KotlinCompiler$KotlinCompilerInputs;Lelide/tooling/kotlin/KotlinCompiler$KotlinCompilerOutputs;Ljava/nio/file/Path;ZLkotlin/jvm/functions/Function1;)Lelide/tooling/kotlin/KotlinCompiler;
	public final fun getInputs ()Lelide/tooling/kotlin/KotlinCompiler$KotlinCompilerInputs;
	public final fun getOutputs ()Lelide/tooling/kotlin/KotlinCompiler$KotlinCompilerOutputs;
	public fun invoke (Lelide/tooling/AbstractTool$EmbeddedToolState;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun outputJar (Ljava/nio/file/Path;)Lelide/tooling/kotlin/KotlinCompiler$KotlinCompilerOutputs;
	public static final fun resolveCompilerServices$builder ()Lorg/jetbrains/kotlin/config/Services;
	public static final fun sources (Lkotlin/sequences/Sequence;)Lelide/tooling/kotlin/KotlinCompiler$KotlinCompilerInputs;
	public fun supported ()Z
}

public final class elide/tooling/kotlin/KotlinCompiler$Companion {
	public final fun classesDir (Ljava/nio/file/Path;)Lelide/tooling/kotlin/KotlinCompiler$KotlinCompilerOutputs;
	public final fun configureDefaultPlugins (Lorg/jetbrains/kotlin/cli/common/arguments/K2JVMCompilerArguments;ZZZ)Ljava/util/Set;
	public static synthetic fun configureDefaultPlugins$default (Lelide/tooling/kotlin/KotlinCompiler$Companion;Lorg/jetbrains/kotlin/cli/common/arguments/K2JVMCompilerArguments;ZZZILjava/lang/Object;)Ljava/util/Set;
	public final fun create (Lelide/tooling/Arguments;Lelide/tooling/Environment;Lelide/tooling/kotlin/KotlinCompiler$KotlinCompilerInputs;Lelide/tooling/kotlin/KotlinCompiler$KotlinCompilerOutputs;Ljava/nio/file/Path;ZLkotlin/jvm/functions/Function1;)Lelide/tooling/kotlin/KotlinCompiler;
	public static synthetic fun create$default (Lelide/tooling/kotlin/KotlinCompiler$Companion;Lelide/tooling/Arguments;Lelide/tooling/Environment;Lelide/tooling/kotlin/KotlinCompiler$KotlinCompilerInputs;Lelide/tooling/kotlin/KotlinCompiler$KotlinCompilerOutputs;Ljava/nio/file/Path;ZLkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lelide/tooling/kotlin/KotlinCompiler;
	public final fun outputJar (Ljava/nio/file/Path;)Lelide/tooling/kotlin/KotlinCompiler$KotlinCompilerOutputs;
	public final fun sources (Lkotlin/sequences/Sequence;)Lelide/tooling/kotlin/KotlinCompiler$KotlinCompilerInputs;
}

public abstract interface class elide/tooling/kotlin/KotlinCompiler$KotlinCompilerInputs : elide/tooling/Inputs$Files {
}

public final class elide/tooling/kotlin/KotlinCompiler$KotlinCompilerInputs$SourceFiles : elide/tooling/kotlin/KotlinCompiler$KotlinCompilerInputs {
	public static final synthetic fun box-impl (Lkotlinx/collections/immutable/PersistentList;)Lelide/tooling/kotlin/KotlinCompiler$KotlinCompilerInputs$SourceFiles;
	public static fun constructor-impl (Lkotlinx/collections/immutable/PersistentList;)Lkotlinx/collections/immutable/PersistentList;
	public fun equals (Ljava/lang/Object;)Z
	public static fun equals-impl (Lkotlinx/collections/immutable/PersistentList;Ljava/lang/Object;)Z
	public static final fun equals-impl0 (Lkotlinx/collections/immutable/PersistentList;Lkotlinx/collections/immutable/PersistentList;)Z
	public final fun getFiles ()Lkotlinx/collections/immutable/PersistentList;
	public fun hashCode ()I
	public static fun hashCode-impl (Lkotlinx/collections/immutable/PersistentList;)I
	public fun toString ()Ljava/lang/String;
	public static fun toString-impl (Lkotlinx/collections/immutable/PersistentList;)Ljava/lang/String;
	public final synthetic fun unbox-impl ()Lkotlinx/collections/immutable/PersistentList;
}

public abstract interface class elide/tooling/kotlin/KotlinCompiler$KotlinCompilerOutputs {
	public abstract fun flatten ()Lelide/tooling/Outputs;
}

public final class elide/tooling/kotlin/KotlinCompiler$KotlinCompilerOutputs$Classes : elide/tooling/Outputs$Disk$Directory, elide/tooling/kotlin/KotlinCompiler$KotlinCompilerOutputs {
	public static final synthetic fun box-impl (Ljava/nio/file/Path;)Lelide/tooling/kotlin/KotlinCompiler$KotlinCompilerOutputs$Classes;
	public static fun constructor-impl (Ljava/nio/file/Path;)Ljava/nio/file/Path;
	public fun equals (Ljava/lang/Object;)Z
	public static fun equals-impl (Ljava/nio/file/Path;Ljava/lang/Object;)Z
	public static final fun equals-impl0 (Ljava/nio/file/Path;Ljava/nio/file/Path;)Z
	public fun flatten ()Lelide/tooling/Outputs;
	public static fun flatten-impl (Ljava/nio/file/Path;)Lelide/tooling/Outputs;
	public final fun getDirectory ()Ljava/nio/file/Path;
	public fun hashCode ()I
	public static fun hashCode-impl (Ljava/nio/file/Path;)I
	public fun toString ()Ljava/lang/String;
	public static fun toString-impl (Ljava/nio/file/Path;)Ljava/lang/String;
	public final synthetic fun unbox-impl ()Ljava/nio/file/Path;
}

public final class elide/tooling/kotlin/KotlinCompiler$KotlinCompilerOutputs$Jar : elide/tooling/Outputs$Disk$File, elide/tooling/kotlin/KotlinCompiler$KotlinCompilerOutputs {
	public static final synthetic fun box-impl (Ljava/nio/file/Path;)Lelide/tooling/kotlin/KotlinCompiler$KotlinCompilerOutputs$Jar;
	public static fun constructor-impl (Ljava/nio/file/Path;)Ljava/nio/file/Path;
	public fun equals (Ljava/lang/Object;)Z
	public static fun equals-impl (Ljava/nio/file/Path;Ljava/lang/Object;)Z
	public static final fun equals-impl0 (Ljava/nio/file/Path;Ljava/nio/file/Path;)Z
	public fun flatten ()Lelide/tooling/Outputs;
	public static fun flatten-impl (Ljava/nio/file/Path;)Lelide/tooling/Outputs;
	public final fun getPath ()Ljava/nio/file/Path;
	public fun hashCode ()I
	public static fun hashCode-impl (Ljava/nio/file/Path;)I
	public fun toString ()Ljava/lang/String;
	public static fun toString-impl (Ljava/nio/file/Path;)Ljava/lang/String;
	public final synthetic fun unbox-impl ()Ljava/nio/file/Path;
}

public final class elide/tooling/kotlin/KotlinCompilerKt {
	public static final field KOTLINC Ljava/lang/String;
	public static final field KOTLIN_COMPILER_DESCRIPTION Ljava/lang/String;
	public static final fun getKotlinIsSupported ()Z
	public static final fun getKotlinc ()Lelide/tooling/Tool$CommandLineTool;
}

public final class elide/tooling/md/Markdown {
	public static final field INSTANCE Lelide/tooling/md/Markdown;
	public final fun defaultPage (Lelide/tooling/md/Markdown$Frontmatter;Ljava/lang/String;Lkotlin/jvm/functions/Function1;)Ljava/lang/StringBuilder;
	public static synthetic fun defaultPage$default (Lelide/tooling/md/Markdown;Lelide/tooling/md/Markdown$Frontmatter;Ljava/lang/String;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Ljava/lang/StringBuilder;
	public final fun frontmatter (Ljava/lang/String;)Lkotlin/Pair;
	public final fun frontmatter (Ljava/util/Map;)Lelide/tooling/md/Markdown$PageFrontmatter;
	public final fun getDEFAULT_MARKDOWN_FLAVOR ()Lelide/tooling/md/MarkdownFlavor;
	public final fun markdownStyle (Lelide/tooling/md/MarkdownFlavor;)Lorg/intellij/markdown/flavours/MarkdownFlavourDescriptor;
	public static synthetic fun markdownStyle$default (Lelide/tooling/md/Markdown;Lelide/tooling/md/MarkdownFlavor;ILjava/lang/Object;)Lorg/intellij/markdown/flavours/MarkdownFlavourDescriptor;
	public final fun renderMarkdown (Lelide/tooling/md/MarkdownFlavor;Lelide/tooling/md/Markdown$MarkdownOptions;Lorg/intellij/markdown/flavours/MarkdownFlavourDescriptor;Lkotlin/coroutines/CoroutineContext;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun renderMarkdown$default (Lelide/tooling/md/Markdown;Lelide/tooling/md/MarkdownFlavor;Lelide/tooling/md/Markdown$MarkdownOptions;Lorg/intellij/markdown/flavours/MarkdownFlavourDescriptor;Lkotlin/coroutines/CoroutineContext;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
}

public abstract interface class elide/tooling/md/Markdown$Frontmatter : java/util/Map, kotlin/jvm/internal/markers/KMappedMarker {
}

public final class elide/tooling/md/Markdown$KnownProperties {
	public static final field INSTANCE Lelide/tooling/md/Markdown$KnownProperties;
	public static final field SCRIPTS Ljava/lang/String;
	public static final field STYLES Ljava/lang/String;
	public static final field STYLESHEETS Ljava/lang/String;
	public static final field TITLE Ljava/lang/String;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/md/Markdown$MarkdownOptions : java/lang/Record {
	public static final field Companion Lelide/tooling/md/Markdown$MarkdownOptions$Companion;
	public fun <init> ()V
	public fun <init> (Lelide/tooling/md/MarkdownFlavor;ZZLkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function3;Lkotlin/jvm/functions/Function2;)V
	public synthetic fun <init> (Lelide/tooling/md/MarkdownFlavor;ZZLkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function3;Lkotlin/jvm/functions/Function2;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Lelide/tooling/md/MarkdownFlavor;
	public final fun component2 ()Z
	public final fun component3 ()Z
	public final fun component4 ()Lkotlin/jvm/functions/Function0;
	public final fun component5 ()Lkotlin/jvm/functions/Function1;
	public final fun component6 ()Lkotlin/jvm/functions/Function3;
	public final fun component7 ()Lkotlin/jvm/functions/Function2;
	public final fun copy (Lelide/tooling/md/MarkdownFlavor;ZZLkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function3;Lkotlin/jvm/functions/Function2;)Lelide/tooling/md/Markdown$MarkdownOptions;
	public static synthetic fun copy$default (Lelide/tooling/md/Markdown$MarkdownOptions;Lelide/tooling/md/MarkdownFlavor;ZZLkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function3;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lelide/tooling/md/Markdown$MarkdownOptions;
	public static final fun defaults ()Lelide/tooling/md/Markdown$MarkdownOptions;
	public fun equals (Ljava/lang/Object;)Z
	public final fun flavor ()Lelide/tooling/md/MarkdownFlavor;
	public final fun frontmatter ()Z
	public final fun frontmatterBuilder ()Lkotlin/jvm/functions/Function1;
	public fun hashCode ()I
	public final fun linkRenderer ()Lkotlin/jvm/functions/Function3;
	public final fun renderer ()Lkotlin/jvm/functions/Function2;
	public final fun titleProvider ()Lkotlin/jvm/functions/Function0;
	public fun toString ()Ljava/lang/String;
	public final fun trimIndent ()Z
}

public final class elide/tooling/md/Markdown$MarkdownOptions$Companion {
	public final fun defaults ()Lelide/tooling/md/Markdown$MarkdownOptions;
}

public abstract interface class elide/tooling/md/Markdown$MarkdownSourceFile : elide/tooling/md/Markdown$MarkdownSourceMaterial {
	public abstract fun atPath ()Ljava/nio/file/Path;
	public fun code (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class elide/tooling/md/Markdown$MarkdownSourceLiteral : elide/tooling/md/Markdown$MarkdownSourceMaterial {
}

public abstract interface class elide/tooling/md/Markdown$MarkdownSourceMaterial {
	public fun atPath ()Ljava/nio/file/Path;
	public abstract fun code (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class elide/tooling/md/Markdown$MarkdownSources : java/lang/Record {
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract interface class elide/tooling/md/Markdown$PageFrontmatter : elide/tooling/md/Markdown$Frontmatter {
	public abstract fun getTitle ()Ljava/lang/String;
}

public abstract interface class elide/tooling/md/Markdown$RenderedMarkdown {
	public abstract fun asString ()Ljava/lang/String;
	public fun metadata ()Lelide/tooling/md/Markdown$Frontmatter;
}

public final class elide/tooling/md/Markdown$RenderedMarkdownValue : elide/tooling/md/Markdown$RenderedMarkdown {
	public fun asString ()Ljava/lang/String;
	public static fun asString-impl (Ljava/lang/String;)Ljava/lang/String;
	public static final synthetic fun box-impl (Ljava/lang/String;)Lelide/tooling/md/Markdown$RenderedMarkdownValue;
	public fun equals (Ljava/lang/Object;)Z
	public static fun equals-impl (Ljava/lang/String;Ljava/lang/Object;)Z
	public static final fun equals-impl0 (Ljava/lang/String;Ljava/lang/String;)Z
	public fun hashCode ()I
	public static fun hashCode-impl (Ljava/lang/String;)I
	public fun toString ()Ljava/lang/String;
	public static fun toString-impl (Ljava/lang/String;)Ljava/lang/String;
	public final synthetic fun unbox-impl ()Ljava/lang/String;
}

public final class elide/tooling/md/Markdown$RenderedMarkdownWithMetadata : java/lang/Record, elide/tooling/md/Markdown$RenderedMarkdown {
	public fun asString ()Ljava/lang/String;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun metadata ()Lelide/tooling/md/Markdown$Frontmatter;
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/md/MarkdownFlavor : java/lang/Enum {
	public static final field CommonMark Lelide/tooling/md/MarkdownFlavor;
	public static final field GitHub Lelide/tooling/md/MarkdownFlavor;
	public static final field Mdx Lelide/tooling/md/MarkdownFlavor;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public static fun valueOf (Ljava/lang/String;)Lelide/tooling/md/MarkdownFlavor;
	public static fun values ()[Lelide/tooling/md/MarkdownFlavor;
}

public synthetic class elide/tooling/project/$CompositePackageManifestService$Definition : io/micronaut/context/AbstractInitializableBeanDefinitionAndReference {
	public static final field $ANNOTATION_METADATA Lio/micronaut/core/annotation/AnnotationMetadata;
	public fun <init> ()V
	protected fun <init> (Ljava/lang/Class;Lio/micronaut/context/AbstractInitializableBeanDefinition$MethodOrFieldReference;)V
	public fun instantiate (Lio/micronaut/context/BeanResolutionContext;Lio/micronaut/context/BeanContext;)Ljava/lang/Object;
	public fun isEnabled (Lio/micronaut/context/BeanContext;)Z
	public fun isEnabled (Lio/micronaut/context/BeanContext;Lio/micronaut/context/BeanResolutionContext;)Z
	public fun load ()Lio/micronaut/inject/BeanDefinition;
}

public final class elide/tooling/project/CompositePackageManifestService : elide/tooling/project/PackageManifestService {
	public fun <init> (Ljakarta/inject/Provider;Ljakarta/inject/Provider;Ljakarta/inject/Provider;Ljakarta/inject/Provider;Ljakarta/inject/Provider;Ljakarta/inject/Provider;)V
	public fun encode (Lelide/tooling/project/manifest/PackageManifest;Ljava/io/OutputStream;)V
	public fun export (Lelide/tooling/project/manifest/ElidePackageManifest;Lelide/tooling/project/ProjectEcosystem;)Lelide/tooling/project/manifest/PackageManifest;
	public fun merge (Ljava/lang/Iterable;)Lelide/tooling/project/manifest/ElidePackageManifest;
	public fun parse (Ljava/io/InputStream;Lelide/tooling/project/ProjectEcosystem;)Lelide/tooling/project/manifest/PackageManifest;
	public fun parse (Ljava/nio/file/Path;)Lelide/tooling/project/manifest/PackageManifest;
	public fun resolve (Ljava/nio/file/Path;Lelide/tooling/project/ProjectEcosystem;)Ljava/nio/file/Path;
}

public final class elide/tooling/project/DefaultProjectLoader : elide/tooling/project/ElideProjectLoader {
	public static final field INSTANCE Lelide/tooling/project/DefaultProjectLoader;
	public fun getLockfileLoader ()Lelide/tooling/lockfile/LockfileLoader;
	public fun getResourcesPath ()Ljava/nio/file/Path;
	public fun getSourceSetFactory ()Lelide/tooling/project/SourceSetFactory;
}

public final class elide/tooling/project/ElideProjectExtensionsKt {
	public static final fun load (Lelide/tooling/project/ElideProject;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class elide/tooling/py/resolver/PyPiResolver : elide/tooling/deps/DependencyResolver$PyPiResolver {
	public fun <init> ()V
	public fun close ()V
	public fun resolve (Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun seal (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class elide/tooling/registry/ResolverRegistry : elide/exec/Registry$Mutable {
	public static final field Companion Lelide/tooling/registry/ResolverRegistry$Companion;
	public fun <init> ()V
	public fun all ()Lkotlin/sequences/Sequence;
	public fun clear ()V
	public synthetic fun contains (Ljava/lang/Object;)Z
	public fun contains (Lkotlin/reflect/KClass;)Z
	public static final fun create ()Lelide/tooling/registry/ResolverRegistry;
	public synthetic fun get (Ljava/lang/Object;)Ljava/lang/Object;
	public fun get (Lkotlin/reflect/KClass;)Lelide/tooling/deps/DependencyResolver;
	public fun getCount-pVg5ArA ()I
	public fun getValue (Ljava/lang/Object;Lkotlin/reflect/KProperty;)Lelide/tooling/deps/DependencyResolver;
	public synthetic fun getValue (Ljava/lang/Object;Lkotlin/reflect/KProperty;)Ljava/lang/Object;
	public synthetic fun remove (Ljava/lang/Object;)Ljava/lang/Object;
	public fun remove (Lkotlin/reflect/KClass;)Lelide/tooling/deps/DependencyResolver;
	public synthetic fun set (Ljava/lang/Object;Ljava/lang/Object;)V
	public fun set (Lkotlin/reflect/KClass;Lelide/tooling/deps/DependencyResolver;)V
}

public final class elide/tooling/registry/ResolverRegistry$Companion {
	public final fun create ()Lelide/tooling/registry/ResolverRegistry;
}

public abstract class elide/tooling/runner/AbstractTestRunner : elide/tooling/runner/TestRunner, java/lang/AutoCloseable {
	public fun <init> (Lelide/tooling/runner/TestRunner$Config;Ljava/util/concurrent/Executor;Lelide/tooling/config/TestConfigurator$TestEventController;Lkotlin/jvm/functions/Function0;Lkotlin/time/TimeSource;)V
	public synthetic fun <init> (Lelide/tooling/runner/TestRunner$Config;Ljava/util/concurrent/Executor;Lelide/tooling/config/TestConfigurator$TestEventController;Lkotlin/jvm/functions/Function0;Lkotlin/time/TimeSource;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun awaitSettled (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun close ()V
	protected final fun fail (Ljava/lang/Throwable;)Lelide/tooling/testing/TestResult;
	public static synthetic fun fail$default (Lelide/tooling/runner/AbstractTestRunner;Ljava/lang/Throwable;ILjava/lang/Object;)Lelide/tooling/testing/TestResult;
	public fun getConfig ()Lelide/tooling/runner/TestRunner$Config;
	protected final fun getContextProvider ()Lkotlin/jvm/functions/Function0;
	public fun getEvents ()Lelide/tooling/config/TestConfigurator$TestEventController;
	public fun getExecutor ()Ljava/util/concurrent/Executor;
	protected final fun pass ()Lelide/tooling/testing/TestResult;
	protected fun resolve (Lelide/runtime/core/PolyglotContext;Lelide/runtime/intrinsics/testing/TestingRegistrar$RegisteredTest;)Lelide/runtime/intrinsics/testing/TestEntrypoint;
	protected abstract fun runTest (Lkotlinx/coroutines/CoroutineScope;Lelide/tooling/runner/AbstractTestRunner$TestRunRequest;)Lkotlinx/coroutines/Deferred;
	protected fun runnable (Lelide/runtime/core/PolyglotContext;Lelide/runtime/intrinsics/testing/TestingRegistrar$RegisteredTest;)Lelide/tooling/testing/Reason;
	protected final fun skip (Lelide/tooling/testing/Reason;)Lelide/tooling/testing/TestResult;
	protected final fun testExec (Lelide/tooling/runner/AbstractTestRunner$TestRunRequest;)V
	protected final fun testFailed (Lelide/tooling/runner/AbstractTestRunner$TestRunRequest;Ljava/lang/Throwable;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	protected final fun testSeen (Lelide/tooling/runner/AbstractTestRunner$TestRunRequest;)V
	protected final fun testSkipped (Lelide/runtime/intrinsics/testing/TestingRegistrar$RegisteredTest;Lelide/tooling/testing/Reason;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	protected final fun testSucceeded (Lelide/tooling/runner/AbstractTestRunner$TestRunRequest;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun tests (Lkotlinx/coroutines/CoroutineScope;Lkotlinx/coroutines/flow/Flow;ZLkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

protected final class elide/tooling/runner/AbstractTestRunner$TestExecutionResult : java/lang/Record {
	public synthetic fun <init> (Lelide/runtime/intrinsics/testing/TestingRegistrar$RegisteredTest;Lelide/tooling/testing/TestScope;Lelide/tooling/testing/TestResult;JLkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Lelide/runtime/intrinsics/testing/TestingRegistrar$RegisteredTest;
	public final fun component2 ()Lelide/tooling/testing/TestScope;
	public final fun component3 ()Lelide/tooling/testing/TestResult;
	public final fun component4-UwyO8pc ()J
	public final fun copy-Wn2Vu4Y (Lelide/runtime/intrinsics/testing/TestingRegistrar$RegisteredTest;Lelide/tooling/testing/TestScope;Lelide/tooling/testing/TestResult;J)Lelide/tooling/runner/AbstractTestRunner$TestExecutionResult;
	public static synthetic fun copy-Wn2Vu4Y$default (Lelide/tooling/runner/AbstractTestRunner$TestExecutionResult;Lelide/runtime/intrinsics/testing/TestingRegistrar$RegisteredTest;Lelide/tooling/testing/TestScope;Lelide/tooling/testing/TestResult;JILjava/lang/Object;)Lelide/tooling/runner/AbstractTestRunner$TestExecutionResult;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun result ()Lelide/tooling/testing/TestResult;
	public final fun scope ()Lelide/tooling/testing/TestScope;
	public final fun test ()Lelide/runtime/intrinsics/testing/TestingRegistrar$RegisteredTest;
	public final fun timing ()J
	public fun toString ()Ljava/lang/String;
}

protected final class elide/tooling/runner/AbstractTestRunner$TestRunRequest : java/lang/Record {
	public fun <init> (Lelide/runtime/intrinsics/testing/TestingRegistrar$RegisteredTest;Lelide/runtime/intrinsics/testing/TestEntrypoint;Lelide/tooling/testing/TestScope;Lelide/runtime/core/PolyglotContext;)V
	public final fun component1 ()Lelide/runtime/intrinsics/testing/TestingRegistrar$RegisteredTest;
	public final fun component2 ()Lelide/runtime/intrinsics/testing/TestEntrypoint;
	public final fun component3 ()Lelide/tooling/testing/TestScope;
	public final fun component4 ()Lelide/runtime/core/PolyglotContext;
	public final fun context ()Lelide/runtime/core/PolyglotContext;
	public final fun copy (Lelide/runtime/intrinsics/testing/TestingRegistrar$RegisteredTest;Lelide/runtime/intrinsics/testing/TestEntrypoint;Lelide/tooling/testing/TestScope;Lelide/runtime/core/PolyglotContext;)Lelide/tooling/runner/AbstractTestRunner$TestRunRequest;
	public static synthetic fun copy$default (Lelide/tooling/runner/AbstractTestRunner$TestRunRequest;Lelide/runtime/intrinsics/testing/TestingRegistrar$RegisteredTest;Lelide/runtime/intrinsics/testing/TestEntrypoint;Lelide/tooling/testing/TestScope;Lelide/runtime/core/PolyglotContext;ILjava/lang/Object;)Lelide/tooling/runner/AbstractTestRunner$TestRunRequest;
	public final fun entry ()Lelide/runtime/intrinsics/testing/TestEntrypoint;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun scope ()Lelide/tooling/testing/TestScope;
	public final fun test ()Lelide/runtime/intrinsics/testing/TestingRegistrar$RegisteredTest;
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/runner/ProcessRunner {
	public static final field INSTANCE Lelide/tooling/runner/ProcessRunner;
	public static final fun build (Ljava/nio/file/Path;Lkotlin/jvm/functions/Function1;)Lelide/tooling/runner/ProcessRunner$ProcessTaskBuilder;
	public static final fun buildFrom (Ljava/nio/file/Path;Lelide/tooling/Arguments$Suite;Lelide/tooling/Environment;Lelide/tooling/runner/ProcessRunner$StdStreams;Lelide/tooling/runner/ProcessRunner$ProcessOptions;)Lelide/tooling/runner/ProcessRunner$ProcessTaskBuilder;
	public static synthetic fun buildFrom$default (Ljava/nio/file/Path;Lelide/tooling/Arguments$Suite;Lelide/tooling/Environment;Lelide/tooling/runner/ProcessRunner$StdStreams;Lelide/tooling/runner/ProcessRunner$ProcessOptions;ILjava/lang/Object;)Lelide/tooling/runner/ProcessRunner$ProcessTaskBuilder;
	public static final fun spawnDefault (Lelide/tooling/runner/ProcessRunner$ProcessTaskBuilder;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class elide/tooling/runner/ProcessRunner$ProcessOptions : java/lang/Record {
	public fun <init> (Lelide/tooling/runner/ProcessRunner$ProcessShell;)V
	public final fun component1 ()Lelide/tooling/runner/ProcessRunner$ProcessShell;
	public final fun copy (Lelide/tooling/runner/ProcessRunner$ProcessShell;)Lelide/tooling/runner/ProcessRunner$ProcessOptions;
	public static synthetic fun copy$default (Lelide/tooling/runner/ProcessRunner$ProcessOptions;Lelide/tooling/runner/ProcessRunner$ProcessShell;ILjava/lang/Object;)Lelide/tooling/runner/ProcessRunner$ProcessOptions;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun shell ()Lelide/tooling/runner/ProcessRunner$ProcessShell;
	public fun toString ()Ljava/lang/String;
}

public abstract interface class elide/tooling/runner/ProcessRunner$ProcessShell {
}

public final class elide/tooling/runner/ProcessRunner$ProcessShell$Active : elide/tooling/runner/ProcessRunner$ProcessShell {
	public static final field INSTANCE Lelide/tooling/runner/ProcessRunner$ProcessShell$Active;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/runner/ProcessRunner$ProcessShell$ByPath : elide/tooling/runner/ProcessRunner$ProcessShell {
	public static final synthetic fun box-impl (Ljava/nio/file/Path;)Lelide/tooling/runner/ProcessRunner$ProcessShell$ByPath;
	public static fun constructor-impl (Ljava/nio/file/Path;)Ljava/nio/file/Path;
	public fun equals (Ljava/lang/Object;)Z
	public static fun equals-impl (Ljava/nio/file/Path;Ljava/lang/Object;)Z
	public static final fun equals-impl0 (Ljava/nio/file/Path;Ljava/nio/file/Path;)Z
	public final fun getPath ()Ljava/nio/file/Path;
	public fun hashCode ()I
	public static fun hashCode-impl (Ljava/nio/file/Path;)I
	public fun toString ()Ljava/lang/String;
	public static fun toString-impl (Ljava/nio/file/Path;)Ljava/lang/String;
	public final synthetic fun unbox-impl ()Ljava/nio/file/Path;
}

public final class elide/tooling/runner/ProcessRunner$ProcessShell$None : elide/tooling/runner/ProcessRunner$ProcessShell {
	public static final field INSTANCE Lelide/tooling/runner/ProcessRunner$ProcessShell$None;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract interface class elide/tooling/runner/ProcessRunner$ProcessStatus {
}

public final class elide/tooling/runner/ProcessRunner$ProcessStatus$Err : elide/tooling/runner/ProcessRunner$ProcessStatus {
	public static final synthetic fun box-impl (Ljava/lang/Throwable;)Lelide/tooling/runner/ProcessRunner$ProcessStatus$Err;
	public static fun constructor-impl (Ljava/lang/Throwable;)Ljava/lang/Throwable;
	public fun equals (Ljava/lang/Object;)Z
	public static fun equals-impl (Ljava/lang/Throwable;Ljava/lang/Object;)Z
	public static final fun equals-impl0 (Ljava/lang/Throwable;Ljava/lang/Throwable;)Z
	public final fun getErr ()Ljava/lang/Throwable;
	public fun hashCode ()I
	public static fun hashCode-impl (Ljava/lang/Throwable;)I
	public fun toString ()Ljava/lang/String;
	public static fun toString-impl (Ljava/lang/Throwable;)Ljava/lang/String;
	public final synthetic fun unbox-impl ()Ljava/lang/Throwable;
}

public abstract interface class elide/tooling/runner/ProcessRunner$ProcessStatus$Exit : elide/tooling/runner/ProcessRunner$ProcessStatus {
}

public final class elide/tooling/runner/ProcessRunner$ProcessStatus$ExitCode : elide/tooling/runner/ProcessRunner$ProcessStatus$Exit {
	public static final synthetic fun box-impl (I)Lelide/tooling/runner/ProcessRunner$ProcessStatus$ExitCode;
	public static fun constructor-impl (I)I
	public fun equals (Ljava/lang/Object;)Z
	public static fun equals-impl (ILjava/lang/Object;)Z
	public static final fun equals-impl0 (II)Z
	public final fun getCode ()I
	public fun hashCode ()I
	public static fun hashCode-impl (I)I
	public fun toString ()Ljava/lang/String;
	public static fun toString-impl (I)Ljava/lang/String;
	public final synthetic fun unbox-impl ()I
}

public final class elide/tooling/runner/ProcessRunner$ProcessStatus$ExitSignal : elide/tooling/runner/ProcessRunner$ProcessStatus$Exit {
	public static final synthetic fun box-impl (Ljava/lang/String;)Lelide/tooling/runner/ProcessRunner$ProcessStatus$ExitSignal;
	public static fun constructor-impl (Ljava/lang/String;)Ljava/lang/String;
	public fun equals (Ljava/lang/Object;)Z
	public static fun equals-impl (Ljava/lang/String;Ljava/lang/Object;)Z
	public static final fun equals-impl0 (Ljava/lang/String;Ljava/lang/String;)Z
	public final fun getSignal ()Ljava/lang/String;
	public fun hashCode ()I
	public static fun hashCode-impl (Ljava/lang/String;)I
	public fun toString ()Ljava/lang/String;
	public static fun toString-impl (Ljava/lang/String;)Ljava/lang/String;
	public final synthetic fun unbox-impl ()Ljava/lang/String;
}

public final class elide/tooling/runner/ProcessRunner$ProcessStatus$Pending : elide/tooling/runner/ProcessRunner$ProcessStatus {
	public static final field INSTANCE Lelide/tooling/runner/ProcessRunner$ProcessStatus$Pending;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/runner/ProcessRunner$ProcessStatus$Running : elide/tooling/runner/ProcessRunner$ProcessStatus {
	public static final field INSTANCE Lelide/tooling/runner/ProcessRunner$ProcessStatus$Running;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/runner/ProcessRunner$ProcessStatus$Success : elide/tooling/runner/ProcessRunner$ProcessStatus$Exit {
	public static final field INSTANCE Lelide/tooling/runner/ProcessRunner$ProcessStatus$Success;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract interface class elide/tooling/runner/ProcessRunner$ProcessTask : elide/tooling/runner/ProcessRunner$ProcessTaskInfo {
	public abstract fun asDeferred ()Lkotlinx/coroutines/Deferred;
	public abstract fun handle ()Ljava/lang/ProcessHandle;
	public abstract fun pid ()J
	public abstract fun process ()Ljava/lang/Process;
	public abstract fun status ()Lelide/tooling/runner/ProcessRunner$ProcessStatus;
}

public abstract interface class elide/tooling/runner/ProcessRunner$ProcessTaskBuilder : elide/tooling/runner/ProcessRunner$ProcessTaskInfo {
	public abstract fun getArgs ()Lelide/tooling/MutableArguments;
	public abstract fun getEnv ()Lelide/tooling/Environment;
	public abstract fun getExecutable ()Ljava/nio/file/Path;
	public abstract fun getOptions ()Lelide/tooling/runner/ProcessRunner$ProcessOptions;
	public abstract fun getStreams ()Lelide/tooling/runner/ProcessRunner$StdStreams;
	public abstract fun setArgs (Lelide/tooling/MutableArguments;)V
	public abstract fun setEnv (Lelide/tooling/Environment;)V
	public abstract fun setExecutable (Ljava/nio/file/Path;)V
	public abstract fun setOptions (Lelide/tooling/runner/ProcessRunner$ProcessOptions;)V
	public abstract fun setStreams (Lelide/tooling/runner/ProcessRunner$StdStreams;)V
	public abstract fun spawn (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class elide/tooling/runner/ProcessRunner$ProcessTaskInfo {
	public abstract fun getArgs ()Lelide/tooling/Arguments;
	public abstract fun getEnv ()Lelide/tooling/Environment;
	public abstract fun getExecutable ()Ljava/nio/file/Path;
	public abstract fun getOptions ()Lelide/tooling/runner/ProcessRunner$ProcessOptions;
	public abstract fun getStreams ()Lelide/tooling/runner/ProcessRunner$StdStreams;
}

public abstract interface class elide/tooling/runner/ProcessRunner$StdStreams {
}

public final class elide/tooling/runner/ProcessRunner$StdStreams$Defaults : elide/tooling/runner/ProcessRunner$StdStreams {
	public static final field INSTANCE Lelide/tooling/runner/ProcessRunner$StdStreams$Defaults;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/runner/SerialTestRunner : elide/tooling/runner/AbstractTestRunner {
}

public final class elide/tooling/runner/SerialTestRunner$Builder : elide/tooling/runner/TestRunner$Builder {
	public fun build (Lelide/tooling/config/TestConfigurator$TestEventController;)Lelide/tooling/runner/SerialTestRunner;
	public synthetic fun build (Lelide/tooling/config/TestConfigurator$TestEventController;)Lelide/tooling/runner/TestRunner;
	public fun getConfig ()Lelide/tooling/runner/TestRunner$MutableConfig;
	public fun getContextProvider ()Lkotlin/jvm/functions/Function0;
	public fun getExecutor ()Ljava/util/concurrent/Executor;
	public fun setExecutor (Ljava/util/concurrent/Executor;)V
}

public abstract interface class elide/tooling/runner/TestRunner : java/lang/AutoCloseable {
	public static final field Companion Lelide/tooling/runner/TestRunner$Companion;
	public abstract fun awaitSettled (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getConfig ()Lelide/tooling/runner/TestRunner$Config;
	public abstract fun getEvents ()Lelide/tooling/config/TestConfigurator$TestEventController;
	public abstract fun getExecutor ()Ljava/util/concurrent/Executor;
	public static fun serial (Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function1;)Lelide/tooling/runner/TestRunner;
	public static fun serialBuilder (Lkotlin/jvm/functions/Function0;)Lelide/tooling/runner/SerialTestRunner$Builder;
	public abstract fun tests (Lkotlinx/coroutines/CoroutineScope;Lkotlinx/coroutines/flow/Flow;ZLkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun tests$default (Lelide/tooling/runner/TestRunner;Lkotlinx/coroutines/CoroutineScope;Lkotlinx/coroutines/flow/Flow;ZLkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static fun threaded (Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function1;)Lelide/tooling/runner/TestRunner;
	public static fun threadedBuilder (Lkotlin/jvm/functions/Function0;)Lelide/tooling/runner/ThreadedTestRunner$Builder;
}

public abstract interface class elide/tooling/runner/TestRunner$Builder {
	public abstract fun build (Lelide/tooling/config/TestConfigurator$TestEventController;)Lelide/tooling/runner/TestRunner;
	public fun build (Lkotlin/jvm/functions/Function1;)Lelide/tooling/runner/TestRunner;
	public static synthetic fun build$default (Lelide/tooling/runner/TestRunner$Builder;Lelide/tooling/config/TestConfigurator$TestEventController;ILjava/lang/Object;)Lelide/tooling/runner/TestRunner;
	public abstract fun getConfig ()Lelide/tooling/runner/TestRunner$MutableConfig;
	public abstract fun getContextProvider ()Lkotlin/jvm/functions/Function0;
	public abstract fun getExecutor ()Ljava/util/concurrent/Executor;
	public abstract fun setExecutor (Ljava/util/concurrent/Executor;)V
}

public final class elide/tooling/runner/TestRunner$Companion {
	public final fun serial (Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function1;)Lelide/tooling/runner/TestRunner;
	public static synthetic fun serial$default (Lelide/tooling/runner/TestRunner$Companion;Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lelide/tooling/runner/TestRunner;
	public final fun serialBuilder (Lkotlin/jvm/functions/Function0;)Lelide/tooling/runner/SerialTestRunner$Builder;
	public final fun threaded (Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function1;)Lelide/tooling/runner/TestRunner;
	public static synthetic fun threaded$default (Lelide/tooling/runner/TestRunner$Companion;Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lelide/tooling/runner/TestRunner;
	public final fun threadedBuilder (Lkotlin/jvm/functions/Function0;)Lelide/tooling/runner/ThreadedTestRunner$Builder;
}

public abstract interface class elide/tooling/runner/TestRunner$Config {
	public abstract fun getActionScope ()Lelide/exec/ActionScope;
	public abstract fun getDebug ()Z
	public abstract fun getDry ()Z
	public abstract fun getFailFast ()Z
	public abstract fun getParallelism ()I
	public abstract fun getProject ()Lelide/tooling/project/ElideProject;
	public abstract fun getProjectRoot ()Ljava/nio/file/Path;
	public abstract fun getQuiet ()Z
	public abstract fun getResourcesPath ()Ljava/nio/file/Path;
	public abstract fun getTestPredicate ()Ljava/util/function/Predicate;
	public abstract fun getVerbose ()Z
}

public final class elide/tooling/runner/TestRunner$ConfigDefaults {
	public static final field DEBUG Z
	public static final field DRY Z
	public static final field FAIL_FAST Z
	public static final field INSTANCE Lelide/tooling/runner/TestRunner$ConfigDefaults;
	public static final field QUIET Z
	public static final field VERBOSE Z
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/runner/TestRunner$ImmutableConfig : java/lang/Record, elide/tooling/runner/TestRunner$Config {
	public fun actionScope ()Lelide/exec/ActionScope;
	public final fun component1 ()Z
	public final fun component10 ()Ljava/nio/file/Path;
	public final fun component11 ()I
	public final fun component2 ()Z
	public final fun component3 ()Z
	public final fun component4 ()Z
	public final fun component5 ()Z
	public final fun component6 ()Lelide/exec/ActionScope;
	public final fun component7 ()Lelide/tooling/project/ElideProject;
	public final fun component8 ()Ljava/util/function/Predicate;
	public final fun component9 ()Ljava/nio/file/Path;
	public fun debug ()Z
	public fun dry ()Z
	public fun equals (Ljava/lang/Object;)Z
	public fun failFast ()Z
	public synthetic fun getActionScope ()Lelide/exec/ActionScope;
	public synthetic fun getDebug ()Z
	public synthetic fun getDry ()Z
	public synthetic fun getFailFast ()Z
	public synthetic fun getParallelism ()I
	public synthetic fun getProject ()Lelide/tooling/project/ElideProject;
	public synthetic fun getProjectRoot ()Ljava/nio/file/Path;
	public synthetic fun getQuiet ()Z
	public synthetic fun getResourcesPath ()Ljava/nio/file/Path;
	public synthetic fun getTestPredicate ()Ljava/util/function/Predicate;
	public synthetic fun getVerbose ()Z
	public fun hashCode ()I
	public fun parallelism ()I
	public fun project ()Lelide/tooling/project/ElideProject;
	public fun projectRoot ()Ljava/nio/file/Path;
	public fun quiet ()Z
	public fun resourcesPath ()Ljava/nio/file/Path;
	public fun testPredicate ()Ljava/util/function/Predicate;
	public fun toString ()Ljava/lang/String;
	public fun verbose ()Z
}

public final class elide/tooling/runner/TestRunner$MutableConfig : elide/tooling/runner/TestRunner$Config {
	public final fun build ()Lelide/tooling/runner/TestRunner$ImmutableConfig;
	public fun getActionScope ()Lelide/exec/ActionScope;
	public fun getDebug ()Z
	public fun getDry ()Z
	public fun getFailFast ()Z
	public fun getParallelism ()I
	public fun getProject ()Lelide/tooling/project/ElideProject;
	public fun getProjectRoot ()Ljava/nio/file/Path;
	public fun getQuiet ()Z
	public fun getResourcesPath ()Ljava/nio/file/Path;
	public fun getTestPredicate ()Ljava/util/function/Predicate;
	public fun getVerbose ()Z
	public fun setActionScope (Lelide/exec/ActionScope;)V
	public fun setDebug (Z)V
	public fun setDry (Z)V
	public fun setFailFast (Z)V
	public fun setProject (Lelide/tooling/project/ElideProject;)V
	public fun setProjectRoot (Ljava/nio/file/Path;)V
	public fun setQuiet (Z)V
	public fun setResourcesPath (Ljava/nio/file/Path;)V
	public fun setTestPredicate (Ljava/util/function/Predicate;)V
	public fun setVerbose (Z)V
}

public final class elide/tooling/runner/ThreadedTestRunner : elide/tooling/runner/AbstractTestRunner {
}

public final class elide/tooling/runner/ThreadedTestRunner$Builder : elide/tooling/runner/TestRunner$Builder {
	public synthetic fun build (Lelide/tooling/config/TestConfigurator$TestEventController;)Lelide/tooling/runner/TestRunner;
	public fun build (Lelide/tooling/config/TestConfigurator$TestEventController;)Lelide/tooling/runner/ThreadedTestRunner;
	public fun getConfig ()Lelide/tooling/runner/TestRunner$MutableConfig;
	public fun getContextProvider ()Lkotlin/jvm/functions/Function0;
	public fun getExecutor ()Ljava/util/concurrent/Executor;
	public fun setExecutor (Ljava/util/concurrent/Executor;)V
}

public final class elide/tooling/web/WebBuilder {
	public static final field INSTANCE Lelide/tooling/web/WebBuilder;
	public final fun css ()Lelide/tooling/web/css/CssBuilder;
	public final fun load ()Z
	public final fun markdown ()Lelide/tooling/md/Markdown;
}

public final class elide/tooling/web/css/CssBuilder {
	public static final field INSTANCE Lelide/tooling/web/css/CssBuilder;
	public final fun buildCss (Lelide/tooling/web/css/CssBuilder$CssBuild;Lkotlin/coroutines/CoroutineContext;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun buildCss$default (Lelide/tooling/web/css/CssBuilder;Lelide/tooling/web/css/CssBuilder$CssBuild;Lkotlin/coroutines/CoroutineContext;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public final fun configureCss (Lelide/tooling/web/css/CssBuilder$CssOptions;Lkotlin/sequences/Sequence;)Lelide/tooling/web/css/CssBuilder$CssBuild;
}

public final class elide/tooling/web/css/CssBuilder$CssBuild {
	public final fun getOptions ()Lelide/tooling/web/css/CssBuilder$CssOptions;
	public final fun getSources ()Lelide/tooling/web/css/CssBuilder$CssSources;
}

public final class elide/tooling/web/css/CssBuilder$CssDefaults {
	public static final field INSTANCE Lelide/tooling/web/css/CssBuilder$CssDefaults;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getDEFAULT_TARGETS ()[Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract interface class elide/tooling/web/css/CssBuilder$CssMinification {
}

public final class elide/tooling/web/css/CssBuilder$CssOptions : java/lang/Record {
	public static final field Companion Lelide/tooling/web/css/CssBuilder$CssOptions$Companion;
	public fun <init> ()V
	public fun <init> (ZLelide/tooling/web/css/CssBuilder$CssMinification;ZZLjava/nio/file/Path;ZZLelide/tooling/web/Browsers;)V
	public synthetic fun <init> (ZLelide/tooling/web/css/CssBuilder$CssMinification;ZZLjava/nio/file/Path;ZZLelide/tooling/web/Browsers;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun absoluteProjectRoot ()Ljava/lang/String;
	public final fun absoluteProjectRoot ()[Ljava/lang/String;
	public final fun browsers ()Lelide/tooling/web/Browsers;
	public final fun bundle ()Z
	public final fun component1 ()Z
	public final fun component2 ()Lelide/tooling/web/css/CssBuilder$CssMinification;
	public final fun component3 ()Z
	public final fun component4 ()Z
	public final fun component5 ()Ljava/nio/file/Path;
	public final fun component6 ()Z
	public final fun component7 ()Z
	public final fun component8 ()Lelide/tooling/web/Browsers;
	public final fun copy (ZLelide/tooling/web/css/CssBuilder$CssMinification;ZZLjava/nio/file/Path;ZZLelide/tooling/web/Browsers;)Lelide/tooling/web/css/CssBuilder$CssOptions;
	public static synthetic fun copy$default (Lelide/tooling/web/css/CssBuilder$CssOptions;ZLelide/tooling/web/css/CssBuilder$CssMinification;ZZLjava/nio/file/Path;ZZLelide/tooling/web/Browsers;ILjava/lang/Object;)Lelide/tooling/web/css/CssBuilder$CssOptions;
	public final fun debug ()Z
	public static final fun defaults ()Lelide/tooling/web/css/CssBuilder$CssOptions;
	public final fun enableBundle ()Z
	public final fun enableDebugLogs ()Z
	public final fun enableMinification ()Z
	public final fun enableModules ()Z
	public final fun enableScss ()Z
	public final fun enableSourceMaps ()Z
	public fun equals (Ljava/lang/Object;)Z
	public static final fun forProject (Lelide/tooling/project/ElideProject;)Lelide/tooling/web/css/CssBuilder$CssOptions;
	public fun hashCode ()I
	public final fun minify ()Lelide/tooling/web/css/CssBuilder$CssMinification;
	public final fun modules ()Z
	public final fun projectRoot ()Ljava/nio/file/Path;
	public final fun scss ()Z
	public final fun sourceMap ()Z
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/web/css/CssBuilder$CssOptions$Companion {
	public final fun defaults ()Lelide/tooling/web/css/CssBuilder$CssOptions;
	public final fun forProject (Lelide/tooling/project/ElideProject;)Lelide/tooling/web/css/CssBuilder$CssOptions;
}

public abstract interface class elide/tooling/web/css/CssBuilder$CssResult {
	public abstract fun code ()Ljava/util/List;
}

public abstract interface class elide/tooling/web/css/CssBuilder$CssSourceFile : elide/tooling/web/css/CssBuilder$CssSourceMaterial {
	public abstract fun asPath ()Ljava/nio/file/Path;
	public fun code (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class elide/tooling/web/css/CssBuilder$CssSourceLiteral : elide/tooling/web/css/CssBuilder$CssSourceMaterial {
}

public abstract interface class elide/tooling/web/css/CssBuilder$CssSourceMaterial {
	public abstract fun code (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class elide/tooling/web/css/CssBuilder$CssSources : java/lang/Record {
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/web/css/CssBuilder$MinifyOptions : java/lang/Record, elide/tooling/web/css/CssBuilder$CssMinification {
	public static final field Companion Lelide/tooling/web/css/CssBuilder$MinifyOptions$Companion;
	public final fun component1 ()[Ljava/lang/String;
	public static final fun defaults ()Lelide/tooling/web/css/CssBuilder$MinifyOptions;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun targets ()[Ljava/lang/String;
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/web/css/CssBuilder$MinifyOptions$Companion {
	public final fun defaults ()Lelide/tooling/web/css/CssBuilder$MinifyOptions;
}

public final class elide/tooling/web/css/CssBuilder$NoMinification : elide/tooling/web/css/CssBuilder$CssMinification {
	public static final field INSTANCE Lelide/tooling/web/css/CssBuilder$NoMinification;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/web/html/HtmlBuilder {
	public static final field INSTANCE Lelide/tooling/web/html/HtmlBuilder;
	public final fun buildHtml (Lelide/tooling/web/html/HtmlBuilder$HtmlBuild;Lkotlin/coroutines/CoroutineContext;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun buildHtml$default (Lelide/tooling/web/html/HtmlBuilder;Lelide/tooling/web/html/HtmlBuilder$HtmlBuild;Lkotlin/coroutines/CoroutineContext;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public final fun configureHtml (Lelide/tooling/web/html/HtmlBuilder$HtmlOptions;Lkotlin/sequences/Sequence;)Lelide/tooling/web/html/HtmlBuilder$HtmlBuild;
}

public final class elide/tooling/web/html/HtmlBuilder$HtmlBuild {
	public final fun getOptions ()Lelide/tooling/web/html/HtmlBuilder$HtmlOptions;
	public final fun getSources ()Lelide/tooling/web/html/HtmlBuilder$HtmlSources;
}

public final class elide/tooling/web/html/HtmlBuilder$HtmlDefaults {
	public static final field INSTANCE Lelide/tooling/web/html/HtmlBuilder$HtmlDefaults;
	public static final field MINIFY_COMMENTS Z
	public static final field MINIFY_CSS Z
	public static final field MINIFY_JS Z
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract interface class elide/tooling/web/html/HtmlBuilder$HtmlMinification {
	public fun getComments ()Z
	public fun getCss ()Z
	public fun getJs ()Z
}

public final class elide/tooling/web/html/HtmlBuilder$HtmlOptions : java/lang/Record {
	public static final field Companion Lelide/tooling/web/html/HtmlBuilder$HtmlOptions$Companion;
	public fun <init> ()V
	public fun <init> (ZLelide/tooling/web/html/HtmlBuilder$HtmlMinification;)V
	public synthetic fun <init> (ZLelide/tooling/web/html/HtmlBuilder$HtmlMinification;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Z
	public final fun component2 ()Lelide/tooling/web/html/HtmlBuilder$HtmlMinification;
	public final fun copy (ZLelide/tooling/web/html/HtmlBuilder$HtmlMinification;)Lelide/tooling/web/html/HtmlBuilder$HtmlOptions;
	public static synthetic fun copy$default (Lelide/tooling/web/html/HtmlBuilder$HtmlOptions;ZLelide/tooling/web/html/HtmlBuilder$HtmlMinification;ILjava/lang/Object;)Lelide/tooling/web/html/HtmlBuilder$HtmlOptions;
	public final fun debug ()Z
	public static final fun defaults ()Lelide/tooling/web/html/HtmlBuilder$HtmlOptions;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun minify ()Lelide/tooling/web/html/HtmlBuilder$HtmlMinification;
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/web/html/HtmlBuilder$HtmlOptions$Companion {
	public final fun defaults ()Lelide/tooling/web/html/HtmlBuilder$HtmlOptions;
}

public abstract interface class elide/tooling/web/html/HtmlBuilder$HtmlResult {
	public abstract fun code ()Ljava/util/List;
}

public abstract interface class elide/tooling/web/html/HtmlBuilder$HtmlSourceFile : elide/tooling/web/html/HtmlBuilder$HtmlSourceMaterial {
	public abstract fun asPath ()Ljava/nio/file/Path;
	public fun code (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class elide/tooling/web/html/HtmlBuilder$HtmlSourceLiteral : elide/tooling/web/html/HtmlBuilder$HtmlSourceMaterial {
}

public abstract interface class elide/tooling/web/html/HtmlBuilder$HtmlSourceMaterial {
	public abstract fun code (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class elide/tooling/web/html/HtmlBuilder$HtmlSources : java/lang/Record {
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/web/html/HtmlBuilder$MinifyOptions : java/lang/Record, elide/tooling/web/html/HtmlBuilder$HtmlMinification {
	public static final field Companion Lelide/tooling/web/html/HtmlBuilder$MinifyOptions$Companion;
	public fun <init> ()V
	public fun <init> (ZZZ)V
	public synthetic fun <init> (ZZZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun comments ()Z
	public final fun component1 ()Z
	public final fun component2 ()Z
	public final fun component3 ()Z
	public final fun copy (ZZZ)Lelide/tooling/web/html/HtmlBuilder$MinifyOptions;
	public static synthetic fun copy$default (Lelide/tooling/web/html/HtmlBuilder$MinifyOptions;ZZZILjava/lang/Object;)Lelide/tooling/web/html/HtmlBuilder$MinifyOptions;
	public fun css ()Z
	public static final fun defaults ()Lelide/tooling/web/html/HtmlBuilder$MinifyOptions;
	public fun equals (Ljava/lang/Object;)Z
	public synthetic fun getComments ()Z
	public synthetic fun getCss ()Z
	public synthetic fun getJs ()Z
	public fun hashCode ()I
	public fun js ()Z
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/web/html/HtmlBuilder$MinifyOptions$Companion {
	public final fun defaults ()Lelide/tooling/web/html/HtmlBuilder$MinifyOptions;
}

public final class elide/tooling/web/html/HtmlBuilder$NoMinification : elide/tooling/web/html/HtmlBuilder$HtmlMinification {
	public static final field INSTANCE Lelide/tooling/web/html/HtmlBuilder$NoMinification;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/web/mdx/MdxBuilder {
	public static final field INSTANCE Lelide/tooling/web/mdx/MdxBuilder;
	public static final fun renderMdx (Ljava/lang/String;Lelide/tooling/md/Markdown$MarkdownOptions;)Ljava/lang/String;
	public static synthetic fun renderMdx$default (Ljava/lang/String;Lelide/tooling/md/Markdown$MarkdownOptions;ILjava/lang/Object;)Ljava/lang/String;
}

