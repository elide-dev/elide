<?xml version='1.0' encoding='UTF-8'?>
<SmellBaseline>
  <ManuallySuppressedIssues/>
  <CurrentIssues>
    <ID>EmptyFunctionBlock:BuildOutput.kt:BaseOutput${ }</ID>
    <ID>EmptyFunctionBlock:BuildOutput.kt:BaseOutput.&lt;no name provided>${ }</ID>
    <ID>ExplicitItLambdaMultipleParameters:SubprocessRunner.kt:{ idx, it -> idx to it }</ID>
    <ID>ForbiddenComment:DelegatedToolCommand.kt:DelegatedToolCommand$// @TODO: delegated error handling</ID>
    <ID>LoopWithTooManyJumpStatements:ToolShellCommand.kt:ToolShellCommand$while</ID>
    <ID>MagicNumber:RuntimeWorkdirManager.kt:RuntimeWorkdirManager$15</ID>
    <ID>MagicNumber:SubprocessRunner.kt:100</ID>
    <ID>MagicNumber:ToolShellCommand.kt:ToolShellCommand$1000L</ID>
    <ID>MagicNumber:ToolShellCommand.kt:ToolShellCommand$120</ID>
    <ID>MagicNumber:ToolShellCommand.kt:ToolShellCommand$40</ID>
    <ID>MagicNumber:ToolShellCommand.kt:ToolShellCommand$80</ID>
    <ID>NestedBlockDepth:Elide.kt:Elide$override suspend fun CommandContext.invoke(state: CommandState): CommandResult</ID>
    <ID>NestedBlockDepth:InitCommand.kt:InitCommand$override suspend fun CommandContext.invoke(state: ToolContext&lt;ToolState>): CommandResult</ID>
    <ID>NestedBlockDepth:NativeEngine.kt:NativeEngine$@Suppress("TooGenericExceptionCaught") @JvmStatic private fun loadApplicableNatives( platform: HostPlatform, nativesProvider: () -> File, server: Boolean, tooling: Boolean, allCandidatePaths: Sequence&lt;Path>, loader: ClassLoader, )</ID>
    <ID>NestedBlockDepth:ToolInfoCommand.kt:ToolInfoCommand$override suspend fun CommandContext.invoke(state: ToolContext&lt;ToolState>): CommandResult</ID>
    <ID>NestedBlockDepth:ToolShellCommand.kt:ToolShellCommand$override suspend fun CommandContext.invoke(state: ToolContext&lt;ToolState>): CommandResult</ID>
    <ID>NestedBlockDepth:ToolShellCommand.kt:ToolShellCommand$private fun displayFormattedError( exc: Throwable, message: String, advice: String? = null, internal: Boolean = false, stacktrace: Boolean = internal, withCause: Boolean = true, )</ID>
    <ID>NestedBlockDepth:main.kt:@Suppress("TooGenericExceptionCaught") private inline fun runInner(args: Array&lt;String>): Int</ID>
    <ID>PrintStackTrace:main.kt:err</ID>
    <ID>ReturnCount:ExecutionController.kt:ExecutionController$private fun toHost(polyglotException: PolyglotException): Throwable</ID>
    <ID>ReturnCount:InitCommand.kt:InitCommand$override suspend fun CommandContext.invoke(state: ToolContext&lt;ToolState>): CommandResult</ID>
    <ID>ReturnCount:RuntimeWorkdirManager.kt:RuntimeWorkdirManager$private fun nearestDirectoryWithAnyOfTheseFiles( files: Array&lt;String>, base: File? = null, depth: Int? = null, ): File?</ID>
    <ID>ReturnCount:ToolBuildCommand.kt:ToolBuildCommand$override suspend fun CommandContext.invoke(state: ToolContext&lt;ToolState>): CommandResult</ID>
    <ID>ReturnCount:ToolShellCommand.kt:ToolShellCommand$override suspend fun CommandContext.invoke(state: ToolContext&lt;ToolState>): CommandResult</ID>
    <ID>SwallowedException:PersistedError.kt:PersistedError.RuntimeInfo$err: Throwable</ID>
    <ID>ThrowsCount:ToolShellCommand.kt:ToolShellCommand$override fun PolyglotEngineConfiguration.configureEngine(langs: EnumSet&lt;GuestLanguage>)</ID>
    <ID>TooGenericExceptionCaught:AbstractToolCommand.kt:AbstractToolCommand$err: Throwable</ID>
    <ID>TooGenericExceptionCaught:CommandTestRunner.kt:CommandTestRunner$thr: Throwable</ID>
    <ID>TooGenericExceptionCaught:PersistedError.kt:PersistedError.RuntimeInfo$err: Throwable</ID>
    <ID>TooGenericExceptionCaught:TestContext.kt:TestContext.Companion$err: Throwable</ID>
    <ID>TooGenericExceptionCaught:ToolInvokeCommand.kt:ToolInvokeCommand$err: Throwable</ID>
    <ID>TopLevelPropertyNaming:ToolInvokeCommand.kt:private const val jsHint = "package.json"</ID>
    <ID>TopLevelPropertyNaming:ToolInvokeCommand.kt:private const val pyHint = "requirements.txt"</ID>
    <ID>UnusedParameter:InitCommand.kt:InitCommand$template: RenderableTemplate</ID>
    <ID>UnusedPrivateClass:InitCommand.kt:InitCommand$PreparedProject</ID>
    <ID>UnusedPrivateClass:InitCommand.kt:InitCommand$ProjectTemplate</ID>
  </CurrentIssues>
</SmellBaseline>
