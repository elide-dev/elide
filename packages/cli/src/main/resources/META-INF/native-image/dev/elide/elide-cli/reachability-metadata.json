{
  "reflection": [
    {
      "type": "Main",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "[B"
    },
    {
      "type": "[C"
    },
    {
      "type": "[D"
    },
    {
      "type": "[F"
    },
    {
      "type": "[I"
    },
    {
      "type": "[J"
    },
    {
      "type": "[Ljava.lang.Object;"
    },
    {
      "type": "[Ljava.lang.String;"
    },
    {
      "type": "[Ljavax.management.openmbean.CompositeData;"
    },
    {
      "type": "[Lorg.jetbrains.kotlin.backend.common.extensions.IrGenerationExtension;"
    },
    {
      "type": "[Lorg.jetbrains.kotlin.backend.jvm.extensions.ClassGeneratorExtension;"
    },
    {
      "type": "[Lorg.jetbrains.kotlin.codegen.extensions.ClassBuilderInterceptorExtension;"
    },
    {
      "type": "[Lorg.jetbrains.kotlin.codegen.extensions.ClassFileFactoryFinalizerExtension;"
    },
    {
      "type": "[Lorg.jetbrains.kotlin.com.intellij.lang.jvm.facade.JvmElementProvider;"
    },
    {
      "type": "[Lorg.jetbrains.kotlin.com.intellij.openapi.editor.event.DocumentListener;"
    },
    {
      "type": "[Lorg.jetbrains.kotlin.com.intellij.psi.PsiDirectory;"
    },
    {
      "type": "[Lorg.jetbrains.kotlin.com.intellij.psi.PsiElementFinder;"
    },
    {
      "type": "[Lorg.jetbrains.kotlin.com.intellij.psi.augment.PsiAugmentProvider;",
      "unsafeAllocated": true
    },
    {
      "type": "[Lorg.jetbrains.kotlin.com.intellij.util.KeyedLazyInstanceEP;"
    },
    {
      "type": "[Lorg.jetbrains.kotlin.extensions.CompilerConfigurationExtension;"
    },
    {
      "type": "[Lorg.jetbrains.kotlin.extensions.PreprocessedVirtualFileFactoryExtension;"
    },
    {
      "type": "[Lorg.jetbrains.kotlin.fir.extensions.FirAnalysisHandlerExtension;",
      "unsafeAllocated": true
    },
    {
      "type": "[Lorg.jetbrains.kotlin.fir.extensions.FirExtensionRegistrarAdapter;"
    },
    {
      "type": "[Lorg.jetbrains.kotlin.psi.KtAnnotation;"
    },
    {
      "type": "[Lorg.jetbrains.kotlin.psi.KtAnnotationEntry;"
    },
    {
      "type": "[Lorg.jetbrains.kotlin.psi.KtAnnotationUseSiteTarget;"
    },
    {
      "type": "[Lorg.jetbrains.kotlin.psi.KtBackingField;"
    },
    {
      "type": "[Lorg.jetbrains.kotlin.psi.KtBlockStringTemplateEntry;"
    },
    {
      "type": "[Lorg.jetbrains.kotlin.psi.KtClass;"
    },
    {
      "type": "[Lorg.jetbrains.kotlin.psi.KtClassBody;"
    },
    {
      "type": "[Lorg.jetbrains.kotlin.psi.KtClassInitializer;"
    },
    {
      "type": "[Lorg.jetbrains.kotlin.psi.KtClassLiteralExpression;"
    },
    {
      "type": "[Lorg.jetbrains.kotlin.psi.KtCollectionLiteralExpression;"
    },
    {
      "type": "[Lorg.jetbrains.kotlin.psi.KtConstantExpression;"
    },
    {
      "type": "[Lorg.jetbrains.kotlin.psi.KtConstructorCalleeExpression;"
    },
    {
      "type": "[Lorg.jetbrains.kotlin.psi.KtContextReceiver;"
    },
    {
      "type": "[Lorg.jetbrains.kotlin.psi.KtContextReceiverList;"
    },
    {
      "type": "[Lorg.jetbrains.kotlin.psi.KtContractEffect;"
    },
    {
      "type": "[Lorg.jetbrains.kotlin.psi.KtContractEffectList;"
    },
    {
      "type": "[Lorg.jetbrains.kotlin.psi.KtDeclarationModifierList;"
    },
    {
      "type": "[Lorg.jetbrains.kotlin.psi.KtDelegatedSuperTypeEntry;"
    },
    {
      "type": "[Lorg.jetbrains.kotlin.psi.KtDotQualifiedExpression;"
    },
    {
      "type": "[Lorg.jetbrains.kotlin.psi.KtDynamicType;"
    },
    {
      "type": "[Lorg.jetbrains.kotlin.psi.KtEnumEntrySuperclassReferenceExpression;"
    },
    {
      "type": "[Lorg.jetbrains.kotlin.psi.KtEscapeStringTemplateEntry;"
    },
    {
      "type": "[Lorg.jetbrains.kotlin.psi.KtExpression;"
    },
    {
      "type": "[Lorg.jetbrains.kotlin.psi.KtFileAnnotationList;"
    },
    {
      "type": "[Lorg.jetbrains.kotlin.psi.KtFunctionType;"
    },
    {
      "type": "[Lorg.jetbrains.kotlin.psi.KtFunctionTypeReceiver;"
    },
    {
      "type": "[Lorg.jetbrains.kotlin.psi.KtImportAlias;"
    },
    {
      "type": "[Lorg.jetbrains.kotlin.psi.KtImportDirective;"
    },
    {
      "type": "[Lorg.jetbrains.kotlin.psi.KtImportList;"
    },
    {
      "type": "[Lorg.jetbrains.kotlin.psi.KtInitializerList;"
    },
    {
      "type": "[Lorg.jetbrains.kotlin.psi.KtIntersectionType;"
    },
    {
      "type": "[Lorg.jetbrains.kotlin.psi.KtLambdaArgument;"
    },
    {
      "type": "[Lorg.jetbrains.kotlin.psi.KtLiteralStringTemplateEntry;"
    },
    {
      "type": "[Lorg.jetbrains.kotlin.psi.KtModifierList;"
    },
    {
      "type": "[Lorg.jetbrains.kotlin.psi.KtNameReferenceExpression;"
    },
    {
      "type": "[Lorg.jetbrains.kotlin.psi.KtNamedFunction;"
    },
    {
      "type": "[Lorg.jetbrains.kotlin.psi.KtNullableType;"
    },
    {
      "type": "[Lorg.jetbrains.kotlin.psi.KtObjectDeclaration;"
    },
    {
      "type": "[Lorg.jetbrains.kotlin.psi.KtPackageDirective;"
    },
    {
      "type": "[Lorg.jetbrains.kotlin.psi.KtParameter;"
    },
    {
      "type": "[Lorg.jetbrains.kotlin.psi.KtParameterList;"
    },
    {
      "type": "[Lorg.jetbrains.kotlin.psi.KtPrimaryConstructor;"
    },
    {
      "type": "[Lorg.jetbrains.kotlin.psi.KtProperty;"
    },
    {
      "type": "[Lorg.jetbrains.kotlin.psi.KtPropertyAccessor;"
    },
    {
      "type": "[Lorg.jetbrains.kotlin.psi.KtScript;"
    },
    {
      "type": "[Lorg.jetbrains.kotlin.psi.KtSecondaryConstructor;"
    },
    {
      "type": "[Lorg.jetbrains.kotlin.psi.KtSimpleNameStringTemplateEntry;"
    },
    {
      "type": "[Lorg.jetbrains.kotlin.psi.KtStringInterpolationPrefix;"
    },
    {
      "type": "[Lorg.jetbrains.kotlin.psi.KtStringTemplateEntry;"
    },
    {
      "type": "[Lorg.jetbrains.kotlin.psi.KtStringTemplateExpression;"
    },
    {
      "type": "[Lorg.jetbrains.kotlin.psi.KtSuperTypeCallEntry;"
    },
    {
      "type": "[Lorg.jetbrains.kotlin.psi.KtSuperTypeEntry;"
    },
    {
      "type": "[Lorg.jetbrains.kotlin.psi.KtSuperTypeList;"
    },
    {
      "type": "[Lorg.jetbrains.kotlin.psi.KtTypeAlias;"
    },
    {
      "type": "[Lorg.jetbrains.kotlin.psi.KtTypeArgumentList;"
    },
    {
      "type": "[Lorg.jetbrains.kotlin.psi.KtTypeConstraint;"
    },
    {
      "type": "[Lorg.jetbrains.kotlin.psi.KtTypeConstraintList;"
    },
    {
      "type": "[Lorg.jetbrains.kotlin.psi.KtTypeParameter;"
    },
    {
      "type": "[Lorg.jetbrains.kotlin.psi.KtTypeParameterList;"
    },
    {
      "type": "[Lorg.jetbrains.kotlin.psi.KtTypeProjection;"
    },
    {
      "type": "[Lorg.jetbrains.kotlin.psi.KtTypeReference;"
    },
    {
      "type": "[Lorg.jetbrains.kotlin.psi.KtUserType;"
    },
    {
      "type": "[Lorg.jetbrains.kotlin.psi.KtValueArgument;"
    },
    {
      "type": "[Lorg.jetbrains.kotlin.psi.KtValueArgumentList;"
    },
    {
      "type": "[Lorg.jetbrains.kotlin.psi.KtValueArgumentName;"
    },
    {
      "type": "[S"
    },
    {
      "type": "[Z"
    },
    {
      "type": "ch.qos.logback.classic.encoder.PatternLayoutEncoder",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "ch.qos.logback.classic.joran.SerializedModelConfigurator",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "ch.qos.logback.classic.jul.LevelChangePropagator",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "ch.qos.logback.classic.sift.MDCBasedDiscriminator",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "setDefaultValue",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setKey",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "ch.qos.logback.classic.sift.SiftingAppender",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "setDiscriminator",
          "parameterTypes": [
            "ch.qos.logback.core.sift.Discriminator"
          ]
        }
      ]
    },
    {
      "type": "ch.qos.logback.classic.spi.LogbackServiceProvider"
    },
    {
      "type": "ch.qos.logback.core.ConsoleAppender",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "setTarget",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setWithJansi",
          "parameterTypes": [
            "boolean"
          ]
        }
      ]
    },
    {
      "type": "ch.qos.logback.core.OutputStreamAppender",
      "methods": [
        {
          "name": "setEncoder",
          "parameterTypes": [
            "ch.qos.logback.core.encoder.Encoder"
          ]
        },
        {
          "name": "setImmediateFlush",
          "parameterTypes": [
            "boolean"
          ]
        }
      ]
    },
    {
      "type": "ch.qos.logback.core.encoder.Encoder"
    },
    {
      "type": "ch.qos.logback.core.encoder.LayoutWrappingEncoder",
      "methods": [
        {
          "name": "setParent",
          "parameterTypes": [
            "ch.qos.logback.core.spi.ContextAware"
          ]
        }
      ]
    },
    {
      "type": "ch.qos.logback.core.pattern.PatternLayoutEncoderBase",
      "methods": [
        {
          "name": "setPattern",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "ch.qos.logback.core.sift.Discriminator"
    },
    {
      "type": "ch.qos.logback.core.spi.ContextAware"
    },
    {
      "type": "ch.qos.logback.core.status.NopStatusListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.github.ajalt.clikt.core.BaseCliktCommand",
      "allDeclaredFields": true
    },
    {
      "type": "com.github.ajalt.mordant.terminal.terminalinterface.ffm.TerminalInterfaceProviderFfm"
    },
    {
      "type": "com.github.ajalt.mordant.terminal.terminalinterface.jna.TerminalInterfaceProviderJna"
    },
    {
      "type": "com.github.ajalt.mordant.terminal.terminalinterface.nativeimage.TerminalInterfaceProviderNativeImage"
    },
    {
      "type": "com.google.common.jimfs.SystemJimfsFileSystemProvider",
      "methods": [
        {
          "name": "removeFileSystemRunnable",
          "parameterTypes": [
            "java.net.URI"
          ]
        }
      ]
    },
    {
      "type": "com.google.common.util.concurrent.AbstractFutureState",
      "fields": [
        {
          "name": "listenersField"
        },
        {
          "name": "valueField"
        },
        {
          "name": "waitersField"
        }
      ]
    },
    {
      "type": "com.google.common.util.concurrent.AbstractFutureState$Waiter",
      "fields": [
        {
          "name": "next"
        },
        {
          "name": "thread"
        }
      ]
    },
    {
      "type": "com.oracle.graal.python.PythonLanguageProvider"
    },
    {
      "type": "com.oracle.graal.python.resources.PythonResourceProvider"
    },
    {
      "type": "com.oracle.svm.core.jdk.resources.NativeImageResourceFileSystemProvider"
    },
    {
      "type": "com.oracle.truffle.api.debug.impl.DebuggerInstrumentProvider"
    },
    {
      "type": "com.oracle.truffle.api.nodes.RootNode",
      "fields": [
        {
          "name": "lock"
        }
      ]
    },
    {
      "type": "com.oracle.truffle.api.utilities.CyclicAssumption",
      "fields": [
        {
          "name": "assumption"
        }
      ]
    },
    {
      "type": "com.oracle.truffle.espresso.EspressoLanguageProvider"
    },
    {
      "type": "com.oracle.truffle.espresso.analysis.hierarchy.SingleImplementor",
      "fields": [
        {
          "name": "currentState"
        }
      ]
    },
    {
      "type": "com.oracle.truffle.espresso.jdwp.impl.JDWPInstrumentProvider"
    },
    {
      "type": "com.oracle.truffle.espresso.resources.libs.EspressoLibsResourcesProvider"
    },
    {
      "type": "com.oracle.truffle.espresso.resources.runtime.EspressoRuntimeResourceProvider"
    },
    {
      "type": "com.oracle.truffle.espresso.vm.VM$LongCASProbe",
      "fields": [
        {
          "name": "foo"
        }
      ]
    },
    {
      "type": "com.oracle.truffle.js.lang.JavaScriptLanguageProvider"
    },
    {
      "type": "com.oracle.truffle.js.parser.GraalJSEvaluator"
    },
    {
      "type": "com.oracle.truffle.js.runtime.builtins.JSFunctionData",
      "fields": [
        {
          "name": "callTarget"
        },
        {
          "name": "constructNewTarget"
        },
        {
          "name": "constructTarget"
        },
        {
          "name": "rootNode"
        }
      ]
    },
    {
      "type": "com.oracle.truffle.llvm.nativemode.NativeConfigurationFactory"
    },
    {
      "type": "com.oracle.truffle.llvm.nativemode.resources.SulongNativeLibResourceProvider"
    },
    {
      "type": "com.oracle.truffle.llvm.nfi.SulongNFIProvider"
    },
    {
      "type": "com.oracle.truffle.llvm.runtime.LLVMLanguageProvider"
    },
    {
      "type": "com.oracle.truffle.nfi.NFILanguageProvider"
    },
    {
      "type": "com.oracle.truffle.nfi.backend.libffi.LibFFILanguageProvider"
    },
    {
      "type": "com.oracle.truffle.nfi.backend.spi.util.ProfiledArrayBuilder$ArraySizeMemento",
      "fields": [
        {
          "name": "assumption"
        },
        {
          "name": "profiledInitialSize"
        }
      ]
    },
    {
      "type": "com.oracle.truffle.object.CoreLayoutFactory"
    },
    {
      "type": "com.oracle.truffle.object.DynamicObjectLibraryImplGen$DynamicObjectLibraryProvider"
    },
    {
      "type": "com.oracle.truffle.object.ShapeImpl",
      "fields": [
        {
          "name": "leafAssumption"
        },
        {
          "name": "sharedPropertyAssumptions"
        },
        {
          "name": "transitionMap"
        }
      ]
    },
    {
      "type": "com.oracle.truffle.object.TrieTransitionMap",
      "fields": [
        {
          "name": "map"
        }
      ]
    },
    {
      "type": "com.oracle.truffle.polyglot.JDKSupportLibTruffleAttachResourceProvider"
    },
    {
      "type": "com.oracle.truffle.polyglot.PolyglotImpl"
    },
    {
      "type": "com.oracle.truffle.polyglot.PolyglotLanguageInstance",
      "fields": [
        {
          "name": "guestToHostCodeCache"
        }
      ]
    },
    {
      "type": "com.oracle.truffle.polyglot.WeakAssumedValue",
      "fields": [
        {
          "name": "profile"
        }
      ]
    },
    {
      "type": "com.oracle.truffle.regex.RegexLanguageProvider"
    },
    {
      "type": "com.oracle.truffle.runtime.DefaultLoopNodeFactory"
    },
    {
      "type": "com.oracle.truffle.runtime.OptimizedCallTarget",
      "fields": [
        {
          "name": "argumentsProfile"
        },
        {
          "name": "nodeRewritingAssumption"
        },
        {
          "name": "returnProfile"
        },
        {
          "name": "speculationLog"
        },
        {
          "name": "validRootAssumption"
        }
      ]
    },
    {
      "type": "com.oracle.truffle.runtime.hotspot.HotSpotTruffleRuntimeAccess"
    },
    {
      "type": "com.oracle.truffle.runtime.jfr.impl.ProviderImpl"
    },
    {
      "type": "com.oracle.truffle.tools.chromeinspector.instrument.InspectorInstrumentProvider"
    },
    {
      "type": "com.oracle.truffle.tools.chromeinspector.instrument.OutputConsumerInstrumentProvider"
    },
    {
      "type": "com.oracle.truffle.tools.chromeinspector.instrument.TypeProfileInstrumentProvider"
    },
    {
      "type": "com.oracle.truffle.tools.coverage.impl.CoverageInstrumentProvider"
    },
    {
      "type": "com.oracle.truffle.tools.dap.instrument.DAPInstrumentProvider"
    },
    {
      "type": "com.oracle.truffle.tools.dap.instrument.OutputConsumerInstrumentProvider"
    },
    {
      "type": "com.oracle.truffle.tools.profiler.impl.CPUSamplerInstrumentProvider"
    },
    {
      "type": "com.oracle.truffle.tools.profiler.impl.CPUTracerInstrumentProvider"
    },
    {
      "type": "com.oracle.truffle.tools.profiler.impl.HeapMonitorInstrumentProvider"
    },
    {
      "type": "com.oracle.truffle.tools.profiler.impl.MemoryTracerInstrumentProvider"
    },
    {
      "type": "com.sun.crypto.provider.AESCipher$General",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.crypto.provider.ARCFOURCipher",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.crypto.provider.ChaCha20Cipher$ChaCha20Poly1305",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.crypto.provider.DESCipher",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.crypto.provider.DESedeCipher",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.crypto.provider.DHParameters",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.crypto.provider.GaloisCounterMode$AESGCM",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.crypto.provider.HmacCore$HmacSHA384",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.crypto.provider.TlsMasterSecretGenerator",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.management.GarbageCollectorMXBean"
    },
    {
      "type": "com.sun.management.GcInfo"
    },
    {
      "type": "com.sun.management.HotSpotDiagnosticMXBean"
    },
    {
      "type": "com.sun.management.ThreadMXBean"
    },
    {
      "type": "com.sun.management.UnixOperatingSystemMXBean"
    },
    {
      "type": "com.sun.management.VMOption"
    },
    {
      "type": "com.sun.management.internal.GarbageCollectorExtImpl"
    },
    {
      "type": "com.sun.management.internal.HotSpotDiagnostic"
    },
    {
      "type": "com.sun.management.internal.HotSpotThreadImpl"
    },
    {
      "type": "com.sun.management.internal.OperatingSystemImpl"
    },
    {
      "type": "com.sun.management.internal.VirtualThreadSchedulerImpls$VirtualThreadSchedulerImpl"
    },
    {
      "type": "elide.exec.ActionScope$DefaultActionScope",
      "fields": [
        {
          "name": "boundScope$volatile"
        }
      ]
    },
    {
      "type": "elide.runtime.exec.$GuestExecutorFactory$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.exec.$GuestExecutorFactory$Executor0$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.cfg.$GuestIOConfiguration$Intercepted$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.cfg.$GuestVMConfiguration$Intercepted$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.cfg.$GuestVMEEConfig$Intercepted$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.cfg.$GuestVMEESandboxConfig$Intercepted$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.cfg.$GuestVMInspectConfig$Intercepted$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.cfg.$JsRuntimeConfig$Intercepted$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.cfg.$JsRuntimeConfig$JsEsmConfig$Intercepted$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.cfg.$JsRuntimeConfig$JsNpmConfig$Intercepted$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.internals.$IntrinsicsManager$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.internals.intrinsics.$ElideIntrinsic$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.internals.intrinsics.$ElideIntrinsic$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.internals.intrinsics.js.abort.$AbortControllerIntrinsic$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.internals.intrinsics.js.abort.$AbortControllerIntrinsic$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.internals.intrinsics.js.abort.$AbortSignalIntrinsic$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.internals.intrinsics.js.abort.$AbortSignalIntrinsic$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.internals.intrinsics.js.base64.$Base64Intrinsic$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.internals.intrinsics.js.base64.$Base64Intrinsic$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.internals.intrinsics.js.codec.$JsEncodingIntrinsics$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.internals.intrinsics.js.codec.$JsEncodingIntrinsics$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.internals.intrinsics.js.console.$ConsoleIntrinsic$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.internals.intrinsics.js.console.$ConsoleIntrinsic$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.internals.intrinsics.js.crypto.$WebCryptoIntrinsic$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.internals.intrinsics.js.crypto.$WebCryptoIntrinsic$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.internals.intrinsics.js.crypto.$WebCryptoKey$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.internals.intrinsics.js.crypto.$WebCryptoKey$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.internals.intrinsics.js.fetch.$FetchIntrinsic$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.internals.intrinsics.js.fetch.$FetchIntrinsic$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.internals.intrinsics.js.stream.$CoreStreamsIntrinsic$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.internals.intrinsics.js.stream.$CoreStreamsIntrinsic$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.internals.intrinsics.js.url.$URLIntrinsic$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.internals.intrinsics.js.url.$URLIntrinsic$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.internals.intrinsics.js.url.$URLSearchParamsIntrinsic$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.internals.intrinsics.js.url.$URLSearchParamsIntrinsic$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.internals.intrinsics.js.webstreams.$ReadableStreamIntrinsic$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.internals.intrinsics.js.webstreams.$ReadableStreamIntrinsic$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.internals.intrinsics.js.webstreams.$TransformStreamIntrinsic$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.internals.intrinsics.js.webstreams.$TransformStreamIntrinsic$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.internals.intrinsics.js.webstreams.$WritableStreamIntrinsic$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.internals.intrinsics.js.webstreams.$WritableStreamIntrinsic$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.internals.js.$JsTimerExecutorProviderImpl$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.internals.js.$JsTimerExecutorProviderImpl$Provide0$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.internals.js.$JsTimersIntrinsic$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.internals.js.$JsTimersIntrinsic$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.internals.js.$JsTimersIntrinsic$Provide0$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.internals.js.JsTimersIntrinsic",
      "fields": [
        {
          "name": "execProvider"
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.internals.sqlite.$ElideSqliteModule$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.internals.sqlite.$ElideSqliteModule$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.internals.sqlite.$ElideSqliteModule$Provide0$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.internals.testing.$ElideTestingModule$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.internals.testing.$ElideTestingModule$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.internals.testing.$ElideTestingModule$Provide0$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.internals.testing.$TestingRegistrarImpl$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.internals.vfs.$EmbeddedGuestVFSImpl$EmbeddedVFSConfigurationFactory$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.internals.vfs.$EmbeddedGuestVFSImpl$EmbeddedVFSConfigurationFactory$Spawn$graalvm0$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.internals.vfs.$GuestVFSPolicy$Intercepted$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.internals.vfs.$HostVFSImpl$HostVFSConfigurationFactory$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.internals.vfs.$HostVFSImpl$HostVFSConfigurationFactory$Spawn$graalvm0$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.intrinsics.$BuildTimeIntrinsicsResolver$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.intrinsics.$BuiltinIntrinsicsResolver$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.intrinsics.$ServiceIntrinsicsResolver$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.jvm.JvmSourceLoader",
      "allDeclaredFields": true,
      "allDeclaredMethods": true,
      "allDeclaredConstructors": true
    },
    {
      "type": "elide.runtime.gvm.kotlin.scripting.ScriptWithMavenDepsConfiguration",
      "fields": [
        {
          "name": "INSTANCE"
        }
      ]
    },
    {
      "type": "elide.runtime.intrinsics.ai.$ElideLLMModule$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.intrinsics.ai.$ElideLLMModule$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.intrinsics.js.err.$ValueErrorIntrinsic$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.intrinsics.js.err.$ValueErrorIntrinsic$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.javascript.$MessageChannelBuiltin$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.javascript.$MessageChannelBuiltin$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.javascript.$NavigatorBuiltin$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.javascript.$NavigatorBuiltin$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.javascript.$QueueMicrotaskCallable$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.javascript.$QueueMicrotaskCallable$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.javascript.$StructuredCloneBuiltin$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.javascript.$StructuredCloneBuiltin$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.lang.typescript.TypeScriptLanguageProvider"
    },
    {
      "type": "elide.runtime.node.asserts.$NodeAssertModule$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.asserts.$NodeAssertModule$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.asserts.$NodeAssertStrictModule$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.asserts.$NodeAssertStrictModule$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.buffer.$NodeBufferModule$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.buffer.$NodeBufferModule$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.childProcess.$NodeChildProcessModule$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.childProcess.$NodeChildProcessModule$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.childProcess.$NodeChildProcessModule$IpcServer$graalvm1$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.childProcess.$NodeChildProcessModule$Provide0$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.cluster.$NodeClusterModule$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.cluster.$NodeClusterModule$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.console.$NodeConsoleModule$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.console.$NodeConsoleModule$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.crypto.$NodeCryptoModule$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.crypto.$NodeCryptoModule$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.dgram.$NodeDatagramModule$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.dgram.$NodeDatagramModule$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.diagnostics.$NodeDiagnosticsChannelModule$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.diagnostics.$NodeDiagnosticsChannelModule$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.dns.$NodeDNSModule$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.dns.$NodeDNSModule$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.dns.$NodeDNSPromisesModule$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.dns.$NodeDNSPromisesModule$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.domain.$NodeDomainModule$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.domain.$NodeDomainModule$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.events.$NodeEventsModule$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.events.$NodeEventsModule$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.events.$NodeEventsModule$Provide0$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.events.$NodeEventsModuleFacade$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.fs.$NodeFilesystemModule$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.fs.$NodeFilesystemModule$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.fs.$NodeFilesystemModule$ProvidePromises1$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.fs.$NodeFilesystemModule$ProvideStd0$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.fs.$VfsInitializerListener$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.http.$NodeHttpModule$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.http.$NodeHttpModule$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.http2.$NodeHttp2Module$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.http2.$NodeHttp2Module$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.https.$NodeHttpsModule$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.https.$NodeHttpsModule$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.inspector.$NodeInspectorModule$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.inspector.$NodeInspectorModule$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.inspector.$NodeInspectorPromisesModule$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.inspector.$NodeInspectorPromisesModule$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.module.$NodeModulesModule$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.module.$NodeModulesModule$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.net.$NodeNetworkModule$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.net.$NodeNetworkModule$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.os.$CPUInfoData$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.os.$CPUTimingsData$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.os.$NetworkInterfaceInfoData$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.os.$NodeOperatingSystem$BaseOS$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.os.$NodeOperatingSystem$Posix$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.os.$NodeOperatingSystem$Win32$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.os.$NodeOperatingSystemModule$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.os.$NodeOperatingSystemModule$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.os.$NodeOperatingSystemModule$Provide0$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.path.$NodePathsModule$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.path.$NodePathsModule$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.perfHooks.$NodePerformanceHooksModule$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.perfHooks.$NodePerformanceHooksModule$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.process.$NodeProcessModule$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.process.$NodeProcessModule$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.querystring.$NodeQuerystringModule$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.querystring.$NodeQuerystringModule$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.readline.$NodeReadlineModule$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.readline.$NodeReadlineModule$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.readline.$NodeReadlinePromisesModule$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.readline.$NodeReadlinePromisesModule$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.stream.$NodeStreamConsumersModule$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.stream.$NodeStreamConsumersModule$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.stream.$NodeStreamConsumersModule$Provide$graalvm0$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.stream.$NodeStreamModule$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.stream.$NodeStreamModule$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.stream.$NodeStreamPromisesModule$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.stream.$NodeStreamPromisesModule$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.stream.$NodeStreamPromisesModule$Provide$graalvm0$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.stream.$NodeStreamWebModule$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.stream.$NodeStreamWebModule$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.stream.$NodeStreamWebModule$Provide$graalvm0$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.stringDecoder.$NodeStringDecoderModule$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.stringDecoder.$NodeStringDecoderModule$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.stringDecoder.$NodeStringDecoderModule$Provide$graalvm0$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.test.$NodeTestModule$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.test.$NodeTestModule$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.url.$NodeURLModule$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.url.$NodeURLModule$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.url.$NodeURLModule$Provide$graalvm0$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.worker.$NodeWorkerModule$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.worker.$NodeWorkerModule$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.zlib.$NodeZlibModule$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.zlib.$NodeZlibModule$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.telemetry.client.$DefaultTelemetryClient$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.telemetry.manager.$DefaultTelemetryManager$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.cli.$Elide$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.cli.$Elide$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.cli.AOTApplicationContextConfigurer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.cli.AbstractSubcommand",
      "allDeclaredFields": true,
      "allDeclaredMethods": true
    },
    {
      "type": "elide.tool.cli.AbstractToolCommand",
      "allDeclaredFields": true,
      "allDeclaredMethods": true
    },
    {
      "type": "elide.tool.cli.AotConstantPropertySources"
    },
    {
      "type": "elide.tool.cli.CliCommandInvocation",
      "allDeclaredFields": true
    },
    {
      "type": "elide.tool.cli.DeducedEnvironmentConfigurer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.cli.Elide",
      "allDeclaredFields": true,
      "allDeclaredMethods": true
    },
    {
      "type": "elide.tool.cli.ElideKt",
      "allDeclaredFields": true,
      "allDeclaredMethods": true
    },
    {
      "type": "elide.tool.cli.EnvironmentPropertiesOptimizationLoader"
    },
    {
      "type": "elide.tool.cli.KnownMissingTypesOptimizationLoader"
    },
    {
      "type": "elide.tool.cli.NettyPropertiesAOTContextConfigurer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.cli.ProjectAwareSubcommand",
      "allDeclaredFields": true,
      "allDeclaredMethods": true,
      "allDeclaredConstructors": true
    },
    {
      "type": "elide.tool.cli.PublishersOptimizationsLoader"
    },
    {
      "type": "elide.tool.cli.StaticServicesLoader"
    },
    {
      "type": "elide.tool.cli.ToolCommandBase",
      "allDeclaredFields": true,
      "allDeclaredMethods": true
    },
    {
      "type": "elide.tool.cli.cmd.builder.$ToolBuildCommand$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.cli.cmd.builder.$ToolBuildCommand$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.cli.cmd.builder.$ToolWhichCommand$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.cli.cmd.builder.ToolBuildCommand",
      "allDeclaredFields": true,
      "allDeclaredMethods": true,
      "allDeclaredConstructors": true
    },
    {
      "type": "elide.tool.cli.cmd.builder.ToolWhichCommand",
      "allDeclaredFields": true,
      "allDeclaredMethods": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.cli.cmd.checks.$ToolCheckCommand$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.cli.cmd.checks.ToolCheckCommand",
      "allDeclaredFields": true,
      "allDeclaredMethods": true,
      "allDeclaredConstructors": true
    },
    {
      "type": "elide.tool.cli.cmd.deps.$AddCommand$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.cli.cmd.deps.$AddCommand$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.cli.cmd.deps.$InstallCommand$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.cli.cmd.deps.$InstallCommand$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.cli.cmd.deps.AddCommand",
      "allDeclaredFields": true,
      "allDeclaredMethods": true,
      "allDeclaredConstructors": true
    },
    {
      "type": "elide.tool.cli.cmd.deps.InstallCommand",
      "allDeclaredFields": true,
      "allDeclaredMethods": true,
      "allDeclaredConstructors": true
    },
    {
      "type": "elide.tool.cli.cmd.discord.$ToolDiscordCommand$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.cli.cmd.discord.$ToolDiscordCommand$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.cli.cmd.discord.ToolDiscordCommand",
      "allDeclaredFields": true,
      "allDeclaredMethods": true
    },
    {
      "type": "elide.tool.cli.cmd.help.$HelpCommand$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.cli.cmd.help.$HelpCommand$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.cli.cmd.help.HelpCommand",
      "allDeclaredFields": true,
      "allDeclaredMethods": true,
      "allDeclaredConstructors": true
    },
    {
      "type": "elide.tool.cli.cmd.help.HelpCommand$HelpTopic",
      "allDeclaredFields": true,
      "allDeclaredMethods": true,
      "allDeclaredConstructors": true
    },
    {
      "type": "elide.tool.cli.cmd.help.HelpCommand$JvmHelpCommand",
      "allDeclaredFields": true,
      "allDeclaredMethods": true,
      "allDeclaredConstructors": true
    },
    {
      "type": "elide.tool.cli.cmd.help.HelpCommand$LockfilesHelpCommand",
      "allDeclaredFields": true,
      "allDeclaredMethods": true,
      "allDeclaredConstructors": true
    },
    {
      "type": "elide.tool.cli.cmd.help.HelpCommand$NodeApiHelpCommand",
      "allDeclaredFields": true,
      "allDeclaredMethods": true,
      "allDeclaredConstructors": true
    },
    {
      "type": "elide.tool.cli.cmd.help.HelpCommand$PolyglotHelpCommand",
      "allDeclaredFields": true,
      "allDeclaredMethods": true,
      "allDeclaredConstructors": true
    },
    {
      "type": "elide.tool.cli.cmd.help.HelpCommand$ProjectHelpCommand",
      "allDeclaredFields": true,
      "allDeclaredMethods": true,
      "allDeclaredConstructors": true
    },
    {
      "type": "elide.tool.cli.cmd.help.HelpCommand$ReactJsHelpCommand",
      "allDeclaredFields": true,
      "allDeclaredMethods": true,
      "allDeclaredConstructors": true
    },
    {
      "type": "elide.tool.cli.cmd.help.HelpCommand$ServersHelpCommand",
      "allDeclaredFields": true,
      "allDeclaredMethods": true,
      "allDeclaredConstructors": true
    },
    {
      "type": "elide.tool.cli.cmd.help.HelpCommand$TypescriptHelpCommand",
      "allDeclaredFields": true,
      "allDeclaredMethods": true,
      "allDeclaredConstructors": true
    },
    {
      "type": "elide.tool.cli.cmd.info.$ToolInfoCommand$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.cli.cmd.info.$ToolInfoCommand$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.cli.cmd.info.ToolInfoCommand",
      "allDeclaredFields": true,
      "allDeclaredMethods": true
    },
    {
      "type": "elide.tool.cli.cmd.init.$InitCommand$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.cli.cmd.init.$InitCommand$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.cli.cmd.init.InitCommand",
      "allDeclaredFields": true,
      "allDeclaredMethods": true,
      "allDeclaredConstructors": true
    },
    {
      "type": "elide.tool.cli.cmd.pkl.$ToolPklCommand$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.cli.cmd.pkl.ToolPklCommand",
      "allDeclaredFields": true,
      "allDeclaredMethods": true
    },
    {
      "type": "elide.tool.cli.cmd.project.$ToolProjectCommand$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.cli.cmd.project.$ToolProjectCommand$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.cli.cmd.project.ToolProjectCommand",
      "allDeclaredFields": true,
      "allDeclaredMethods": true
    },
    {
      "type": "elide.tool.cli.cmd.repl.$DebugConfig$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.cli.cmd.repl.$EnvironmentConfig$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.cli.cmd.repl.$InspectorConfig$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.cli.cmd.repl.$LanguageSelector$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.cli.cmd.repl.$ToolShellCommand$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.cli.cmd.repl.$ToolShellCommand$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.cli.cmd.repl.DebugConfig",
      "allDeclaredFields": true,
      "allDeclaredMethods": true
    },
    {
      "type": "elide.tool.cli.cmd.repl.EnvironmentConfig",
      "allDeclaredFields": true,
      "allDeclaredMethods": true
    },
    {
      "type": "elide.tool.cli.cmd.repl.InspectorConfig",
      "allDeclaredFields": true,
      "allDeclaredMethods": true
    },
    {
      "type": "elide.tool.cli.cmd.repl.LanguageSelector",
      "allDeclaredFields": true,
      "allDeclaredMethods": true
    },
    {
      "type": "elide.tool.cli.cmd.repl.ToolShellCommand",
      "allDeclaredFields": true,
      "allDeclaredMethods": true
    },
    {
      "type": "elide.tool.cli.cmd.runner.$DebugConfig$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.cli.cmd.runner.$EnvironmentConfig$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.cli.cmd.runner.$InspectorConfig$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.cli.cmd.runner.$LanguageSelector$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.cli.cmd.runner.$ToolTestCommand$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.cli.cmd.runner.$ToolTestCommand$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.cli.cmd.runner.DebugConfig",
      "allDeclaredFields": true
    },
    {
      "type": "elide.tool.cli.cmd.runner.EnvironmentConfig",
      "allDeclaredFields": true
    },
    {
      "type": "elide.tool.cli.cmd.runner.InspectorConfig",
      "allDeclaredFields": true
    },
    {
      "type": "elide.tool.cli.cmd.runner.LanguageSelector",
      "allDeclaredFields": true
    },
    {
      "type": "elide.tool.cli.cmd.runner.ToolTestCommand",
      "allDeclaredFields": true,
      "allDeclaredMethods": true,
      "allDeclaredConstructors": true
    },
    {
      "type": "elide.tool.cli.cmd.tool.$ToolInvokeCommand$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.cli.cmd.tool.$ToolInvokeCommand$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.cli.cmd.tool.DelegatedToolCommand",
      "allDeclaredFields": true
    },
    {
      "type": "elide.tool.cli.cmd.tool.ToolInvokeCommand",
      "allDeclaredFields": true,
      "allDeclaredMethods": true,
      "allDeclaredConstructors": true
    },
    {
      "type": "elide.tool.cli.cmd.tool.jar.$JarToolAdapter$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.cli.cmd.tool.jar.$JarToolAdapter$JarCliTool$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.cli.cmd.tool.jar.$JarToolAdapter$JarCliTool$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.cli.cmd.tool.jar.JarToolAdapter",
      "allDeclaredFields": true,
      "allDeclaredMethods": true,
      "allDeclaredConstructors": true
    },
    {
      "type": "elide.tool.cli.cmd.tool.jar.JarToolAdapter$JarCliTool",
      "allDeclaredFields": true,
      "allDeclaredMethods": true,
      "allDeclaredConstructors": true
    },
    {
      "type": "elide.tool.cli.cmd.tool.javac.$JavaCompilerAdapter$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.cli.cmd.tool.javac.$JavaCompilerAdapter$JavacCliTool$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.cli.cmd.tool.javac.$JavaCompilerAdapter$JavacCliTool$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.cli.cmd.tool.javac.JavaCompilerAdapter",
      "allDeclaredFields": true,
      "allDeclaredMethods": true,
      "allDeclaredConstructors": true
    },
    {
      "type": "elide.tool.cli.cmd.tool.javac.JavaCompilerAdapter$JavacCliTool",
      "allDeclaredFields": true,
      "allDeclaredMethods": true,
      "allDeclaredConstructors": true
    },
    {
      "type": "elide.tool.cli.cmd.tool.javadoc.$JavadocToolAdapter$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.cli.cmd.tool.javadoc.$JavadocToolAdapter$JavadocCliTool$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.cli.cmd.tool.javadoc.$JavadocToolAdapter$JavadocCliTool$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.cli.cmd.tool.javadoc.JavadocToolAdapter",
      "allDeclaredFields": true,
      "allDeclaredMethods": true,
      "allDeclaredConstructors": true
    },
    {
      "type": "elide.tool.cli.cmd.tool.javadoc.JavadocToolAdapter$JavadocCliTool",
      "allDeclaredFields": true,
      "allDeclaredMethods": true,
      "allDeclaredConstructors": true
    },
    {
      "type": "elide.tool.cli.cmd.tool.kotlinc.$KotlinCompilerAdapter$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.cli.cmd.tool.kotlinc.$KotlinCompilerAdapter$KotlinCliTool$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.cli.cmd.tool.kotlinc.KotlinCompilerAdapter",
      "allDeclaredFields": true,
      "allDeclaredMethods": true,
      "allDeclaredConstructors": true
    },
    {
      "type": "elide.tool.cli.cmd.tool.kotlinc.KotlinCompilerAdapter$KotlinCliTool",
      "allDeclaredFields": true,
      "allDeclaredMethods": true,
      "allDeclaredConstructors": true
    },
    {
      "type": "elide.tool.cli.cmd.tool.nativeImage.$NativeImageAdapter$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.cli.cmd.tool.nativeImage.$NativeImageAdapter$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.cli.cmd.tool.nativeImage.$NativeImageAdapter$NativeImageCliTool$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.cli.cmd.tool.nativeImage.NativeImageAdapter$NativeImageCliTool",
      "allDeclaredFields": true
    },
    {
      "type": "elide.tool.cli.options.$AbstractEngineOptions$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.cli.options.$AccessControlOptions$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.cli.options.$CommonOptions$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.cli.options.$EngineJavaOptions$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.cli.options.$EngineJavaScriptOptions$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.cli.options.$EngineJvmOptions$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.cli.options.$EngineKotlinOptions$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.cli.options.$EnginePythonOptions$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.cli.options.$LanguagePositionals$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.cli.options.$ProjectOptions$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.cli.options.$TelemetryOptions$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.cli.options.AbstractEngineOptions",
      "allDeclaredFields": true,
      "allDeclaredMethods": true
    },
    {
      "type": "elide.tool.cli.options.AccessControlOptions",
      "allDeclaredFields": true,
      "allDeclaredMethods": true
    },
    {
      "type": "elide.tool.cli.options.CommonOptions",
      "allDeclaredFields": true,
      "allDeclaredMethods": true,
      "methods": [
        {
          "name": "setDebug",
          "parameterTypes": [
            "boolean"
          ]
        },
        {
          "name": "setQuiet",
          "parameterTypes": [
            "boolean"
          ]
        },
        {
          "name": "setVerbose",
          "parameterTypes": [
            "boolean"
          ]
        }
      ]
    },
    {
      "type": "elide.tool.cli.options.EngineJavaOptions",
      "allDeclaredFields": true,
      "allDeclaredMethods": true
    },
    {
      "type": "elide.tool.cli.options.EngineJavaScriptOptions",
      "allDeclaredFields": true,
      "allDeclaredMethods": true
    },
    {
      "type": "elide.tool.cli.options.EngineJvmOptions",
      "allDeclaredFields": true,
      "allDeclaredMethods": true
    },
    {
      "type": "elide.tool.cli.options.EngineKotlinOptions",
      "allDeclaredFields": true,
      "allDeclaredMethods": true
    },
    {
      "type": "elide.tool.cli.options.EnginePythonOptions",
      "allDeclaredFields": true,
      "allDeclaredMethods": true
    },
    {
      "type": "elide.tool.cli.options.ProjectOptions",
      "allDeclaredFields": true
    },
    {
      "type": "elide.tool.cli.options.TelemetryOptions",
      "allDeclaredFields": true
    },
    {
      "type": "elide.tool.err.$DefaultStructuredErrorRecorder$DefaultMarkdownErrorRecorderProvider$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.err.$DefaultStructuredErrorRecorder$DefaultMarkdownErrorRecorderProvider$Get0$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.err.$ErrorHandlerAcquireTest$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.err.$ErrorRecorderAcquireTest$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.err.$ErrorRecorderWriteTest$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.io.$RuntimeWorkdirManager$DefaultRuntimeWorkdirManagerProvider$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.io.$RuntimeWorkdirManager$DefaultRuntimeWorkdirManagerProvider$Get0$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.io.$RuntimeWorkdirManager$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.listener.$TelemetryEventListener$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.listener.$TelemetryTriggers$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.project.$DefaultProjectManager$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.testing.$SanitySelfTest$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.transport.$EpollTest$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.transport.$KQueueTest$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.transport.$NativeCryptoTest$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.transport.$NativeTransportTest$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tooling.gvm.nativeImage.$NativeImageDriver$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tooling.js.JsBuildConfigurator"
    },
    {
      "type": "elide.tooling.js.resolver.$NpmResolver$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tooling.jvm.$JarTool$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tooling.jvm.$JavaCompiler$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tooling.jvm.$JavadocTool$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tooling.jvm.JavaCompiler$JavaDiagnosticsReceiver",
      "fields": [
        {
          "name": "errorsSeen$volatile"
        }
      ]
    },
    {
      "type": "elide.tooling.jvm.JvmBuildConfigurator"
    },
    {
      "type": "elide.tooling.jvm.JvmTestConfigurator"
    },
    {
      "type": "elide.tooling.jvm.resolver.$MavenAetherResolver$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tooling.jvm.resolver.$RepositorySystemFactory$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tooling.jvm.resolver.$RepositorySystemFactory$MavenLocator0$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tooling.jvm.resolver.$RepositorySystemFactory$RemoteRepositoryManager3$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tooling.jvm.resolver.$RepositorySystemFactory$RepositorySystem1$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tooling.jvm.resolver.$RepositorySystemFactory$RepositorySystemSession2$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tooling.jvm.resolver.MavenAetherResolver",
      "allDeclaredFields": true,
      "allDeclaredMethods": true,
      "allDeclaredConstructors": true,
      "fields": [
        {
          "name": "initialized$volatile"
        },
        {
          "name": "resolved$volatile"
        },
        {
          "name": "sealed$volatile"
        }
      ]
    },
    {
      "type": "elide.tooling.kotlin.$Detekt$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tooling.kotlin.$KotlinCompiler$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tooling.kotlin.KotlinCompiler$K2DiagnosticsListener",
      "fields": [
        {
          "name": "errorsSeen$volatile"
        }
      ]
    },
    {
      "type": "elide.tooling.project.$CompositePackageManifestService$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tooling.project.codecs.$ElidePackageManifestCodec$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tooling.project.codecs.$GradleCatalogCodec$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tooling.project.codecs.$MavenPomManifestCodec$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tooling.project.codecs.$NodeManifestCodec$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tooling.project.codecs.$PyProjectManifestCodec$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tooling.project.codecs.$PythonRequirementsManifestCodec$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tooling.project.manifest.ElidePackageManifest",
      "allDeclaredFields": true,
      "allDeclaredMethods": true,
      "allDeclaredConstructors": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.String",
            "java.lang.String",
            "java.lang.String",
            "java.util.List",
            "java.util.List",
            "java.util.Map",
            "java.util.Map",
            "elide.tooling.project.manifest.ElidePackageManifest$DependencyResolution",
            "elide.tooling.project.manifest.ElidePackageManifest$JavaScriptSettings",
            "elide.tooling.project.manifest.ElidePackageManifest$TypeScriptSettings",
            "elide.tooling.project.manifest.ElidePackageManifest$JvmSettings",
            "elide.tooling.project.manifest.ElidePackageManifest$KotlinSettings",
            "elide.tooling.project.manifest.ElidePackageManifest$PythonSettings",
            "elide.tooling.project.manifest.ElidePackageManifest$RubySettings",
            "elide.tooling.project.manifest.ElidePackageManifest$PklSettings",
            "elide.tooling.project.manifest.ElidePackageManifest$NativeImageSettings",
            "java.util.Map",
            "elide.tooling.project.manifest.ElidePackageManifest$TestingSettings",
            "elide.tooling.project.manifest.ElidePackageManifest$LockfileSettings"
          ]
        }
      ]
    },
    {
      "type": "elide.tooling.project.manifest.ElidePackageManifest$Artifact"
    },
    {
      "type": "elide.tooling.project.manifest.ElidePackageManifest$CoverageSettings",
      "allDeclaredFields": true,
      "allDeclaredMethods": true,
      "allDeclaredConstructors": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "boolean",
            "java.util.List"
          ]
        }
      ]
    },
    {
      "type": "elide.tooling.project.manifest.ElidePackageManifest$DependencyResolution",
      "allDeclaredFields": true,
      "allDeclaredMethods": true,
      "allDeclaredConstructors": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "elide.tooling.project.manifest.ElidePackageManifest$MavenDependencies",
            "elide.tooling.project.manifest.ElidePackageManifest$NpmDependencies",
            "elide.tooling.project.manifest.ElidePackageManifest$PipDependencies",
            "elide.tooling.project.manifest.ElidePackageManifest$GemDependencies"
          ]
        }
      ]
    },
    {
      "type": "elide.tooling.project.manifest.ElidePackageManifest$GemDependencies",
      "allDeclaredFields": true,
      "allDeclaredMethods": true,
      "allDeclaredConstructors": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.util.List",
            "java.util.List"
          ]
        },
        {
          "name": "<init>",
          "parameterTypes": [
            "java.util.List",
            "java.util.List",
            "java.util.List"
          ]
        }
      ]
    },
    {
      "type": "elide.tooling.project.manifest.ElidePackageManifest$GemPackage"
    },
    {
      "type": "elide.tooling.project.manifest.ElidePackageManifest$GradleCatalog"
    },
    {
      "type": "elide.tooling.project.manifest.ElidePackageManifest$JavaScriptSettings",
      "allDeclaredFields": true,
      "allDeclaredMethods": true,
      "allDeclaredConstructors": true
    },
    {
      "type": "elide.tooling.project.manifest.ElidePackageManifest$JvmSettings",
      "allDeclaredFields": true,
      "allDeclaredMethods": true,
      "allDeclaredConstructors": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "elide.tooling.project.manifest.ElidePackageManifest$JvmTarget",
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "elide.tooling.project.manifest.ElidePackageManifest$JvmTarget"
    },
    {
      "type": "elide.tooling.project.manifest.ElidePackageManifest$JvmTargetValidationMode"
    },
    {
      "type": "elide.tooling.project.manifest.ElidePackageManifest$KotlinFeatureOptions",
      "allDeclaredFields": true,
      "allDeclaredMethods": true,
      "allDeclaredConstructors": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "boolean",
            "boolean",
            "boolean",
            "boolean",
            "boolean",
            "boolean"
          ]
        },
        {
          "name": "<init>",
          "parameterTypes": [
            "boolean",
            "boolean",
            "boolean",
            "boolean",
            "boolean",
            "boolean",
            "boolean",
            "boolean",
            "boolean"
          ]
        }
      ]
    },
    {
      "type": "elide.tooling.project.manifest.ElidePackageManifest$KotlinJvmCompilerOptions",
      "allDeclaredFields": true,
      "allDeclaredMethods": true,
      "allDeclaredConstructors": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.util.List",
            "boolean",
            "boolean",
            "boolean",
            "boolean",
            "boolean",
            "java.util.List",
            "java.lang.String",
            "java.lang.String",
            "boolean",
            "elide.tooling.project.manifest.ElidePackageManifest$JvmTarget",
            "boolean",
            "elide.tooling.project.manifest.ElidePackageManifest$JvmTargetValidationMode"
          ]
        }
      ]
    },
    {
      "type": "elide.tooling.project.manifest.ElidePackageManifest$KotlinSettings",
      "allDeclaredFields": true,
      "allDeclaredMethods": true,
      "allDeclaredConstructors": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.String",
            "java.lang.String",
            "elide.tooling.project.manifest.ElidePackageManifest$KotlinJvmCompilerOptions",
            "elide.tooling.project.manifest.ElidePackageManifest$KotlinFeatureOptions"
          ]
        }
      ]
    },
    {
      "type": "elide.tooling.project.manifest.ElidePackageManifest$LockfileSettings",
      "allDeclaredFields": true,
      "allDeclaredMethods": true,
      "allDeclaredConstructors": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "boolean",
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "elide.tooling.project.manifest.ElidePackageManifest$MavenDependencies",
      "allDeclaredFields": true,
      "allDeclaredMethods": true,
      "allDeclaredConstructors": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.util.List",
            "java.util.List",
            "java.util.List",
            "java.util.Map",
            "boolean",
            "java.util.List"
          ]
        }
      ]
    },
    {
      "type": "elide.tooling.project.manifest.ElidePackageManifest$MavenPackage"
    },
    {
      "type": "elide.tooling.project.manifest.ElidePackageManifest$MavenRepository"
    },
    {
      "type": "elide.tooling.project.manifest.ElidePackageManifest$NativeImage",
      "allDeclaredFields": true,
      "allDeclaredMethods": true,
      "allDeclaredConstructors": true
    },
    {
      "type": "elide.tooling.project.manifest.ElidePackageManifest$NativeImageSettings",
      "allDeclaredFields": true,
      "allDeclaredMethods": true,
      "allDeclaredConstructors": true
    },
    {
      "type": "elide.tooling.project.manifest.ElidePackageManifest$NpmDependencies",
      "allDeclaredFields": true,
      "allDeclaredMethods": true,
      "allDeclaredConstructors": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.util.List",
            "java.util.List"
          ]
        },
        {
          "name": "<init>",
          "parameterTypes": [
            "java.util.List",
            "java.util.List",
            "java.util.Map"
          ]
        },
        {
          "name": "<init>",
          "parameterTypes": [
            "java.util.List",
            "java.util.List",
            "java.util.Map",
            "java.util.List"
          ]
        }
      ]
    },
    {
      "type": "elide.tooling.project.manifest.ElidePackageManifest$NpmPackage"
    },
    {
      "type": "elide.tooling.project.manifest.ElidePackageManifest$NpmRepository"
    },
    {
      "type": "elide.tooling.project.manifest.ElidePackageManifest$PipDependencies",
      "allDeclaredFields": true,
      "allDeclaredMethods": true,
      "allDeclaredConstructors": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.util.List",
            "java.util.Map"
          ]
        }
      ]
    },
    {
      "type": "elide.tooling.project.manifest.ElidePackageManifest$PipPackage"
    },
    {
      "type": "elide.tooling.project.manifest.ElidePackageManifest$PklSettings"
    },
    {
      "type": "elide.tooling.project.manifest.ElidePackageManifest$PythonSettings"
    },
    {
      "type": "elide.tooling.project.manifest.ElidePackageManifest$RubySettings"
    },
    {
      "type": "elide.tooling.project.manifest.ElidePackageManifest$SourceSet"
    },
    {
      "type": "elide.tooling.project.manifest.ElidePackageManifest$TestingSettings",
      "allDeclaredFields": true,
      "allDeclaredMethods": true,
      "allDeclaredConstructors": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "elide.tooling.project.manifest.ElidePackageManifest$CoverageSettings"
          ]
        }
      ]
    },
    {
      "type": "elide.tooling.project.manifest.ElidePackageManifest$TypeScriptSettings",
      "allDeclaredFields": true,
      "allDeclaredMethods": true,
      "allDeclaredConstructors": true
    },
    {
      "type": "elide.tooling.runner.AbstractTestRunner",
      "fields": [
        {
          "name": "executing$volatile"
        },
        {
          "name": "executions$volatile"
        },
        {
          "name": "fails$volatile"
        },
        {
          "name": "locked$volatile"
        },
        {
          "name": "passes$volatile"
        },
        {
          "name": "skips$volatile"
        },
        {
          "name": "startTime$volatile"
        },
        {
          "name": "tests$volatile"
        }
      ]
    },
    {
      "type": "groovy.lang.Closure"
    },
    {
      "type": "io.micrometer.context.ContextRegistry"
    },
    {
      "type": "io.micronaut.aop.internal.InterceptorRegistryBean",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.buffer.netty.$DefaultByteBufAllocatorConfiguration$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.buffer.netty.$NettyByteBufferFactory$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.buffer.netty.NettyByteBufferConverters",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.context.DefaultBeanContext$BeanDefinitionProducer",
      "fields": [
        {
          "name": "definition"
        }
      ]
    },
    {
      "type": "io.micronaut.context.annotation.Prototype"
    },
    {
      "type": "io.micronaut.context.env.PropertiesPropertySourceLoader"
    },
    {
      "type": "io.micronaut.context.env.exp.RandomPropertyExpressionResolver",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.context.env.yaml.YamlPropertySourceLoader"
    },
    {
      "type": "io.micronaut.context.event.ApplicationEventPublisherFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.context.propagation.instrument.execution.$ExecutorServiceInstrumenter$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.core.async.converters.ReactiveTypeConverterRegistrar",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.core.async.publisher.CompletableFuturePublisher"
    },
    {
      "type": "io.micronaut.core.async.publisher.Publishers$JustPublisher"
    },
    {
      "type": "io.micronaut.core.async.publisher.Publishers$JustThrowPublisher"
    },
    {
      "type": "io.micronaut.core.async.subscriber.Completable"
    },
    {
      "type": "io.micronaut.discovery.$DefaultCompositeDiscoveryClient$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.discovery.$DefaultServiceInstanceIdGenerator$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.discovery.cloud.digitalocean.$DigitalOceanInstanceMetadata$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.discovery.cloud.digitalocean.$DigitalOceanMetadataConfiguration$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.discovery.cloud.digitalocean.$DigitalOceanMetadataResolver$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.discovery.config.$DefaultCompositeConfigurationClient$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.health.$DefaultCurrentHealthStatus$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.health.$HealthStatus$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.health.$HeartbeatConfiguration$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.health.$HeartbeatDiscoveryClientCondition$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.health.$HeartbeatTask$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.HttpTypeConverterRegistrar",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.bind.$DefaultRequestBinderRegistry$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.bind.binders.$DefaultBodyAnnotationBinder$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.body.$ByteArrayBodyHandler$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.body.$ByteBufferBodyHandler$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.body.$CharSequenceBodyWriter$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.body.$ConversionTextPlainHandler$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.body.$DefaultMessageBodyHandlerRegistry$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.body.$StringBodyReader$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.body.$TextPlainObjectBodyReader$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.body.$TextPlainObjectBodyWriter$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.body.$TextStreamBodyWriter$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.body.$WritableBodyWriter$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.client.$BeanConfiguration",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.client.$DefaultHttpClientConfiguration$DefaultConnectionPoolConfiguration$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.client.$DefaultHttpClientConfiguration$DefaultHttp2ClientConfiguration$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.client.$DefaultHttpClientConfiguration$DefaultWebSocketCompressionConfiguration$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.client.$DefaultHttpClientConfiguration$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.client.$DefaultLoadBalancerResolver$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.client.$ServiceHttpClientCondition$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.client.$ServiceHttpClientConfiguration$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.client.$ServiceHttpClientConfiguration$ServiceConnectionPoolConfiguration$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.client.$ServiceHttpClientConfiguration$ServiceHttp2ClientConfiguration$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.client.$ServiceHttpClientConfiguration$ServiceSslClientConfiguration$DefaultKeyConfiguration$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.client.$ServiceHttpClientConfiguration$ServiceSslClientConfiguration$DefaultKeyStoreConfiguration$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.client.$ServiceHttpClientConfiguration$ServiceSslClientConfiguration$DefaultTrustStoreConfiguration$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.client.$ServiceHttpClientConfiguration$ServiceSslClientConfiguration$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.client.$ServiceHttpClientConfiguration$ServiceWebSocketCompressionConfiguration$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.client.$ServiceHttpClientFactory$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.client.$ServiceHttpClientFactory$HealthCheckStarter1$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.client.$ServiceHttpClientFactory$ServiceInstanceList0$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.client.bind.$DefaultHttpClientBinderRegistry$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.client.filter.$DefaultHttpClientFilterResolver$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.client.interceptor.$HttpClientIntroductionAdvice$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.client.interceptor.configuration.$DefaultClientVersioningConfiguration$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.client.interceptor.configuration.$NamedClientVersioningConfiguration$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.client.jdk.$DefaultJdkHttpClientRegistry$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.client.jdk.$DefaultJdkHttpClientRegistry$HttpClient0$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.client.jdk.$DefaultJdkHttpClientRegistry$RawHttpClient1$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.client.jdk.$JdkClientSslBuilder$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.client.jdk.cookie.$CompositeCookieDecoder$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.client.jdk.cookie.$DefaultCookieDecoder$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.client.jdk.cookie.$NettyCookieDecoder$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.client.loadbalance.$DiscoveryClientLoadBalancerFactory$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.client.loadbalance.$ServiceInstanceListLoadBalancerFactory$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.client.loadbalance.LoadBalancerConverters",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.client.netty.$DefaultNettyHttpClientRegistry$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.client.netty.$DefaultNettyHttpClientRegistry$HttpClient0$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.client.netty.NettyClientHttpRequestFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.client.netty.ssl.$NettyClientSslBuilder$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.codec.$CodecConfiguration$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.converters.$HttpConverterRegistrar$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.converters.SharedHttpConvertersRegistrar",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.expression.$RequestConditionContext$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.form.$FormConfigurationProperties$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.hateoas.$AbstractResource$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.hateoas.$DefaultLink$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.hateoas.$GenericResource$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.hateoas.$JsonError$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.hateoas.$Resource$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.hateoas.$VndError$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.netty.body.$NettyByteBufMessageBodyHandler$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.netty.body.$NettyJsonHandler$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.netty.body.$NettyJsonStreamHandler$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.netty.body.$NettyWritableBodyWriter$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.netty.channel.$DefaultEventLoopGroupConfiguration$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.netty.channel.$DefaultEventLoopGroupFactory$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.netty.channel.$DefaultEventLoopGroupRegistry$DefaultEventLoopGroup1$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.netty.channel.$DefaultEventLoopGroupRegistry$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.netty.channel.$DefaultEventLoopGroupRegistry$EventLoopGroup0$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.netty.channel.$EpollAvailabilityCondition$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.netty.channel.$EpollEventLoopGroupFactory$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.netty.channel.$IoUringAvailabilityCondition$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.netty.channel.$IoUringEventLoopGroupFactory$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.netty.channel.$KQueueAvailabilityCondition$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.netty.channel.$KQueueEventLoopGroupFactory$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.netty.channel.$NettyThreadFactory$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.netty.channel.$NettyThreadFactory$NettyThreadFactory0$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.netty.channel.$NioEventLoopGroupFactory$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.netty.channel.converters.$DefaultChannelOptionFactory$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.netty.channel.converters.$EpollChannelOptionFactory$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.netty.channel.converters.$KQueueChannelOptionFactory$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.netty.channel.loom.$EventLoopLoomFactory$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.netty.channel.loom.$EventLoopLoomFactory$EventLoopGroupThreadFactory0$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.netty.channel.loom.$LoomCarrierConfiguration$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.netty.channel.loom.$LoomCarrierGroup$Factory$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.netty.channel.loom.$PrivateLoomSupport$PrivateLoomCondition$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.netty.configuration.$NettyGlobalConfiguration$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.netty.websocket.$NettyServerWebSocketBroadcaster$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.netty.websocket.$WebSocketMessageEncoder$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.resource.$ResourceLoaderFactory$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.resource.$ResourceLoaderFactory$FileSystemResourceLoader1$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.resource.$ResourceLoaderFactory$GetClassPathResourceLoader0$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.resource.$ResourceLoaderFactory$ResourceResolver2$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.ssl.$ClientSslConfiguration$DefaultKeyConfiguration$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.ssl.$ClientSslConfiguration$DefaultKeyStoreConfiguration$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.ssl.$ClientSslConfiguration$DefaultTrustStoreConfiguration$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.ssl.$ClientSslConfiguration$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.ssl.$DefaultSslConfiguration$DefaultKeyConfiguration$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.ssl.$DefaultSslConfiguration$DefaultKeyStoreConfiguration$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.ssl.$DefaultSslConfiguration$DefaultTrustStoreConfiguration$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.ssl.$DefaultSslConfiguration$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.ssl.$ServerSslConfiguration$DefaultKeyConfiguration$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.ssl.$ServerSslConfiguration$DefaultKeyStoreConfiguration$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.ssl.$ServerSslConfiguration$DefaultTrustStoreConfiguration$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.ssl.$ServerSslConfiguration$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.uri.$DefaultFormUrlEncodedDecoder$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.util.$HtmlEntityEncodingHtmlSanitizer$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.util.$OutgoingHttpRequestProcessorImpl$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.inject.annotation.AnnotationConvertersRegistrar",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.inject.provider.BeanProviderDefinition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.inject.provider.JakartaProviderBeanDefinition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.inject.provider.JavaxProviderBeanDefinition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.json.$JsonObjectSerializer$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.json.bind.$JsonBeanPropertyBinder$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.json.body.$JsonMessageHandler$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.json.codec.$JsonMediaTypeCodec$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.json.codec.$JsonStreamMediaTypeCodec$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.json.convert.$JsonConverterRegistrar$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.logging.$LogLevel$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.logging.$PropertiesLoggingLevelsConfigurer$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.logging.LoggingConverterRegistrar",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.logging.impl.$Log4jLoggingSystem$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.logging.impl.$LogbackLoggingSystem$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.retry.annotation.$DefaultRetryPredicate$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.retry.annotation.$RetryPredicate$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.retry.intercept.$DefaultRetryInterceptor$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.retry.intercept.$RecoveryInterceptor$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.runtime.$ApplicationConfiguration$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.runtime.$ApplicationConfiguration$InstanceConfiguration$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.runtime.beans.$MapperIntroduction$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.runtime.beans.$MapperMethodProcessor$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.runtime.context.$CompositeMessageSource$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.runtime.context.env.$ConfigurationIntroductionAdvice$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.runtime.context.scope.$ThreadLocalCustomScope$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.runtime.context.scope.refresh.$RefreshInterceptor$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.runtime.context.scope.refresh.$RefreshScope$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.runtime.context.scope.refresh.$RefreshScopeCondition$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.runtime.converters.time.TimeConverterRegistrar",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.runtime.graceful.$GracefulShutdownConfiguration$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.runtime.graceful.$GracefulShutdownListener$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.runtime.graceful.$GracefulShutdownManager$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.runtime.http.codec.$MediaTypeCodecRegistryFactory$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.runtime.http.codec.$MediaTypeCodecRegistryFactory$MediaTypeCodecRegistry0$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.runtime.http.codec.$TextPlainCodec$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.runtime.http.scope.$RequestCustomScope$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.runtime.server.watch.event.$FileWatchRestartListener$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.scheduling.$DefaultTaskExceptionHandler$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.scheduling.$LoomSupport$LoomCondition$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.scheduling.$ScheduledExecutorTaskScheduler$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.scheduling.async.$AsyncInterceptor$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.scheduling.executor.$DefaultExecutorSelector$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.scheduling.executor.$DefaultThreadFactory$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.scheduling.executor.$DefaultThreadFactory$ThreadFactory0$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.scheduling.executor.$ExecutorFactory$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.scheduling.executor.$ExecutorFactory$EventLoopGroupThreadFactory0$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.scheduling.executor.$ExecutorFactory$ExecutorService1$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.scheduling.executor.$IOExecutorServiceConfig$Blocking2$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.scheduling.executor.$IOExecutorServiceConfig$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.scheduling.executor.$IOExecutorServiceConfig$Io0$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.scheduling.executor.$IOExecutorServiceConfig$Virtual1$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.scheduling.executor.$ScheduledExecutorServiceConfig$Configuration0$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.scheduling.executor.$ScheduledExecutorServiceConfig$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.scheduling.executor.$UserExecutorConfiguration$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.scheduling.io.watch.$DefaultWatchThread$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.scheduling.io.watch.$FileWatchCondition$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.scheduling.io.watch.$FileWatchConfiguration$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.scheduling.io.watch.$WatchServiceFactory$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.scheduling.io.watch.$WatchServiceFactory$WatchService0$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.scheduling.processor.$ScheduledMethodProcessor$ApplicationEventListener$scheduleTasks1$Intercepted$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.scheduling.processor.$ScheduledMethodProcessor$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.serde.config.$DefaultDeserializationConfiguration$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.serde.config.$DefaultSerdeConfiguration$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.serde.config.$DefaultSerializationConfiguration$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.serde.jackson.$JacksonJsonMapper$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.serde.jackson.$SerdeJacksonConfiguration$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.serde.support.$DefaultSerdeIntrospections$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.serde.support.$DefaultSerdeRegistry$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.serde.support.$LegacyBeansFactory$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.serde.support.$LegacyBeansFactory$InetAddressSerde6$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.serde.support.$LegacyBeansFactory$InstantSerde7$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.serde.support.$LegacyBeansFactory$LocalDateSerde8$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.serde.support.$LegacyBeansFactory$LocalDateTimeSerde9$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.serde.support.$LegacyBeansFactory$LocalTimeSerde10$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.serde.support.$LegacyBeansFactory$OffsetDateTimeSerde11$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.serde.support.$LegacyBeansFactory$ProvideDeserializer1$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.serde.support.$LegacyBeansFactory$ProvideObjectArraySerde5$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.serde.support.$LegacyBeansFactory$ProvideObjectDeserializer4$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.serde.support.$LegacyBeansFactory$ProvideObjectSerializer3$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.serde.support.$LegacyBeansFactory$ProvideSerde0$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.serde.support.$LegacyBeansFactory$ProvideSerializer2$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.serde.support.$LegacyBeansFactory$YearSerde12$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.serde.support.$LegacyBeansFactory$ZonedDateTimeSerde13$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.serde.support.$java_lang_StackTraceElement$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.serde.support.$java_lang_management_LockInfo$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.serde.support.$java_lang_management_ThreadInfo$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.serde.support.bind.$SerdeJsonBeanPropertyBinderExceptionHandler$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.serde.support.config.$SerdeJsonConfiguration$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.serde.support.deserializers.$HealthResultDeserializer$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.serde.support.deserializers.$HealthResultDeserializer$HealthResultDto$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.serde.support.serdes.$HealthStatusSerde$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.websocket.interceptor.$ClientWebSocketInterceptor$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.netty.channel.DefaultFileRegion"
    },
    {
      "type": "io.netty.channel.epoll.NativeDatagramPacketArray$NativeDatagramPacket"
    },
    {
      "type": "io.netty.channel.unix.DatagramSocketAddress"
    },
    {
      "type": "io.netty.channel.unix.DomainDatagramSocketAddress"
    },
    {
      "type": "io.netty.channel.unix.FileDescriptor",
      "fields": [
        {
          "name": "state"
        }
      ]
    },
    {
      "type": "io.netty.channel.unix.PeerCredentials"
    },
    {
      "type": "io.netty.internal.tcnative.CertificateCallback"
    },
    {
      "type": "io.netty.internal.tcnative.CertificateCallbackTask"
    },
    {
      "type": "io.netty.internal.tcnative.SSLPrivateKeyMethodDecryptTask"
    },
    {
      "type": "io.netty.internal.tcnative.SSLPrivateKeyMethodSignTask"
    },
    {
      "type": "io.netty.internal.tcnative.SSLPrivateKeyMethodTask"
    },
    {
      "type": "io.netty.internal.tcnative.SSLTask"
    },
    {
      "type": "io.netty.util.AbstractReferenceCounted",
      "fields": [
        {
          "name": "refCnt"
        }
      ]
    },
    {
      "type": "io.netty.util.internal.CleanerJava24$CleanableDirectBufferImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.AutoCloseable",
            "java.nio.ByteBuffer"
          ]
        }
      ]
    },
    {
      "type": "io.netty.util.internal.NativeLibraryUtil",
      "methods": [
        {
          "name": "loadLibrary",
          "parameterTypes": [
            "java.lang.String",
            "boolean"
          ]
        }
      ]
    },
    {
      "type": "io.reactivex.Completable"
    },
    {
      "type": "io.reactivex.Maybe"
    },
    {
      "type": "io.reactivex.Observable"
    },
    {
      "type": "io.reactivex.Single"
    },
    {
      "type": "io.reactivex.rxjava3.core.Completable"
    },
    {
      "type": "io.reactivex.rxjava3.core.Flowable"
    },
    {
      "type": "io.reactivex.rxjava3.core.Maybe"
    },
    {
      "type": "io.reactivex.rxjava3.core.Observable"
    },
    {
      "type": "io.reactivex.rxjava3.core.Single"
    },
    {
      "type": "java.io.FileDescriptor"
    },
    {
      "type": "java.io.IOException"
    },
    {
      "type": "java.lang.Boolean",
      "fields": [
        {
          "name": "TYPE"
        }
      ]
    },
    {
      "type": "java.lang.Byte",
      "fields": [
        {
          "name": "TYPE"
        }
      ]
    },
    {
      "type": "java.lang.CharSequence"
    },
    {
      "type": "java.lang.Character",
      "fields": [
        {
          "name": "TYPE"
        }
      ]
    },
    {
      "type": "java.lang.ClassLoader",
      "fields": [
        {
          "name": "classLoaderValueMap"
        }
      ]
    },
    {
      "type": "java.lang.ClassValue"
    },
    {
      "type": "java.lang.Cloneable"
    },
    {
      "type": "java.lang.Comparable"
    },
    {
      "type": "java.lang.Deprecated"
    },
    {
      "type": "java.lang.Double",
      "fields": [
        {
          "name": "TYPE"
        }
      ]
    },
    {
      "type": "java.lang.Enum"
    },
    {
      "type": "java.lang.Exception"
    },
    {
      "type": "java.lang.Float",
      "fields": [
        {
          "name": "TYPE"
        }
      ]
    },
    {
      "type": "java.lang.IllegalArgumentException"
    },
    {
      "type": "java.lang.Integer",
      "fields": [
        {
          "name": "TYPE"
        }
      ]
    },
    {
      "type": "java.lang.Iterable"
    },
    {
      "type": "java.lang.Long",
      "fields": [
        {
          "name": "TYPE"
        }
      ]
    },
    {
      "type": "java.lang.NullPointerException"
    },
    {
      "type": "java.lang.Number"
    },
    {
      "type": "java.lang.Object",
      "allDeclaredFields": true
    },
    {
      "type": "java.lang.OutOfMemoryError"
    },
    {
      "type": "java.lang.Runnable",
      "methods": [
        {
          "name": "run",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.Runtime",
      "methods": [
        {
          "name": "version",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.Runtime$Version",
      "methods": [
        {
          "name": "build",
          "parameterTypes": []
        },
        {
          "name": "major",
          "parameterTypes": []
        },
        {
          "name": "minor",
          "parameterTypes": []
        },
        {
          "name": "pre",
          "parameterTypes": []
        },
        {
          "name": "security",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.RuntimeException"
    },
    {
      "type": "java.lang.Short",
      "fields": [
        {
          "name": "TYPE"
        }
      ]
    },
    {
      "type": "java.lang.StackTraceElement"
    },
    {
      "type": "java.lang.String",
      "fields": [
        {
          "name": "TYPE"
        }
      ]
    },
    {
      "type": "java.lang.Thread",
      "fields": [
        {
          "name": "threadLocalRandomProbe"
        }
      ],
      "methods": [
        {
          "name": "isVirtual",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.Throwable"
    },
    {
      "type": "java.lang.Void",
      "fields": [
        {
          "name": "TYPE"
        }
      ]
    },
    {
      "type": "java.lang.annotation.Annotation"
    },
    {
      "type": "java.lang.foreign.Arena",
      "methods": [
        {
          "name": "allocate",
          "parameterTypes": [
            "long"
          ]
        },
        {
          "name": "ofShared",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.foreign.MemorySegment",
      "methods": [
        {
          "name": "asByteBuffer",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.invoke.VarHandle"
    },
    {
      "type": "java.lang.management.BufferPoolMXBean"
    },
    {
      "type": "java.lang.management.ClassLoadingMXBean"
    },
    {
      "type": "java.lang.management.CompilationMXBean"
    },
    {
      "type": "java.lang.management.LockInfo"
    },
    {
      "type": "java.lang.management.ManagementFactory",
      "methods": [
        {
          "name": "getRuntimeMXBean",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.management.MemoryMXBean"
    },
    {
      "type": "java.lang.management.MemoryManagerMXBean"
    },
    {
      "type": "java.lang.management.MemoryPoolMXBean"
    },
    {
      "type": "java.lang.management.MemoryUsage"
    },
    {
      "type": "java.lang.management.MonitorInfo"
    },
    {
      "type": "java.lang.management.PlatformLoggingMXBean"
    },
    {
      "type": "java.lang.management.RuntimeMXBean",
      "methods": [
        {
          "name": "getInputArguments",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.management.ThreadInfo"
    },
    {
      "type": "java.lang.reflect.AccessibleObject",
      "methods": [
        {
          "name": "canAccess",
          "parameterTypes": [
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "java.math.BigDecimal"
    },
    {
      "type": "java.math.BigInteger"
    },
    {
      "type": "java.net.InetSocketAddress"
    },
    {
      "type": "java.net.PortUnreachableException"
    },
    {
      "type": "java.net.http.HttpClient",
      "methods": [
        {
          "name": "close",
          "parameterTypes": [
            "java.net.http.HttpClient"
          ]
        }
      ]
    },
    {
      "type": "java.nio.Bits"
    },
    {
      "type": "java.nio.Buffer",
      "fields": [
        {
          "name": "address"
        }
      ]
    },
    {
      "type": "java.nio.ByteBuffer",
      "methods": [
        {
          "name": "alignedSlice",
          "parameterTypes": [
            "int"
          ]
        }
      ]
    },
    {
      "type": "java.nio.DirectByteBuffer"
    },
    {
      "type": "java.nio.channels.ClosedChannelException"
    },
    {
      "type": "java.nio.channels.FileChannel"
    },
    {
      "type": "java.nio.file.Path"
    },
    {
      "type": "java.nio.file.Paths"
    },
    {
      "type": "java.security.AccessController",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "doPrivileged",
          "parameterTypes": [
            "java.security.PrivilegedAction"
          ]
        }
      ]
    },
    {
      "type": "java.security.AlgorithmParametersSpi"
    },
    {
      "type": "java.security.KeyStoreSpi"
    },
    {
      "type": "java.security.MessageDigestSpi"
    },
    {
      "type": "java.security.PrivilegedAction"
    },
    {
      "type": "java.security.cert.PKIXRevocationChecker"
    },
    {
      "type": "java.security.interfaces.DSAPrivateKey"
    },
    {
      "type": "java.security.interfaces.DSAPublicKey"
    },
    {
      "type": "java.security.interfaces.ECPrivateKey"
    },
    {
      "type": "java.security.interfaces.ECPublicKey"
    },
    {
      "type": "java.security.interfaces.RSAPrivateKey"
    },
    {
      "type": "java.security.interfaces.RSAPublicKey"
    },
    {
      "type": "java.security.spec.DSAParameterSpec"
    },
    {
      "type": "java.sql.Connection"
    },
    {
      "type": "java.sql.Driver"
    },
    {
      "type": "java.sql.DriverManager"
    },
    {
      "type": "java.sql.Time"
    },
    {
      "type": "java.sql.Timestamp"
    },
    {
      "type": "java.time.Duration"
    },
    {
      "type": "java.time.Instant"
    },
    {
      "type": "java.time.LocalDate"
    },
    {
      "type": "java.time.LocalDateTime"
    },
    {
      "type": "java.time.LocalTime"
    },
    {
      "type": "java.time.MonthDay"
    },
    {
      "type": "java.time.OffsetDateTime"
    },
    {
      "type": "java.time.OffsetTime"
    },
    {
      "type": "java.time.Period"
    },
    {
      "type": "java.time.Year"
    },
    {
      "type": "java.time.YearMonth"
    },
    {
      "type": "java.time.ZoneId"
    },
    {
      "type": "java.time.ZoneOffset"
    },
    {
      "type": "java.time.ZonedDateTime"
    },
    {
      "type": "java.util.ArrayList",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "int"
          ]
        },
        {
          "name": "<init>",
          "parameterTypes": [
            "int",
            "float"
          ]
        }
      ]
    },
    {
      "type": "java.util.Collection"
    },
    {
      "type": "java.util.Date"
    },
    {
      "type": "java.util.HashMap",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "int",
            "float"
          ]
        }
      ]
    },
    {
      "type": "java.util.Iterator"
    },
    {
      "type": "java.util.List"
    },
    {
      "type": "java.util.ListIterator"
    },
    {
      "type": "java.util.Locale",
      "allDeclaredFields": true,
      "allDeclaredMethods": true,
      "allDeclaredConstructors": true
    },
    {
      "type": "java.util.Map"
    },
    {
      "type": "java.util.Map.Entry"
    },
    {
      "type": "java.util.Optional",
      "methods": [
        {
          "name": "isPresent",
          "parameterTypes": []
        },
        {
          "name": "orElse",
          "parameterTypes": [
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "java.util.ResourceBundle",
      "methods": [
        {
          "name": "getBaseBundleName",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.util.Set"
    },
    {
      "type": "java.util.concurrent.ForkJoinTask",
      "fields": [
        {
          "name": "aux"
        },
        {
          "name": "status"
        }
      ]
    },
    {
      "type": "java.util.concurrent.ScheduledThreadPoolExecutor"
    },
    {
      "type": "java.util.concurrent.atomic.AtomicBoolean",
      "fields": [
        {
          "name": "value"
        }
      ]
    },
    {
      "type": "java.util.concurrent.atomic.Striped64",
      "fields": [
        {
          "name": "base"
        },
        {
          "name": "cellsBusy"
        }
      ]
    },
    {
      "type": "java.util.logging.LogManager",
      "methods": [
        {
          "name": "getLoggingMXBean",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.util.logging.LoggingMXBean"
    },
    {
      "type": "javax.inject.Named"
    },
    {
      "type": "javax.management.MBeanOperationInfo"
    },
    {
      "type": "javax.management.MBeanServerBuilder",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "javax.management.ObjectName"
    },
    {
      "type": "javax.management.StandardEmitterMBean"
    },
    {
      "type": "javax.management.openmbean.CompositeData"
    },
    {
      "type": "javax.management.openmbean.OpenMBeanOperationInfoSupport"
    },
    {
      "type": "javax.management.openmbean.TabularData"
    },
    {
      "type": "javax.management.remote.rmi.RMIServer"
    },
    {
      "type": "javax.management.remote.rmi.RMIServerImpl_Skel"
    },
    {
      "type": "javax.management.remote.rmi.RMIServerImpl_Stub",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.rmi.server.RemoteRef"
          ]
        }
      ]
    },
    {
      "type": "jdk.graal.compiler.hotspot.HotSpotGraalJVMCIServiceLocator"
    },
    {
      "type": "jdk.graal.compiler.hotspot.libgraal.truffle.TruffleLibGraalShutdownHook"
    },
    {
      "type": "jdk.internal.jrtfs.JrtFileSystemProvider"
    },
    {
      "type": "jdk.internal.loader.ClassLoaders$AppClassLoader"
    },
    {
      "type": "jdk.internal.loader.ClassLoaders$PlatformClassLoader",
      "fields": [
        {
          "name": "myParents"
        }
      ]
    },
    {
      "type": "jdk.internal.misc.Unsafe",
      "methods": [
        {
          "name": "allocateUninitializedArray",
          "parameterTypes": [
            "java.lang.Class",
            "int"
          ]
        },
        {
          "name": "getUnsafe",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "jdk.javadoc.doclet.StandardDoclet",
      "allDeclaredFields": true,
      "allDeclaredMethods": true,
      "allDeclaredConstructors": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "jdk.management.VirtualThreadSchedulerMXBean"
    },
    {
      "type": "jdk.management.jfr.ConfigurationInfo"
    },
    {
      "type": "jdk.management.jfr.EventTypeInfo"
    },
    {
      "type": "jdk.management.jfr.FlightRecorderMXBean"
    },
    {
      "type": "jdk.management.jfr.FlightRecorderMXBeanImpl"
    },
    {
      "type": "jdk.management.jfr.RecordingInfo"
    },
    {
      "type": "jdk.management.jfr.SettingDescriptorInfo"
    },
    {
      "type": "kotlin.Boolean"
    },
    {
      "type": "kotlin.Int"
    },
    {
      "type": "kotlin.Metadata",
      "methods": [
        {
          "name": "bv",
          "parameterTypes": []
        },
        {
          "name": "d1",
          "parameterTypes": []
        },
        {
          "name": "d2",
          "parameterTypes": []
        },
        {
          "name": "k",
          "parameterTypes": []
        },
        {
          "name": "mv",
          "parameterTypes": []
        },
        {
          "name": "pn",
          "parameterTypes": []
        },
        {
          "name": "xi",
          "parameterTypes": []
        },
        {
          "name": "xs",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "kotlin.SafePublicationLazyImpl",
      "fields": [
        {
          "name": "_value"
        }
      ]
    },
    {
      "type": "kotlin.String"
    },
    {
      "type": "kotlin.collections.List"
    },
    {
      "type": "kotlin.collections.Map"
    },
    {
      "type": "kotlin.jvm.internal.BooleanCompanionObject"
    },
    {
      "type": "kotlin.jvm.internal.ByteCompanionObject"
    },
    {
      "type": "kotlin.jvm.internal.CharCompanionObject"
    },
    {
      "type": "kotlin.jvm.internal.DefaultConstructorMarker"
    },
    {
      "type": "kotlin.jvm.internal.DoubleCompanionObject"
    },
    {
      "type": "kotlin.jvm.internal.EnumCompanionObject"
    },
    {
      "type": "kotlin.jvm.internal.FloatCompanionObject"
    },
    {
      "type": "kotlin.jvm.internal.IntCompanionObject"
    },
    {
      "type": "kotlin.jvm.internal.LongCompanionObject"
    },
    {
      "type": "kotlin.jvm.internal.ShortCompanionObject"
    },
    {
      "type": "kotlin.jvm.internal.StringCompanionObject"
    },
    {
      "type": "kotlin.reflect.full.KClasses"
    },
    {
      "type": "kotlin.reflect.jvm.internal.ReflectionFactoryImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "kotlin.reflect.jvm.internal.impl.load.java.ErasedOverridabilityCondition"
    },
    {
      "type": "kotlin.reflect.jvm.internal.impl.load.java.FieldOverridabilityCondition"
    },
    {
      "type": "kotlin.reflect.jvm.internal.impl.load.java.JavaIncompatibilityRulesOverridabilityCondition"
    },
    {
      "type": "kotlinx.atomicfu.AtomicBoolean",
      "fields": [
        {
          "name": "_value"
        }
      ]
    },
    {
      "type": "kotlinx.atomicfu.AtomicRef",
      "fields": [
        {
          "name": "value"
        }
      ]
    },
    {
      "type": "kotlinx.coroutines.AwaitAll",
      "fields": [
        {
          "name": "notCompletedCount$volatile"
        }
      ]
    },
    {
      "type": "kotlinx.coroutines.AwaitAll$AwaitAllNode",
      "fields": [
        {
          "name": "_disposer$volatile"
        }
      ]
    },
    {
      "type": "kotlinx.coroutines.CancellableContinuationImpl",
      "fields": [
        {
          "name": "_decisionAndIndex$volatile"
        },
        {
          "name": "_parentHandle$volatile"
        },
        {
          "name": "_state$volatile"
        }
      ]
    },
    {
      "type": "kotlinx.coroutines.DispatchedCoroutine",
      "fields": [
        {
          "name": "_decision$volatile"
        }
      ]
    },
    {
      "type": "kotlinx.coroutines.EventLoopImplBase",
      "fields": [
        {
          "name": "_delayed$volatile"
        },
        {
          "name": "_isCompleted$volatile"
        },
        {
          "name": "_queue$volatile"
        }
      ]
    },
    {
      "type": "kotlinx.coroutines.JobSupport",
      "fields": [
        {
          "name": "_parentHandle$volatile"
        },
        {
          "name": "_state$volatile"
        }
      ]
    },
    {
      "type": "kotlinx.coroutines.JobSupport$Finishing",
      "fields": [
        {
          "name": "_exceptionsHolder$volatile"
        },
        {
          "name": "_isCompleting$volatile"
        },
        {
          "name": "_rootCause$volatile"
        }
      ]
    },
    {
      "type": "kotlinx.coroutines.flow.Flow"
    },
    {
      "type": "kotlinx.coroutines.internal.ConcurrentLinkedListNode",
      "fields": [
        {
          "name": "_next$volatile"
        },
        {
          "name": "_prev$volatile"
        }
      ]
    },
    {
      "type": "kotlinx.coroutines.internal.DispatchedContinuation",
      "fields": [
        {
          "name": "_reusableCancellableContinuation$volatile"
        }
      ]
    },
    {
      "type": "kotlinx.coroutines.internal.LockFreeLinkedListNode",
      "fields": [
        {
          "name": "_next$volatile"
        },
        {
          "name": "_prev$volatile"
        },
        {
          "name": "_removedRef$volatile"
        }
      ]
    },
    {
      "type": "kotlinx.coroutines.internal.LockFreeTaskQueue",
      "fields": [
        {
          "name": "_cur$volatile"
        }
      ]
    },
    {
      "type": "kotlinx.coroutines.internal.LockFreeTaskQueueCore",
      "fields": [
        {
          "name": "_next$volatile"
        },
        {
          "name": "_state$volatile"
        }
      ]
    },
    {
      "type": "kotlinx.coroutines.internal.Segment",
      "fields": [
        {
          "name": "cleanedAndPointers$volatile"
        }
      ]
    },
    {
      "type": "kotlinx.coroutines.internal.ThreadSafeHeap",
      "fields": [
        {
          "name": "_size$volatile"
        }
      ]
    },
    {
      "type": "kotlinx.coroutines.reactor.ReactorContext"
    },
    {
      "type": "kotlinx.coroutines.scheduling.CoroutineScheduler",
      "fields": [
        {
          "name": "_isTerminated$volatile"
        },
        {
          "name": "controlState$volatile"
        },
        {
          "name": "parkedWorkersStack$volatile"
        }
      ]
    },
    {
      "type": "kotlinx.coroutines.scheduling.CoroutineScheduler$Worker",
      "fields": [
        {
          "name": "workerCtl$volatile"
        }
      ]
    },
    {
      "type": "kotlinx.coroutines.scheduling.WorkQueue",
      "fields": [
        {
          "name": "blockingTasksInBuffer$volatile"
        },
        {
          "name": "consumerIndex$volatile"
        },
        {
          "name": "lastScheduledTask$volatile"
        },
        {
          "name": "producerIndex$volatile"
        }
      ]
    },
    {
      "type": "kotlinx.coroutines.sync.MutexImpl",
      "fields": [
        {
          "name": "owner$volatile"
        }
      ]
    },
    {
      "type": "kotlinx.coroutines.sync.SemaphoreAndMutexImpl",
      "fields": [
        {
          "name": "_availablePermits$volatile"
        },
        {
          "name": "deqIdx$volatile"
        },
        {
          "name": "enqIdx$volatile"
        },
        {
          "name": "head$volatile"
        },
        {
          "name": "tail$volatile"
        }
      ]
    },
    {
      "type": "kotlinx.serialization.internal.SerializationConstructorMarker"
    },
    {
      "type": "nonapi.io.github.classgraph.classloaderhandler.AntClassLoaderHandler"
    },
    {
      "type": "nonapi.io.github.classgraph.classloaderhandler.ClassGraphClassLoaderHandler"
    },
    {
      "type": "nonapi.io.github.classgraph.classloaderhandler.CxfContainerClassLoaderHandler"
    },
    {
      "type": "nonapi.io.github.classgraph.classloaderhandler.EquinoxClassLoaderHandler"
    },
    {
      "type": "nonapi.io.github.classgraph.classloaderhandler.EquinoxContextFinderClassLoaderHandler"
    },
    {
      "type": "nonapi.io.github.classgraph.classloaderhandler.FallbackClassLoaderHandler"
    },
    {
      "type": "nonapi.io.github.classgraph.classloaderhandler.FelixClassLoaderHandler"
    },
    {
      "type": "nonapi.io.github.classgraph.classloaderhandler.JBossClassLoaderHandler"
    },
    {
      "type": "nonapi.io.github.classgraph.classloaderhandler.JPMSClassLoaderHandler"
    },
    {
      "type": "nonapi.io.github.classgraph.classloaderhandler.OSGiDefaultClassLoaderHandler"
    },
    {
      "type": "nonapi.io.github.classgraph.classloaderhandler.ParentLastDelegationOrderTestClassLoaderHandler"
    },
    {
      "type": "nonapi.io.github.classgraph.classloaderhandler.PlexusClassWorldsClassRealmClassLoaderHandler"
    },
    {
      "type": "nonapi.io.github.classgraph.classloaderhandler.QuarkusClassLoaderHandler"
    },
    {
      "type": "nonapi.io.github.classgraph.classloaderhandler.SpringBootRestartClassLoaderHandler"
    },
    {
      "type": "nonapi.io.github.classgraph.classloaderhandler.TomcatWebappClassLoaderBaseHandler"
    },
    {
      "type": "nonapi.io.github.classgraph.classloaderhandler.URLClassLoaderHandler"
    },
    {
      "type": "nonapi.io.github.classgraph.classloaderhandler.UnoOneJarClassLoaderHandler"
    },
    {
      "type": "nonapi.io.github.classgraph.classloaderhandler.WeblogicClassLoaderHandler"
    },
    {
      "type": "nonapi.io.github.classgraph.classloaderhandler.WebsphereLibertyClassLoaderHandler"
    },
    {
      "type": "nonapi.io.github.classgraph.classloaderhandler.WebsphereTraditionalClassLoaderHandler"
    },
    {
      "type": "nonapi.io.github.classgraph.scanspec.ScanSpec",
      "allDeclaredFields": true
    },
    {
      "type": "org.apache.maven.model.Build",
      "allDeclaredFields": true,
      "allDeclaredMethods": true,
      "methods": [
        {
          "name": "getOutputDirectory",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.apache.maven.model.BuildBase",
      "methods": [
        {
          "name": "getDirectory",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.apache.maven.model.Model",
      "methods": [
        {
          "name": "getArtifactId",
          "parameterTypes": []
        },
        {
          "name": "getBuild",
          "parameterTypes": []
        },
        {
          "name": "getVersion",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.apache.maven.repository.internal.DefaultArtifactDescriptorReader",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.apache.maven.repository.internal.DefaultModelCacheFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.apache.maven.repository.internal.DefaultVersionRangeResolver",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.apache.maven.repository.internal.DefaultVersionResolver",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.apache.maven.repository.internal.SnapshotMetadataGeneratorFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.apache.maven.repository.internal.VersionsMetadataGeneratorFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.asymmetric.COMPOSITE$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.asymmetric.CONTEXT$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.asymmetric.CompositeSignatures$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.asymmetric.DH$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.asymmetric.DSA$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.asymmetric.DSTU4145$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.asymmetric.Dilithium$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.asymmetric.EC$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.asymmetric.ECGOST$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.asymmetric.EXTERNAL$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.asymmetric.EdEC$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.asymmetric.ElGamal$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.asymmetric.Falcon$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.asymmetric.GM$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.asymmetric.GOST$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.asymmetric.IES$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.asymmetric.LMS$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.asymmetric.MLDSA$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.asymmetric.MLKEM$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.asymmetric.NTRU$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.asymmetric.RSA$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.asymmetric.SLHDSA$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.asymmetric.SPHINCSPlus$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.asymmetric.X509$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.digest.Blake2b$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.digest.Blake2s$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.digest.Blake3$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.digest.DSTU7564$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.digest.GOST3411$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.digest.Haraka$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.digest.Keccak$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.digest.MD2$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.digest.MD4$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.digest.MD5$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.digest.RIPEMD128$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.digest.RIPEMD160$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.digest.RIPEMD256$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.digest.RIPEMD320$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.digest.SHA1$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.digest.SHA224$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.digest.SHA256$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.digest.SHA3$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.digest.SHA384$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.digest.SHA512$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.digest.SM3$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.digest.Skein$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.digest.Tiger$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.digest.Whirlpool$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.drbg.DRBG$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.keystore.BC$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.keystore.BCFKS$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.keystore.PKCS12$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.AES$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.ARC4$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.ARIA$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.Blowfish$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.CAST5$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.CAST6$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.Camellia$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.ChaCha$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.DES$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.DESede$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.DSTU7624$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.GOST28147$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.GOST3412_2015$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.Grain128$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.Grainv1$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.HC128$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.HC256$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.IDEA$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.Noekeon$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.OpenSSLPBKDF$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.PBEPBKDF1$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.PBEPBKDF2$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.PBEPKCS12$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.Poly1305$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.RC2$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.RC5$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.RC6$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.Rijndael$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.SCRYPT$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.SEED$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.SM4$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.Salsa20$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.Serpent$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.Shacal2$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.SipHash$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.SipHash128$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.Skipjack$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.TEA$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.TLSKDF$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.Threefish$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.Twofish$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.VMPC$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.VMPCKSA3$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.XSalsa20$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.XTEA$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.Zuc$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.eclipse.aether.connector.basic.BasicRepositoryConnectorFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.eclipse.aether.internal.impl.DefaultArtifactResolver",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.eclipse.aether.internal.impl.DefaultChecksumPolicyProvider",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.eclipse.aether.internal.impl.DefaultDeployer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.eclipse.aether.internal.impl.DefaultFileProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.eclipse.aether.internal.impl.DefaultInstaller",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.eclipse.aether.internal.impl.DefaultLocalPathComposer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.eclipse.aether.internal.impl.DefaultLocalRepositoryProvider",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.eclipse.aether.internal.impl.DefaultMetadataResolver",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.eclipse.aether.internal.impl.DefaultOfflineController",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.eclipse.aether.internal.impl.DefaultRemoteRepositoryManager",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.eclipse.aether.internal.impl.DefaultRepositoryConnectorProvider",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.eclipse.aether.internal.impl.DefaultRepositoryEventDispatcher",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.eclipse.aether.internal.impl.DefaultRepositoryLayoutProvider",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.eclipse.aether.internal.impl.DefaultRepositorySystem",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.eclipse.aether.internal.impl.DefaultRepositorySystemLifecycle",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.eclipse.aether.internal.impl.DefaultTrackingFileManager",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.eclipse.aether.internal.impl.DefaultTransporterProvider",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.eclipse.aether.internal.impl.DefaultUpdateCheckManager",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.eclipse.aether.internal.impl.DefaultUpdatePolicyAnalyzer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.eclipse.aether.internal.impl.EnhancedLocalRepositoryManagerFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.eclipse.aether.internal.impl.Maven2RepositoryLayoutFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.eclipse.aether.internal.impl.SimpleLocalRepositoryManagerFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.eclipse.aether.internal.impl.collect.DefaultDependencyCollector",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.eclipse.aether.internal.impl.filter.DefaultRemoteRepositoryFilterManager",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.eclipse.aether.internal.impl.synccontext.DefaultSyncContextFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.eclipse.aether.internal.impl.synccontext.named.NamedLockFactoryAdapterFactoryImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.eclipse.aether.transport.file.FileTransporterFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.eclipse.aether.transport.http.HttpTransporterFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.eclipse.aether.transport.wagon.WagonTransporterFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.fusesource.jansi.AnsiConsole",
      "methods": [
        {
          "name": "out",
          "parameterTypes": []
        },
        {
          "name": "systemInstall",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.graalvm.home.impl.DefaultHomeFinder"
    },
    {
      "type": "org.graalvm.polyglot.io.IOHelper",
      "fields": [
        {
          "name": "ACCESS"
        }
      ]
    },
    {
      "type": "org.graalvm.polyglot.management.Management",
      "fields": [
        {
          "name": "ACCESS"
        }
      ]
    },
    {
      "type": "org.graalvm.wasm.WasmLanguageProvider"
    },
    {
      "type": "org.jetbrains.kotlin.KtPsiSourceElement",
      "fields": [
        {
          "name": "_lighterASTNode"
        },
        {
          "name": "_treeStructure"
        }
      ]
    },
    {
      "type": "org.jetbrains.kotlin.backend.common.extensions.IrGenerationExtension"
    },
    {
      "type": "org.jetbrains.kotlin.backend.jvm.extensions.ClassBuilderExtensionAdapter",
      "methods": [
        {
          "name": "getExtensions",
          "parameterTypes": [
            "org.jetbrains.kotlin.com.intellij.openapi.project.Project"
          ]
        }
      ]
    },
    {
      "type": "org.jetbrains.kotlin.backend.jvm.extensions.ClassGeneratorExtension"
    },
    {
      "type": "org.jetbrains.kotlin.cli.common.ModuleVisibilityHelperImpl"
    },
    {
      "type": "org.jetbrains.kotlin.cli.common.arguments.CommonCompilerArguments",
      "allDeclaredFields": true
    },
    {
      "type": "org.jetbrains.kotlin.cli.common.arguments.CommonToolArguments",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "setSuppressWarnings",
          "parameterTypes": [
            "boolean"
          ]
        }
      ]
    },
    {
      "type": "org.jetbrains.kotlin.cli.common.arguments.Freezable",
      "allDeclaredFields": true
    },
    {
      "type": "org.jetbrains.kotlin.cli.common.arguments.K2JVMCompilerArguments",
      "allDeclaredFields": true,
      "allDeclaredMethods": true,
      "allDeclaredConstructors": true
    },
    {
      "type": "org.jetbrains.kotlin.cli.common.extensions.ScriptEvaluationExtension"
    },
    {
      "type": "org.jetbrains.kotlin.cli.common.extensions.ShellExtension"
    },
    {
      "type": "org.jetbrains.kotlin.codegen.extensions.ClassBuilderInterceptorExtension"
    },
    {
      "type": "org.jetbrains.kotlin.codegen.extensions.ClassFileFactoryFinalizerExtension"
    },
    {
      "type": "org.jetbrains.kotlin.codegen.serialization.JvmSerializationBindings",
      "allPublicFields": true
    },
    {
      "type": "org.jetbrains.kotlin.com.intellij.codeInsight.ContainerProvider"
    },
    {
      "type": "org.jetbrains.kotlin.com.intellij.lang.jvm.facade.JvmElementProvider"
    },
    {
      "type": "org.jetbrains.kotlin.com.intellij.openapi.application.ApplicationManager",
      "fields": [
        {
          "name": "ourApplication"
        }
      ]
    },
    {
      "type": "org.jetbrains.kotlin.com.intellij.openapi.application.impl.ModalityStateEx",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.jetbrains.kotlin.com.intellij.openapi.extensions.impl.ExtensionPointImpl",
      "fields": [
        {
          "name": "keyMapperToCache"
        },
        {
          "name": "listeners"
        }
      ]
    },
    {
      "type": "org.jetbrains.kotlin.com.intellij.openapi.fileTypes.BinaryFileTypeDecompilers",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.jetbrains.kotlin.com.intellij.openapi.util.SimpleModificationTracker",
      "fields": [
        {
          "name": "myCounter"
        }
      ]
    },
    {
      "type": "org.jetbrains.kotlin.com.intellij.openapi.vfs.PersistentFSConstants",
      "fields": [
        {
          "name": "ourMaxIntellisenseFileSize"
        }
      ]
    },
    {
      "type": "org.jetbrains.kotlin.com.intellij.psi.LanguageSubstitutors",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.jetbrains.kotlin.com.intellij.psi.PsiElementFinder"
    },
    {
      "type": "org.jetbrains.kotlin.com.intellij.psi.SingleRootFileViewProvider",
      "fields": [
        {
          "name": "myPsiFile"
        }
      ]
    },
    {
      "type": "org.jetbrains.kotlin.com.intellij.psi.augment.PsiAugmentProvider"
    },
    {
      "type": "org.jetbrains.kotlin.com.intellij.psi.compiled.ClassFileDecompilers",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.jetbrains.kotlin.com.intellij.psi.compiled.ClassFileDecompilers$Decompiler"
    },
    {
      "type": "org.jetbrains.kotlin.com.intellij.psi.impl.source.JavaFileElementType"
    },
    {
      "type": "org.jetbrains.kotlin.com.intellij.psi.impl.source.tree.CompositeElement",
      "fields": [
        {
          "name": "myWrapper"
        }
      ]
    },
    {
      "type": "org.jetbrains.kotlin.com.intellij.psi.stubs.StubBase",
      "fields": [
        {
          "name": "myPsi"
        }
      ]
    },
    {
      "type": "org.jetbrains.kotlin.com.intellij.util.ConcurrentLongObjectHashMap",
      "fields": [
        {
          "name": "baseCount"
        },
        {
          "name": "cellsBusy"
        },
        {
          "name": "sizeCtl"
        },
        {
          "name": "transferIndex"
        }
      ]
    },
    {
      "type": "org.jetbrains.kotlin.com.intellij.util.ConcurrentLongObjectHashMap$CounterCell",
      "fields": [
        {
          "name": "value"
        }
      ]
    },
    {
      "type": "org.jetbrains.kotlin.com.intellij.util.KeyedLazyInstanceEP"
    },
    {
      "type": "org.jetbrains.kotlin.com.intellij.util.QueryExecutor"
    },
    {
      "type": "org.jetbrains.kotlin.com.intellij.util.containers.ConcurrentIntObjectHashMap",
      "fields": [
        {
          "name": "baseCount"
        },
        {
          "name": "cellsBusy"
        },
        {
          "name": "sizeCtl"
        },
        {
          "name": "transferIndex"
        }
      ]
    },
    {
      "type": "org.jetbrains.kotlin.com.intellij.util.containers.ConcurrentIntObjectHashMap$CounterCell",
      "fields": [
        {
          "name": "value"
        }
      ]
    },
    {
      "type": "org.jetbrains.kotlin.extensions.CollectAdditionalSourcesExtension"
    },
    {
      "type": "org.jetbrains.kotlin.extensions.CompilerConfigurationExtension"
    },
    {
      "type": "org.jetbrains.kotlin.extensions.PreprocessedVirtualFileFactoryExtension"
    },
    {
      "type": "org.jetbrains.kotlin.extensions.ProcessSourcesBeforeCompilingExtension"
    },
    {
      "type": "org.jetbrains.kotlin.extensions.StorageComponentContainerContributor"
    },
    {
      "type": "org.jetbrains.kotlin.fir.extensions.FirAnalysisHandlerExtension"
    },
    {
      "type": "org.jetbrains.kotlin.fir.extensions.FirExtensionRegistrarAdapter"
    },
    {
      "type": "org.jetbrains.kotlin.load.java.ErasedOverridabilityCondition"
    },
    {
      "type": "org.jetbrains.kotlin.load.java.FieldOverridabilityCondition"
    },
    {
      "type": "org.jetbrains.kotlin.load.java.JavaIncompatibilityRulesOverridabilityCondition"
    },
    {
      "type": "org.jetbrains.kotlin.load.java.structure.impl.source.JavaFixedElementSourceFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.jetbrains.kotlin.psi.KtAnnotatedExpression"
    },
    {
      "type": "org.jetbrains.kotlin.psi.KtAnnotation"
    },
    {
      "type": "org.jetbrains.kotlin.psi.KtAnnotationEntry"
    },
    {
      "type": "org.jetbrains.kotlin.psi.KtAnnotationUseSiteTarget"
    },
    {
      "type": "org.jetbrains.kotlin.psi.KtArrayAccessExpression"
    },
    {
      "type": "org.jetbrains.kotlin.psi.KtBackingField"
    },
    {
      "type": "org.jetbrains.kotlin.psi.KtBinaryExpression"
    },
    {
      "type": "org.jetbrains.kotlin.psi.KtBinaryExpressionWithTypeRHS"
    },
    {
      "type": "org.jetbrains.kotlin.psi.KtBlockStringTemplateEntry"
    },
    {
      "type": "org.jetbrains.kotlin.psi.KtBreakExpression"
    },
    {
      "type": "org.jetbrains.kotlin.psi.KtCallExpression",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.jetbrains.kotlin.com.intellij.lang.ASTNode"
          ]
        }
      ]
    },
    {
      "type": "org.jetbrains.kotlin.psi.KtCallableReferenceExpression"
    },
    {
      "type": "org.jetbrains.kotlin.psi.KtCatchClause"
    },
    {
      "type": "org.jetbrains.kotlin.psi.KtClass"
    },
    {
      "type": "org.jetbrains.kotlin.psi.KtClassBody"
    },
    {
      "type": "org.jetbrains.kotlin.psi.KtClassInitializer"
    },
    {
      "type": "org.jetbrains.kotlin.psi.KtClassLiteralExpression"
    },
    {
      "type": "org.jetbrains.kotlin.psi.KtCollectionLiteralExpression"
    },
    {
      "type": "org.jetbrains.kotlin.psi.KtConstantExpression"
    },
    {
      "type": "org.jetbrains.kotlin.psi.KtConstructorCalleeExpression"
    },
    {
      "type": "org.jetbrains.kotlin.psi.KtConstructorDelegationCall"
    },
    {
      "type": "org.jetbrains.kotlin.psi.KtConstructorDelegationReferenceExpression"
    },
    {
      "type": "org.jetbrains.kotlin.psi.KtContainerNode"
    },
    {
      "type": "org.jetbrains.kotlin.psi.KtContainerNodeForControlStructureBody"
    },
    {
      "type": "org.jetbrains.kotlin.psi.KtContextReceiver"
    },
    {
      "type": "org.jetbrains.kotlin.psi.KtContextReceiverList"
    },
    {
      "type": "org.jetbrains.kotlin.psi.KtContinueExpression"
    },
    {
      "type": "org.jetbrains.kotlin.psi.KtContractEffect"
    },
    {
      "type": "org.jetbrains.kotlin.psi.KtContractEffectList"
    },
    {
      "type": "org.jetbrains.kotlin.psi.KtDeclarationModifierList"
    },
    {
      "type": "org.jetbrains.kotlin.psi.KtDelegatedSuperTypeEntry"
    },
    {
      "type": "org.jetbrains.kotlin.psi.KtDestructuringDeclaration"
    },
    {
      "type": "org.jetbrains.kotlin.psi.KtDestructuringDeclarationEntry"
    },
    {
      "type": "org.jetbrains.kotlin.psi.KtDoWhileExpression"
    },
    {
      "type": "org.jetbrains.kotlin.psi.KtDotQualifiedExpression"
    },
    {
      "type": "org.jetbrains.kotlin.psi.KtDynamicType"
    },
    {
      "type": "org.jetbrains.kotlin.psi.KtEnumEntrySuperclassReferenceExpression"
    },
    {
      "type": "org.jetbrains.kotlin.psi.KtEscapeStringTemplateEntry"
    },
    {
      "type": "org.jetbrains.kotlin.psi.KtFileAnnotationList"
    },
    {
      "type": "org.jetbrains.kotlin.psi.KtFinallySection"
    },
    {
      "type": "org.jetbrains.kotlin.psi.KtForExpression"
    },
    {
      "type": "org.jetbrains.kotlin.psi.KtFunctionLiteral"
    },
    {
      "type": "org.jetbrains.kotlin.psi.KtFunctionType"
    },
    {
      "type": "org.jetbrains.kotlin.psi.KtFunctionTypeReceiver"
    },
    {
      "type": "org.jetbrains.kotlin.psi.KtIfExpression"
    },
    {
      "type": "org.jetbrains.kotlin.psi.KtImportAlias"
    },
    {
      "type": "org.jetbrains.kotlin.psi.KtImportDirective"
    },
    {
      "type": "org.jetbrains.kotlin.psi.KtImportList",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.jetbrains.kotlin.com.intellij.lang.ASTNode"
          ]
        }
      ]
    },
    {
      "type": "org.jetbrains.kotlin.psi.KtInitializerList"
    },
    {
      "type": "org.jetbrains.kotlin.psi.KtIntersectionType"
    },
    {
      "type": "org.jetbrains.kotlin.psi.KtIsExpression"
    },
    {
      "type": "org.jetbrains.kotlin.psi.KtLabelReferenceExpression"
    },
    {
      "type": "org.jetbrains.kotlin.psi.KtLabeledExpression"
    },
    {
      "type": "org.jetbrains.kotlin.psi.KtLambdaArgument"
    },
    {
      "type": "org.jetbrains.kotlin.psi.KtLiteralStringTemplateEntry",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.jetbrains.kotlin.com.intellij.lang.ASTNode"
          ]
        }
      ]
    },
    {
      "type": "org.jetbrains.kotlin.psi.KtNameReferenceExpression",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.jetbrains.kotlin.com.intellij.lang.ASTNode"
          ]
        }
      ]
    },
    {
      "type": "org.jetbrains.kotlin.psi.KtNamedFunction",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.jetbrains.kotlin.com.intellij.lang.ASTNode"
          ]
        }
      ]
    },
    {
      "type": "org.jetbrains.kotlin.psi.KtNullableType"
    },
    {
      "type": "org.jetbrains.kotlin.psi.KtObjectDeclaration"
    },
    {
      "type": "org.jetbrains.kotlin.psi.KtObjectLiteralExpression"
    },
    {
      "type": "org.jetbrains.kotlin.psi.KtOperationReferenceExpression"
    },
    {
      "type": "org.jetbrains.kotlin.psi.KtPackageDirective",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.jetbrains.kotlin.com.intellij.lang.ASTNode"
          ]
        }
      ]
    },
    {
      "type": "org.jetbrains.kotlin.psi.KtParameter"
    },
    {
      "type": "org.jetbrains.kotlin.psi.KtParameterList",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.jetbrains.kotlin.com.intellij.lang.ASTNode"
          ]
        }
      ]
    },
    {
      "type": "org.jetbrains.kotlin.psi.KtParenthesizedExpression"
    },
    {
      "type": "org.jetbrains.kotlin.psi.KtPostfixExpression"
    },
    {
      "type": "org.jetbrains.kotlin.psi.KtPrefixExpression"
    },
    {
      "type": "org.jetbrains.kotlin.psi.KtPrimaryConstructor"
    },
    {
      "type": "org.jetbrains.kotlin.psi.KtProperty"
    },
    {
      "type": "org.jetbrains.kotlin.psi.KtPropertyAccessor"
    },
    {
      "type": "org.jetbrains.kotlin.psi.KtPropertyDelegate"
    },
    {
      "type": "org.jetbrains.kotlin.psi.KtReturnExpression"
    },
    {
      "type": "org.jetbrains.kotlin.psi.KtSafeQualifiedExpression"
    },
    {
      "type": "org.jetbrains.kotlin.psi.KtScript",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.jetbrains.kotlin.com.intellij.lang.ASTNode"
          ]
        }
      ]
    },
    {
      "type": "org.jetbrains.kotlin.psi.KtScriptInitializer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.jetbrains.kotlin.com.intellij.lang.ASTNode"
          ]
        }
      ]
    },
    {
      "type": "org.jetbrains.kotlin.psi.KtSecondaryConstructor"
    },
    {
      "type": "org.jetbrains.kotlin.psi.KtSimpleNameStringTemplateEntry"
    },
    {
      "type": "org.jetbrains.kotlin.psi.KtStringInterpolationPrefix"
    },
    {
      "type": "org.jetbrains.kotlin.psi.KtStringTemplateExpression",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.jetbrains.kotlin.com.intellij.lang.ASTNode"
          ]
        }
      ]
    },
    {
      "type": "org.jetbrains.kotlin.psi.KtSuperExpression"
    },
    {
      "type": "org.jetbrains.kotlin.psi.KtSuperTypeCallEntry"
    },
    {
      "type": "org.jetbrains.kotlin.psi.KtSuperTypeEntry"
    },
    {
      "type": "org.jetbrains.kotlin.psi.KtSuperTypeList"
    },
    {
      "type": "org.jetbrains.kotlin.psi.KtThisExpression"
    },
    {
      "type": "org.jetbrains.kotlin.psi.KtThrowExpression"
    },
    {
      "type": "org.jetbrains.kotlin.psi.KtTryExpression"
    },
    {
      "type": "org.jetbrains.kotlin.psi.KtTypeAlias"
    },
    {
      "type": "org.jetbrains.kotlin.psi.KtTypeArgumentList"
    },
    {
      "type": "org.jetbrains.kotlin.psi.KtTypeConstraint"
    },
    {
      "type": "org.jetbrains.kotlin.psi.KtTypeConstraintList"
    },
    {
      "type": "org.jetbrains.kotlin.psi.KtTypeParameter"
    },
    {
      "type": "org.jetbrains.kotlin.psi.KtTypeParameterList"
    },
    {
      "type": "org.jetbrains.kotlin.psi.KtTypeProjection"
    },
    {
      "type": "org.jetbrains.kotlin.psi.KtTypeReference"
    },
    {
      "type": "org.jetbrains.kotlin.psi.KtUserType"
    },
    {
      "type": "org.jetbrains.kotlin.psi.KtValueArgument",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.jetbrains.kotlin.com.intellij.lang.ASTNode"
          ]
        }
      ]
    },
    {
      "type": "org.jetbrains.kotlin.psi.KtValueArgumentList",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.jetbrains.kotlin.com.intellij.lang.ASTNode"
          ]
        }
      ]
    },
    {
      "type": "org.jetbrains.kotlin.psi.KtValueArgumentName"
    },
    {
      "type": "org.jetbrains.kotlin.psi.KtWhenConditionInRange"
    },
    {
      "type": "org.jetbrains.kotlin.psi.KtWhenConditionIsPattern"
    },
    {
      "type": "org.jetbrains.kotlin.psi.KtWhenConditionWithExpression"
    },
    {
      "type": "org.jetbrains.kotlin.psi.KtWhenEntry"
    },
    {
      "type": "org.jetbrains.kotlin.psi.KtWhenEntryGuard"
    },
    {
      "type": "org.jetbrains.kotlin.psi.KtWhenExpression"
    },
    {
      "type": "org.jetbrains.kotlin.psi.KtWhileExpression"
    },
    {
      "type": "org.jetbrains.kotlin.psi.stubs.elements.KtFileElementType"
    },
    {
      "type": "org.jetbrains.kotlin.resolve.BindingContext",
      "allPublicFields": true
    },
    {
      "type": "org.jetbrains.kotlin.resolve.calls.checkers.AbstractClassInstantiationChecker"
    },
    {
      "type": "org.jetbrains.kotlin.resolve.calls.checkers.ApiVersionCallChecker"
    },
    {
      "type": "org.jetbrains.kotlin.resolve.calls.checkers.AssigningNamedArgumentToVarargChecker"
    },
    {
      "type": "org.jetbrains.kotlin.resolve.calls.checkers.BuilderFunctionsCallChecker"
    },
    {
      "type": "org.jetbrains.kotlin.resolve.calls.checkers.BuilderInferenceAssignmentChecker"
    },
    {
      "type": "org.jetbrains.kotlin.resolve.calls.checkers.CallReturnsArrayOfNothingChecker"
    },
    {
      "type": "org.jetbrains.kotlin.resolve.calls.checkers.CallableReferenceCompatibilityChecker"
    },
    {
      "type": "org.jetbrains.kotlin.resolve.calls.checkers.CapturingInClosureChecker"
    },
    {
      "type": "org.jetbrains.kotlin.resolve.calls.checkers.CompanionInParenthesesLHSCallChecker"
    },
    {
      "type": "org.jetbrains.kotlin.resolve.calls.checkers.CompanionIncorrectlyUnboundedWhenUsedAsLHSCallChecker"
    },
    {
      "type": "org.jetbrains.kotlin.resolve.calls.checkers.ConstructorHeaderCallChecker"
    },
    {
      "type": "org.jetbrains.kotlin.resolve.calls.checkers.ContractNotAllowedCallChecker"
    },
    {
      "type": "org.jetbrains.kotlin.resolve.calls.checkers.CoroutineSuspendCallChecker"
    },
    {
      "type": "org.jetbrains.kotlin.resolve.calls.checkers.CustomEnumEntriesMigrationCallChecker"
    },
    {
      "type": "org.jetbrains.kotlin.resolve.calls.checkers.DeprecatedCallChecker"
    },
    {
      "type": "org.jetbrains.kotlin.resolve.calls.checkers.DslScopeViolationCallChecker"
    },
    {
      "type": "org.jetbrains.kotlin.resolve.calls.checkers.EnumEntriesUnsupportedChecker"
    },
    {
      "type": "org.jetbrains.kotlin.resolve.calls.checkers.EnumEntryVsCompanionPriorityCallChecker"
    },
    {
      "type": "org.jetbrains.kotlin.resolve.calls.checkers.EqualityCallChecker"
    },
    {
      "type": "org.jetbrains.kotlin.resolve.calls.checkers.FunInterfaceConstructorReferenceChecker"
    },
    {
      "type": "org.jetbrains.kotlin.resolve.calls.checkers.ImplicitNothingAsTypeParameterCallChecker"
    },
    {
      "type": "org.jetbrains.kotlin.resolve.calls.checkers.IncorrectCapturedApproximationCallChecker"
    },
    {
      "type": "org.jetbrains.kotlin.resolve.calls.checkers.InfixCallChecker"
    },
    {
      "type": "org.jetbrains.kotlin.resolve.calls.checkers.InlineCheckerWrapper"
    },
    {
      "type": "org.jetbrains.kotlin.resolve.calls.checkers.LambdaWithSuspendModifierCallChecker"
    },
    {
      "type": "org.jetbrains.kotlin.resolve.calls.checkers.NamedFunAsExpressionChecker"
    },
    {
      "type": "org.jetbrains.kotlin.resolve.calls.checkers.NewSchemeOfIntegerOperatorResolutionChecker"
    },
    {
      "type": "org.jetbrains.kotlin.resolve.calls.checkers.NullableVarargArgumentCallChecker"
    },
    {
      "type": "org.jetbrains.kotlin.resolve.calls.checkers.OperatorCallChecker"
    },
    {
      "type": "org.jetbrains.kotlin.resolve.calls.checkers.ProtectedConstructorCallChecker"
    },
    {
      "type": "org.jetbrains.kotlin.resolve.calls.checkers.ReferencingToUnderscoreNamedParameterOfCatchBlockChecker"
    },
    {
      "type": "org.jetbrains.kotlin.resolve.calls.checkers.ReifiedTypeParameterSubstitutionChecker"
    },
    {
      "type": "org.jetbrains.kotlin.resolve.calls.checkers.ResolutionToPrivateConstructorOfSealedClassChecker"
    },
    {
      "type": "org.jetbrains.kotlin.resolve.calls.checkers.ResultTypeWithNullableOperatorsChecker"
    },
    {
      "type": "org.jetbrains.kotlin.resolve.calls.checkers.SafeCallChecker"
    },
    {
      "type": "org.jetbrains.kotlin.resolve.calls.checkers.SelfCallInNestedObjectConstructorChecker"
    },
    {
      "type": "org.jetbrains.kotlin.resolve.calls.checkers.SuspendConversionCallChecker"
    },
    {
      "type": "org.jetbrains.kotlin.resolve.calls.checkers.SynchronizedByValueChecker"
    },
    {
      "type": "org.jetbrains.kotlin.resolve.calls.checkers.UnderscoreUsageChecker"
    },
    {
      "type": "org.jetbrains.kotlin.resolve.calls.checkers.UnitConversionCallChecker"
    },
    {
      "type": "org.jetbrains.kotlin.resolve.calls.checkers.UnsupportedUntilOperatorChecker"
    },
    {
      "type": "org.jetbrains.kotlin.resolve.calls.checkers.UnsupportedUntilRangeDeclarationChecker"
    },
    {
      "type": "org.jetbrains.kotlin.resolve.calls.checkers.UselessElvisCallChecker"
    },
    {
      "type": "org.jetbrains.kotlin.resolve.calls.checkers.VarargWrongExecutionOrderChecker"
    },
    {
      "type": "org.jetbrains.kotlin.resolve.checkers.ActualClassifierMustHasTheSameMembersAsNonFinalExpectClassifierChecker"
    },
    {
      "type": "org.jetbrains.kotlin.resolve.checkers.ActualTypealiasToSpecialAnnotationChecker"
    },
    {
      "type": "org.jetbrains.kotlin.resolve.checkers.AnnotationClassTargetAndRetentionChecker"
    },
    {
      "type": "org.jetbrains.kotlin.resolve.checkers.ApiVersionClassifierUsageChecker"
    },
    {
      "type": "org.jetbrains.kotlin.resolve.checkers.ConstModifierChecker"
    },
    {
      "type": "org.jetbrains.kotlin.resolve.checkers.ContextualDeclarationChecker"
    },
    {
      "type": "org.jetbrains.kotlin.resolve.checkers.ContractDescriptionBlockChecker"
    },
    {
      "type": "org.jetbrains.kotlin.resolve.checkers.CyclicAnnotationsChecker"
    },
    {
      "type": "org.jetbrains.kotlin.resolve.checkers.DataClassDeclarationChecker"
    },
    {
      "type": "org.jetbrains.kotlin.resolve.checkers.DataObjectContentChecker"
    },
    {
      "type": "org.jetbrains.kotlin.resolve.checkers.DelegationChecker"
    },
    {
      "type": "org.jetbrains.kotlin.resolve.checkers.DeprecatedClassifierUsageChecker"
    },
    {
      "type": "org.jetbrains.kotlin.resolve.checkers.DeprecatedSinceKotlinAnnotationChecker"
    },
    {
      "type": "org.jetbrains.kotlin.resolve.checkers.DeprecationInheritanceChecker"
    },
    {
      "type": "org.jetbrains.kotlin.resolve.checkers.DynamicReceiverChecker"
    },
    {
      "type": "org.jetbrains.kotlin.resolve.checkers.EnumCompanionInEnumConstructorCallChecker"
    },
    {
      "type": "org.jetbrains.kotlin.resolve.checkers.EnumEntriesRedeclarationChecker"
    },
    {
      "type": "org.jetbrains.kotlin.resolve.checkers.ExpectActualClassifiersAreInBetaChecker"
    },
    {
      "type": "org.jetbrains.kotlin.resolve.checkers.ExpectActualInTheSameModuleChecker"
    },
    {
      "type": "org.jetbrains.kotlin.resolve.checkers.ExplicitApiDeclarationChecker"
    },
    {
      "type": "org.jetbrains.kotlin.resolve.checkers.FunInterfaceDeclarationChecker"
    },
    {
      "type": "org.jetbrains.kotlin.resolve.checkers.InfixModifierChecker"
    },
    {
      "type": "org.jetbrains.kotlin.resolve.checkers.InlineParameterChecker"
    },
    {
      "type": "org.jetbrains.kotlin.resolve.checkers.InnerClassInsideValueClass"
    },
    {
      "type": "org.jetbrains.kotlin.resolve.checkers.KClassWithIncorrectTypeArgumentChecker"
    },
    {
      "type": "org.jetbrains.kotlin.resolve.checkers.LocalVariableTypeParametersChecker"
    },
    {
      "type": "org.jetbrains.kotlin.resolve.checkers.MissingDependencyClassChecker"
    },
    {
      "type": "org.jetbrains.kotlin.resolve.checkers.MissingDependencyClassChecker$ClassifierUsage"
    },
    {
      "type": "org.jetbrains.kotlin.resolve.checkers.MissingDependencySupertypeChecker$ForCalls"
    },
    {
      "type": "org.jetbrains.kotlin.resolve.checkers.MissingDependencySupertypeChecker$ForDeclarations"
    },
    {
      "type": "org.jetbrains.kotlin.resolve.checkers.MultiFieldValueClassAnnotationsChecker"
    },
    {
      "type": "org.jetbrains.kotlin.resolve.checkers.NullableExtensionOperatorWithSafeCallChecker"
    },
    {
      "type": "org.jetbrains.kotlin.resolve.checkers.OptionalExpectationUsageChecker"
    },
    {
      "type": "org.jetbrains.kotlin.resolve.checkers.PrimitiveNumericComparisonCallChecker"
    },
    {
      "type": "org.jetbrains.kotlin.resolve.checkers.PrivateInlineFunctionsReturningAnonymousObjectsChecker"
    },
    {
      "type": "org.jetbrains.kotlin.resolve.checkers.PropertiesWithBackingFieldsInsideValueClass"
    },
    {
      "type": "org.jetbrains.kotlin.resolve.checkers.ReifiedTypeParameterAnnotationChecker"
    },
    {
      "type": "org.jetbrains.kotlin.resolve.checkers.RequireKotlinAnnotationValueChecker"
    },
    {
      "type": "org.jetbrains.kotlin.resolve.checkers.ReservedMembersAndConstructsForValueClass"
    },
    {
      "type": "org.jetbrains.kotlin.resolve.checkers.ResultClassInReturnTypeChecker"
    },
    {
      "type": "org.jetbrains.kotlin.resolve.checkers.ReturnValueAnnotationChecker"
    },
    {
      "type": "org.jetbrains.kotlin.resolve.checkers.SealedInheritorInSameModuleChecker"
    },
    {
      "type": "org.jetbrains.kotlin.resolve.checkers.SealedInheritorInSamePackageChecker"
    },
    {
      "type": "org.jetbrains.kotlin.resolve.checkers.SealedInterfaceAllowedChecker"
    },
    {
      "type": "org.jetbrains.kotlin.resolve.checkers.SinceKotlinAnnotationValueChecker"
    },
    {
      "type": "org.jetbrains.kotlin.resolve.checkers.StubForBuilderInferenceParameterTypeChecker"
    },
    {
      "type": "org.jetbrains.kotlin.resolve.checkers.SubtypingBetweenContextReceiversChecker"
    },
    {
      "type": "org.jetbrains.kotlin.resolve.checkers.SuspendFunctionAsSupertypeChecker"
    },
    {
      "type": "org.jetbrains.kotlin.resolve.checkers.SuspendLimitationsChecker"
    },
    {
      "type": "org.jetbrains.kotlin.resolve.checkers.TailrecFunctionChecker"
    },
    {
      "type": "org.jetbrains.kotlin.resolve.checkers.TrailingCommaCallChecker"
    },
    {
      "type": "org.jetbrains.kotlin.resolve.checkers.TrailingCommaDeclarationChecker"
    },
    {
      "type": "org.jetbrains.kotlin.resolve.checkers.UnderscoreChecker"
    },
    {
      "type": "org.jetbrains.kotlin.resolve.checkers.ValueClassDeclarationChecker"
    },
    {
      "type": "org.jetbrains.kotlin.resolve.checkers.ValueParameterUsageInDefaultArgumentChecker"
    },
    {
      "type": "org.jetbrains.kotlin.resolve.checkers.VolatileAnnotationChecker"
    },
    {
      "type": "org.jetbrains.kotlin.resolve.extensions.ExtraImportsProviderExtension"
    },
    {
      "type": "org.jetbrains.kotlin.resolve.extensions.SyntheticResolveExtension"
    },
    {
      "type": "org.jetbrains.kotlin.scripting.compiler.plugin.ScriptingCompilerConfigurationComponentRegistrar",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.jetbrains.kotlin.scripting.compiler.plugin.ScriptingK2CompilerPluginRegistrar",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.jetbrains.kotlin.serialization.DescriptorSerializerPlugin"
    },
    {
      "type": "org.jetbrains.kotlin.serialization.deserialization.builtins.BuiltInsLoaderImpl"
    },
    {
      "type": "org.jetbrains.kotlinx.serialization.compiler.extensions.SerializationComponentRegistrar",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.jetbrains.kotlinx.serialization.compiler.extensions.SerializationPluginOptions",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.pkl.core.runtime.VmLanguageProvider"
    },
    {
      "type": "picocli.CommandLine$AutoHelpMixin",
      "allDeclaredFields": true
    },
    {
      "type": "reactor.core.publisher.FlatMapTracker",
      "fields": [
        {
          "name": "size"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.Flux"
    },
    {
      "type": "reactor.core.publisher.FluxFlatMap$FlatMapInner",
      "fields": [
        {
          "name": "s"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.FluxFlatMap$FlatMapMain",
      "fields": [
        {
          "name": "error"
        },
        {
          "name": "requested"
        },
        {
          "name": "wip"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.Mono"
    },
    {
      "type": "reactor.core.publisher.MonoCompletionStage$MonoCompletionStageSubscription",
      "fields": [
        {
          "name": "requestedOnce"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.MonoNext$NextSubscriber",
      "fields": [
        {
          "name": "wip"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.Operators$MultiSubscriptionSubscriber",
      "fields": [
        {
          "name": "missedProduced"
        },
        {
          "name": "missedRequested"
        },
        {
          "name": "missedSubscription"
        },
        {
          "name": "wip"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.Operators$ScalarSubscription",
      "fields": [
        {
          "name": "once"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.StrictSubscriber",
      "fields": [
        {
          "name": "error"
        },
        {
          "name": "requested"
        },
        {
          "name": "s"
        },
        {
          "name": "wip"
        }
      ]
    },
    {
      "type": "sun.management.ClassLoadingImpl"
    },
    {
      "type": "sun.management.CompilationImpl"
    },
    {
      "type": "sun.management.ManagementFactoryHelper$1"
    },
    {
      "type": "sun.management.ManagementFactoryHelper$PlatformLoggingImpl"
    },
    {
      "type": "sun.management.MemoryImpl"
    },
    {
      "type": "sun.management.MemoryManagerImpl"
    },
    {
      "type": "sun.management.MemoryPoolImpl"
    },
    {
      "type": "sun.management.RuntimeImpl"
    },
    {
      "type": "sun.misc.Unsafe",
      "allDeclaredFields": true,
      "fields": [
        {
          "name": "theUnsafe"
        }
      ],
      "methods": [
        {
          "name": "arrayBaseOffset",
          "parameterTypes": [
            "java.lang.Class"
          ]
        },
        {
          "name": "arrayIndexScale",
          "parameterTypes": [
            "java.lang.Class"
          ]
        },
        {
          "name": "compareAndSwapInt",
          "parameterTypes": [
            "java.lang.Object",
            "long",
            "int",
            "int"
          ]
        },
        {
          "name": "compareAndSwapLong",
          "parameterTypes": [
            "java.lang.Object",
            "long",
            "long",
            "long"
          ]
        },
        {
          "name": "compareAndSwapObject",
          "parameterTypes": [
            "java.lang.Object",
            "long",
            "java.lang.Object",
            "java.lang.Object"
          ]
        },
        {
          "name": "copyMemory",
          "parameterTypes": [
            "java.lang.Object",
            "long",
            "java.lang.Object",
            "long",
            "long"
          ]
        },
        {
          "name": "getAndAddInt",
          "parameterTypes": [
            "java.lang.Object",
            "long",
            "int"
          ]
        },
        {
          "name": "getObjectVolatile",
          "parameterTypes": [
            "java.lang.Object",
            "long"
          ]
        },
        {
          "name": "invokeCleaner",
          "parameterTypes": [
            "java.nio.ByteBuffer"
          ]
        },
        {
          "name": "objectFieldOffset",
          "parameterTypes": [
            "java.lang.reflect.Field"
          ]
        },
        {
          "name": "putObjectVolatile",
          "parameterTypes": [
            "java.lang.Object",
            "long",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "sun.misc.VM"
    },
    {
      "type": "sun.rmi.transport.DGCImpl_Skel",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.rmi.transport.DGCImpl_Stub",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.rmi.server.RemoteRef"
          ]
        }
      ]
    },
    {
      "type": "sun.security.pkcs12.PKCS12KeyStore",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.pkcs12.PKCS12KeyStore$DualFormatPKCS12",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.provider.DSA$SHA224withDSA",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.provider.DSA$SHA256withDSA",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.provider.DSAKeyFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.provider.DSAParameters",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.provider.JavaKeyStore$DualFormatJKS",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.provider.JavaKeyStore$JKS",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.provider.NativePRNG",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.security.SecureRandomParameters"
          ]
        }
      ]
    },
    {
      "type": "sun.security.provider.NativePRNG$NonBlocking",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.security.SecureRandomParameters"
          ]
        }
      ]
    },
    {
      "type": "sun.security.provider.SHA",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.provider.SHA2$SHA224",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.provider.SHA2$SHA256",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.provider.SHA5$SHA384",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.provider.SHA5$SHA512",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.provider.X509Factory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.provider.certpath.PKIXCertPathValidator",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.rsa.PSSParameters",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.rsa.RSAKeyFactory$Legacy",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.rsa.RSAPSSSignature",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.rsa.RSASignature$SHA224withRSA",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.rsa.RSASignature$SHA256withRSA",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.ssl.KeyManagerFactoryImpl$SunX509",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.ssl.SSLContextImpl$TLSContext",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.ssl.TrustManagerFactoryImpl$PKIXFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.x509.AuthorityInfoAccessExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "sun.security.x509.AuthorityKeyIdentifierExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "sun.security.x509.BasicConstraintsExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "sun.security.x509.CRLDistributionPointsExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "sun.security.x509.CertificatePoliciesExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "sun.security.x509.ExtendedKeyUsageExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "sun.security.x509.IssuerAlternativeNameExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "sun.security.x509.KeyUsageExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "sun.security.x509.NetscapeCertTypeExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "sun.security.x509.PrivateKeyUsageExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "sun.security.x509.SubjectAlternativeNameExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "sun.security.x509.SubjectKeyIdentifierExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "sun.util.logging.resources.logging"
    },
    {
      "type": {
        "proxy": [
          "java.security.PrivilegedAction"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "org.jetbrains.kotlin.com.intellij.openapi.command.CommandListener"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "org.jetbrains.kotlin.com.intellij.openapi.vfs.VirtualFileListener"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "org.jetbrains.kotlin.com.intellij.psi.util.PsiModificationTracker$Listener"
        ]
      }
    }
  ],
  "resources": [
    {
      "glob": "/META-INF/elide/samples/**/*"
    },
    {
      "glob": "/org/apache/maven/model/**/*"
    },
    {
      "glob": "ElideTool.properties"
    },
    {
      "glob": "ElideTool_en.properties"
    },
    {
      "glob": "ElideTool_en_US.properties"
    },
    {
      "glob": "META-INF/MANIFEST.MF"
    },
    {
      "glob": "META-INF/allow-configuring-from-environment"
    },
    {
      "glob": "META-INF/compiler.version"
    },
    {
      "glob": "META-INF/elide/embedded/runtime/js/js.vfs.tar"
    },
    {
      "glob": "META-INF/elide/embedded/runtime/js/polyfills.js"
    },
    {
      "glob": "META-INF/elide/embedded/runtime/js/runtime.json.gz"
    },
    {
      "glob": "META-INF/elide/embedded/runtime/jvm/runtime.json.gz"
    },
    {
      "glob": "META-INF/elide/embedded/runtime/kt/runtime.json.gz"
    },
    {
      "glob": "META-INF/elide/embedded/runtime/python/runtime.json.gz"
    },
    {
      "glob": "META-INF/elide/embedded/runtime/ts/runtime.json.gz"
    },
    {
      "glob": "META-INF/elide/help/**/*"
    },
    {
      "glob": "META-INF/elide/help/*.md"
    },
    {
      "glob": "META-INF/elide/pkl/**/*"
    },
    {
      "glob": "META-INF/elide/pkl/Artifacts.pkl"
    },
    {
      "glob": "META-INF/elide/pkl/Base.pkl"
    },
    {
      "glob": "META-INF/elide/pkl/Dev.pkl"
    },
    {
      "glob": "META-INF/elide/pkl/HuggingFace.pkl"
    },
    {
      "glob": "META-INF/elide/pkl/Infra.pkl"
    },
    {
      "glob": "META-INF/elide/pkl/Java.pkl"
    },
    {
      "glob": "META-INF/elide/pkl/JavaScript.pkl"
    },
    {
      "glob": "META-INF/elide/pkl/Jvm.pkl"
    },
    {
      "glob": "META-INF/elide/pkl/Kotlin.pkl"
    },
    {
      "glob": "META-INF/elide/pkl/Lockfile.pkl"
    },
    {
      "glob": "META-INF/elide/pkl/NativeImage.pkl"
    },
    {
      "glob": "META-INF/elide/pkl/Ops.pkl"
    },
    {
      "glob": "META-INF/elide/pkl/Pkl.pkl"
    },
    {
      "glob": "META-INF/elide/pkl/Products.pkl"
    },
    {
      "glob": "META-INF/elide/pkl/Python.pkl"
    },
    {
      "glob": "META-INF/elide/pkl/Ruby.pkl"
    },
    {
      "glob": "META-INF/elide/pkl/Sources.pkl"
    },
    {
      "glob": "META-INF/elide/pkl/Task.pkl"
    },
    {
      "glob": "META-INF/elide/pkl/Testing.pkl"
    },
    {
      "glob": "META-INF/elide/pkl/TypeScript.pkl"
    },
    {
      "glob": "META-INF/elide/pkl/Workspace.pkl"
    },
    {
      "glob": "META-INF/elide/pkl/ci/ContinuousIntegration.pkl"
    },
    {
      "glob": "META-INF/elide/pkl/project.pkl"
    },
    {
      "glob": "META-INF/elide/projects/**/*"
    },
    {
      "glob": "META-INF/graalvm/org.graalvm.polyglot/version"
    },
    {
      "glob": "META-INF/graalvm/org.graalvm.truffle/version"
    },
    {
      "glob": "META-INF/maven/org.xerial/sqlite-jdbc/VERSION"
    },
    {
      "glob": "META-INF/maven/org.xerial/sqlite-jdbc/pom.properties"
    },
    {
      "glob": "META-INF/micronaut"
    },
    {
      "glob": "META-INF/micronaut/"
    },
    {
      "glob": "META-INF/native/libnetty_transport_native_epoll_x86_64.so"
    },
    {
      "glob": "META-INF/native/libnetty_transport_native_io_uring_x86_64.so"
    },
    {
      "glob": "META-INF/org/pkl/config/java/mapper/classes/elide.javascript.properties"
    },
    {
      "glob": "META-INF/org/pkl/config/java/mapper/classes/elide.jvm.properties"
    },
    {
      "glob": "META-INF/org/pkl/config/java/mapper/classes/elide.kotlin.properties"
    },
    {
      "glob": "META-INF/org/pkl/config/java/mapper/classes/elide.lockfile.properties"
    },
    {
      "glob": "META-INF/org/pkl/config/java/mapper/classes/elide.project.properties"
    },
    {
      "glob": "META-INF/org/pkl/config/java/mapper/classes/elide.ruby.properties"
    },
    {
      "glob": "META-INF/org/pkl/config/java/mapper/classes/elide.testing.properties"
    },
    {
      "glob": "META-INF/org/pkl/config/java/mapper/classes/pkl.base.properties"
    },
    {
      "glob": "META-INF/resources/engine/libtruffleattach/linux/amd64/sha256"
    },
    {
      "glob": "META-INF/resources/include.sha256"
    },
    {
      "glob": "META-INF/resources/java/espresso-libs/linux/amd64/sha256"
    },
    {
      "glob": "META-INF/resources/java/espresso-runtime-jdk21/linux/amd64/sha256"
    },
    {
      "glob": "META-INF/resources/libgraalpy.sha256"
    },
    {
      "glob": "META-INF/resources/libpython.sha256"
    },
    {
      "glob": "META-INF/resources/linux/amd64/native.sha256"
    },
    {
      "glob": "META-INF/resources/nfi-native/libnfi/linux/amd64/sha256"
    },
    {
      "glob": "META-INF/resources/ni.sha256"
    },
    {
      "glob": "META-INF/services/ch.qos.logback.classic.spi.Configurator"
    },
    {
      "glob": "META-INF/services/com.aayushatharva.brotli4j.service.BrotliNativeProvider"
    },
    {
      "glob": "META-INF/services/com.github.ajalt.mordant.terminal.TerminalInterfaceProvider"
    },
    {
      "glob": "META-INF/services/com.oracle.graal.python.builtins.PythonBuiltins"
    },
    {
      "glob": "META-INF/services/com.oracle.truffle.api.TruffleRuntimeAccess"
    },
    {
      "glob": "META-INF/services/com.oracle.truffle.api.impl.TruffleLocator"
    },
    {
      "glob": "META-INF/services/com.oracle.truffle.api.instrumentation.provider.TruffleInstrumentProvider"
    },
    {
      "glob": "META-INF/services/com.oracle.truffle.api.library.provider.DefaultExportProvider"
    },
    {
      "glob": "META-INF/services/com.oracle.truffle.api.object.LayoutFactory"
    },
    {
      "glob": "META-INF/services/com.oracle.truffle.api.provider.InternalResourceProvider"
    },
    {
      "glob": "META-INF/services/com.oracle.truffle.api.provider.TruffleLanguageProvider"
    },
    {
      "glob": "META-INF/services/com.oracle.truffle.js.runtime.Evaluator"
    },
    {
      "glob": "META-INF/services/com.oracle.truffle.llvm.runtime.config.ConfigurationFactory"
    },
    {
      "glob": "META-INF/services/com.oracle.truffle.runtime.EngineCacheSupport"
    },
    {
      "glob": "META-INF/services/com.oracle.truffle.runtime.FloodControlHandler"
    },
    {
      "glob": "META-INF/services/com.oracle.truffle.runtime.LoopNodeFactory"
    },
    {
      "glob": "META-INF/services/com.oracle.truffle.runtime.TruffleTypes"
    },
    {
      "glob": "META-INF/services/com.oracle.truffle.runtime.jfr.EventFactory$Provider"
    },
    {
      "glob": "META-INF/services/com.sun.source.util.Plugin"
    },
    {
      "glob": "META-INF/services/com.sun.tools.javac.platform.PlatformProvider"
    },
    {
      "glob": "META-INF/services/elide.runtime.intrinsics.GuestIntrinsic"
    },
    {
      "glob": "META-INF/services/elide.tooling.config.BuildConfigurator"
    },
    {
      "glob": "META-INF/services/elide.tooling.config.TestConfigurator"
    },
    {
      "glob": "META-INF/services/elide.tooling.lockfile.LockfileContributor"
    },
    {
      "glob": "META-INF/services/io.micronaut.context.ApplicationContextConfigurer"
    },
    {
      "glob": "META-INF/services/io.micronaut.context.env.PropertyExpressionResolver"
    },
    {
      "glob": "META-INF/services/io.micronaut.core.beans.BeanIntrospectionReference"
    },
    {
      "glob": "META-INF/services/io.micronaut.core.convert.TypeConverterRegistrar"
    },
    {
      "glob": "META-INF/services/io.micronaut.core.optim.StaticOptimizations$Loader"
    },
    {
      "glob": "META-INF/services/io.micronaut.http.HttpRequestFactory"
    },
    {
      "glob": "META-INF/services/java.lang.System$LoggerFinder"
    },
    {
      "glob": "META-INF/services/java.net.spi.InetAddressResolverProvider"
    },
    {
      "glob": "META-INF/services/java.net.spi.URLStreamHandlerProvider"
    },
    {
      "glob": "META-INF/services/java.nio.channels.spi.SelectorProvider"
    },
    {
      "glob": "META-INF/services/java.nio.file.spi.FileSystemProvider"
    },
    {
      "glob": "META-INF/services/java.time.zone.ZoneRulesProvider"
    },
    {
      "glob": "META-INF/services/java.util.spi.ResourceBundleControlProvider"
    },
    {
      "glob": "META-INF/services/javax.annotation.processing.Processor"
    },
    {
      "glob": "META-INF/services/javax.management.remote.JMXConnectorServerProvider"
    },
    {
      "glob": "META-INF/services/kotlin.reflect.jvm.internal.impl.resolve.ExternalOverridabilityCondition"
    },
    {
      "glob": "META-INF/services/kotlin.reflect.jvm.internal.impl.util.ModuleVisibilityHelper"
    },
    {
      "glob": "META-INF/services/kotlinx.coroutines.reactive.ContextInjector"
    },
    {
      "glob": "META-INF/services/org.graalvm.home.HomeFinder"
    },
    {
      "glob": "META-INF/services/org.graalvm.polyglot.impl.AbstractPolyglotImpl"
    },
    {
      "glob": "META-INF/services/org.jetbrains.kotlin.builtins.BuiltInsLoader"
    },
    {
      "glob": "META-INF/services/org.jetbrains.kotlin.com.intellij.platform.diagnostic.telemetry.TelemetryManager"
    },
    {
      "glob": "META-INF/services/org.jetbrains.kotlin.compiler.plugin.CompilerPluginRegistrar"
    },
    {
      "glob": "META-INF/services/org.jetbrains.kotlin.compiler.plugin.ComponentRegistrar"
    },
    {
      "glob": "META-INF/services/org.jetbrains.kotlin.resolve.ExternalOverridabilityCondition"
    },
    {
      "glob": "META-INF/services/org.jetbrains.kotlin.util.ModuleVisibilityHelper"
    },
    {
      "glob": "META-INF/services/org.pkl.core.StackFrameTransformer"
    },
    {
      "glob": "META-INF/services/org.pkl.core.module.ModuleKeyFactory"
    },
    {
      "glob": "META-INF/services/org.slf4j.spi.SLF4JServiceProvider"
    },
    {
      "glob": "com/oracle/graal/python/builtins/PythonBuiltins.class"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenABC.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenCODECS.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenCOLLECTIONS.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenCOLLECTIONS_ABC.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenCONTEXTLIB.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenCOPYREG.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenDATETIME.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenENCODINGS.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenENCODINGS_ALIASES.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenENCODINGS_ASCII.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenENCODINGS_BASE64_CODEC.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenENCODINGS_BIG5.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenENCODINGS_BIG5HKSCS.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenENCODINGS_BZ2_CODEC.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenENCODINGS_CHARMAP.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenENCODINGS_CP037.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenENCODINGS_CP1006.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenENCODINGS_CP1026.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenENCODINGS_CP1125.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenENCODINGS_CP1140.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenENCODINGS_CP1250.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenENCODINGS_CP1251.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenENCODINGS_CP1252.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenENCODINGS_CP1253.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenENCODINGS_CP1254.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenENCODINGS_CP1255.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenENCODINGS_CP1256.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenENCODINGS_CP1257.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenENCODINGS_CP1258.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenENCODINGS_CP273.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenENCODINGS_CP424.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenENCODINGS_CP437.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenENCODINGS_CP500.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenENCODINGS_CP720.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenENCODINGS_CP737.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenENCODINGS_CP775.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenENCODINGS_CP850.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenENCODINGS_CP852.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenENCODINGS_CP855.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenENCODINGS_CP856.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenENCODINGS_CP857.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenENCODINGS_CP858.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenENCODINGS_CP860.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenENCODINGS_CP861.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenENCODINGS_CP862.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenENCODINGS_CP863.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenENCODINGS_CP864.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenENCODINGS_CP865.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenENCODINGS_CP866.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenENCODINGS_CP869.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenENCODINGS_CP874.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenENCODINGS_CP875.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenENCODINGS_CP932.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenENCODINGS_CP949.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenENCODINGS_CP950.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenENCODINGS_EUC_JISX0213.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenENCODINGS_EUC_JIS_2004.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenENCODINGS_EUC_JP.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenENCODINGS_EUC_KR.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenENCODINGS_GB18030.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenENCODINGS_GB2312.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenENCODINGS_GBK.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenENCODINGS_HEX_CODEC.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenENCODINGS_HP_ROMAN8.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenENCODINGS_HZ.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenENCODINGS_IDNA.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenENCODINGS_ISO2022_JP.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenENCODINGS_ISO2022_JP_1.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenENCODINGS_ISO2022_JP_2.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenENCODINGS_ISO2022_JP_2004.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenENCODINGS_ISO2022_JP_3.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenENCODINGS_ISO2022_JP_EXT.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenENCODINGS_ISO2022_KR.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenENCODINGS_ISO8859_1.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenENCODINGS_ISO8859_10.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenENCODINGS_ISO8859_11.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenENCODINGS_ISO8859_13.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenENCODINGS_ISO8859_14.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenENCODINGS_ISO8859_15.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenENCODINGS_ISO8859_16.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenENCODINGS_ISO8859_2.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenENCODINGS_ISO8859_3.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenENCODINGS_ISO8859_4.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenENCODINGS_ISO8859_5.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenENCODINGS_ISO8859_6.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenENCODINGS_ISO8859_7.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenENCODINGS_ISO8859_8.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenENCODINGS_ISO8859_9.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenENCODINGS_JOHAB.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenENCODINGS_KOI8_R.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenENCODINGS_KOI8_T.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenENCODINGS_KOI8_U.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenENCODINGS_KZ1048.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenENCODINGS_LATIN_1.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenENCODINGS_MAC_ARABIC.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenENCODINGS_MAC_CROATIAN.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenENCODINGS_MAC_CYRILLIC.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenENCODINGS_MAC_FARSI.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenENCODINGS_MAC_GREEK.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenENCODINGS_MAC_ICELAND.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenENCODINGS_MAC_LATIN2.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenENCODINGS_MAC_ROMAN.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenENCODINGS_MAC_ROMANIAN.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenENCODINGS_MAC_TURKISH.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenENCODINGS_MBCS.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenENCODINGS_OEM.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenENCODINGS_PALMOS.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenENCODINGS_PTCP154.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenENCODINGS_PUNYCODE.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenENCODINGS_QUOPRI_CODEC.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenENCODINGS_RAW_UNICODE_ESCAPE.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenENCODINGS_ROT_13.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenENCODINGS_SHIFT_JIS.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenENCODINGS_SHIFT_JISX0213.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenENCODINGS_SHIFT_JIS_2004.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenENCODINGS_TIS_620.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenENCODINGS_UNDEFINED.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenENCODINGS_UNICODE_ESCAPE.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenENCODINGS_UTF_16.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenENCODINGS_UTF_16_BE.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenENCODINGS_UTF_16_LE.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenENCODINGS_UTF_32.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenENCODINGS_UTF_32_BE.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenENCODINGS_UTF_32_LE.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenENCODINGS_UTF_7.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenENCODINGS_UTF_8.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenENCODINGS_UTF_8_SIG.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenENCODINGS_UU_CODEC.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenENCODINGS_ZLIB_CODEC.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenENUM.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenFROZEN_ONLY.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenFUNCTOOLS.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenGENERICPATH.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenGRAALPY_BUILTINS.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenGRAALPY_JAVA.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenGRAALPY_PIP_HOOK.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenGRAALPY_UNICODEDATA.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenGRAALPY__POLYGLOT.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenGRAALPY__SRE.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenGRAALPY__SYSCONFIG.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenGRAALPY__WEAKREF.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenGRAALPY___GRAALPYTHON__.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenHEAPQ.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenIMPORTLIB_MACHINERY.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenIMPORTLIB_UTIL.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenIMPORTLIB__BOOTSTRAP.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenIMPORTLIB__BOOTSTRAP_EXTERNAL.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenINSPECT.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenIO.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenKEYWORD.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenLOCALE.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenNTPATH.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenOPERATOR.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenOS.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenPOLYGLOT_ARROW.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenPOSIXPATH.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenRE.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenREPRLIB.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenRE__CASEFIX.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenRE__COMPILER.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenRE__CONSTANTS.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenRE__PARSER.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenRLCOMPLETER.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenRUNPY.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenSITE.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenSRE_COMPILE.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenSRE_CONSTANTS.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenSRE_PARSE.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenSTAT.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenTYPES.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenWARNINGS.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/FrozenZIPIMPORT.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/Frozen_COLLECTIONS_ABC.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/Frozen_PY_ABC.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/Frozen_SITEBUILTINS.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/Frozen_SYSCONFIGDATA.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/Frozen_WEAKREFSET.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/Frozen__HELLO__.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/Frozen__PHELLO__.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/Frozen__PHELLO___HAM.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/Frozen__PHELLO___HAM_EGGS.bin"
    },
    {
      "glob": "com/oracle/graal/python/builtins/objects/module/Frozen__PHELLO___SPAM.bin"
    },
    {
      "glob": "com/sun/tools/javac/resources/compiler_en.properties"
    },
    {
      "glob": "com/sun/tools/javac/resources/compiler_en_US.properties"
    },
    {
      "glob": "com/sun/tools/javac/resources/javac_en.properties"
    },
    {
      "glob": "com/sun/tools/javac/resources/javac_en_US.properties"
    },
    {
      "glob": "graalpy_versions"
    },
    {
      "glob": "kotlin/annotation/annotation.kotlin_builtins"
    },
    {
      "glob": "kotlin/collections/collections.kotlin_builtins"
    },
    {
      "glob": "kotlin/concurrent/atomics/atomics.kotlin_builtins"
    },
    {
      "glob": "kotlin/coroutines/coroutines.kotlin_builtins"
    },
    {
      "glob": "kotlin/internal/internal.kotlin_builtins"
    },
    {
      "glob": "kotlin/jvm/JvmStatic.class"
    },
    {
      "glob": "kotlin/kotlin.kotlin_builtins"
    },
    {
      "glob": "kotlin/ranges/ranges.kotlin_builtins"
    },
    {
      "glob": "kotlin/reflect/full/KClasses.class"
    },
    {
      "glob": "kotlin/reflect/reflect.kotlin_builtins"
    },
    {
      "glob": "kotlin/script/templates/standard/ScriptTemplateWithArgs.class"
    },
    {
      "glob": "lib/linux-x86_64/libbrotli.so"
    },
    {
      "glob": "logback-test.scmo"
    },
    {
      "glob": "logback.scmo"
    },
    {
      "glob": "org/apache/maven/model/**/*"
    },
    {
      "glob": "org/apache/maven/model/pom-4.0.0.xml"
    },
    {
      "glob": "org/graalvm/shadowed/com/ibm/icu/ICUConfig.properties"
    },
    {
      "glob": "org/graalvm/shadowed/com/ibm/icu/impl/data/icudata/uprops.icu"
    },
    {
      "glob": "org/jetbrains/kotlin/cli/common/CompilerSystemProperties.class"
    },
    {
      "glob": "org/jetbrains/kotlin/cli/jvm/compiler/KotlinCoreEnvironment$Companion.class"
    },
    {
      "glob": "org/jetbrains/kotlin/scripting/definitions/AutoloadedScriptDefinitions.class"
    },
    {
      "glob": "org/pkl/core/Release.properties"
    },
    {
      "glob": "org/pkl/core/stdlib/base.pkl"
    },
    {
      "glob": "resources/releases/element-list-*.txt"
    },
    {
      "module": "java.base",
      "glob": "jdk/internal/icu/impl/data/icudt76b/nfkc.nrm"
    },
    {
      "module": "java.base",
      "glob": "jdk/internal/icu/impl/data/icudt76b/uprops.icu"
    },
    {
      "module": "java.base",
      "glob": "sun/net/idn/uidna.spp"
    },
    {
      "module": "java.base",
      "glob": "sun/net/www/content-types.properties"
    },
    {
      "module": "jdk.compiler",
      "glob": "com/sun/tools/javac/resources/compiler_en.properties"
    },
    {
      "module": "jdk.compiler",
      "glob": "com/sun/tools/javac/resources/compiler_en_US.properties"
    },
    {
      "module": "jdk.compiler",
      "glob": "com/sun/tools/javac/resources/javac_en.properties"
    },
    {
      "module": "jdk.compiler",
      "glob": "com/sun/tools/javac/resources/javac_en_US.properties"
    },
    {
      "module": "jdk.javadoc",
      "glob": "jdk/javadoc/internal/doclets/formats/html/resources/**"
    },
    {
      "module": "jdk.javadoc",
      "glob": "jdk/javadoc/internal/doclets/formats/html/resources/fonts/dejavu.css"
    },
    {
      "module": "jdk.javadoc",
      "glob": "jdk/javadoc/internal/doclets/formats/html/resources/legal/jquery.md"
    },
    {
      "module": "jdk.javadoc",
      "glob": "resources/releases/element-list-*.txt"
    },
    {
      "module": "jdk.jfr",
      "glob": "jdk/jfr/internal/query/view.ini"
    },
    {
      "module": "jdk.jfr",
      "glob": "jdk/jfr/internal/types/metadata.bin"
    }
  ],
  "bundles": [
    {
      "name": "sun.util.logging.resources.logging",
      "locales": [
        "en-US"
      ]
    },
    {
      "name": "ElideTool",
      "locales": [
        "en-US"
      ]
    },
    {
      "name": "com.sun.tools.javac.resources.compiler",
      "locales": [
        "en",
        "en-US"
      ]
    },
    {
      "name": "com.sun.tools.javac.resources.ct",
      "locales": [
        "en-US"
      ]
    },
    {
      "name": "com.sun.tools.javac.resources.javac",
      "locales": [
        "en-US"
      ]
    },
    {
      "name": "jdk.javadoc.internal.doclets.formats.html.resources.standard",
      "locales": [
        "en",
        "en-US"
      ]
    },
    {
      "name": "jdk.javadoc.internal.doclets.toolkit.resources.doclets",
      "locales": [
        "en",
        "en-US"
      ]
    },
    {
      "name": "jdk.javadoc.internal.doclint.resources.doclint",
      "locales": [
        "en",
        "en-US"
      ]
    },
    {
      "name": "jdk.javadoc.internal.tool.resources.javadoc",
      "locales": [
        "en",
        "en-US"
      ]
    },
    {
      "name": "sun.util.logging.resources.logging"
    }
  ],
  "serialization": [
    {
      "type": "ch.qos.logback.classic.model.ConfigurationModel"
    },
    {
      "type": "ch.qos.logback.classic.model.ContextNameModel"
    },
    {
      "type": "ch.qos.logback.classic.model.LoggerContextListenerModel"
    },
    {
      "type": "ch.qos.logback.classic.model.LoggerModel"
    },
    {
      "type": "ch.qos.logback.classic.model.RootLoggerModel"
    },
    {
      "type": "ch.qos.logback.core.model.AppenderModel"
    },
    {
      "type": "ch.qos.logback.core.model.AppenderRefModel"
    },
    {
      "type": "ch.qos.logback.core.model.ComponentModel"
    },
    {
      "type": "ch.qos.logback.core.model.ImplicitModel"
    },
    {
      "type": "ch.qos.logback.core.model.Model"
    },
    {
      "type": "ch.qos.logback.core.model.NamedComponentModel"
    },
    {
      "type": "ch.qos.logback.core.model.NamedModel"
    },
    {
      "type": "ch.qos.logback.core.model.PropertyModel"
    },
    {
      "type": "ch.qos.logback.core.model.SerializeModelModel"
    },
    {
      "type": "ch.qos.logback.core.model.SiftModel"
    },
    {
      "type": "ch.qos.logback.core.model.StatusListenerModel"
    },
    {
      "type": "java.rmi.server.RemoteObject"
    },
    {
      "type": "java.rmi.server.RemoteStub"
    },
    {
      "type": "java.util.ArrayList"
    },
    {
      "type": "javax.management.remote.rmi.RMIServerImpl_Stub"
    }
  ],
  "jni": [
    {
      "type": "[B"
    },
    {
      "type": "[J"
    },
    {
      "type": "[Lcom.sun.management.internal.DiagnosticCommandArgumentInfo;"
    },
    {
      "type": "[Lcom.sun.management.internal.DiagnosticCommandInfo;"
    },
    {
      "type": "[[J"
    },
    {
      "type": "com.oracle.truffle.runtime.hotspot.libgraal.TruffleFromLibGraalEntryPoints",
      "methods": [
        {
          "name": "getHostMethodInfo",
          "parameterTypes": [
            "java.lang.Object",
            "long"
          ]
        }
      ]
    },
    {
      "type": "com.sun.management.internal.DiagnosticCommandArgumentInfo",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.String",
            "java.lang.String",
            "java.lang.String",
            "java.lang.String",
            "boolean",
            "boolean",
            "boolean",
            "int"
          ]
        }
      ]
    },
    {
      "type": "com.sun.management.internal.DiagnosticCommandInfo",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.String",
            "java.lang.String",
            "java.lang.String",
            "boolean",
            "java.util.List"
          ]
        }
      ]
    },
    {
      "type": "elide.exec.TraceNative",
      "methods": [
        {
          "name": "deliverNativeLog",
          "parameterTypes": [
            "elide.exec.TraceNative$LogRecord"
          ]
        },
        {
          "name": "deliverNativeLog",
          "parameterTypes": [
            "java.lang.String",
            "java.lang.String",
            "java.lang.String",
            "java.lang.String"
          ]
        },
        {
          "name": "deliverNativeTrace",
          "parameterTypes": [
            "long",
            "long",
            "int",
            "int",
            "java.lang.String",
            "java.lang.String"
          ]
        },
        {
          "name": "deliverNativeTrace",
          "parameterTypes": [
            "elide.exec.TraceNative$TraceRecord"
          ]
        },
        {
          "name": "lookupLoggerEnabled",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "elide.tool.cli.MainKt",
      "methods": [
        {
          "name": "main",
          "parameterTypes": [
            "java.lang.String[]"
          ]
        }
      ]
    },
    {
      "type": "io.netty.channel.ChannelException"
    },
    {
      "type": "io.netty.channel.DefaultFileRegion",
      "fields": [
        {
          "name": "file"
        },
        {
          "name": "transferred"
        }
      ]
    },
    {
      "type": "io.netty.channel.epoll.LinuxSocket"
    },
    {
      "type": "io.netty.channel.epoll.Native"
    },
    {
      "type": "io.netty.channel.epoll.NativeDatagramPacketArray$NativeDatagramPacket",
      "fields": [
        {
          "name": "count"
        },
        {
          "name": "memoryAddress"
        },
        {
          "name": "recipientAddr"
        },
        {
          "name": "recipientAddrLen"
        },
        {
          "name": "recipientPort"
        },
        {
          "name": "recipientScopeId"
        },
        {
          "name": "segmentSize"
        },
        {
          "name": "senderAddr"
        },
        {
          "name": "senderAddrLen"
        },
        {
          "name": "senderPort"
        },
        {
          "name": "senderScopeId"
        }
      ]
    },
    {
      "type": "io.netty.channel.epoll.NativeStaticallyReferencedJniMethods"
    },
    {
      "type": "io.netty.channel.unix.Buffer"
    },
    {
      "type": "io.netty.channel.unix.DatagramSocketAddress",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "byte[]",
            "int",
            "int",
            "int",
            "io.netty.channel.unix.DatagramSocketAddress"
          ]
        }
      ]
    },
    {
      "type": "io.netty.channel.unix.DomainDatagramSocketAddress",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "byte[]",
            "int",
            "io.netty.channel.unix.DomainDatagramSocketAddress"
          ]
        }
      ]
    },
    {
      "type": "io.netty.channel.unix.ErrorsStaticallyReferencedJniMethods"
    },
    {
      "type": "io.netty.channel.unix.FileDescriptor"
    },
    {
      "type": "io.netty.channel.unix.LimitsStaticallyReferencedJniMethods"
    },
    {
      "type": "io.netty.channel.unix.PeerCredentials",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "int",
            "int",
            "int[]"
          ]
        }
      ]
    },
    {
      "type": "io.netty.channel.unix.Socket"
    },
    {
      "type": "io.netty.incubator.channel.uring.LinuxSocket"
    },
    {
      "type": "io.netty.incubator.channel.uring.Native"
    },
    {
      "type": "io.netty.incubator.channel.uring.NativeStaticallyReferencedJniMethods"
    },
    {
      "type": "io.netty.internal.tcnative.Buffer"
    },
    {
      "type": "io.netty.internal.tcnative.CertificateCallbackTask",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "long",
            "byte[]",
            "byte[][]",
            "io.netty.internal.tcnative.CertificateCallback"
          ]
        }
      ]
    },
    {
      "type": "io.netty.internal.tcnative.CertificateVerifierTask",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "long",
            "byte[][]",
            "java.lang.String",
            "io.netty.internal.tcnative.CertificateVerifier"
          ]
        }
      ]
    },
    {
      "type": "io.netty.internal.tcnative.Library"
    },
    {
      "type": "io.netty.internal.tcnative.NativeStaticallyReferencedJniMethods"
    },
    {
      "type": "io.netty.internal.tcnative.SSL"
    },
    {
      "type": "io.netty.internal.tcnative.SSLContext"
    },
    {
      "type": "io.netty.internal.tcnative.SSLPrivateKeyMethodDecryptTask",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "long",
            "byte[]",
            "io.netty.internal.tcnative.AsyncSSLPrivateKeyMethod"
          ]
        }
      ]
    },
    {
      "type": "io.netty.internal.tcnative.SSLPrivateKeyMethodSignTask",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "long",
            "int",
            "byte[]",
            "io.netty.internal.tcnative.AsyncSSLPrivateKeyMethod"
          ]
        }
      ]
    },
    {
      "type": "io.netty.internal.tcnative.SSLPrivateKeyMethodTask",
      "fields": [
        {
          "name": "resultBytes"
        }
      ]
    },
    {
      "type": "io.netty.internal.tcnative.SSLSession"
    },
    {
      "type": "io.netty.internal.tcnative.SSLTask",
      "fields": [
        {
          "name": "complete"
        },
        {
          "name": "returnValue"
        }
      ]
    },
    {
      "type": "java.io.FileDescriptor",
      "fields": [
        {
          "name": "fd"
        }
      ]
    },
    {
      "type": "java.io.IOException"
    },
    {
      "type": "java.lang.Boolean",
      "methods": [
        {
          "name": "getBoolean",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "java.lang.Class",
      "methods": [
        {
          "name": "getClassLoader",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.ClassLoader",
      "methods": [
        {
          "name": "loadClass",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "java.lang.Exception"
    },
    {
      "type": "java.lang.IllegalArgumentException"
    },
    {
      "type": "java.lang.NullPointerException"
    },
    {
      "type": "java.lang.OutOfMemoryError"
    },
    {
      "type": "java.lang.RuntimeException"
    },
    {
      "type": "java.lang.String",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "byte[]"
          ]
        },
        {
          "name": "getBytes",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.net.InetSocketAddress",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.String",
            "int"
          ]
        }
      ]
    },
    {
      "type": "java.net.PortUnreachableException"
    },
    {
      "type": "java.nio.Buffer",
      "fields": [
        {
          "name": "limit"
        },
        {
          "name": "position"
        }
      ],
      "methods": [
        {
          "name": "limit",
          "parameterTypes": []
        },
        {
          "name": "position",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.nio.DirectByteBuffer"
    },
    {
      "type": "java.nio.channels.ClosedChannelException",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.util.Arrays",
      "methods": [
        {
          "name": "asList",
          "parameterTypes": [
            "java.lang.Object[]"
          ]
        }
      ]
    },
    {
      "type": "jdk.internal.loader.ClassLoaders$AppClassLoader"
    },
    {
      "type": "sun.launcher.LauncherHelper",
      "fields": [
        {
          "name": "isStaticMain"
        },
        {
          "name": "noArgMain"
        }
      ],
      "methods": [
        {
          "name": "checkAndLoadMain",
          "parameterTypes": [
            "boolean",
            "int",
            "java.lang.String"
          ]
        },
        {
          "name": "getApplicationClass",
          "parameterTypes": []
        },
        {
          "name": "makePlatformString",
          "parameterTypes": [
            "boolean",
            "byte[]"
          ]
        }
      ]
    },
    {
      "type": "sun.management.VMManagementImpl",
      "fields": [
        {
          "name": "compTimeMonitoringSupport"
        },
        {
          "name": "currentThreadCpuTimeSupport"
        },
        {
          "name": "objectMonitorUsageSupport"
        },
        {
          "name": "otherThreadCpuTimeSupport"
        },
        {
          "name": "remoteDiagnosticCommandsSupport"
        },
        {
          "name": "synchronizerUsageSupport"
        },
        {
          "name": "threadAllocatedMemorySupport"
        },
        {
          "name": "threadContentionMonitoringSupport"
        }
      ]
    },
    {
      "type": "sun.nio.ch.FileChannelImpl",
      "fields": [
        {
          "name": "fd"
        }
      ]
    }
  ]
}
