{
  "reflection": [
    {
      "type": "ch.qos.logback.classic.encoder.PatternLayoutEncoder",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "ch.qos.logback.classic.joran.SerializedModelConfigurator",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "ch.qos.logback.classic.jul.LevelChangePropagator",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "ch.qos.logback.classic.sift.MDCBasedDiscriminator",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "setDefaultValue",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setKey",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "ch.qos.logback.classic.sift.SiftingAppender",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "setDiscriminator",
          "parameterTypes": [
            "ch.qos.logback.core.sift.Discriminator"
          ]
        }
      ]
    },
    {
      "type": "ch.qos.logback.classic.spi.LogbackServiceProvider"
    },
    {
      "type": "ch.qos.logback.core.ConsoleAppender",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "setTarget",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "ch.qos.logback.core.OutputStreamAppender",
      "methods": [
        {
          "name": "setEncoder",
          "parameterTypes": [
            "ch.qos.logback.core.encoder.Encoder"
          ]
        }
      ]
    },
    {
      "type": "ch.qos.logback.core.encoder.Encoder"
    },
    {
      "type": "ch.qos.logback.core.encoder.LayoutWrappingEncoder",
      "methods": [
        {
          "name": "setParent",
          "parameterTypes": [
            "ch.qos.logback.core.spi.ContextAware"
          ]
        }
      ]
    },
    {
      "type": "ch.qos.logback.core.pattern.PatternLayoutEncoderBase",
      "methods": [
        {
          "name": "setPattern",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "ch.qos.logback.core.sift.Discriminator"
    },
    {
      "type": "ch.qos.logback.core.spi.ContextAware"
    },
    {
      "type": "ch.qos.logback.core.status.NopStatusListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.github.ajalt.clikt.core.BaseCliktCommand",
      "allDeclaredFields": true
    },
    {
      "type": "com.google.common.jimfs.SystemJimfsFileSystemProvider"
    },
    {
      "type": "com.oracle.svm.core.jdk.resources.NativeImageResourceFileSystemProvider"
    },
    {
      "type": "com.oracle.truffle.object.DynamicObjectLibraryImplGen$DynamicObjectLibraryProvider"
    },
    {
      "type": "com.oracle.truffle.polyglot.PolyglotImpl"
    },
    {
      "type": "com.oracle.truffle.runtime.DefaultLoopNodeFactory"
    },
    {
      "type": "com.oracle.truffle.runtime.hotspot.HotSpotTruffleRuntimeAccess"
    },
    {
      "type": "elide.runtime.exec.$GuestExecutorFactory$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.exec.$GuestExecutorFactory$Executor0$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.cfg.$GuestIOConfiguration$Intercepted$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.cfg.$GuestVMConfiguration$Intercepted$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.cfg.$GuestVMEEConfig$Intercepted$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.cfg.$GuestVMEESandboxConfig$Intercepted$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.cfg.$GuestVMInspectConfig$Intercepted$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.cfg.$JsRuntimeConfig$Intercepted$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.cfg.$JsRuntimeConfig$JsEsmConfig$Intercepted$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.cfg.$JsRuntimeConfig$JsNpmConfig$Intercepted$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.internals.$IntrinsicsManager$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.internals.intrinsics.$ElideIntrinsic$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.internals.intrinsics.$ElideIntrinsic$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.internals.intrinsics.js.abort.$AbortControllerIntrinsic$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.internals.intrinsics.js.abort.$AbortControllerIntrinsic$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.internals.intrinsics.js.abort.$AbortSignalIntrinsic$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.internals.intrinsics.js.abort.$AbortSignalIntrinsic$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.internals.intrinsics.js.base64.$Base64Intrinsic$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.internals.intrinsics.js.base64.$Base64Intrinsic$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.internals.intrinsics.js.codec.$JsEncodingIntrinsics$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.internals.intrinsics.js.codec.$JsEncodingIntrinsics$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.internals.intrinsics.js.console.$ConsoleIntrinsic$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.internals.intrinsics.js.console.$ConsoleIntrinsic$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.internals.intrinsics.js.crypto.$WebCryptoIntrinsic$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.internals.intrinsics.js.crypto.$WebCryptoIntrinsic$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.internals.intrinsics.js.crypto.$WebCryptoKey$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.internals.intrinsics.js.crypto.$WebCryptoKey$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.internals.intrinsics.js.fetch.$FetchIntrinsic$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.internals.intrinsics.js.fetch.$FetchIntrinsic$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.internals.intrinsics.js.stream.$CoreStreamsIntrinsic$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.internals.intrinsics.js.stream.$CoreStreamsIntrinsic$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.internals.intrinsics.js.url.$URLIntrinsic$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.internals.intrinsics.js.url.$URLIntrinsic$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.internals.intrinsics.js.url.$URLSearchParamsIntrinsic$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.internals.intrinsics.js.url.$URLSearchParamsIntrinsic$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.internals.intrinsics.js.webstreams.$ReadableStreamIntrinsic$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.internals.intrinsics.js.webstreams.$ReadableStreamIntrinsic$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.internals.js.$JsTimerExecutorProviderImpl$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.internals.js.$JsTimerExecutorProviderImpl$Provide0$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.internals.js.$JsTimersIntrinsic$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.internals.js.$JsTimersIntrinsic$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.internals.js.$JsTimersIntrinsic$Provide0$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.internals.js.JsTimersIntrinsic",
      "fields": [
        {
          "name": "execProvider"
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.internals.sqlite.$ElideSqliteModule$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.internals.sqlite.$ElideSqliteModule$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.internals.sqlite.$ElideSqliteModule$Provide0$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.internals.testing.$ElideTestingModule$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.internals.testing.$ElideTestingModule$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.internals.testing.$ElideTestingModule$Provide0$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.internals.vfs.$EmbeddedGuestVFSImpl$EmbeddedVFSConfigurationFactory$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.internals.vfs.$EmbeddedGuestVFSImpl$EmbeddedVFSConfigurationFactory$Spawn$graalvm0$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.internals.vfs.$GuestVFSPolicy$Intercepted$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.internals.vfs.$HostVFSImpl$HostVFSConfigurationFactory$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.intrinsics.$BuiltinIntrinsicsResolver$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.intrinsics.$ServiceIntrinsicsResolver$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.intrinsics.js.err.$ValueErrorIntrinsic$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.intrinsics.js.err.$ValueErrorIntrinsic$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.javascript.$NavigatorBuiltin$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.javascript.$NavigatorBuiltin$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.javascript.$QueueMicrotaskCallable$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.javascript.$QueueMicrotaskCallable$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.javascript.$StructuredCloneBuiltin$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.javascript.$StructuredCloneBuiltin$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.asserts.$NodeAssertModule$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.asserts.$NodeAssertModule$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.asserts.$NodeAssertStrictModule$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.asserts.$NodeAssertStrictModule$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.buffer.$NodeBufferModule$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.buffer.$NodeBufferModule$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.childProcess.$NodeChildProcessModule$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.childProcess.$NodeChildProcessModule$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.childProcess.$NodeChildProcessModule$IpcServer$graalvm1$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.childProcess.$NodeChildProcessModule$Provide0$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.cluster.$NodeClusterModule$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.cluster.$NodeClusterModule$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.console.$NodeConsoleModule$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.console.$NodeConsoleModule$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.crypto.$NodeCryptoModule$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.crypto.$NodeCryptoModule$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.dgram.$NodeDatagramModule$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.dgram.$NodeDatagramModule$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.diagnostics.$NodeDiagnosticsChannelModule$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.diagnostics.$NodeDiagnosticsChannelModule$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.dns.$NodeDNSModule$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.dns.$NodeDNSModule$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.dns.$NodeDNSPromisesModule$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.dns.$NodeDNSPromisesModule$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.domain.$NodeDomainModule$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.domain.$NodeDomainModule$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.events.$NodeEventsModule$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.events.$NodeEventsModule$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.events.$NodeEventsModule$Provide0$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.events.$NodeEventsModuleFacade$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.fs.$NodeFilesystemModule$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.fs.$NodeFilesystemModule$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.fs.$NodeFilesystemModule$ProvidePromises1$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.fs.$NodeFilesystemModule$ProvideStd0$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.fs.$VfsInitializerListener$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.http.$NodeHttpModule$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.http.$NodeHttpModule$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.http2.$NodeHttp2Module$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.http2.$NodeHttp2Module$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.https.$NodeHttpsModule$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.https.$NodeHttpsModule$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.inspector.$NodeInspectorModule$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.inspector.$NodeInspectorModule$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.inspector.$NodeInspectorPromisesModule$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.inspector.$NodeInspectorPromisesModule$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.module.$NodeModulesModule$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.module.$NodeModulesModule$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.net.$NodeNetworkModule$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.net.$NodeNetworkModule$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.os.$CPUInfoData$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.os.$CPUTimingsData$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.os.$NetworkInterfaceInfoData$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.os.$NodeOperatingSystem$BaseOS$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.os.$NodeOperatingSystem$Posix$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.os.$NodeOperatingSystem$Win32$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.os.$NodeOperatingSystemModule$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.os.$NodeOperatingSystemModule$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.os.$NodeOperatingSystemModule$Provide0$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.path.$NodePathsModule$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.path.$NodePathsModule$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.perfHooks.$NodePerformanceHooksModule$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.perfHooks.$NodePerformanceHooksModule$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.process.$NodeProcessModule$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.process.$NodeProcessModule$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.querystring.$NodeQuerystringModule$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.querystring.$NodeQuerystringModule$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.readline.$NodeReadlineModule$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.readline.$NodeReadlineModule$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.readline.$NodeReadlinePromisesModule$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.readline.$NodeReadlinePromisesModule$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.stream.$NodeStreamConsumersModule$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.stream.$NodeStreamConsumersModule$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.stream.$NodeStreamConsumersModule$Provide$graalvm0$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.stream.$NodeStreamModule$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.stream.$NodeStreamModule$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.stream.$NodeStreamPromisesModule$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.stream.$NodeStreamPromisesModule$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.stream.$NodeStreamPromisesModule$Provide$graalvm0$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.stream.$NodeStreamWebModule$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.stream.$NodeStreamWebModule$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.stream.$NodeStreamWebModule$Provide$graalvm0$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.stringDecoder.$NodeStringDecoderModule$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.stringDecoder.$NodeStringDecoderModule$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.stringDecoder.$NodeStringDecoderModule$Provide$graalvm0$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.test.$NodeTestModule$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.test.$NodeTestModule$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.url.$NodeURLModule$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.url.$NodeURLModule$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.url.$NodeURLModule$Provide$graalvm0$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.worker.$NodeWorkerModule$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.worker.$NodeWorkerModule$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.zlib.$NodeZlibModule$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.zlib.$NodeZlibModule$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.cli.$Elide$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.cli.AOTApplicationContextConfigurer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.cli.AbstractSubcommand",
      "allDeclaredFields": true
    },
    {
      "type": "elide.tool.cli.AbstractToolCommand",
      "allDeclaredFields": true
    },
    {
      "type": "elide.tool.cli.AotConstantPropertySources"
    },
    {
      "type": "elide.tool.cli.CliCommandInvocation",
      "allDeclaredFields": true
    },
    {
      "type": "elide.tool.cli.DeducedEnvironmentConfigurer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.cli.Elide",
      "allDeclaredFields": true,
      "allDeclaredMethods": true,
      "allDeclaredConstructors": true
    },
    {
      "type": "elide.tool.cli.EnvironmentPropertiesOptimizationLoader"
    },
    {
      "type": "elide.tool.cli.KnownMissingTypesOptimizationLoader"
    },
    {
      "type": "elide.tool.cli.NettyPropertiesAOTContextConfigurer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.cli.PublishersOptimizationsLoader"
    },
    {
      "type": "elide.tool.cli.StaticServicesLoader"
    },
    {
      "type": "elide.tool.cli.ToolCommandBase",
      "allDeclaredFields": true
    },
    {
      "type": "elide.tool.cli.cmd.project.ToolProjectCommand",
      "allDeclaredMethods": true,
      "allDeclaredConstructors": true,
      "allDeclaredFields": true
    },
    {
      "type": "elide.tool.cli.cmd.project.$ToolProjectCommand$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.cli.cmd.project.$ToolProjectCommand$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.cli.cmd.discord.$ToolDiscordCommand$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.cli.cmd.discord.$ToolDiscordCommand$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.cli.cmd.discord.ToolDiscordCommand",
      "allDeclaredFields": true
    },
    {
      "type": "elide.tool.cli.cmd.help.$HelpCommand$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.cli.cmd.help.HelpCommand",
      "allDeclaredFields": true
    },
    {
      "type": "elide.tool.cli.cmd.info.$ToolInfoCommand$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.cli.cmd.info.$ToolInfoCommand$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.cli.cmd.info.ToolInfoCommand",
      "allDeclaredFields": true
    },
    {
      "type": "elide.tool.cli.cmd.pkl.$ToolPklCommand$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.cli.cmd.pkl.ToolPklCommand",
      "allDeclaredFields": true
    },
    {
      "type": "elide.tool.cli.cmd.repl.$DebugConfig$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.cli.cmd.repl.$EnvironmentConfig$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.cli.cmd.repl.$InspectorConfig$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.cli.cmd.repl.$LanguageSelector$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.cli.cmd.repl.$ToolShellCommand$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.cli.cmd.repl.$ToolShellCommand$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.cli.cmd.repl.DebugConfig",
      "allDeclaredFields": true
    },
    {
      "type": "elide.tool.cli.cmd.repl.EnvironmentConfig",
      "allDeclaredFields": true
    },
    {
      "type": "elide.tool.cli.cmd.repl.InspectorConfig",
      "allDeclaredFields": true
    },
    {
      "type": "elide.tool.cli.cmd.repl.LanguageSelector",
      "allDeclaredFields": true
    },
    {
      "type": "elide.tool.cli.cmd.repl.ToolShellCommand",
      "allDeclaredFields": true
    },
    {
      "type": "elide.tool.cli.cmd.tool.$ToolInvokeCommand$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.cli.cmd.tool.$ToolInvokeCommand$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.cli.cmd.tool.ToolInvokeCommand",
      "allDeclaredFields": true
    },
    {
      "type": "elide.tool.cli.options.$AbstractEngineOptions$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.cli.options.$AccessControlOptions$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.cli.options.$CommonOptions$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.cli.options.$EngineJavaScriptOptions$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.cli.options.$LanguagePositionals$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.cli.options.AbstractEngineOptions",
      "allDeclaredFields": true
    },
    {
      "type": "elide.tool.cli.options.AccessControlOptions",
      "allDeclaredFields": true
    },
    {
      "type": "elide.tool.cli.options.CommonOptions",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "setDebug",
          "parameterTypes": [
            "boolean"
          ]
        },
        {
          "name": "setQuiet",
          "parameterTypes": [
            "boolean"
          ]
        },
        {
          "name": "setVerbose",
          "parameterTypes": [
            "boolean"
          ]
        }
      ]
    },
    {
      "type": "elide.tool.cli.options.EngineJavaScriptOptions",
      "allDeclaredFields": true
    },
    {
      "type": "elide.tool.err.$DefaultStructuredErrorRecorder$DefaultMarkdownErrorRecorderProvider$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.err.$DefaultStructuredErrorRecorder$DefaultMarkdownErrorRecorderProvider$Get0$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.err.$ErrorHandlerAcquireTest$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.err.$ErrorRecorderAcquireTest$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.err.$ErrorRecorderWriteTest$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.io.$RuntimeWorkdirManager$DefaultRuntimeWorkdirManagerProvider$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.io.$RuntimeWorkdirManager$DefaultRuntimeWorkdirManagerProvider$Get0$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.project.$DefaultProjectManager$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.testing.$SanitySelfTest$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.transport.$EpollTest$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.transport.$NativeCryptoTest$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.transport.$NativeTransportTest$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "groovy.lang.Closure"
    },
    {
      "type": "io.micronaut.aop.internal.InterceptorRegistryBean",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.context.DefaultBeanContext$BeanDefinitionProducer",
      "fields": [
        {
          "name": "definition"
        }
      ]
    },
    {
      "type": "io.micronaut.context.annotation.Prototype"
    },
    {
      "type": "io.micronaut.context.env.PropertiesPropertySourceLoader"
    },
    {
      "type": "io.micronaut.context.env.exp.RandomPropertyExpressionResolver"
    },
    {
      "type": "io.micronaut.context.env.yaml.YamlPropertySourceLoader"
    },
    {
      "type": "io.micronaut.context.event.ApplicationEventPublisherFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.context.propagation.instrument.execution.$ExecutorServiceInstrumenter$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.core.async.converters.ReactiveTypeConverterRegistrar",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.discovery.$DefaultCompositeDiscoveryClient$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.discovery.$DefaultServiceInstanceIdGenerator$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.discovery.cloud.digitalocean.$DigitalOceanInstanceMetadata$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.discovery.config.$DefaultCompositeConfigurationClient$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.health.$DefaultCurrentHealthStatus$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.health.$HealthStatus$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.health.$HeartbeatConfiguration$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.health.$HeartbeatDiscoveryClientCondition$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.HttpTypeConverterRegistrar",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.bind.$DefaultRequestBinderRegistry$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.bind.binders.$DefaultBodyAnnotationBinder$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.body.$ByteArrayBodyHandler$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.body.$CharSequenceBodyWriter$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.body.$DefaultMessageBodyHandlerRegistry$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.body.$StringBodyReader$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.body.$TextPlainObjectBodyReader$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.body.$TextPlainObjectBodyWriter$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.body.$TextStreamBodyWriter$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.body.$WritableBodyWriter$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.codec.$CodecConfiguration$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.converters.$HttpConverterRegistrar$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.converters.SharedHttpConvertersRegistrar",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.expression.$RequestConditionContext$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.form.$FormConfigurationProperties$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.hateoas.$AbstractResource$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.hateoas.$DefaultLink$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.hateoas.$GenericResource$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.hateoas.$JsonError$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.hateoas.$Resource$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.hateoas.$VndError$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.resource.$ResourceLoaderFactory$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.resource.$ResourceLoaderFactory$FileSystemResourceLoader1$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.resource.$ResourceLoaderFactory$GetClassPathResourceLoader0$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.resource.$ResourceLoaderFactory$ResourceResolver2$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.ssl.$ClientSslConfiguration$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.ssl.$DefaultSslConfiguration$DefaultKeyConfiguration$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.ssl.$DefaultSslConfiguration$DefaultKeyStoreConfiguration$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.ssl.$DefaultSslConfiguration$DefaultTrustStoreConfiguration$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.ssl.$DefaultSslConfiguration$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.ssl.$ServerSslConfiguration$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.uri.$DefaultFormUrlEncodedDecoder$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.util.$HtmlEntityEncodingHtmlSanitizer$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.util.$OutgoingHttpRequestProcessorImpl$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.inject.annotation.AnnotationConvertersRegistrar",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.inject.provider.BeanProviderDefinition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.inject.provider.JakartaProviderBeanDefinition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.logging.$LogLevel$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.logging.LoggingConverterRegistrar",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.logging.impl.$LogbackLoggingSystem$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.retry.annotation.$DefaultRetryPredicate$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.retry.annotation.$RetryPredicate$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.retry.intercept.$DefaultRetryInterceptor$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.retry.intercept.$RecoveryInterceptor$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.runtime.$ApplicationConfiguration$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.runtime.$ApplicationConfiguration$InstanceConfiguration$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.runtime.beans.$MapperIntroduction$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.runtime.beans.$MapperMethodProcessor$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.runtime.context.$CompositeMessageSource$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.runtime.context.env.$ConfigurationIntroductionAdvice$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.runtime.context.scope.$ThreadLocalCustomScope$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.runtime.context.scope.refresh.$RefreshInterceptor$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.runtime.context.scope.refresh.$RefreshScope$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.runtime.context.scope.refresh.$RefreshScopeCondition$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.runtime.converters.time.TimeConverterRegistrar",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.runtime.http.codec.$MediaTypeCodecRegistryFactory$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.runtime.http.codec.$MediaTypeCodecRegistryFactory$MediaTypeCodecRegistry0$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.runtime.http.codec.$TextPlainCodec$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.runtime.http.scope.$RequestCustomScope$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.scheduling.$DefaultTaskExceptionHandler$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.scheduling.$LoomSupport$LoomCondition$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.scheduling.$ScheduledExecutorTaskScheduler$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.scheduling.async.$AsyncInterceptor$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.scheduling.executor.$DefaultExecutorSelector$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.scheduling.executor.$DefaultThreadFactory$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.scheduling.executor.$DefaultThreadFactory$ThreadFactory0$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.scheduling.executor.$ExecutorFactory$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.scheduling.executor.$ExecutorFactory$EventLoopGroupThreadFactory0$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.scheduling.executor.$ExecutorFactory$ExecutorService1$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.scheduling.executor.$IOExecutorServiceConfig$Blocking2$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.scheduling.executor.$IOExecutorServiceConfig$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.scheduling.executor.$IOExecutorServiceConfig$Virtual1$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.scheduling.executor.$UserExecutorConfiguration$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.scheduling.io.watch.$FileWatchCondition$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.scheduling.processor.$ScheduledMethodProcessor$ApplicationEventListener$scheduleTasks1$Intercepted$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.scheduling.processor.$ScheduledMethodProcessor$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.io.FilePermission"
    },
    {
      "type": "java.lang.ClassLoader",
      "fields": [
        {
          "name": "classLoaderValueMap"
        }
      ]
    },
    {
      "type": "java.lang.ClassValue"
    },
    {
      "type": "java.lang.Object",
      "allDeclaredFields": true
    },
    {
      "type": "java.lang.RuntimePermission"
    },
    {
      "type": "java.lang.Thread",
      "fields": [
        {
          "name": "threadLocalRandomProbe"
        }
      ]
    },
    {
      "type": "java.net.NetPermission"
    },
    {
      "type": "java.net.SocketPermission"
    },
    {
      "type": "java.net.URLPermission",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.String",
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "java.nio.file.Path"
    },
    {
      "type": "java.nio.file.Paths"
    },
    {
      "type": "java.security.AllPermission"
    },
    {
      "type": "java.security.SecurityPermission"
    },
    {
      "type": "java.sql.Connection"
    },
    {
      "type": "java.sql.Driver"
    },
    {
      "type": "java.sql.DriverManager"
    },
    {
      "type": "java.sql.Time"
    },
    {
      "type": "java.sql.Timestamp"
    },
    {
      "type": "java.time.Duration"
    },
    {
      "type": "java.time.Instant"
    },
    {
      "type": "java.time.LocalDate"
    },
    {
      "type": "java.time.LocalDateTime"
    },
    {
      "type": "java.time.LocalTime"
    },
    {
      "type": "java.time.MonthDay"
    },
    {
      "type": "java.time.OffsetDateTime"
    },
    {
      "type": "java.time.OffsetTime"
    },
    {
      "type": "java.time.Period"
    },
    {
      "type": "java.time.Year"
    },
    {
      "type": "java.time.YearMonth"
    },
    {
      "type": "java.time.ZoneId"
    },
    {
      "type": "java.time.ZoneOffset"
    },
    {
      "type": "java.time.ZonedDateTime"
    },
    {
      "type": "java.util.PropertyPermission"
    },
    {
      "type": "java.util.ResourceBundle",
      "methods": [
        {
          "name": "getBaseBundleName",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.util.concurrent.ForkJoinTask",
      "fields": [
        {
          "name": "aux"
        },
        {
          "name": "status"
        }
      ]
    },
    {
      "type": "java.util.concurrent.atomic.AtomicBoolean",
      "fields": [
        {
          "name": "value"
        }
      ]
    },
    {
      "type": "java.util.concurrent.atomic.Striped64",
      "fields": [
        {
          "name": "base"
        },
        {
          "name": "cellsBusy"
        }
      ]
    },
    {
      "type": "javax.smartcardio.CardPermission"
    },
    {
      "type": "jdk.graal.compiler.hotspot.HotSpotGraalJVMCIServiceLocator"
    },
    {
      "type": "jdk.internal.jrtfs.JrtFileSystemProvider"
    },
    {
      "type": "jdk.internal.misc.Unsafe"
    },
    {
      "type": "kotlin.SafePublicationLazyImpl",
      "fields": [
        {
          "name": "_value"
        }
      ]
    },
    {
      "type": "kotlin.jvm.internal.DefaultConstructorMarker"
    },
    {
      "type": "kotlin.reflect.jvm.internal.ReflectionFactoryImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "kotlinx.atomicfu.AtomicRef",
      "fields": [
        {
          "name": "value"
        }
      ]
    },
    {
      "type": "kotlinx.coroutines.DispatchedCoroutine",
      "fields": [
        {
          "name": "_decision$volatile"
        }
      ]
    },
    {
      "type": "kotlinx.coroutines.EventLoopImplBase",
      "fields": [
        {
          "name": "_delayed$volatile"
        },
        {
          "name": "_isCompleted$volatile"
        },
        {
          "name": "_queue$volatile"
        }
      ]
    },
    {
      "type": "kotlinx.coroutines.JobSupport",
      "fields": [
        {
          "name": "_parentHandle$volatile"
        },
        {
          "name": "_state$volatile"
        }
      ]
    },
    {
      "type": "kotlinx.coroutines.internal.DispatchedContinuation",
      "fields": [
        {
          "name": "_reusableCancellableContinuation$volatile"
        }
      ]
    },
    {
      "type": "kotlinx.coroutines.internal.LockFreeLinkedListNode",
      "fields": [
        {
          "name": "_next$volatile"
        },
        {
          "name": "_prev$volatile"
        },
        {
          "name": "_removedRef$volatile"
        }
      ]
    },
    {
      "type": "kotlinx.coroutines.internal.LockFreeTaskQueue",
      "fields": [
        {
          "name": "_cur$volatile"
        }
      ]
    },
    {
      "type": "kotlinx.coroutines.internal.LockFreeTaskQueueCore",
      "fields": [
        {
          "name": "_next$volatile"
        },
        {
          "name": "_state$volatile"
        }
      ]
    },
    {
      "type": "kotlinx.coroutines.scheduling.CoroutineScheduler",
      "fields": [
        {
          "name": "_isTerminated$volatile"
        },
        {
          "name": "controlState$volatile"
        },
        {
          "name": "parkedWorkersStack$volatile"
        }
      ]
    },
    {
      "type": "kotlinx.coroutines.scheduling.CoroutineScheduler$Worker",
      "fields": [
        {
          "name": "workerCtl$volatile"
        }
      ]
    },
    {
      "type": "kotlinx.coroutines.scheduling.WorkQueue",
      "fields": [
        {
          "name": "blockingTasksInBuffer$volatile"
        },
        {
          "name": "consumerIndex$volatile"
        },
        {
          "name": "lastScheduledTask$volatile"
        },
        {
          "name": "producerIndex$volatile"
        }
      ]
    },
    {
      "type": "org.graalvm.polyglot.io.IOHelper",
      "fields": [
        {
          "name": "ACCESS"
        }
      ]
    },
    {
      "type": "org.graalvm.polyglot.management.Management",
      "fields": [
        {
          "name": "ACCESS"
        }
      ]
    },
    {
      "type": "picocli.CommandLine$AutoHelpMixin",
      "allDeclaredFields": true
    },
    {
      "type": "sun.java2d.marlin.DMarlinRenderingEngine",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    }
  ],
  "resources": [
    {
      "glob": "META-INF/services/org/jline/terminal/provider/jni"
    },
    {
      "glob": "META-INF/services/org/jline/terminal/provider/jni/**"
    },
    {
      "glob": "ElideTool.properties"
    },
    {
      "glob": "ElideTool_en.properties"
    },
    {
      "glob": "ElideTool_en_US.properties"
    },
    {
      "glob": "META-INF/graalvm/org.graalvm.polyglot/version"
    },
    {
      "glob": "META-INF/graalvm/org.graalvm.truffle/version"
    },
    {
      "glob": "META-INF/micronaut/"
    },
    {
      "glob": "META-INF/resources/engine/libtruffleattach/linux/amd64/sha256"
    },
    {
      "glob": "META-INF/services/ch.qos.logback.classic.spi.Configurator"
    },
    {
      "glob": "META-INF/services/com.oracle.truffle.api.TruffleRuntimeAccess"
    },
    {
      "glob": "META-INF/services/com.oracle.truffle.api.impl.TruffleLocator"
    },
    {
      "glob": "META-INF/services/com.oracle.truffle.api.library.DefaultExportProvider"
    },
    {
      "glob": "META-INF/services/com.oracle.truffle.api.library.provider.DefaultExportProvider"
    },
    {
      "glob": "META-INF/services/com.oracle.truffle.runtime.EngineCacheSupport"
    },
    {
      "glob": "META-INF/services/com.oracle.truffle.runtime.FloodControlHandler"
    },
    {
      "glob": "META-INF/services/com.oracle.truffle.runtime.LoopNodeFactory"
    },
    {
      "glob": "META-INF/services/com.oracle.truffle.runtime.TruffleTypes"
    },
    {
      "glob": "META-INF/services/io.micronaut.context.ApplicationContextConfigurer"
    },
    {
      "glob": "META-INF/services/io.micronaut.core.optim.StaticOptimizations$Loader"
    },
    {
      "glob": "META-INF/services/java.lang.System$LoggerFinder"
    },
    {
      "glob": "META-INF/services/java.nio.file.spi.FileSystemProvider"
    },
    {
      "glob": "META-INF/services/java.time.zone.ZoneRulesProvider"
    },
    {
      "glob": "META-INF/services/java.util.spi.ResourceBundleControlProvider"
    },
    {
      "glob": "META-INF/services/org.graalvm.polyglot.impl.AbstractPolyglotImpl"
    },
    {
      "glob": "META-INF/services/org.slf4j.spi.SLF4JServiceProvider"
    },
    {
      "glob": "logback-test.scmo"
    },
    {
      "glob": "logback.scmo"
    },
    {
      "glob": "org/fusesource/jansi/internal/native/Linux/x86_64/libjansi.so"
    },
    {
      "glob": "org/fusesource/jansi/jansi.properties"
    },
    {
      "module": "java.desktop",
      "glob": "sun/awt/resources/awt_en.properties"
    },
    {
      "module": "java.desktop",
      "glob": "sun/awt/resources/awt_en_US.properties"
    }
  ],
  "bundles": [
    {
      "name": "ElideTool",
      "locales": [
        "en-US"
      ]
    },
    {
      "name": "sun.awt.resources.awt",
      "locales": [
        "en-US"
      ]
    }
  ],
  "serialization": [
    {
      "type": "ch.qos.logback.classic.model.ConfigurationModel"
    },
    {
      "type": "ch.qos.logback.classic.model.ContextNameModel"
    },
    {
      "type": "ch.qos.logback.classic.model.LoggerContextListenerModel"
    },
    {
      "type": "ch.qos.logback.classic.model.LoggerModel"
    },
    {
      "type": "ch.qos.logback.classic.model.RootLoggerModel"
    },
    {
      "type": "ch.qos.logback.core.model.AppenderModel"
    },
    {
      "type": "ch.qos.logback.core.model.AppenderRefModel"
    },
    {
      "type": "ch.qos.logback.core.model.ComponentModel"
    },
    {
      "type": "ch.qos.logback.core.model.ImplicitModel"
    },
    {
      "type": "ch.qos.logback.core.model.Model"
    },
    {
      "type": "ch.qos.logback.core.model.NamedComponentModel"
    },
    {
      "type": "ch.qos.logback.core.model.NamedModel"
    },
    {
      "type": "ch.qos.logback.core.model.PropertyModel"
    },
    {
      "type": "ch.qos.logback.core.model.SerializeModelModel"
    },
    {
      "type": "ch.qos.logback.core.model.SiftModel"
    },
    {
      "type": "ch.qos.logback.core.model.StatusListenerModel"
    },
    {
      "type": "java.util.ArrayList"
    }
  ],
  "jni": [
    {
      "type": "[Lsun.java2d.loops.GraphicsPrimitive;"
    },
    {
      "type": "java.awt.AlphaComposite",
      "fields": [
        {
          "name": "extraAlpha"
        },
        {
          "name": "rule"
        }
      ]
    },
    {
      "type": "java.awt.Color",
      "methods": [
        {
          "name": "getRGB",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.awt.Desktop$Action",
      "fields": [
        {
          "name": "BROWSE"
        },
        {
          "name": "MAIL"
        },
        {
          "name": "OPEN"
        }
      ]
    },
    {
      "type": "java.awt.GraphicsEnvironment",
      "methods": [
        {
          "name": "isHeadless",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.awt.Rectangle",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "int",
            "int",
            "int",
            "int"
          ]
        }
      ]
    },
    {
      "type": "java.awt.geom.AffineTransform",
      "fields": [
        {
          "name": "m00"
        },
        {
          "name": "m01"
        },
        {
          "name": "m02"
        },
        {
          "name": "m10"
        },
        {
          "name": "m11"
        },
        {
          "name": "m12"
        }
      ]
    },
    {
      "type": "java.awt.geom.Path2D",
      "fields": [
        {
          "name": "numTypes"
        },
        {
          "name": "pointTypes"
        },
        {
          "name": "windingRule"
        }
      ]
    },
    {
      "type": "java.awt.geom.Path2D$Float",
      "fields": [
        {
          "name": "floatCoords"
        }
      ]
    },
    {
      "type": "java.awt.image.ColorModel",
      "fields": [
        {
          "name": "colorSpace"
        },
        {
          "name": "colorSpaceType"
        },
        {
          "name": "isAlphaPremultiplied"
        },
        {
          "name": "is_sRGB"
        },
        {
          "name": "nBits"
        },
        {
          "name": "numComponents"
        },
        {
          "name": "supportsAlpha"
        },
        {
          "name": "transparency"
        }
      ],
      "methods": [
        {
          "name": "getRGBdefault",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.awt.image.IndexColorModel",
      "fields": [
        {
          "name": "allgrayopaque"
        },
        {
          "name": "map_size"
        },
        {
          "name": "rgb"
        },
        {
          "name": "transparent_index"
        }
      ]
    },
    {
      "type": "java.lang.Boolean",
      "methods": [
        {
          "name": "getBoolean",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "java.lang.Class",
      "methods": [
        {
          "name": "getClassLoader",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.ClassLoader",
      "methods": [
        {
          "name": "loadClass",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "java.lang.System",
      "methods": [
        {
          "name": "load",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "java.util.ArrayList",
      "methods": [
        {
          "name": "add",
          "parameterTypes": [
            "java.lang.Object"
          ]
        },
        {
          "name": "clear",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "jdk.internal.loader.ClassLoaders$AppClassLoader"
    },
    {
      "type": "org.fusesource.jansi.internal.CLibrary",
      "fields": [
        {
          "name": "HAVE_ISATTY"
        },
        {
          "name": "HAVE_TTYNAME"
        },
        {
          "name": "TCSADRAIN"
        },
        {
          "name": "TCSAFLUSH"
        },
        {
          "name": "TCSANOW"
        },
        {
          "name": "TIOCGETD"
        },
        {
          "name": "TIOCGWINSZ"
        },
        {
          "name": "TIOCSETD"
        },
        {
          "name": "TIOCSWINSZ"
        }
      ]
    },
    {
      "type": "sun.awt.SunHints",
      "fields": [
        {
          "name": "INTVAL_STROKE_PURE"
        }
      ]
    },
    {
      "type": "sun.awt.SunToolkit",
      "methods": [
        {
          "name": "awtLock",
          "parameterTypes": []
        },
        {
          "name": "awtLockNotify",
          "parameterTypes": []
        },
        {
          "name": "awtLockNotifyAll",
          "parameterTypes": []
        },
        {
          "name": "awtLockWait",
          "parameterTypes": [
            "long"
          ]
        },
        {
          "name": "awtUnlock",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.awt.X11.XDesktopPeer",
      "fields": [
        {
          "name": "supportedActions"
        }
      ]
    },
    {
      "type": "sun.awt.X11.XErrorHandlerUtil",
      "methods": [
        {
          "name": "init",
          "parameterTypes": [
            "long"
          ]
        }
      ]
    },
    {
      "type": "sun.awt.X11.XToolkit",
      "fields": [
        {
          "name": "modLockIsShiftLock"
        },
        {
          "name": "numLockMask"
        }
      ]
    },
    {
      "type": "sun.java2d.Disposer",
      "methods": [
        {
          "name": "addRecord",
          "parameterTypes": [
            "java.lang.Object",
            "long",
            "long"
          ]
        }
      ]
    },
    {
      "type": "sun.java2d.InvalidPipeException"
    },
    {
      "type": "sun.java2d.NullSurfaceData"
    },
    {
      "type": "sun.java2d.SunGraphics2D",
      "fields": [
        {
          "name": "clipRegion"
        },
        {
          "name": "composite"
        },
        {
          "name": "eargb"
        },
        {
          "name": "lcdTextContrast"
        },
        {
          "name": "pixel"
        },
        {
          "name": "strokeHint"
        }
      ]
    },
    {
      "type": "sun.java2d.SurfaceData",
      "fields": [
        {
          "name": "pData"
        },
        {
          "name": "valid"
        }
      ]
    },
    {
      "type": "sun.java2d.loops.Blit",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "long",
            "sun.java2d.loops.SurfaceType",
            "sun.java2d.loops.CompositeType",
            "sun.java2d.loops.SurfaceType"
          ]
        }
      ]
    },
    {
      "type": "sun.java2d.loops.BlitBg",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "long",
            "sun.java2d.loops.SurfaceType",
            "sun.java2d.loops.CompositeType",
            "sun.java2d.loops.SurfaceType"
          ]
        }
      ]
    },
    {
      "type": "sun.java2d.loops.CompositeType",
      "fields": [
        {
          "name": "AnyAlpha"
        },
        {
          "name": "Src"
        },
        {
          "name": "SrcNoEa"
        },
        {
          "name": "SrcOver"
        },
        {
          "name": "SrcOverNoEa"
        },
        {
          "name": "Xor"
        }
      ]
    },
    {
      "type": "sun.java2d.loops.DrawGlyphList",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "long",
            "sun.java2d.loops.SurfaceType",
            "sun.java2d.loops.CompositeType",
            "sun.java2d.loops.SurfaceType"
          ]
        }
      ]
    },
    {
      "type": "sun.java2d.loops.DrawGlyphListAA",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "long",
            "sun.java2d.loops.SurfaceType",
            "sun.java2d.loops.CompositeType",
            "sun.java2d.loops.SurfaceType"
          ]
        }
      ]
    },
    {
      "type": "sun.java2d.loops.DrawGlyphListLCD",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "long",
            "sun.java2d.loops.SurfaceType",
            "sun.java2d.loops.CompositeType",
            "sun.java2d.loops.SurfaceType"
          ]
        }
      ]
    },
    {
      "type": "sun.java2d.loops.DrawLine",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "long",
            "sun.java2d.loops.SurfaceType",
            "sun.java2d.loops.CompositeType",
            "sun.java2d.loops.SurfaceType"
          ]
        }
      ]
    },
    {
      "type": "sun.java2d.loops.DrawParallelogram",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "long",
            "sun.java2d.loops.SurfaceType",
            "sun.java2d.loops.CompositeType",
            "sun.java2d.loops.SurfaceType"
          ]
        }
      ]
    },
    {
      "type": "sun.java2d.loops.DrawPath",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "long",
            "sun.java2d.loops.SurfaceType",
            "sun.java2d.loops.CompositeType",
            "sun.java2d.loops.SurfaceType"
          ]
        }
      ]
    },
    {
      "type": "sun.java2d.loops.DrawPolygons",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "long",
            "sun.java2d.loops.SurfaceType",
            "sun.java2d.loops.CompositeType",
            "sun.java2d.loops.SurfaceType"
          ]
        }
      ]
    },
    {
      "type": "sun.java2d.loops.DrawRect",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "long",
            "sun.java2d.loops.SurfaceType",
            "sun.java2d.loops.CompositeType",
            "sun.java2d.loops.SurfaceType"
          ]
        }
      ]
    },
    {
      "type": "sun.java2d.loops.FillParallelogram",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "long",
            "sun.java2d.loops.SurfaceType",
            "sun.java2d.loops.CompositeType",
            "sun.java2d.loops.SurfaceType"
          ]
        }
      ]
    },
    {
      "type": "sun.java2d.loops.FillPath",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "long",
            "sun.java2d.loops.SurfaceType",
            "sun.java2d.loops.CompositeType",
            "sun.java2d.loops.SurfaceType"
          ]
        }
      ]
    },
    {
      "type": "sun.java2d.loops.FillRect",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "long",
            "sun.java2d.loops.SurfaceType",
            "sun.java2d.loops.CompositeType",
            "sun.java2d.loops.SurfaceType"
          ]
        }
      ]
    },
    {
      "type": "sun.java2d.loops.FillSpans",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "long",
            "sun.java2d.loops.SurfaceType",
            "sun.java2d.loops.CompositeType",
            "sun.java2d.loops.SurfaceType"
          ]
        }
      ]
    },
    {
      "type": "sun.java2d.loops.GraphicsPrimitive",
      "fields": [
        {
          "name": "pNativePrim"
        }
      ]
    },
    {
      "type": "sun.java2d.loops.GraphicsPrimitiveMgr",
      "methods": [
        {
          "name": "register",
          "parameterTypes": [
            "sun.java2d.loops.GraphicsPrimitive[]"
          ]
        }
      ]
    },
    {
      "type": "sun.java2d.loops.MaskBlit",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "long",
            "sun.java2d.loops.SurfaceType",
            "sun.java2d.loops.CompositeType",
            "sun.java2d.loops.SurfaceType"
          ]
        }
      ]
    },
    {
      "type": "sun.java2d.loops.MaskFill",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "long",
            "sun.java2d.loops.SurfaceType",
            "sun.java2d.loops.CompositeType",
            "sun.java2d.loops.SurfaceType"
          ]
        }
      ]
    },
    {
      "type": "sun.java2d.loops.ScaledBlit",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "long",
            "sun.java2d.loops.SurfaceType",
            "sun.java2d.loops.CompositeType",
            "sun.java2d.loops.SurfaceType"
          ]
        }
      ]
    },
    {
      "type": "sun.java2d.loops.SurfaceType",
      "fields": [
        {
          "name": "Any3Byte"
        },
        {
          "name": "Any4Byte"
        },
        {
          "name": "AnyByte"
        },
        {
          "name": "AnyColor"
        },
        {
          "name": "AnyInt"
        },
        {
          "name": "AnyShort"
        },
        {
          "name": "ByteBinary1Bit"
        },
        {
          "name": "ByteBinary2Bit"
        },
        {
          "name": "ByteBinary4Bit"
        },
        {
          "name": "ByteGray"
        },
        {
          "name": "ByteIndexed"
        },
        {
          "name": "ByteIndexedBm"
        },
        {
          "name": "FourByteAbgr"
        },
        {
          "name": "FourByteAbgrPre"
        },
        {
          "name": "Index12Gray"
        },
        {
          "name": "Index8Gray"
        },
        {
          "name": "IntArgb"
        },
        {
          "name": "IntArgbBm"
        },
        {
          "name": "IntArgbPre"
        },
        {
          "name": "IntBgr"
        },
        {
          "name": "IntRgb"
        },
        {
          "name": "IntRgbx"
        },
        {
          "name": "OpaqueColor"
        },
        {
          "name": "ThreeByteBgr"
        },
        {
          "name": "Ushort4444Argb"
        },
        {
          "name": "Ushort555Rgb"
        },
        {
          "name": "Ushort555Rgbx"
        },
        {
          "name": "Ushort565Rgb"
        },
        {
          "name": "UshortGray"
        },
        {
          "name": "UshortIndexed"
        }
      ]
    },
    {
      "type": "sun.java2d.loops.TransformHelper",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "long",
            "sun.java2d.loops.SurfaceType",
            "sun.java2d.loops.CompositeType",
            "sun.java2d.loops.SurfaceType"
          ]
        }
      ]
    },
    {
      "type": "sun.java2d.loops.XORComposite",
      "fields": [
        {
          "name": "alphaMask"
        },
        {
          "name": "xorColor"
        },
        {
          "name": "xorPixel"
        }
      ]
    },
    {
      "type": "sun.java2d.pipe.Region",
      "fields": [
        {
          "name": "bands"
        },
        {
          "name": "endIndex"
        },
        {
          "name": "hix"
        },
        {
          "name": "hiy"
        },
        {
          "name": "lox"
        },
        {
          "name": "loy"
        }
      ]
    },
    {
      "type": "sun.java2d.pipe.RegionIterator",
      "fields": [
        {
          "name": "curIndex"
        },
        {
          "name": "numXbands"
        },
        {
          "name": "region"
        }
      ]
    },
    {
      "type": "sun.java2d.xr.XRSurfaceData",
      "fields": [
        {
          "name": "picture"
        },
        {
          "name": "xid"
        }
      ]
    }
  ]
}
