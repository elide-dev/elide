{
  "reflection": [
    {
      "type": "sun.util.logging.resources.logging",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.util.logging.resources.logging_en",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.util.logging.resources.spi.loggingProvider"
    },
    {
      "type": "elide.runtime.intrinsics.GuestIntrinsic"
    },
    {
      "type": "elide.runtime.gvm.internals.intrinsics.js.console.ConsoleIntrinsic"
    },
    {
      "type": "[B"
    },
    {
      "type": "ch.qos.logback.classic.encoder.PatternLayoutEncoder",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "ch.qos.logback.classic.joran.SerializedModelConfigurator",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "ch.qos.logback.classic.jul.LevelChangePropagator",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "ch.qos.logback.classic.sift.MDCBasedDiscriminator",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "setDefaultValue",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setKey",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "ch.qos.logback.classic.sift.SiftingAppender",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "setDiscriminator",
          "parameterTypes": [
            "ch.qos.logback.core.sift.Discriminator"
          ]
        }
      ]
    },
    {
      "type": "ch.qos.logback.classic.spi.LogbackServiceProvider"
    },
    {
      "type": "ch.qos.logback.core.ConsoleAppender",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "setTarget",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "ch.qos.logback.core.OutputStreamAppender",
      "methods": [
        {
          "name": "setEncoder",
          "parameterTypes": [
            "ch.qos.logback.core.encoder.Encoder"
          ]
        }
      ]
    },
    {
      "type": "ch.qos.logback.core.encoder.Encoder"
    },
    {
      "type": "ch.qos.logback.core.encoder.LayoutWrappingEncoder",
      "methods": [
        {
          "name": "setParent",
          "parameterTypes": [
            "ch.qos.logback.core.spi.ContextAware"
          ]
        }
      ]
    },
    {
      "type": "ch.qos.logback.core.pattern.PatternLayoutEncoderBase",
      "methods": [
        {
          "name": "setPattern",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "ch.qos.logback.core.sift.Discriminator"
    },
    {
      "type": "ch.qos.logback.core.spi.ContextAware"
    },
    {
      "type": "ch.qos.logback.core.status.NopStatusListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.github.ajalt.clikt.core.BaseCliktCommand",
      "allDeclaredFields": true
    },
    {
      "type": "com.google.common.jimfs.SystemJimfsFileSystemProvider",
      "methods": [
        {
          "name": "removeFileSystemRunnable",
          "parameterTypes": [
            "java.net.URI"
          ]
        }
      ]
    },
    {
      "type": "com.google.protobuf.DescriptorMessageInfoFactory",
      "methods": [
        {
          "name": "getInstance",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.google.protobuf.DescriptorProtos$FeatureSet"
    },
    {
      "type": "com.google.protobuf.DescriptorProtos$FeatureSet$Builder"
    },
    {
      "type": "com.google.protobuf.DescriptorProtos$FeatureSet$EnumType"
    },
    {
      "type": "com.google.protobuf.DescriptorProtos$FeatureSet$FieldPresence"
    },
    {
      "type": "com.google.protobuf.DescriptorProtos$FeatureSet$JsonFormat"
    },
    {
      "type": "com.google.protobuf.DescriptorProtos$FeatureSet$MessageEncoding"
    },
    {
      "type": "com.google.protobuf.DescriptorProtos$FeatureSet$RepeatedFieldEncoding"
    },
    {
      "type": "com.google.protobuf.DescriptorProtos$FeatureSet$Utf8Validation"
    },
    {
      "type": "com.google.protobuf.ExtensionRegistry",
      "methods": [
        {
          "name": "getEmptyRegistry",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.google.protobuf.Timestamp"
    },
    {
      "type": "elide.runtime.exec.$GuestExecutorFactory$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.exec.$GuestExecutorFactory$Executor0$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.cfg.$GuestIOConfiguration$Intercepted$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.cfg.$GuestVMConfiguration$Intercepted$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.cfg.$GuestVMEEConfig$Intercepted$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.cfg.$GuestVMEESandboxConfig$Intercepted$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.cfg.$GuestVMInspectConfig$Intercepted$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.cfg.$JsRuntimeConfig$Intercepted$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.cfg.$JsRuntimeConfig$JsEsmConfig$Intercepted$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.cfg.$JsRuntimeConfig$JsNpmConfig$Intercepted$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.internals.$IntrinsicsManager$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.internals.intrinsics.$ElideIntrinsic$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.internals.intrinsics.js.abort.$AbortControllerIntrinsic$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.internals.intrinsics.js.abort.$AbortSignalIntrinsic$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.internals.intrinsics.js.base64.$Base64Intrinsic$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.internals.intrinsics.js.codec.$JsEncodingIntrinsics$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.internals.intrinsics.js.console.$ConsoleIntrinsic$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.internals.intrinsics.js.crypto.$WebCryptoIntrinsic$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.internals.intrinsics.js.crypto.$WebCryptoKey$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.internals.intrinsics.js.fetch.$FetchIntrinsic$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.internals.intrinsics.js.stream.$CoreStreamsIntrinsic$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.internals.intrinsics.js.url.$URLIntrinsic$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.internals.intrinsics.js.url.$URLSearchParamsIntrinsic$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.internals.intrinsics.js.webstreams.$ReadableStreamIntrinsic$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.internals.js.$JsTimerExecutorProviderImpl$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.internals.js.$JsTimerExecutorProviderImpl$Provide0$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.internals.js.$JsTimersIntrinsic$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.internals.js.$JsTimersIntrinsic$Provide0$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.internals.js.JsTimersIntrinsic",
      "fields": [
        {
          "name": "execProvider"
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.internals.sqlite.$ElideSqliteModule$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.internals.sqlite.$ElideSqliteModule$Provide0$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.internals.testing.$ElideTestingModule$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.internals.testing.$ElideTestingModule$Provide0$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.internals.vfs.$EmbeddedGuestVFSImpl$EmbeddedVFSConfigurationFactory$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.internals.vfs.$EmbeddedGuestVFSImpl$EmbeddedVFSConfigurationFactory$Spawn$graalvm0$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.internals.vfs.$GuestVFSPolicy$Intercepted$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.internals.vfs.$HostVFSImpl$HostVFSConfigurationFactory$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.intrinsics.$BuiltinIntrinsicsResolver$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.gvm.intrinsics.$ServiceIntrinsicsResolver$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.intrinsics.js.err.$ValueErrorIntrinsic$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.lang.typescript.TypeScriptLanguageProvider"
    },
    {
      "type": "elide.runtime.node.asserts.$NodeAssertModule$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.asserts.$NodeAssertStrictModule$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.buffer.$NodeBufferModule$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.childProcess.$NodeChildProcessModule$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.childProcess.$NodeChildProcessModule$IpcServer$graalvm1$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.childProcess.$NodeChildProcessModule$Provide0$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.cluster.$NodeClusterModule$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.console.$NodeConsoleModule$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.crypto.$NodeCryptoModule$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.dgram.$NodeDatagramModule$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.diagnostics.$NodeDiagnosticsChannelModule$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.dns.$NodeDNSModule$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.dns.$NodeDNSPromisesModule$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.domain.$NodeDomainModule$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.events.$NodeEventsModule$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.events.$NodeEventsModule$Provide0$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.events.$NodeEventsModuleFacade$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.fs.$NodeFilesystemModule$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.fs.$NodeFilesystemModule$ProvidePromises1$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.fs.$NodeFilesystemModule$ProvideStd0$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.fs.$VfsInitializerListener$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.http.$NodeHttpModule$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.http2.$NodeHttp2Module$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.https.$NodeHttpsModule$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.inspector.$NodeInspectorModule$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.inspector.$NodeInspectorPromisesModule$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.module.$NodeModulesModule$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.net.$NodeNetworkModule$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.os.$CPUInfoData$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.os.$CPUTimingsData$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.os.$NetworkInterfaceInfoData$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.os.$NodeOperatingSystem$BaseOS$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.os.$NodeOperatingSystem$Posix$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.os.$NodeOperatingSystem$Win32$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.os.$NodeOperatingSystemModule$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.os.$NodeOperatingSystemModule$Provide0$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.path.$NodePathsModule$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.perfHooks.$NodePerformanceHooksModule$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.process.$NodeProcessModule$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.querystring.$NodeQuerystringModule$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.readline.$NodeReadlineModule$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.readline.$NodeReadlinePromisesModule$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.stream.$NodeStreamConsumersModule$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.stream.$NodeStreamConsumersModule$Provide$graalvm0$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.stream.$NodeStreamModule$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.stream.$NodeStreamPromisesModule$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.stream.$NodeStreamPromisesModule$Provide$graalvm0$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.stream.$NodeStreamWebModule$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.stream.$NodeStreamWebModule$Provide$graalvm0$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.stringDecoder.$NodeStringDecoderModule$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.stringDecoder.$NodeStringDecoderModule$Provide$graalvm0$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.test.$NodeTestModule$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.url.$NodeURLModule$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.url.$NodeURLModule$Provide$graalvm0$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.worker.$NodeWorkerModule$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.runtime.node.zlib.$NodeZlibModule$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.cli.$Elide$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.cli.AOTApplicationContextConfigurer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.cli.AbstractSubcommand",
      "allDeclaredFields": true
    },
    {
      "type": "elide.tool.cli.AbstractToolCommand",
      "allDeclaredFields": true
    },
    {
      "type": "elide.tool.cli.AotConstantPropertySources"
    },
    {
      "type": "elide.tool.cli.CliCommandInvocation",
      "allDeclaredFields": true
    },
    {
      "type": "elide.tool.cli.DeducedEnvironmentConfigurer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.cli.Elide",
      "allDeclaredFields": true
    },
    {
      "type": "elide.tool.cli.EnvironmentPropertiesOptimizationLoader"
    },
    {
      "type": "elide.tool.cli.KnownMissingTypesOptimizationLoader"
    },
    {
      "type": "elide.tool.cli.NettyPropertiesAOTContextConfigurer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.cli.PublishersOptimizationsLoader"
    },
    {
      "type": "elide.tool.cli.StaticServicesLoader"
    },
    {
      "type": "elide.tool.cli.ToolCommandBase",
      "allDeclaredFields": true
    },
    {
      "type": "elide.tool.cli.cmd.discord.$ToolDiscordCommand$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.cli.cmd.discord.$ToolDiscordCommand$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.cli.cmd.help.$HelpCommand$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.cli.cmd.help.HelpCommand",
      "allDeclaredFields": true
    },
    {
      "type": "elide.tool.cli.cmd.info.$ToolInfoCommand$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.cli.cmd.info.$ToolInfoCommand$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.cli.cmd.info.ToolInfoCommand",
      "allDeclaredFields": true
    },
    {
      "type": "elide.tool.cli.cmd.pkl.$ToolPklCommand$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.cli.cmd.pkl.ToolPklCommand",
      "allDeclaredFields": true
    },
    {
      "type": "elide.tool.cli.cmd.repl.$DebugConfig$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.cli.cmd.repl.$EnvironmentConfig$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.cli.cmd.repl.$InspectorConfig$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.cli.cmd.repl.$LanguageSelector$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.cli.cmd.repl.$ToolShellCommand$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.cli.cmd.repl.$ToolShellCommand$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.cli.cmd.repl.DebugConfig",
      "allDeclaredFields": true
    },
    {
      "type": "elide.tool.cli.cmd.repl.EnvironmentConfig",
      "allDeclaredFields": true
    },
    {
      "type": "elide.tool.cli.cmd.repl.InspectorConfig",
      "allDeclaredFields": true
    },
    {
      "type": "elide.tool.cli.cmd.repl.LanguageSelector",
      "allDeclaredFields": true
    },
    {
      "type": "elide.tool.cli.cmd.repl.ToolShellCommand",
      "allDeclaredFields": true
    },
    {
      "type": "elide.tool.cli.cmd.tool.$ToolInvokeCommand$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.cli.cmd.tool.$ToolInvokeCommand$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.cli.cmd.tool.ToolInvokeCommand",
      "allDeclaredFields": true
    },
    {
      "type": "elide.tool.cli.options.$AbstractEngineOptions$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.cli.options.$AccessControlOptions$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.cli.options.$CommonOptions$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.cli.options.$EngineJavaScriptOptions$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.cli.options.$LanguagePositionals$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.cli.options.AbstractEngineOptions",
      "allDeclaredFields": true
    },
    {
      "type": "elide.tool.cli.options.AccessControlOptions",
      "allDeclaredFields": true
    },
    {
      "type": "elide.tool.cli.options.CommonOptions",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "setDebug",
          "parameterTypes": [
            "boolean"
          ]
        },
        {
          "name": "setQuiet",
          "parameterTypes": [
            "boolean"
          ]
        },
        {
          "name": "setVerbose",
          "parameterTypes": [
            "boolean"
          ]
        }
      ]
    },
    {
      "type": "elide.tool.cli.options.EngineJavaScriptOptions",
      "allDeclaredFields": true
    },
    {
      "type": "elide.tool.err.$DefaultStructuredErrorRecorder$DefaultMarkdownErrorRecorderProvider$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.err.$DefaultStructuredErrorRecorder$DefaultMarkdownErrorRecorderProvider$Get0$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.err.$ErrorHandlerAcquireTest$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.err.$ErrorRecorderAcquireTest$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.err.$ErrorRecorderWriteTest$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.io.$RuntimeWorkdirManager$DefaultRuntimeWorkdirManagerProvider$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.io.$RuntimeWorkdirManager$DefaultRuntimeWorkdirManagerProvider$Get0$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.project.$DefaultProjectManager$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.testing.$SanitySelfTest$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.transport.$EpollTest$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.transport.$NativeCryptoTest$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "elide.tool.transport.$NativeTransportTest$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "groovy.lang.Closure"
    },
    {
      "type": "io.micronaut.aop.internal.InterceptorRegistryBean",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.context.DefaultBeanContext$BeanDefinitionProducer",
      "fields": [
        {
          "name": "definition"
        }
      ]
    },
    {
      "type": "io.micronaut.context.annotation.Prototype"
    },
    {
      "type": "io.micronaut.context.env.PropertiesPropertySourceLoader"
    },
    {
      "type": "io.micronaut.context.env.exp.RandomPropertyExpressionResolver"
    },
    {
      "type": "io.micronaut.context.env.yaml.YamlPropertySourceLoader"
    },
    {
      "type": "io.micronaut.context.event.ApplicationEventPublisherFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.context.propagation.instrument.execution.$ExecutorServiceInstrumenter$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.core.async.converters.ReactiveTypeConverterRegistrar",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.discovery.$DefaultCompositeDiscoveryClient$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.discovery.$DefaultServiceInstanceIdGenerator$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.discovery.cloud.digitalocean.$DigitalOceanInstanceMetadata$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.discovery.config.$DefaultCompositeConfigurationClient$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.health.$DefaultCurrentHealthStatus$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.health.$HealthStatus$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.health.$HeartbeatConfiguration$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.health.$HeartbeatDiscoveryClientCondition$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.HttpTypeConverterRegistrar",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.bind.$DefaultRequestBinderRegistry$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.bind.binders.$DefaultBodyAnnotationBinder$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.body.$ByteArrayBodyHandler$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.body.$CharSequenceBodyWriter$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.body.$DefaultMessageBodyHandlerRegistry$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.body.$StringBodyReader$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.body.$TextPlainObjectBodyReader$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.body.$TextPlainObjectBodyWriter$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.body.$TextStreamBodyWriter$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.body.$WritableBodyWriter$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.codec.$CodecConfiguration$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.converters.$HttpConverterRegistrar$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.converters.SharedHttpConvertersRegistrar",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.expression.$RequestConditionContext$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.form.$FormConfigurationProperties$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.hateoas.$AbstractResource$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.hateoas.$DefaultLink$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.hateoas.$GenericResource$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.hateoas.$JsonError$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.hateoas.$Resource$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.hateoas.$VndError$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.resource.$ResourceLoaderFactory$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.resource.$ResourceLoaderFactory$FileSystemResourceLoader1$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.resource.$ResourceLoaderFactory$GetClassPathResourceLoader0$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.resource.$ResourceLoaderFactory$ResourceResolver2$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.ssl.$ClientSslConfiguration$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.ssl.$DefaultSslConfiguration$DefaultKeyConfiguration$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.ssl.$DefaultSslConfiguration$DefaultKeyStoreConfiguration$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.ssl.$DefaultSslConfiguration$DefaultTrustStoreConfiguration$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.ssl.$DefaultSslConfiguration$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.ssl.$ServerSslConfiguration$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.uri.$DefaultFormUrlEncodedDecoder$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.util.$HtmlEntityEncodingHtmlSanitizer$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.http.util.$OutgoingHttpRequestProcessorImpl$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.inject.annotation.AnnotationConvertersRegistrar",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.inject.provider.BeanProviderDefinition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.inject.provider.JakartaProviderBeanDefinition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.logging.$LogLevel$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.logging.LoggingConverterRegistrar",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.logging.impl.$LogbackLoggingSystem$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.retry.annotation.$DefaultRetryPredicate$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.retry.annotation.$RetryPredicate$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.retry.intercept.$DefaultRetryInterceptor$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.retry.intercept.$RecoveryInterceptor$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.runtime.$ApplicationConfiguration$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.runtime.$ApplicationConfiguration$InstanceConfiguration$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.runtime.beans.$MapperIntroduction$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.runtime.beans.$MapperMethodProcessor$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.runtime.context.$CompositeMessageSource$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.runtime.context.env.$ConfigurationIntroductionAdvice$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.runtime.context.scope.$ThreadLocalCustomScope$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.runtime.context.scope.refresh.$RefreshInterceptor$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.runtime.context.scope.refresh.$RefreshScope$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.runtime.context.scope.refresh.$RefreshScopeCondition$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.runtime.converters.time.TimeConverterRegistrar",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.runtime.http.codec.$MediaTypeCodecRegistryFactory$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.runtime.http.codec.$MediaTypeCodecRegistryFactory$MediaTypeCodecRegistry0$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.runtime.http.codec.$TextPlainCodec$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.runtime.http.scope.$RequestCustomScope$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.scheduling.$DefaultTaskExceptionHandler$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.scheduling.$LoomSupport$LoomCondition$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.scheduling.$ScheduledExecutorTaskScheduler$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.scheduling.async.$AsyncInterceptor$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.scheduling.executor.$DefaultExecutorSelector$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.scheduling.executor.$DefaultThreadFactory$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.scheduling.executor.$DefaultThreadFactory$ThreadFactory0$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.scheduling.executor.$ExecutorFactory$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.scheduling.executor.$ExecutorFactory$EventLoopGroupThreadFactory0$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.scheduling.executor.$ExecutorFactory$ExecutorService1$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.scheduling.executor.$IOExecutorServiceConfig$Blocking2$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.scheduling.executor.$IOExecutorServiceConfig$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.scheduling.executor.$IOExecutorServiceConfig$Virtual1$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.scheduling.executor.$UserExecutorConfiguration$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.scheduling.io.watch.$FileWatchCondition$Introspection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.scheduling.processor.$ScheduledMethodProcessor$ApplicationEventListener$scheduleTasks1$Intercepted$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micronaut.scheduling.processor.$ScheduledMethodProcessor$Definition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.netty.channel.DefaultFileRegion"
    },
    {
      "type": "io.netty.channel.epoll.NativeDatagramPacketArray$NativeDatagramPacket"
    },
    {
      "type": "io.netty.channel.unix.DatagramSocketAddress"
    },
    {
      "type": "io.netty.channel.unix.DomainDatagramSocketAddress"
    },
    {
      "type": "io.netty.channel.unix.FileDescriptor",
      "fields": [
        {
          "name": "state"
        }
      ]
    },
    {
      "type": "io.netty.channel.unix.PeerCredentials"
    },
    {
      "type": "io.netty.internal.tcnative.CertificateCallback"
    },
    {
      "type": "io.netty.internal.tcnative.CertificateCallbackTask"
    },
    {
      "type": "io.netty.internal.tcnative.SSLPrivateKeyMethodDecryptTask"
    },
    {
      "type": "io.netty.internal.tcnative.SSLPrivateKeyMethodSignTask"
    },
    {
      "type": "io.netty.internal.tcnative.SSLPrivateKeyMethodTask"
    },
    {
      "type": "io.netty.internal.tcnative.SSLTask"
    },
    {
      "type": "io.netty.util.AbstractReferenceCounted",
      "fields": [
        {
          "name": "refCnt"
        }
      ]
    },
    {
      "type": "io.netty.util.internal.NativeLibraryUtil",
      "methods": [
        {
          "name": "loadLibrary",
          "parameterTypes": [
            "java.lang.String",
            "boolean"
          ]
        }
      ]
    },
    {
      "type": "java.io.FileDescriptor"
    },
    {
      "type": "java.io.FilePermission"
    },
    {
      "type": "java.io.IOException"
    },
    {
      "type": "java.lang.ClassLoader",
      "fields": [
        {
          "name": "classLoaderValueMap"
        }
      ]
    },
    {
      "type": "java.lang.ClassValue"
    },
    {
      "type": "java.lang.Exception"
    },
    {
      "type": "java.lang.IllegalArgumentException"
    },
    {
      "type": "java.lang.NullPointerException"
    },
    {
      "type": "java.lang.Object",
      "allDeclaredFields": true
    },
    {
      "type": "java.lang.OutOfMemoryError"
    },
    {
      "type": "java.lang.RuntimeException"
    },
    {
      "type": "java.lang.RuntimePermission"
    },
    {
      "type": "java.lang.String"
    },
    {
      "type": "java.lang.Thread",
      "fields": [
        {
          "name": "threadLocalRandomProbe"
        }
      ]
    },
    {
      "type": "java.lang.management.ManagementFactory",
      "methods": [
        {
          "name": "getRuntimeMXBean",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.management.RuntimeMXBean",
      "methods": [
        {
          "name": "getInputArguments",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.net.InetSocketAddress"
    },
    {
      "type": "java.net.NetPermission"
    },
    {
      "type": "java.net.PortUnreachableException"
    },
    {
      "type": "java.net.SocketPermission"
    },
    {
      "type": "java.net.URLPermission",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.String",
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "java.nio.Bits"
    },
    {
      "type": "java.nio.Buffer",
      "fields": [
        {
          "name": "address"
        }
      ]
    },
    {
      "type": "java.nio.ByteBuffer"
    },
    {
      "type": "java.nio.DirectByteBuffer"
    },
    {
      "type": "java.nio.channels.ClosedChannelException"
    },
    {
      "type": "java.nio.channels.FileChannel"
    },
    {
      "type": "java.nio.file.Path"
    },
    {
      "type": "java.nio.file.Paths"
    },
    {
      "type": "java.security.AllPermission"
    },
    {
      "type": "java.security.SecurityPermission"
    },
    {
      "type": "java.sql.Connection"
    },
    {
      "type": "java.sql.Driver"
    },
    {
      "type": "java.sql.DriverManager"
    },
    {
      "type": "java.sql.Time"
    },
    {
      "type": "java.sql.Timestamp"
    },
    {
      "type": "java.time.Duration"
    },
    {
      "type": "java.time.Instant"
    },
    {
      "type": "java.time.LocalDate"
    },
    {
      "type": "java.time.LocalDateTime"
    },
    {
      "type": "java.time.LocalTime"
    },
    {
      "type": "java.time.MonthDay"
    },
    {
      "type": "java.time.OffsetDateTime"
    },
    {
      "type": "java.time.OffsetTime"
    },
    {
      "type": "java.time.Period"
    },
    {
      "type": "java.time.Year"
    },
    {
      "type": "java.time.YearMonth"
    },
    {
      "type": "java.time.ZoneId"
    },
    {
      "type": "java.time.ZoneOffset"
    },
    {
      "type": "java.time.ZonedDateTime"
    },
    {
      "type": "java.util.PropertyPermission"
    },
    {
      "type": "java.util.ResourceBundle",
      "methods": [
        {
          "name": "getBaseBundleName",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.util.concurrent.ForkJoinTask",
      "fields": [
        {
          "name": "aux"
        },
        {
          "name": "status"
        }
      ]
    },
    {
      "type": "java.util.concurrent.atomic.AtomicBoolean",
      "fields": [
        {
          "name": "value"
        }
      ]
    },
    {
      "type": "java.util.concurrent.atomic.Striped64",
      "fields": [
        {
          "name": "base"
        },
        {
          "name": "cellsBusy"
        }
      ]
    },
    {
      "type": "javax.smartcardio.CardPermission"
    },
    {
      "type": "jdk.graal.compiler.hotspot.HotSpotGraalJVMCIServiceLocator"
    },
    {
      "type": "jdk.internal.jrtfs.JrtFileSystemProvider"
    },
    {
      "type": "jdk.internal.misc.Unsafe",
      "methods": [
        {
          "name": "allocateUninitializedArray",
          "parameterTypes": [
            "java.lang.Class",
            "int"
          ]
        },
        {
          "name": "getUnsafe",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "kotlin.SafePublicationLazyImpl",
      "fields": [
        {
          "name": "_value"
        }
      ]
    },
    {
      "type": "kotlin.jvm.internal.DefaultConstructorMarker"
    },
    {
      "type": "kotlin.reflect.jvm.internal.ReflectionFactoryImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "kotlinx.atomicfu.AtomicBoolean",
      "fields": [
        {
          "name": "_value"
        }
      ]
    },
    {
      "type": "kotlinx.atomicfu.AtomicRef",
      "fields": [
        {
          "name": "value"
        }
      ]
    },
    {
      "type": "kotlinx.coroutines.EventLoopImplBase",
      "fields": [
        {
          "name": "_delayed$volatile"
        },
        {
          "name": "_isCompleted$volatile"
        },
        {
          "name": "_queue$volatile"
        }
      ]
    },
    {
      "type": "kotlinx.coroutines.JobSupport",
      "fields": [
        {
          "name": "_parentHandle$volatile"
        },
        {
          "name": "_state$volatile"
        }
      ]
    },
    {
      "type": "kotlinx.coroutines.JobSupport$Finishing",
      "fields": [
        {
          "name": "_exceptionsHolder$volatile"
        },
        {
          "name": "_isCompleting$volatile"
        },
        {
          "name": "_rootCause$volatile"
        }
      ]
    },
    {
      "type": "kotlinx.coroutines.internal.DispatchedContinuation",
      "fields": [
        {
          "name": "_reusableCancellableContinuation$volatile"
        }
      ]
    },
    {
      "type": "kotlinx.coroutines.internal.LockFreeLinkedListNode",
      "fields": [
        {
          "name": "_next$volatile"
        },
        {
          "name": "_prev$volatile"
        },
        {
          "name": "_removedRef$volatile"
        }
      ]
    },
    {
      "type": "kotlinx.coroutines.internal.LockFreeTaskQueue",
      "fields": [
        {
          "name": "_cur$volatile"
        }
      ]
    },
    {
      "type": "kotlinx.coroutines.internal.LockFreeTaskQueueCore",
      "fields": [
        {
          "name": "_next$volatile"
        },
        {
          "name": "_state$volatile"
        }
      ]
    },
    {
      "type": "kotlinx.coroutines.scheduling.CoroutineScheduler",
      "fields": [
        {
          "name": "_isTerminated$volatile"
        },
        {
          "name": "controlState$volatile"
        },
        {
          "name": "parkedWorkersStack$volatile"
        }
      ]
    },
    {
      "type": "libcore.io.Memory"
    },
    {
      "type": "org.pkl.core.runtime.VmFileDetector"
    },
    {
      "type": "org.pkl.core.runtime.VmLanguageProvider"
    },
    {
      "type": "org.sqlite.JDBC"
    },
    {
      "type": "picocli.CommandLine$AutoHelpMixin",
      "allDeclaredFields": true
    },
    {
      "type": "sun.misc.Unsafe",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "invokeCleaner",
          "parameterTypes": [
            "java.nio.ByteBuffer"
          ]
        }
      ]
    },
    {
      "type": "sun.security.provider.NativePRNG",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.security.SecureRandomParameters"
          ]
        }
      ]
    },
    {
      "type": "tools.elide.data.Encoding"
    },
    {
      "type": "tools.elide.vfs.Directory",
      "methods": [
        {
          "name": "getChildrenList",
          "parameterTypes": []
        },
        {
          "name": "getName",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "tools.elide.vfs.Directory$Builder"
    },
    {
      "type": "tools.elide.vfs.File",
      "methods": [
        {
          "name": "getCompressed",
          "parameterTypes": []
        },
        {
          "name": "getDefaultInstance",
          "parameterTypes": []
        },
        {
          "name": "getEncodingValue",
          "parameterTypes": []
        },
        {
          "name": "getFileTypeCase",
          "parameterTypes": []
        },
        {
          "name": "getName",
          "parameterTypes": []
        },
        {
          "name": "getOffset",
          "parameterTypes": []
        },
        {
          "name": "getSize",
          "parameterTypes": []
        },
        {
          "name": "getTail",
          "parameterTypes": []
        },
        {
          "name": "hasFingerprint",
          "parameterTypes": []
        },
        {
          "name": "hasModified",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "tools.elide.vfs.File$Builder"
    },
    {
      "type": "tools.elide.vfs.File$FileFingerprint"
    },
    {
      "type": "tools.elide.vfs.KnownMimeType"
    },
    {
      "type": "tools.elide.vfs.TreeEntry",
      "methods": [
        {
          "name": "getDirectory",
          "parameterTypes": []
        },
        {
          "name": "getEntryCase",
          "parameterTypes": []
        },
        {
          "name": "getFile",
          "parameterTypes": []
        },
        {
          "name": "hasParent",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "tools.elide.vfs.TreeEntry$Builder"
    }
  ],
  "resources": [
    {
      "glob": "sun/util/logging/resources/logging_en.properties"
    },
    {
      "glob": "META-INF/maven/org.jline/jline-native/pom.properties"
    },
    {
      "glob": "META-INF/elide/embedded/runtime/js/js.vfs.tar"
    },
    {
      "glob": "META-INF/elide/embedded/runtime/js/polyfills.js"
    },
    {
      "glob": "META-INF/elide/embedded/runtime/js/runtime.json.gz"
    },
    {
      "glob": "META-INF/elide/embedded/runtime/ts/runtime.json.gz"
    },
    {
      "glob": "META-INF/graalvm/org.graalvm.polyglot/version"
    },
    {
      "glob": "META-INF/graalvm/org.graalvm.truffle/version"
    },
    {
      "glob": "META-INF/maven/org.xerial/sqlite-jdbc/VERSION"
    },
    {
      "glob": "META-INF/maven/org.xerial/sqlite-jdbc/pom.properties"
    },
    {
      "glob": "META-INF/micronaut/"
    },
    {
      "glob": "META-INF/native/libnetty_transport_native_epoll_x86_64.so"
    },
    {
      "glob": "META-INF/native/libnetty_transport_native_io_uring_x86_64.so"
    },
    {
      "glob": "META-INF/resources/engine/libtruffleattach/linux/amd64/sha256"
    },
    {
      "glob": "META-INF/services/ch.qos.logback.classic.spi.Configurator"
    },
    {
      "glob": "META-INF/services/com.oracle.truffle.api.TruffleLanguage$Provider"
    },
    {
      "glob": "META-INF/services/com.oracle.truffle.api.TruffleRuntimeAccess"
    },
    {
      "glob": "META-INF/services/com.oracle.truffle.api.impl.TruffleLocator"
    },
    {
      "glob": "META-INF/services/com.oracle.truffle.api.instrumentation.TruffleInstrument$Provider"
    },
    {
      "glob": "META-INF/services/com.oracle.truffle.api.instrumentation.provider.TruffleInstrumentProvider"
    },
    {
      "glob": "META-INF/services/com.oracle.truffle.api.library.DefaultExportProvider"
    },
    {
      "glob": "META-INF/services/com.oracle.truffle.api.library.provider.DefaultExportProvider"
    },
    {
      "glob": "META-INF/services/com.oracle.truffle.api.object.LayoutFactory"
    },
    {
      "glob": "META-INF/services/com.oracle.truffle.api.provider.InternalResourceProvider"
    },
    {
      "glob": "META-INF/services/com.oracle.truffle.api.provider.TruffleLanguageProvider"
    },
    {
      "glob": "META-INF/services/com.oracle.truffle.js.runtime.Evaluator"
    },
    {
      "glob": "META-INF/services/com.oracle.truffle.runtime.EngineCacheSupport"
    },
    {
      "glob": "META-INF/services/com.oracle.truffle.runtime.FloodControlHandler"
    },
    {
      "glob": "META-INF/services/com.oracle.truffle.runtime.LoopNodeFactory"
    },
    {
      "glob": "META-INF/services/com.oracle.truffle.runtime.TruffleTypes"
    },
    {
      "glob": "META-INF/services/com.oracle.truffle.runtime.jfr.EventFactory$Provider"
    },
    {
      "glob": "META-INF/services/elide.runtime.intrinsics.GuestIntrinsic"
    },
    {
      "glob": "META-INF/services/io.micronaut.context.ApplicationContextConfigurer"
    },
    {
      "glob": "META-INF/services/io.micronaut.core.optim.StaticOptimizations$Loader"
    },
    {
      "glob": "META-INF/services/java.lang.System$LoggerFinder"
    },
    {
      "glob": "META-INF/services/java.nio.channels.spi.SelectorProvider"
    },
    {
      "glob": "META-INF/services/java.nio.file.spi.FileSystemProvider"
    },
    {
      "glob": "META-INF/services/java.nio.file.spi.FileTypeDetector"
    },
    {
      "glob": "META-INF/services/java.sql.Driver"
    },
    {
      "glob": "META-INF/services/java.time.zone.ZoneRulesProvider"
    },
    {
      "glob": "META-INF/services/java.util.spi.ResourceBundleControlProvider"
    },
    {
      "glob": "META-INF/services/org.graalvm.home.HomeFinder"
    },
    {
      "glob": "META-INF/services/org.graalvm.polyglot.impl.AbstractPolyglotImpl"
    },
    {
      "glob": "META-INF/services/org.slf4j.spi.SLF4JServiceProvider"
    },
    {
      "glob": "logback-test.scmo"
    },
    {
      "glob": "logback.scmo"
    },
    {
      "module": "java.base",
      "glob": "sun/net/www/content-types.properties"
    },
    {
      "module": "jdk.jfr",
      "glob": "jdk/jfr/internal/types/metadata.bin"
    }
  ],
  "bundles": [
    {
      "name":"ElideTool",
      "locales":["en-US"]
    },
    {
      "name":"org.pkl.core.errorMessages",
      "locales":["en"]
    },
    {
      "name":"sun.text.resources.BreakIteratorInfo",
      "locales":["und"]
    },
    {
      "name":"sun.text.resources.BreakIteratorResources",
      "locales":["en", "en-US", "und"]
    },
    {
      "name":"sun.text.resources.cldr.FormatData",
      "locales":["en", "en-US", "und"]
    },
    {
      "name":"sun.util.resources.cldr.CalendarData",
      "locales":["und"]
    },
    {
      "name":"sun.util.resources.cldr.TimeZoneNames",
      "locales":["en", "en-US", "und"]
    },
    {
      "name": "com.sun.tools.javac.resources.compiler",
      "locales": ["en"]
    },
    {
      "name": "sun.tools.jar.resources.jar",
      "locales": ["en"]
    },
    {
      "name": "com.sun.tools.javac.resources.javac",
      "locales": ["en"]
    }
  ],
  "serialization": [
    {
      "type": "ch.qos.logback.classic.model.ConfigurationModel"
    },
    {
      "type": "ch.qos.logback.classic.model.ContextNameModel"
    },
    {
      "type": "ch.qos.logback.classic.model.LoggerContextListenerModel"
    },
    {
      "type": "ch.qos.logback.classic.model.LoggerModel"
    },
    {
      "type": "ch.qos.logback.classic.model.RootLoggerModel"
    },
    {
      "type": "ch.qos.logback.core.model.AppenderModel"
    },
    {
      "type": "ch.qos.logback.core.model.AppenderRefModel"
    },
    {
      "type": "ch.qos.logback.core.model.ComponentModel"
    },
    {
      "type": "ch.qos.logback.core.model.ImplicitModel"
    },
    {
      "type": "ch.qos.logback.core.model.Model"
    },
    {
      "type": "ch.qos.logback.core.model.NamedComponentModel"
    },
    {
      "type": "ch.qos.logback.core.model.NamedModel"
    },
    {
      "type": "ch.qos.logback.core.model.PropertyModel"
    },
    {
      "type": "ch.qos.logback.core.model.SerializeModelModel"
    },
    {
      "type": "ch.qos.logback.core.model.SiftModel"
    },
    {
      "type": "ch.qos.logback.core.model.StatusListenerModel"
    },
    {
      "type": "java.util.ArrayList"
    }
  ],
  "jni": [
    {
      "type": "[B"
    },
    {
      "type": "[J"
    },
    {
      "type": "[Z"
    },
    {
      "type": "[[J"
    },
    {
      "type": "io.netty.channel.ChannelException"
    },
    {
      "type": "io.netty.channel.DefaultFileRegion",
      "fields": [
        {
          "name": "file"
        },
        {
          "name": "transferred"
        }
      ]
    },
    {
      "type": "io.netty.channel.epoll.LinuxSocket"
    },
    {
      "type": "io.netty.channel.epoll.Native"
    },
    {
      "type": "io.netty.channel.epoll.NativeDatagramPacketArray$NativeDatagramPacket",
      "fields": [
        {
          "name": "count"
        },
        {
          "name": "memoryAddress"
        },
        {
          "name": "recipientAddr"
        },
        {
          "name": "recipientAddrLen"
        },
        {
          "name": "recipientPort"
        },
        {
          "name": "recipientScopeId"
        },
        {
          "name": "segmentSize"
        },
        {
          "name": "senderAddr"
        },
        {
          "name": "senderAddrLen"
        },
        {
          "name": "senderPort"
        },
        {
          "name": "senderScopeId"
        }
      ]
    },
    {
      "type": "io.netty.channel.epoll.NativeStaticallyReferencedJniMethods"
    },
    {
      "type": "io.netty.channel.unix.Buffer"
    },
    {
      "type": "io.netty.channel.unix.DatagramSocketAddress",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "byte[]",
            "int",
            "int",
            "int",
            "io.netty.channel.unix.DatagramSocketAddress"
          ]
        }
      ]
    },
    {
      "type": "io.netty.channel.unix.DomainDatagramSocketAddress",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "byte[]",
            "int",
            "io.netty.channel.unix.DomainDatagramSocketAddress"
          ]
        }
      ]
    },
    {
      "type": "io.netty.channel.unix.ErrorsStaticallyReferencedJniMethods"
    },
    {
      "type": "io.netty.channel.unix.FileDescriptor"
    },
    {
      "type": "io.netty.channel.unix.LimitsStaticallyReferencedJniMethods"
    },
    {
      "type": "io.netty.channel.unix.PeerCredentials",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "int",
            "int",
            "int[]"
          ]
        }
      ]
    },
    {
      "type": "io.netty.channel.unix.Socket"
    },
    {
      "type": "io.netty.incubator.channel.uring.LinuxSocket"
    },
    {
      "type": "io.netty.incubator.channel.uring.Native"
    },
    {
      "type": "io.netty.incubator.channel.uring.NativeStaticallyReferencedJniMethods"
    },
    {
      "type": "io.netty.internal.tcnative.Buffer"
    },
    {
      "type": "io.netty.internal.tcnative.CertificateCallbackTask",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "long",
            "byte[]",
            "byte[][]",
            "io.netty.internal.tcnative.CertificateCallback"
          ]
        }
      ]
    },
    {
      "type": "io.netty.internal.tcnative.CertificateVerifierTask",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "long",
            "byte[][]",
            "java.lang.String",
            "io.netty.internal.tcnative.CertificateVerifier"
          ]
        }
      ]
    },
    {
      "type": "io.netty.internal.tcnative.Library"
    },
    {
      "type": "io.netty.internal.tcnative.NativeStaticallyReferencedJniMethods"
    },
    {
      "type": "io.netty.internal.tcnative.SSL"
    },
    {
      "type": "io.netty.internal.tcnative.SSLContext"
    },
    {
      "type": "io.netty.internal.tcnative.SSLPrivateKeyMethodDecryptTask",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "long",
            "byte[]",
            "io.netty.internal.tcnative.AsyncSSLPrivateKeyMethod"
          ]
        }
      ]
    },
    {
      "type": "io.netty.internal.tcnative.SSLPrivateKeyMethodSignTask",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "long",
            "int",
            "byte[]",
            "io.netty.internal.tcnative.AsyncSSLPrivateKeyMethod"
          ]
        }
      ]
    },
    {
      "type": "io.netty.internal.tcnative.SSLPrivateKeyMethodTask",
      "fields": [
        {
          "name": "resultBytes"
        }
      ]
    },
    {
      "type": "io.netty.internal.tcnative.SSLSession"
    },
    {
      "type": "io.netty.internal.tcnative.SSLTask",
      "fields": [
        {
          "name": "complete"
        },
        {
          "name": "returnValue"
        }
      ]
    },
    {
      "type": "java.io.FileDescriptor",
      "fields": [
        {
          "name": "fd"
        }
      ]
    },
    {
      "type": "java.io.IOException"
    },
    {
      "type": "java.lang.Boolean",
      "methods": [
        {
          "name": "getBoolean",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "java.lang.Class",
      "methods": [
        {
          "name": "getClassLoader",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.ClassLoader",
      "methods": [
        {
          "name": "loadClass",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "java.lang.Exception"
    },
    {
      "type": "java.lang.IllegalArgumentException"
    },
    {
      "type": "java.lang.NullPointerException"
    },
    {
      "type": "java.lang.OutOfMemoryError"
    },
    {
      "type": "java.lang.RuntimeException"
    },
    {
      "type": "java.lang.String",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "byte[]"
          ]
        },
        {
          "name": "getBytes",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.Throwable",
      "methods": [
        {
          "name": "toString",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.net.InetSocketAddress",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.String",
            "int"
          ]
        }
      ]
    },
    {
      "type": "java.net.PortUnreachableException"
    },
    {
      "type": "java.nio.Buffer",
      "fields": [
        {
          "name": "limit"
        },
        {
          "name": "position"
        }
      ],
      "methods": [
        {
          "name": "limit",
          "parameterTypes": []
        },
        {
          "name": "position",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.nio.DirectByteBuffer"
    },
    {
      "type": "org.sqlite.Collation",
      "methods": [
        {
          "name": "xCompare",
          "parameterTypes": [
            "java.lang.String",
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "org.sqlite.Function",
      "fields": [
        {
          "name": "args"
        },
        {
          "name": "context"
        },
        {
          "name": "value"
        }
      ],
      "methods": [
        {
          "name": "xFunc",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.sqlite.Function$Aggregate",
      "methods": [
        {
          "name": "clone",
          "parameterTypes": []
        },
        {
          "name": "xFinal",
          "parameterTypes": []
        },
        {
          "name": "xStep",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.sqlite.Function$Window",
      "methods": [
        {
          "name": "xInverse",
          "parameterTypes": []
        },
        {
          "name": "xValue",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.sqlite.ProgressHandler",
      "methods": [
        {
          "name": "progress",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.sqlite.core.DB",
      "methods": [
        {
          "name": "onCommit",
          "parameterTypes": [
            "boolean"
          ]
        },
        {
          "name": "onUpdate",
          "parameterTypes": [
            "int",
            "java.lang.String",
            "java.lang.String",
            "long"
          ]
        },
        {
          "name": "throwex",
          "parameterTypes": []
        },
        {
          "name": "throwex",
          "parameterTypes": [
            "int"
          ]
        }
      ]
    },
    {
      "type": "org.sqlite.core.DB$ProgressObserver",
      "methods": [
        {
          "name": "progress",
          "parameterTypes": [
            "int",
            "int"
          ]
        }
      ]
    },
    {
      "type": "org.sqlite.core.NativeDB",
      "fields": [
        {
          "name": "busyHandler"
        },
        {
          "name": "commitListener"
        },
        {
          "name": "pointer"
        },
        {
          "name": "progressHandler"
        },
        {
          "name": "updateListener"
        }
      ],
      "methods": [
        {
          "name": "stringToUtf8ByteArray",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "throwex",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    }
  ]
}
