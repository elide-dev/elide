[
{
  "name":"[B"
},
{
  "name":"[C"
},
{
  "name":"[D"
},
{
  "name":"[F"
},
{
  "name":"[I"
},
{
  "name":"[J"
},
{
  "name":"[Lio.micronaut.context.annotation.Requires$Family;"
},
{
  "name":"[Ljava.lang.String;"
},
{
  "name":"[Ljavax.management.openmbean.CompositeData;"
},
{
  "name":"[Lsun.security.pkcs.SignerInfo;"
},
{
  "name":"[S"
},
{
  "name":"[Z"
},
{
  "name":"android.os.Build"
},
{
  "name":"androidx.compose.runtime.AtomicInt",
  "fields":[{"name":"delegate$volatile"}]
},
{
  "name":"androidx.compose.runtime.AtomicReference",
  "fields":[{"name":"delegate$volatile"}]
},
{
  "name":"apple.security.AppleProvider",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.encoder.PatternLayoutEncoder",
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.joran.SerializedModelConfigurator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.jul.LevelChangePropagator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.LineSeparatorConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.MessageConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.sift.MDCBasedDiscriminator",
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setDefaultValue","parameterTypes":["java.lang.String"] }, {"name":"setKey","parameterTypes":["java.lang.String"] }]
},
{
  "name":"ch.qos.logback.classic.sift.SiftingAppender",
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setDiscriminator","parameterTypes":["ch.qos.logback.core.sift.Discriminator"] }]
},
{
  "name":"ch.qos.logback.classic.spi.LogbackServiceProvider"
},
{
  "name":"ch.qos.logback.core.ConsoleAppender",
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setTarget","parameterTypes":["java.lang.String"] }]
},
{
  "name":"ch.qos.logback.core.OutputStreamAppender",
  "methods":[{"name":"setEncoder","parameterTypes":["ch.qos.logback.core.encoder.Encoder"] }]
},
{
  "name":"ch.qos.logback.core.encoder.Encoder",
  "methods":[{"name":"valueOf","parameterTypes":["java.lang.String"] }]
},
{
  "name":"ch.qos.logback.core.encoder.LayoutWrappingEncoder",
  "methods":[{"name":"setParent","parameterTypes":["ch.qos.logback.core.spi.ContextAware"] }]
},
{
  "name":"ch.qos.logback.core.pattern.PatternLayoutEncoderBase",
  "methods":[{"name":"setPattern","parameterTypes":["java.lang.String"] }]
},
{
  "name":"ch.qos.logback.core.sift.Discriminator",
  "methods":[{"name":"valueOf","parameterTypes":["java.lang.String"] }]
},
{
  "name":"ch.qos.logback.core.spi.ContextAware",
  "methods":[{"name":"valueOf","parameterTypes":["java.lang.String"] }]
},
{
  "name":"ch.qos.logback.core.status.NopStatusListener",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.github.ajalt.clikt.core.CliktCommand",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.github.ajalt.mordant.internal.jna.PosixLibC$winsize",
  "allDeclaredFields":true
},
{
  "name":"com.google.common.jimfs.SystemJimfsFileSystemProvider",
  "methods":[{"name":"removeFileSystemRunnable","parameterTypes":["java.net.URI"] }]
},
{
  "name":"com.google.protobuf.ExtensionRegistry",
  "methods":[{"name":"getEmptyRegistry","parameterTypes":[] }]
},
{
  "name":"com.oracle.svm.core.jdk.resources.NativeImageResourceFileSystemProvider"
},
{
  "name":"com.sun.crypto.provider.AESCipher$General",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.crypto.provider.ARCFOURCipher",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.crypto.provider.ChaCha20Cipher$ChaCha20Poly1305",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.crypto.provider.DESCipher",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.crypto.provider.DESedeCipher",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.crypto.provider.DHParameters",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.crypto.provider.GaloisCounterMode$AESGCM",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.crypto.provider.TlsMasterSecretGenerator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.jna.CallbackProxy",
  "methods":[{"name":"callback","parameterTypes":["java.lang.Object[]"] }]
},
{
  "name":"com.sun.jna.Native",
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true,
  "allPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.jna.platform.linux.Udev$UdevContext",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.jna.platform.linux.Udev$UdevDevice",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.jna.platform.linux.Udev$UdevEnumerate",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.jna.platform.linux.Udev$UdevListEntry",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.jna.platform.mac.CoreFoundation$CFAllocatorRef",
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true,
  "allPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.jna.platform.mac.CoreFoundation$CFDataRef",
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true,
  "allPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.jna.platform.mac.CoreFoundation$CFIndex",
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true,
  "allPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.jna.platform.mac.CoreFoundation$CFMutableDictionaryRef",
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true,
  "allPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.jna.platform.mac.CoreFoundation$CFStringRef",
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true,
  "allPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.jna.platform.mac.CoreFoundation$CFTypeID",
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true,
  "allPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.jna.platform.mac.CoreFoundation$CFTypeRef",
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true,
  "allPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.jna.platform.mac.IOKit$IOIterator",
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true,
  "allPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.jna.platform.mac.IOKit$IORegistryEntry",
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true,
  "allPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.jna.platform.unix.LibCAPI$size_t",
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true,
  "allPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.jna.ptr.IntByReference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.jna.ptr.PointerByReference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.management.GarbageCollectorMXBean",
  "queryAllPublicMethods":true
},
{
  "name":"com.sun.management.GcInfo",
  "queryAllPublicMethods":true
},
{
  "name":"com.sun.management.HotSpotDiagnosticMXBean",
  "queryAllPublicMethods":true
},
{
  "name":"com.sun.management.ThreadMXBean",
  "queryAllPublicMethods":true
},
{
  "name":"com.sun.management.UnixOperatingSystemMXBean",
  "queryAllPublicMethods":true
},
{
  "name":"com.sun.management.VMOption",
  "queryAllPublicMethods":true
},
{
  "name":"com.sun.management.internal.GarbageCollectorExtImpl",
  "queryAllPublicConstructors":true
},
{
  "name":"com.sun.management.internal.HotSpotDiagnostic",
  "queryAllPublicConstructors":true
},
{
  "name":"com.sun.management.internal.HotSpotThreadImpl",
  "queryAllPublicConstructors":true
},
{
  "name":"com.sun.management.internal.OperatingSystemImpl",
  "queryAllPublicConstructors":true
},
{
  "name":"com.sun.security.cert.internal.x509.X509V1CertImpl"
},
{
  "name":"elide.runtime.gvm.cfg.$GuestIOConfiguration$Intercepted$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.runtime.gvm.cfg.$GuestVMConfiguration$Intercepted$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.runtime.gvm.cfg.$GuestVMEEConfig$Intercepted$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.runtime.gvm.cfg.$GuestVMEESandboxConfig$Intercepted$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.runtime.gvm.cfg.$GuestVMInspectConfig$Intercepted$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.runtime.gvm.cfg.$JsRuntimeConfig$Intercepted$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.runtime.gvm.cfg.$JsRuntimeConfig$JsEsmConfig$Intercepted$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.runtime.gvm.cfg.$JsRuntimeConfig$JsNpmConfig$Intercepted$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.runtime.gvm.internals.$IntrinsicsManager$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.runtime.gvm.internals.intrinsics.$BuiltinIntrinsicsResolver$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.runtime.gvm.internals.intrinsics.$ElideIntrinsic$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.runtime.gvm.internals.intrinsics.$ServiceIntrinsicsResolver$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.runtime.gvm.internals.intrinsics.js.base64.$Base64Intrinsic$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.runtime.gvm.internals.intrinsics.js.codec.$JsEncodingIntrinsics$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.runtime.gvm.internals.intrinsics.js.console.$ConsoleIntrinsic$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.runtime.gvm.internals.intrinsics.js.crypto.$WebCryptoIntrinsic$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.runtime.gvm.internals.intrinsics.js.crypto.$WebCryptoKey$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.runtime.gvm.internals.intrinsics.js.fetch.$FetchIntrinsic$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.runtime.gvm.internals.intrinsics.js.stream.$CoreStreamsIntrinsic$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.runtime.gvm.internals.intrinsics.js.url.$URLIntrinsic$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.runtime.gvm.internals.intrinsics.js.url.$URLSearchParamsIntrinsic$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.runtime.gvm.internals.intrinsics.js.webstreams.$ReadableStreamIntrinsic$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.runtime.gvm.internals.js.$JsTimerExecutorProviderImpl$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.runtime.gvm.internals.js.$JsTimerExecutorProviderImpl$Provide0$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.runtime.gvm.internals.js.$JsTimersIntrinsic$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.runtime.gvm.internals.js.$JsTimersIntrinsic$Provide0$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.runtime.gvm.internals.js.JsTimersIntrinsic",
  "fields":[{"name":"execProvider"}]
},
{
  "name":"elide.runtime.gvm.internals.node.asserts.$NodeAssertModule$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.runtime.gvm.internals.node.asserts.$NodeAssertModule$Provide0$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.runtime.gvm.internals.node.asserts.$NodeAssertStrictModule$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.runtime.gvm.internals.node.asserts.$NodeAssertStrictModule$Provide0$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.runtime.gvm.internals.node.buffer.$NodeBufferIntrinsic$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.runtime.gvm.internals.node.buffer.$NodeBufferModule$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.runtime.gvm.internals.node.buffer.$NodeBufferModuleFacade$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.runtime.gvm.internals.node.childProcess.$NodeChildProcessModule$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.runtime.gvm.internals.node.childProcess.$NodeChildProcessModule$Provide$graalvm0$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.runtime.gvm.internals.node.cluster.$NodeClusterModule$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.runtime.gvm.internals.node.cluster.$NodeClusterModule$Provide$graalvm0$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.runtime.gvm.internals.node.console.$NodeConsoleModule$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.runtime.gvm.internals.node.console.$NodeConsoleModule$Provide$graalvm0$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.runtime.gvm.internals.node.crypto.$NodeCryptoModule$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.runtime.gvm.internals.node.crypto.$NodeCryptoModule$Provide$graalvm0$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.runtime.gvm.internals.node.dgram.$NodeDatagramModule$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.runtime.gvm.internals.node.dgram.$NodeDatagramModule$Provide$graalvm0$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.runtime.gvm.internals.node.diagnostics.$NodeDiagnosticsChannelModule$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.runtime.gvm.internals.node.diagnostics.$NodeDiagnosticsChannelModule$Provide$graalvm0$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.runtime.gvm.internals.node.dns.$NodeDNSModule$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.runtime.gvm.internals.node.dns.$NodeDNSModule$Provide$graalvm0$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.runtime.gvm.internals.node.dns.$NodeDNSPromisesModule$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.runtime.gvm.internals.node.dns.$NodeDNSPromisesModule$Provide$graalvm0$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.runtime.gvm.internals.node.domain.$NodeDomainModule$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.runtime.gvm.internals.node.domain.$NodeDomainModule$Provide$graalvm0$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.runtime.gvm.internals.node.events.$NodeEventsModule$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.runtime.gvm.internals.node.events.$NodeEventsModule$Provide0$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.runtime.gvm.internals.node.events.$NodeEventsModuleFacade$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.runtime.gvm.internals.node.fs.$NodeFilesystemModule$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.runtime.gvm.internals.node.fs.$NodeFilesystemModule$ProvidePromises1$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.runtime.gvm.internals.node.fs.$NodeFilesystemModule$ProvideStd0$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.runtime.gvm.internals.node.fs.$VfsInitializerListener$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.runtime.gvm.internals.node.http.$NodeHttpModule$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.runtime.gvm.internals.node.http.$NodeHttpModule$Provide$graalvm0$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.runtime.gvm.internals.node.http2.$NodeHttp2Module$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.runtime.gvm.internals.node.http2.$NodeHttp2Module$Provide$graalvm0$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.runtime.gvm.internals.node.https.$NodeHttpsModule$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.runtime.gvm.internals.node.https.$NodeHttpsModule$Provide$graalvm0$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.runtime.gvm.internals.node.inspector.$NodeInspectorModule$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.runtime.gvm.internals.node.inspector.$NodeInspectorPromisesModule$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.runtime.gvm.internals.node.module.$NodeModulesModule$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.runtime.gvm.internals.node.module.$NodeModulesModule$Provide$graalvm0$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.runtime.gvm.internals.node.net.$NodeNetworkModule$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.runtime.gvm.internals.node.net.$NodeNetworkModule$Provide$graalvm0$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.runtime.gvm.internals.node.os.$CPUInfoData$Introspection",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.runtime.gvm.internals.node.os.$CPUTimingsData$Introspection",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.runtime.gvm.internals.node.os.$NetworkInterfaceInfoData$Introspection",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.runtime.gvm.internals.node.os.$NodeOperatingSystem$BaseOS$Introspection",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.runtime.gvm.internals.node.os.$NodeOperatingSystem$Posix$Introspection",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.runtime.gvm.internals.node.os.$NodeOperatingSystem$Win32$Introspection",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.runtime.gvm.internals.node.os.$NodeOperatingSystemModule$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.runtime.gvm.internals.node.os.$NodeOperatingSystemModule$Provide0$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.runtime.gvm.internals.node.path.$NodePathsModule$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.runtime.gvm.internals.node.perfHooks.$NodePerformanceHooksModule$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.runtime.gvm.internals.node.perfHooks.$NodePerformanceHooksModule$Provide$graalvm0$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.runtime.gvm.internals.node.process.$NodeProcessModule$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.runtime.gvm.internals.node.process.$NodeProcessModule$Provide0$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.runtime.gvm.internals.node.querystring.$NodeQuerystringModule$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.runtime.gvm.internals.node.querystring.$NodeQuerystringModule$Provide$graalvm0$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.runtime.gvm.internals.node.readline.$NodeReadlineModule$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.runtime.gvm.internals.node.readline.$NodeReadlineModule$Provide$graalvm0$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.runtime.gvm.internals.node.readline.$NodeReadlinePromisesModule$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.runtime.gvm.internals.node.readline.$NodeReadlinePromisesModule$Provide$graalvm0$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.runtime.gvm.internals.node.stream.$NodeStreamConsumersModule$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.runtime.gvm.internals.node.stream.$NodeStreamConsumersModule$Provide$graalvm0$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.runtime.gvm.internals.node.stream.$NodeStreamModule$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.runtime.gvm.internals.node.stream.$NodeStreamModule$Provide$graalvm0$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.runtime.gvm.internals.node.stream.$NodeStreamPromisesModule$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.runtime.gvm.internals.node.stream.$NodeStreamPromisesModule$Provide$graalvm0$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.runtime.gvm.internals.node.stream.$NodeStreamWebModule$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.runtime.gvm.internals.node.stream.$NodeStreamWebModule$Provide$graalvm0$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.runtime.gvm.internals.node.stringDecoder.$NodeStringDecoderModule$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.runtime.gvm.internals.node.stringDecoder.$NodeStringDecoderModule$Provide$graalvm0$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.runtime.gvm.internals.node.test.$NodeTestModule$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.runtime.gvm.internals.node.test.$NodeTestModule$Provide$graalvm0$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.runtime.gvm.internals.node.url.$NodeURLModule$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.runtime.gvm.internals.node.url.$NodeURLModule$Provide$graalvm0$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.runtime.gvm.internals.node.worker.$NodeWorkerModule$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.runtime.gvm.internals.node.worker.$NodeWorkerModule$Provide$graalvm0$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name": "elide.runtime.node.zlib.$NodeZlib$Definition",
  "methods": [
    {
      "name": "<init>",
      "parameterTypes": []
    }
  ]
},
{
  "name": "elide.runtime.node.zlib.$NodeZlibModule$Definition",
  "methods": [
    {
      "name": "<init>",
      "parameterTypes": []
    }
  ]
},
{
  "name": "elide.runtime.node.zlib.$NodeZlibModule$Provide$graalvm0$Definition",
  "methods": [
    {
      "name": "<init>",
      "parameterTypes": []
    }
  ]
},
{
  "name": "elide.runtime.node.zlib.NodeZlibModule",
  "fields": [
    {
      "name": "zlib"
    }
  ]
},
{
  "name":"elide.runtime.gvm.internals.sqlite.$ElideSqliteModule$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.runtime.gvm.internals.sqlite.$ElideSqliteModule$Provide0$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.runtime.gvm.internals.vfs.$EmbeddedGuestVFSImpl$EmbeddedVFSConfigurationFactory$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.runtime.gvm.internals.vfs.$EmbeddedGuestVFSImpl$EmbeddedVFSConfigurationFactory$Spawn$graalvm0$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.runtime.gvm.internals.vfs.$GuestVFSPolicy$Intercepted$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.runtime.gvm.internals.vfs.$HostVFSImpl$HostVFSConfigurationFactory$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.runtime.gvm.internals.vfs.$HostVFSImpl$HostVFSConfigurationFactory$Spawn$graalvm0$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.runtime.gvm.python.cfg.$PythonRuntimeConfig$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.runtime.gvm.ruby.cfg.$RubyRuntimeConfig$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.runtime.intrinsics.js.err.$ValueErrorIntrinsic$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.runtime.intrinsics.server.http.HttpServerAgent",
  "allPublicFields":true,
  "allPublicMethods":true,
  "allPublicClasses":true
},
{
  "name":"elide.runtime.intrinsics.server.http.HttpServerConfig",
  "allPublicFields":true,
  "allPublicMethods":true,
  "allPublicClasses":true
},
{
  "name":"elide.runtime.intrinsics.server.http.internal.NoopServerEngine",
  "allPublicFields":true,
  "allPublicMethods":true,
  "allPublicClasses":true
},
{
  "name":"elide.runtime.intrinsics.server.http.internal.PipelineRouter",
  "allPublicMethods":true,
  "allPublicClasses":true
},
{
  "name":"elide.runtime.intrinsics.server.http.internal.ThreadLocalHandlerRegistry",
  "allPublicFields":true,
  "allPublicMethods":true,
  "allPublicClasses":true
},
{
  "name":"elide.runtime.intrinsics.server.http.netty.NettyChannelInitializer"
},
{
  "name":"elide.runtime.intrinsics.server.http.netty.NettyHttpRequest",
  "allPublicFields":true,
  "allPublicMethods":true,
  "allPublicClasses":true
},
{
  "name":"elide.runtime.intrinsics.server.http.netty.NettyHttpResponse",
  "allPublicFields":true,
  "allPublicMethods":true,
  "allPublicClasses":true
},
{
  "name":"elide.runtime.intrinsics.server.http.netty.NettyRequestHandler",
  "methods":[{"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, {"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }]
},
{
  "name":"elide.runtime.intrinsics.server.http.netty.NettyServerConfig",
  "allPublicFields":true,
  "allPublicMethods":true,
  "allPublicClasses":true
},
{
  "name":"elide.runtime.intrinsics.server.http.netty.NettyServerEngine",
  "allPublicFields":true,
  "allPublicMethods":true,
  "allPublicClasses":true
},
{
  "name":"elide.runtime.intrinsics.server.http.netty.NoopServerConfig",
  "allPublicFields":true,
  "allPublicMethods":true,
  "allPublicClasses":true
},
{
  "name":"elide.runtime.lang.typescript.TypeScriptLanguageProvider"
},
{
  "name":"elide.server.$Application$AppStartupListener$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "condition":{"typeReachable":"elide.server.$Application$AppStartupListener$Definition$Reference"},
  "name":"elide.server.$Application$AppStartupListener$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.server.$Application$AppStartupListener$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.server.assets.$AssetController$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "condition":{"typeReachable":"elide.server.assets.$AssetController$Definition$Reference"},
  "name":"elide.server.assets.$AssetController$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.server.assets.$AssetController$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.server.assets.$ServerAssetIndex$AssetStartupListener$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "condition":{"typeReachable":"elide.server.assets.$ServerAssetIndex$AssetStartupListener$Definition$Reference"},
  "name":"elide.server.assets.$ServerAssetIndex$AssetStartupListener$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.server.assets.$ServerAssetIndex$AssetStartupListener$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.server.assets.$ServerAssetIndex$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "condition":{"typeReachable":"elide.server.assets.$ServerAssetIndex$Definition$Reference"},
  "name":"elide.server.assets.$ServerAssetIndex$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.server.assets.$ServerAssetIndex$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.server.assets.$ServerAssetManager$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "condition":{"typeReachable":"elide.server.assets.$ServerAssetManager$Definition$Reference"},
  "name":"elide.server.assets.$ServerAssetManager$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.server.assets.$ServerAssetManager$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.server.assets.$ServerAssetManifestProvider$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "condition":{"typeReachable":"elide.server.assets.$ServerAssetManifestProvider$Definition$Reference"},
  "name":"elide.server.assets.$ServerAssetManifestProvider$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.server.assets.$ServerAssetManifestProvider$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.server.assets.$ServerAssetReader$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "condition":{"typeReachable":"elide.server.assets.$ServerAssetReader$Definition$Reference"},
  "name":"elide.server.assets.$ServerAssetReader$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.server.assets.$ServerAssetReader$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "condition":{"typeReachable":"elide.server.assets.ServerAssetIndex$AssetStartupListener"},
  "name":"elide.server.assets.ServerAssetIndex$AssetStartupListener",
  "fields":[{"name":"beanContext"}]
},
{
  "name":"elide.server.assets.ServerAssetIndex$AssetStartupListener",
  "fields":[{"name":"beanContext"}]
},
{
  "name":"elide.server.cfg.$AssetConfig$Intercepted$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "condition":{"typeReachable":"elide.server.cfg.$AssetConfig$Intercepted$Definition$Reference"},
  "name":"elide.server.cfg.$AssetConfig$Intercepted$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.server.cfg.$AssetConfig$Intercepted$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.server.cfg.$ServerConfig$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "condition":{"typeReachable":"elide.server.cfg.$ServerConfig$Definition$Reference"},
  "name":"elide.server.cfg.$ServerConfig$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.server.cfg.$ServerConfig$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "condition":{"typeReachable":"elide.server.cfg.ServerConfigurator"},
  "name":"elide.server.cfg.ServerConfigurator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.server.cfg.ServerConfigurator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.server.controller.builtin.$NotFoundController$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "condition":{"typeReachable":"elide.server.controller.builtin.$NotFoundController$Definition$Reference"},
  "name":"elide.server.controller.builtin.$NotFoundController$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.server.controller.builtin.$NotFoundController$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.server.controller.builtin.$ServerErrorController$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "condition":{"typeReachable":"elide.server.controller.builtin.$ServerErrorController$Definition$Reference"},
  "name":"elide.server.controller.builtin.$ServerErrorController$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.server.controller.builtin.$ServerErrorController$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.server.http.$HeaderFinalizingFilter$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "condition":{"typeReachable":"elide.server.http.$HeaderFinalizingFilter$Definition$Reference"},
  "name":"elide.server.http.$HeaderFinalizingFilter$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.server.http.$HeaderFinalizingFilter$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.server.http.$RequestContextFilter$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "condition":{"typeReachable":"elide.server.http.$RequestContextFilter$Definition$Reference"},
  "name":"elide.server.http.$RequestContextFilter$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.server.http.$RequestContextFilter$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.server.runtime.$AppExecutor$DefaultExecutor$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "condition":{"typeReachable":"elide.server.runtime.$AppExecutor$DefaultExecutor$Definition$Reference"},
  "name":"elide.server.runtime.$AppExecutor$DefaultExecutor$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.server.runtime.$AppExecutor$DefaultExecutor$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.server.runtime.jvm.$UncaughtExceptionHandler$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "condition":{"typeReachable":"elide.server.runtime.jvm.$UncaughtExceptionHandler$Definition$Reference"},
  "name":"elide.server.runtime.jvm.$UncaughtExceptionHandler$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.server.runtime.jvm.$UncaughtExceptionHandler$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.server.runtime.jvm.$UncaughtExceptionHandler$UncaughtExceptionHandlerLoggingProvider$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.server.runtime.jvm.$UncaughtExceptionHandler$UncaughtExceptionHandlerLoggingProvider$Get0$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.tool.cli.$Elide$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.tool.cli.$ElideTool$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.tool.cli.AOTApplicationContextConfigurer",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.tool.cli.AbstractSubcommand",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"elide.tool.cli.AbstractToolCommand",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"elide.tool.cli.AotConstantPropertySources"
},
{
  "name":"elide.tool.cli.Elide",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"elide.tool.cli.Elide$Companion$ToolConfigurator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.tool.cli.ElideTool",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"elide.tool.cli.ElideTool$Companion$ToolConfigurator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.tool.cli.EnvironmentPropertiesOptimizationLoader"
},
{
  "name":"elide.tool.cli.KnownMissingTypesOptimizationLoader"
},
{
  "name":"elide.tool.cli.NettyPropertiesAOTContextConfigurer",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.tool.cli.PublishersOptimizationsLoader"
},
{
  "name":"elide.tool.cli.StaticServicesLoader"
},
{
  "name":"elide.tool.cli.ToolCommandBase",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"elide.tool.cli.cmd.discord.$ToolDiscordCommand$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.tool.cli.cmd.discord.ToolDiscordCommand",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"elide.tool.cli.cmd.help.$HelpCommand$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.tool.cli.cmd.help.HelpCommand",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"elide.tool.cli.cmd.info.$ToolInfoCommand$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.tool.cli.cmd.info.ToolInfoCommand",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"elide.tool.cli.cmd.lint.$ToolLintCommand$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.tool.cli.cmd.lint.ToolLintCommand",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"elide.tool.cli.cmd.repl.$ToolShellCommand$DebugConfig$Introspection",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.tool.cli.cmd.repl.$ToolShellCommand$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.tool.cli.cmd.repl.$ToolShellCommand$EnvironmentConfig$Introspection",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.tool.cli.cmd.repl.$ToolShellCommand$GroovySettings$Introspection",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.tool.cli.cmd.repl.$ToolShellCommand$InspectorConfig$Introspection",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.tool.cli.cmd.repl.$ToolShellCommand$JvmSettings$Introspection",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.tool.cli.cmd.repl.$ToolShellCommand$KotlinSettings$Introspection",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.tool.cli.cmd.repl.$ToolShellCommand$LanguageSelector$Introspection",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.tool.cli.cmd.repl.$ToolShellCommand$PythonSettings$Introspection",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.tool.cli.cmd.repl.$ToolShellCommand$RubySettings$Introspection",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.tool.cli.cmd.repl.$ToolShellCommand$WasmSettings$Introspection",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.tool.cli.cmd.repl.ToolShellCommand",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"elide.tool.cli.cmd.repl.ToolShellCommand$DebugConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"elide.tool.cli.cmd.repl.ToolShellCommand$EnvironmentConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"elide.tool.cli.cmd.repl.ToolShellCommand$GroovySettings",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"elide.tool.cli.cmd.repl.ToolShellCommand$InspectorConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"elide.tool.cli.cmd.repl.ToolShellCommand$JvmSettings",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"elide.tool.cli.cmd.repl.ToolShellCommand$KotlinSettings",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"elide.tool.cli.cmd.repl.ToolShellCommand$LanguageSelector",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"elide.tool.cli.cmd.repl.ToolShellCommand$LanguageSettings",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"elide.tool.cli.cmd.repl.ToolShellCommand$PythonSettings",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"elide.tool.cli.cmd.repl.ToolShellCommand$RubySettings",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"elide.tool.cli.cmd.repl.ToolShellCommand$WasmSettings",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"elide.tool.cli.cmd.selftest.$SelfTestCommand$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.tool.cli.cmd.selftest.SelfTestCommand",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"elide.tool.cli.options.$AbstractEngineOptions$Introspection",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.tool.cli.options.$AccessControlOptions$Introspection",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.tool.cli.options.$CommonOptions$Introspection",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.tool.cli.options.$EngineJavaScriptOptions$Introspection",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.tool.cli.options.$LanguagePositionals$Introspection",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.tool.cli.options.AbstractEngineOptions",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"elide.tool.cli.options.AccessControlOptions",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"elide.tool.cli.options.CommonOptions",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"setDebug","parameterTypes":["boolean"] }, {"name":"setQuiet","parameterTypes":["boolean"] }, {"name":"setVerbose","parameterTypes":["boolean"] }]
},
{
  "name":"elide.tool.cli.options.EngineJavaScriptOptions",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"elide.tool.engine.$EngineTest$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.tool.engine.$JsEngineCondition$Introspection",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.tool.engine.$JsEngineTest$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.tool.engine.$JvmEngineCondition$Introspection",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.tool.engine.$JvmEngineTest$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.tool.engine.$LanguageCondition$Introspection",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.tool.engine.$OsArchTest$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.tool.engine.$OsNameTest$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.tool.engine.$PythonEngineCondition$Introspection",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.tool.engine.$PythonEngineTest$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.tool.engine.$RubyEngineCondition$Introspection",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.tool.engine.$RubyEngineTest$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.tool.engine.$WasmEngineCondition$Introspection",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.tool.engine.$WasmEngineTest$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.tool.err.$DefaultStructuredErrorRecorder$DefaultMarkdownErrorRecorderProvider$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.tool.err.$DefaultStructuredErrorRecorder$DefaultMarkdownErrorRecorderProvider$Get0$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.tool.err.$ErrorHandlerAcquireTest$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.tool.err.$ErrorRecorderAcquireTest$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.tool.err.$ErrorRecorderWriteTest$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.tool.io.$RuntimeWorkdirManager$DefaultRuntimeWorkdirManagerProvider$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.tool.io.$RuntimeWorkdirManager$DefaultRuntimeWorkdirManagerProvider$Get0$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.tool.project.$DefaultProjectManager$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.tool.testing.$SanitySelfTest$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.tool.transport.$EpollTest$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.tool.transport.$KQueueTest$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.tool.transport.$NativeCryptoTest$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"elide.tool.transport.$NativeTransportTest$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"groovy.lang.Closure"
},
{
  "name":"io.micronaut.aop.internal.InterceptorRegistryBean",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.context.annotation.Prototype"
},
{
  "name":"io.micronaut.context.env.PropertiesPropertySourceLoader"
},
{
  "name":"io.micronaut.context.env.exp.RandomPropertyExpressionResolver"
},
{
  "name":"io.micronaut.context.env.yaml.YamlPropertySourceLoader"
},
{
  "name":"io.micronaut.context.event.ApplicationEventPublisherFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.context.propagation.instrument.execution.$ExecutorServiceInstrumenter$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.core.async.converters.ReactiveTypeConverterRegistrar",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.discovery.$DefaultCompositeDiscoveryClient$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.discovery.$DefaultServiceInstanceIdGenerator$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.discovery.cloud.digitalocean.$DigitalOceanInstanceMetadata$Introspection",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.discovery.cloud.digitalocean.$DigitalOceanMetadataConfiguration$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.discovery.cloud.digitalocean.$DigitalOceanMetadataResolver$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.discovery.config.$DefaultCompositeConfigurationClient$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.health.$DefaultCurrentHealthStatus$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.health.$HealthStatus$Introspection",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.health.$HeartbeatConfiguration$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.health.$HeartbeatDiscoveryClientCondition$Introspection",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.health.$HeartbeatTask$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.HttpTypeConverterRegistrar",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.bind.$DefaultRequestBinderRegistry$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.bind.binders.$DefaultBodyAnnotationBinder$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.body.$CharSequenceBodyWriter$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.body.$ConversionTextPlainHandler$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.body.$DefaultMessageBodyHandlerRegistry$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.body.$RawMessageBodyHandlerRegistry$RawByteArrayHandler$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.body.$RawMessageBodyHandlerRegistry$RawByteBufferHandler$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.body.$RawMessageBodyHandlerRegistry$RawStringHandler$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.body.$TextPlainHandler$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.body.$TextStreamBodyWriter$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.body.$WritableBodyWriter$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.codec.$CodecConfiguration$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.converters.$HttpConverterRegistrar$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.converters.SharedHttpConvertersRegistrar",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.expression.$RequestConditionContext$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.hateoas.$AbstractResource$Introspection",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.hateoas.$DefaultLink$Introspection",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.hateoas.$GenericResource$Introspection",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.hateoas.$JsonError$Introspection",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.hateoas.$Resource$Introspection",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.hateoas.$VndError$Introspection",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.resource.$ResourceLoaderFactory$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.resource.$ResourceLoaderFactory$FileSystemResourceLoader1$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.resource.$ResourceLoaderFactory$GetClassPathResourceLoader0$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.resource.$ResourceLoaderFactory$ResourceResolver2$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.ssl.$ClientSslConfiguration$DefaultKeyConfiguration$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.ssl.$ClientSslConfiguration$DefaultKeyStoreConfiguration$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.ssl.$ClientSslConfiguration$DefaultTrustStoreConfiguration$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.ssl.$ClientSslConfiguration$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.ssl.$DefaultSslConfiguration$DefaultKeyConfiguration$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.ssl.$DefaultSslConfiguration$DefaultKeyStoreConfiguration$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.ssl.$DefaultSslConfiguration$DefaultTrustStoreConfiguration$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.ssl.$DefaultSslConfiguration$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.ssl.$ServerSslConfiguration$DefaultKeyConfiguration$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.ssl.$ServerSslConfiguration$DefaultKeyStoreConfiguration$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.ssl.$ServerSslConfiguration$DefaultTrustStoreConfiguration$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.ssl.$ServerSslConfiguration$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.util.$OutgoingHttpRequestProcessorImpl$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.inject.annotation.AnnotationConvertersRegistrar",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.inject.provider.BeanProviderDefinition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.inject.provider.JakartaProviderBeanDefinition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.inject.provider.JavaxProviderBeanDefinition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.jackson.$BeanConfiguration",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.jackson.$JacksonConfiguration$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.jackson.$ObjectMapperFactory$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.jackson.$ObjectMapperFactory$JsonFactory0$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.jackson.$ObjectMapperFactory$ObjectMapper1$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.jackson.codec.$JsonMediaTypeCodec$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.jackson.codec.$JsonStreamMediaTypeCodec$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.jackson.core.env.CloudFoundryVcapApplicationPropertySourceLoader"
},
{
  "name":"io.micronaut.jackson.core.env.CloudFoundryVcapServicesPropertySourceLoader"
},
{
  "name":"io.micronaut.jackson.core.env.EnvJsonPropertySourceLoader"
},
{
  "name":"io.micronaut.jackson.core.env.JsonPropertySourceLoader"
},
{
  "name":"io.micronaut.jackson.databind.$DatabindPropertyBinderExceptionHandler$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.jackson.databind.$JacksonDatabindMapper$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.jackson.databind.convert.$JacksonConverterRegistrar$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.jackson.modules.$BeanIntrospectionModule$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.jackson.serialize.$ConvertibleMultiValuesSerializer$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.jackson.serialize.$ConvertibleValuesSerializer$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.jackson.serialize.$JacksonObjectSerializer$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.jackson.serialize.$JsonNodeDeserializer$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.jackson.serialize.$JsonNodeSerializer$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.jackson.serialize.$OptionalValuesSerializer$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.jackson.serialize.$ResourceModule$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.jackson.serialize.$ResourceSerializerModifier$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.jackson.validation.$ValidationJacksonDeserializationPreInstantiateCallback$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.json.$JsonObjectSerializer$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.json.bind.$JsonBeanPropertyBinder$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.json.body.$JsonMessageHandler$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.json.codec.$JsonMediaTypeCodec$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.json.codec.$JsonStreamMediaTypeCodec$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.json.convert.$JsonConverterRegistrar$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.logging.$LogLevel$Introspection",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.logging.$PropertiesLoggingLevelsConfigurer$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.logging.LoggingConverterRegistrar",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.logging.impl.$Log4jLoggingSystem$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.logging.impl.$LogbackLoggingSystem$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.retry.annotation.$DefaultRetryPredicate$Introspection",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.retry.annotation.$RetryPredicate$Introspection",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.retry.intercept.$DefaultRetryInterceptor$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.retry.intercept.$RecoveryInterceptor$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.runtime.$ApplicationConfiguration$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.runtime.$ApplicationConfiguration$InstanceConfiguration$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.runtime.beans.$MapperIntroduction$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.runtime.beans.$MapperMethodProcessor$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.runtime.context.$CompositeMessageSource$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.runtime.context.env.$ConfigurationIntroductionAdvice$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.runtime.context.scope.$ThreadLocalCustomScope$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.runtime.context.scope.refresh.$RefreshInterceptor$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.runtime.context.scope.refresh.$RefreshScope$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.runtime.context.scope.refresh.$RefreshScopeCondition$Introspection",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.runtime.converters.time.TimeConverterRegistrar",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.runtime.http.codec.$MediaTypeCodecRegistryFactory$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.runtime.http.codec.$MediaTypeCodecRegistryFactory$MediaTypeCodecRegistry0$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.runtime.http.codec.$TextPlainCodec$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.runtime.http.scope.$RequestCustomScope$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.runtime.server.watch.event.$FileWatchRestartListener$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.scheduling.$DefaultTaskExceptionHandler$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.scheduling.$LoomSupport$LoomCondition$Introspection",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.scheduling.$ScheduledExecutorTaskScheduler$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.scheduling.async.$AsyncInterceptor$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.scheduling.executor.$DefaultExecutorSelector$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.scheduling.executor.$DefaultThreadFactory$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.scheduling.executor.$DefaultThreadFactory$ThreadFactory0$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.scheduling.executor.$ExecutorFactory$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.scheduling.executor.$ExecutorFactory$EventLoopGroupThreadFactory0$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.scheduling.executor.$ExecutorFactory$ExecutorService1$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.scheduling.executor.$IOExecutorServiceConfig$Blocking2$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.scheduling.executor.$IOExecutorServiceConfig$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.scheduling.executor.$IOExecutorServiceConfig$Io0$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.scheduling.executor.$IOExecutorServiceConfig$Virtual1$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.scheduling.executor.$ScheduledExecutorServiceConfig$Configuration0$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.scheduling.executor.$ScheduledExecutorServiceConfig$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.scheduling.executor.$UserExecutorConfiguration$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.scheduling.io.watch.$DefaultWatchThread$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.scheduling.io.watch.$FileWatchCondition$Introspection",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.scheduling.io.watch.$FileWatchConfiguration$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.scheduling.io.watch.$WatchServiceFactory$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.scheduling.io.watch.$WatchServiceFactory$WatchService0$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.scheduling.io.watch.osx.$MacOsWatchServiceFactory$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.scheduling.io.watch.osx.$MacOsWatchServiceFactory$MacWatchService0$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.scheduling.io.watch.osx.$MacOsWatchThread$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.scheduling.processor.$ScheduledMethodProcessor$ApplicationEventListener$scheduleTasks1$Intercepted$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.scheduling.processor.$ScheduledMethodProcessor$Definition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.netty.bootstrap.ServerBootstrap$1"
},
{
  "name":"io.netty.bootstrap.ServerBootstrap$ServerBootstrapAcceptor",
  "methods":[{"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }]
},
{
  "name":"io.netty.buffer.AbstractByteBufAllocator",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.netty.buffer.AbstractReferenceCountedByteBuf",
  "fields":[{"name":"refCnt"}]
},
{
  "name":"io.netty.channel.AbstractChannelHandlerContext",
  "fields":[{"name":"handlerState"}]
},
{
  "name":"io.netty.channel.ChannelInboundHandlerAdapter",
  "methods":[{"name":"channelActive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, {"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelRegistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelUnregistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelWritabilityChanged","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"userEventTriggered","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }]
},
{
  "name":"io.netty.channel.ChannelInitializer",
  "methods":[{"name":"channelRegistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }]
},
{
  "name":"io.netty.channel.ChannelOutboundBuffer",
  "fields":[{"name":"totalPendingSize"}, {"name":"unwritable"}]
},
{
  "name":"io.netty.channel.DefaultChannelConfig",
  "fields":[{"name":"autoRead"}, {"name":"writeBufferWaterMark"}]
},
{
  "name":"io.netty.channel.DefaultChannelPipeline",
  "fields":[{"name":"estimatorHandle"}]
},
{
  "name":"io.netty.channel.DefaultChannelPipeline$HeadContext",
  "methods":[{"name":"bind","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","io.netty.channel.ChannelPromise"] }, {"name":"channelActive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, {"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelRegistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelUnregistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelWritabilityChanged","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"close","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, {"name":"connect","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","java.net.SocketAddress","io.netty.channel.ChannelPromise"] }, {"name":"deregister","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, {"name":"disconnect","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }, {"name":"flush","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"read","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"userEventTriggered","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, {"name":"write","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object","io.netty.channel.ChannelPromise"] }]
},
{
  "name":"io.netty.channel.DefaultChannelPipeline$TailContext",
  "methods":[{"name":"channelActive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, {"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelRegistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelUnregistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelWritabilityChanged","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }, {"name":"userEventTriggered","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }]
},
{
  "name":"io.netty.channel.DefaultFileRegion"
},
{
  "name":"io.netty.channel.epoll.NativeDatagramPacketArray$NativeDatagramPacket"
},
{
  "name":"io.netty.channel.kqueue.KQueueEventLoop",
  "fields":[{"name":"wakenUp"}]
},
{
  "name":"io.netty.channel.kqueue.KQueueServerSocketChannel",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.netty.channel.kqueue.Native"
},
{
  "name":"io.netty.channel.unix.DatagramSocketAddress"
},
{
  "name":"io.netty.channel.unix.DomainDatagramSocketAddress"
},
{
  "name":"io.netty.channel.unix.FileDescriptor",
  "fields":[{"name":"state"}]
},
{
  "name":"io.netty.channel.unix.PeerCredentials"
},
{
  "name":"io.netty.incubator.channel.uring.IOUringServerSocketChannel",
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true,
  "allPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.netty.internal.tcnative.CertificateCallback"
},
{
  "name":"io.netty.internal.tcnative.CertificateCallbackTask"
},
{
  "name":"io.netty.internal.tcnative.SSLContext"
},
{
  "name":"io.netty.internal.tcnative.SSLPrivateKeyMethodDecryptTask"
},
{
  "name":"io.netty.internal.tcnative.SSLPrivateKeyMethodSignTask"
},
{
  "name":"io.netty.internal.tcnative.SSLPrivateKeyMethodTask"
},
{
  "name":"io.netty.internal.tcnative.SSLTask"
},
{
  "name":"io.netty.util.AbstractReferenceCounted",
  "fields":[{"name":"refCnt"}]
},
{
  "name":"io.netty.util.DefaultAttributeMap",
  "fields":[{"name":"attributes"}]
},
{
  "name":"io.netty.util.concurrent.DefaultPromise",
  "fields":[{"name":"result"}]
},
{
  "name":"io.netty.util.concurrent.SingleThreadEventExecutor",
  "fields":[{"name":"state"}, {"name":"threadProperties"}]
},
{
  "name":"io.netty.util.internal.NativeLibraryUtil",
  "methods":[{"name":"loadLibrary","parameterTypes":["java.lang.String","boolean"] }]
},
{
  "name":"io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueColdProducerFields",
  "fields":[{"name":"producerLimit"}]
},
{
  "name":"io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueConsumerFields",
  "fields":[{"name":"consumerIndex"}]
},
{
  "name":"io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueProducerFields",
  "fields":[{"name":"producerIndex"}]
},
{
  "name":"java.io.Console",
  "methods":[{"name":"isTerminal","parameterTypes":[] }]
},
{
  "name":"java.io.FileDescriptor"
},
{
  "name":"java.io.FilePermission"
},
{
  "name":"java.io.IOException"
},
{
  "name":"java.lang.Boolean",
  "fields":[{"name":"TYPE"}]
},
{
  "name":"java.lang.Byte",
  "fields":[{"name":"TYPE"}]
},
{
  "name":"java.lang.Character",
  "fields":[{"name":"TYPE"}]
},
{
  "name":"java.lang.ClassLoader",
  "fields":[{"name":"classLoaderValueMap"}]
},
{
  "name":"java.lang.ClassValue"
},
{
  "name":"java.lang.Deprecated",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.Double",
  "fields":[{"name":"TYPE"}]
},
{
  "name":"java.lang.Enum",
  "methods":[{"name":"name","parameterTypes":[] }]
},
{
  "name":"java.lang.Exception"
},
{
  "name":"java.lang.Float",
  "fields":[{"name":"TYPE"}]
},
{
  "name":"java.lang.IllegalArgumentException"
},
{
  "name":"java.lang.Integer",
  "fields":[{"name":"TYPE"}]
},
{
  "name":"java.lang.Long",
  "fields":[{"name":"TYPE"}]
},
{
  "name":"java.lang.NullPointerException"
},
{
  "name":"java.lang.Object",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"equals","parameterTypes":["java.lang.Object"] }, {"name":"hashCode","parameterTypes":[] }, {"name":"toString","parameterTypes":[] }]
},
{
  "name":"java.lang.OutOfMemoryError"
},
{
  "name":"java.lang.RuntimeException"
},
{
  "name":"java.lang.RuntimePermission"
},
{
  "name":"java.lang.Short",
  "fields":[{"name":"TYPE"}]
},
{
  "name":"java.lang.StackTraceElement",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.String",
  "fields":[{"name":"TYPE"}]
},
{
  "name":"java.lang.System",
  "methods":[{"name":"console","parameterTypes":[] }]
},
{
  "name":"java.lang.Thread",
  "fields":[{"name":"threadLocalRandomProbe"}],
  "methods":[{"name":"ofVirtual","parameterTypes":[] }]
},
{
  "name":"java.lang.Thread$Builder",
  "methods":[{"name":"unstarted","parameterTypes":["java.lang.Runnable"] }]
},
{
  "name":"java.lang.Throwable",
  "methods":[{"name":"addSuppressed","parameterTypes":["java.lang.Throwable"] }]
},
{
  "name":"java.lang.Void",
  "fields":[{"name":"TYPE"}]
},
{
  "name":"java.lang.invoke.MethodHandle",
  "methods":[{"name":"bindTo","parameterTypes":["java.lang.Object"] }, {"name":"invokeWithArguments","parameterTypes":["java.lang.Object[]"] }]
},
{
  "name":"java.lang.invoke.MethodHandles",
  "methods":[{"name":"lookup","parameterTypes":[] }, {"name":"privateLookupIn","parameterTypes":["java.lang.Class","java.lang.invoke.MethodHandles$Lookup"] }]
},
{
  "name":"java.lang.invoke.MethodHandles$Lookup",
  "methods":[{"name":"findSpecial","parameterTypes":["java.lang.Class","java.lang.String","java.lang.invoke.MethodType","java.lang.Class"] }, {"name":"in","parameterTypes":["java.lang.Class"] }, {"name":"unreflectSpecial","parameterTypes":["java.lang.reflect.Method","java.lang.Class"] }]
},
{
  "name":"java.lang.invoke.MethodType",
  "methods":[{"name":"methodType","parameterTypes":["java.lang.Class","java.lang.Class[]"] }]
},
{
  "name":"java.lang.management.BufferPoolMXBean",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.management.ClassLoadingMXBean",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.management.CompilationMXBean",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.management.LockInfo",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.management.ManagementFactory",
  "methods":[{"name":"getRuntimeMXBean","parameterTypes":[] }]
},
{
  "name":"java.lang.management.ManagementPermission",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String"] }]
},
{
  "name":"java.lang.management.MemoryMXBean",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.management.MemoryManagerMXBean",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.management.MemoryPoolMXBean",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.management.MemoryUsage",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.management.MonitorInfo",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.management.PlatformLoggingMXBean",
  "queryAllPublicMethods":true,
  "methods":[{"name":"getLoggerLevel","parameterTypes":["java.lang.String"] }, {"name":"getLoggerNames","parameterTypes":[] }, {"name":"getParentLoggerName","parameterTypes":["java.lang.String"] }, {"name":"setLoggerLevel","parameterTypes":["java.lang.String","java.lang.String"] }]
},
{
  "name":"java.lang.management.RuntimeMXBean",
  "queryAllPublicMethods":true,
  "methods":[{"name":"getInputArguments","parameterTypes":[] }]
},
{
  "name":"java.lang.management.ThreadInfo",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.reflect.Method",
  "methods":[{"name":"isDefault","parameterTypes":[] }, {"name":"isVarArgs","parameterTypes":[] }]
},
{
  "name":"java.math.BigDecimal"
},
{
  "name":"java.math.BigInteger"
},
{
  "name":"java.net.InetSocketAddress"
},
{
  "name":"java.net.NetPermission"
},
{
  "name":"java.net.PortUnreachableException"
},
{
  "name":"java.net.SocketPermission"
},
{
  "name":"java.net.URLPermission",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String","java.lang.String"] }]
},
{
  "name":"java.nio.Bits",
  "methods":[{"name":"unaligned","parameterTypes":[] }]
},
{
  "name":"java.nio.Buffer",
  "fields":[{"name":"address"}]
},
{
  "name":"java.nio.ByteBuffer",
  "methods":[{"name":"alignedSlice","parameterTypes":["int"] }]
},
{
  "name":"java.nio.DirectByteBuffer",
  "methods":[{"name":"<init>","parameterTypes":["long","long"] }]
},
{
  "name":"java.nio.channels.ClosedChannelException"
},
{
  "name":"java.nio.channels.FileChannel"
},
{
  "name":"java.nio.file.Path"
},
{
  "name":"java.nio.file.Paths",
  "methods":[{"name":"get","parameterTypes":["java.lang.String","java.lang.String[]"] }]
},
{
  "name":"java.security.AlgorithmParametersSpi"
},
{
  "name":"java.security.AllPermission"
},
{
  "name":"java.security.MessageDigestSpi"
},
{
  "name":"java.security.SecureRandomParameters"
},
{
  "name":"java.security.SecurityPermission"
},
{
  "name":"java.security.cert.PKIXRevocationChecker"
},
{
  "name":"java.security.interfaces.DSAPrivateKey"
},
{
  "name":"java.security.interfaces.DSAPublicKey"
},
{
  "name":"java.security.interfaces.RSAPrivateKey"
},
{
  "name":"java.security.interfaces.RSAPublicKey"
},
{
  "name":"java.security.spec.DSAParameterSpec"
},
{
  "name":"java.sql.Connection"
},
{
  "name":"java.sql.Driver"
},
{
  "name":"java.sql.DriverManager",
  "methods":[{"name":"getConnection","parameterTypes":["java.lang.String"] }, {"name":"getDriver","parameterTypes":["java.lang.String"] }]
},
{
  "name":"java.sql.Time",
  "methods":[{"name":"<init>","parameterTypes":["long"] }]
},
{
  "name":"java.sql.Timestamp",
  "methods":[{"name":"valueOf","parameterTypes":["java.lang.String"] }]
},
{
  "name":"java.time.Duration",
  "methods":[{"name":"parse","parameterTypes":["java.lang.CharSequence"] }]
},
{
  "name":"java.time.Instant",
  "methods":[{"name":"parse","parameterTypes":["java.lang.CharSequence"] }]
},
{
  "name":"java.time.LocalDate",
  "methods":[{"name":"parse","parameterTypes":["java.lang.CharSequence"] }]
},
{
  "name":"java.time.LocalDateTime",
  "methods":[{"name":"parse","parameterTypes":["java.lang.CharSequence"] }]
},
{
  "name":"java.time.LocalTime",
  "methods":[{"name":"parse","parameterTypes":["java.lang.CharSequence"] }]
},
{
  "name":"java.time.MonthDay",
  "methods":[{"name":"parse","parameterTypes":["java.lang.CharSequence"] }]
},
{
  "name":"java.time.OffsetDateTime",
  "methods":[{"name":"parse","parameterTypes":["java.lang.CharSequence"] }]
},
{
  "name":"java.time.OffsetTime",
  "methods":[{"name":"parse","parameterTypes":["java.lang.CharSequence"] }]
},
{
  "name":"java.time.Period",
  "methods":[{"name":"parse","parameterTypes":["java.lang.CharSequence"] }]
},
{
  "name":"java.time.Year",
  "methods":[{"name":"parse","parameterTypes":["java.lang.CharSequence"] }]
},
{
  "name":"java.time.YearMonth",
  "methods":[{"name":"parse","parameterTypes":["java.lang.CharSequence"] }]
},
{
  "name":"java.time.ZoneId",
  "methods":[{"name":"of","parameterTypes":["java.lang.String"] }]
},
{
  "name":"java.time.ZoneOffset",
  "methods":[{"name":"of","parameterTypes":["java.lang.String"] }]
},
{
  "name":"java.time.ZonedDateTime",
  "methods":[{"name":"parse","parameterTypes":["java.lang.CharSequence"] }]
},
{
  "name":"java.util.Arrays.ArrayList",
  "methods":[{"name":"toString","parameterTypes":[] }]
},
{
  "name":"java.util.Base64$Decoder",
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true,
  "allPublicConstructors":true
},
{
  "name":"java.util.Date"
},
{
  "name":"java.util.LinkedHashMap",
  "methods":[{"name":"toString","parameterTypes":[] }]
},
{
  "name":"java.util.Locale",
  "allDeclaredClasses":true,
  "methods":[{"name":"getDefault","parameterTypes":["java.util.Locale$Category"] }, {"name":"setDefault","parameterTypes":["java.util.Locale$Category","java.util.Locale"] }]
},
{
  "name":"java.util.Locale$Category"
},
{
  "name":"java.util.PropertyPermission",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String","java.lang.String"] }]
},
{
  "name":"java.util.ResourceBundle",
  "methods":[{"name":"getBaseBundleName","parameterTypes":[] }]
},
{
  "name":"java.util.concurrent.ForkJoinTask",
  "fields":[{"name":"aux"}, {"name":"status"}]
},
{
  "name":"java.util.concurrent.ScheduledThreadPoolExecutor",
  "methods":[{"name":"setRemoveOnCancelPolicy","parameterTypes":["boolean"] }]
},
{
  "name":"java.util.concurrent.atomic.AtomicBoolean",
  "fields":[{"name":"value"}]
},
{
  "name":"java.util.concurrent.atomic.AtomicReference",
  "fields":[{"name":"value"}]
},
{
  "name":"java.util.concurrent.atomic.Striped64",
  "fields":[{"name":"base"}, {"name":"cellsBusy"}]
},
{
  "name":"java.util.logging.LogManager",
  "methods":[{"name":"getLoggingMXBean","parameterTypes":[] }]
},
{
  "name":"java.util.logging.LoggingMXBean",
  "queryAllPublicMethods":true
},
{
  "name":"javax.management.MBeanOperationInfo",
  "queryAllPublicMethods":true,
  "methods":[{"name":"getSignature","parameterTypes":[] }]
},
{
  "name":"javax.management.MBeanServerBuilder",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"javax.management.ObjectName"
},
{
  "name":"javax.management.StandardEmitterMBean",
  "methods":[{"name":"cacheMBeanInfo","parameterTypes":["javax.management.MBeanInfo"] }, {"name":"getCachedMBeanInfo","parameterTypes":[] }, {"name":"getMBeanInfo","parameterTypes":[] }]
},
{
  "name":"javax.management.openmbean.CompositeData"
},
{
  "name":"javax.management.openmbean.OpenMBeanOperationInfoSupport"
},
{
  "name":"javax.management.openmbean.TabularData"
},
{
  "name":"javax.management.remote.rmi.RMIServer",
  "queryAllPublicMethods":true,
  "methods":[{"name":"getVersion","parameterTypes":[] }, {"name":"newClient","parameterTypes":["java.lang.Object"] }]
},
{
  "name":"javax.management.remote.rmi.RMIServerImpl_Skel"
},
{
  "name":"javax.management.remote.rmi.RMIServerImpl_Stub",
  "methods":[{"name":"<init>","parameterTypes":["java.rmi.server.RemoteRef"] }]
},
{
  "name":"javax.security.auth.x500.X500Principal",
  "fields":[{"name":"thisX500Name"}],
  "methods":[{"name":"<init>","parameterTypes":["sun.security.x509.X500Name"] }]
},
{
  "name":"javax.smartcardio.CardPermission"
},
{
  "name":"jdk.internal.jrtfs.JrtFileSystemProvider"
},
{
  "name":"jdk.internal.misc.Unsafe",
  "methods":[{"name":"getUnsafe","parameterTypes":[] }]
},
{
  "name":"jdk.management.jfr.ConfigurationInfo",
  "queryAllPublicMethods":true
},
{
  "name":"jdk.management.jfr.EventTypeInfo",
  "queryAllPublicMethods":true
},
{
  "name":"jdk.management.jfr.FlightRecorderMXBean",
  "queryAllPublicMethods":true
},
{
  "name":"jdk.management.jfr.FlightRecorderMXBeanImpl",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"cacheMBeanInfo","parameterTypes":["javax.management.MBeanInfo"] }, {"name":"getCachedMBeanInfo","parameterTypes":[] }, {"name":"getMBeanInfo","parameterTypes":[] }, {"name":"getNotificationInfo","parameterTypes":[] }]
},
{
  "name":"jdk.management.jfr.RecordingInfo",
  "queryAllPublicMethods":true
},
{
  "name":"jdk.management.jfr.SettingDescriptorInfo",
  "queryAllPublicMethods":true
},
{
  "name":"jdk.vm.ci.meta.ConstantPool",
  "methods":[{"name":"lookupBootstrapMethodInvocation","parameterTypes":["int","int"] }, {"name":"lookupConstant","parameterTypes":["int","boolean"] }, {"name":"lookupMethod","parameterTypes":["int","int","jdk.vm.ci.meta.ResolvedJavaMethod"] }]
},
{
  "name":"kotlin.SafePublicationLazyImpl",
  "fields":[{"name":"_value"}]
},
{
  "name":"kotlin.collections.AbstractCollection",
  "methods":[{"name":"toString","parameterTypes":[] }]
},
{
  "name":"kotlin.collections.AbstractMap",
  "methods":[{"name":"toString","parameterTypes":[] }]
},
{
  "name":"kotlin.collections.AbstractMutableList",
  "methods":[{"name":"toString","parameterTypes":[] }]
},
{
  "name":"kotlin.jvm.internal.DefaultConstructorMarker"
},
{
  "name":"kotlin.reflect.jvm.internal.ReflectionFactoryImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"kotlinx.coroutines.CancellableContinuationImpl",
  "fields":[{"name":"_decisionAndIndex$volatile"}, {"name":"_parentHandle$volatile"}, {"name":"_state$volatile"}]
},
{
  "name":"kotlinx.coroutines.CancelledContinuation",
  "fields":[{"name":"_resumed$volatile"}]
},
{
  "name":"kotlinx.coroutines.CompletedExceptionally",
  "fields":[{"name":"_handled$volatile"}]
},
{
  "name":"kotlinx.coroutines.EventLoopImplBase",
  "fields":[{"name":"_delayed$volatile"}, {"name":"_isCompleted$volatile"}, {"name":"_queue$volatile"}]
},
{
  "name":"kotlinx.coroutines.JobSupport",
  "fields":[{"name":"_parentHandle$volatile"}, {"name":"_state$volatile"}]
},
{
  "name":"kotlinx.coroutines.JobSupport$Finishing",
  "fields":[{"name":"_exceptionsHolder$volatile"}, {"name":"_isCompleting$volatile"}, {"name":"_rootCause$volatile"}]
},
{
  "name":"kotlinx.coroutines.debug.internal.ByteBuddyDynamicAttach"
},
{
  "name":"kotlinx.coroutines.debug.internal.ConcurrentWeakMap",
  "fields":[{"name":"_size$volatile"}, {"name":"core$volatile"}]
},
{
  "name":"kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core",
  "fields":[{"name":"load$volatile"}]
},
{
  "name":"kotlinx.coroutines.debug.internal.DebugProbesImpl$DebugProbesImpl$VolatileWrapper$atomicfu$private",
  "fields":[{"name":"installations$volatile"}, {"name":"sequenceNumber$volatile"}]
},
{
  "name":"kotlinx.coroutines.flow.StateFlowImpl",
  "fields":[{"name":"_state$volatile"}]
},
{
  "name":"kotlinx.coroutines.internal.DispatchedContinuation",
  "fields":[{"name":"_reusableCancellableContinuation$volatile"}]
},
{
  "name":"kotlinx.coroutines.internal.LimitedDispatcher",
  "fields":[{"name":"runningWorkers$volatile"}]
},
{
  "name":"kotlinx.coroutines.internal.LockFreeLinkedListNode",
  "fields":[{"name":"_next$volatile"}, {"name":"_prev$volatile"}, {"name":"_removedRef$volatile"}]
},
{
  "name":"kotlinx.coroutines.internal.LockFreeTaskQueue",
  "fields":[{"name":"_cur$volatile"}]
},
{
  "name":"kotlinx.coroutines.internal.LockFreeTaskQueueCore",
  "fields":[{"name":"_next$volatile"}, {"name":"_state$volatile"}]
},
{
  "name":"kotlinx.coroutines.internal.ThreadSafeHeap",
  "fields":[{"name":"_size$volatile"}]
},
{
  "name":"kotlinx.coroutines.scheduling.CoroutineScheduler",
  "fields":[{"name":"_isTerminated$volatile"}, {"name":"controlState$volatile"}, {"name":"parkedWorkersStack$volatile"}]
},
{
  "name":"kotlinx.coroutines.scheduling.CoroutineScheduler$Worker",
  "fields":[{"name":"workerCtl$volatile"}]
},
{
  "name":"kotlinx.coroutines.scheduling.WorkQueue",
  "fields":[{"name":"blockingTasksInBuffer$volatile"}, {"name":"consumerIndex$volatile"}, {"name":"lastScheduledTask$volatile"}, {"name":"producerIndex$volatile"}]
},
{
  "name":"kotlinx.coroutines.stream.StreamFlow",
  "fields":[{"name":"consumed$volatile"}]
},
{
  "name":"libcore.io.Memory"
},
{
  "name":"org.bouncycastle.jcajce.provider.asymmetric.COMPOSITE$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.asymmetric.CompositeSignatures$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.asymmetric.DH$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.asymmetric.DSA$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.asymmetric.DSTU4145$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.asymmetric.Dilithium$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.asymmetric.EC$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.asymmetric.ECGOST$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.asymmetric.EXTERNAL$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.asymmetric.EdEC$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.asymmetric.ElGamal$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.asymmetric.Falcon$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.asymmetric.GM$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.asymmetric.GOST$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.asymmetric.IES$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.asymmetric.LMS$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.asymmetric.NTRU$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.asymmetric.RSA$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.asymmetric.SPHINCSPlus$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.asymmetric.X509$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.digest.Blake2b$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.digest.Blake2s$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.digest.Blake3$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.digest.DSTU7564$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.digest.GOST3411$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.digest.Haraka$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.digest.Keccak$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.digest.MD2$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.digest.MD4$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.digest.MD5$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.digest.RIPEMD128$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.digest.RIPEMD160$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.digest.RIPEMD256$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.digest.RIPEMD320$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.digest.SHA1$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.digest.SHA224$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.digest.SHA256$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.digest.SHA3$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.digest.SHA384$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.digest.SHA512$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.digest.SM3$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.digest.Skein$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.digest.Tiger$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.digest.Whirlpool$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.drbg.DRBG$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.keystore.BC$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.keystore.BCFKS$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.keystore.PKCS12$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.AES$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.ARC4$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.ARIA$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.Blowfish$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.CAST5$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.CAST6$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.Camellia$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.ChaCha$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.DES$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.DESede$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.DSTU7624$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.GOST28147$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.GOST3412_2015$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.Grain128$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.Grainv1$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.HC128$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.HC256$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.IDEA$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.Noekeon$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.OpenSSLPBKDF$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.PBEPBKDF1$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.PBEPBKDF2$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.PBEPKCS12$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.Poly1305$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.RC2$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.RC5$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.RC6$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.Rijndael$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.SCRYPT$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.SEED$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.SM4$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.Salsa20$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.Serpent$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.Shacal2$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.SipHash$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.SipHash128$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.Skipjack$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.TEA$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.TLSKDF$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.Threefish$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.Twofish$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.VMPC$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.VMPCKSA3$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.XSalsa20$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.XTEA$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.Zuc$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.graalvm.home.impl.DefaultHomeFinder"
},
{
  "name":"org.graalvm.polyglot.Engine",
  "methods":[{"name":"getImpl","parameterTypes":[] }]
},
{
  "name":"org.graalvm.polyglot.io.IOHelper",
  "fields":[{"name":"ACCESS"}]
},
{
  "name":"org.graalvm.polyglot.management.Management",
  "fields":[{"name":"ACCESS"}]
},
{
  "name":"org.graalvm.shadowed.com.ibm.icu.impl.ICUCurrencyDisplayInfoProvider",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.graalvm.shadowed.com.ibm.icu.impl.ICUCurrencyMetaInfo",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.graalvm.shadowed.com.ibm.icu.number.LocalizedNumberFormatter",
  "fields":[{"name":"callCountInternal"}]
},
{
  "name":"org.graalvm.shadowed.org.jcodings.provider.JCodingsProviderImpl"
},
{
  "name":"org.graalvm.wasm.WasmLanguageProvider"
},
{
  "name":"org.sqlite.JDBC",
  "allPublicConstructors": true
},
{
  "name":"oshi.jna.ByRef$CloseableIntByReference",
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true,
  "allPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"oshi.jna.ByRef$CloseableLongByReference",
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true,
  "allPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"oshi.jna.ByRef$CloseableNativeLongByReference",
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true,
  "allPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"oshi.jna.ByRef$CloseableSizeTByReference",
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true,
  "allPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"picocli.CommandLine$AutoHelpMixin",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"sun.management.ClassLoadingImpl",
  "queryAllPublicConstructors":true
},
{
  "name":"sun.management.CompilationImpl",
  "queryAllPublicConstructors":true
},
{
  "name":"sun.management.ManagementFactoryHelper$1",
  "queryAllPublicConstructors":true
},
{
  "name":"sun.management.ManagementFactoryHelper$PlatformLoggingImpl",
  "queryAllPublicConstructors":true
},
{
  "name":"sun.management.MemoryImpl",
  "queryAllPublicConstructors":true
},
{
  "name":"sun.management.MemoryManagerImpl",
  "queryAllPublicConstructors":true
},
{
  "name":"sun.management.MemoryPoolImpl",
  "queryAllPublicConstructors":true
},
{
  "name":"sun.management.RuntimeImpl",
  "queryAllPublicConstructors":true
},
{
  "name":"sun.misc.Unsafe",
  "allDeclaredFields":true,
  "fields":[{"name":"theUnsafe"}],
  "methods":[{"name":"arrayBaseOffset","parameterTypes":["java.lang.Class"] }, {"name":"arrayIndexScale","parameterTypes":["java.lang.Class"] }, {"name":"copyMemory","parameterTypes":["long","long","long"] }, {"name":"copyMemory","parameterTypes":["java.lang.Object","long","java.lang.Object","long","long"] }, {"name":"getAndAddLong","parameterTypes":["java.lang.Object","long","long"] }, {"name":"getAndSetObject","parameterTypes":["java.lang.Object","long","java.lang.Object"] }, {"name":"getBoolean","parameterTypes":["java.lang.Object","long"] }, {"name":"getByte","parameterTypes":["long"] }, {"name":"getByte","parameterTypes":["java.lang.Object","long"] }, {"name":"getDouble","parameterTypes":["java.lang.Object","long"] }, {"name":"getFloat","parameterTypes":["java.lang.Object","long"] }, {"name":"getInt","parameterTypes":["long"] }, {"name":"getInt","parameterTypes":["java.lang.Object","long"] }, {"name":"getLong","parameterTypes":["long"] }, {"name":"getLong","parameterTypes":["java.lang.Object","long"] }, {"name":"getObject","parameterTypes":["java.lang.Object","long"] }, {"name":"invokeCleaner","parameterTypes":["java.nio.ByteBuffer"] }, {"name":"objectFieldOffset","parameterTypes":["java.lang.reflect.Field"] }, {"name":"putBoolean","parameterTypes":["java.lang.Object","long","boolean"] }, {"name":"putByte","parameterTypes":["long","byte"] }, {"name":"putByte","parameterTypes":["java.lang.Object","long","byte"] }, {"name":"putDouble","parameterTypes":["java.lang.Object","long","double"] }, {"name":"putFloat","parameterTypes":["java.lang.Object","long","float"] }, {"name":"putInt","parameterTypes":["long","int"] }, {"name":"putInt","parameterTypes":["java.lang.Object","long","int"] }, {"name":"putLong","parameterTypes":["long","long"] }, {"name":"putLong","parameterTypes":["java.lang.Object","long","long"] }, {"name":"putObject","parameterTypes":["java.lang.Object","long","java.lang.Object"] }, {"name":"storeFence","parameterTypes":[] }]
},
{
  "name":"sun.misc.VM"
},
{
  "name":"sun.rmi.transport.DGCImpl_Skel",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.rmi.transport.DGCImpl_Stub",
  "methods":[{"name":"<init>","parameterTypes":["java.rmi.server.RemoteRef"] }]
},
{
  "name":"sun.security.provider.DSA$SHA224withDSA",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.DSA$SHA256withDSA",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.DSAKeyFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.DSAParameters",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.NativePRNG",
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"<init>","parameterTypes":["java.security.SecureRandomParameters"] }]
},
{
  "name":"sun.security.provider.NativePRNG$NonBlocking",
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"<init>","parameterTypes":["java.security.SecureRandomParameters"] }]
},
{
  "name":"sun.security.provider.SHA",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.SHA2$SHA224",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.SHA2$SHA256",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.SHA5$SHA384",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.SHA5$SHA512",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.X509Factory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.rsa.PSSParameters",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.rsa.RSAKeyFactory$Legacy",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.rsa.RSAPSSSignature",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.rsa.RSASignature$SHA224withRSA",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.rsa.RSASignature$SHA256withRSA",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.ssl.SSLContextImpl$TLSContext",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.util.ObjectIdentifier"
},
{
  "name":"sun.security.x509.AuthorityInfoAccessExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.AuthorityKeyIdentifierExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.BasicConstraintsExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.CRLDistributionPointsExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.CertificateExtensions"
},
{
  "name":"sun.security.x509.CertificatePoliciesExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.ExtendedKeyUsageExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.KeyUsageExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.SubjectKeyIdentifierExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"tools.elide.vfs.Bundle",
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true,
  "allPublicConstructors":true
},
{
  "name":"tools.elide.vfs.Bundle$Builder",
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true,
  "allPublicConstructors":true
},
{
  "name":"tools.elide.vfs.BundleHeader",
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true,
  "allPublicConstructors":true
},
{
  "name":"tools.elide.vfs.BundleHeader$Builder",
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true,
  "allPublicConstructors":true
},
{
  "name":"tools.elide.vfs.BundleInfo",
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true,
  "allPublicConstructors":true
},
{
  "name":"tools.elide.vfs.BundleInfo$Builder",
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true,
  "allPublicConstructors":true
},
{
  "name":"tools.elide.vfs.Directory",
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true,
  "allPublicConstructors":true
},
{
  "name":"tools.elide.vfs.Directory$Builder",
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true,
  "allPublicConstructors":true
},
{
  "name":"tools.elide.vfs.File",
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true,
  "allPublicConstructors":true
},
{
  "name":"tools.elide.vfs.File$FileFingerprint",
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true,
  "allPublicConstructors":true
},
{
  "name":"tools.elide.vfs.File$FileFingerprint$Builder",
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true,
  "allPublicConstructors":true
},
{
  "name":"tools.elide.vfs.File$Builder",
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true,
  "allPublicConstructors":true
},
{
  "name":"tools.elide.vfs.Filesystem",
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true,
  "allPublicConstructors":true
},
{
  "name":"tools.elide.vfs.Filesystem$Builder",
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true,
  "allPublicConstructors":true
},
{
  "name":"tools.elide.vfs.Tree",
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true,
  "allPublicConstructors":true
},
{
  "name":"tools.elide.vfs.Tree$Builder",
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true,
  "allPublicConstructors":true
},
{
  "name":"tools.elide.vfs.TreeEntry",
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true,
  "allPublicConstructors":true
},
{
  "name":"tools.elide.vfs.TreeEntry$Builder",
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true,
  "allPublicConstructors":true
}
]
