<!--
  ~ Copyright (c) 2024 Elide Technologies, Inc.
  ~
  ~ Licensed under the MIT license (the "License"); you may not use this file except in compliance
  ~ with the License. You may obtain a copy of the License at
  ~
  ~   https://opensource.org/license/mit/
  ~
  ~ Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
  ~ an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
  ~ License for the specific language governing permissions and limitations under the License.
  -->
<configuration debug="false">
  <statusListener class="ch.qos.logback.core.status.NopStatusListener" />
  <variable name="APPENDER" value="${log.file.root:-ASYNC_LAZY}" />
  <variable name="ROOT_LOGLEVEL" value="${elide.logging.root.level:-warn}" />
  <serializeModel file="src/main/resources/logback.scmo" />
  <contextName>elide</contextName>

  <contextListener class="ch.qos.logback.classic.jul.LevelChangePropagator" />
  <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
    <target>System.out</target>
    <encoder>
      <pattern>%magenta(elide) %white(%-12d{HH:mm:ss.SSS}) %highlight(%-5level) %msg%n</pattern>
    </encoder>
  </appender>

  <appender name="RICH_CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
    <withJansi>true</withJansi>
    <target>System.err</target>
    <immediateFlush>false</immediateFlush>
    <encoder>
      <pattern>%magenta(elide) %white(%-12d{HH:mm:ss.SSS}) %highlight(%-5level) %msg%n</pattern>
    </encoder>
  </appender>

  <appender name="ASYNC_LAZY" class="ch.qos.logback.classic.sift.SiftingAppender">
    <discriminator>
      <key>codesource</key>
      <defaultValue>user</defaultValue>
    </discriminator>
    <sift>
      <appender name="RICH_CONSOLE_ASYNC" class="ch.qos.logback.classic.AsyncAppender">
        <discardingThreshold>20</discardingThreshold>
        <appender-ref ref="CONSOLE" />
        <queueSize>256</queueSize>
        <includeCallerData>false</includeCallerData>
        <neverBlock>true</neverBlock>
      </appender>
    </sift>
  </appender>

  <logger name="io.micronaut.context.env" level="off" />
  <logger name="io.micronaut.http.client.netty.ssl.NettyClientSslBuilder" level="off" />

  <logger name="gvm:js.console" level="trace" />

  <logger name="org.jline" level="error" />
  <logger name="info.picocli" level="error" />

  <logger name="elide:flight-recorder" level="warn" />
  <logger name="elide:engine" level="debug" />
  <logger name="elide:engine:js" level="debug" />
  <logger name="elide:engine:python" level="debug" />
  <logger name="elide:engine:ruby" level="debug" />
  <logger name="elide:engine:jvm" level="debug" />
  <logger name="elide:engine:wasm" level="debug" />

  <logger name="elide.tool.cli.cmd.repl.ToolShellCommand" level="warn" />
  <logger name="elide.runtime.gvm.internals.AbstractVMEngine" level="warn" />
  <logger name="elide.runtime.gvm.internals.context.NativeContextManagerImpl" level="warn" />
  <logger name="elide.runtime.gvm.internals.js.JsRuntime" level="warn" />

  <logger name="elide.tool.cli.cmd.update.SelfUpdateCommand" level="warn" />

  <!-- Server/Tool Logger -->
  <logger name="tool" additivity="false">
    <appender-ref ref="CONSOLE" />
  </logger>
  <logger name="tool:server" additivity="false">
    <appender-ref ref="${APPENDER}" />
  </logger>

  <!-- Root Logger -->
  <root level="${ROOT_LOGLEVEL}">
    <appender-ref ref="CONSOLE" />
  </root>
</configuration>
