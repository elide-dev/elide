<!--
  ~ Copyright (c) 2023-2024 Elide Ventures, LLC.
  ~
  ~ Licensed under the MIT license (the "License"); you may not use this file except in compliance
  ~ with the License. You may obtain a copy of the License at
  ~
  ~   https://opensource.org/license/mit/
  ~
  ~ Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
  ~ an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
  ~ License for the specific language governing permissions and limitations under the License.
  -->

<configuration debug="${elide.logging.debug:-false}">
  <statusListener class="ch.qos.logback.core.status.NopStatusListener" />
  <variable name="APPENDER" value="${elide.logging.appender:-stderr}" />
  <variable name="ROOT_LOGLEVEL" value="${elide.logging.root.level:-warn}" />
  <serializeModel file="src/main/resources/logback.scmo"/>

  <contextName>embedded</contextName>
  <contextListener class="ch.qos.logback.classic.jul.LevelChangePropagator"/>

  <appender name="stdout" class="ch.qos.logback.core.ConsoleAppender">
    <withJansi>true</withJansi>
    <target>elide.embedded.Streams.out</target>
    <encoder>
      <pattern>%magenta(elide) %white(%-12d{HH:mm:ss.SSS}) %highlight(%-5level) %msg%n</pattern>
    </encoder>
  </appender>
  <appender name="stderr" class="ch.qos.logback.core.ConsoleAppender">
    <withJansi>true</withJansi>
    <target>elide.embedded.Streams.err</target>
    <encoder>
      <pattern>%magenta(elide) %white(%-12d{HH:mm:ss.SSS}) %highlight(%-5level) %msg%n</pattern>
    </encoder>
  </appender>

  <!-- Root Logger -->
  <root level="${ROOT_LOGLEVEL:-warn}">
    <appender-ref ref="${APPENDER:-stderr}" />
  </root>
</configuration>
