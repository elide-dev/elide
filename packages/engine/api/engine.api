public abstract interface annotation class elide/annotations/engine/VMFeature : java/lang/annotation/Annotation {
}

public abstract interface annotation class elide/runtime/core/DelicateElideApi : java/lang/annotation/Annotation {
}

public abstract interface class elide/runtime/core/EngineLifecycle {
	public abstract fun on (Lelide/runtime/core/EngineLifecycleEvent;Lkotlin/jvm/functions/Function1;)V
}

public abstract interface class elide/runtime/core/EngineLifecycleEvent {
}

public final class elide/runtime/core/EngineLifecycleEvent$ContextCreated : elide/runtime/core/EngineLifecycleEvent {
	public static final field INSTANCE Lelide/runtime/core/EngineLifecycleEvent$ContextCreated;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class elide/runtime/core/EngineLifecycleEvent$ContextFinalized : elide/runtime/core/EngineLifecycleEvent {
	public static final field INSTANCE Lelide/runtime/core/EngineLifecycleEvent$ContextFinalized;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class elide/runtime/core/EngineLifecycleEvent$ContextInitialized : elide/runtime/core/EngineLifecycleEvent {
	public static final field INSTANCE Lelide/runtime/core/EngineLifecycleEvent$ContextInitialized;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class elide/runtime/core/EngineLifecycleEvent$EngineCreated : elide/runtime/core/EngineLifecycleEvent {
	public static final field INSTANCE Lelide/runtime/core/EngineLifecycleEvent$EngineCreated;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class elide/runtime/core/EngineLifecycleEvent$EngineInitialized : elide/runtime/core/EngineLifecycleEvent {
	public static final field INSTANCE Lelide/runtime/core/EngineLifecycleEvent$EngineInitialized;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract interface class elide/runtime/core/EnginePlugin {
	public abstract fun getKey-wLvarY0 ()Ljava/lang/String;
	public abstract fun install (Lelide/runtime/core/EnginePlugin$InstallationScope;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;
}

public abstract interface class elide/runtime/core/EnginePlugin$InstallationScope {
	public abstract fun getConfiguration ()Lelide/runtime/core/PolyglotEngineConfiguration;
	public abstract fun getLifecycle ()Lelide/runtime/core/EngineLifecycle;
	public abstract fun registerBundle (Ljava/net/URL;)V
	public abstract fun registeredBundles ()Ljava/util/List;
}

public final class elide/runtime/core/EnginePlugin$Key {
	public static final synthetic fun box-impl (Ljava/lang/String;)Lelide/runtime/core/EnginePlugin$Key;
	public static fun constructor-impl (Ljava/lang/String;)Ljava/lang/String;
	public fun equals (Ljava/lang/Object;)Z
	public static fun equals-impl (Ljava/lang/String;Ljava/lang/Object;)Z
	public static final fun equals-impl0 (Ljava/lang/String;Ljava/lang/String;)Z
	public final fun getId ()Ljava/lang/String;
	public fun hashCode ()I
	public static fun hashCode-impl (Ljava/lang/String;)I
	public fun toString ()Ljava/lang/String;
	public static fun toString-impl (Ljava/lang/String;)Ljava/lang/String;
	public final synthetic fun unbox-impl ()Ljava/lang/String;
}

public abstract interface class elide/runtime/core/GuestLanguage {
	public abstract fun getLanguageId ()Ljava/lang/String;
}

public abstract interface class elide/runtime/core/GuestLanguageEvaluator {
	public static final field Companion Lelide/runtime/core/GuestLanguageEvaluator$Companion;
	public fun accepts (Lorg/graalvm/polyglot/Source;)Z
	public abstract fun evaluate (Lorg/graalvm/polyglot/Source;Lelide/runtime/core/PolyglotContext;)Lorg/graalvm/polyglot/Value;
}

public final class elide/runtime/core/GuestLanguageEvaluator$Companion {
	public final fun contextElementFor-SZJLGgY (Lelide/runtime/core/GuestLanguage;)Ljava/lang/String;
	public final fun contextElementFor-SZJLGgY (Ljava/lang/String;)Ljava/lang/String;
}

public abstract interface class elide/runtime/core/GuestLanguageParser {
	public static final field Companion Lelide/runtime/core/GuestLanguageParser$Companion;
	public fun accepts (Lorg/graalvm/polyglot/Source;)Z
	public abstract fun parse (Lorg/graalvm/polyglot/Source;Lelide/runtime/core/PolyglotContext;)Lorg/graalvm/polyglot/Value;
}

public final class elide/runtime/core/GuestLanguageParser$Companion {
	public final fun contextElementFor-SZJLGgY (Lelide/runtime/core/GuestLanguage;)Ljava/lang/String;
	public final fun contextElementFor-SZJLGgY (Ljava/lang/String;)Ljava/lang/String;
}

public final class elide/runtime/core/HostPlatform {
	public static final field Companion Lelide/runtime/core/HostPlatform$Companion;
	public fun <init> (Lelide/runtime/core/HostPlatform$OperatingSystem;Lelide/runtime/core/HostPlatform$Architecture;)V
	public final fun component1 ()Lelide/runtime/core/HostPlatform$OperatingSystem;
	public final fun component2 ()Lelide/runtime/core/HostPlatform$Architecture;
	public final fun copy (Lelide/runtime/core/HostPlatform$OperatingSystem;Lelide/runtime/core/HostPlatform$Architecture;)Lelide/runtime/core/HostPlatform;
	public static synthetic fun copy$default (Lelide/runtime/core/HostPlatform;Lelide/runtime/core/HostPlatform$OperatingSystem;Lelide/runtime/core/HostPlatform$Architecture;ILjava/lang/Object;)Lelide/runtime/core/HostPlatform;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getArch ()Lelide/runtime/core/HostPlatform$Architecture;
	public final fun getOs ()Lelide/runtime/core/HostPlatform$OperatingSystem;
	public fun hashCode ()I
	public final fun platformString ()Ljava/lang/String;
	public fun toString ()Ljava/lang/String;
}

public final class elide/runtime/core/HostPlatform$Architecture : java/lang/Enum {
	public static final field AMD64 Lelide/runtime/core/HostPlatform$Architecture;
	public static final field ARM64 Lelide/runtime/core/HostPlatform$Architecture;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public static fun valueOf (Ljava/lang/String;)Lelide/runtime/core/HostPlatform$Architecture;
	public static fun values ()[Lelide/runtime/core/HostPlatform$Architecture;
}

public final class elide/runtime/core/HostPlatform$Companion {
	public final fun parseArchitecture (Ljava/lang/String;)Lelide/runtime/core/HostPlatform$Architecture;
	public final fun parseOperatingSystem (Ljava/lang/String;)Lelide/runtime/core/HostPlatform$OperatingSystem;
	public final fun parsePlatform (Ljava/lang/String;)Lelide/runtime/core/HostPlatform;
	public final fun resolve ()Lelide/runtime/core/HostPlatform;
}

public final class elide/runtime/core/HostPlatform$OperatingSystem : java/lang/Enum {
	public static final field DARWIN Lelide/runtime/core/HostPlatform$OperatingSystem;
	public static final field LINUX Lelide/runtime/core/HostPlatform$OperatingSystem;
	public static final field WINDOWS Lelide/runtime/core/HostPlatform$OperatingSystem;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public static fun valueOf (Ljava/lang/String;)Lelide/runtime/core/HostPlatform$OperatingSystem;
	public static fun values ()[Lelide/runtime/core/HostPlatform$OperatingSystem;
}

public final class elide/runtime/core/HostPlatformKt {
	public static final fun isUnix (Lelide/runtime/core/HostPlatform$OperatingSystem;)Z
}

public abstract interface class elide/runtime/core/HostRuntime {
	public abstract fun getName ()Ljava/lang/String;
	public abstract fun getVariant ()Ljava/lang/String;
	public abstract fun getVersion ()Lelide/runtime/core/Version;
}

public final class elide/runtime/core/HostRuntimeKt {
	public static final fun on (Lelide/runtime/core/HostRuntime;Lelide/runtime/core/Version$Range;Lkotlin/jvm/functions/Function0;)Ljava/lang/Object;
	public static final fun on (Lelide/runtime/core/HostRuntime;Lelide/runtime/core/Version;Lkotlin/jvm/functions/Function0;)Ljava/lang/Object;
}

public abstract interface class elide/runtime/core/PluginRegistry {
	public abstract fun install (Lelide/runtime/core/EnginePlugin;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;
	public static synthetic fun install$default (Lelide/runtime/core/PluginRegistry;Lelide/runtime/core/EnginePlugin;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Ljava/lang/Object;
	public abstract fun plugin-LqGrbaI (Ljava/lang/String;)Ljava/lang/Object;
}

public final class elide/runtime/core/PluginRegistryKt {
	public static final fun getOrInstall (Lelide/runtime/core/PluginRegistry;Lelide/runtime/core/EnginePlugin;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;
	public static synthetic fun getOrInstall$default (Lelide/runtime/core/PluginRegistry;Lelide/runtime/core/EnginePlugin;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Ljava/lang/Object;
	public static final fun plugin (Lelide/runtime/core/PluginRegistry;Lelide/runtime/core/EnginePlugin;)Ljava/lang/Object;
	public static final fun requirePlugin (Lelide/runtime/core/PluginRegistry;Lelide/runtime/core/EnginePlugin;)Ljava/lang/Object;
	public static final fun requirePlugin-TZlicS8 (Lelide/runtime/core/PluginRegistry;Ljava/lang/String;)Ljava/lang/Object;
}

public abstract interface class elide/runtime/core/PolyglotContext {
	public abstract fun bindings (Lelide/runtime/core/GuestLanguage;)Lorg/graalvm/polyglot/Value;
	public static synthetic fun bindings$default (Lelide/runtime/core/PolyglotContext;Lelide/runtime/core/GuestLanguage;ILjava/lang/Object;)Lorg/graalvm/polyglot/Value;
	public abstract fun enter ()V
	public fun evaluate (Lorg/graalvm/polyglot/Source;)Lorg/graalvm/polyglot/Value;
	public abstract fun evaluate (Lorg/graalvm/polyglot/Source;Lelide/runtime/core/PolyglotContext$EvaluationOptions;)Lorg/graalvm/polyglot/Value;
	public fun evaluate (Lorg/graalvm/polyglot/Source;Z)Lorg/graalvm/polyglot/Value;
	public abstract fun get-HY--Dws (Ljava/lang/String;)Ljava/lang/Object;
	public abstract fun leave ()V
	public abstract fun parse (Lorg/graalvm/polyglot/Source;)Lorg/graalvm/polyglot/Value;
	public abstract fun set-HRLGfaQ (Ljava/lang/String;Ljava/lang/Object;)Z
	public abstract fun unwrap ()Lorg/graalvm/polyglot/Context;
}

public abstract interface class elide/runtime/core/PolyglotContext$EvaluationOptions {
	public static final field Companion Lelide/runtime/core/PolyglotContext$EvaluationOptions$Companion;
	public abstract fun getInternals ()Z
	public static fun of (Z)Lelide/runtime/core/PolyglotContext$EvaluationOptions;
}

public final class elide/runtime/core/PolyglotContext$EvaluationOptions$Companion {
	public final fun of (Z)Lelide/runtime/core/PolyglotContext$EvaluationOptions;
}

public final class elide/runtime/core/PolyglotContext$EvaluationOptionsData : java/lang/Record, elide/runtime/core/PolyglotContext$EvaluationOptions {
	public final fun component1 ()Z
	public final fun copy (Z)Lelide/runtime/core/PolyglotContext$EvaluationOptionsData;
	public static synthetic fun copy$default (Lelide/runtime/core/PolyglotContext$EvaluationOptionsData;ZILjava/lang/Object;)Lelide/runtime/core/PolyglotContext$EvaluationOptionsData;
	public fun equals (Ljava/lang/Object;)Z
	public synthetic fun getInternals ()Z
	public fun hashCode ()I
	public fun internals ()Z
	public fun toString ()Ljava/lang/String;
}

public final class elide/runtime/core/PolyglotContextElement {
	public static final synthetic fun box-impl (Ljava/lang/String;)Lelide/runtime/core/PolyglotContextElement;
	public static fun constructor-impl (Ljava/lang/String;)Ljava/lang/String;
	public fun equals (Ljava/lang/Object;)Z
	public static fun equals-impl (Ljava/lang/String;Ljava/lang/Object;)Z
	public static final fun equals-impl0 (Ljava/lang/String;Ljava/lang/String;)Z
	public final fun getKey ()Ljava/lang/String;
	public fun hashCode ()I
	public static fun hashCode-impl (Ljava/lang/String;)I
	public fun toString ()Ljava/lang/String;
	public static fun toString-impl (Ljava/lang/String;)Ljava/lang/String;
	public final synthetic fun unbox-impl ()Ljava/lang/String;
}

public final class elide/runtime/core/PolyglotContextKt {
	public static final fun evaluate (Lelide/runtime/core/PolyglotContext;Lelide/runtime/core/GuestLanguage;Ljava/lang/String;Ljava/lang/String;ZZZLjava/net/URI;)Lorg/graalvm/polyglot/Value;
	public static synthetic fun evaluate$default (Lelide/runtime/core/PolyglotContext;Lelide/runtime/core/GuestLanguage;Ljava/lang/String;Ljava/lang/String;ZZZLjava/net/URI;ILjava/lang/Object;)Lorg/graalvm/polyglot/Value;
	public static final fun parse (Lelide/runtime/core/PolyglotContext;Lelide/runtime/core/GuestLanguage;Ljava/lang/String;Ljava/lang/String;ZZZLjava/net/URI;)Lorg/graalvm/polyglot/Value;
	public static synthetic fun parse$default (Lelide/runtime/core/PolyglotContext;Lelide/runtime/core/GuestLanguage;Ljava/lang/String;Ljava/lang/String;ZZZLjava/net/URI;ILjava/lang/Object;)Lorg/graalvm/polyglot/Value;
}

public abstract interface class elide/runtime/core/PolyglotEngine {
	public abstract fun acquire (Lkotlin/jvm/functions/Function1;)Lelide/runtime/core/PolyglotContext;
	public static synthetic fun acquire$default (Lelide/runtime/core/PolyglotEngine;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lelide/runtime/core/PolyglotContext;
	public abstract fun unwrap ()Lorg/graalvm/polyglot/Engine;
}

public abstract class elide/runtime/core/PolyglotEngineConfiguration : elide/runtime/core/PluginRegistry {
	public fun <init> ()V
	public abstract fun args ([Ljava/lang/String;)V
	public abstract fun enableLanguage (Lelide/runtime/core/GuestLanguage;)V
	public final fun getHostAccess ()Lelide/runtime/core/PolyglotEngineConfiguration$HostAccess;
	public final fun getHostPlatform ()Lelide/runtime/core/HostPlatform;
	public abstract fun getHostRuntime ()Lelide/runtime/core/HostRuntime;
	public abstract fun registeredBundles ()Ljava/util/List;
	public final fun setHostAccess (Lelide/runtime/core/PolyglotEngineConfiguration$HostAccess;)V
}

public final class elide/runtime/core/PolyglotEngineConfiguration$HostAccess : java/lang/Enum {
	public static final field ALLOW_ALL Lelide/runtime/core/PolyglotEngineConfiguration$HostAccess;
	public static final field ALLOW_ENV Lelide/runtime/core/PolyglotEngineConfiguration$HostAccess;
	public static final field ALLOW_IO Lelide/runtime/core/PolyglotEngineConfiguration$HostAccess;
	public static final field ALLOW_NONE Lelide/runtime/core/PolyglotEngineConfiguration$HostAccess;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public static fun valueOf (Ljava/lang/String;)Lelide/runtime/core/PolyglotEngineConfiguration$HostAccess;
	public static fun values ()[Lelide/runtime/core/PolyglotEngineConfiguration$HostAccess;
}

public final class elide/runtime/core/Version : java/lang/Comparable {
	public static final field Companion Lelide/runtime/core/Version$Companion;
	public fun <init> (III)V
	public synthetic fun <init> (IIIILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun compareTo (Lelide/runtime/core/Version;)I
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public final fun component1 ()I
	public final fun component2 ()I
	public final fun component3 ()I
	public final fun copy (III)Lelide/runtime/core/Version;
	public static synthetic fun copy$default (Lelide/runtime/core/Version;IIIILjava/lang/Object;)Lelide/runtime/core/Version;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getMajor ()I
	public final fun getMinor ()I
	public final fun getPatch ()I
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class elide/runtime/core/Version$Companion {
	public final fun getZero ()Lelide/runtime/core/Version;
	public final fun parse (Ljava/lang/String;)Lelide/runtime/core/Version;
}

public final class elide/runtime/core/Version$Range {
	public fun <init> ()V
	public fun <init> (Lelide/runtime/core/Version;Lelide/runtime/core/Version;ZZ)V
	public synthetic fun <init> (Lelide/runtime/core/Version;Lelide/runtime/core/Version;ZZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Lelide/runtime/core/Version;
	public final fun component2 ()Lelide/runtime/core/Version;
	public final fun component3 ()Z
	public final fun component4 ()Z
	public final fun contains (Lelide/runtime/core/Version;)Z
	public final fun copy (Lelide/runtime/core/Version;Lelide/runtime/core/Version;ZZ)Lelide/runtime/core/Version$Range;
	public static synthetic fun copy$default (Lelide/runtime/core/Version$Range;Lelide/runtime/core/Version;Lelide/runtime/core/Version;ZZILjava/lang/Object;)Lelide/runtime/core/Version$Range;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getIncludeMax ()Z
	public final fun getIncludeMin ()Z
	public final fun getMax ()Lelide/runtime/core/Version;
	public final fun getMin ()Lelide/runtime/core/Version;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class elide/runtime/core/VersionKt {
	public static final fun andHigher (Lelide/runtime/core/Version;)Lelide/runtime/core/Version$Range;
	public static final fun andLower (Lelide/runtime/core/Version;)Lelide/runtime/core/Version$Range;
}

public final class elide/runtime/core/extensions/ContextBuilderKt {
	public static final fun disableOption (Lorg/graalvm/polyglot/Context$Builder;Ljava/lang/String;)V
	public static final fun disableOptions (Lorg/graalvm/polyglot/Context$Builder;[Ljava/lang/String;)V
	public static final fun enableOption (Lorg/graalvm/polyglot/Context$Builder;Ljava/lang/String;)V
	public static final fun enableOptions (Lorg/graalvm/polyglot/Context$Builder;[Ljava/lang/String;)V
	public static final fun setBooleanOptions (Lorg/graalvm/polyglot/Context$Builder;[Lkotlin/Pair;)V
	public static final fun setOption (Lorg/graalvm/polyglot/Context$Builder;Ljava/lang/String;Z)V
	public static final fun setOptions (Lorg/graalvm/polyglot/Context$Builder;[Lkotlin/Pair;)V
}

public final class elide/runtime/core/extensions/EngineBuilderKt {
	public static final fun disableOption (Lorg/graalvm/polyglot/Engine$Builder;Ljava/lang/String;)V
	public static final fun disableOptions (Lorg/graalvm/polyglot/Engine$Builder;[Ljava/lang/String;)V
	public static final fun enableOption (Lorg/graalvm/polyglot/Engine$Builder;Ljava/lang/String;)V
	public static final fun enableOptions (Lorg/graalvm/polyglot/Engine$Builder;[Ljava/lang/String;)V
	public static final fun setBooleanOptions (Lorg/graalvm/polyglot/Engine$Builder;[Lkotlin/Pair;)V
	public static final fun setOption (Lorg/graalvm/polyglot/Engine$Builder;Ljava/lang/String;Z)V
	public static final fun setOptions (Lorg/graalvm/polyglot/Engine$Builder;[Lkotlin/Pair;)V
}

public final class elide/runtime/core/lib/NativeLibraries {
	public static final field INSTANCE Lelide/runtime/core/lib/NativeLibraries;
	public final fun loadLibrary (Ljava/lang/String;)Z
	public final fun loadLibrary (Ljava/lang/String;Ljava/lang/String;)Z
	public final fun resolve (Ljava/lang/String;Lkotlin/jvm/functions/Function1;)Z
	public static synthetic fun resolve$default (Lelide/runtime/core/lib/NativeLibraries;Ljava/lang/String;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Z
}

public synthetic class elide/runtime/diag/$MutableDiagnostic$Companion$ReflectConfig : io/micronaut/core/graal/GraalReflectionConfigurer {
	public static final field $ANNOTATION_METADATA Lio/micronaut/core/annotation/AnnotationMetadata;
	public fun <init> ()V
	public fun getAnnotationMetadata ()Lio/micronaut/core/annotation/AnnotationMetadata;
}

public synthetic class elide/runtime/diag/$MutableDiagnostic$ReflectConfig : io/micronaut/core/graal/GraalReflectionConfigurer {
	public static final field $ANNOTATION_METADATA Lio/micronaut/core/annotation/AnnotationMetadata;
	public fun <init> ()V
	public fun getAnnotationMetadata ()Lio/micronaut/core/annotation/AnnotationMetadata;
}

public final class elide/runtime/diag/Diagnostic : java/lang/Record {
	public static final field Companion Lelide/runtime/diag/Diagnostic$Companion;
	public final field advice Ljava/lang/String;
	public final field id Ljava/lang/String;
	public final field lang Ljava/lang/String;
	public final field message Ljava/lang/String;
	public final field position Lelide/runtime/diag/SourceLocation;
	public final field reference Lelide/runtime/diag/SourceReference;
	public final field renderedMessage Ljava/lang/String;
	public final field severity Lelide/runtime/diag/Severity;
	public final field source Ljava/lang/String;
	public final field span Lelide/runtime/diag/SourceSpan;
	public final field tool Ljava/lang/String;
	public final fun asInfo ()Lelide/runtime/diag/DiagnosticInfo;
	public final fun component1 ()Lelide/runtime/diag/Severity;
	public final fun component10 ()Ljava/lang/String;
	public final fun component11 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/lang/String;
	public final fun component4 ()Ljava/lang/String;
	public final fun component5 ()Lelide/runtime/diag/SourceLocation;
	public final fun component6 ()Lelide/runtime/diag/SourceSpan;
	public final fun component7 ()Lelide/runtime/diag/SourceReference;
	public final fun component8 ()Ljava/lang/String;
	public final fun component9 ()Ljava/lang/String;
	public final fun copy (Lelide/runtime/diag/Severity;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lelide/runtime/diag/SourceLocation;Lelide/runtime/diag/SourceSpan;Lelide/runtime/diag/SourceReference;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lelide/runtime/diag/Diagnostic;
	public static synthetic fun copy$default (Lelide/runtime/diag/Diagnostic;Lelide/runtime/diag/Severity;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lelide/runtime/diag/SourceLocation;Lelide/runtime/diag/SourceSpan;Lelide/runtime/diag/SourceReference;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Lelide/runtime/diag/Diagnostic;
	public fun equals (Ljava/lang/Object;)Z
	public static final fun from (Lelide/runtime/diag/DiagnosticInfo;)Lelide/runtime/diag/Diagnostic;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class elide/runtime/diag/Diagnostic$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/runtime/diag/Diagnostic$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/runtime/diag/Diagnostic;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/runtime/diag/Diagnostic;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/runtime/diag/Diagnostic$Companion {
	public final fun from (Lelide/runtime/diag/DiagnosticInfo;)Lelide/runtime/diag/Diagnostic;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/runtime/diag/DiagnosticExtensionsKt {
	public static final fun toDiagnostic (Ljavax/tools/Diagnostic;Ljava/lang/String;)Lelide/runtime/diag/Diagnostic;
	public static synthetic fun toDiagnostic$default (Ljavax/tools/Diagnostic;Ljava/lang/String;ILjava/lang/Object;)Lelide/runtime/diag/Diagnostic;
	public static final fun toDiagnosticInfo (Ljavax/tools/Diagnostic;Ljava/lang/String;)Lelide/runtime/diag/DiagnosticInfo;
	public static synthetic fun toDiagnosticInfo$default (Ljavax/tools/Diagnostic;Ljava/lang/String;ILjava/lang/Object;)Lelide/runtime/diag/DiagnosticInfo;
}

public abstract interface class elide/runtime/diag/DiagnosticInfo {
	public static final field Companion Lelide/runtime/diag/DiagnosticInfo$Companion;
	public fun getAdvice ()Ljava/lang/String;
	public fun getId ()Ljava/lang/String;
	public fun getLang ()Ljava/lang/String;
	public fun getMessage ()Ljava/lang/String;
	public fun getPosition ()Lelide/runtime/diag/SourceLocation;
	public fun getReference ()Lelide/runtime/diag/SourceReference;
	public fun getRenderedMessage ()Ljava/lang/String;
	public abstract fun getSeverity ()Lelide/runtime/diag/Severity;
	public fun getSource ()Ljava/lang/String;
	public fun getSpan ()Lelide/runtime/diag/SourceSpan;
	public fun getTool ()Ljava/lang/String;
}

public final class elide/runtime/diag/DiagnosticInfo$Companion {
	public final fun mutable ()Lelide/runtime/diag/MutableDiagnostic;
}

public final class elide/runtime/diag/Diagnostics : elide/runtime/diag/DiagnosticsBuffer, elide/runtime/diag/DiagnosticsReceiver {
	public static final field INSTANCE Lelide/runtime/diag/Diagnostics;
	public fun all ()Lkotlin/sequences/Sequence;
	public fun clear ()V
	public fun close ()V
	public fun dirty (Ljava/lang/String;)Z
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun lock ()V
	public final fun mutable ()Lelide/runtime/diag/MutableDiagnostic;
	public fun query (Ljava/lang/String;Ljava/lang/String;Z)Lkotlin/sequences/Sequence;
	public fun query (ZLjava/util/function/Predicate;)Lkotlin/sequences/Sequence;
	public fun report (Lelide/runtime/diag/DiagnosticInfo;)V
	public fun report (Lelide/runtime/diag/DiagnosticInfo;[Lelide/runtime/diag/DiagnosticInfo;)V
	public fun report (Ljava/lang/Iterable;)V
	public fun report (Lkotlin/sequences/Sequence;)V
	public fun toString ()Ljava/lang/String;
}

public abstract interface class elide/runtime/diag/DiagnosticsBuffer : java/io/Closeable, java/lang/AutoCloseable {
	public abstract fun all ()Lkotlin/sequences/Sequence;
	public abstract fun clear ()V
	public abstract fun dirty (Ljava/lang/String;)Z
	public static synthetic fun dirty$default (Lelide/runtime/diag/DiagnosticsBuffer;Ljava/lang/String;ILjava/lang/Object;)Z
	public abstract fun query (Ljava/lang/String;Ljava/lang/String;Z)Lkotlin/sequences/Sequence;
	public abstract fun query (ZLjava/util/function/Predicate;)Lkotlin/sequences/Sequence;
	public static synthetic fun query$default (Lelide/runtime/diag/DiagnosticsBuffer;Ljava/lang/String;Ljava/lang/String;ZILjava/lang/Object;)Lkotlin/sequences/Sequence;
	public static synthetic fun query$default (Lelide/runtime/diag/DiagnosticsBuffer;ZLjava/util/function/Predicate;ILjava/lang/Object;)Lkotlin/sequences/Sequence;
}

public final class elide/runtime/diag/DiagnosticsContainer : elide/runtime/diag/DiagnosticsReceiver, elide/runtime/diag/DiagnosticsSuite {
	public static final field Companion Lelide/runtime/diag/DiagnosticsContainer$Companion;
	public synthetic fun <init> (Lkotlin/sequences/Sequence;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun all ()Lkotlin/sequences/Sequence;
	public fun clear ()V
	public fun close ()V
	public static final fun create ()Lelide/runtime/diag/DiagnosticsContainer;
	public fun dirty (Ljava/lang/String;)Z
	public static final fun empty ()Lelide/runtime/diag/DiagnosticsSuite;
	public static final fun from (Lkotlin/sequences/Sequence;)Lelide/runtime/diag/DiagnosticsContainer;
	public fun getCount-pVg5ArA ()I
	public fun getSeverity ()Lelide/runtime/diag/Severity;
	public fun lock ()V
	public fun query (Ljava/lang/String;Ljava/lang/String;Z)Lkotlin/sequences/Sequence;
	public fun query (ZLjava/util/function/Predicate;)Lkotlin/sequences/Sequence;
	public fun report (Lelide/runtime/diag/DiagnosticInfo;)V
	public fun report (Lelide/runtime/diag/DiagnosticInfo;[Lelide/runtime/diag/DiagnosticInfo;)V
	public fun report (Ljava/lang/Iterable;)V
	public fun report (Lkotlin/sequences/Sequence;)V
}

public final class elide/runtime/diag/DiagnosticsContainer$Companion {
	public final fun create ()Lelide/runtime/diag/DiagnosticsContainer;
	public final fun empty ()Lelide/runtime/diag/DiagnosticsSuite;
	public final fun from (Lkotlin/sequences/Sequence;)Lelide/runtime/diag/DiagnosticsContainer;
}

public abstract interface class elide/runtime/diag/DiagnosticsReceiver : java/io/Closeable, java/lang/AutoCloseable {
	public abstract fun lock ()V
	public abstract fun report (Lelide/runtime/diag/DiagnosticInfo;)V
	public abstract fun report (Lelide/runtime/diag/DiagnosticInfo;[Lelide/runtime/diag/DiagnosticInfo;)V
	public abstract fun report (Ljava/lang/Iterable;)V
	public abstract fun report (Lkotlin/sequences/Sequence;)V
}

public abstract interface class elide/runtime/diag/DiagnosticsSuite : elide/runtime/diag/DiagnosticsBuffer {
	public abstract fun getCount-pVg5ArA ()I
	public fun getFatal ()Z
	public abstract fun getSeverity ()Lelide/runtime/diag/Severity;
}

public final class elide/runtime/diag/MutableDiagnostic : elide/runtime/diag/MutableDiagnosticInfo {
	public static final field Companion Lelide/runtime/diag/MutableDiagnostic$Companion;
	public final fun build ()Lelide/runtime/diag/Diagnostic;
	public static final fun create ()Lelide/runtime/diag/MutableDiagnostic;
	public fun getAdvice ()Ljava/lang/String;
	public fun getId ()Ljava/lang/String;
	public fun getLang ()Ljava/lang/String;
	public fun getMessage ()Ljava/lang/String;
	public fun getPosition ()Lelide/runtime/diag/SourceLocation;
	public fun getReference ()Lelide/runtime/diag/SourceReference;
	public fun getRenderedMessage ()Ljava/lang/String;
	public fun getSeverity ()Lelide/runtime/diag/Severity;
	public fun getSource ()Ljava/lang/String;
	public fun getSpan ()Lelide/runtime/diag/SourceSpan;
	public fun getTool ()Ljava/lang/String;
	public fun setAdvice (Ljava/lang/String;)V
	public fun setId (Ljava/lang/String;)V
	public fun setLang (Ljava/lang/String;)V
	public fun setMessage (Ljava/lang/String;)V
	public fun setPosition (Lelide/runtime/diag/SourceLocation;)V
	public fun setReference (Lelide/runtime/diag/SourceReference;)V
	public fun setRenderedMessage (Ljava/lang/String;)V
	public final fun setSeverity (I)Lelide/runtime/diag/MutableDiagnostic;
	public fun setSeverity (Lelide/runtime/diag/Severity;)V
	public fun setSource (Ljava/lang/String;)V
	public fun setSpan (Lelide/runtime/diag/SourceSpan;)V
	public fun setTool (Ljava/lang/String;)V
}

public final class elide/runtime/diag/MutableDiagnostic$Companion {
	public final fun create ()Lelide/runtime/diag/MutableDiagnostic;
}

public abstract interface class elide/runtime/diag/MutableDiagnosticInfo : elide/runtime/diag/DiagnosticInfo {
	public abstract fun getAdvice ()Ljava/lang/String;
	public abstract fun getId ()Ljava/lang/String;
	public abstract fun getLang ()Ljava/lang/String;
	public abstract fun getMessage ()Ljava/lang/String;
	public abstract fun getPosition ()Lelide/runtime/diag/SourceLocation;
	public abstract fun getReference ()Lelide/runtime/diag/SourceReference;
	public abstract fun getRenderedMessage ()Ljava/lang/String;
	public abstract fun getSeverity ()Lelide/runtime/diag/Severity;
	public abstract fun getSource ()Ljava/lang/String;
	public abstract fun getSpan ()Lelide/runtime/diag/SourceSpan;
	public abstract fun setAdvice (Ljava/lang/String;)V
	public abstract fun setId (Ljava/lang/String;)V
	public abstract fun setLang (Ljava/lang/String;)V
	public abstract fun setMessage (Ljava/lang/String;)V
	public abstract fun setPosition (Lelide/runtime/diag/SourceLocation;)V
	public abstract fun setReference (Lelide/runtime/diag/SourceReference;)V
	public abstract fun setRenderedMessage (Ljava/lang/String;)V
	public abstract fun setSeverity (Lelide/runtime/diag/Severity;)V
	public abstract fun setSource (Ljava/lang/String;)V
	public abstract fun setSpan (Lelide/runtime/diag/SourceSpan;)V
}

public final class elide/runtime/diag/NativeDiagnostics {
	public static final field Companion Lelide/runtime/diag/NativeDiagnostics$Companion;
	public static final fun createDiagnostic ()Lelide/runtime/diag/MutableDiagnostic;
	public static final fun reportNativeDiagnostic (Lelide/runtime/diag/DiagnosticInfo;)V
}

public final class elide/runtime/diag/NativeDiagnostics$Companion {
	public final fun reportNativeDiagnostic (Lelide/runtime/diag/DiagnosticInfo;)V
}

public final class elide/runtime/diag/Severity : java/lang/Enum, elide/core/api/Symbolic {
	public static final field Companion Lelide/runtime/diag/Severity$Companion;
	public static final field ERROR Lelide/runtime/diag/Severity;
	public static final field INFO Lelide/runtime/diag/Severity;
	public static final field WARN Lelide/runtime/diag/Severity;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public synthetic fun getSymbol ()Ljava/lang/Object;
	public fun getSymbol ()Ljava/lang/String;
	public static fun valueOf (Ljava/lang/String;)Lelide/runtime/diag/Severity;
	public static fun values ()[Lelide/runtime/diag/Severity;
}

public final class elide/runtime/diag/Severity$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/runtime/diag/SourceLocation : java/lang/Record {
	public static final field Companion Lelide/runtime/diag/SourceLocation$Companion;
	public synthetic fun <init> (IILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun column ()I
	public final fun component1-pVg5ArA ()I
	public final fun component2-pVg5ArA ()I
	public final fun copy-feOb9K0 (II)Lelide/runtime/diag/SourceLocation;
	public static synthetic fun copy-feOb9K0$default (Lelide/runtime/diag/SourceLocation;IIILjava/lang/Object;)Lelide/runtime/diag/SourceLocation;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun line ()I
	public fun toString ()Ljava/lang/String;
}

public final class elide/runtime/diag/SourceLocation$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/runtime/diag/SourceLocation$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/runtime/diag/SourceLocation;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/runtime/diag/SourceLocation;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/runtime/diag/SourceLocation$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract interface class elide/runtime/diag/SourceReference {
}

public final class elide/runtime/diag/SourceSpan : java/lang/Record {
	public static final field Companion Lelide/runtime/diag/SourceSpan$Companion;
	public final fun component1-pVg5ArA ()I
	public final fun component2-pVg5ArA ()I
	public final fun copy-feOb9K0 (II)Lelide/runtime/diag/SourceSpan;
	public static synthetic fun copy-feOb9K0$default (Lelide/runtime/diag/SourceSpan;IIILjava/lang/Object;)Lelide/runtime/diag/SourceSpan;
	public final fun end ()I
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun start ()I
	public fun toString ()Ljava/lang/String;
}

public final class elide/runtime/diag/SourceSpan$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/runtime/diag/SourceSpan$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/runtime/diag/SourceSpan;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/runtime/diag/SourceSpan;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/runtime/diag/SourceSpan$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public synthetic class elide/runtime/exec/$GuestExecutorFactory$Definition : io/micronaut/context/AbstractInitializableBeanDefinitionAndReference {
	public static final field $ANNOTATION_METADATA Lio/micronaut/core/annotation/AnnotationMetadata;
	public fun <init> ()V
	protected fun <init> (Ljava/lang/Class;Lio/micronaut/context/AbstractInitializableBeanDefinition$MethodOrFieldReference;)V
	public fun instantiate (Lio/micronaut/context/BeanResolutionContext;Lio/micronaut/context/BeanContext;)Ljava/lang/Object;
	public fun load ()Lio/micronaut/inject/BeanDefinition;
}

public synthetic class elide/runtime/exec/$GuestExecutorFactory$Executor0$Definition : io/micronaut/context/AbstractInitializableBeanDefinitionAndReference {
	public static final field $ANNOTATION_METADATA Lio/micronaut/core/annotation/AnnotationMetadata;
	public fun <init> ()V
	protected fun <init> (Ljava/lang/Class;Lio/micronaut/context/AbstractInitializableBeanDefinition$MethodOrFieldReference;)V
	public fun instantiate (Lio/micronaut/context/BeanResolutionContext;Lio/micronaut/context/BeanContext;)Ljava/lang/Object;
	public fun load ()Lio/micronaut/inject/BeanDefinition;
}

public final class elide/runtime/exec/GuestExecution {
	public static final field INSTANCE Lelide/runtime/exec/GuestExecution;
	public final fun direct ()Lelide/runtime/exec/GuestExecutor;
	public final fun workStealing ()Lelide/runtime/exec/GuestExecutor;
}

public abstract interface class elide/runtime/exec/GuestExecutor : com/google/common/util/concurrent/ListeningExecutorService, java/util/concurrent/ScheduledExecutorService, kotlin/coroutines/CoroutineContext {
	public abstract fun getDispatcher ()Lkotlinx/coroutines/CoroutineDispatcher;
}

public final class elide/runtime/exec/GuestExecutor$DefaultImpls {
	public static fun plus (Lelide/runtime/exec/GuestExecutor;Lkotlin/coroutines/CoroutineContext;)Lkotlin/coroutines/CoroutineContext;
}

public abstract interface class elide/runtime/exec/GuestExecutorProvider {
	public abstract fun executor ()Lelide/runtime/exec/GuestExecutor;
}

public abstract interface class elide/runtime/feature/FrameworkFeature : org/graalvm/nativeimage/hosted/Feature {
	public fun findClassesInJar (Ljava/net/JarURLConnection;Ljava/lang/String;)Ljava/util/List;
	public abstract fun getDescription ()Ljava/lang/String;
	public fun getMethodOrFail (Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
	public fun getURL ()Ljava/lang/String;
	public fun logging ()Lelide/runtime/Logger;
	public fun registerClassForReflection (Lorg/graalvm/nativeimage/hosted/Feature$FeatureAccess;Ljava/lang/String;)V
	public fun registerClassHierarchyForReflection (Lorg/graalvm/nativeimage/hosted/Feature$FeatureAccess;Ljava/lang/String;)V
	public fun registerConstructorsForReflection (Lorg/graalvm/nativeimage/hosted/Feature$FeatureAccess;Ljava/lang/String;)V
	public fun registerForReflectiveInstantiation (Lorg/graalvm/nativeimage/hosted/Feature$FeatureAccess;Ljava/lang/String;)V
	public fun registerForUnsafeFieldAccess (Lorg/graalvm/nativeimage/hosted/Feature$FeatureAccess;Ljava/lang/String;[Ljava/lang/String;)V
	public fun registerPackageForReflection (Lorg/graalvm/nativeimage/hosted/Feature$FeatureAccess;Ljava/lang/String;)V
}

public abstract interface class elide/runtime/feature/NativeLibraryFeature : elide/runtime/feature/FrameworkFeature {
}

public final class elide/runtime/feature/NativeLibraryFeature$NativeLibInfo : java/lang/Record {
	public static final field Companion Lelide/runtime/feature/NativeLibraryFeature$NativeLibInfo$Companion;
	public fun <init> (Ljava/lang/String;Ljava/util/List;Lelide/runtime/feature/NativeLibraryFeature$NativeLibType;Ljava/lang/String;ZZZZLjava/nio/file/Path;Lkotlin/Pair;ZLjava/util/List;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/util/List;Lelide/runtime/feature/NativeLibraryFeature$NativeLibType;Ljava/lang/String;ZZZZLjava/nio/file/Path;Lkotlin/Pair;ZLjava/util/List;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun absoluteLibs ()Lkotlin/Pair;
	public final fun absolutePath ()Ljava/nio/file/Path;
	public final fun builtin ()Z
	public final fun component1 ()Ljava/lang/String;
	public final fun component10 ()Lkotlin/Pair;
	public final fun component11 ()Z
	public final fun component12 ()Ljava/util/List;
	public final fun component2 ()Ljava/util/List;
	public final fun component3 ()Lelide/runtime/feature/NativeLibraryFeature$NativeLibType;
	public final fun component4 ()Ljava/lang/String;
	public final fun component5 ()Z
	public final fun component6 ()Z
	public final fun component7 ()Z
	public final fun component8 ()Z
	public final fun component9 ()Ljava/nio/file/Path;
	public final fun copy (Ljava/lang/String;Ljava/util/List;Lelide/runtime/feature/NativeLibraryFeature$NativeLibType;Ljava/lang/String;ZZZZLjava/nio/file/Path;Lkotlin/Pair;ZLjava/util/List;)Lelide/runtime/feature/NativeLibraryFeature$NativeLibInfo;
	public static synthetic fun copy$default (Lelide/runtime/feature/NativeLibraryFeature$NativeLibInfo;Ljava/lang/String;Ljava/util/List;Lelide/runtime/feature/NativeLibraryFeature$NativeLibType;Ljava/lang/String;ZZZZLjava/nio/file/Path;Lkotlin/Pair;ZLjava/util/List;ILjava/lang/Object;)Lelide/runtime/feature/NativeLibraryFeature$NativeLibInfo;
	public final fun deps ()Ljava/util/List;
	public final fun eager ()Z
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun initializer ()Z
	public final fun linkName ()Ljava/lang/String;
	public final fun name ()Ljava/lang/String;
	public static final fun of (Ljava/lang/String;[Ljava/lang/String;Lelide/runtime/feature/NativeLibraryFeature$NativeLibType;Ljava/lang/String;ZZZZLjava/nio/file/Path;Lkotlin/Pair;ZLjava/util/List;)Lelide/runtime/feature/NativeLibraryFeature$NativeLibInfo;
	public final fun prefix ()Ljava/util/List;
	public final fun registerJni ()Z
	public final fun registerPrefix ()Z
	public fun toString ()Ljava/lang/String;
	public final fun type ()Lelide/runtime/feature/NativeLibraryFeature$NativeLibType;
}

public final class elide/runtime/feature/NativeLibraryFeature$NativeLibInfo$Companion {
	public final fun of (Ljava/lang/String;[Ljava/lang/String;Lelide/runtime/feature/NativeLibraryFeature$NativeLibType;Ljava/lang/String;ZZZZLjava/nio/file/Path;Lkotlin/Pair;ZLjava/util/List;)Lelide/runtime/feature/NativeLibraryFeature$NativeLibInfo;
	public static synthetic fun of$default (Lelide/runtime/feature/NativeLibraryFeature$NativeLibInfo$Companion;Ljava/lang/String;[Ljava/lang/String;Lelide/runtime/feature/NativeLibraryFeature$NativeLibType;Ljava/lang/String;ZZZZLjava/nio/file/Path;Lkotlin/Pair;ZLjava/util/List;ILjava/lang/Object;)Lelide/runtime/feature/NativeLibraryFeature$NativeLibInfo;
}

public final class elide/runtime/feature/NativeLibraryFeature$NativeLibType : java/lang/Enum {
	public static final field DUAL Lelide/runtime/feature/NativeLibraryFeature$NativeLibType;
	public static final field SHARED Lelide/runtime/feature/NativeLibraryFeature$NativeLibType;
	public static final field STATIC Lelide/runtime/feature/NativeLibraryFeature$NativeLibType;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public static fun valueOf (Ljava/lang/String;)Lelide/runtime/feature/NativeLibraryFeature$NativeLibType;
	public static fun values ()[Lelide/runtime/feature/NativeLibraryFeature$NativeLibType;
}

public final class elide/runtime/feature/NativeLibraryFeature$UnpackedNative : java/lang/Record {
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/nio/file/Path;)V
	public final fun arch ()Ljava/lang/String;
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/lang/String;
	public final fun component4 ()Ljava/nio/file/Path;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/nio/file/Path;)Lelide/runtime/feature/NativeLibraryFeature$UnpackedNative;
	public static synthetic fun copy$default (Lelide/runtime/feature/NativeLibraryFeature$UnpackedNative;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/nio/file/Path;ILjava/lang/Object;)Lelide/runtime/feature/NativeLibraryFeature$UnpackedNative;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun name ()Ljava/lang/String;
	public final fun path ()Ljava/nio/file/Path;
	public final fun resource ()Ljava/lang/String;
	public fun toString ()Ljava/lang/String;
}

public abstract class elide/runtime/feature/engine/AbstractStaticNativeLibraryFeature : elide/runtime/feature/NativeLibraryFeature {
	public fun <init> ()V
	public fun beforeAnalysis (Lorg/graalvm/nativeimage/hosted/Feature$BeforeAnalysisAccess;)V
	public final fun fields (Ljava/lang/Class;[Ljava/lang/String;)[Ljava/lang/reflect/Field;
	public fun getRequiredFeatures ()Ljava/util/List;
	protected final fun libraryNamed (Ljava/lang/String;[Ljava/lang/String;Lelide/runtime/feature/NativeLibraryFeature$NativeLibType;Ljava/lang/String;ZZZZLjava/nio/file/Path;Lkotlin/Pair;ZLjava/util/List;)Lelide/runtime/feature/NativeLibraryFeature$NativeLibInfo;
	public static synthetic fun libraryNamed$default (Lelide/runtime/feature/engine/AbstractStaticNativeLibraryFeature;Ljava/lang/String;[Ljava/lang/String;Lelide/runtime/feature/NativeLibraryFeature$NativeLibType;Ljava/lang/String;ZZZZLjava/nio/file/Path;Lkotlin/Pair;ZLjava/util/List;ILjava/lang/Object;)Lelide/runtime/feature/NativeLibraryFeature$NativeLibInfo;
	public final fun method (Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
	protected final fun nativeLibrary (Lelide/runtime/feature/NativeLibraryFeature$NativeLibInfo;)Lelide/runtime/feature/NativeLibraryFeature$NativeLibInfo;
	protected final fun nativeLibrary (Lelide/runtime/feature/NativeLibraryFeature$NativeLibInfo;Lelide/runtime/feature/NativeLibraryFeature$NativeLibInfo;Lelide/runtime/feature/NativeLibraryFeature$NativeLibInfo;)Lelide/runtime/feature/NativeLibraryFeature$NativeLibInfo;
	public static synthetic fun nativeLibrary$default (Lelide/runtime/feature/engine/AbstractStaticNativeLibraryFeature;Lelide/runtime/feature/NativeLibraryFeature$NativeLibInfo;ILjava/lang/Object;)Lelide/runtime/feature/NativeLibraryFeature$NativeLibInfo;
	public static synthetic fun nativeLibrary$default (Lelide/runtime/feature/engine/AbstractStaticNativeLibraryFeature;Lelide/runtime/feature/NativeLibraryFeature$NativeLibInfo;Lelide/runtime/feature/NativeLibraryFeature$NativeLibInfo;Lelide/runtime/feature/NativeLibraryFeature$NativeLibInfo;ILjava/lang/Object;)Lelide/runtime/feature/NativeLibraryFeature$NativeLibInfo;
	public abstract fun nativeLibs (Lorg/graalvm/nativeimage/hosted/Feature$BeforeAnalysisAccess;)Ljava/util/List;
	protected final fun unpackLibrary (Lorg/graalvm/nativeimage/hosted/Feature$BeforeAnalysisAccess;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function0;)Ljava/util/List;
	public static synthetic fun unpackLibrary$default (Lelide/runtime/feature/engine/AbstractStaticNativeLibraryFeature;Lorg/graalvm/nativeimage/hosted/Feature$BeforeAnalysisAccess;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function0;ILjava/lang/Object;)Ljava/util/List;
	public fun unpackNatives (Lorg/graalvm/nativeimage/hosted/Feature$BeforeAnalysisAccess;)Ljava/util/List;
}

public abstract interface class elide/runtime/gvm/EngineContextAPI {
	public abstract fun context ()Lorg/graalvm/polyglot/Context;
	public abstract fun engine ()Lorg/graalvm/polyglot/Engine;
	public abstract fun executor ()Lelide/runtime/exec/GuestExecutor;
}

public abstract interface class elide/runtime/gvm/EngineExecutor : java/util/concurrent/ExecutorService {
}

public abstract interface class elide/runtime/gvm/EngineThreadAPI {
	public abstract fun engineContext ()Lelide/runtime/gvm/EngineContextAPI;
}

public abstract interface class elide/runtime/gvm/EngineThreadFactory : java/util/concurrent/ForkJoinPool$ForkJoinWorkerThreadFactory {
}

public class elide/runtime/gvm/GraalVMGuest : java/lang/Enum, elide/runtime/core/GuestLanguage, elide/runtime/gvm/GuestLanguage {
	public static final field JAVASCRIPT Lelide/runtime/gvm/GraalVMGuest;
	public static final field JVM Lelide/runtime/gvm/GraalVMGuest;
	public static final field PYTHON Lelide/runtime/gvm/GraalVMGuest;
	public static final field RUBY Lelide/runtime/gvm/GraalVMGuest;
	public static final field WASM Lelide/runtime/gvm/GraalVMGuest;
	public fun getEngine ()Ljava/lang/String;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public fun getLabel ()Ljava/lang/String;
	public fun getLanguageId ()Ljava/lang/String;
	public fun getSymbol ()Ljava/lang/String;
	public static fun valueOf (Ljava/lang/String;)Lelide/runtime/gvm/GraalVMGuest;
	public static fun values ()[Lelide/runtime/gvm/GraalVMGuest;
}

public abstract interface class elide/runtime/gvm/GuestLanguage {
	public static final field Companion Lelide/runtime/gvm/GuestLanguage$Companion;
	public abstract fun getEngine ()Ljava/lang/String;
	public fun getInvocationModes ()Ljava/util/EnumSet;
	public abstract fun getLabel ()Ljava/lang/String;
	public fun getSupportsSSR ()Z
	public fun getSupportsStreamingSSR ()Z
	public abstract fun getSymbol ()Ljava/lang/String;
}

public final class elide/runtime/gvm/GuestLanguage$Companion {
	public final fun getJAVASCRIPT ()Lelide/runtime/gvm/GuestLanguage;
	public final fun getJVM ()Lelide/runtime/gvm/GuestLanguage;
	public final fun getPYTHON ()Lelide/runtime/gvm/GuestLanguage;
	public final fun getRUBY ()Lelide/runtime/gvm/GuestLanguage;
	public final fun getWASM ()Lelide/runtime/gvm/GuestLanguage;
}

public final class elide/runtime/gvm/InvocationMode : java/lang/Enum {
	public static final field ASYNC Lelide/runtime/gvm/InvocationMode;
	public static final field STREAMING Lelide/runtime/gvm/InvocationMode;
	public static final field SYNC Lelide/runtime/gvm/InvocationMode;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public static fun valueOf (Ljava/lang/String;)Lelide/runtime/gvm/InvocationMode;
	public static fun values ()[Lelide/runtime/gvm/InvocationMode;
}

public final class elide/runtime/gvm/JNIHeaderDirectives : org/graalvm/nativeimage/c/CContext$Directives {
	public fun <init> ()V
	public fun getHeaderFiles ()Ljava/util/List;
	public static fun getHeaderOptions ()Ljava/util/List;
	public static fun getHeaders ()Ljava/util/List;
	public fun getOptions ()Ljava/util/List;
}

public final class elide/runtime/gvm/RuntimeContext {
	public static final field INSTANCE Lelide/runtime/gvm/RuntimeContext;
	public static final fun current ()Lelide/runtime/gvm/EngineContextAPI;
	public static final fun currentUnsafe ()Lelide/runtime/gvm/EngineContextAPI;
	public static final fun engineExecutor ()Lelide/runtime/gvm/EngineExecutor;
	public static final fun inEngineThread (Ljava/lang/Thread;)Z
	public static synthetic fun inEngineThread$default (Ljava/lang/Thread;ILjava/lang/Object;)Z
}

public final class elide/runtime/gvm/RuntimeContextKt {
	public static final fun getEngine (Lkotlinx/coroutines/Dispatchers;)Lkotlinx/coroutines/CoroutineDispatcher;
	public static final fun getVirtual (Lkotlinx/coroutines/Dispatchers;)Lkotlinx/coroutines/CoroutineDispatcher;
}

public abstract interface class elide/runtime/gvm/cfg/GuestRuntimeConfiguration : io/micronaut/core/util/Toggleable {
}

public final class elide/runtime/gvm/cfg/LanguageDefaults {
	public static final field INSTANCE Lelide/runtime/gvm/cfg/LanguageDefaults;
	public final fun getDEFAULT_CHARSET ()Ljava/nio/charset/Charset;
	public final fun getDEFAULT_LOCALE ()Ljava/util/Locale;
	public final fun getDEFAULT_TIMEZONE ()Ljava/time/ZoneId;
}

public final class elide/runtime/gvm/internals/MultiThreadedEngine {
	public static fun newMultiThreadedEngineExecutor ()Lelide/runtime/gvm/EngineExecutor;
}

public abstract interface class elide/runtime/gvm/loader/ModuleFactory {
	public abstract fun load (Lelide/runtime/gvm/loader/ModuleInfo;)Ljava/lang/Object;
}

public final class elide/runtime/gvm/loader/ModuleInfo : java/lang/Record, java/lang/Comparable {
	public static final field Companion Lelide/runtime/gvm/loader/ModuleInfo$Companion;
	public synthetic fun <init> (Ljava/lang/String;Ljava/util/List;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun compareTo (Lelide/runtime/gvm/loader/ModuleInfo;)I
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/util/List;
	public final fun copy (Ljava/lang/String;Ljava/util/List;)Lelide/runtime/gvm/loader/ModuleInfo;
	public static synthetic fun copy$default (Lelide/runtime/gvm/loader/ModuleInfo;Ljava/lang/String;Ljava/util/List;ILjava/lang/Object;)Lelide/runtime/gvm/loader/ModuleInfo;
	public final fun dependencies ()Ljava/util/List;
	public fun equals (Ljava/lang/Object;)Z
	public static final fun find (Ljava/lang/String;)Lelide/runtime/gvm/loader/ModuleInfo;
	public fun hashCode ()I
	public final fun name ()Ljava/lang/String;
	public static final fun of (Ljava/lang/String;[Ljava/lang/String;)Lelide/runtime/gvm/loader/ModuleInfo;
	public fun toString ()Ljava/lang/String;
}

public final class elide/runtime/gvm/loader/ModuleInfo$Companion {
	public final fun find (Ljava/lang/String;)Lelide/runtime/gvm/loader/ModuleInfo;
	public final fun getAllModuleInfos ()Ljava/util/Map;
	public final fun of (Ljava/lang/String;[Ljava/lang/String;)Lelide/runtime/gvm/loader/ModuleInfo;
}

public abstract interface class elide/runtime/gvm/loader/ModuleRegistrar {
	public abstract fun deferred (Lelide/runtime/gvm/loader/ModuleInfo;Lelide/runtime/gvm/loader/ModuleFactory;)V
	public abstract fun register (Lelide/runtime/gvm/loader/ModuleInfo;Ljava/lang/Object;)V
}

public final class elide/runtime/gvm/loader/ModuleRegistry : elide/runtime/gvm/loader/ModuleRegistrar, elide/runtime/gvm/loader/ModuleResolver {
	public static final field INSTANCE Lelide/runtime/gvm/loader/ModuleRegistry;
	public fun contains (Lelide/runtime/gvm/loader/ModuleInfo;)Z
	public fun deferred (Lelide/runtime/gvm/loader/ModuleInfo;Lelide/runtime/gvm/loader/ModuleFactory;)V
	public fun load (Lelide/runtime/gvm/loader/ModuleInfo;)Ljava/lang/Object;
	public fun register (Lelide/runtime/gvm/loader/ModuleInfo;Ljava/lang/Object;)V
}

public abstract interface class elide/runtime/gvm/loader/ModuleResolver {
	public abstract fun contains (Lelide/runtime/gvm/loader/ModuleInfo;)Z
	public abstract fun load (Lelide/runtime/gvm/loader/ModuleInfo;)Ljava/lang/Object;
}

public abstract interface class elide/runtime/interop/InteropProxyObject : org/graalvm/polyglot/proxy/ProxyObject {
}

public abstract interface class elide/runtime/interop/ReadOnlyProxyObject : elide/runtime/interop/SealedProxyObject {
	public fun putMember (Ljava/lang/String;Lorg/graalvm/polyglot/Value;)V
	public fun removeMember (Ljava/lang/String;)Z
}

public abstract interface class elide/runtime/interop/SealedProxyObject : elide/runtime/interop/InteropProxyObject {
	public abstract fun getMemberKeys ()[Ljava/lang/String;
	public fun hasMember (Ljava/lang/String;)Z
}

public abstract interface class elide/runtime/lang/Language {
	public abstract fun getLanguageId ()Ljava/lang/String;
}

public abstract interface class elide/runtime/lang/Language$ContextConfigInvocation : org/graalvm/word/PointerBase {
	public abstract fun getApiVersion ()I
	public abstract fun getContextBuilder ()Lorg/graalvm/nativeimage/ObjectHandle;
	public abstract fun getEngine ()Lorg/graalvm/nativeimage/ObjectHandle;
}

public abstract interface class elide/runtime/lang/Language$EngineConfigInvocation : org/graalvm/word/PointerBase {
	public abstract fun getApiVersion ()I
	public abstract fun getEngineBuilder ()Lorg/graalvm/nativeimage/ObjectHandle;
}

public abstract interface class elide/runtime/lang/Language$LangContextConfigureFunctionPointer : org/graalvm/nativeimage/c/function/CFunctionPointer {
	public abstract fun invoke (Lorg/graalvm/nativeimage/IsolateThread;Lorg/graalvm/word/PointerBase;)V
}

public abstract interface class elide/runtime/lang/Language$LangEngineConfigureFunctionPointer : org/graalvm/nativeimage/c/function/CFunctionPointer {
	public abstract fun invoke (Lorg/graalvm/nativeimage/IsolateThread;Lorg/graalvm/word/PointerBase;)V
}

public abstract interface class elide/runtime/lang/Language$LangEntryFunctionPointer : org/graalvm/nativeimage/c/function/CFunctionPointer {
	public abstract fun invoke (Lorg/graalvm/nativeimage/IsolateThread;Lorg/graalvm/word/PointerBase;)V
}

public abstract interface class elide/runtime/lang/Language$LangInitFunctionPointer : org/graalvm/nativeimage/c/function/CFunctionPointer {
	public abstract fun invoke (Lorg/graalvm/nativeimage/IsolateThread;Lorg/graalvm/word/PointerBase;)V
}

public abstract interface class elide/runtime/lang/Language$NativeLangInvocation : org/graalvm/word/PointerBase {
	public abstract fun getApiVersion ()I
	public abstract fun getContext ()Lorg/graalvm/nativeimage/ObjectHandle;
	public abstract fun getElideDispatch ()Lorg/graalvm/nativeimage/ObjectHandle;
	public abstract fun getEngine ()Lorg/graalvm/nativeimage/ObjectHandle;
}

public abstract interface class elide/runtime/lang/Language$NativeLanguageInfo : org/graalvm/word/PointerBase {
	public abstract fun getApiVersion ()I
	public abstract fun getContextConfigureFunction ()Lelide/runtime/lang/Language$LangContextConfigureFunctionPointer;
	public abstract fun getEngineConfigureFunction ()Lelide/runtime/lang/Language$LangEngineConfigureFunctionPointer;
	public abstract fun getEntryFunction ()Lelide/runtime/lang/Language$LangEntryFunctionPointer;
	public abstract fun getInitFunction ()Lelide/runtime/lang/Language$LangInitFunctionPointer;
	public abstract fun getLangId ()Lorg/graalvm/nativeimage/c/type/CCharPointer;
	public abstract fun setApiVersion (I)V
	public abstract fun setContextConfigureFunction (Lelide/runtime/lang/Language$LangContextConfigureFunctionPointer;)V
	public abstract fun setEngineConfigureFunction (Lelide/runtime/lang/Language$LangEngineConfigureFunctionPointer;)V
	public abstract fun setEntryFunction (Lelide/runtime/lang/Language$LangEntryFunctionPointer;)V
	public abstract fun setInitFunction (Lelide/runtime/lang/Language$LangInitFunctionPointer;)V
	public abstract fun setLangId (Lorg/graalvm/nativeimage/c/type/CCharPointer;)V
}

public abstract interface class elide/runtime/lang/Language$NativeRuntimeInit : org/graalvm/word/PointerBase {
}

public class elide/runtime/lang/Language$PluginApiDirectives : org/graalvm/nativeimage/c/CContext$Directives {
	public fun <init> ()V
	public fun getHeaderFiles ()Ljava/util/List;
	public static fun getHeaderOptions ()Ljava/util/List;
	public static fun getHeaders ()Ljava/util/List;
	public fun getOptions ()Ljava/util/List;
}

public abstract interface class elide/runtime/lang/LanguagePlugin {
	public abstract fun getLanguageClass ()Ljava/lang/Class;
}

public abstract class elide/runtime/plugins/AbstractLanguageConfig {
	public static final field Companion Lelide/runtime/plugins/AbstractLanguageConfig$Companion;
	public fun <init> ()V
	protected final fun applyBindings (Lelide/runtime/core/PolyglotContext;Lelide/runtime/core/GuestLanguage;)V
	public static synthetic fun applyBindings$default (Lelide/runtime/plugins/AbstractLanguageConfig;Lelide/runtime/core/PolyglotContext;Lelide/runtime/core/GuestLanguage;ILjava/lang/Object;)V
	public final fun bindings (Lkotlin/jvm/functions/Function1;)V
	public final fun getExecutable ()Ljava/lang/String;
	public final fun getExecutableList ()Ljava/util/List;
	protected final fun getIntrinsicBindings ()Ljava/util/Map;
	public final fun getResourcesPath ()Ljava/lang/String;
	public final fun setExecutable (Ljava/lang/String;)V
	public final fun setExecutableList (Ljava/util/List;)V
	public final fun setResourcesPath (Ljava/lang/String;)V
}

public final class elide/runtime/plugins/AbstractLanguageConfig$Companion {
}

public abstract class elide/runtime/plugins/AbstractLanguagePlugin : elide/runtime/core/EnginePlugin, elide/runtime/core/GuestLanguage {
	protected static final field Companion Lelide/runtime/plugins/AbstractLanguagePlugin$Companion;
	public fun <init> ()V
	protected final fun configureLanguageSupport (Lelide/runtime/core/EnginePlugin$InstallationScope;)V
	protected final fun configureSharedBindings (Lelide/runtime/core/EnginePlugin$InstallationScope;Lelide/runtime/plugins/AbstractLanguageConfig;)V
	protected fun getManifestKey ()Ljava/lang/String;
	protected final fun initializeEmbeddedScripts (Lelide/runtime/core/PolyglotContext;Lelide/runtime/plugins/AbstractLanguagePlugin$LanguagePluginManifest;)V
	protected final fun installEmbeddedBundles (Lelide/runtime/core/EnginePlugin$InstallationScope;Lelide/runtime/plugins/AbstractLanguagePlugin$LanguagePluginManifest;)V
	protected final fun resolveEmbeddedManifest (Lelide/runtime/core/EnginePlugin$InstallationScope;Z)Lelide/runtime/plugins/AbstractLanguagePlugin$LanguagePluginManifest;
	protected final fun resolveEmbeddedManifest (Lelide/runtime/core/HostPlatform;Z)Lelide/runtime/plugins/AbstractLanguagePlugin$LanguagePluginManifest;
	public static synthetic fun resolveEmbeddedManifest$default (Lelide/runtime/plugins/AbstractLanguagePlugin;Lelide/runtime/core/EnginePlugin$InstallationScope;ZILjava/lang/Object;)Lelide/runtime/plugins/AbstractLanguagePlugin$LanguagePluginManifest;
	public static synthetic fun resolveEmbeddedManifest$default (Lelide/runtime/plugins/AbstractLanguagePlugin;Lelide/runtime/core/HostPlatform;ZILjava/lang/Object;)Lelide/runtime/plugins/AbstractLanguagePlugin$LanguagePluginManifest;
}

protected final class elide/runtime/plugins/AbstractLanguagePlugin$Companion {
}

public final class elide/runtime/plugins/AbstractLanguagePlugin$LanguagePluginManifest {
	public static final field Companion Lelide/runtime/plugins/AbstractLanguagePlugin$LanguagePluginManifest$Companion;
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Ljava/util/List;Ljava/util/Map;Ljava/lang/String;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Ljava/util/List;Ljava/util/Map;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/util/List;
	public final fun component4 ()Ljava/util/List;
	public final fun component5 ()Ljava/util/Map;
	public final fun component6 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Ljava/util/List;Ljava/util/Map;Ljava/lang/String;)Lelide/runtime/plugins/AbstractLanguagePlugin$LanguagePluginManifest;
	public static synthetic fun copy$default (Lelide/runtime/plugins/AbstractLanguagePlugin$LanguagePluginManifest;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Ljava/util/List;Ljava/util/Map;Ljava/lang/String;ILjava/lang/Object;)Lelide/runtime/plugins/AbstractLanguagePlugin$LanguagePluginManifest;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getBundles ()Ljava/util/List;
	public final fun getEngine ()Ljava/lang/String;
	public final fun getLanguage ()Ljava/lang/String;
	public final fun getResources ()Ljava/util/Map;
	public final fun getRoot ()Ljava/lang/String;
	public final fun getScripts ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class elide/runtime/plugins/AbstractLanguagePlugin$LanguagePluginManifest$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/runtime/plugins/AbstractLanguagePlugin$LanguagePluginManifest$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/runtime/plugins/AbstractLanguagePlugin$LanguagePluginManifest;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/runtime/plugins/AbstractLanguagePlugin$LanguagePluginManifest;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/runtime/plugins/AbstractLanguagePlugin$LanguagePluginManifest$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/runtime/plugins/AbstractLanguagePlugin$LanguagePluginManifest$EmbeddedResource {
	public static final field Companion Lelide/runtime/plugins/AbstractLanguagePlugin$LanguagePluginManifest$EmbeddedResource$Companion;
	public fun <init> (Ljava/lang/String;Lelide/runtime/core/HostPlatform;)V
	public synthetic fun <init> (Ljava/lang/String;Lelide/runtime/core/HostPlatform;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Lelide/runtime/core/HostPlatform;
	public final fun copy (Ljava/lang/String;Lelide/runtime/core/HostPlatform;)Lelide/runtime/plugins/AbstractLanguagePlugin$LanguagePluginManifest$EmbeddedResource;
	public static synthetic fun copy$default (Lelide/runtime/plugins/AbstractLanguagePlugin$LanguagePluginManifest$EmbeddedResource;Ljava/lang/String;Lelide/runtime/core/HostPlatform;ILjava/lang/Object;)Lelide/runtime/plugins/AbstractLanguagePlugin$LanguagePluginManifest$EmbeddedResource;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getPath ()Ljava/lang/String;
	public final fun getPlatform ()Lelide/runtime/core/HostPlatform;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class elide/runtime/plugins/AbstractLanguagePlugin$LanguagePluginManifest$EmbeddedResource$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/runtime/plugins/AbstractLanguagePlugin$LanguagePluginManifest$EmbeddedResource$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/runtime/plugins/AbstractLanguagePlugin$LanguagePluginManifest$EmbeddedResource;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/runtime/plugins/AbstractLanguagePlugin$LanguagePluginManifest$EmbeddedResource;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/runtime/plugins/AbstractLanguagePlugin$LanguagePluginManifest$EmbeddedResource$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/runtime/plugins/bindings/Bindings {
	public static final field Plugin Lelide/runtime/plugins/bindings/Bindings$Plugin;
	public synthetic fun <init> (Ljava/util/List;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun applyTo (Ljava/util/Map;Lelide/runtime/core/EnginePlugin$InstallationScope;)V
}

public final class elide/runtime/plugins/bindings/Bindings$Plugin : elide/runtime/core/EnginePlugin {
	public fun getKey-wLvarY0 ()Ljava/lang/String;
	public fun install (Lelide/runtime/core/EnginePlugin$InstallationScope;Lkotlin/jvm/functions/Function1;)Lelide/runtime/plugins/bindings/Bindings;
	public synthetic fun install (Lelide/runtime/core/EnginePlugin$InstallationScope;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;
}

public final class elide/runtime/plugins/bindings/BindingsConfig {
	public final fun getResolver ()Lelide/runtime/plugins/bindings/BindingsResolver;
	public final fun setResolver (Lelide/runtime/plugins/bindings/BindingsResolver;)V
}

public abstract interface class elide/runtime/plugins/bindings/BindingsInstaller {
	public abstract fun install (Ljava/util/Map;Lelide/runtime/core/EnginePlugin$InstallationScope;)V
}

public abstract interface class elide/runtime/plugins/bindings/BindingsResolver {
	public abstract fun resolveBindings ()Lkotlin/sequences/Sequence;
}

public final class elide/runtime/plugins/bindings/BindingsResolver$Empty : elide/runtime/plugins/bindings/BindingsResolver {
	public static final field INSTANCE Lelide/runtime/plugins/bindings/BindingsResolver$Empty;
	public fun resolveBindings ()Lkotlin/sequences/Sequence;
}

public abstract interface class elide/runtime/precompiler/Precompiler {
	public abstract fun invoke (Lelide/runtime/precompiler/Precompiler$PrecompileSourceRequest;Ljava/lang/Object;)Ljava/lang/Object;
	public fun precompile (Lelide/runtime/precompiler/Precompiler$PrecompileSourceRequest;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class elide/runtime/precompiler/Precompiler$BundleInfo {
	public abstract fun getName ()Ljava/lang/String;
	public abstract fun getPath ()Ljava/nio/file/Path;
}

public abstract interface class elide/runtime/precompiler/Precompiler$BundlePrecompiler : elide/runtime/precompiler/Precompiler {
}

public abstract interface class elide/runtime/precompiler/Precompiler$BytecodePrecompiler : elide/runtime/precompiler/Precompiler {
}

public abstract interface class elide/runtime/precompiler/Precompiler$Configuration {
}

public final class elide/runtime/precompiler/Precompiler$PrecompileSourceInfo : java/lang/Record {
	public fun <init> (Ljava/lang/String;Ljava/nio/file/Path;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/nio/file/Path;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/nio/file/Path;
	public final fun copy (Ljava/lang/String;Ljava/nio/file/Path;)Lelide/runtime/precompiler/Precompiler$PrecompileSourceInfo;
	public static synthetic fun copy$default (Lelide/runtime/precompiler/Precompiler$PrecompileSourceInfo;Ljava/lang/String;Ljava/nio/file/Path;ILjava/lang/Object;)Lelide/runtime/precompiler/Precompiler$PrecompileSourceInfo;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun name ()Ljava/lang/String;
	public final fun path ()Ljava/nio/file/Path;
	public fun toString ()Ljava/lang/String;
}

public final class elide/runtime/precompiler/Precompiler$PrecompileSourceRequest {
	public fun <init> (Lelide/runtime/precompiler/Precompiler$PrecompileSourceInfo;Ljava/lang/Object;)V
	public final fun getConfig ()Ljava/lang/Object;
	public final fun getSource ()Lelide/runtime/precompiler/Precompiler$PrecompileSourceInfo;
}

public abstract interface class elide/runtime/precompiler/Precompiler$Provider : java/util/function/Supplier {
}

public abstract interface class elide/runtime/precompiler/Precompiler$SourcePrecompiler : elide/runtime/precompiler/Precompiler {
}

public final class elide/runtime/precompiler/PrecompilerError : elide/runtime/precompiler/PrecompilerException {
	public fun <init> (Ljava/lang/String;)V
	public fun <init> (Ljava/lang/String;Ljava/lang/Throwable;)V
	public fun getFatal ()Z
}

public abstract class elide/runtime/precompiler/PrecompilerException : java/lang/RuntimeException {
	public synthetic fun <init> (Lelide/runtime/diag/Severity;Ljava/lang/String;Ljava/lang/Throwable;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public synthetic fun <init> (Ljava/lang/String;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun getFatal ()Z
	public fun getSeverity ()Lelide/runtime/diag/Severity;
}

public final class elide/runtime/precompiler/PrecompilerKt {
	public static final fun precompileSafe (Lelide/runtime/precompiler/Precompiler;Lelide/runtime/precompiler/Precompiler$PrecompileSourceRequest;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public class elide/runtime/precompiler/PrecompilerNotice : elide/runtime/precompiler/PrecompilerException {
	public static final field Companion Lelide/runtime/precompiler/PrecompilerNotice$Companion;
	public fun <init> (Lelide/runtime/diag/DiagnosticsSuite;Lelide/runtime/diag/Severity;Ljava/lang/String;Ljava/lang/Throwable;Z)V
	public synthetic fun <init> (Lelide/runtime/diag/DiagnosticsSuite;Lelide/runtime/diag/Severity;Ljava/lang/String;Ljava/lang/Throwable;ZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public static final fun from (Lelide/runtime/diag/DiagnosticsSuite;)Lelide/runtime/precompiler/PrecompilerNotice;
	public final fun getDiagnostics ()Lelide/runtime/diag/DiagnosticsSuite;
	public fun getFatal ()Z
}

public final class elide/runtime/precompiler/PrecompilerNotice$Companion {
	public final fun from (Lelide/runtime/diag/DiagnosticsSuite;)Lelide/runtime/precompiler/PrecompilerNotice;
}

public final class elide/runtime/precompiler/PrecompilerNoticeWithOutput : elide/runtime/precompiler/PrecompilerNotice {
	public static final field Companion Lelide/runtime/precompiler/PrecompilerNoticeWithOutput$Companion;
	public fun <init> (Lelide/runtime/diag/DiagnosticsSuite;Ljava/lang/Object;Lelide/runtime/diag/Severity;Ljava/lang/String;Ljava/lang/Throwable;Z)V
	public synthetic fun <init> (Lelide/runtime/diag/DiagnosticsSuite;Ljava/lang/Object;Lelide/runtime/diag/Severity;Ljava/lang/String;Ljava/lang/Throwable;ZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public static final fun from (Lelide/runtime/diag/DiagnosticsSuite;Ljava/lang/Object;)Lelide/runtime/precompiler/PrecompilerNoticeWithOutput;
	public final fun getOutput ()Ljava/lang/Object;
}

public final class elide/runtime/precompiler/PrecompilerNoticeWithOutput$Companion {
	public final fun from (Lelide/runtime/diag/DiagnosticsSuite;Ljava/lang/Object;)Lelide/runtime/precompiler/PrecompilerNoticeWithOutput;
}

public abstract interface class elide/runtime/vfs/GuestVFS : java/io/Closeable, java/lang/AutoCloseable, org/graalvm/polyglot/io/FileSystem {
	public abstract fun allowsHostFileAccess ()Z
	public abstract fun allowsHostSocketAccess ()Z
	public fun existsAny (Ljava/nio/file/Path;)Z
	public abstract fun getCompound ()Z
	public abstract fun getDeletable ()Z
	public abstract fun getHost ()Z
	public abstract fun getSupportsSymlinks ()Z
	public abstract fun getVirtual ()Z
	public abstract fun getWritable ()Z
}

public abstract interface class elide/runtime/vfs/GuestVFS$VFSConfigurator {
	public abstract fun bundles ()Ljava/util/List;
}

public abstract interface class elide/runtime/vfs/LanguageVFS : elide/runtime/vfs/GuestVFS {
	public abstract fun accepts (Ljava/nio/file/Path;)Z
	public abstract fun getLanguageId ()Ljava/lang/String;
}

public abstract interface class elide/runtime/vfs/LanguageVFS$LanguageVFSInfo {
	public abstract fun getFsProvider ()Lkotlin/jvm/functions/Function0;
	public abstract fun getRouter ()Lkotlin/jvm/functions/Function1;
}

public final class elide/runtime/vfs/LanguageVFSKt {
	public static final fun languageVfsRegistry ()Ljava/util/Map;
	public static final fun registerLanguageVfs (Ljava/lang/String;Lkotlin/jvm/functions/Function0;)V
}

