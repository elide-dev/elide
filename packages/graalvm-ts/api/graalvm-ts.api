public class elide/runtime/lang/typescript/TypeScriptLanguage : com/oracle/truffle/api/TruffleLanguage {
	public static final field APPLICATION_MIME_TYPE Ljava/lang/String;
	public static final field ID Ljava/lang/String;
	public static final field IMPLEMENTATION_NAME Ljava/lang/String;
	public static final field MODULE_MIME_TYPE Ljava/lang/String;
	public static final field NAME Ljava/lang/String;
	public static final field TEXT_MIME_TYPE Ljava/lang/String;
	public fun <init> ()V
	protected fun createContext (Lcom/oracle/truffle/api/TruffleLanguage$Env;)Lcom/oracle/truffle/js/runtime/JSRealm;
	protected synthetic fun createContext (Lcom/oracle/truffle/api/TruffleLanguage$Env;)Ljava/lang/Object;
	protected fun finalizeContext (Lcom/oracle/truffle/js/runtime/JSRealm;)V
	protected synthetic fun finalizeContext (Ljava/lang/Object;)V
	protected fun parse (Lcom/oracle/truffle/api/TruffleLanguage$ParsingRequest;)Lcom/oracle/truffle/api/CallTarget;
}

public final class elide/runtime/lang/typescript/TypeScriptLanguageProvider : com/oracle/truffle/api/provider/TruffleLanguageProvider {
	public fun <init> ()V
}

public class elide/runtime/lang/typescript/internals/JSRealmPatcher {
	public fun <init> ()V
	public static fun setTSModuleLoader (Lcom/oracle/truffle/js/runtime/JSRealm;Lelide/runtime/lang/typescript/internals/TypeScriptModuleLoader;)V
}

public class elide/runtime/lang/typescript/internals/TypeScriptCompiler : java/lang/AutoCloseable {
	public fun <init> (Lcom/oracle/truffle/api/TruffleLanguage$Env;)V
	public fun close ()V
	public fun compileToNewSource (Ljava/lang/CharSequence;Ljava/lang/String;ZLjava/lang/String;)Lcom/oracle/truffle/api/source/Source;
	public fun compileToString (Ljava/lang/CharSequence;Ljava/lang/String;)Ljava/lang/String;
}

public class elide/runtime/lang/typescript/internals/TypeScriptFileTypeDetector : com/oracle/truffle/api/TruffleFile$FileTypeDetector {
	public fun <init> ()V
	public fun findEncoding (Lcom/oracle/truffle/api/TruffleFile;)Ljava/nio/charset/Charset;
	public fun findMimeType (Lcom/oracle/truffle/api/TruffleFile;)Ljava/lang/String;
}

public class elide/runtime/lang/typescript/internals/TypeScriptModuleLoader : com/oracle/truffle/js/runtime/objects/DefaultESModuleLoader {
	public fun <init> (Lcom/oracle/truffle/js/runtime/JSRealm;Lelide/runtime/lang/typescript/internals/TypeScriptCompiler;)V
	public fun loadModule (Lcom/oracle/truffle/api/source/Source;Lcom/oracle/truffle/js/runtime/objects/JSModuleData;)Lcom/oracle/truffle/js/runtime/objects/JSModuleRecord;
	protected fun loadModuleFromUrl (Lcom/oracle/truffle/js/runtime/objects/ScriptOrModule;Lcom/oracle/js/parser/ir/Module$ModuleRequest;Lcom/oracle/truffle/api/TruffleFile;Ljava/lang/String;)Lcom/oracle/truffle/js/runtime/objects/JSModuleRecord;
	public fun resolveImportedModule (Lcom/oracle/truffle/js/runtime/objects/ScriptOrModule;Lcom/oracle/js/parser/ir/Module$ModuleRequest;)Lcom/oracle/truffle/js/runtime/objects/JSModuleRecord;
}

public final class elide/runtime/plugins/typescript/TypeScript {
	public static final field Plugin Lelide/runtime/plugins/typescript/TypeScript$Plugin;
	public fun <init> (Lelide/runtime/plugins/typescript/TypeScriptConfig;Lelide/runtime/plugins/AbstractLanguagePlugin$LanguagePluginManifest;)V
}

public final class elide/runtime/plugins/typescript/TypeScript$Plugin : elide/runtime/plugins/AbstractLanguagePlugin {
	public fun getKey-wLvarY0 ()Ljava/lang/String;
	public fun getLanguageId ()Ljava/lang/String;
	public fun install (Lelide/runtime/core/EnginePlugin$InstallationScope;Lkotlin/jvm/functions/Function1;)Lelide/runtime/plugins/typescript/TypeScript;
	public synthetic fun install (Lelide/runtime/core/EnginePlugin$InstallationScope;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;
}

public final class elide/runtime/plugins/typescript/TypeScriptConfig : elide/runtime/plugins/AbstractLanguageConfig {
	public fun <init> ()V
}

