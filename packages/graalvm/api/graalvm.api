public abstract interface annotation class elide/runtime/core/DelicateElideApi : java/lang/annotation/Annotation {
}

public final class elide/runtime/core/EngineFactoryKt {
	public static final fun PolyglotEngine (Lkotlin/jvm/functions/Function1;)Lelide/runtime/core/PolyglotEngine;
	public static synthetic fun PolyglotEngine$default (Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lelide/runtime/core/PolyglotEngine;
}

public abstract interface class elide/runtime/core/EngineLifecycle {
	public abstract fun on (Lelide/runtime/core/EngineLifecycleEvent;Lkotlin/jvm/functions/Function1;)V
}

public abstract interface class elide/runtime/core/EngineLifecycleEvent {
}

public final class elide/runtime/core/EngineLifecycleEvent$ContextCreated : elide/runtime/core/EngineLifecycleEvent {
	public static final field INSTANCE Lelide/runtime/core/EngineLifecycleEvent$ContextCreated;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class elide/runtime/core/EngineLifecycleEvent$ContextInitialized : elide/runtime/core/EngineLifecycleEvent {
	public static final field INSTANCE Lelide/runtime/core/EngineLifecycleEvent$ContextInitialized;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class elide/runtime/core/EngineLifecycleEvent$EngineCreated : elide/runtime/core/EngineLifecycleEvent {
	public static final field INSTANCE Lelide/runtime/core/EngineLifecycleEvent$EngineCreated;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class elide/runtime/core/EngineLifecycleEvent$EngineInitialized : elide/runtime/core/EngineLifecycleEvent {
	public static final field INSTANCE Lelide/runtime/core/EngineLifecycleEvent$EngineInitialized;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract interface class elide/runtime/core/EnginePlugin {
	public abstract fun getKey-wLvarY0 ()Ljava/lang/String;
	public abstract fun install (Lelide/runtime/core/EnginePlugin$InstallationScope;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;
}

public abstract interface class elide/runtime/core/EnginePlugin$InstallationScope {
	public abstract fun getConfiguration ()Lelide/runtime/core/PolyglotEngineConfiguration;
	public abstract fun getLifecycle ()Lelide/runtime/core/EngineLifecycle;
}

public final class elide/runtime/core/EnginePlugin$Key {
	public static final synthetic fun box-impl (Ljava/lang/String;)Lelide/runtime/core/EnginePlugin$Key;
	public static fun constructor-impl (Ljava/lang/String;)Ljava/lang/String;
	public fun equals (Ljava/lang/Object;)Z
	public static fun equals-impl (Ljava/lang/String;Ljava/lang/Object;)Z
	public static final fun equals-impl0 (Ljava/lang/String;Ljava/lang/String;)Z
	public final fun getId ()Ljava/lang/String;
	public fun hashCode ()I
	public static fun hashCode-impl (Ljava/lang/String;)I
	public fun toString ()Ljava/lang/String;
	public static fun toString-impl (Ljava/lang/String;)Ljava/lang/String;
	public final synthetic fun unbox-impl ()Ljava/lang/String;
}

public abstract interface class elide/runtime/core/GuestLanguage {
	public abstract fun getLanguageId ()Ljava/lang/String;
}

public abstract interface class elide/runtime/core/GuestLanguageEvaluator {
	public static final field Companion Lelide/runtime/core/GuestLanguageEvaluator$Companion;
	public fun accepts (Lorg/graalvm/polyglot/Source;)Z
	public abstract fun evaluate (Lorg/graalvm/polyglot/Source;Lelide/runtime/core/PolyglotContext;)Lorg/graalvm/polyglot/Value;
}

public final class elide/runtime/core/GuestLanguageEvaluator$Companion {
	public final fun contextElementFor-SZJLGgY (Lelide/runtime/core/GuestLanguage;)Ljava/lang/String;
	public final fun contextElementFor-SZJLGgY (Ljava/lang/String;)Ljava/lang/String;
}

public abstract interface class elide/runtime/core/GuestLanguageParser {
	public static final field Companion Lelide/runtime/core/GuestLanguageParser$Companion;
	public fun accepts (Lorg/graalvm/polyglot/Source;)Z
	public abstract fun parse (Lorg/graalvm/polyglot/Source;Lelide/runtime/core/PolyglotContext;)Lorg/graalvm/polyglot/Value;
}

public final class elide/runtime/core/GuestLanguageParser$Companion {
	public final fun contextElementFor-SZJLGgY (Lelide/runtime/core/GuestLanguage;)Ljava/lang/String;
	public final fun contextElementFor-SZJLGgY (Ljava/lang/String;)Ljava/lang/String;
}

public final class elide/runtime/core/HostPlatform {
	public static final field Companion Lelide/runtime/core/HostPlatform$Companion;
	public fun <init> (Lelide/runtime/core/HostPlatform$OperatingSystem;Lelide/runtime/core/HostPlatform$Architecture;)V
	public final fun component1 ()Lelide/runtime/core/HostPlatform$OperatingSystem;
	public final fun component2 ()Lelide/runtime/core/HostPlatform$Architecture;
	public final fun copy (Lelide/runtime/core/HostPlatform$OperatingSystem;Lelide/runtime/core/HostPlatform$Architecture;)Lelide/runtime/core/HostPlatform;
	public static synthetic fun copy$default (Lelide/runtime/core/HostPlatform;Lelide/runtime/core/HostPlatform$OperatingSystem;Lelide/runtime/core/HostPlatform$Architecture;ILjava/lang/Object;)Lelide/runtime/core/HostPlatform;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getArch ()Lelide/runtime/core/HostPlatform$Architecture;
	public final fun getOs ()Lelide/runtime/core/HostPlatform$OperatingSystem;
	public fun hashCode ()I
	public final fun platformString ()Ljava/lang/String;
	public fun toString ()Ljava/lang/String;
}

public final class elide/runtime/core/HostPlatform$Architecture : java/lang/Enum {
	public static final field AMD64 Lelide/runtime/core/HostPlatform$Architecture;
	public static final field ARM64 Lelide/runtime/core/HostPlatform$Architecture;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public static fun valueOf (Ljava/lang/String;)Lelide/runtime/core/HostPlatform$Architecture;
	public static fun values ()[Lelide/runtime/core/HostPlatform$Architecture;
}

public final class elide/runtime/core/HostPlatform$Companion {
	public final fun parseArchitecture (Ljava/lang/String;)Lelide/runtime/core/HostPlatform$Architecture;
	public final fun parseOperatingSystem (Ljava/lang/String;)Lelide/runtime/core/HostPlatform$OperatingSystem;
	public final fun parsePlatform (Ljava/lang/String;)Lelide/runtime/core/HostPlatform;
	public final fun resolve ()Lelide/runtime/core/HostPlatform;
}

public final class elide/runtime/core/HostPlatform$OperatingSystem : java/lang/Enum {
	public static final field DARWIN Lelide/runtime/core/HostPlatform$OperatingSystem;
	public static final field LINUX Lelide/runtime/core/HostPlatform$OperatingSystem;
	public static final field WINDOWS Lelide/runtime/core/HostPlatform$OperatingSystem;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public static fun valueOf (Ljava/lang/String;)Lelide/runtime/core/HostPlatform$OperatingSystem;
	public static fun values ()[Lelide/runtime/core/HostPlatform$OperatingSystem;
}

public final class elide/runtime/core/HostPlatformKt {
	public static final fun isUnix (Lelide/runtime/core/HostPlatform$OperatingSystem;)Z
}

public abstract interface class elide/runtime/core/HostRuntime {
	public abstract fun getName ()Ljava/lang/String;
	public abstract fun getVariant ()Ljava/lang/String;
	public abstract fun getVersion ()Lelide/runtime/core/Version;
}

public final class elide/runtime/core/HostRuntimeKt {
	public static final fun on (Lelide/runtime/core/HostRuntime;Lelide/runtime/core/Version$Range;Lkotlin/jvm/functions/Function0;)Ljava/lang/Object;
	public static final fun on (Lelide/runtime/core/HostRuntime;Lelide/runtime/core/Version;Lkotlin/jvm/functions/Function0;)Ljava/lang/Object;
}

public abstract interface class elide/runtime/core/PluginRegistry {
	public abstract fun install (Lelide/runtime/core/EnginePlugin;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;
	public static synthetic fun install$default (Lelide/runtime/core/PluginRegistry;Lelide/runtime/core/EnginePlugin;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Ljava/lang/Object;
	public abstract fun plugin-LqGrbaI (Ljava/lang/String;)Ljava/lang/Object;
}

public final class elide/runtime/core/PluginRegistryKt {
	public static final fun getOrInstall (Lelide/runtime/core/PluginRegistry;Lelide/runtime/core/EnginePlugin;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;
	public static synthetic fun getOrInstall$default (Lelide/runtime/core/PluginRegistry;Lelide/runtime/core/EnginePlugin;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Ljava/lang/Object;
	public static final fun plugin (Lelide/runtime/core/PluginRegistry;Lelide/runtime/core/EnginePlugin;)Ljava/lang/Object;
	public static final fun requirePlugin (Lelide/runtime/core/PluginRegistry;Lelide/runtime/core/EnginePlugin;)Ljava/lang/Object;
	public static final fun requirePlugin-TZlicS8 (Lelide/runtime/core/PluginRegistry;Ljava/lang/String;)Ljava/lang/Object;
}

public abstract interface class elide/runtime/core/PolyglotContext {
	public abstract fun bindings (Lelide/runtime/core/GuestLanguage;)Lorg/graalvm/polyglot/Value;
	public static synthetic fun bindings$default (Lelide/runtime/core/PolyglotContext;Lelide/runtime/core/GuestLanguage;ILjava/lang/Object;)Lorg/graalvm/polyglot/Value;
	public abstract fun enter ()V
	public abstract fun evaluate (Lorg/graalvm/polyglot/Source;)Lorg/graalvm/polyglot/Value;
	public abstract fun get-HY--Dws (Ljava/lang/String;)Ljava/lang/Object;
	public abstract fun leave ()V
	public abstract fun parse (Lorg/graalvm/polyglot/Source;)Lorg/graalvm/polyglot/Value;
	public abstract fun set-HRLGfaQ (Ljava/lang/String;Ljava/lang/Object;)Z
}

public final class elide/runtime/core/PolyglotContextElement {
	public static final synthetic fun box-impl (Ljava/lang/String;)Lelide/runtime/core/PolyglotContextElement;
	public static fun constructor-impl (Ljava/lang/String;)Ljava/lang/String;
	public fun equals (Ljava/lang/Object;)Z
	public static fun equals-impl (Ljava/lang/String;Ljava/lang/Object;)Z
	public static final fun equals-impl0 (Ljava/lang/String;Ljava/lang/String;)Z
	public final fun getKey ()Ljava/lang/String;
	public fun hashCode ()I
	public static fun hashCode-impl (Ljava/lang/String;)I
	public fun toString ()Ljava/lang/String;
	public static fun toString-impl (Ljava/lang/String;)Ljava/lang/String;
	public final synthetic fun unbox-impl ()Ljava/lang/String;
}

public final class elide/runtime/core/PolyglotContextKt {
	public static final fun evaluate (Lelide/runtime/core/PolyglotContext;Lelide/runtime/core/GuestLanguage;Ljava/lang/String;Ljava/lang/String;Z)Lorg/graalvm/polyglot/Value;
	public static synthetic fun evaluate$default (Lelide/runtime/core/PolyglotContext;Lelide/runtime/core/GuestLanguage;Ljava/lang/String;Ljava/lang/String;ZILjava/lang/Object;)Lorg/graalvm/polyglot/Value;
	public static final fun parse (Lelide/runtime/core/PolyglotContext;Lelide/runtime/core/GuestLanguage;Ljava/lang/String;Ljava/lang/String;Z)Lorg/graalvm/polyglot/Value;
	public static synthetic fun parse$default (Lelide/runtime/core/PolyglotContext;Lelide/runtime/core/GuestLanguage;Ljava/lang/String;Ljava/lang/String;ZILjava/lang/Object;)Lorg/graalvm/polyglot/Value;
}

public abstract interface class elide/runtime/core/PolyglotEngine {
	public abstract fun acquire ()Lelide/runtime/core/PolyglotContext;
}

public abstract class elide/runtime/core/PolyglotEngineConfiguration : elide/runtime/core/PluginRegistry {
	public abstract fun enableLanguage (Lelide/runtime/core/GuestLanguage;)V
	public final fun getHostAccess ()Lelide/runtime/core/PolyglotEngineConfiguration$HostAccess;
	public final fun getHostPlatform ()Lelide/runtime/core/HostPlatform;
	public abstract fun getHostRuntime ()Lelide/runtime/core/HostRuntime;
	public final fun setHostAccess (Lelide/runtime/core/PolyglotEngineConfiguration$HostAccess;)V
}

public final class elide/runtime/core/PolyglotEngineConfiguration$HostAccess : java/lang/Enum {
	public static final field ALLOW_ALL Lelide/runtime/core/PolyglotEngineConfiguration$HostAccess;
	public static final field ALLOW_ENV Lelide/runtime/core/PolyglotEngineConfiguration$HostAccess;
	public static final field ALLOW_IO Lelide/runtime/core/PolyglotEngineConfiguration$HostAccess;
	public static final field ALLOW_NONE Lelide/runtime/core/PolyglotEngineConfiguration$HostAccess;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public static fun valueOf (Ljava/lang/String;)Lelide/runtime/core/PolyglotEngineConfiguration$HostAccess;
	public static fun values ()[Lelide/runtime/core/PolyglotEngineConfiguration$HostAccess;
}

public final class elide/runtime/core/Version : java/lang/Comparable {
	public static final field Companion Lelide/runtime/core/Version$Companion;
	public fun <init> (III)V
	public synthetic fun <init> (IIIILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun compareTo (Lelide/runtime/core/Version;)I
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public final fun component1 ()I
	public final fun component2 ()I
	public final fun component3 ()I
	public final fun copy (III)Lelide/runtime/core/Version;
	public static synthetic fun copy$default (Lelide/runtime/core/Version;IIIILjava/lang/Object;)Lelide/runtime/core/Version;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getMajor ()I
	public final fun getMinor ()I
	public final fun getPatch ()I
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class elide/runtime/core/Version$Companion {
	public final fun getZero ()Lelide/runtime/core/Version;
	public final fun parse (Ljava/lang/String;)Lelide/runtime/core/Version;
}

public final class elide/runtime/core/Version$Range {
	public fun <init> ()V
	public fun <init> (Lelide/runtime/core/Version;Lelide/runtime/core/Version;ZZ)V
	public synthetic fun <init> (Lelide/runtime/core/Version;Lelide/runtime/core/Version;ZZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Lelide/runtime/core/Version;
	public final fun component2 ()Lelide/runtime/core/Version;
	public final fun component3 ()Z
	public final fun component4 ()Z
	public final fun contains (Lelide/runtime/core/Version;)Z
	public final fun copy (Lelide/runtime/core/Version;Lelide/runtime/core/Version;ZZ)Lelide/runtime/core/Version$Range;
	public static synthetic fun copy$default (Lelide/runtime/core/Version$Range;Lelide/runtime/core/Version;Lelide/runtime/core/Version;ZZILjava/lang/Object;)Lelide/runtime/core/Version$Range;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getIncludeMax ()Z
	public final fun getIncludeMin ()Z
	public final fun getMax ()Lelide/runtime/core/Version;
	public final fun getMin ()Lelide/runtime/core/Version;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class elide/runtime/core/VersionKt {
	public static final fun andHigher (Lelide/runtime/core/Version;)Lelide/runtime/core/Version$Range;
	public static final fun andLower (Lelide/runtime/core/Version;)Lelide/runtime/core/Version$Range;
}

public final class elide/runtime/core/extensions/ContextBuilderKt {
	public static final fun disableOption (Lorg/graalvm/polyglot/Context$Builder;Ljava/lang/String;)V
	public static final fun disableOptions (Lorg/graalvm/polyglot/Context$Builder;[Ljava/lang/String;)V
	public static final fun enableOption (Lorg/graalvm/polyglot/Context$Builder;Ljava/lang/String;)V
	public static final fun enableOptions (Lorg/graalvm/polyglot/Context$Builder;[Ljava/lang/String;)V
	public static final fun setBooleanOptions (Lorg/graalvm/polyglot/Context$Builder;[Lkotlin/Pair;)V
	public static final fun setOption (Lorg/graalvm/polyglot/Context$Builder;Ljava/lang/String;Z)V
	public static final fun setOptions (Lorg/graalvm/polyglot/Context$Builder;[Lkotlin/Pair;)V
}

public final class elide/runtime/core/extensions/EngineBuilderKt {
	public static final fun disableOption (Lorg/graalvm/polyglot/Engine$Builder;Ljava/lang/String;)V
	public static final fun disableOptions (Lorg/graalvm/polyglot/Engine$Builder;[Ljava/lang/String;)V
	public static final fun enableOption (Lorg/graalvm/polyglot/Engine$Builder;Ljava/lang/String;)V
	public static final fun enableOptions (Lorg/graalvm/polyglot/Engine$Builder;[Ljava/lang/String;)V
	public static final fun setBooleanOptions (Lorg/graalvm/polyglot/Engine$Builder;[Lkotlin/Pair;)V
	public static final fun setOption (Lorg/graalvm/polyglot/Engine$Builder;Ljava/lang/String;Z)V
	public static final fun setOptions (Lorg/graalvm/polyglot/Engine$Builder;[Lkotlin/Pair;)V
}

public final class elide/runtime/core/extensions/ExecutionListenerKt {
	public static final fun attach (Lorg/graalvm/polyglot/management/ExecutionListener$Builder;Lelide/runtime/core/PolyglotEngine;)Lorg/graalvm/polyglot/management/ExecutionListener;
}

public final class elide/runtime/core/internals/graalvm/GraalVMRuntime : elide/runtime/core/HostRuntime {
	public static final field Companion Lelide/runtime/core/internals/graalvm/GraalVMRuntime$Companion;
	public static final field VARIANT_JVM Ljava/lang/String;
	public static final field VARIANT_NATIVE Ljava/lang/String;
	public fun <init> ()V
	public fun <init> (Lelide/runtime/core/Version;Ljava/lang/String;)V
	public synthetic fun <init> (Lelide/runtime/core/Version;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun getName ()Ljava/lang/String;
	public final fun getNative ()Z
	public fun getVariant ()Ljava/lang/String;
	public fun getVersion ()Lelide/runtime/core/Version;
}

public final class elide/runtime/core/internals/graalvm/GraalVMRuntime$Companion {
	public final fun getGVM_23 ()Lelide/runtime/core/Version;
	public final fun getGVM_23_1 ()Lelide/runtime/core/Version;
}

public final class elide/runtime/core/internals/graalvm/GraalVMRuntimeKt {
	public static final fun isNativeImage (Lelide/runtime/core/HostRuntime;)Z
}

public abstract interface class elide/runtime/feature/FrameworkFeature : org/graalvm/nativeimage/hosted/Feature {
	public fun findClassesInJar (Ljava/net/JarURLConnection;Ljava/lang/String;)Ljava/util/List;
	public abstract fun getDescription ()Ljava/lang/String;
	public fun getMethodOrFail (Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
	public fun getURL ()Ljava/lang/String;
	public fun logging ()Lelide/runtime/Logger;
	public fun registerClassForReflection (Lorg/graalvm/nativeimage/hosted/Feature$FeatureAccess;Ljava/lang/String;)V
	public fun registerClassHierarchyForReflection (Lorg/graalvm/nativeimage/hosted/Feature$FeatureAccess;Ljava/lang/String;)V
	public fun registerConstructorsForReflection (Lorg/graalvm/nativeimage/hosted/Feature$FeatureAccess;Ljava/lang/String;)V
	public fun registerForReflectiveInstantiation (Lorg/graalvm/nativeimage/hosted/Feature$FeatureAccess;Ljava/lang/String;)V
	public fun registerForUnsafeFieldAccess (Lorg/graalvm/nativeimage/hosted/Feature$FeatureAccess;Ljava/lang/String;[Ljava/lang/String;)V
	public fun registerPackageForReflection (Lorg/graalvm/nativeimage/hosted/Feature$FeatureAccess;Ljava/lang/String;)V
}

public final synthetic class elide/runtime/gvm/$VMFacadeFactory$Definition$Reference : io/micronaut/context/AbstractInitializableBeanDefinitionReference {
	public static final field $ANNOTATION_METADATA Lio/micronaut/core/annotation/AnnotationMetadata;
	public fun <init> ()V
	public fun getBeanDefinitionType ()Ljava/lang/Class;
	public fun getBeanType ()Ljava/lang/Class;
	public fun load ()Lio/micronaut/inject/BeanDefinition;
}

public abstract interface class elide/runtime/gvm/ContextFactory {
	public abstract fun acquire (Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;
	public static synthetic fun acquire$default (Lelide/runtime/gvm/ContextFactory;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Ljava/lang/Object;
	public abstract fun activate (Z)V
	public static synthetic fun activate$default (Lelide/runtime/gvm/ContextFactory;ZILjava/lang/Object;)V
	public abstract fun configureVM (Ljava/util/stream/Stream;)V
	public abstract fun installContextConfigurator (Lkotlin/jvm/functions/Function1;)V
	public abstract fun installContextFactory (Lkotlin/jvm/functions/Function1;)V
	public abstract fun installContextSpawn (Lkotlin/jvm/functions/Function1;)V
	public fun invoke (Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;
}

public abstract class elide/runtime/gvm/DeveloperScript : elide/runtime/gvm/ExecutableScript {
	public fun <init> ()V
}

public abstract interface class elide/runtime/gvm/ExecutableScript {
	public abstract fun invocation ()Ljava/util/EnumSet;
	public abstract fun language ()Lelide/runtime/gvm/GuestLanguage;
	public abstract fun map-IKyDTes ()Ljava/lang/String;
	public abstract fun source-ulLWtvI ()Ljava/lang/String;
	public abstract fun state ()Lelide/runtime/gvm/ExecutableScript$State;
	public abstract fun type-MGZnejY ()Ljava/lang/String;
}

public final class elide/runtime/gvm/ExecutableScript$ScriptSource {
	public static final synthetic fun box-impl (Ljava/lang/String;)Lelide/runtime/gvm/ExecutableScript$ScriptSource;
	public fun equals (Ljava/lang/Object;)Z
	public static fun equals-impl (Ljava/lang/String;Ljava/lang/Object;)Z
	public static final fun equals-impl0 (Ljava/lang/String;Ljava/lang/String;)Z
	public static final fun fromEmbedded-VA3aAn0 (Ljava/lang/String;)Ljava/lang/String;
	public static final fun fromFile-VA3aAn0 (Ljava/lang/String;)Ljava/lang/String;
	public static final fun fromResource-VA3aAn0 (Ljava/lang/String;)Ljava/lang/String;
	public static final fun getLITERAL-ulLWtvI ()Ljava/lang/String;
	public fun hashCode ()I
	public static fun hashCode-impl (Ljava/lang/String;)I
	public fun toString ()Ljava/lang/String;
	public static fun toString-impl (Ljava/lang/String;)Ljava/lang/String;
	public final synthetic fun unbox-impl ()Ljava/lang/String;
}

public final class elide/runtime/gvm/ExecutableScript$ScriptType {
	public static final synthetic fun box-impl (Ljava/lang/String;)Lelide/runtime/gvm/ExecutableScript$ScriptType;
	public fun equals (Ljava/lang/Object;)Z
	public static fun equals-impl (Ljava/lang/String;Ljava/lang/Object;)Z
	public static final fun equals-impl0 (Ljava/lang/String;Ljava/lang/String;)Z
	public static final fun fromMime-v8v4A0M (Ljava/lang/String;)Ljava/lang/String;
	public fun hashCode ()I
	public static fun hashCode-impl (Ljava/lang/String;)I
	public fun toString ()Ljava/lang/String;
	public static fun toString-impl (Ljava/lang/String;)Ljava/lang/String;
	public final synthetic fun unbox-impl ()Ljava/lang/String;
}

public final class elide/runtime/gvm/ExecutableScript$SourceMap {
	public static final synthetic fun box-impl (Ljava/lang/String;)Lelide/runtime/gvm/ExecutableScript$SourceMap;
	public static fun constructor-impl (Ljava/lang/String;)Ljava/lang/String;
	public fun equals (Ljava/lang/Object;)Z
	public static fun equals-impl (Ljava/lang/String;Ljava/lang/Object;)Z
	public static final fun equals-impl0 (Ljava/lang/String;Ljava/lang/String;)Z
	public fun hashCode ()I
	public static fun hashCode-impl (Ljava/lang/String;)I
	public fun toString ()Ljava/lang/String;
	public static fun toString-impl (Ljava/lang/String;)Ljava/lang/String;
	public final synthetic fun unbox-impl ()Ljava/lang/String;
}

public final class elide/runtime/gvm/ExecutableScript$State : java/lang/Enum {
	public static final field EVALUATED Lelide/runtime/gvm/ExecutableScript$State;
	public static final field EXECUTED Lelide/runtime/gvm/ExecutableScript$State;
	public static final field PARSED Lelide/runtime/gvm/ExecutableScript$State;
	public static final field UNINITIALIZED Lelide/runtime/gvm/ExecutableScript$State;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public static fun valueOf (Ljava/lang/String;)Lelide/runtime/gvm/ExecutableScript$State;
	public static fun values ()[Lelide/runtime/gvm/ExecutableScript$State;
}

public abstract interface class elide/runtime/gvm/ExecutionInputs {
	public static final field Companion Lelide/runtime/gvm/ExecutionInputs$Companion;
	public abstract fun allInputs ()[Ljava/lang/Object;
	public fun buildArguments ()[Ljava/lang/Object;
	public static fun getEMPTY ()Lelide/runtime/gvm/ExecutionInputs;
}

public final class elide/runtime/gvm/ExecutionInputs$Companion {
	public final fun getEMPTY ()Lelide/runtime/gvm/ExecutionInputs;
}

public final class elide/runtime/gvm/ExecutionInputs$Empty : elide/runtime/gvm/ExecutionInputs {
	public static final field INSTANCE Lelide/runtime/gvm/ExecutionInputs$Empty;
	public fun allInputs ()[Ljava/lang/Object;
}

public abstract interface class elide/runtime/gvm/GuestLanguage {
	public static final field Companion Lelide/runtime/gvm/GuestLanguage$Companion;
	public abstract fun getEngine ()Ljava/lang/String;
	public fun getInvocationModes ()Ljava/util/EnumSet;
	public abstract fun getLabel ()Ljava/lang/String;
	public fun getSupportsSSR ()Z
	public fun getSupportsStreamingSSR ()Z
	public abstract fun getSymbol ()Ljava/lang/String;
}

public final class elide/runtime/gvm/GuestLanguage$Companion {
	public final fun getJAVASCRIPT ()Lelide/runtime/gvm/GuestLanguage;
	public final fun getJVM ()Lelide/runtime/gvm/GuestLanguage;
	public final fun getPYTHON ()Lelide/runtime/gvm/GuestLanguage;
	public final fun getRUBY ()Lelide/runtime/gvm/GuestLanguage;
	public final fun getWASM ()Lelide/runtime/gvm/GuestLanguage;
}

public abstract interface class elide/runtime/gvm/GuestScript : elide/runtime/gvm/ExecutableScript {
}

public abstract interface class elide/runtime/gvm/InvocationBindings {
}

public final class elide/runtime/gvm/InvocationMode : java/lang/Enum {
	public static final field ASYNC Lelide/runtime/gvm/InvocationMode;
	public static final field STREAMING Lelide/runtime/gvm/InvocationMode;
	public static final field SYNC Lelide/runtime/gvm/InvocationMode;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public static fun valueOf (Ljava/lang/String;)Lelide/runtime/gvm/InvocationMode;
	public static fun values ()[Lelide/runtime/gvm/InvocationMode;
}

public abstract interface class elide/runtime/gvm/MicronautRequestExecutionInputs : elide/runtime/gvm/RequestExecutionInputs {
	public fun path ()Ljava/lang/String;
}

public abstract interface class elide/runtime/gvm/RequestExecutionInputs : elide/runtime/gvm/ExecutionInputs {
	public fun allInputs ()[Ljava/lang/Object;
	public fun path ()Ljava/lang/String;
	public abstract fun request ()Ljava/lang/Object;
}

public final class elide/runtime/gvm/RequestExecutionInputs$Defaults {
	public static final field DEFAULT_PATH Ljava/lang/String;
	public static final field INSTANCE Lelide/runtime/gvm/RequestExecutionInputs$Defaults;
}

public abstract interface class elide/runtime/gvm/VMEngine : elide/runtime/gvm/VMFacade {
}

public abstract interface class elide/runtime/gvm/VMEngineImpl : elide/runtime/gvm/VMEngine {
}

public abstract interface class elide/runtime/gvm/VMFacade {
	public abstract fun execute (Lelide/runtime/gvm/ExecutableScript;Ljava/lang/Class;Lelide/runtime/gvm/ExecutionInputs;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun executeAsync (Lelide/runtime/gvm/ExecutableScript;Ljava/lang/Class;Lelide/runtime/gvm/ExecutionInputs;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun executeBlocking (Lelide/runtime/gvm/ExecutableScript;Ljava/lang/Class;Lelide/runtime/gvm/ExecutionInputs;)Ljava/lang/Object;
	public abstract fun executeRender (Lelide/runtime/gvm/ExecutableScript;Lio/micronaut/http/HttpRequest;Ljava/lang/Object;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun executeStreaming (Lelide/runtime/gvm/ExecutableScript;Lelide/runtime/gvm/ExecutionInputs;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun language ()Lelide/runtime/gvm/GuestLanguage;
	public abstract fun prewarmScript (Lelide/runtime/gvm/ExecutableScript;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class elide/runtime/gvm/VMFacadeFactory {
	public final fun acquireVM ([Lelide/runtime/gvm/GuestLanguage;)Lelide/runtime/gvm/VMFacade;
}

public abstract interface annotation class elide/runtime/gvm/api/GuestRuntime : java/lang/annotation/Annotation {
	public abstract fun engine ()Ljava/lang/String;
}

public final synthetic class elide/runtime/gvm/cfg/$GuestIOConfiguration$Intercepted$Definition$Reference : io/micronaut/context/AbstractInitializableBeanDefinitionReference, io/micronaut/inject/AdvisedBeanType {
	public static final field $ANNOTATION_METADATA Lio/micronaut/core/annotation/AnnotationMetadata;
	public fun <init> ()V
	public fun getBeanDefinitionType ()Ljava/lang/Class;
	public fun getBeanType ()Ljava/lang/Class;
	public fun getInterceptedType ()Ljava/lang/Class;
	public fun load ()Lio/micronaut/inject/BeanDefinition;
}

public final synthetic class elide/runtime/gvm/cfg/$GuestVMConfiguration$Intercepted$Definition$Reference : io/micronaut/context/AbstractInitializableBeanDefinitionReference, io/micronaut/inject/AdvisedBeanType {
	public static final field $ANNOTATION_METADATA Lio/micronaut/core/annotation/AnnotationMetadata;
	public fun <init> ()V
	public fun getBeanDefinitionType ()Ljava/lang/Class;
	public fun getBeanType ()Ljava/lang/Class;
	public fun getInterceptedType ()Ljava/lang/Class;
	public fun load ()Lio/micronaut/inject/BeanDefinition;
}

public final synthetic class elide/runtime/gvm/cfg/$GuestVMEEConfig$Intercepted$Definition$Reference : io/micronaut/context/AbstractInitializableBeanDefinitionReference, io/micronaut/inject/AdvisedBeanType {
	public static final field $ANNOTATION_METADATA Lio/micronaut/core/annotation/AnnotationMetadata;
	public fun <init> ()V
	public fun getBeanDefinitionType ()Ljava/lang/Class;
	public fun getBeanType ()Ljava/lang/Class;
	public fun getInterceptedType ()Ljava/lang/Class;
	public fun load ()Lio/micronaut/inject/BeanDefinition;
}

public final synthetic class elide/runtime/gvm/cfg/$GuestVMEESandboxConfig$Intercepted$Definition$Reference : io/micronaut/context/AbstractInitializableBeanDefinitionReference, io/micronaut/inject/AdvisedBeanType {
	public static final field $ANNOTATION_METADATA Lio/micronaut/core/annotation/AnnotationMetadata;
	public fun <init> ()V
	public fun getBeanDefinitionType ()Ljava/lang/Class;
	public fun getBeanType ()Ljava/lang/Class;
	public fun getInterceptedType ()Ljava/lang/Class;
	public fun load ()Lio/micronaut/inject/BeanDefinition;
}

public final synthetic class elide/runtime/gvm/cfg/$GuestVMInspectConfig$Intercepted$Definition$Reference : io/micronaut/context/AbstractInitializableBeanDefinitionReference, io/micronaut/inject/AdvisedBeanType {
	public static final field $ANNOTATION_METADATA Lio/micronaut/core/annotation/AnnotationMetadata;
	public fun <init> ()V
	public fun getBeanDefinitionType ()Ljava/lang/Class;
	public fun getBeanType ()Ljava/lang/Class;
	public fun getInterceptedType ()Ljava/lang/Class;
	public fun load ()Lio/micronaut/inject/BeanDefinition;
}

public final synthetic class elide/runtime/gvm/cfg/$JsRuntimeConfig$Intercepted$Definition$Reference : io/micronaut/context/AbstractInitializableBeanDefinitionReference, io/micronaut/inject/AdvisedBeanType {
	public static final field $ANNOTATION_METADATA Lio/micronaut/core/annotation/AnnotationMetadata;
	public fun <init> ()V
	public fun getBeanDefinitionType ()Ljava/lang/Class;
	public fun getBeanType ()Ljava/lang/Class;
	public fun getInterceptedType ()Ljava/lang/Class;
	public fun load ()Lio/micronaut/inject/BeanDefinition;
}

public final synthetic class elide/runtime/gvm/cfg/$JsRuntimeConfig$JsEsmConfig$Intercepted$Definition$Reference : io/micronaut/context/AbstractInitializableBeanDefinitionReference, io/micronaut/inject/AdvisedBeanType {
	public static final field $ANNOTATION_METADATA Lio/micronaut/core/annotation/AnnotationMetadata;
	public fun <init> ()V
	public fun getBeanDefinitionType ()Ljava/lang/Class;
	public fun getBeanType ()Ljava/lang/Class;
	public fun getInterceptedType ()Ljava/lang/Class;
	public fun load ()Lio/micronaut/inject/BeanDefinition;
}

public final synthetic class elide/runtime/gvm/cfg/$JsRuntimeConfig$JsNpmConfig$Intercepted$Definition$Reference : io/micronaut/context/AbstractInitializableBeanDefinitionReference, io/micronaut/inject/AdvisedBeanType {
	public static final field $ANNOTATION_METADATA Lio/micronaut/core/annotation/AnnotationMetadata;
	public fun <init> ()V
	public fun getBeanDefinitionType ()Ljava/lang/Class;
	public fun getBeanType ()Ljava/lang/Class;
	public fun getInterceptedType ()Ljava/lang/Class;
	public fun load ()Lio/micronaut/inject/BeanDefinition;
}

public abstract interface class elide/runtime/gvm/cfg/GuestRuntimeConfiguration : io/micronaut/core/util/Toggleable {
}

public abstract interface class elide/runtime/gvm/cfg/JsRuntimeConfig : elide/runtime/gvm/cfg/GuestRuntimeConfiguration, io/micronaut/core/util/Toggleable {
	public static final field Companion Lelide/runtime/gvm/cfg/JsRuntimeConfig$Companion;
	public static final field DEFAULT_ENABLED Z
	public static final field DEFAULT_ESM Z
	public static final field DEFAULT_NPM Z
	public static final field DEFAULT_NPM_MODULES Ljava/lang/String;
	public static final field DEFAULT_SOURCEMAPS Z
	public static final field DEFAULT_TYPESCRIPT Z
	public static final field DEFAULT_V8_COMPAT Z
	public static final field DEFAULT_WASM Z
	public fun getCharset ()Ljava/nio/charset/Charset;
	public fun getDefaultLocale ()Ljava/util/Locale;
	public fun getEsm ()Lelide/runtime/gvm/cfg/JsRuntimeConfig$JsEsmConfig;
	public fun getLanguage ()Ltools/elide/assets/EmbeddedScriptMetadata$JsScriptMetadata$JsLanguageLevel;
	public fun getLocale ()Ljava/util/Locale;
	public fun getNpm ()Lelide/runtime/gvm/cfg/JsRuntimeConfig$JsNpmConfig;
	public fun getSourceMaps ()Ljava/lang/Boolean;
	public fun getTimezone ()Ljava/time/ZoneId;
	public fun getTypescript ()Ljava/lang/Boolean;
	public fun getV8 ()Ljava/lang/Boolean;
	public fun getWasm ()Ljava/lang/Boolean;
	public fun isEnabled ()Z
}

public final class elide/runtime/gvm/cfg/JsRuntimeConfig$Companion {
	public static final field DEFAULT_ENABLED Z
	public static final field DEFAULT_ESM Z
	public static final field DEFAULT_NPM Z
	public static final field DEFAULT_NPM_MODULES Ljava/lang/String;
	public static final field DEFAULT_SOURCEMAPS Z
	public static final field DEFAULT_TYPESCRIPT Z
	public static final field DEFAULT_V8_COMPAT Z
	public static final field DEFAULT_WASM Z
	public final fun getDEFAULT_CHARSET ()Ljava/nio/charset/Charset;
	public final fun getDEFAULT_JS_LANGUAGE_LEVEL ()Ltools/elide/assets/EmbeddedScriptMetadata$JsScriptMetadata$JsLanguageLevel;
	public final fun getDEFAULT_LOCALE ()Ljava/util/Locale;
	public final fun getDEFAULT_TIMEZONE ()Ljava/time/ZoneId;
}

public abstract interface class elide/runtime/gvm/cfg/JsRuntimeConfig$JsEsmConfig : io/micronaut/core/util/Toggleable {
	public static final field Companion Lelide/runtime/gvm/cfg/JsRuntimeConfig$JsEsmConfig$Companion;
	public static fun getDEFAULTS ()Lelide/runtime/gvm/cfg/JsRuntimeConfig$JsEsmConfig;
}

public final class elide/runtime/gvm/cfg/JsRuntimeConfig$JsEsmConfig$Companion {
	public final fun getDEFAULTS ()Lelide/runtime/gvm/cfg/JsRuntimeConfig$JsEsmConfig;
}

public abstract interface class elide/runtime/gvm/cfg/JsRuntimeConfig$JsNpmConfig : io/micronaut/core/util/Toggleable {
	public static final field Companion Lelide/runtime/gvm/cfg/JsRuntimeConfig$JsNpmConfig$Companion;
	public static fun getDEFAULTS ()Lelide/runtime/gvm/cfg/JsRuntimeConfig$JsNpmConfig;
	public fun getModules ()Ljava/lang/String;
}

public final class elide/runtime/gvm/cfg/JsRuntimeConfig$JsNpmConfig$Companion {
	public final fun getDEFAULTS ()Lelide/runtime/gvm/cfg/JsRuntimeConfig$JsNpmConfig;
}

public final synthetic class elide/runtime/gvm/internals/$GuestExecutorManager$Definition$Reference : io/micronaut/context/AbstractInitializableBeanDefinitionReference {
	public static final field $ANNOTATION_METADATA Lio/micronaut/core/annotation/AnnotationMetadata;
	public fun <init> ()V
	public fun getBeanDefinitionType ()Ljava/lang/Class;
	public fun getBeanType ()Ljava/lang/Class;
	public fun load ()Lio/micronaut/inject/BeanDefinition;
}

public final synthetic class elide/runtime/gvm/internals/$IntrinsicsManager$Definition$Reference : io/micronaut/context/AbstractInitializableBeanDefinitionReference {
	public static final field $ANNOTATION_METADATA Lio/micronaut/core/annotation/AnnotationMetadata;
	public fun <init> ()V
	public fun getBeanDefinitionType ()Ljava/lang/Class;
	public fun getBeanType ()Ljava/lang/Class;
	public fun load ()Lio/micronaut/inject/BeanDefinition;
}

public abstract class elide/runtime/gvm/internals/AbstractGVMScript : elide/runtime/gvm/GuestScript {
	public synthetic fun <init> (Lelide/runtime/gvm/internals/GraalVMGuest;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public synthetic fun <init> (Lelide/runtime/gvm/internals/GraalVMGuest;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	protected final fun getSpec ()Ljava/lang/String;
	public fun language ()Lelide/runtime/gvm/GuestLanguage;
	public fun map-IKyDTes ()Ljava/lang/String;
	public fun source-ulLWtvI ()Ljava/lang/String;
	public fun state ()Lelide/runtime/gvm/ExecutableScript$State;
	protected final fun updateState (Lelide/runtime/gvm/ExecutableScript$State;)V
}

public abstract class elide/runtime/gvm/internals/AbstractVMEngine : elide/runtime/gvm/VMEngineImpl {
	public static final field Companion Lelide/runtime/gvm/internals/AbstractVMEngine$Companion;
	public static final field EMBEDDED_ROOT Ljava/lang/String;
	public fun <init> (Lelide/runtime/gvm/internals/GraalVMGuest;)V
	public final fun builder (Lorg/graalvm/polyglot/Engine;)Lorg/graalvm/polyglot/Context$Builder;
	protected abstract fun configure (Lorg/graalvm/polyglot/Engine;Lorg/graalvm/polyglot/Context$Builder;)Ljava/util/stream/Stream;
	public final fun configureVM (Lorg/graalvm/polyglot/Context$Builder;)V
	public fun execute (Lelide/runtime/gvm/ExecutableScript;Ljava/lang/Class;Lelide/runtime/gvm/ExecutionInputs;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	protected abstract fun execute (Lorg/graalvm/polyglot/Context;Lelide/runtime/gvm/ExecutableScript;Lelide/runtime/gvm/InvocationBindings;Lelide/runtime/gvm/ExecutionInputs;)Lorg/graalvm/polyglot/Value;
	public fun executeAsync (Lelide/runtime/gvm/ExecutableScript;Ljava/lang/Class;Lelide/runtime/gvm/ExecutionInputs;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun executeBlocking (Lelide/runtime/gvm/ExecutableScript;Ljava/lang/Class;Lelide/runtime/gvm/ExecutionInputs;)Ljava/lang/Object;
	public fun executeRender (Lelide/runtime/gvm/ExecutableScript;Lio/micronaut/http/HttpRequest;Ljava/lang/Object;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun executeStreaming (Lelide/runtime/gvm/ExecutableScript;Lelide/runtime/gvm/ExecutionInputs;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	protected final fun getConfig ()Lelide/runtime/gvm/cfg/GuestRuntimeConfiguration;
	protected final fun getLanguage ()Lelide/runtime/gvm/internals/GraalVMGuest;
	protected fun intrinsics ()Ljava/util/Collection;
	public fun language ()Lelide/runtime/gvm/GuestLanguage;
	protected abstract fun prepare (Lorg/graalvm/polyglot/Context;Lorg/graalvm/polyglot/Value;)V
	public fun prewarmScript (Lelide/runtime/gvm/ExecutableScript;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	protected abstract fun resolve (Lorg/graalvm/polyglot/Context;Lelide/runtime/gvm/ExecutableScript;Lelide/runtime/gvm/internals/GVMInvocationBindings$DispatchStyle;)Lelide/runtime/gvm/InvocationBindings;
	public static synthetic fun resolve$default (Lelide/runtime/gvm/internals/AbstractVMEngine;Lorg/graalvm/polyglot/Context;Lelide/runtime/gvm/ExecutableScript;Lelide/runtime/gvm/internals/GVMInvocationBindings$DispatchStyle;ILjava/lang/Object;)Lelide/runtime/gvm/InvocationBindings;
	public abstract fun resolveConfig ()Lelide/runtime/gvm/cfg/GuestRuntimeConfiguration;
	public static final fun resolveRuntimeInfo (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lkotlin/Pair;
	public final fun spawn (Lorg/graalvm/polyglot/Context$Builder;)Lorg/graalvm/polyglot/Context;
}

public final class elide/runtime/gvm/internals/AbstractVMEngine$Companion {
	public final fun resolveRuntimeInfo (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lkotlin/Pair;
	public static synthetic fun resolveRuntimeInfo$default (Lelide/runtime/gvm/internals/AbstractVMEngine$Companion;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Lkotlin/Pair;
}

public abstract class elide/runtime/gvm/internals/AbstractVMEngine$GuestVFSConfigurator : elide/runtime/gvm/internals/GuestVFS$VFSConfigurator {
	public fun <init> (Lelide/runtime/gvm/GuestLanguage;Lkotlin/jvm/functions/Function0;)V
	public fun bundles ()Ljava/util/List;
	public fun image ()Lelide/runtime/gvm/internals/AbstractVMEngine$RuntimeVFS;
}

public final class elide/runtime/gvm/internals/AbstractVMEngine$RuntimeArtifact {
	public static final field Companion Lelide/runtime/gvm/internals/AbstractVMEngine$RuntimeArtifact$Companion;
	public fun <init> (Ljava/lang/String;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;)Lelide/runtime/gvm/internals/AbstractVMEngine$RuntimeArtifact;
	public static synthetic fun copy$default (Lelide/runtime/gvm/internals/AbstractVMEngine$RuntimeArtifact;Ljava/lang/String;ILjava/lang/Object;)Lelide/runtime/gvm/internals/AbstractVMEngine$RuntimeArtifact;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getPath ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class elide/runtime/gvm/internals/AbstractVMEngine$RuntimeArtifact$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/runtime/gvm/internals/AbstractVMEngine$RuntimeArtifact$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/runtime/gvm/internals/AbstractVMEngine$RuntimeArtifact;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/runtime/gvm/internals/AbstractVMEngine$RuntimeArtifact;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class elide/runtime/gvm/internals/AbstractVMEngine$RuntimeArtifact$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract class elide/runtime/gvm/internals/AbstractVMEngine$RuntimeImageInfo {
	public static final field Companion Lelide/runtime/gvm/internals/AbstractVMEngine$RuntimeImageInfo$Companion;
	public synthetic fun <init> (ILkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public static final synthetic fun write$Self (Lelide/runtime/gvm/internals/AbstractVMEngine$RuntimeImageInfo;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class elide/runtime/gvm/internals/AbstractVMEngine$RuntimeImageInfo$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/runtime/gvm/internals/AbstractVMEngine$RuntimeImageInfo$NativeImageInfo : elide/runtime/gvm/internals/AbstractVMEngine$RuntimeImageInfo {
	public static final field Companion Lelide/runtime/gvm/internals/AbstractVMEngine$RuntimeImageInfo$NativeImageInfo$Companion;
	public fun <init> ()V
	public fun <init> (Lelide/runtime/gvm/internals/AbstractVMEngine$RuntimeNativeResources;Lelide/runtime/gvm/internals/AbstractVMEngine$RuntimeNativeResources;Lelide/runtime/gvm/internals/AbstractVMEngine$RuntimeNativeResources;)V
	public synthetic fun <init> (Lelide/runtime/gvm/internals/AbstractVMEngine$RuntimeNativeResources;Lelide/runtime/gvm/internals/AbstractVMEngine$RuntimeNativeResources;Lelide/runtime/gvm/internals/AbstractVMEngine$RuntimeNativeResources;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Lelide/runtime/gvm/internals/AbstractVMEngine$RuntimeNativeResources;
	public final fun component2 ()Lelide/runtime/gvm/internals/AbstractVMEngine$RuntimeNativeResources;
	public final fun component3 ()Lelide/runtime/gvm/internals/AbstractVMEngine$RuntimeNativeResources;
	public final fun copy (Lelide/runtime/gvm/internals/AbstractVMEngine$RuntimeNativeResources;Lelide/runtime/gvm/internals/AbstractVMEngine$RuntimeNativeResources;Lelide/runtime/gvm/internals/AbstractVMEngine$RuntimeNativeResources;)Lelide/runtime/gvm/internals/AbstractVMEngine$RuntimeImageInfo$NativeImageInfo;
	public static synthetic fun copy$default (Lelide/runtime/gvm/internals/AbstractVMEngine$RuntimeImageInfo$NativeImageInfo;Lelide/runtime/gvm/internals/AbstractVMEngine$RuntimeNativeResources;Lelide/runtime/gvm/internals/AbstractVMEngine$RuntimeNativeResources;Lelide/runtime/gvm/internals/AbstractVMEngine$RuntimeNativeResources;ILjava/lang/Object;)Lelide/runtime/gvm/internals/AbstractVMEngine$RuntimeImageInfo$NativeImageInfo;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getDarwin ()Lelide/runtime/gvm/internals/AbstractVMEngine$RuntimeNativeResources;
	public final fun getLinux ()Lelide/runtime/gvm/internals/AbstractVMEngine$RuntimeNativeResources;
	public final fun getWindows ()Lelide/runtime/gvm/internals/AbstractVMEngine$RuntimeNativeResources;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class elide/runtime/gvm/internals/AbstractVMEngine$RuntimeImageInfo$NativeImageInfo$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/runtime/gvm/internals/AbstractVMEngine$RuntimeImageInfo$NativeImageInfo$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/runtime/gvm/internals/AbstractVMEngine$RuntimeImageInfo$NativeImageInfo;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/runtime/gvm/internals/AbstractVMEngine$RuntimeImageInfo$NativeImageInfo;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class elide/runtime/gvm/internals/AbstractVMEngine$RuntimeImageInfo$NativeImageInfo$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/runtime/gvm/internals/AbstractVMEngine$RuntimeImageInfo$UniversalImageInfo : elide/runtime/gvm/internals/AbstractVMEngine$RuntimeImageInfo {
	public static final field Companion Lelide/runtime/gvm/internals/AbstractVMEngine$RuntimeImageInfo$UniversalImageInfo$Companion;
	public fun <init> ()V
	public fun <init> (Ljava/lang/String;)V
	public synthetic fun <init> (Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;)Lelide/runtime/gvm/internals/AbstractVMEngine$RuntimeImageInfo$UniversalImageInfo;
	public static synthetic fun copy$default (Lelide/runtime/gvm/internals/AbstractVMEngine$RuntimeImageInfo$UniversalImageInfo;Ljava/lang/String;ILjava/lang/Object;)Lelide/runtime/gvm/internals/AbstractVMEngine$RuntimeImageInfo$UniversalImageInfo;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getUniversal ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class elide/runtime/gvm/internals/AbstractVMEngine$RuntimeImageInfo$UniversalImageInfo$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/runtime/gvm/internals/AbstractVMEngine$RuntimeImageInfo$UniversalImageInfo$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/runtime/gvm/internals/AbstractVMEngine$RuntimeImageInfo$UniversalImageInfo;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/runtime/gvm/internals/AbstractVMEngine$RuntimeImageInfo$UniversalImageInfo;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class elide/runtime/gvm/internals/AbstractVMEngine$RuntimeImageInfo$UniversalImageInfo$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/runtime/gvm/internals/AbstractVMEngine$RuntimeInfo {
	public static final field Companion Lelide/runtime/gvm/internals/AbstractVMEngine$RuntimeInfo$Companion;
	public fun <init> (Ljava/lang/String;Ltools/elide/meta/GuestLanguage;Ljava/util/List;Ljava/util/List;Ljava/util/List;Lelide/runtime/gvm/internals/AbstractVMEngine$RuntimeImageInfo;Ljava/lang/String;)V
	public synthetic fun <init> (Ljava/lang/String;Ltools/elide/meta/GuestLanguage;Ljava/util/List;Ljava/util/List;Ljava/util/List;Lelide/runtime/gvm/internals/AbstractVMEngine$RuntimeImageInfo;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ltools/elide/meta/GuestLanguage;
	public final fun component3 ()Ljava/util/List;
	public final fun component4 ()Ljava/util/List;
	public final fun component5 ()Ljava/util/List;
	public final fun component6 ()Lelide/runtime/gvm/internals/AbstractVMEngine$RuntimeImageInfo;
	public final fun component7 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;Ltools/elide/meta/GuestLanguage;Ljava/util/List;Ljava/util/List;Ljava/util/List;Lelide/runtime/gvm/internals/AbstractVMEngine$RuntimeImageInfo;Ljava/lang/String;)Lelide/runtime/gvm/internals/AbstractVMEngine$RuntimeInfo;
	public static synthetic fun copy$default (Lelide/runtime/gvm/internals/AbstractVMEngine$RuntimeInfo;Ljava/lang/String;Ltools/elide/meta/GuestLanguage;Ljava/util/List;Ljava/util/List;Ljava/util/List;Lelide/runtime/gvm/internals/AbstractVMEngine$RuntimeImageInfo;Ljava/lang/String;ILjava/lang/Object;)Lelide/runtime/gvm/internals/AbstractVMEngine$RuntimeInfo;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getArtifacts ()Ljava/util/List;
	public final fun getEngine ()Ljava/lang/String;
	public final fun getEntry ()Ljava/lang/String;
	public final fun getImage ()Lelide/runtime/gvm/internals/AbstractVMEngine$RuntimeImageInfo;
	public final fun getLanguage ()Ltools/elide/meta/GuestLanguage;
	public final fun getScripts ()Ljava/util/List;
	public final fun getVfs ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class elide/runtime/gvm/internals/AbstractVMEngine$RuntimeInfo$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/runtime/gvm/internals/AbstractVMEngine$RuntimeInfo$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/runtime/gvm/internals/AbstractVMEngine$RuntimeInfo;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/runtime/gvm/internals/AbstractVMEngine$RuntimeInfo;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class elide/runtime/gvm/internals/AbstractVMEngine$RuntimeInfo$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/runtime/gvm/internals/AbstractVMEngine$RuntimeNativeResourceBundle {
	public static final field Companion Lelide/runtime/gvm/internals/AbstractVMEngine$RuntimeNativeResourceBundle$Companion;
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Lelide/runtime/gvm/internals/AbstractVMEngine$RuntimeNativeResourceSignature;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Lelide/runtime/gvm/internals/AbstractVMEngine$RuntimeNativeResourceSignature;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;Lelide/runtime/gvm/internals/AbstractVMEngine$RuntimeNativeResourceSignature;)Lelide/runtime/gvm/internals/AbstractVMEngine$RuntimeNativeResourceBundle;
	public static synthetic fun copy$default (Lelide/runtime/gvm/internals/AbstractVMEngine$RuntimeNativeResourceBundle;Ljava/lang/String;Ljava/lang/String;Lelide/runtime/gvm/internals/AbstractVMEngine$RuntimeNativeResourceSignature;ILjava/lang/Object;)Lelide/runtime/gvm/internals/AbstractVMEngine$RuntimeNativeResourceBundle;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getBundle ()Ljava/lang/String;
	public final fun getSha256 ()Ljava/lang/String;
	public final fun getSignature ()Lelide/runtime/gvm/internals/AbstractVMEngine$RuntimeNativeResourceSignature;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class elide/runtime/gvm/internals/AbstractVMEngine$RuntimeNativeResourceBundle$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/runtime/gvm/internals/AbstractVMEngine$RuntimeNativeResourceBundle$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/runtime/gvm/internals/AbstractVMEngine$RuntimeNativeResourceBundle;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/runtime/gvm/internals/AbstractVMEngine$RuntimeNativeResourceBundle;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class elide/runtime/gvm/internals/AbstractVMEngine$RuntimeNativeResourceBundle$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/runtime/gvm/internals/AbstractVMEngine$RuntimeNativeResourceSignature {
	public static final field Companion Lelide/runtime/gvm/internals/AbstractVMEngine$RuntimeNativeResourceSignature$Companion;
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lelide/runtime/gvm/internals/AbstractVMEngine$RuntimeNativeResourceSignature;
	public static synthetic fun copy$default (Lelide/runtime/gvm/internals/AbstractVMEngine$RuntimeNativeResourceSignature;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Lelide/runtime/gvm/internals/AbstractVMEngine$RuntimeNativeResourceSignature;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getBundle ()Ljava/lang/String;
	public final fun getSha256 ()Ljava/lang/String;
	public final fun getStamp ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class elide/runtime/gvm/internals/AbstractVMEngine$RuntimeNativeResourceSignature$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/runtime/gvm/internals/AbstractVMEngine$RuntimeNativeResourceSignature$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/runtime/gvm/internals/AbstractVMEngine$RuntimeNativeResourceSignature;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/runtime/gvm/internals/AbstractVMEngine$RuntimeNativeResourceSignature;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class elide/runtime/gvm/internals/AbstractVMEngine$RuntimeNativeResourceSignature$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/runtime/gvm/internals/AbstractVMEngine$RuntimeNativeResources {
	public static final field Companion Lelide/runtime/gvm/internals/AbstractVMEngine$RuntimeNativeResources$Companion;
	public fun <init> ()V
	public fun <init> (Lelide/runtime/gvm/internals/AbstractVMEngine$RuntimeNativeResourceBundle;Lelide/runtime/gvm/internals/AbstractVMEngine$RuntimeNativeResourceBundle;)V
	public synthetic fun <init> (Lelide/runtime/gvm/internals/AbstractVMEngine$RuntimeNativeResourceBundle;Lelide/runtime/gvm/internals/AbstractVMEngine$RuntimeNativeResourceBundle;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Lelide/runtime/gvm/internals/AbstractVMEngine$RuntimeNativeResourceBundle;
	public final fun component2 ()Lelide/runtime/gvm/internals/AbstractVMEngine$RuntimeNativeResourceBundle;
	public final fun copy (Lelide/runtime/gvm/internals/AbstractVMEngine$RuntimeNativeResourceBundle;Lelide/runtime/gvm/internals/AbstractVMEngine$RuntimeNativeResourceBundle;)Lelide/runtime/gvm/internals/AbstractVMEngine$RuntimeNativeResources;
	public static synthetic fun copy$default (Lelide/runtime/gvm/internals/AbstractVMEngine$RuntimeNativeResources;Lelide/runtime/gvm/internals/AbstractVMEngine$RuntimeNativeResourceBundle;Lelide/runtime/gvm/internals/AbstractVMEngine$RuntimeNativeResourceBundle;ILjava/lang/Object;)Lelide/runtime/gvm/internals/AbstractVMEngine$RuntimeNativeResources;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getAmd64 ()Lelide/runtime/gvm/internals/AbstractVMEngine$RuntimeNativeResourceBundle;
	public final fun getArm64 ()Lelide/runtime/gvm/internals/AbstractVMEngine$RuntimeNativeResourceBundle;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class elide/runtime/gvm/internals/AbstractVMEngine$RuntimeNativeResources$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/runtime/gvm/internals/AbstractVMEngine$RuntimeNativeResources$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/runtime/gvm/internals/AbstractVMEngine$RuntimeNativeResources;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/runtime/gvm/internals/AbstractVMEngine$RuntimeNativeResources;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class elide/runtime/gvm/internals/AbstractVMEngine$RuntimeNativeResources$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/runtime/gvm/internals/AbstractVMEngine$RuntimeVFS {
	public static final field Companion Lelide/runtime/gvm/internals/AbstractVMEngine$RuntimeVFS$Companion;
	public fun <init> (Ljava/lang/String;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;)Lelide/runtime/gvm/internals/AbstractVMEngine$RuntimeVFS;
	public static synthetic fun copy$default (Lelide/runtime/gvm/internals/AbstractVMEngine$RuntimeVFS;Ljava/lang/String;ILjava/lang/Object;)Lelide/runtime/gvm/internals/AbstractVMEngine$RuntimeVFS;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getName ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class elide/runtime/gvm/internals/AbstractVMEngine$RuntimeVFS$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/runtime/gvm/internals/AbstractVMEngine$RuntimeVFS$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/runtime/gvm/internals/AbstractVMEngine$RuntimeVFS;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/runtime/gvm/internals/AbstractVMEngine$RuntimeVFS;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class elide/runtime/gvm/internals/AbstractVMEngine$RuntimeVFS$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract class elide/runtime/gvm/internals/GVMInvocationBindings : elide/runtime/gvm/InvocationBindings {
	public fun <init> ()V
}

public final class elide/runtime/gvm/internals/GVMInvocationBindings$DispatchStyle : java/lang/Enum {
	public static final field RENDER Lelide/runtime/gvm/internals/GVMInvocationBindings$DispatchStyle;
	public static final field SERVER Lelide/runtime/gvm/internals/GVMInvocationBindings$DispatchStyle;
	public static final field UNARY Lelide/runtime/gvm/internals/GVMInvocationBindings$DispatchStyle;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public static fun valueOf (Ljava/lang/String;)Lelide/runtime/gvm/internals/GVMInvocationBindings$DispatchStyle;
	public static fun values ()[Lelide/runtime/gvm/internals/GVMInvocationBindings$DispatchStyle;
}

public class elide/runtime/gvm/internals/GraalVMGuest : java/lang/Enum, elide/runtime/gvm/GuestLanguage {
	public static final field JAVASCRIPT Lelide/runtime/gvm/internals/GraalVMGuest;
	public static final field JVM Lelide/runtime/gvm/internals/GraalVMGuest;
	public static final field PYTHON Lelide/runtime/gvm/internals/GraalVMGuest;
	public static final field RUBY Lelide/runtime/gvm/internals/GraalVMGuest;
	public static final field WASM Lelide/runtime/gvm/internals/GraalVMGuest;
	public fun getEngine ()Ljava/lang/String;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public fun getLabel ()Ljava/lang/String;
	public fun getSymbol ()Ljava/lang/String;
	public static fun valueOf (Ljava/lang/String;)Lelide/runtime/gvm/internals/GraalVMGuest;
	public static fun values ()[Lelide/runtime/gvm/internals/GraalVMGuest;
}

public abstract interface class elide/runtime/gvm/internals/GuestVFS : java/io/Closeable, java/lang/AutoCloseable, org/graalvm/polyglot/io/FileSystem {
	public abstract fun allowsHostFileAccess ()Z
	public abstract fun allowsHostSocketAccess ()Z
}

public abstract interface class elide/runtime/gvm/internals/GuestVFS$VFSConfigurator {
	public abstract fun bundles ()Ljava/util/List;
	public fun image ()Lelide/runtime/gvm/internals/AbstractVMEngine$RuntimeVFS;
}

public final class elide/runtime/gvm/internals/IntrinsicsManager {
	public fun <init> (Ljava/util/List;)V
	public final fun resolver ()Lelide/runtime/intrinsics/IntrinsicsResolver;
}

public abstract interface class elide/runtime/gvm/internals/VMProperty : java/lang/Comparable {
	public fun active ()Z
	public fun compareTo (Lelide/runtime/gvm/internals/VMProperty;)I
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public abstract fun getSymbol ()Ljava/lang/String;
	public abstract fun value ()Ljava/lang/String;
}

public final class elide/runtime/gvm/internals/VMRuntimeProperty : elide/runtime/gvm/internals/VMProperty {
	public static final field Companion Lelide/runtime/gvm/internals/VMRuntimeProperty$Companion;
	public final fun component2 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lkotlin/jvm/functions/Function0;)Lelide/runtime/gvm/internals/VMRuntimeProperty;
	public static synthetic fun copy$default (Lelide/runtime/gvm/internals/VMRuntimeProperty;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lkotlin/jvm/functions/Function0;ILjava/lang/Object;)Lelide/runtime/gvm/internals/VMRuntimeProperty;
	public fun equals (Ljava/lang/Object;)Z
	public fun getSymbol ()Ljava/lang/String;
	public fun hashCode ()I
	public static final fun ofBoolean (Ljava/lang/String;Ljava/lang/String;Ljava/lang/Boolean;Lkotlin/jvm/functions/Function0;)Lelide/runtime/gvm/internals/VMRuntimeProperty;
	public static final fun ofConfigurable (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lkotlin/jvm/functions/Function0;)Lelide/runtime/gvm/internals/VMRuntimeProperty;
	public fun toString ()Ljava/lang/String;
	public fun value ()Ljava/lang/String;
}

public final class elide/runtime/gvm/internals/VMRuntimeProperty$Companion {
	public final fun ofBoolean (Ljava/lang/String;Ljava/lang/String;Ljava/lang/Boolean;Lkotlin/jvm/functions/Function0;)Lelide/runtime/gvm/internals/VMRuntimeProperty;
	public static synthetic fun ofBoolean$default (Lelide/runtime/gvm/internals/VMRuntimeProperty$Companion;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Boolean;Lkotlin/jvm/functions/Function0;ILjava/lang/Object;)Lelide/runtime/gvm/internals/VMRuntimeProperty;
	public final fun ofConfigurable (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lkotlin/jvm/functions/Function0;)Lelide/runtime/gvm/internals/VMRuntimeProperty;
	public static synthetic fun ofConfigurable$default (Lelide/runtime/gvm/internals/VMRuntimeProperty$Companion;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lkotlin/jvm/functions/Function0;ILjava/lang/Object;)Lelide/runtime/gvm/internals/VMRuntimeProperty;
}

public final class elide/runtime/gvm/internals/VMStaticProperty : elide/runtime/gvm/internals/VMProperty {
	public static final field Companion Lelide/runtime/gvm/internals/VMStaticProperty$Companion;
	public static final fun active (Ljava/lang/String;)Lelide/runtime/gvm/internals/VMStaticProperty;
	public static final fun activeWhenAtLeast (Ljava/lang/String;Ljava/lang/String;Z)Lelide/runtime/gvm/internals/VMStaticProperty;
	public static final fun activeWhenAtMost (Ljava/lang/String;Ljava/lang/String;Z)Lelide/runtime/gvm/internals/VMStaticProperty;
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;)Lelide/runtime/gvm/internals/VMStaticProperty;
	public static synthetic fun copy$default (Lelide/runtime/gvm/internals/VMStaticProperty;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Lelide/runtime/gvm/internals/VMStaticProperty;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getStaticValue ()Ljava/lang/String;
	public fun getSymbol ()Ljava/lang/String;
	public fun hashCode ()I
	public static final fun inactive (Ljava/lang/String;)Lelide/runtime/gvm/internals/VMStaticProperty;
	public static final fun inactiveWhenAtLeast (Ljava/lang/String;Ljava/lang/String;Z)Lelide/runtime/gvm/internals/VMStaticProperty;
	public static final fun inactiveWhenAtMost (Ljava/lang/String;Ljava/lang/String;Z)Lelide/runtime/gvm/internals/VMStaticProperty;
	public static final fun of (Ljava/lang/String;Ljava/lang/String;)Lelide/runtime/gvm/internals/VMStaticProperty;
	public fun toString ()Ljava/lang/String;
	public fun value ()Ljava/lang/String;
	public static final fun whenAtLeast (Ljava/lang/String;Ljava/lang/String;ZZLkotlin/jvm/functions/Function2;)Lelide/runtime/gvm/internals/VMStaticProperty;
	public static final fun whenAtMost (Ljava/lang/String;Ljava/lang/String;ZZLkotlin/jvm/functions/Function2;)Lelide/runtime/gvm/internals/VMStaticProperty;
}

public final class elide/runtime/gvm/internals/VMStaticProperty$Companion {
	public final fun active (Ljava/lang/String;)Lelide/runtime/gvm/internals/VMStaticProperty;
	public final fun activeWhenAtLeast (Ljava/lang/String;Ljava/lang/String;Z)Lelide/runtime/gvm/internals/VMStaticProperty;
	public static synthetic fun activeWhenAtLeast$default (Lelide/runtime/gvm/internals/VMStaticProperty$Companion;Ljava/lang/String;Ljava/lang/String;ZILjava/lang/Object;)Lelide/runtime/gvm/internals/VMStaticProperty;
	public final fun activeWhenAtMost (Ljava/lang/String;Ljava/lang/String;Z)Lelide/runtime/gvm/internals/VMStaticProperty;
	public static synthetic fun activeWhenAtMost$default (Lelide/runtime/gvm/internals/VMStaticProperty$Companion;Ljava/lang/String;Ljava/lang/String;ZILjava/lang/Object;)Lelide/runtime/gvm/internals/VMStaticProperty;
	public final fun inactive (Ljava/lang/String;)Lelide/runtime/gvm/internals/VMStaticProperty;
	public final fun inactiveWhenAtLeast (Ljava/lang/String;Ljava/lang/String;Z)Lelide/runtime/gvm/internals/VMStaticProperty;
	public static synthetic fun inactiveWhenAtLeast$default (Lelide/runtime/gvm/internals/VMStaticProperty$Companion;Ljava/lang/String;Ljava/lang/String;ZILjava/lang/Object;)Lelide/runtime/gvm/internals/VMStaticProperty;
	public final fun inactiveWhenAtMost (Ljava/lang/String;Ljava/lang/String;Z)Lelide/runtime/gvm/internals/VMStaticProperty;
	public static synthetic fun inactiveWhenAtMost$default (Lelide/runtime/gvm/internals/VMStaticProperty$Companion;Ljava/lang/String;Ljava/lang/String;ZILjava/lang/Object;)Lelide/runtime/gvm/internals/VMStaticProperty;
	public final fun of (Ljava/lang/String;Ljava/lang/String;)Lelide/runtime/gvm/internals/VMStaticProperty;
	public final fun whenAtLeast (Ljava/lang/String;Ljava/lang/String;ZZLkotlin/jvm/functions/Function2;)Lelide/runtime/gvm/internals/VMStaticProperty;
	public static synthetic fun whenAtLeast$default (Lelide/runtime/gvm/internals/VMStaticProperty$Companion;Ljava/lang/String;Ljava/lang/String;ZZLkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lelide/runtime/gvm/internals/VMStaticProperty;
	public final fun whenAtMost (Ljava/lang/String;Ljava/lang/String;ZZLkotlin/jvm/functions/Function2;)Lelide/runtime/gvm/internals/VMStaticProperty;
	public static synthetic fun whenAtMost$default (Lelide/runtime/gvm/internals/VMStaticProperty$Companion;Ljava/lang/String;Ljava/lang/String;ZZLkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lelide/runtime/gvm/internals/VMStaticProperty;
}

public final synthetic class elide/runtime/gvm/internals/context/$NativeContextManagerImpl$Definition$Reference : io/micronaut/context/AbstractInitializableBeanDefinitionReference {
	public static final field $ANNOTATION_METADATA Lio/micronaut/core/annotation/AnnotationMetadata;
	public fun <init> ()V
	public fun getBeanDefinitionType ()Ljava/lang/Class;
	public fun getBeanType ()Ljava/lang/Class;
	public fun load ()Lio/micronaut/inject/BeanDefinition;
}

public abstract interface class elide/runtime/gvm/internals/context/ContextManager : elide/runtime/gvm/ContextFactory {
	public static final field Companion Lelide/runtime/gvm/internals/context/ContextManager$Companion;
	public fun acquireSuspend (Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun acquireSuspend$suspendImpl (Lelide/runtime/gvm/internals/context/ContextManager;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun acquireSuspendAsync (Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun acquireSuspendAsync$suspendImpl (Lelide/runtime/gvm/internals/context/ContextManager;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun engine ()Lorg/graalvm/polyglot/Engine;
	public abstract fun executeAsync (Lkotlin/jvm/functions/Function1;)Ljava/util/concurrent/CompletableFuture;
	public fun executeBlocking-VtjQ1oo (JLkotlin/jvm/functions/Function1;)Ljava/lang/Object;
	public static synthetic fun executeBlocking-VtjQ1oo$default (Lelide/runtime/gvm/internals/context/ContextManager;JLkotlin/jvm/functions/Function1;ILjava/lang/Object;)Ljava/lang/Object;
}

public final class elide/runtime/gvm/internals/context/ContextManager$Companion {
}

public abstract interface class elide/runtime/gvm/internals/context/ContextManager$VMInvocation {
}

public final synthetic class elide/runtime/gvm/internals/intrinsics/$BuiltinIntrinsicsResolver$Definition$Reference : io/micronaut/context/AbstractInitializableBeanDefinitionReference {
	public static final field $ANNOTATION_METADATA Lio/micronaut/core/annotation/AnnotationMetadata;
	public fun <init> ()V
	public fun getBeanDefinitionType ()Ljava/lang/Class;
	public fun getBeanType ()Ljava/lang/Class;
	public fun load ()Lio/micronaut/inject/BeanDefinition;
}

public final synthetic class elide/runtime/gvm/internals/intrinsics/$ServiceIntrinsicsResolver$Definition$Reference : io/micronaut/context/AbstractInitializableBeanDefinitionReference {
	public static final field $ANNOTATION_METADATA Lio/micronaut/core/annotation/AnnotationMetadata;
	public fun <init> ()V
	public fun getBeanDefinitionType ()Ljava/lang/Class;
	public fun getBeanType ()Ljava/lang/Class;
	public fun load ()Lio/micronaut/inject/BeanDefinition;
}

public final class elide/runtime/gvm/internals/intrinsics/js/JsProxy {
	public static final field INSTANCE Lelide/runtime/gvm/internals/intrinsics/js/JsProxy;
	public final fun build (Lkotlin/jvm/functions/Function1;)Lorg/graalvm/polyglot/proxy/ProxyObject;
	public final fun wrap (Ljava/lang/Object;)Lelide/runtime/gvm/internals/intrinsics/js/JsProxy$PropertyProxy;
}

public final class elide/runtime/gvm/internals/intrinsics/js/JsProxy$MutableObjectProxy : org/graalvm/polyglot/proxy/ProxyObject {
	public static final synthetic fun box-impl (Ljava/util/Map;)Lelide/runtime/gvm/internals/intrinsics/js/JsProxy$MutableObjectProxy;
	public static synthetic fun constructor-impl$default (Ljava/util/Map;ILkotlin/jvm/internal/DefaultConstructorMarker;)Ljava/util/Map;
	public fun equals (Ljava/lang/Object;)Z
	public static fun equals-impl (Ljava/util/Map;Ljava/lang/Object;)Z
	public static final fun equals-impl0 (Ljava/util/Map;Ljava/util/Map;)Z
	public fun getMember (Ljava/lang/String;)Ljava/lang/Object;
	public static fun getMember-impl (Ljava/util/Map;Ljava/lang/String;)Ljava/lang/Object;
	public fun getMemberKeys ()Ljava/lang/Object;
	public static fun getMemberKeys-impl (Ljava/util/Map;)Ljava/lang/Object;
	public fun hasMember (Ljava/lang/String;)Z
	public static fun hasMember-impl (Ljava/util/Map;Ljava/lang/String;)Z
	public fun hashCode ()I
	public static fun hashCode-impl (Ljava/util/Map;)I
	public fun putMember (Ljava/lang/String;Lorg/graalvm/polyglot/Value;)V
	public static fun putMember-impl (Ljava/util/Map;Ljava/lang/String;Lorg/graalvm/polyglot/Value;)V
	public fun toString ()Ljava/lang/String;
	public static fun toString-impl (Ljava/util/Map;)Ljava/lang/String;
	public final synthetic fun unbox-impl ()Ljava/util/Map;
}

public final class elide/runtime/gvm/internals/intrinsics/js/JsProxy$MutableObjectProxy$Builder {
	public static final synthetic fun box-impl (Ljava/util/Map;)Lelide/runtime/gvm/internals/intrinsics/js/JsProxy$MutableObjectProxy$Builder;
	public static final fun build-Vf0lDTY (Ljava/util/Map;)Ljava/util/Map;
	public static synthetic fun constructor-impl$default (Ljava/util/Map;ILkotlin/jvm/internal/DefaultConstructorMarker;)Ljava/util/Map;
	public fun equals (Ljava/lang/Object;)Z
	public static fun equals-impl (Ljava/util/Map;Ljava/lang/Object;)Z
	public static final fun equals-impl0 (Ljava/util/Map;Ljava/util/Map;)Z
	public fun hashCode ()I
	public static fun hashCode-impl (Ljava/util/Map;)I
	public static final fun put-impl (Ljava/util/Map;Ljava/lang/String;Ljava/lang/Object;)V
	public static final fun putFunction-impl (Ljava/util/Map;Ljava/lang/String;Lorg/graalvm/polyglot/proxy/ProxyExecutable;)V
	public static final fun putObject-impl (Ljava/util/Map;Ljava/lang/String;)V
	public static final fun putObject-impl (Ljava/util/Map;Ljava/lang/String;Lkotlin/jvm/functions/Function1;)V
	public fun toString ()Ljava/lang/String;
	public static fun toString-impl (Ljava/util/Map;)Ljava/lang/String;
	public final synthetic fun unbox-impl ()Ljava/util/Map;
}

public final class elide/runtime/gvm/internals/intrinsics/js/JsProxy$PropertyProxy : org/graalvm/polyglot/proxy/ProxyObject {
	public fun <init> ()V
	public fun equals (Ljava/lang/Object;)Z
	public fun getMember (Ljava/lang/String;)Ljava/lang/Object;
	public fun getMemberKeys ()Ljava/lang/Object;
	public fun hasMember (Ljava/lang/String;)Z
	public fun hashCode ()I
	public fun putMember (Ljava/lang/String;Lorg/graalvm/polyglot/Value;)V
	public fun toString ()Ljava/lang/String;
}

public final synthetic class elide/runtime/gvm/internals/intrinsics/js/base64/$Base64Intrinsic$Definition$Reference : io/micronaut/context/AbstractInitializableBeanDefinitionReference {
	public static final field $ANNOTATION_METADATA Lio/micronaut/core/annotation/AnnotationMetadata;
	public fun <init> ()V
	public fun getBeanDefinitionType ()Ljava/lang/Class;
	public fun getBeanType ()Ljava/lang/Class;
	public fun load ()Lio/micronaut/inject/BeanDefinition;
}

public final synthetic class elide/runtime/gvm/internals/intrinsics/js/base64/$Base64Intrinsic$IntrospectionRef : io/micronaut/core/beans/AbstractBeanIntrospectionReference {
	public static final field $ANNOTATION_METADATA Lio/micronaut/core/annotation/AnnotationMetadata;
	public fun <init> ()V
	public fun getAnnotationMetadata ()Lio/micronaut/core/annotation/AnnotationMetadata;
	public fun getBeanType ()Ljava/lang/Class;
	public fun getName ()Ljava/lang/String;
	public fun load ()Lio/micronaut/core/beans/BeanIntrospection;
}

public final synthetic class elide/runtime/gvm/internals/intrinsics/js/console/$ConsoleIntrinsic$Definition$Reference : io/micronaut/context/AbstractInitializableBeanDefinitionReference {
	public static final field $ANNOTATION_METADATA Lio/micronaut/core/annotation/AnnotationMetadata;
	public fun <init> ()V
	public fun getBeanDefinitionType ()Ljava/lang/Class;
	public fun getBeanType ()Ljava/lang/Class;
	public fun load ()Lio/micronaut/inject/BeanDefinition;
}

public final synthetic class elide/runtime/gvm/internals/intrinsics/js/console/$ConsoleIntrinsic$IntrospectionRef : io/micronaut/core/beans/AbstractBeanIntrospectionReference {
	public static final field $ANNOTATION_METADATA Lio/micronaut/core/annotation/AnnotationMetadata;
	public fun <init> ()V
	public fun getAnnotationMetadata ()Lio/micronaut/core/annotation/AnnotationMetadata;
	public fun getBeanType ()Ljava/lang/Class;
	public fun getName ()Ljava/lang/String;
	public fun load ()Lio/micronaut/core/beans/BeanIntrospection;
}

public final synthetic class elide/runtime/gvm/internals/intrinsics/js/crypto/$WebCryptoIntrinsic$Definition$Reference : io/micronaut/context/AbstractInitializableBeanDefinitionReference {
	public static final field $ANNOTATION_METADATA Lio/micronaut/core/annotation/AnnotationMetadata;
	public fun <init> ()V
	public fun getBeanDefinitionType ()Ljava/lang/Class;
	public fun getBeanType ()Ljava/lang/Class;
	public fun load ()Lio/micronaut/inject/BeanDefinition;
}

public final synthetic class elide/runtime/gvm/internals/intrinsics/js/crypto/$WebCryptoIntrinsic$IntrospectionRef : io/micronaut/core/beans/AbstractBeanIntrospectionReference {
	public static final field $ANNOTATION_METADATA Lio/micronaut/core/annotation/AnnotationMetadata;
	public fun <init> ()V
	public fun getAnnotationMetadata ()Lio/micronaut/core/annotation/AnnotationMetadata;
	public fun getBeanType ()Ljava/lang/Class;
	public fun getName ()Ljava/lang/String;
	public fun load ()Lio/micronaut/core/beans/BeanIntrospection;
}

public final synthetic class elide/runtime/gvm/internals/intrinsics/js/crypto/$WebCryptoKey$Definition$Reference : io/micronaut/context/AbstractInitializableBeanDefinitionReference {
	public static final field $ANNOTATION_METADATA Lio/micronaut/core/annotation/AnnotationMetadata;
	public fun <init> ()V
	public fun getBeanDefinitionType ()Ljava/lang/Class;
	public fun getBeanType ()Ljava/lang/Class;
	public fun load ()Lio/micronaut/inject/BeanDefinition;
}

public final synthetic class elide/runtime/gvm/internals/intrinsics/js/crypto/$WebCryptoKey$IntrospectionRef : io/micronaut/core/beans/AbstractBeanIntrospectionReference {
	public static final field $ANNOTATION_METADATA Lio/micronaut/core/annotation/AnnotationMetadata;
	public fun <init> ()V
	public fun getAnnotationMetadata ()Lio/micronaut/core/annotation/AnnotationMetadata;
	public fun getBeanType ()Ljava/lang/Class;
	public fun getName ()Ljava/lang/String;
	public fun load ()Lio/micronaut/core/beans/BeanIntrospection;
}

public final synthetic class elide/runtime/gvm/internals/intrinsics/js/express/$ExpressIntrinsic$Definition$Reference : io/micronaut/context/AbstractInitializableBeanDefinitionReference {
	public static final field $ANNOTATION_METADATA Lio/micronaut/core/annotation/AnnotationMetadata;
	public fun <init> ()V
	public fun getBeanDefinitionType ()Ljava/lang/Class;
	public fun getBeanType ()Ljava/lang/Class;
	public fun load ()Lio/micronaut/inject/BeanDefinition;
}

public final synthetic class elide/runtime/gvm/internals/intrinsics/js/express/$ExpressIntrinsic$IntrospectionRef : io/micronaut/core/beans/AbstractBeanIntrospectionReference {
	public static final field $ANNOTATION_METADATA Lio/micronaut/core/annotation/AnnotationMetadata;
	public fun <init> ()V
	public fun getAnnotationMetadata ()Lio/micronaut/core/annotation/AnnotationMetadata;
	public fun getBeanType ()Ljava/lang/Class;
	public fun getName ()Ljava/lang/String;
	public fun load ()Lio/micronaut/core/beans/BeanIntrospection;
}

public final synthetic class elide/runtime/gvm/internals/intrinsics/js/fetch/$FetchIntrinsic$Definition$Reference : io/micronaut/context/AbstractInitializableBeanDefinitionReference {
	public static final field $ANNOTATION_METADATA Lio/micronaut/core/annotation/AnnotationMetadata;
	public fun <init> ()V
	public fun getBeanDefinitionType ()Ljava/lang/Class;
	public fun getBeanType ()Ljava/lang/Class;
	public fun load ()Lio/micronaut/inject/BeanDefinition;
}

public final synthetic class elide/runtime/gvm/internals/intrinsics/js/fetch/$FetchIntrinsic$IntrospectionRef : io/micronaut/core/beans/AbstractBeanIntrospectionReference {
	public static final field $ANNOTATION_METADATA Lio/micronaut/core/annotation/AnnotationMetadata;
	public fun <init> ()V
	public fun getAnnotationMetadata ()Lio/micronaut/core/annotation/AnnotationMetadata;
	public fun getBeanType ()Ljava/lang/Class;
	public fun getName ()Ljava/lang/String;
	public fun load ()Lio/micronaut/core/beans/BeanIntrospection;
}

public final synthetic class elide/runtime/gvm/internals/intrinsics/js/stream/$CoreStreamsIntrinsic$Definition$Reference : io/micronaut/context/AbstractInitializableBeanDefinitionReference {
	public static final field $ANNOTATION_METADATA Lio/micronaut/core/annotation/AnnotationMetadata;
	public fun <init> ()V
	public fun getBeanDefinitionType ()Ljava/lang/Class;
	public fun getBeanType ()Ljava/lang/Class;
	public fun load ()Lio/micronaut/inject/BeanDefinition;
}

public final synthetic class elide/runtime/gvm/internals/intrinsics/js/stream/$CoreStreamsIntrinsic$IntrospectionRef : io/micronaut/core/beans/AbstractBeanIntrospectionReference {
	public static final field $ANNOTATION_METADATA Lio/micronaut/core/annotation/AnnotationMetadata;
	public fun <init> ()V
	public fun getAnnotationMetadata ()Lio/micronaut/core/annotation/AnnotationMetadata;
	public fun getBeanType ()Ljava/lang/Class;
	public fun getName ()Ljava/lang/String;
	public fun load ()Lio/micronaut/core/beans/BeanIntrospection;
}

public abstract class elide/runtime/gvm/internals/intrinsics/js/struct/map/AbstractJsMap : elide/runtime/intrinsics/js/MapLike {
	public synthetic fun <init> (ZZZZLkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun clear ()V
	public fun compute (Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
	public fun computeIfAbsent (Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
	public fun computeIfPresent (Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
	public final fun entrySet ()Ljava/util/Set;
	public abstract fun getEntries ()Ljava/util/Set;
	public abstract fun getKeys ()Ljava/util/Set;
	public abstract fun getSize ()I
	public abstract fun getValues ()Ljava/util/Collection;
	public final fun keySet ()Ljava/util/Set;
	public fun merge (Ljava/lang/Object;Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
	public fun put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
	public fun putAll (Ljava/util/Map;)V
	public fun putIfAbsent (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
	public fun remove (Ljava/lang/Object;)Ljava/lang/Object;
	public fun remove (Ljava/lang/Object;Ljava/lang/Object;)Z
	public fun replace (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
	public fun replace (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
	public fun replaceAll (Ljava/util/function/BiFunction;)V
	public final fun size ()I
	public final fun values ()Ljava/util/Collection;
}

public abstract class elide/runtime/gvm/internals/intrinsics/js/struct/map/BaseJsMap : elide/runtime/gvm/internals/intrinsics/js/struct/map/AbstractJsMap, java/util/Map, kotlin/jvm/internal/markers/KMappedMarker {
	public synthetic fun <init> (Ljava/util/Map;ZZZZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public synthetic fun <init> (Ljava/util/Map;ZZZZLkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun containsKey (Ljava/lang/Object;)Z
	public fun containsValue (Ljava/lang/Object;)Z
	public fun entries ()Lelide/runtime/intrinsics/js/JsIterator;
	public fun forEach (Lkotlin/jvm/functions/Function1;)V
	public fun get (Ljava/lang/Object;)Ljava/lang/Object;
	protected final fun getBackingMap ()Ljava/util/Map;
	public fun getOrDefault (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
	public fun getSize ()I
	public fun has (Ljava/lang/Object;)Z
	public fun isEmpty ()Z
	public fun keys ()Lelide/runtime/intrinsics/js/JsIterator;
	protected final fun setBackingMap (Ljava/util/Map;)V
	public abstract fun toString ()Ljava/lang/String;
	public fun values ()Lelide/runtime/intrinsics/js/JsIterator;
}

public final class elide/runtime/gvm/internals/intrinsics/js/struct/map/JsMap : elide/runtime/gvm/internals/intrinsics/js/struct/map/BaseJsMap {
	public static final field Factory Lelide/runtime/gvm/internals/intrinsics/js/struct/map/JsMap$Factory;
	public fun <init> ()V
	public fun <init> (I)V
	public fun <init> (Ljava/util/Map;)V
	public static fun copyOf (Ljava/util/Map;)Lelide/runtime/gvm/internals/intrinsics/js/struct/map/JsMap;
	public static fun empty ()Lelide/runtime/gvm/internals/intrinsics/js/struct/map/JsMap;
	public static final fun empty (I)Lelide/runtime/gvm/internals/intrinsics/js/struct/map/JsMap;
	public static fun from (Ljava/util/Collection;)Lelide/runtime/gvm/internals/intrinsics/js/struct/map/JsMap;
	public static fun fromEntries (Ljava/util/Collection;)Lelide/runtime/gvm/internals/intrinsics/js/struct/map/JsMap;
	public static fun fromPairs (Ljava/util/Collection;)Lelide/runtime/gvm/internals/intrinsics/js/struct/map/JsMap;
	public fun getEntries ()Ljava/util/Set;
	public fun getKeys ()Ljava/util/Set;
	public fun getSize ()I
	public fun getValues ()Ljava/util/Collection;
	public static fun of (Ljava/util/Map;)Lelide/runtime/gvm/internals/intrinsics/js/struct/map/JsMap;
	public fun toString ()Ljava/lang/String;
	public static fun unbounded (Ljava/lang/Iterable;)Lelide/runtime/gvm/internals/intrinsics/js/struct/map/JsMap;
	public static fun unboundedEntries (Ljava/lang/Iterable;)Lelide/runtime/gvm/internals/intrinsics/js/struct/map/JsMap;
	public static fun unboundedPairs (Ljava/lang/Iterable;)Lelide/runtime/gvm/internals/intrinsics/js/struct/map/JsMap;
}

public final class elide/runtime/gvm/internals/intrinsics/js/struct/map/JsMap$Factory : elide/runtime/gvm/internals/intrinsics/js/struct/map/AbstractJsMap$MapFactory {
	public fun copyOf (Ljava/util/Map;)Lelide/runtime/gvm/internals/intrinsics/js/struct/map/JsMap;
	public synthetic fun copyOf (Ljava/util/Map;)Ljava/lang/Object;
	public fun empty ()Lelide/runtime/gvm/internals/intrinsics/js/struct/map/JsMap;
	public synthetic fun empty ()Ljava/lang/Object;
	public final fun empty (I)Lelide/runtime/gvm/internals/intrinsics/js/struct/map/JsMap;
	public fun from (Ljava/util/Collection;)Lelide/runtime/gvm/internals/intrinsics/js/struct/map/JsMap;
	public synthetic fun from (Ljava/util/Collection;)Ljava/lang/Object;
	public fun fromEntries (Ljava/util/Collection;)Lelide/runtime/gvm/internals/intrinsics/js/struct/map/JsMap;
	public synthetic fun fromEntries (Ljava/util/Collection;)Ljava/lang/Object;
	public fun fromPairs (Ljava/util/Collection;)Lelide/runtime/gvm/internals/intrinsics/js/struct/map/JsMap;
	public synthetic fun fromPairs (Ljava/util/Collection;)Ljava/lang/Object;
	public fun of (Ljava/util/Map;)Lelide/runtime/gvm/internals/intrinsics/js/struct/map/JsMap;
	public synthetic fun of (Ljava/util/Map;)Ljava/lang/Object;
	public fun unbounded (Ljava/lang/Iterable;)Lelide/runtime/gvm/internals/intrinsics/js/struct/map/JsMap;
	public synthetic fun unbounded (Ljava/lang/Iterable;)Ljava/lang/Object;
	public fun unboundedEntries (Ljava/lang/Iterable;)Lelide/runtime/gvm/internals/intrinsics/js/struct/map/JsMap;
	public synthetic fun unboundedEntries (Ljava/lang/Iterable;)Ljava/lang/Object;
	public fun unboundedPairs (Ljava/lang/Iterable;)Lelide/runtime/gvm/internals/intrinsics/js/struct/map/JsMap;
	public synthetic fun unboundedPairs (Ljava/lang/Iterable;)Ljava/lang/Object;
}

public final class elide/runtime/gvm/internals/intrinsics/js/typed/UUIDValue : elide/runtime/intrinsics/js/typed/UUID {
	public static final field Companion Lelide/runtime/gvm/internals/intrinsics/js/typed/UUIDValue$Companion;
	public static final synthetic fun box-impl (Lelide/runtime/gvm/internals/intrinsics/js/typed/UUIDValue$ValidUUID;)Lelide/runtime/gvm/internals/intrinsics/js/typed/UUIDValue;
	public final fun charAt (I)C
	public fun equals (Ljava/lang/Object;)Z
	public static fun equals-impl (Lelide/runtime/gvm/internals/intrinsics/js/typed/UUIDValue$ValidUUID;Ljava/lang/Object;)Z
	public static final fun equals-impl0 (Lelide/runtime/gvm/internals/intrinsics/js/typed/UUIDValue$ValidUUID;Lelide/runtime/gvm/internals/intrinsics/js/typed/UUIDValue$ValidUUID;)Z
	public fun get (I)C
	public static fun get-impl (Lelide/runtime/gvm/internals/intrinsics/js/typed/UUIDValue$ValidUUID;I)C
	public fun getAsString ()Ljava/lang/String;
	public static fun getAsString-impl (Lelide/runtime/gvm/internals/intrinsics/js/typed/UUIDValue$ValidUUID;)Ljava/lang/String;
	public fun getLength ()I
	public static fun getLength-impl (Lelide/runtime/gvm/internals/intrinsics/js/typed/UUIDValue$ValidUUID;)I
	public fun hashCode ()I
	public static fun hashCode-impl (Lelide/runtime/gvm/internals/intrinsics/js/typed/UUIDValue$ValidUUID;)I
	public synthetic fun length ()I
	public fun subSequence (II)Ljava/lang/CharSequence;
	public static fun subSequence-impl (Lelide/runtime/gvm/internals/intrinsics/js/typed/UUIDValue$ValidUUID;II)Ljava/lang/CharSequence;
	public fun toString ()Ljava/lang/String;
	public static fun toString-impl (Lelide/runtime/gvm/internals/intrinsics/js/typed/UUIDValue$ValidUUID;)Ljava/lang/String;
	public final synthetic fun unbox-impl ()Lelide/runtime/gvm/internals/intrinsics/js/typed/UUIDValue$ValidUUID;
}

public final class elide/runtime/gvm/internals/intrinsics/js/typed/UUIDValue$Companion : elide/runtime/intrinsics/js/typed/UUID$Factory {
	public fun of-8m_k6eQ (Lelide/runtime/gvm/internals/intrinsics/js/typed/UUIDValue$ValidUUID;)Lelide/runtime/gvm/internals/intrinsics/js/typed/UUIDValue$ValidUUID;
	public fun of-KoDiJNU (Ljava/lang/String;)Lelide/runtime/gvm/internals/intrinsics/js/typed/UUIDValue$ValidUUID;
	public fun of-KoDiJNU (Ljava/util/UUID;)Lelide/runtime/gvm/internals/intrinsics/js/typed/UUIDValue$ValidUUID;
	public fun random-G0GOI2s ()Lelide/runtime/gvm/internals/intrinsics/js/typed/UUIDValue$ValidUUID;
}

public final synthetic class elide/runtime/gvm/internals/intrinsics/js/url/$URLIntrinsic$Definition$Reference : io/micronaut/context/AbstractInitializableBeanDefinitionReference {
	public static final field $ANNOTATION_METADATA Lio/micronaut/core/annotation/AnnotationMetadata;
	public fun <init> ()V
	public fun getBeanDefinitionType ()Ljava/lang/Class;
	public fun getBeanType ()Ljava/lang/Class;
	public fun load ()Lio/micronaut/inject/BeanDefinition;
}

public final synthetic class elide/runtime/gvm/internals/intrinsics/js/url/$URLIntrinsic$IntrospectionRef : io/micronaut/core/beans/AbstractBeanIntrospectionReference {
	public static final field $ANNOTATION_METADATA Lio/micronaut/core/annotation/AnnotationMetadata;
	public fun <init> ()V
	public fun getAnnotationMetadata ()Lio/micronaut/core/annotation/AnnotationMetadata;
	public fun getBeanType ()Ljava/lang/Class;
	public fun getName ()Ljava/lang/String;
	public fun load ()Lio/micronaut/core/beans/BeanIntrospection;
}

public final synthetic class elide/runtime/gvm/internals/intrinsics/js/url/$URLSearchParamsIntrinsic$Definition$Reference : io/micronaut/context/AbstractInitializableBeanDefinitionReference {
	public static final field $ANNOTATION_METADATA Lio/micronaut/core/annotation/AnnotationMetadata;
	public fun <init> ()V
	public fun getBeanDefinitionType ()Ljava/lang/Class;
	public fun getBeanType ()Ljava/lang/Class;
	public fun load ()Lio/micronaut/inject/BeanDefinition;
}

public final synthetic class elide/runtime/gvm/internals/intrinsics/js/url/$URLSearchParamsIntrinsic$IntrospectionRef : io/micronaut/core/beans/AbstractBeanIntrospectionReference {
	public static final field $ANNOTATION_METADATA Lio/micronaut/core/annotation/AnnotationMetadata;
	public fun <init> ()V
	public fun getAnnotationMetadata ()Lio/micronaut/core/annotation/AnnotationMetadata;
	public fun getBeanType ()Ljava/lang/Class;
	public fun getName ()Ljava/lang/String;
	public fun load ()Lio/micronaut/core/beans/BeanIntrospection;
}

public final synthetic class elide/runtime/gvm/internals/intrinsics/js/webstreams/$ReadableStreamIntrinsic$Definition$Reference : io/micronaut/context/AbstractInitializableBeanDefinitionReference {
	public static final field $ANNOTATION_METADATA Lio/micronaut/core/annotation/AnnotationMetadata;
	public fun <init> ()V
	public fun getBeanDefinitionType ()Ljava/lang/Class;
	public fun getBeanType ()Ljava/lang/Class;
	public fun load ()Lio/micronaut/inject/BeanDefinition;
}

public final synthetic class elide/runtime/gvm/internals/intrinsics/js/webstreams/$ReadableStreamIntrinsic$IntrospectionRef : io/micronaut/core/beans/AbstractBeanIntrospectionReference {
	public static final field $ANNOTATION_METADATA Lio/micronaut/core/annotation/AnnotationMetadata;
	public fun <init> ()V
	public fun getAnnotationMetadata ()Lio/micronaut/core/annotation/AnnotationMetadata;
	public fun getBeanType ()Ljava/lang/Class;
	public fun getName ()Ljava/lang/String;
	public fun load ()Lio/micronaut/core/beans/BeanIntrospection;
}

public final synthetic class elide/runtime/gvm/internals/js/$JsRuntime$Definition$Reference : io/micronaut/context/AbstractInitializableBeanDefinitionReference {
	public static final field $ANNOTATION_METADATA Lio/micronaut/core/annotation/AnnotationMetadata;
	public fun <init> ()V
	public fun getBeanDefinitionType ()Ljava/lang/Class;
	public fun getBeanType ()Ljava/lang/Class;
	public fun load ()Lio/micronaut/inject/BeanDefinition;
}

public final synthetic class elide/runtime/gvm/internals/js/$JsRuntime$JsRuntimeVFSConfigurator$Definition$Reference : io/micronaut/context/AbstractInitializableBeanDefinitionReference {
	public static final field $ANNOTATION_METADATA Lio/micronaut/core/annotation/AnnotationMetadata;
	public fun <init> ()V
	public fun getBeanDefinitionType ()Ljava/lang/Class;
	public fun getBeanType ()Ljava/lang/Class;
	public fun load ()Lio/micronaut/inject/BeanDefinition;
}

public final synthetic class elide/runtime/gvm/internals/vfs/$EmbeddedGuestVFSImpl$EmbeddedVFSConfigurationFactory$Definition$Reference : io/micronaut/context/AbstractInitializableBeanDefinitionReference {
	public static final field $ANNOTATION_METADATA Lio/micronaut/core/annotation/AnnotationMetadata;
	public fun <init> ()V
	public fun getBeanDefinitionType ()Ljava/lang/Class;
	public fun getBeanType ()Ljava/lang/Class;
	public fun load ()Lio/micronaut/inject/BeanDefinition;
}

public final synthetic class elide/runtime/gvm/internals/vfs/$EmbeddedGuestVFSImpl$EmbeddedVFSConfigurationFactory$Spawn$graalvm0$Definition$Reference : io/micronaut/context/AbstractInitializableBeanDefinitionReference {
	public static final field $ANNOTATION_METADATA Lio/micronaut/core/annotation/AnnotationMetadata;
	public fun <init> ()V
	public fun getBeanDefinitionType ()Ljava/lang/Class;
	public fun getBeanType ()Ljava/lang/Class;
	public fun load ()Lio/micronaut/inject/BeanDefinition;
}

public final synthetic class elide/runtime/gvm/internals/vfs/$GuestVFSPolicy$Intercepted$Definition$Reference : io/micronaut/context/AbstractInitializableBeanDefinitionReference, io/micronaut/inject/AdvisedBeanType {
	public static final field $ANNOTATION_METADATA Lio/micronaut/core/annotation/AnnotationMetadata;
	public fun <init> ()V
	public fun getBeanDefinitionType ()Ljava/lang/Class;
	public fun getBeanType ()Ljava/lang/Class;
	public fun getInterceptedType ()Ljava/lang/Class;
	public fun load ()Lio/micronaut/inject/BeanDefinition;
}

public final synthetic class elide/runtime/gvm/internals/vfs/$HostVFSImpl$HostVFSConfigurationFactory$Definition$Reference : io/micronaut/context/AbstractInitializableBeanDefinitionReference {
	public static final field $ANNOTATION_METADATA Lio/micronaut/core/annotation/AnnotationMetadata;
	public fun <init> ()V
	public fun getBeanDefinitionType ()Ljava/lang/Class;
	public fun getBeanType ()Ljava/lang/Class;
	public fun load ()Lio/micronaut/inject/BeanDefinition;
}

public final synthetic class elide/runtime/gvm/internals/vfs/$HostVFSImpl$HostVFSConfigurationFactory$Spawn$graalvm0$Definition$Reference : io/micronaut/context/AbstractInitializableBeanDefinitionReference {
	public static final field $ANNOTATION_METADATA Lio/micronaut/core/annotation/AnnotationMetadata;
	public fun <init> ()V
	public fun getBeanDefinitionType ()Ljava/lang/Class;
	public fun getBeanType ()Ljava/lang/Class;
	public fun load ()Lio/micronaut/inject/BeanDefinition;
}

public final class elide/runtime/gvm/internals/vfs/AccessDomain : java/lang/Enum {
	public static final field GUEST Lelide/runtime/gvm/internals/vfs/AccessDomain;
	public static final field HOST Lelide/runtime/gvm/internals/vfs/AccessDomain;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public static fun valueOf (Ljava/lang/String;)Lelide/runtime/gvm/internals/vfs/AccessDomain;
	public static fun values ()[Lelide/runtime/gvm/internals/vfs/AccessDomain;
}

public final class elide/runtime/gvm/internals/vfs/AccessRequest {
	public fun <init> (Ljava/util/Set;Lelide/runtime/gvm/internals/vfs/AccessDomain;Lelide/runtime/gvm/internals/vfs/AccessScope;Ljava/nio/file/Path;)V
	public final fun component1 ()Ljava/util/Set;
	public final fun component2 ()Lelide/runtime/gvm/internals/vfs/AccessDomain;
	public final fun component3 ()Lelide/runtime/gvm/internals/vfs/AccessScope;
	public final fun component4 ()Ljava/nio/file/Path;
	public final fun copy (Ljava/util/Set;Lelide/runtime/gvm/internals/vfs/AccessDomain;Lelide/runtime/gvm/internals/vfs/AccessScope;Ljava/nio/file/Path;)Lelide/runtime/gvm/internals/vfs/AccessRequest;
	public static synthetic fun copy$default (Lelide/runtime/gvm/internals/vfs/AccessRequest;Ljava/util/Set;Lelide/runtime/gvm/internals/vfs/AccessDomain;Lelide/runtime/gvm/internals/vfs/AccessScope;Ljava/nio/file/Path;ILjava/lang/Object;)Lelide/runtime/gvm/internals/vfs/AccessRequest;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getDomain ()Lelide/runtime/gvm/internals/vfs/AccessDomain;
	public final fun getPath ()Ljava/nio/file/Path;
	public final fun getScope ()Lelide/runtime/gvm/internals/vfs/AccessScope;
	public final fun getType ()Ljava/util/Set;
	public fun hashCode ()I
	public final fun isRead ()Z
	public final fun isWrite ()Z
	public fun toString ()Ljava/lang/String;
}

public final class elide/runtime/gvm/internals/vfs/AccessResponse {
	public synthetic fun <init> (Lelide/runtime/gvm/internals/vfs/AccessResult;Ljava/lang/String;Ljava/lang/Throwable;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public static final fun allow (Ljava/lang/String;)Lelide/runtime/gvm/internals/vfs/AccessResponse;
	public static final fun deny (Ljava/lang/String;)Lelide/runtime/gvm/internals/vfs/AccessResponse;
	public final fun getErr ()Ljava/lang/Throwable;
	public final fun getPolicy ()Lelide/runtime/gvm/internals/vfs/AccessResult;
	public final fun getReason ()Ljava/lang/String;
	public static final fun unsupported (Ljava/lang/Throwable;Ljava/lang/String;)Lelide/runtime/gvm/internals/vfs/AccessResponse;
}

public final class elide/runtime/gvm/internals/vfs/AccessResult : java/lang/Enum {
	public static final field ALLOW Lelide/runtime/gvm/internals/vfs/AccessResult;
	public static final field DENY Lelide/runtime/gvm/internals/vfs/AccessResult;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public static fun valueOf (Ljava/lang/String;)Lelide/runtime/gvm/internals/vfs/AccessResult;
	public static fun values ()[Lelide/runtime/gvm/internals/vfs/AccessResult;
}

public final class elide/runtime/gvm/internals/vfs/AccessScope : java/lang/Enum {
	public static final field DIRECTORY Lelide/runtime/gvm/internals/vfs/AccessScope;
	public static final field FILE Lelide/runtime/gvm/internals/vfs/AccessScope;
	public static final field UNSPECIFIED Lelide/runtime/gvm/internals/vfs/AccessScope;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public static fun valueOf (Ljava/lang/String;)Lelide/runtime/gvm/internals/vfs/AccessScope;
	public static fun values ()[Lelide/runtime/gvm/internals/vfs/AccessScope;
}

public final class elide/runtime/gvm/internals/vfs/AccessType : java/lang/Enum {
	public static final field DELETE Lelide/runtime/gvm/internals/vfs/AccessType;
	public static final field READ Lelide/runtime/gvm/internals/vfs/AccessType;
	public static final field WRITE Lelide/runtime/gvm/internals/vfs/AccessType;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public static fun valueOf (Ljava/lang/String;)Lelide/runtime/gvm/internals/vfs/AccessType;
	public static fun values ()[Lelide/runtime/gvm/internals/vfs/AccessType;
}

public final class elide/runtime/gvm/internals/vfs/EffectiveGuestVFSConfig {
	public fun <init> ()V
	public final fun component1 ()Z
	public final fun component2 ()Z
	public final fun component3 ()Z
	public final fun component4 ()Lelide/runtime/gvm/internals/vfs/GuestVFSPolicy;
	public final fun component5 ()Ljava/util/List;
	public final fun component6 ()Ljava/lang/String;
	public final fun component7 ()Ljava/lang/String;
	public final fun copy (ZZZLelide/runtime/gvm/internals/vfs/GuestVFSPolicy;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;)Lelide/runtime/gvm/internals/vfs/EffectiveGuestVFSConfig;
	public static synthetic fun copy$default (Lelide/runtime/gvm/internals/vfs/EffectiveGuestVFSConfig;ZZZLelide/runtime/gvm/internals/vfs/GuestVFSPolicy;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Lelide/runtime/gvm/internals/vfs/EffectiveGuestVFSConfig;
	public static final fun empty (ZZZLjava/lang/String;Ljava/lang/String;)Lelide/runtime/gvm/internals/vfs/EffectiveGuestVFSConfig;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getBundle ()Ljava/util/List;
	public final fun getCaseSensitive ()Z
	public static final fun getDEFAULTS$graalvm ()Lelide/runtime/gvm/internals/vfs/EffectiveGuestVFSConfig;
	public final fun getPolicy ()Lelide/runtime/gvm/internals/vfs/GuestVFSPolicy;
	public final fun getReadOnly ()Z
	public final fun getRoot ()Ljava/lang/String;
	public final fun getSupportsSymbolicLinks ()Z
	public final fun getWorkingDirectory ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public static final fun withPolicy (Lelide/runtime/gvm/internals/vfs/GuestVFSPolicy;ZZLjava/lang/String;Ljava/lang/String;)Lelide/runtime/gvm/internals/vfs/EffectiveGuestVFSConfig;
}

public abstract class elide/runtime/gvm/internals/vfs/GuestIOException : java/io/IOException {
	public fun <init> ()V
	public fun <init> (Ljava/lang/String;Ljava/lang/Throwable;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/Throwable;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
}

public abstract interface class elide/runtime/gvm/internals/vfs/GuestVFSPolicy {
	public static final field Companion Lelide/runtime/gvm/internals/vfs/GuestVFSPolicy$Companion;
	public static final field DEFAULT_READ_ONLY Z
	public fun evaluateForPath (Lelide/runtime/gvm/internals/vfs/AccessRequest;)Lelide/runtime/gvm/internals/vfs/AccessResponse;
	public static fun getDEFAULTS ()Lelide/runtime/gvm/internals/vfs/GuestVFSPolicy;
	public fun getReadOnly ()Ljava/lang/Boolean;
}

public final class elide/runtime/gvm/internals/vfs/GuestVFSPolicy$Companion {
	public static final field DEFAULT_READ_ONLY Z
	public final fun getDEFAULTS ()Lelide/runtime/gvm/internals/vfs/GuestVFSPolicy;
}

public final class elide/runtime/gvm/js/JavaScript {
	public static final field INSTANCE Lelide/runtime/gvm/js/JavaScript;
	public static final fun embedded (Ljava/lang/String;)Lelide/runtime/gvm/ExecutableScript;
	public static final fun literal (Ljava/lang/CharSequence;)Lelide/runtime/gvm/ExecutableScript;
}

public final class elide/runtime/gvm/js/JavaScript$Inputs {
	public static final field INSTANCE Lelide/runtime/gvm/js/JavaScript$Inputs;
	public static final fun getEMPTY ()Lelide/runtime/gvm/ExecutionInputs;
	public static final fun requestState (Lelide/ssr/type/RequestState;Ljava/lang/Object;)Lelide/runtime/gvm/RequestExecutionInputs;
	public static synthetic fun requestState$default (Lelide/ssr/type/RequestState;Ljava/lang/Object;ILjava/lang/Object;)Lelide/runtime/gvm/RequestExecutionInputs;
}

public final class elide/runtime/gvm/vfs/EmbeddedGuestVFS {
	public static final field INSTANCE Lelide/runtime/gvm/vfs/EmbeddedGuestVFS;
	public final fun empty ()Lelide/runtime/gvm/internals/GuestVFS;
	public final fun forBundle ([Ljava/io/File;)Lelide/runtime/gvm/internals/GuestVFS;
	public final fun forBundle ([Ljava/net/URI;)Lelide/runtime/gvm/internals/GuestVFS;
	public final fun forBundles (Ljava/util/List;)Lelide/runtime/gvm/internals/GuestVFS;
	public final fun writable ()Lelide/runtime/gvm/internals/GuestVFS;
	public final fun writable (Ljava/io/File;)Lelide/runtime/gvm/internals/GuestVFS;
	public final fun writable (Ljava/net/URI;)Lelide/runtime/gvm/internals/GuestVFS;
	public final fun writable (Ljava/util/List;)Lelide/runtime/gvm/internals/GuestVFS;
}

public final class elide/runtime/gvm/vfs/HostVFS {
	public static final field INSTANCE Lelide/runtime/gvm/vfs/HostVFS;
	public final fun acquire ()Lelide/runtime/gvm/internals/GuestVFS;
	public final fun acquireWritable ()Lelide/runtime/gvm/internals/GuestVFS;
}

public final class elide/runtime/intrinsics/ElideBindings {
	public static final field INSTANCE Lelide/runtime/intrinsics/ElideBindings;
	public final fun install (Ljava/lang/String;Ljava/lang/Object;Lelide/runtime/core/PolyglotContext;Lelide/runtime/core/GuestLanguage;)V
}

public abstract interface class elide/runtime/intrinsics/GuestIntrinsic {
	public abstract fun displayName ()Ljava/lang/String;
	public abstract fun install (Lelide/runtime/intrinsics/GuestIntrinsic$MutableIntrinsicBindings;)V
	public abstract fun language ()Lelide/runtime/gvm/GuestLanguage;
	public fun supports (Lelide/runtime/gvm/GuestLanguage;)Z
}

public abstract interface class elide/runtime/intrinsics/GuestIntrinsic$IntrinsicBindings : java/util/Map, kotlin/jvm/internal/markers/KMappedMarker {
}

public abstract interface class elide/runtime/intrinsics/GuestIntrinsic$MutableIntrinsicBindings : elide/runtime/intrinsics/GuestIntrinsic$IntrinsicBindings, java/util/Map, kotlin/jvm/internal/markers/KMutableMap, org/graalvm/polyglot/proxy/ProxyObject {
}

public final class elide/runtime/intrinsics/GuestIntrinsic$MutableIntrinsicBindings$Factory {
	public static final field INSTANCE Lelide/runtime/intrinsics/GuestIntrinsic$MutableIntrinsicBindings$Factory;
	public static final fun create ()Lelide/runtime/intrinsics/GuestIntrinsic$MutableIntrinsicBindings;
	public static final fun wrap (Ljava/util/Map;)Lelide/runtime/intrinsics/GuestIntrinsic$MutableIntrinsicBindings;
}

public abstract interface class elide/runtime/intrinsics/IntrinsicsResolver {
	public abstract fun resolve (Lelide/runtime/gvm/GuestLanguage;)Ljava/util/Set;
}

public abstract interface class elide/runtime/intrinsics/Symbol : elide/core/api/Symbolic {
	public abstract fun getSymbol ()Ljava/lang/String;
}

public abstract interface class elide/runtime/intrinsics/js/Blob {
}

public abstract interface class elide/runtime/intrinsics/js/Crypto : elide/runtime/intrinsics/js/RandomSource {
	public static final field Companion Lelide/runtime/intrinsics/js/Crypto$Companion;
	public static final field MAX_RANDOM_BYTES_SIZE I
	public abstract fun getSubtle ()Lelide/runtime/intrinsics/js/SubtleCrypto;
}

public final class elide/runtime/intrinsics/js/Crypto$Companion {
	public static final field MAX_RANDOM_BYTES_SIZE I
}

public abstract interface class elide/runtime/intrinsics/js/CryptoKey {
	public abstract fun getAlgorithm ()Ljava/lang/Object;
	public abstract fun getExtractable ()Z
	public abstract fun getType ()Ljava/lang/String;
	public abstract fun getUsages ()[Ljava/lang/String;
}

public abstract interface class elide/runtime/intrinsics/js/CryptoKey$Constructors {
}

public abstract interface class elide/runtime/intrinsics/js/FetchAPI {
	public abstract fun fetch (Lelide/runtime/intrinsics/js/FetchRequest;)Lelide/runtime/intrinsics/js/JsPromise;
	public abstract fun fetch (Lelide/runtime/intrinsics/js/URL;)Lelide/runtime/intrinsics/js/JsPromise;
	public abstract fun fetch (Ljava/lang/String;)Lelide/runtime/intrinsics/js/JsPromise;
}

public abstract interface class elide/runtime/intrinsics/js/FetchHeaders : elide/runtime/intrinsics/js/MultiMapLike {
	public static final field DefaultFactory Lelide/runtime/intrinsics/js/FetchHeaders$DefaultFactory;
	public abstract fun render (Z)Ljava/util/Map;
	public static synthetic fun render$default (Lelide/runtime/intrinsics/js/FetchHeaders;ZILjava/lang/Object;)Ljava/util/Map;
}

public final class elide/runtime/intrinsics/js/FetchHeaders$DefaultFactory : elide/runtime/intrinsics/js/FetchHeaders$Factory {
	public fun empty ()Lelide/runtime/intrinsics/js/FetchHeaders;
	public fun from (Lelide/runtime/intrinsics/js/FetchHeaders;)Lelide/runtime/intrinsics/js/FetchHeaders;
	public fun from ([Lkotlin/Pair;)Lelide/runtime/intrinsics/js/FetchHeaders;
	public fun fromMap (Ljava/util/Map;)Lelide/runtime/intrinsics/js/FetchHeaders;
	public fun fromMultiMap (Ljava/util/Map;)Lelide/runtime/intrinsics/js/FetchHeaders;
	public fun fromPairs (Ljava/util/Collection;)Lelide/runtime/intrinsics/js/FetchHeaders;
}

public abstract interface class elide/runtime/intrinsics/js/FetchHeaders$Factory {
	public abstract fun empty ()Lelide/runtime/intrinsics/js/FetchHeaders;
	public abstract fun from (Lelide/runtime/intrinsics/js/FetchHeaders;)Lelide/runtime/intrinsics/js/FetchHeaders;
	public abstract fun from ([Lkotlin/Pair;)Lelide/runtime/intrinsics/js/FetchHeaders;
	public abstract fun fromMap (Ljava/util/Map;)Lelide/runtime/intrinsics/js/FetchHeaders;
	public abstract fun fromMultiMap (Ljava/util/Map;)Lelide/runtime/intrinsics/js/FetchHeaders;
	public abstract fun fromPairs (Ljava/util/Collection;)Lelide/runtime/intrinsics/js/FetchHeaders;
}

public abstract interface class elide/runtime/intrinsics/js/FetchMutableHeaders : elide/runtime/intrinsics/js/FetchHeaders {
	public abstract fun append (Ljava/lang/String;Ljava/lang/String;)V
	public abstract fun delete (Ljava/lang/String;)V
	public abstract fun set (Ljava/lang/String;Ljava/lang/String;)V
}

public abstract interface class elide/runtime/intrinsics/js/FetchMutableRequest : elide/runtime/intrinsics/js/FetchRequest {
	public static final field DefaultFactory Lelide/runtime/intrinsics/js/FetchMutableRequest$DefaultFactory;
	public static fun forRequest (Lio/micronaut/http/HttpRequest;)Lelide/runtime/intrinsics/js/FetchMutableRequest;
	public abstract fun getHeaders ()Lelide/runtime/intrinsics/js/FetchHeaders;
	public abstract fun getMethod ()Ljava/lang/String;
	public abstract fun getUrl ()Ljava/lang/String;
	public abstract fun setHeaders (Lelide/runtime/intrinsics/js/FetchHeaders;)V
	public abstract fun setMethod (Ljava/lang/String;)V
	public abstract fun setUrl (Ljava/lang/String;)V
}

public final class elide/runtime/intrinsics/js/FetchMutableRequest$DefaultFactory : elide/runtime/intrinsics/js/FetchMutableRequest$RequestFactory {
	public fun forRequest (Lio/micronaut/http/HttpRequest;)Lelide/runtime/intrinsics/js/FetchMutableRequest;
	public synthetic fun forRequest (Lio/micronaut/http/HttpRequest;)Lelide/runtime/intrinsics/js/FetchRequest;
}

public abstract interface class elide/runtime/intrinsics/js/FetchMutableRequest$RequestFactory {
	public abstract fun forRequest (Lio/micronaut/http/HttpRequest;)Lelide/runtime/intrinsics/js/FetchRequest;
}

public abstract interface class elide/runtime/intrinsics/js/FetchMutableResponse : elide/runtime/intrinsics/js/FetchResponse {
	public abstract fun getHeaders ()Lelide/runtime/intrinsics/js/FetchHeaders;
	public abstract fun getStatus ()I
	public abstract fun getStatusText ()Ljava/lang/String;
	public abstract fun getUrl ()Ljava/lang/String;
	public abstract fun setHeaders (Lelide/runtime/intrinsics/js/FetchHeaders;)V
	public abstract fun setStatus (I)V
	public abstract fun setStatusText (Ljava/lang/String;)V
	public abstract fun setUrl (Ljava/lang/String;)V
}

public abstract interface class elide/runtime/intrinsics/js/FetchRequest {
	public abstract fun getBody ()Lelide/runtime/intrinsics/js/ReadableStream;
	public abstract fun getBodyUsed ()Z
	public fun getCache ()Ljava/lang/String;
	public fun getCredentials ()Ljava/lang/String;
	public abstract fun getDestination ()Ljava/lang/String;
	public abstract fun getHeaders ()Lelide/runtime/intrinsics/js/FetchHeaders;
	public fun getIntegrity ()Ljava/lang/String;
	public fun getMethod ()Ljava/lang/String;
	public fun getMode ()Ljava/lang/String;
	public fun getPriority ()Ljava/lang/String;
	public fun getRedirect ()Ljava/lang/String;
	public fun getReferrer ()Ljava/lang/String;
	public fun getReferrerPolicy ()Ljava/lang/String;
	public abstract fun getUrl ()Ljava/lang/String;
}

public final class elide/runtime/intrinsics/js/FetchRequest$Defaults {
	public static final field DEFAULT_CACHE Ljava/lang/String;
	public static final field DEFAULT_CREDENTIALS Ljava/lang/String;
	public static final field DEFAULT_METHOD Ljava/lang/String;
	public static final field DEFAULT_MODE Ljava/lang/String;
	public static final field DEFAULT_PRIORITY Ljava/lang/String;
	public static final field DEFAULT_REDIRECT Ljava/lang/String;
	public static final field DEFAULT_REFERRER Ljava/lang/String;
	public static final field DEFAULT_REFERRER_POLICY Ljava/lang/String;
	public static final field INSTANCE Lelide/runtime/intrinsics/js/FetchRequest$Defaults;
}

public abstract interface class elide/runtime/intrinsics/js/FetchResponse {
	public abstract fun getBody ()Lelide/runtime/intrinsics/js/ReadableStream;
	public abstract fun getBodyUsed ()Z
	public abstract fun getHeaders ()Lelide/runtime/intrinsics/js/FetchHeaders;
	public fun getOk ()Z
	public fun getRedirected ()Z
	public fun getStatus ()I
	public fun getStatusText ()Ljava/lang/String;
	public fun getType ()Ljava/lang/String;
	public fun getUrl ()Ljava/lang/String;
}

public final class elide/runtime/intrinsics/js/FetchResponse$Defaults {
	public static final field DEFAULT_REDIRECTED Z
	public static final field DEFAULT_STATUS I
	public static final field DEFAULT_STATUS_REDIRECT I
	public static final field DEFAULT_STATUS_TEXT Ljava/lang/String;
	public static final field DEFAULT_TYPE Ljava/lang/String;
	public static final field DEFAULT_URL Ljava/lang/String;
	public static final field INSTANCE Lelide/runtime/intrinsics/js/FetchResponse$Defaults;
}

public abstract interface class elide/runtime/intrinsics/js/FetchResponse$Factory {
	public abstract fun error ()Lelide/runtime/intrinsics/js/FetchResponse;
	public abstract fun redirect (Ljava/lang/String;I)Lelide/runtime/intrinsics/js/FetchResponse;
	public static synthetic fun redirect$default (Lelide/runtime/intrinsics/js/FetchResponse$Factory;Ljava/lang/String;IILjava/lang/Object;)Lelide/runtime/intrinsics/js/FetchResponse;
}

public abstract interface class elide/runtime/intrinsics/js/File {
}

public abstract interface class elide/runtime/intrinsics/js/JavaScriptBase64 {
	public abstract fun decode (Ljava/lang/String;)Ljava/lang/String;
	public abstract fun encode (Ljava/lang/String;)Ljava/lang/String;
	public abstract fun encode (Ljava/lang/String;Z)Ljava/lang/String;
}

public abstract interface class elide/runtime/intrinsics/js/JavaScriptConsole {
	public abstract fun error ([Ljava/lang/Object;)V
	public abstract fun info ([Ljava/lang/Object;)V
	public abstract fun log ([Ljava/lang/Object;)V
	public abstract fun warn ([Ljava/lang/Object;)V
}

public abstract interface class elide/runtime/intrinsics/js/JavaScriptStreams {
}

public abstract interface class elide/runtime/intrinsics/js/JsIterator : java/util/Iterator, kotlin/jvm/internal/markers/KMappedMarker, org/graalvm/polyglot/proxy/ProxyIterable, org/graalvm/polyglot/proxy/ProxyIterator {
	public fun getIterator ()Ljava/lang/Object;
	public fun getNext ()Ljava/lang/Object;
	public abstract fun next ()Lelide/runtime/intrinsics/js/JsIterator$JsIteratorResult;
	public fun return (Ljava/lang/Object;)Lelide/runtime/intrinsics/js/JsIterator$JsIteratorResult;
	public fun throw (Lelide/runtime/intrinsics/js/err/Error;)Lelide/runtime/intrinsics/js/JsIterator$JsIteratorResult;
}

public final class elide/runtime/intrinsics/js/JsIterator$JsIteratorFactory {
	public static final field INSTANCE Lelide/runtime/intrinsics/js/JsIterator$JsIteratorFactory;
	public static final fun forIterator (Ljava/util/Iterator;)Lelide/runtime/intrinsics/js/JsIterator;
}

public final class elide/runtime/intrinsics/js/JsIterator$JsIteratorImpl : elide/runtime/intrinsics/js/JsIterator {
	public fun <init> (Ljava/util/Iterator;)V
	public fun getIterator ()Ljava/lang/Object;
	public fun hasNext ()Z
	public fun next ()Lelide/runtime/intrinsics/js/JsIterator$JsIteratorResult;
	public synthetic fun next ()Ljava/lang/Object;
	public fun remove ()V
}

public final class elide/runtime/intrinsics/js/JsIterator$JsIteratorResult {
	public synthetic fun <init> (Ljava/lang/Object;ZLjava/lang/Throwable;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getDone ()Z
	public final fun getValue ()Ljava/lang/Object;
	public static final fun of (Ljava/lang/Object;Z)Lelide/runtime/intrinsics/js/JsIterator$JsIteratorResult;
	public static final fun ofErr (Lelide/runtime/intrinsics/js/err/Error;)Lelide/runtime/intrinsics/js/JsIterator$JsIteratorResult;
}

public abstract interface class elide/runtime/intrinsics/js/JsPromise {
	public abstract fun catch (Lkotlin/jvm/functions/Function1;)Lelide/runtime/intrinsics/js/JsPromise;
	public abstract fun then (Lkotlin/jvm/functions/Function1;)Lelide/runtime/intrinsics/js/JsPromise;
}

public abstract interface class elide/runtime/intrinsics/js/MapLike : java/util/Map, kotlin/jvm/internal/markers/KMappedMarker {
	public abstract fun entries ()Lelide/runtime/intrinsics/js/JsIterator;
	public abstract fun forEach (Lkotlin/jvm/functions/Function1;)V
	public abstract fun get (Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun has (Ljava/lang/Object;)Z
	public abstract fun keys ()Lelide/runtime/intrinsics/js/JsIterator;
	public abstract fun toString ()Ljava/lang/String;
	public abstract fun values ()Lelide/runtime/intrinsics/js/JsIterator;
}

public abstract interface class elide/runtime/intrinsics/js/MapLike$Entry {
	public abstract fun getKey ()Ljava/lang/Object;
	public abstract fun getValue ()Ljava/lang/Object;
}

public abstract interface class elide/runtime/intrinsics/js/MultiMapLike : elide/runtime/intrinsics/js/MapLike {
	public abstract fun getAll (Ljava/lang/Object;)Ljava/util/List;
}

public abstract interface class elide/runtime/intrinsics/js/MutableMapLike : elide/runtime/intrinsics/js/MapLike, java/util/Map, kotlin/jvm/internal/markers/KMutableMap {
	public abstract fun delete (Ljava/lang/Object;)V
	public abstract fun set (Ljava/lang/Object;Ljava/lang/Object;)V
	public abstract fun sort ()V
}

public abstract interface class elide/runtime/intrinsics/js/MutableMultiMapLike : elide/runtime/intrinsics/js/MultiMapLike, elide/runtime/intrinsics/js/MutableMapLike {
	public abstract fun append (Ljava/lang/Object;Ljava/lang/Object;)V
}

public abstract interface class elide/runtime/intrinsics/js/MutableURL : elide/runtime/intrinsics/js/URL {
	public abstract fun getHash ()Ljava/lang/String;
	public abstract fun getHost ()Ljava/lang/String;
	public abstract fun getHostname ()Ljava/lang/String;
	public abstract fun getHref ()Ljava/lang/String;
	public abstract fun getPassword ()Ljava/lang/String;
	public abstract fun getPathname ()Ljava/lang/String;
	public abstract fun getPort ()Ljava/lang/Integer;
	public abstract fun getProtocol ()Ljava/lang/String;
	public abstract fun getSearch ()Ljava/lang/String;
	public abstract fun getUsername ()Ljava/lang/String;
	public abstract fun setHash (Ljava/lang/String;)V
	public abstract fun setHost (Ljava/lang/String;)V
	public abstract fun setHostname (Ljava/lang/String;)V
	public abstract fun setHref (Ljava/lang/String;)V
	public abstract fun setPassword (Ljava/lang/String;)V
	public abstract fun setPathname (Ljava/lang/String;)V
	public abstract fun setPort (Ljava/lang/Integer;)V
	public abstract fun setProtocol (Ljava/lang/String;)V
	public abstract fun setSearch (Ljava/lang/String;)V
	public abstract fun setUsername (Ljava/lang/String;)V
}

public abstract interface class elide/runtime/intrinsics/js/RandomSource {
	public abstract fun getRandomValues (Ljava/lang/Object;)V
	public abstract fun randomUUID ()Lelide/runtime/intrinsics/js/typed/UUID;
}

public abstract interface class elide/runtime/intrinsics/js/ReadableStream {
	public static final field DefaultFactory Lelide/runtime/intrinsics/js/ReadableStream$DefaultFactory;
}

public final class elide/runtime/intrinsics/js/ReadableStream$DefaultFactory : elide/runtime/intrinsics/js/ReadableStream$Factory {
	public fun empty ()Lelide/runtime/intrinsics/js/ReadableStream;
	public fun wrap (Ljava/io/InputStream;)Lelide/runtime/intrinsics/js/ReadableStream;
	public fun wrap (Ljava/io/Reader;)Lelide/runtime/intrinsics/js/ReadableStream;
	public fun wrap (Ljava/nio/ByteBuffer;)Lelide/runtime/intrinsics/js/ReadableStream;
	public fun wrap ([B)Lelide/runtime/intrinsics/js/ReadableStream;
}

public abstract interface class elide/runtime/intrinsics/js/ReadableStream$Factory {
	public abstract fun empty ()Lelide/runtime/intrinsics/js/ReadableStream;
	public abstract fun wrap (Ljava/io/InputStream;)Lelide/runtime/intrinsics/js/ReadableStream;
	public abstract fun wrap (Ljava/io/Reader;)Lelide/runtime/intrinsics/js/ReadableStream;
	public abstract fun wrap (Ljava/nio/ByteBuffer;)Lelide/runtime/intrinsics/js/ReadableStream;
	public abstract fun wrap ([B)Lelide/runtime/intrinsics/js/ReadableStream;
}

public abstract interface class elide/runtime/intrinsics/js/ServerAgent {
	public abstract fun initialize (Lorg/graalvm/polyglot/Context;Ljava/util/concurrent/Phaser;)V
}

public abstract interface class elide/runtime/intrinsics/js/StringLike : java/lang/CharSequence {
}

public abstract interface class elide/runtime/intrinsics/js/SubtleCrypto {
}

public abstract interface class elide/runtime/intrinsics/js/URL : java/io/Serializable {
	public abstract fun getHash ()Ljava/lang/String;
	public abstract fun getHost ()Ljava/lang/String;
	public abstract fun getHostname ()Ljava/lang/String;
	public abstract fun getHref ()Ljava/lang/String;
	public abstract fun getOrigin ()Ljava/lang/String;
	public abstract fun getPassword ()Ljava/lang/String;
	public abstract fun getPathname ()Ljava/lang/String;
	public abstract fun getPort ()Ljava/lang/Integer;
	public abstract fun getProtocol ()Ljava/lang/String;
	public abstract fun getSearch ()Ljava/lang/String;
	public abstract fun getSearchParams ()Lelide/runtime/intrinsics/js/URLSearchParams;
	public abstract fun getUsername ()Ljava/lang/String;
	public abstract fun toJSON ()Ljava/lang/String;
	public abstract fun toString ()Ljava/lang/String;
}

public abstract interface class elide/runtime/intrinsics/js/URL$URLConstructors {
	public abstract fun create (Lelide/runtime/intrinsics/js/URL;)Lelide/runtime/intrinsics/js/URL;
	public abstract fun create (Ljava/lang/String;)Lelide/runtime/intrinsics/js/URL;
	public abstract fun create (Ljava/lang/String;Ljava/lang/String;)Lelide/runtime/intrinsics/js/URL;
}

public abstract interface class elide/runtime/intrinsics/js/URL$URLStaticMethods {
	public abstract fun createObjectURL (Lelide/runtime/intrinsics/js/Blob;)Lelide/runtime/intrinsics/js/URL;
	public abstract fun createObjectURL (Lelide/runtime/intrinsics/js/File;)Lelide/runtime/intrinsics/js/URL;
	public abstract fun revokeObjectURL (Lelide/runtime/intrinsics/js/URL;)V
}

public abstract interface class elide/runtime/intrinsics/js/URLMutableSearchParams : elide/runtime/intrinsics/js/MutableMultiMapLike, elide/runtime/intrinsics/js/URLSearchParams {
}

public abstract interface class elide/runtime/intrinsics/js/URLSearchParams : elide/runtime/intrinsics/js/MultiMapLike, java/io/Serializable {
}

public abstract interface class elide/runtime/intrinsics/js/err/AbstractJSException {
}

public abstract interface class elide/runtime/intrinsics/js/err/AbstractJSException$ErrorFactory {
	public abstract fun create (Ljava/lang/String;Ljava/lang/Throwable;)Lelide/runtime/intrinsics/js/err/AbstractJSException;
	public abstract fun create (Ljava/lang/Throwable;)Lelide/runtime/intrinsics/js/err/AbstractJSException;
	public static synthetic fun create$default (Lelide/runtime/intrinsics/js/err/AbstractJSException$ErrorFactory;Ljava/lang/String;Ljava/lang/Throwable;ILjava/lang/Object;)Lelide/runtime/intrinsics/js/err/AbstractJSException;
}

public abstract class elide/runtime/intrinsics/js/err/Error : java/lang/RuntimeException, elide/runtime/intrinsics/js/err/AbstractJSException {
	public fun <init> ()V
	public fun getCause ()Lelide/runtime/intrinsics/js/err/Error;
	public synthetic fun getCause ()Ljava/lang/Throwable;
	public fun getColumnNumber ()Ljava/lang/Integer;
	public fun getFileName ()Ljava/lang/String;
	public fun getLineNumber ()Ljava/lang/Integer;
	public abstract fun getMessage ()Ljava/lang/String;
	public abstract fun getName ()Ljava/lang/String;
	public final fun getStackTrace ()Lelide/runtime/intrinsics/js/err/Stacktrace;
}

public final class elide/runtime/intrinsics/js/err/QuotaExceededError : elide/runtime/intrinsics/js/err/ValueError {
	public fun <init> (Ljava/lang/String;)V
	public fun getMessage ()Ljava/lang/String;
}

public abstract interface class elide/runtime/intrinsics/js/err/Stacktrace {
}

public abstract class elide/runtime/intrinsics/js/err/TypeError : elide/runtime/intrinsics/js/err/Error, elide/runtime/intrinsics/js/err/AbstractJSException {
	public static final field Factory Lelide/runtime/intrinsics/js/err/TypeError$Factory;
	public fun <init> ()V
	public fun getName ()Ljava/lang/String;
}

public final class elide/runtime/intrinsics/js/err/TypeError$Factory : elide/runtime/intrinsics/js/err/AbstractJSException$ErrorFactory {
	public synthetic fun create (Ljava/lang/String;Ljava/lang/Throwable;)Lelide/runtime/intrinsics/js/err/AbstractJSException;
	public fun create (Ljava/lang/String;Ljava/lang/Throwable;)Lelide/runtime/intrinsics/js/err/TypeError;
	public synthetic fun create (Ljava/lang/Throwable;)Lelide/runtime/intrinsics/js/err/AbstractJSException;
	public fun create (Ljava/lang/Throwable;)Lelide/runtime/intrinsics/js/err/TypeError;
}

public abstract class elide/runtime/intrinsics/js/err/ValueError : elide/runtime/intrinsics/js/err/Error, elide/runtime/intrinsics/js/err/AbstractJSException {
	public static final field Factory Lelide/runtime/intrinsics/js/err/ValueError$Factory;
	public fun <init> ()V
	public fun getName ()Ljava/lang/String;
}

public final class elide/runtime/intrinsics/js/err/ValueError$Factory : elide/runtime/intrinsics/js/err/AbstractJSException$ErrorFactory {
	public synthetic fun create (Ljava/lang/String;Ljava/lang/Throwable;)Lelide/runtime/intrinsics/js/err/AbstractJSException;
	public fun create (Ljava/lang/String;Ljava/lang/Throwable;)Lelide/runtime/intrinsics/js/err/ValueError;
	public synthetic fun create (Ljava/lang/Throwable;)Lelide/runtime/intrinsics/js/err/AbstractJSException;
	public fun create (Ljava/lang/Throwable;)Lelide/runtime/intrinsics/js/err/ValueError;
}

public abstract interface class elide/runtime/intrinsics/js/express/Express : elide/runtime/intrinsics/js/ServerAgent {
}

public abstract interface class elide/runtime/intrinsics/js/express/ExpressApp {
	public abstract fun delete (Ljava/lang/String;Lorg/graalvm/polyglot/Value;)V
	public abstract fun get (Ljava/lang/String;Lorg/graalvm/polyglot/Value;)V
	public abstract fun head (Ljava/lang/String;Lorg/graalvm/polyglot/Value;)V
	public fun listen (I)V
	public abstract fun listen (ILorg/graalvm/polyglot/Value;)V
	public static synthetic fun listen$default (Lelide/runtime/intrinsics/js/express/ExpressApp;ILorg/graalvm/polyglot/Value;ILjava/lang/Object;)V
	public abstract fun options (Ljava/lang/String;Lorg/graalvm/polyglot/Value;)V
	public abstract fun post (Ljava/lang/String;Lorg/graalvm/polyglot/Value;)V
	public abstract fun put (Ljava/lang/String;Lorg/graalvm/polyglot/Value;)V
	public abstract fun use (Ljava/lang/String;Lorg/graalvm/polyglot/Value;)V
	public abstract fun use (Lorg/graalvm/polyglot/Value;)V
}

public abstract interface class elide/runtime/intrinsics/js/express/ExpressRequest {
	public abstract fun getParams ()Lorg/graalvm/polyglot/Value;
}

public abstract interface class elide/runtime/intrinsics/js/express/ExpressResponse {
	public abstract fun send (Lorg/graalvm/polyglot/Value;)V
}

public abstract interface class elide/runtime/intrinsics/js/typed/UUID : elide/runtime/intrinsics/js/StringLike {
	public abstract fun getAsString ()Ljava/lang/String;
}

public abstract interface class elide/runtime/intrinsics/js/typed/UUID$Factory {
	public abstract fun of-8m_k6eQ (Lelide/runtime/gvm/internals/intrinsics/js/typed/UUIDValue$ValidUUID;)Lelide/runtime/gvm/internals/intrinsics/js/typed/UUIDValue$ValidUUID;
	public abstract fun of-KoDiJNU (Ljava/lang/String;)Lelide/runtime/gvm/internals/intrinsics/js/typed/UUIDValue$ValidUUID;
	public abstract fun of-KoDiJNU (Ljava/util/UUID;)Lelide/runtime/gvm/internals/intrinsics/js/typed/UUIDValue$ValidUUID;
	public abstract fun random-G0GOI2s ()Lelide/runtime/gvm/internals/intrinsics/js/typed/UUIDValue$ValidUUID;
}

public final class elide/runtime/intrinsics/js/typed/UUID$UUIDType : java/lang/Enum {
	public static final field V4 Lelide/runtime/intrinsics/js/typed/UUID$UUIDType;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public static fun valueOf (Ljava/lang/String;)Lelide/runtime/intrinsics/js/typed/UUID$UUIDType;
	public static fun values ()[Lelide/runtime/intrinsics/js/typed/UUID$UUIDType;
}

public final class elide/runtime/intrinsics/server/http/HttpContext : java/util/Map, kotlin/jvm/internal/markers/KMutableMap, org/graalvm/polyglot/proxy/ProxyObject {
	public fun clear ()V
	public final fun containsKey (Ljava/lang/Object;)Z
	public fun containsKey (Ljava/lang/String;)Z
	public fun containsValue (Ljava/lang/Object;)Z
	public final fun entrySet ()Ljava/util/Set;
	public final fun get (Ljava/lang/Object;)Ljava/lang/Object;
	public fun get (Ljava/lang/String;)Ljava/lang/Object;
	public fun getEntries ()Ljava/util/Set;
	public fun getKeys ()Ljava/util/Set;
	public fun getMember (Ljava/lang/String;)Ljava/lang/Object;
	public fun getMemberKeys ()Ljava/lang/Object;
	public fun getSize ()I
	public fun getValues ()Ljava/util/Collection;
	public fun hasMember (Ljava/lang/String;)Z
	public fun isEmpty ()Z
	public final fun keySet ()Ljava/util/Set;
	public synthetic fun put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
	public fun put (Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
	public fun putAll (Ljava/util/Map;)V
	public fun putMember (Ljava/lang/String;Lorg/graalvm/polyglot/Value;)V
	public final fun remove (Ljava/lang/Object;)Ljava/lang/Object;
	public fun remove (Ljava/lang/String;)Ljava/lang/Object;
	public final fun size ()I
	public final fun values ()Ljava/util/Collection;
}

public final class elide/runtime/intrinsics/server/http/HttpMethod : java/lang/Enum {
	public static final field CONNECT Lelide/runtime/intrinsics/server/http/HttpMethod;
	public static final field DELETE Lelide/runtime/intrinsics/server/http/HttpMethod;
	public static final field GET Lelide/runtime/intrinsics/server/http/HttpMethod;
	public static final field HEAD Lelide/runtime/intrinsics/server/http/HttpMethod;
	public static final field OPTIONS Lelide/runtime/intrinsics/server/http/HttpMethod;
	public static final field PATCH Lelide/runtime/intrinsics/server/http/HttpMethod;
	public static final field POST Lelide/runtime/intrinsics/server/http/HttpMethod;
	public static final field PUT Lelide/runtime/intrinsics/server/http/HttpMethod;
	public static final field TRACE Lelide/runtime/intrinsics/server/http/HttpMethod;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public static fun valueOf (Ljava/lang/String;)Lelide/runtime/intrinsics/server/http/HttpMethod;
	public static fun values ()[Lelide/runtime/intrinsics/server/http/HttpMethod;
}

public abstract interface class elide/runtime/intrinsics/server/http/HttpRequest {
	public abstract fun getMethod ()Lelide/runtime/intrinsics/server/http/HttpMethod;
	public abstract fun getUri ()Ljava/lang/String;
}

public abstract interface class elide/runtime/intrinsics/server/http/HttpResponse {
	public abstract fun send (ILorg/graalvm/polyglot/Value;)V
}

public abstract interface class elide/runtime/intrinsics/server/http/HttpRouter {
	public abstract fun handle (Ljava/lang/String;Ljava/lang/String;Lorg/graalvm/polyglot/Value;)V
}

public final class elide/runtime/intrinsics/server/http/HttpServerAgent {
	public static final field Companion Lelide/runtime/intrinsics/server/http/HttpServerAgent$Companion;
	public fun <init> ()V
	public final fun run (Lorg/graalvm/polyglot/Source;Lkotlin/jvm/functions/Function0;)V
}

public final class elide/runtime/intrinsics/server/http/HttpServerAgent$Companion {
}

public class elide/runtime/intrinsics/server/http/HttpServerConfig {
	public fun getAutoStart ()Z
	public fun getPort ()I
	public fun onBind (Lorg/graalvm/polyglot/Value;)V
	public fun setAutoStart (Z)V
	public fun setPort (I)V
}

public abstract interface class elide/runtime/intrinsics/server/http/HttpServerEngine {
	public abstract fun getConfig ()Lelide/runtime/intrinsics/server/http/HttpServerConfig;
	public abstract fun getRouter ()Lelide/runtime/intrinsics/server/http/HttpRouter;
	public abstract fun getRunning ()Z
	public abstract fun start ()V
}

public abstract class elide/runtime/plugins/AbstractLanguageConfig {
	public fun <init> ()V
	protected final fun applyBindings (Lelide/runtime/core/PolyglotContext;Lelide/runtime/core/GuestLanguage;)V
	public static synthetic fun applyBindings$default (Lelide/runtime/plugins/AbstractLanguageConfig;Lelide/runtime/core/PolyglotContext;Lelide/runtime/core/GuestLanguage;ILjava/lang/Object;)V
	public final fun bindings (Lkotlin/jvm/functions/Function1;)V
	protected final fun getIntrinsicBindings ()Ljava/util/Map;
}

public abstract class elide/runtime/plugins/AbstractLanguagePlugin : elide/runtime/core/EnginePlugin, elide/runtime/core/GuestLanguage {
	protected static final field Companion Lelide/runtime/plugins/AbstractLanguagePlugin$Companion;
	public fun <init> ()V
	protected fun getManifestKey ()Ljava/lang/String;
	protected final fun initializeEmbeddedScripts (Lelide/runtime/core/PolyglotContext;Lelide/runtime/plugins/AbstractLanguagePlugin$LanguagePluginManifest;)V
	protected final fun installEmbeddedBundles (Lelide/runtime/core/EnginePlugin$InstallationScope;Lelide/runtime/plugins/AbstractLanguagePlugin$LanguagePluginManifest;)V
	protected final fun resolveEmbeddedManifest (Lelide/runtime/core/EnginePlugin$InstallationScope;Z)Lelide/runtime/plugins/AbstractLanguagePlugin$LanguagePluginManifest;
	protected final fun resolveEmbeddedManifest (Lelide/runtime/core/HostPlatform;Z)Lelide/runtime/plugins/AbstractLanguagePlugin$LanguagePluginManifest;
	public static synthetic fun resolveEmbeddedManifest$default (Lelide/runtime/plugins/AbstractLanguagePlugin;Lelide/runtime/core/EnginePlugin$InstallationScope;ZILjava/lang/Object;)Lelide/runtime/plugins/AbstractLanguagePlugin$LanguagePluginManifest;
	public static synthetic fun resolveEmbeddedManifest$default (Lelide/runtime/plugins/AbstractLanguagePlugin;Lelide/runtime/core/HostPlatform;ZILjava/lang/Object;)Lelide/runtime/plugins/AbstractLanguagePlugin$LanguagePluginManifest;
}

protected final class elide/runtime/plugins/AbstractLanguagePlugin$Companion {
}

public final class elide/runtime/plugins/AbstractLanguagePlugin$LanguagePluginManifest {
	public static final field Companion Lelide/runtime/plugins/AbstractLanguagePlugin$LanguagePluginManifest$Companion;
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Ljava/util/List;Ljava/util/Map;Ljava/lang/String;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Ljava/util/List;Ljava/util/Map;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/util/List;
	public final fun component4 ()Ljava/util/List;
	public final fun component5 ()Ljava/util/Map;
	public final fun component6 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Ljava/util/List;Ljava/util/Map;Ljava/lang/String;)Lelide/runtime/plugins/AbstractLanguagePlugin$LanguagePluginManifest;
	public static synthetic fun copy$default (Lelide/runtime/plugins/AbstractLanguagePlugin$LanguagePluginManifest;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Ljava/util/List;Ljava/util/Map;Ljava/lang/String;ILjava/lang/Object;)Lelide/runtime/plugins/AbstractLanguagePlugin$LanguagePluginManifest;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getBundles ()Ljava/util/List;
	public final fun getEngine ()Ljava/lang/String;
	public final fun getLanguage ()Ljava/lang/String;
	public final fun getResources ()Ljava/util/Map;
	public final fun getRoot ()Ljava/lang/String;
	public final fun getScripts ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class elide/runtime/plugins/AbstractLanguagePlugin$LanguagePluginManifest$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/runtime/plugins/AbstractLanguagePlugin$LanguagePluginManifest$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/runtime/plugins/AbstractLanguagePlugin$LanguagePluginManifest;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/runtime/plugins/AbstractLanguagePlugin$LanguagePluginManifest;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class elide/runtime/plugins/AbstractLanguagePlugin$LanguagePluginManifest$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/runtime/plugins/AbstractLanguagePlugin$LanguagePluginManifest$EmbeddedResource {
	public static final field Companion Lelide/runtime/plugins/AbstractLanguagePlugin$LanguagePluginManifest$EmbeddedResource$Companion;
	public fun <init> (Ljava/lang/String;Lelide/runtime/core/HostPlatform;)V
	public synthetic fun <init> (Ljava/lang/String;Lelide/runtime/core/HostPlatform;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Lelide/runtime/core/HostPlatform;
	public final fun copy (Ljava/lang/String;Lelide/runtime/core/HostPlatform;)Lelide/runtime/plugins/AbstractLanguagePlugin$LanguagePluginManifest$EmbeddedResource;
	public static synthetic fun copy$default (Lelide/runtime/plugins/AbstractLanguagePlugin$LanguagePluginManifest$EmbeddedResource;Ljava/lang/String;Lelide/runtime/core/HostPlatform;ILjava/lang/Object;)Lelide/runtime/plugins/AbstractLanguagePlugin$LanguagePluginManifest$EmbeddedResource;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getPath ()Ljava/lang/String;
	public final fun getPlatform ()Lelide/runtime/core/HostPlatform;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class elide/runtime/plugins/AbstractLanguagePlugin$LanguagePluginManifest$EmbeddedResource$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/runtime/plugins/AbstractLanguagePlugin$LanguagePluginManifest$EmbeddedResource$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/runtime/plugins/AbstractLanguagePlugin$LanguagePluginManifest$EmbeddedResource;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/runtime/plugins/AbstractLanguagePlugin$LanguagePluginManifest$EmbeddedResource;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class elide/runtime/plugins/AbstractLanguagePlugin$LanguagePluginManifest$EmbeddedResource$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/runtime/plugins/debug/Debug {
	public static final field Plugin Lelide/runtime/plugins/debug/Debug$Plugin;
	public synthetic fun <init> (Lelide/runtime/plugins/debug/DebugConfig;Lelide/runtime/core/HostPlatform;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getConfig ()Lelide/runtime/plugins/debug/DebugConfig;
}

public final class elide/runtime/plugins/debug/Debug$Plugin : elide/runtime/core/EnginePlugin {
	public fun getKey-wLvarY0 ()Ljava/lang/String;
	public fun install (Lelide/runtime/core/EnginePlugin$InstallationScope;Lkotlin/jvm/functions/Function1;)Lelide/runtime/plugins/debug/Debug;
	public synthetic fun install (Lelide/runtime/core/EnginePlugin$InstallationScope;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;
}

public final class elide/runtime/plugins/debug/DebugConfig {
	public final fun chromeInspector (Lkotlin/jvm/functions/Function1;)V
	public final fun debugAdapter (Lkotlin/jvm/functions/Function1;)V
}

public final class elide/runtime/plugins/debug/DebugConfig$DebugAdapterConfig {
	public final fun getEnabled ()Z
	public final fun getHost ()Ljava/lang/String;
	public final fun getPort ()I
	public final fun getSuspend ()Z
	public final fun getWaitAttached ()Z
	public final fun setEnabled (Z)V
	public final fun setHost (Ljava/lang/String;)V
	public final fun setPort (I)V
	public final fun setSuspend (Z)V
	public final fun setWaitAttached (Z)V
}

public final class elide/runtime/plugins/debug/DebugConfig$InspectorConfig {
	public final fun getEnabled ()Z
	public final fun getHost ()Ljava/lang/String;
	public final fun getInternal ()Z
	public final fun getPath ()Ljava/lang/String;
	public final fun getPort ()I
	public final fun getSourcePaths ()Ljava/util/List;
	public final fun getSuspend ()Z
	public final fun getWaitAttached ()Z
	public final fun setEnabled (Z)V
	public final fun setHost (Ljava/lang/String;)V
	public final fun setInternal (Z)V
	public final fun setPath (Ljava/lang/String;)V
	public final fun setPort (I)V
	public final fun setSourcePaths (Ljava/util/List;)V
	public final fun setSuspend (Z)V
	public final fun setWaitAttached (Z)V
}

public final class elide/runtime/plugins/debug/DebugPluginKt {
	public static final fun debug (Lelide/runtime/core/PolyglotEngineConfiguration;Lkotlin/jvm/functions/Function1;)V
}

public final class elide/runtime/plugins/env/EnvConfig {
	public final fun environment (Ljava/lang/String;Ljava/lang/String;)V
	public final fun environment (Ljava/lang/String;Lkotlin/jvm/functions/Function0;)V
	public final fun environment (Lkotlin/jvm/functions/Function1;)V
	public final fun exposeHostEnv (Ljava/lang/String;Ljava/lang/String;)V
	public static synthetic fun exposeHostEnv$default (Lelide/runtime/plugins/env/EnvConfig;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)V
	public final fun fromDotenv (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
	public final fun mapToHostEnv (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
	public static synthetic fun mapToHostEnv$default (Lelide/runtime/plugins/env/EnvConfig;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)V
}

public final class elide/runtime/plugins/env/EnvConfig$AppEnvConfig {
	public final fun getEnabled ()Z
	public final fun getIsolatedEnvironmentVariables ()Ljava/util/Map;
	public final fun setEnabled (Z)V
	public final fun setEnv (Ljava/lang/String;Lelide/runtime/plugins/env/EnvConfig$EnvVar;)V
}

public abstract interface class elide/runtime/plugins/env/EnvConfig$EnvVar {
	public static final field Companion Lelide/runtime/plugins/env/EnvConfig$EnvVar$Companion;
	public static fun fromDotenv (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lelide/runtime/plugins/env/EnvConfig$EnvVar;
	public abstract fun getName ()Ljava/lang/String;
	public abstract fun getSource ()Lelide/runtime/plugins/env/EnvConfig$EnvVariableSource;
	public abstract fun getValue ()Ljava/lang/String;
	public fun isPresent ()Z
	public static fun mapToHost (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lelide/runtime/plugins/env/EnvConfig$EnvVar;
	public static fun of (Ljava/lang/String;Ljava/lang/String;)Lelide/runtime/plugins/env/EnvConfig$EnvVar;
	public static fun provide (Ljava/lang/String;Ljava/util/function/Supplier;)Lelide/runtime/plugins/env/EnvConfig$EnvVar;
}

public final class elide/runtime/plugins/env/EnvConfig$EnvVar$Companion {
	public final fun fromDotenv (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lelide/runtime/plugins/env/EnvConfig$EnvVar;
	public final fun mapToHost (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lelide/runtime/plugins/env/EnvConfig$EnvVar;
	public static synthetic fun mapToHost$default (Lelide/runtime/plugins/env/EnvConfig$EnvVar$Companion;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Lelide/runtime/plugins/env/EnvConfig$EnvVar;
	public final fun of (Ljava/lang/String;Ljava/lang/String;)Lelide/runtime/plugins/env/EnvConfig$EnvVar;
	public final fun provide (Ljava/lang/String;Ljava/util/function/Supplier;)Lelide/runtime/plugins/env/EnvConfig$EnvVar;
}

public final class elide/runtime/plugins/env/EnvConfig$EnvVar$DotEnvVar : java/lang/Record, elide/runtime/plugins/env/EnvConfig$EnvVar {
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lelide/runtime/plugins/env/EnvConfig$EnvVar$DotEnvVar;
	public static synthetic fun copy$default (Lelide/runtime/plugins/env/EnvConfig$EnvVar$DotEnvVar;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Lelide/runtime/plugins/env/EnvConfig$EnvVar$DotEnvVar;
	public fun equals (Ljava/lang/Object;)Z
	public final fun file ()Ljava/lang/String;
	public synthetic fun getName ()Ljava/lang/String;
	public synthetic fun getSource ()Lelide/runtime/plugins/env/EnvConfig$EnvVariableSource;
	public synthetic fun getValue ()Ljava/lang/String;
	public fun hashCode ()I
	public fun name ()Ljava/lang/String;
	public fun source ()Lelide/runtime/plugins/env/EnvConfig$EnvVariableSource;
	public fun toString ()Ljava/lang/String;
	public fun value ()Ljava/lang/String;
}

public final class elide/runtime/plugins/env/EnvConfig$EnvVar$HostMappedVar : java/lang/Record, elide/runtime/plugins/env/EnvConfig$EnvVar {
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lelide/runtime/plugins/env/EnvConfig$EnvVar$HostMappedVar;
	public static synthetic fun copy$default (Lelide/runtime/plugins/env/EnvConfig$EnvVar$HostMappedVar;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Lelide/runtime/plugins/env/EnvConfig$EnvVar$HostMappedVar;
	public final fun defaultValue ()Ljava/lang/String;
	public fun equals (Ljava/lang/Object;)Z
	public synthetic fun getName ()Ljava/lang/String;
	public synthetic fun getSource ()Lelide/runtime/plugins/env/EnvConfig$EnvVariableSource;
	public synthetic fun getValue ()Ljava/lang/String;
	public fun hashCode ()I
	public final fun mapped ()Ljava/lang/String;
	public fun name ()Ljava/lang/String;
	public fun source ()Lelide/runtime/plugins/env/EnvConfig$EnvVariableSource;
	public fun toString ()Ljava/lang/String;
	public fun value ()Ljava/lang/String;
}

public final class elide/runtime/plugins/env/EnvConfig$EnvVar$InlineEnvVar : java/lang/Record, elide/runtime/plugins/env/EnvConfig$EnvVar {
	public fun <init> (Ljava/lang/String;Ljava/lang/String;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;)Lelide/runtime/plugins/env/EnvConfig$EnvVar$InlineEnvVar;
	public static synthetic fun copy$default (Lelide/runtime/plugins/env/EnvConfig$EnvVar$InlineEnvVar;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Lelide/runtime/plugins/env/EnvConfig$EnvVar$InlineEnvVar;
	public fun equals (Ljava/lang/Object;)Z
	public synthetic fun getName ()Ljava/lang/String;
	public synthetic fun getSource ()Lelide/runtime/plugins/env/EnvConfig$EnvVariableSource;
	public synthetic fun getValue ()Ljava/lang/String;
	public fun hashCode ()I
	public fun name ()Ljava/lang/String;
	public fun source ()Lelide/runtime/plugins/env/EnvConfig$EnvVariableSource;
	public fun toString ()Ljava/lang/String;
	public fun value ()Ljava/lang/String;
}

public final class elide/runtime/plugins/env/EnvConfig$EnvVar$SuppliedEnvVar : java/lang/Record, elide/runtime/plugins/env/EnvConfig$EnvVar {
	public fun <init> (Ljava/lang/String;Ljava/util/function/Supplier;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;Ljava/util/function/Supplier;)Lelide/runtime/plugins/env/EnvConfig$EnvVar$SuppliedEnvVar;
	public static synthetic fun copy$default (Lelide/runtime/plugins/env/EnvConfig$EnvVar$SuppliedEnvVar;Ljava/lang/String;Ljava/util/function/Supplier;ILjava/lang/Object;)Lelide/runtime/plugins/env/EnvConfig$EnvVar$SuppliedEnvVar;
	public fun equals (Ljava/lang/Object;)Z
	public synthetic fun getName ()Ljava/lang/String;
	public synthetic fun getSource ()Lelide/runtime/plugins/env/EnvConfig$EnvVariableSource;
	public synthetic fun getValue ()Ljava/lang/String;
	public fun hashCode ()I
	public fun name ()Ljava/lang/String;
	public fun source ()Lelide/runtime/plugins/env/EnvConfig$EnvVariableSource;
	public fun toString ()Ljava/lang/String;
	public fun value ()Ljava/lang/String;
}

public final class elide/runtime/plugins/env/EnvConfig$EnvVariableSource : java/lang/Enum {
	public static final field DOTENV Lelide/runtime/plugins/env/EnvConfig$EnvVariableSource;
	public static final field HOST Lelide/runtime/plugins/env/EnvConfig$EnvVariableSource;
	public static final field INLINE Lelide/runtime/plugins/env/EnvConfig$EnvVariableSource;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public static fun valueOf (Ljava/lang/String;)Lelide/runtime/plugins/env/EnvConfig$EnvVariableSource;
	public static fun values ()[Lelide/runtime/plugins/env/EnvConfig$EnvVariableSource;
}

public final class elide/runtime/plugins/env/EnvPluginKt {
	public static final fun environment (Lelide/runtime/core/PolyglotEngineConfiguration;Lkotlin/jvm/functions/Function1;)V
}

public final class elide/runtime/plugins/env/Environment {
	public static final field Plugin Lelide/runtime/plugins/env/Environment$Plugin;
	public synthetic fun <init> (Lelide/runtime/plugins/env/EnvConfig;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getConfig ()Lelide/runtime/plugins/env/EnvConfig;
	public final fun install (Lelide/runtime/core/PolyglotContext;Lelide/runtime/core/GuestLanguage;)V
}

public final class elide/runtime/plugins/env/Environment$Plugin : elide/runtime/core/EnginePlugin {
	public fun getKey-wLvarY0 ()Ljava/lang/String;
	public fun install (Lelide/runtime/core/EnginePlugin$InstallationScope;Lkotlin/jvm/functions/Function1;)Lelide/runtime/plugins/env/Environment;
	public synthetic fun install (Lelide/runtime/core/EnginePlugin$InstallationScope;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;
}

public final class elide/runtime/plugins/js/ExtensionsKt {
	public static final fun javascript (Lelide/runtime/core/PolyglotContext;Ljava/lang/String;ZLjava/lang/String;)Lorg/graalvm/polyglot/Value;
	public static synthetic fun javascript$default (Lelide/runtime/core/PolyglotContext;Ljava/lang/String;ZLjava/lang/String;ILjava/lang/Object;)Lorg/graalvm/polyglot/Value;
}

public final class elide/runtime/plugins/js/JavaScript {
	public static final field Plugin Lelide/runtime/plugins/js/JavaScript$Plugin;
	public synthetic fun <init> (Lelide/runtime/plugins/js/JavaScriptConfig;Lelide/runtime/plugins/AbstractLanguagePlugin$LanguagePluginManifest;Lelide/runtime/plugins/env/Environment;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
}

public final class elide/runtime/plugins/js/JavaScript$Plugin : elide/runtime/plugins/AbstractLanguagePlugin {
	public fun getKey-wLvarY0 ()Ljava/lang/String;
	public fun getLanguageId ()Ljava/lang/String;
	public fun install (Lelide/runtime/core/EnginePlugin$InstallationScope;Lkotlin/jvm/functions/Function1;)Lelide/runtime/plugins/js/JavaScript;
	public synthetic fun install (Lelide/runtime/core/EnginePlugin$InstallationScope;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;
}

public final class elide/runtime/plugins/js/JavaScriptConfig : elide/runtime/plugins/AbstractLanguageConfig {
	public fun <init> ()V
	public final fun builtinModules (Lkotlin/jvm/functions/Function1;)V
	public final fun getCharset ()Ljava/nio/charset/Charset;
	public final fun getDefaultLocale ()Ljava/util/Locale;
	public final fun getEsm ()Z
	public final fun getInteractive ()Z
	public final fun getLanguage ()Lelide/runtime/plugins/js/JavaScriptVersion;
	public final fun getLocale ()Ljava/util/Locale;
	public final fun getSourceMaps ()Z
	public final fun getTimezone ()Ljava/time/ZoneId;
	public final fun getTypescript ()Z
	public final fun getV8 ()Z
	public final fun getWasm ()Z
	public final fun npm (Lkotlin/jvm/functions/Function1;)V
	public final fun setCharset (Ljava/nio/charset/Charset;)V
	public final fun setDefaultLocale (Ljava/util/Locale;)V
	public final fun setEsm (Z)V
	public final fun setInteractive (Z)V
	public final fun setLanguage (Lelide/runtime/plugins/js/JavaScriptVersion;)V
	public final fun setLocale (Ljava/util/Locale;)V
	public final fun setSourceMaps (Z)V
	public final fun setTimezone (Ljava/time/ZoneId;)V
	public final fun setTypescript (Z)V
	public final fun setV8 (Z)V
	public final fun setWasm (Z)V
}

public final class elide/runtime/plugins/js/JavaScriptConfig$BuiltInModulesConfig {
	public fun <init> (Lelide/runtime/plugins/js/JavaScriptConfig;)V
	public final fun replaceModule (Ljava/lang/String;Ljava/lang/String;)V
}

public final class elide/runtime/plugins/js/JavaScriptConfig$NpmConfig {
	public fun <init> (Lelide/runtime/plugins/js/JavaScriptConfig;)V
	public final fun getEnabled ()Z
	public final fun getModulesPath ()Ljava/lang/String;
	public final fun setEnabled (Z)V
	public final fun setModulesPath (Ljava/lang/String;)V
}

public final class elide/runtime/plugins/js/JavaScriptVersion : java/lang/Enum {
	public static final field ES2017 Lelide/runtime/plugins/js/JavaScriptVersion;
	public static final field ES2018 Lelide/runtime/plugins/js/JavaScriptVersion;
	public static final field ES2019 Lelide/runtime/plugins/js/JavaScriptVersion;
	public static final field ES2020 Lelide/runtime/plugins/js/JavaScriptVersion;
	public static final field ES2021 Lelide/runtime/plugins/js/JavaScriptVersion;
	public static final field ES2022 Lelide/runtime/plugins/js/JavaScriptVersion;
	public static final field ES5 Lelide/runtime/plugins/js/JavaScriptVersion;
	public static final field ES6 Lelide/runtime/plugins/js/JavaScriptVersion;
	public static final field LATEST Lelide/runtime/plugins/js/JavaScriptVersion;
	public static final field STABLE Lelide/runtime/plugins/js/JavaScriptVersion;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public static fun valueOf (Ljava/lang/String;)Lelide/runtime/plugins/js/JavaScriptVersion;
	public static fun values ()[Lelide/runtime/plugins/js/JavaScriptVersion;
}

public final class elide/runtime/plugins/vfs/Vfs {
	public static final field Plugin Lelide/runtime/plugins/vfs/Vfs$Plugin;
	public synthetic fun <init> (Lelide/runtime/plugins/vfs/VfsConfig;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getConfig ()Lelide/runtime/plugins/vfs/VfsConfig;
}

public final class elide/runtime/plugins/vfs/Vfs$Plugin : elide/runtime/core/EnginePlugin {
	public fun getKey-wLvarY0 ()Ljava/lang/String;
	public fun install (Lelide/runtime/core/EnginePlugin$InstallationScope;Lkotlin/jvm/functions/Function1;)Lelide/runtime/plugins/vfs/Vfs;
	public synthetic fun install (Lelide/runtime/core/EnginePlugin$InstallationScope;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;
}

public final class elide/runtime/plugins/vfs/VfsConfig {
	public final fun getWritable ()Z
	public final fun include (Ljava/net/URI;)V
	public final fun setWritable (Z)V
}

public final class elide/runtime/plugins/vfs/VfsConfigKt {
	public static final fun include (Lelide/runtime/plugins/vfs/VfsConfig;Ljava/lang/String;)V
	public static final fun include (Lelide/runtime/plugins/vfs/VfsConfig;Ljava/net/URL;)V
}

public final class elide/runtime/plugins/vfs/VfsPluginKt {
	public static final fun vfs (Lelide/runtime/core/PolyglotEngineConfiguration;Lkotlin/jvm/functions/Function1;)V
}

