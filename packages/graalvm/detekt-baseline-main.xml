<?xml version='1.0' encoding='UTF-8'?>
<SmellBaseline>
  <ManuallySuppressedIssues/>
  <CurrentIssues>
    <ID>AbstractClassCanBeConcreteClass:AbstractNodeBuiltinModule.kt:AbstractNodeBuiltinModule$AbstractNodeBuiltinModule</ID>
    <ID>AbstractClassCanBeConcreteClass:GuestIOException.kt:GuestIOException$GuestIOException</ID>
    <ID>AbstractClassCanBeConcreteClass:NodeChildProcess.kt:AbstractChildProcessHandle$AbstractChildProcessHandle</ID>
    <ID>AbstractClassCanBeConcreteClass:NodeChildProcess.kt:ChildProcessException$ChildProcessException</ID>
    <ID>AbstractClassCanBeConcreteClass:NodeFilesystem.kt:FilesystemBase$FilesystemBase</ID>
    <ID>AbstractClassCanBeInterface:DeveloperScript.kt:DeveloperScript$DeveloperScript</ID>
    <ID>AbstractClassCanBeInterface:GVMInvocationBindings.kt:GVMInvocationBindings$GVMInvocationBindings</ID>
    <ID>ForbiddenComment:ElideLLMModule.kt:ElideLLMImpl$// TODO: resolve this based on config</ID>
    <ID>ForbiddenComment:EmbeddedGuestVFSImpl.kt:EmbeddedGuestVFSImpl.EmbeddedVFSFactory$// @TODO: cannot defer this because indexing happens as a side-effect</ID>
    <ID>ForbiddenComment:HostVFS.kt:HostVFS$// @TODO: OS-specific? configurable?</ID>
    <ID>ForbiddenComment:IntrinsicsResolver.kt:IntrinsicsResolver$// @TODO: disablement</ID>
    <ID>ForbiddenComment:JavaScript.kt:JavaScript$// @TODO: breakage in graalvm with `en_US`</ID>
    <ID>ForbiddenComment:JsEncoding.kt:TextDecoder$// @TODO: honor `DecodeOptions` from host?</ID>
    <ID>ForbiddenComment:NettyHttpResponse.kt:NettyHttpResponse$// TODO: implement body stream</ID>
    <ID>ForbiddenComment:NettyHttpResponse.kt:NettyHttpResponse$// TODO: implement bodyUsed</ID>
    <ID>ForbiddenComment:NettyHttpResponse.kt:NettyHttpResponse$// TODO: implement headers</ID>
    <ID>ForbiddenComment:NettyHttpResponse.kt:NettyHttpResponse$// TODO: support JSON objects and other types of content</ID>
    <ID>ForbiddenComment:NettyRequestHandler.kt:// @TODO: write body</ID>
    <ID>ForbiddenComment:NodeOperatingSystem.kt:NodeOperatingSystem.BaseOS$// @TODO: implement 5 and 15 minute averages</ID>
    <ID>ForbiddenComment:NodeStream.kt:NodeStreamModule$// @TODO: Cannot register natively because some stream types are polyfilled</ID>
    <ID>ForbiddenComment:NodeURL.kt:NodeURL$// TODO: Implement these methods.</ID>
    <ID>ForbiddenComment:NodeZlib.kt:BrotliDecompressStream$// @TODO: flushing for readables</ID>
    <ID>ForbiddenComment:NodeZlib.kt:InflateStream$// @TODO: flushing for readables</ID>
    <ID>ForbiddenComment:NodeZlib.kt:NodeZlib$// @TODO: honor zlib options</ID>
    <ID>ForbiddenComment:NodeZlib.kt:NodeZlib$// @TODO: not yet implemented</ID>
    <ID>ForbiddenComment:NodeZlib.kt:UnzipStream$// @TODO: flushing for readables</ID>
    <ID>ForbiddenComment:TypeError.kt:// @TODO: deprecate and replace with type mapping</ID>
    <ID>ImplicitDefaultLocale:NodeOperatingSystem.kt:NodeOperatingSystem.BaseOS$String.format( "%d.%d.%d.%d", (bits and 0x0000000000ff000000L) shr 24, (bits and 0x0000000000ff0000L) shr 16, (bits and 0x0000000000ff00L) shr 8, bits and 0xffL, )</ID>
    <ID>IteratorNotThrowingNoSuchElementException:JsIterator.kt:JsIterator&lt;T> : IteratorProxyIteratorProxyIterable</ID>
    <ID>LongParameterList:EmbeddedGuestVFSImpl.kt:EmbeddedGuestVFSImpl.EmbeddedVFSFactory$( bundle: Int, folder: ArchiveEntry, tarball: ArchiveInputStream&lt;*>, bufstream: BufferedInputStream, memoryFS: FileSystem, prefix: String, deferred: Boolean, registry: MutableMap&lt;String, VfsObjectInfo>, base: Long = 0L, )</ID>
    <ID>LongParameterList:EmbeddedGuestVFSImpl.kt:EmbeddedGuestVFSImpl.EmbeddedVFSFactory$( image: Pair&lt;String, InputStream>?, streams: List&lt;Pair&lt;String, InputStream>>, fsConfig: Configuration.Builder, deferred: Boolean = Settings.DEFAULT_DEFERRED_READS, registry: MutableMap&lt;String, VfsObjectInfo> = mutableMapOf(), bundleMapping: MutableMap&lt;Int, BundleInfo> = mutableMapOf(), )</ID>
    <ID>LongParameterList:EmbeddedGuestVFSImpl.kt:EmbeddedGuestVFSImpl.EmbeddedVFSFactory$( paths: List&lt;URI>, files: List&lt;File>, fsConfig: Configuration.Builder, deferred: Boolean = Settings.DEFAULT_DEFERRED_READS, registry: MutableMap&lt;String, VfsObjectInfo> = mutableMapOf(), bundleMapping: MutableMap&lt;Int, BundleInfo> = mutableMapOf(), )</ID>
    <ID>LongParameterList:Extensions.kt:( source: String, esm: Boolean = false, name: String? = null, internals: Boolean = false, interactive: Boolean = false, cached: Boolean = true, uri: URI? = null, unlockInternals: Boolean = false, )</ID>
    <ID>LongParameterList:FetchResponseIntrinsic.kt:FetchResponseIntrinsic.ResponseConstructors$( url: String, status: Int, statusText: String, headers: FetchHeaders, body: ReadableStream? = null, redirected: Boolean = false, )</ID>
    <ID>LongParameterList:NetworkInterfaceInfo.kt:NetworkInterfaceInfo.Companion$( address: String, netmask: String, family: String, mac: String, internal: Boolean, cidr: String, scopeid: Int? = null, )</ID>
    <ID>LongParameterList:NodeProcess.kt:NodeProcess.NodeProcessModuleImpl$( private val activePlatform: ProcessPlatform, private val activeArch: ProcessArch, private val argvMediator: ArgvAccessor, private val envApi: EnvAccessor, private val exiter: VmExitHandler, private val cwdAccessor: CwdAccessor, private val pidAccessor: PidAccessor, )</ID>
    <ID>LongParameterList:URLIntrinsic.kt:URLIntrinsic.ParsedURL$( protocol: String? = null, port: Int? = null, host: String? = null, hostname: String? = null, pathname: String? = null, search: String? = null, hash: String? = null, username: String? = null, password: String? = null, )</ID>
    <ID>MagicNumber:DebugConfig.kt:DebugConfig.DebugAdapterConfig$4711</ID>
    <ID>MagicNumber:DebugConfig.kt:DebugConfig.InspectorConfig$4200</ID>
    <ID>MagicNumber:FetchResponse.kt:FetchResponse$200</ID>
    <ID>MagicNumber:FetchResponse.kt:FetchResponse$299</ID>
    <ID>MagicNumber:HttpServerConfig.kt:HttpServerConfig$65535</ID>
    <ID>MagicNumber:URLIntrinsic.kt:URLIntrinsic.Companion$65535</ID>
    <ID>MagicNumber:URLIntrinsic.kt:URLIntrinsic.ParsedURL.Companion$31</ID>
    <ID>MaxLineLength:JsConcurrentMap.kt:JsConcurrentMap.Factory$*</ID>
    <ID>MaxLineLength:JsMutableMultiMap.kt:JsMutableMultiMap.Factory$@JvmStatic override</ID>
    <ID>NestedBlockDepth:EmbeddedGuestVFSImpl.kt:EmbeddedGuestVFSImpl.EmbeddedVFSFactory$@JvmStatic private fun metadataForTarball( inputs: Sequence&lt;ArchiveInputStream&lt;*>>, memoryFS: FileSystem, deferred: Boolean, registry: MutableMap&lt;String, VfsObjectInfo>, ): FilesystemInfo</ID>
    <ID>NestedBlockDepth:EmbeddedGuestVFSImpl.kt:EmbeddedGuestVFSImpl.EmbeddedVFSFactory$@JvmStatic private fun metadataForTarballDirectory( bundle: Int, folder: ArchiveEntry, tarball: ArchiveInputStream&lt;*>, bufstream: BufferedInputStream, memoryFS: FileSystem, prefix: String, deferred: Boolean, registry: MutableMap&lt;String, VfsObjectInfo>, base: Long = 0L, ): Triple&lt;DirectoryRecordBuilder, ArchiveEntry, Long></ID>
    <ID>NestedBlockDepth:HttpServerConfig.kt:HttpServerConfig$override fun putMember(key: String?, value: Value?): Unit</ID>
    <ID>NestedBlockDepth:NodeStream.kt:AbstractReadable$private fun pump(untilHaltedOrExhausted: Boolean = true)</ID>
    <ID>NestedBlockDepth:SqliteQueryRenderer.kt:SqliteQueryRenderer$private fun StringBuilder.renderValue( trigger: Char, renderedSoFar: Int, subject: String, position: Int, ctx: QueryTemplateContext?, ): Int</ID>
    <ID>NestedBlockDepth:URLIntrinsic.kt:URLIntrinsic.ParsedURL$private fun copySpliceHash(fragment: String): ParsedURL</ID>
    <ID>NestedBlockDepth:URLIntrinsic.kt:URLIntrinsic.ParsedURL$private fun copySpliceProtocol(protocol: String): ParsedURL</ID>
    <ID>NestedBlockDepth:URLIntrinsic.kt:URLIntrinsic.ParsedURL$private fun copySpliceSearch(query: String): ParsedURL</ID>
    <ID>NestedClassesVisibility:URLSearchParamsIntrinsic.kt:URLSearchParamsIntrinsic$MutableURLSearchParams : AbstractMutableURLSearchParamsIMutableSearchParams</ID>
    <ID>NestedClassesVisibility:URLSearchParamsIntrinsic.kt:URLSearchParamsIntrinsic$URLSearchParams : AbstractURLSearchParamsIURLSearchParams</ID>
    <ID>RethrowCaughtException:AbstractGVMScript.kt:AbstractGVMScript$throw exc</ID>
    <ID>SpreadOperator:AbstractDelegateVFS.kt:AbstractDelegateVFS$(segments[0], *segments.drop(1).toTypedArray())</ID>
    <ID>SpreadOperator:EmbeddedGuestVFSImpl.kt:EmbeddedGuestVFSImpl.EmbeddedVFSFactory$(*supportedFeatures())</ID>
    <ID>SpreadOperator:EmbeddedGuestVFSImpl.kt:EmbeddedGuestVFSImpl.EmbeddedVFSFactory$(views.first(), *(views.drop(1).toTypedArray()))</ID>
    <ID>SpreadOperator:NativeTransportFeature.kt:NativeTransportFeature$( "umbrella", *impl, builtin = true, )</ID>
    <ID>SpreadOperator:NativeTransportFeature.kt:NativeTransportFeature$("epoll", "aarch64", *epollImpls)</ID>
    <ID>SpreadOperator:NativeTransportFeature.kt:NativeTransportFeature$("epoll", "x86-64", *epollImpls)</ID>
    <ID>SpreadOperator:NativeTransportFeature.kt:NativeTransportFeature$("kqueue", "aarch64", *kqueueImpls)</ID>
    <ID>SpreadOperator:NativeTransportFeature.kt:NativeTransportFeature$("kqueue", "x86-64", *kqueueImpls)</ID>
    <ID>SpreadOperator:SQLiteTransactor.kt:SQLiteTransactor$(*args)</ID>
    <ID>SpreadOperator:SqliteModule.kt:SqliteDatabaseProxy$(*args)</ID>
    <ID>SpreadOperator:SqliteModule.kt:SqliteDatabaseProxy$(query.asHostObject&lt;Statement>(), *it.drop(1).toTypedArray())</ID>
    <ID>SpreadOperator:SqliteModule.kt:SqliteDatabaseProxy$(query.asString(), *it.drop(1).toTypedArray())</ID>
    <ID>SpreadOperator:SqliteModule.kt:SqliteDatabaseProxy$(query.asString(), *rest)</ID>
    <ID>SwallowedException:ElideLLMModule.kt:ElideLocalLLMImpl$err: ExecutionException</ID>
    <ID>SwallowedException:URLIntrinsic.kt:URLIntrinsic.ParsedURL$e: java.net.URISyntaxException</ID>
    <ID>SwallowedException:URLIntrinsic.kt:URLIntrinsic.ParsedURL$syntaxErr: java.net.URISyntaxException</ID>
    <ID>ThrowsCount:AbortSignal.kt:AbortSignal$@Polyglot override fun throwIfAborted()</ID>
    <ID>ThrowsCount:SqliteQueryRenderer.kt:SqliteQueryRenderer$private fun StringBuilder.renderValue( trigger: Char, renderedSoFar: Int, subject: String, position: Int, ctx: QueryTemplateContext?, ): Int</ID>
    <ID>ThrowsCount:URLSearchParamsIntrinsic.kt:private fun IURLSearchParams.pluckMember(key: String): Any</ID>
    <ID>ThrowsCount:WebCryptoIntrinsic.kt:WebCryptoIntrinsic$@Suppress("UNCHECKED_CAST") @Polyglot override fun getRandomValues(typedArray: Any)</ID>
    <ID>TooGenericExceptionCaught:AbstractGVMScript.kt:AbstractGVMScript$exc: Exception</ID>
    <ID>TooGenericExceptionCaught:JsIterator.kt:JsIterator.JsIteratorImpl$err: Throwable</ID>
    <ID>TooGenericExceptionCaught:SqliteModule.kt:SqliteDatabaseProxy$err: Throwable</ID>
    <ID>TooGenericExceptionCaught:SqliteModule.kt:SqliteDatabaseProxy.SQLiteTransactionImpl$err: Throwable</ID>
    <ID>UnsafeCallOnNullableType:CustomEvent.kt:CustomEvent$name!!</ID>
    <ID>UnsafeCallOnNullableType:EmbeddedGuestVFSImpl.kt:EmbeddedGuestVFSImpl$found!!</ID>
    <ID>UnsafeCallOnNullableType:EmbeddedGuestVFSImpl.kt:EmbeddedGuestVFSImpl$foundBytes!!</ID>
    <ID>UnsafeCallOnNullableType:EmbeddedGuestVFSImpl.kt:EmbeddedGuestVFSImpl.EmbeddedVFSFactory$bufstream!!</ID>
    <ID>UnsafeCallOnNullableType:EmbeddedGuestVFSImpl.kt:EmbeddedGuestVFSImpl.EmbeddedVFSFactory$builder.zip!!</ID>
    <ID>UnsafeCallOnNullableType:EnvPlugin.kt:Environment$it.value.value!!</ID>
    <ID>UnsafeCallOnNullableType:FetchHeadersIntrinsic.kt:FetchHeadersIntrinsic$get(it)!!</ID>
    <ID>UnsafeCallOnNullableType:GraalVMConfiguration.kt:GraalVMConfiguration$inFlight[plugin.key.id]!!</ID>
    <ID>UnsafeCallOnNullableType:GuestIntrinsic.kt:GuestIntrinsic.MutableIntrinsicBindings.Factory.&lt;no name provided>$from[it]!!</ID>
    <ID>UnsafeCallOnNullableType:HttpServerConfig.kt:HttpServerConfig$value!!</ID>
    <ID>UnsafeCallOnNullableType:NodeFilesystem.kt:NodeFilesystemProxy$options!!</ID>
    <ID>UnsafeCallOnNullableType:NodeOperatingSystem.kt:NodeOperatingSystem.BaseOS$priority!!</ID>
    <ID>UnsafeCallOnNullableType:SqliteModule.kt:SqliteDatabaseProxy.SQLiteTransactionImpl$db.get().also { if (it == null || !it.active) error("Database is closed") }!!</ID>
    <ID>UnsafeCallOnNullableType:URLIntrinsic.kt:URLIntrinsic.CachedURLValue$processor!!</ID>
    <ID>UnusedParameter:VfsPlugin.kt:Vfs$@Suppress("unused_parameter") builder: PolyglotEngineBuilder</ID>
    <ID>UnusedPrivateProperty:ElideLLMModule.kt:ElideLocalLLMImpl$private val guestExec: GuestExecutorProvider</ID>
    <ID>UnusedPrivateProperty:ElideLLMModule.kt:ElideRemoteLLMImpl$private val guestExec: GuestExecutorProvider</ID>
    <ID>UnusedPrivateProperty:ElideLLMModule.kt:InferenceOperationImpl$private val guestExec: GuestExecutorProvider</ID>
    <ID>UnusedPrivateProperty:NodeChildProcess.kt:NodeChildProcess$private val filesystem: Optional&lt;Supplier&lt;NodeFilesystemModule>></ID>
    <ID>UnusedPrivateProperty:NodeChildProcess.kt:NodeChildProcess$private val standardStreams: StandardStreamsProvider</ID>
    <ID>VarCouldBeVal:ConsoleIntrinsic.kt:ConsoleIntrinsic$// Interception logger (mostly for testing). private var interceptor = atomic&lt;Logger?>(null)</ID>
    <ID>VarCouldBeVal:JsTimers.kt:JsTimersIntrinsic$@Inject private lateinit var execProvider: JsTimerExecutorProvider</ID>
    <ID>VarCouldBeVal:NettyHttpResponse.kt:NettyHttpResponse$/** The HTTP version of the response. */ @Volatile private var httpVersion = HttpVersion.HTTP_1_1</ID>
  </CurrentIssues>
</SmellBaseline>
