public abstract interface class elide/http/Body {
	public fun isPresent ()Z
}

public final class elide/http/Body$Empty : elide/http/Body {
	public static final field INSTANCE Lelide/http/Body$Empty;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract interface class elide/http/Body$PlatformBody : elide/http/Body$SizedBody {
}

public abstract interface class elide/http/Body$SizedBody : elide/http/Body {
	public abstract fun getContentLength-s-VKNKU ()J
}

public abstract interface class elide/http/Body$StreamedBody : elide/http/Body {
}

public abstract interface class elide/http/Header : elide/http/HttpToken {
	public static final field Companion Lelide/http/Header$Companion;
	public fun asString ()Ljava/lang/String;
	public abstract fun getName ()Lelide/http/HeaderName;
	public abstract fun getValue ()Lelide/http/HeaderValue;
	public static fun of (Lelide/http/HeaderName;Lelide/http/HeaderValue;)Lelide/http/Header;
	public static fun of (Ljava/lang/String;Lelide/http/HeaderValue;)Lelide/http/Header;
	public static fun of (Ljava/lang/String;Ljava/lang/String;)Lelide/http/Header;
}

public final class elide/http/Header$Companion {
	public final fun of (Lelide/http/HeaderName;Lelide/http/HeaderValue;)Lelide/http/Header;
	public final fun of (Ljava/lang/String;Lelide/http/HeaderValue;)Lelide/http/Header;
	public final fun of (Ljava/lang/String;Ljava/lang/String;)Lelide/http/Header;
}

public abstract interface class elide/http/Header$PlatformHeader : elide/http/Header {
}

public final class elide/http/Header$RawHeader : elide/http/Header {
	public static final synthetic fun box-impl (Lkotlin/Pair;)Lelide/http/Header$RawHeader;
	public fun equals (Ljava/lang/Object;)Z
	public static fun equals-impl (Lkotlin/Pair;Ljava/lang/Object;)Z
	public static final fun equals-impl0 (Lkotlin/Pair;Lkotlin/Pair;)Z
	public fun getName ()Lelide/http/HeaderName;
	public static fun getName-impl (Lkotlin/Pair;)Lelide/http/HeaderName;
	public fun getValue ()Lelide/http/HeaderValue;
	public static fun getValue-impl (Lkotlin/Pair;)Lelide/http/HeaderValue;
	public fun hashCode ()I
	public static fun hashCode-impl (Lkotlin/Pair;)I
	public fun toString ()Ljava/lang/String;
	public static fun toString-impl (Lkotlin/Pair;)Ljava/lang/String;
	public final synthetic fun unbox-impl ()Lkotlin/Pair;
}

public final class elide/http/Header$TypedHeader : elide/http/Header {
	public static final synthetic fun box-impl (Lkotlin/Pair;)Lelide/http/Header$TypedHeader;
	public fun equals (Ljava/lang/Object;)Z
	public static fun equals-impl (Lkotlin/Pair;Ljava/lang/Object;)Z
	public static final fun equals-impl0 (Lkotlin/Pair;Lkotlin/Pair;)Z
	public fun getName ()Lelide/http/HeaderName;
	public static fun getName-impl (Lkotlin/Pair;)Lelide/http/HeaderName;
	public fun getValue ()Lelide/http/HeaderValue;
	public static fun getValue-impl (Lkotlin/Pair;)Lelide/http/HeaderValue;
	public fun hashCode ()I
	public static fun hashCode-impl (Lkotlin/Pair;)I
	public fun toString ()Ljava/lang/String;
	public static fun toString-impl (Lkotlin/Pair;)Ljava/lang/String;
	public final synthetic fun unbox-impl ()Lkotlin/Pair;
}

public abstract interface class elide/http/HeaderName : elide/http/HttpToken {
	public static final field Companion Lelide/http/HeaderName$Companion;
	public abstract fun getAllowedOnRequests ()Z
	public abstract fun getAllowedOnResponses ()Z
	public abstract fun getName ()Ljava/lang/String;
	public abstract fun getNameNormalized ()Ljava/lang/String;
	public static fun of (Lelide/http/StandardHeader;)Lelide/http/HeaderName;
	public static fun of (Ljava/lang/String;)Lelide/http/HeaderName;
}

public final class elide/http/HeaderName$Companion {
	public final fun of (Lelide/http/StandardHeader;)Lelide/http/HeaderName;
	public final fun of (Ljava/lang/String;)Lelide/http/HeaderName;
}

public abstract interface class elide/http/HeaderName$PlatformHeaderName : elide/http/HeaderName {
}

public final class elide/http/HeaderName$StdHeaderName : elide/http/HeaderName {
	public fun asString ()Ljava/lang/String;
	public static fun asString-impl (Lelide/http/StandardHeader;)Ljava/lang/String;
	public static final synthetic fun box-impl (Lelide/http/StandardHeader;)Lelide/http/HeaderName$StdHeaderName;
	public static fun constructor-impl (Lelide/http/StandardHeader;)Lelide/http/StandardHeader;
	public fun equals (Ljava/lang/Object;)Z
	public static fun equals-impl (Lelide/http/StandardHeader;Ljava/lang/Object;)Z
	public static final fun equals-impl0 (Lelide/http/StandardHeader;Lelide/http/StandardHeader;)Z
	public fun getAllowedOnRequests ()Z
	public static fun getAllowedOnRequests-impl (Lelide/http/StandardHeader;)Z
	public fun getAllowedOnResponses ()Z
	public static fun getAllowedOnResponses-impl (Lelide/http/StandardHeader;)Z
	public fun getName ()Ljava/lang/String;
	public static fun getName-impl (Lelide/http/StandardHeader;)Ljava/lang/String;
	public fun getNameNormalized ()Ljava/lang/String;
	public static fun getNameNormalized-impl (Lelide/http/StandardHeader;)Ljava/lang/String;
	public fun hashCode ()I
	public static fun hashCode-impl (Lelide/http/StandardHeader;)I
	public fun toString ()Ljava/lang/String;
	public static fun toString-impl (Lelide/http/StandardHeader;)Ljava/lang/String;
	public final synthetic fun unbox-impl ()Lelide/http/StandardHeader;
}

public final class elide/http/HeaderName$StringHeaderName : elide/http/HeaderName {
	public fun asString ()Ljava/lang/String;
	public static fun asString-impl (Ljava/lang/String;)Ljava/lang/String;
	public static final synthetic fun box-impl (Ljava/lang/String;)Lelide/http/HeaderName$StringHeaderName;
	public static fun constructor-impl (Ljava/lang/String;)Ljava/lang/String;
	public fun equals (Ljava/lang/Object;)Z
	public static fun equals-impl (Ljava/lang/String;Ljava/lang/Object;)Z
	public static final fun equals-impl0 (Ljava/lang/String;Ljava/lang/String;)Z
	public fun getAllowedOnRequests ()Z
	public static fun getAllowedOnRequests-impl (Ljava/lang/String;)Z
	public fun getAllowedOnResponses ()Z
	public static fun getAllowedOnResponses-impl (Ljava/lang/String;)Z
	public fun getName ()Ljava/lang/String;
	public fun getNameNormalized ()Ljava/lang/String;
	public static fun getNameNormalized-impl (Ljava/lang/String;)Ljava/lang/String;
	public fun hashCode ()I
	public static fun hashCode-impl (Ljava/lang/String;)I
	public fun toString ()Ljava/lang/String;
	public static fun toString-impl (Ljava/lang/String;)Ljava/lang/String;
	public final synthetic fun unbox-impl ()Ljava/lang/String;
}

public abstract interface class elide/http/HeaderValue {
	public static final field Companion Lelide/http/HeaderValue$Companion;
	public abstract fun asString ()Ljava/lang/String;
	public abstract fun getCount-Mh2AYeg ()S
	public abstract fun getValues ()Lkotlin/sequences/Sequence;
	public static fun multi (Ljava/util/Collection;)Lelide/http/HeaderValue;
	public static fun multi (Lkotlin/sequences/Sequence;)Lelide/http/HeaderValue;
	public static fun multi ([Ljava/lang/String;)Lelide/http/HeaderValue;
	public static fun single (Ljava/lang/String;)Lelide/http/HeaderValue;
}

public final class elide/http/HeaderValue$Companion {
	public final fun multi (Ljava/util/Collection;)Lelide/http/HeaderValue;
	public final fun multi (Lkotlin/sequences/Sequence;)Lelide/http/HeaderValue;
	public final fun multi ([Ljava/lang/String;)Lelide/http/HeaderValue;
	public final fun single (Ljava/lang/String;)Lelide/http/HeaderValue;
}

public final class elide/http/HeaderValue$MultiHeaderValue : java/lang/Record, elide/http/HeaderValue {
	public fun asString ()Ljava/lang/String;
	public final fun copy (Lkotlin/Pair;)Lelide/http/HeaderValue$MultiHeaderValue;
	public static synthetic fun copy$default (Lelide/http/HeaderValue$MultiHeaderValue;Lkotlin/Pair;ILjava/lang/Object;)Lelide/http/HeaderValue$MultiHeaderValue;
	public fun count ()S
	public fun equals (Ljava/lang/Object;)Z
	public synthetic fun getCount-Mh2AYeg ()S
	public synthetic fun getValues ()Lkotlin/sequences/Sequence;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public fun values ()Lkotlin/sequences/Sequence;
}

public final class elide/http/HeaderValue$SingleHeaderValue : elide/http/HeaderValue {
	public fun asString ()Ljava/lang/String;
	public static fun asString-impl (Ljava/lang/String;)Ljava/lang/String;
	public static final synthetic fun box-impl (Ljava/lang/String;)Lelide/http/HeaderValue$SingleHeaderValue;
	public fun equals (Ljava/lang/Object;)Z
	public static fun equals-impl (Ljava/lang/String;Ljava/lang/Object;)Z
	public static final fun equals-impl0 (Ljava/lang/String;Ljava/lang/String;)Z
	public fun getCount-Mh2AYeg ()S
	public static fun getCount-Mh2AYeg (Ljava/lang/String;)S
	public fun getValues ()Lkotlin/sequences/Sequence;
	public static fun getValues-impl (Ljava/lang/String;)Lkotlin/sequences/Sequence;
	public fun hashCode ()I
	public static fun hashCode-impl (Ljava/lang/String;)I
	public fun toString ()Ljava/lang/String;
	public static fun toString-impl (Ljava/lang/String;)Ljava/lang/String;
	public final synthetic fun unbox-impl ()Ljava/lang/String;
}

public abstract interface class elide/http/Headers {
	public abstract fun asMap ()Ljava/util/Map;
	public abstract fun asOrdered ()Lkotlin/sequences/Sequence;
	public abstract fun asRawMap ()Ljava/util/Map;
	public abstract fun asSequence ()Lkotlin/sequences/Sequence;
	public abstract fun contains (Lelide/http/HeaderName;)Z
	public abstract fun contains (Ljava/lang/String;)Z
	public abstract fun first (Lelide/http/HeaderName;)Ljava/lang/String;
	public abstract fun first (Ljava/lang/String;)Ljava/lang/String;
	public abstract fun get (Lelide/http/HeaderName;)Lelide/http/HeaderValue;
	public abstract fun get (Ljava/lang/String;)Lelide/http/HeaderValue;
	public abstract fun getSize-pVg5ArA ()I
	public abstract fun getSizeDistinct-pVg5ArA ()I
	public abstract fun toMutable ()Lelide/http/MutableHeaders;
}

public abstract interface class elide/http/Headers$PlatformHeaders : elide/http/Headers {
}

public final class elide/http/Http {
	public static final field INSTANCE Lelide/http/Http;
	public static final fun request (Lio/micronaut/http/HttpRequest;)Lelide/http/Request;
	public static final fun request (Lio/netty/handler/codec/http/HttpRequest;)Lelide/http/Request;
	public static final fun request (Ljava/net/http/HttpRequest;)Lelide/http/Request;
	public static final fun response (Lio/micronaut/http/HttpResponse;)Lelide/http/Response;
	public static final fun response (Lio/netty/handler/codec/http/HttpResponse;)Lelide/http/Response;
	public static final fun response (Ljava/net/http/HttpResponse;)Lelide/http/Response;
}

public final class elide/http/HttpExtensionsJvmKt {
	public static final fun getEntries (Lelide/http/ProtocolVersion$Companion;)Lkotlin/sequences/Sequence;
}

public final class elide/http/HttpExtensionsKt {
	public static final fun getContentLength (Lelide/http/Headers;)J
	public static final fun getContentLength (Lelide/http/Message;)J
	public static final fun getContentType (Lelide/http/Headers;)Lelide/http/HeaderValue;
	public static final fun getContentType (Lelide/http/Message;)Lelide/http/HeaderValue;
	public static final fun supportsChunkedTransferEncoding (Lelide/http/ProtocolVersion;)Z
	public static final fun supportsPipelining (Lelide/http/ProtocolVersion;)Z
	public static final fun supportsPush (Lelide/http/ProtocolVersion;)Z
	public static final fun supportsTrailers (Lelide/http/ProtocolVersion;)Z
}

public final class elide/http/HttpKt {
	public static final fun toUniversalHttpRequest (Lio/micronaut/http/HttpRequest;)Lelide/http/Request;
	public static final fun toUniversalHttpRequest (Lio/netty/handler/codec/http/HttpRequest;)Lelide/http/Request;
	public static final fun toUniversalHttpRequest (Ljava/net/http/HttpRequest;)Lelide/http/Request;
	public static final fun toUniversalHttpResponse (Lio/micronaut/http/HttpResponse;)Lelide/http/Response;
	public static final fun toUniversalHttpResponse (Lio/netty/handler/codec/http/HttpResponse;)Lelide/http/Response;
	public static final fun toUniversalHttpResponse (Ljava/net/http/HttpResponse;)Lelide/http/Response;
}

public abstract interface class elide/http/HttpPrintable {
	public abstract fun renderToHttp ()Ljava/lang/StringBuilder;
}

public abstract interface class elide/http/HttpToken {
	public static final field Companion Lelide/http/HttpToken$Companion;
	public abstract fun asString ()Ljava/lang/String;
	public static fun of (Ljava/lang/String;)Lelide/http/HttpToken;
}

public final class elide/http/HttpToken$Companion {
	public final fun of (Ljava/lang/String;)Lelide/http/HttpToken;
}

public final class elide/http/HttpToken$DoubleNewline : elide/http/HttpToken {
	public static final field INSTANCE Lelide/http/HttpToken$DoubleNewline;
	public fun asString ()Ljava/lang/String;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class elide/http/HttpToken$Newline : elide/http/HttpToken {
	public static final field INSTANCE Lelide/http/HttpToken$Newline;
	public fun asString ()Ljava/lang/String;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class elide/http/HttpToken$Space : elide/http/HttpToken {
	public static final field INSTANCE Lelide/http/HttpToken$Space;
	public fun asString ()Ljava/lang/String;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class elide/http/HttpToken$StringValue : elide/http/HttpToken {
	public fun asString ()Ljava/lang/String;
	public static fun asString-impl (Ljava/lang/String;)Ljava/lang/String;
	public static final synthetic fun box-impl (Ljava/lang/String;)Lelide/http/HttpToken$StringValue;
	public fun equals (Ljava/lang/Object;)Z
	public static fun equals-impl (Ljava/lang/String;Ljava/lang/Object;)Z
	public static final fun equals-impl0 (Ljava/lang/String;Ljava/lang/String;)Z
	public fun hashCode ()I
	public static fun hashCode-impl (Ljava/lang/String;)I
	public fun toString ()Ljava/lang/String;
	public static fun toString-impl (Ljava/lang/String;)Ljava/lang/String;
	public final synthetic fun unbox-impl ()Ljava/lang/String;
}

public abstract interface class elide/http/HttpUrl {
	public abstract fun getHost ()Ljava/lang/String;
	public abstract fun getParams ()Lelide/http/Params;
	public abstract fun getPath ()Ljava/lang/String;
	public abstract fun getPort-Mh2AYeg ()S
	public abstract fun getScheme ()Ljava/lang/String;
}

public abstract interface class elide/http/HttpUrl$PlatformHttpUrl : elide/http/HttpUrl {
	public abstract fun getValue ()Ljava/lang/Object;
}

public abstract interface class elide/http/Message : elide/http/HttpPrintable {
	public abstract fun getComponents ()Lkotlin/sequences/Sequence;
	public abstract fun getHeaders ()Lelide/http/Headers;
	public abstract fun getType ()Lelide/http/Message$Type;
	public abstract fun getVersion ()Lelide/http/ProtocolVersion;
	public fun renderToHttp ()Ljava/lang/StringBuilder;
	public abstract fun toMutable ()Lelide/http/MutableMessage;
}

public abstract interface class elide/http/Message$PlatformMessage : elide/http/Message {
}

public final class elide/http/Message$Type : java/lang/Enum {
	public static final field REQUEST Lelide/http/Message$Type;
	public static final field RESPONSE Lelide/http/Message$Type;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public static fun valueOf (Ljava/lang/String;)Lelide/http/Message$Type;
	public static fun values ()[Lelide/http/Message$Type;
}

public abstract interface class elide/http/Method : elide/core/api/Symbolic, elide/http/HttpToken {
	public static final field Companion Lelide/http/Method$Companion;
	public fun asString ()Ljava/lang/String;
	public abstract fun getPermitsRequestBody ()Z
	public abstract fun getPermitsResponseBody ()Z
	public abstract fun getRequiresRequestBody ()Z
	public abstract fun getSymbol ()Ljava/lang/String;
	public static fun of (Ljava/lang/String;)Lelide/http/Method;
}

public final class elide/http/Method$Companion {
	public final fun of (Ljava/lang/String;)Lelide/http/Method;
}

public final class elide/http/Method$CustomMethod : elide/http/Method {
	public static final synthetic fun box-impl (Ljava/lang/String;)Lelide/http/Method$CustomMethod;
	public fun equals (Ljava/lang/Object;)Z
	public static fun equals-impl (Ljava/lang/String;Ljava/lang/Object;)Z
	public static final fun equals-impl0 (Ljava/lang/String;Ljava/lang/String;)Z
	public fun getPermitsRequestBody ()Z
	public static fun getPermitsRequestBody-impl (Ljava/lang/String;)Z
	public fun getPermitsResponseBody ()Z
	public static fun getPermitsResponseBody-impl (Ljava/lang/String;)Z
	public fun getRequiresRequestBody ()Z
	public static fun getRequiresRequestBody-impl (Ljava/lang/String;)Z
	public synthetic fun getSymbol ()Ljava/lang/Object;
	public fun getSymbol ()Ljava/lang/String;
	public fun hashCode ()I
	public static fun hashCode-impl (Ljava/lang/String;)I
	public fun toString ()Ljava/lang/String;
	public static fun toString-impl (Ljava/lang/String;)Ljava/lang/String;
	public final synthetic fun unbox-impl ()Ljava/lang/String;
}

public abstract interface class elide/http/Method$PlatformMethod : elide/http/Method {
}

public abstract interface class elide/http/MutableHeaders : elide/http/Headers {
	public abstract fun append (Lelide/http/Header;)V
	public abstract fun append (Ljava/lang/String;Ljava/lang/String;)V
	public abstract fun build ()Lelide/http/Headers;
	public abstract fun remove (Lelide/http/Header;)V
	public abstract fun remove (Lelide/http/HeaderName;)V
	public abstract fun remove (Lelide/http/HeaderName;Lelide/http/HeaderValue;)V
	public abstract fun remove (Ljava/lang/String;)V
	public abstract fun remove (Ljava/lang/String;Ljava/lang/String;)V
	public abstract fun set (Lelide/http/Header;)V
	public abstract fun set (Lelide/http/HeaderName;Lelide/http/HeaderValue;)V
	public abstract fun set (Ljava/lang/String;Ljava/lang/String;)V
	public fun toMutable ()Lelide/http/MutableHeaders;
}

public abstract interface class elide/http/MutableHeaders$PlatformMutableHeaders : elide/http/MutableHeaders {
}

public abstract interface class elide/http/MutableMessage : elide/http/Message {
	public abstract fun build ()Lelide/http/Message;
	public abstract fun getHeaders ()Lelide/http/MutableHeaders;
}

public abstract interface class elide/http/MutableMessage$PlatformMutableMessage : elide/http/Message {
}

public abstract interface class elide/http/MutableRequest : elide/http/MutableMessage, elide/http/Request {
	public abstract fun build ()Lelide/http/Request;
	public abstract fun getBody ()Lelide/http/Body;
	public abstract fun getHeaders ()Lelide/http/MutableHeaders;
	public abstract fun getUrl ()Lelide/http/HttpUrl;
	public abstract fun setBody (Lelide/http/Body;)V
	public abstract fun setUrl (Lelide/http/HttpUrl;)V
	public synthetic fun toMutable ()Lelide/http/MutableMessage;
	public fun toMutable ()Lelide/http/MutableRequest;
}

public abstract interface class elide/http/MutableRequest$PlatformMutableRequest : elide/http/MutableRequest {
}

public abstract interface class elide/http/MutableResponse : elide/http/MutableMessage, elide/http/Response {
	public abstract fun build ()Lelide/http/Response;
	public abstract fun getBody ()Lelide/http/Body;
	public abstract fun getHeaders ()Lelide/http/MutableHeaders;
	public abstract fun getStatus ()Lelide/http/Status;
	public abstract fun getTrailers ()Lelide/http/MutableHeaders;
	public abstract fun setBody (Lelide/http/Body;)V
	public abstract fun setStatus (Lelide/http/Status;)V
	public synthetic fun toMutable ()Lelide/http/MutableMessage;
	public fun toMutable ()Lelide/http/MutableResponse;
}

public final class elide/http/MutableResponse$MutableHttpResponse : elide/http/MutableResponse {
	public synthetic fun build ()Lelide/http/Message;
	public fun build ()Lelide/http/Response;
	public final fun component1 ()Lelide/http/ProtocolVersion;
	public final fun component2 ()Lelide/http/Status;
	public final fun component3 ()Lelide/http/MutableHeaders;
	public final fun component4 ()Lelide/http/MutableHeaders;
	public final fun component5 ()Lelide/http/Body;
	public final fun copy (Lelide/http/ProtocolVersion;Lelide/http/Status;Lelide/http/MutableHeaders;Lelide/http/MutableHeaders;Lelide/http/Body;)Lelide/http/MutableResponse$MutableHttpResponse;
	public static synthetic fun copy$default (Lelide/http/MutableResponse$MutableHttpResponse;Lelide/http/ProtocolVersion;Lelide/http/Status;Lelide/http/MutableHeaders;Lelide/http/MutableHeaders;Lelide/http/Body;ILjava/lang/Object;)Lelide/http/MutableResponse$MutableHttpResponse;
	public fun equals (Ljava/lang/Object;)Z
	public fun getBody ()Lelide/http/Body;
	public synthetic fun getHeaders ()Lelide/http/Headers;
	public fun getHeaders ()Lelide/http/MutableHeaders;
	public fun getStatus ()Lelide/http/Status;
	public synthetic fun getTrailers ()Lelide/http/Headers;
	public fun getTrailers ()Lelide/http/MutableHeaders;
	public fun getVersion ()Lelide/http/ProtocolVersion;
	public fun hashCode ()I
	public fun setBody (Lelide/http/Body;)V
	public fun setStatus (Lelide/http/Status;)V
	public fun setVersion (Lelide/http/ProtocolVersion;)V
	public synthetic fun toMutable ()Lelide/http/MutableMessage;
	public fun toMutable ()Lelide/http/MutableResponse;
	public fun toString ()Ljava/lang/String;
}

public abstract interface class elide/http/MutableResponse$PlatformMutableResponse : elide/http/MutableResponse {
}

public abstract interface class elide/http/Param : elide/http/HttpToken {
	public abstract fun getName ()Lelide/http/ParamName;
	public abstract fun getValue ()Lelide/http/ParamValue;
}

public abstract interface class elide/http/ParamName : elide/http/HttpToken {
	public static final field Companion Lelide/http/ParamName$Companion;
	public abstract fun getName ()Ljava/lang/String;
	public static fun of (Ljava/lang/String;)Lelide/http/ParamName;
}

public final class elide/http/ParamName$Companion {
	public final fun of (Ljava/lang/String;)Lelide/http/ParamName;
}

public final class elide/http/ParamName$StringParamName : elide/http/ParamName {
	public fun asString ()Ljava/lang/String;
	public static fun asString-impl (Ljava/lang/String;)Ljava/lang/String;
	public static final synthetic fun box-impl (Ljava/lang/String;)Lelide/http/ParamName$StringParamName;
	public fun equals (Ljava/lang/Object;)Z
	public static fun equals-impl (Ljava/lang/String;Ljava/lang/Object;)Z
	public static final fun equals-impl0 (Ljava/lang/String;Ljava/lang/String;)Z
	public fun getName ()Ljava/lang/String;
	public fun hashCode ()I
	public static fun hashCode-impl (Ljava/lang/String;)I
	public fun toString ()Ljava/lang/String;
	public static fun toString-impl (Ljava/lang/String;)Ljava/lang/String;
	public final synthetic fun unbox-impl ()Ljava/lang/String;
}

public abstract interface class elide/http/ParamValue : elide/http/HttpToken {
	public static final field Companion Lelide/http/ParamValue$Companion;
	public abstract fun getValues ()Lkotlin/sequences/Sequence;
	public static fun of (Ljava/lang/String;)Lelide/http/ParamValue;
	public static fun ofNullable (Ljava/lang/String;)Lelide/http/ParamValue;
	public static fun ofNullable (Lkotlin/sequences/Sequence;)Lelide/http/ParamValue;
}

public final class elide/http/ParamValue$Companion {
	public final fun of (Ljava/lang/String;)Lelide/http/ParamValue;
	public final fun ofNullable (Ljava/lang/String;)Lelide/http/ParamValue;
	public final fun ofNullable (Lkotlin/sequences/Sequence;)Lelide/http/ParamValue;
}

public final class elide/http/ParamValue$MultiParam : elide/http/ParamValue {
	public fun asString ()Ljava/lang/String;
	public static fun asString-impl (Lkotlin/sequences/Sequence;)Ljava/lang/String;
	public static final synthetic fun box-impl (Lkotlin/sequences/Sequence;)Lelide/http/ParamValue$MultiParam;
	public fun equals (Ljava/lang/Object;)Z
	public static fun equals-impl (Lkotlin/sequences/Sequence;Ljava/lang/Object;)Z
	public static final fun equals-impl0 (Lkotlin/sequences/Sequence;Lkotlin/sequences/Sequence;)Z
	public fun getValues ()Lkotlin/sequences/Sequence;
	public static fun getValues-impl (Lkotlin/sequences/Sequence;)Lkotlin/sequences/Sequence;
	public fun hashCode ()I
	public static fun hashCode-impl (Lkotlin/sequences/Sequence;)I
	public fun toString ()Ljava/lang/String;
	public static fun toString-impl (Lkotlin/sequences/Sequence;)Ljava/lang/String;
	public final synthetic fun unbox-impl ()Lkotlin/sequences/Sequence;
}

public final class elide/http/ParamValue$StringParam : elide/http/ParamValue {
	public fun asString ()Ljava/lang/String;
	public static fun asString-impl (Ljava/lang/String;)Ljava/lang/String;
	public static final synthetic fun box-impl (Ljava/lang/String;)Lelide/http/ParamValue$StringParam;
	public fun equals (Ljava/lang/Object;)Z
	public static fun equals-impl (Ljava/lang/String;Ljava/lang/Object;)Z
	public static final fun equals-impl0 (Ljava/lang/String;Ljava/lang/String;)Z
	public fun getValues ()Lkotlin/sequences/Sequence;
	public static fun getValues-impl (Ljava/lang/String;)Lkotlin/sequences/Sequence;
	public fun hashCode ()I
	public static fun hashCode-impl (Ljava/lang/String;)I
	public fun toString ()Ljava/lang/String;
	public static fun toString-impl (Ljava/lang/String;)Ljava/lang/String;
	public final synthetic fun unbox-impl ()Ljava/lang/String;
}

public abstract interface class elide/http/Params {
	public static final field Companion Lelide/http/Params$Companion;
	public abstract fun contains (Lelide/http/ParamName;)Z
	public abstract fun contains (Ljava/lang/String;)Z
	public abstract fun get (Lelide/http/ParamName;)Lelide/http/ParamValue;
	public abstract fun get (Ljava/lang/String;)Lelide/http/ParamValue;
	public abstract fun getSize-pVg5ArA ()I
	public abstract fun getSizeDistinct-pVg5ArA ()I
	public static fun parse (Ljava/lang/String;)Lelide/http/Params;
}

public final class elide/http/Params$Companion {
	public final fun parse (Ljava/lang/String;)Lelide/http/Params;
}

public final class elide/http/Params$Empty : elide/http/Params {
	public static final field INSTANCE Lelide/http/Params$Empty;
	public fun contains (Lelide/http/ParamName;)Z
	public fun contains (Ljava/lang/String;)Z
	public fun equals (Ljava/lang/Object;)Z
	public fun get (Lelide/http/ParamName;)Lelide/http/ParamValue;
	public fun get (Ljava/lang/String;)Lelide/http/ParamValue;
	public fun getSize-pVg5ArA ()I
	public fun getSizeDistinct-pVg5ArA ()I
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract interface class elide/http/Params$PlatformParams : elide/http/Params {
	public abstract fun getValue ()Ljava/lang/Object;
}

public abstract interface class elide/http/ProtocolVersion : elide/core/api/Symbolic, elide/http/HttpToken {
	public static final field Companion Lelide/http/ProtocolVersion$Companion;
	public fun asString ()Ljava/lang/String;
	public abstract fun getMajor-Mh2AYeg ()S
	public fun getMinor-Mh2AYeg ()S
	public abstract fun getSymbol ()Ljava/lang/String;
}

public final class elide/http/ProtocolVersion$Companion : elide/core/api/Symbolic$SealedResolver {
	public synthetic fun resolve (Ljava/lang/Object;)Lelide/core/api/Symbolic;
	public fun resolve (Ljava/lang/String;)Lelide/http/ProtocolVersion;
}

public final class elide/http/ProtocolVersion$HTTP_1_0 : elide/http/ProtocolVersion {
	public static final field INSTANCE Lelide/http/ProtocolVersion$HTTP_1_0;
	public fun equals (Ljava/lang/Object;)Z
	public fun getMajor-Mh2AYeg ()S
	public synthetic fun getSymbol ()Ljava/lang/Object;
	public fun getSymbol ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class elide/http/ProtocolVersion$HTTP_1_1 : elide/http/ProtocolVersion {
	public static final field INSTANCE Lelide/http/ProtocolVersion$HTTP_1_1;
	public fun equals (Ljava/lang/Object;)Z
	public fun getMajor-Mh2AYeg ()S
	public fun getMinor-Mh2AYeg ()S
	public synthetic fun getSymbol ()Ljava/lang/Object;
	public fun getSymbol ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class elide/http/ProtocolVersion$HTTP_2 : elide/http/ProtocolVersion {
	public static final field INSTANCE Lelide/http/ProtocolVersion$HTTP_2;
	public fun equals (Ljava/lang/Object;)Z
	public fun getMajor-Mh2AYeg ()S
	public synthetic fun getSymbol ()Ljava/lang/Object;
	public fun getSymbol ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract interface class elide/http/Request : elide/http/HttpPrintable, elide/http/Message {
	public abstract fun getBody ()Lelide/http/Body;
	public fun getComponents ()Lkotlin/sequences/Sequence;
	public abstract fun getHeaders ()Lelide/http/Headers;
	public abstract fun getMethod ()Lelide/http/Method;
	public fun getType ()Lelide/http/Message$Type;
	public abstract fun getUrl ()Lelide/http/HttpUrl;
	public abstract fun getVersion ()Lelide/http/ProtocolVersion;
	public abstract fun toMutable ()Lelide/http/MutableRequest;
}

public abstract interface class elide/http/Request$PlatformRequest : elide/http/Request {
}

public abstract interface class elide/http/Response : elide/http/Message {
	public static final field Companion Lelide/http/Response$Companion;
	public abstract fun getBody ()Lelide/http/Body;
	public fun getComponents ()Lkotlin/sequences/Sequence;
	public abstract fun getHeaders ()Lelide/http/Headers;
	public abstract fun getStatus ()Lelide/http/Status;
	public abstract fun getTrailers ()Lelide/http/Headers;
	public fun getType ()Lelide/http/Message$Type;
	public abstract fun getVersion ()Lelide/http/ProtocolVersion;
	public static fun of (Lelide/http/ProtocolVersion;Lelide/http/Status;Lelide/http/Headers;Lelide/http/Headers;Lelide/http/Body;)Lelide/http/Response$HttpResponse;
	public abstract fun toMutable ()Lelide/http/MutableResponse;
}

public final class elide/http/Response$Companion {
	public final fun of (Lelide/http/ProtocolVersion;Lelide/http/Status;Lelide/http/Headers;Lelide/http/Headers;Lelide/http/Body;)Lelide/http/Response$HttpResponse;
	public static synthetic fun of$default (Lelide/http/Response$Companion;Lelide/http/ProtocolVersion;Lelide/http/Status;Lelide/http/Headers;Lelide/http/Headers;Lelide/http/Body;ILjava/lang/Object;)Lelide/http/Response$HttpResponse;
}

public final class elide/http/Response$HttpResponse : java/lang/Record, elide/http/Response {
	public fun body ()Lelide/http/Body;
	public final fun component1 ()Lelide/http/ProtocolVersion;
	public final fun component2 ()Lelide/http/Status;
	public final fun component3 ()Lelide/http/Headers;
	public final fun component4 ()Lelide/http/Headers;
	public final fun component5 ()Lelide/http/Body;
	public final fun copy (Lelide/http/ProtocolVersion;Lelide/http/Status;Lelide/http/Headers;Lelide/http/Headers;Lelide/http/Body;)Lelide/http/Response$HttpResponse;
	public static synthetic fun copy$default (Lelide/http/Response$HttpResponse;Lelide/http/ProtocolVersion;Lelide/http/Status;Lelide/http/Headers;Lelide/http/Headers;Lelide/http/Body;ILjava/lang/Object;)Lelide/http/Response$HttpResponse;
	public fun equals (Ljava/lang/Object;)Z
	public synthetic fun getBody ()Lelide/http/Body;
	public synthetic fun getHeaders ()Lelide/http/Headers;
	public synthetic fun getStatus ()Lelide/http/Status;
	public synthetic fun getTrailers ()Lelide/http/Headers;
	public synthetic fun getVersion ()Lelide/http/ProtocolVersion;
	public fun hashCode ()I
	public fun headers ()Lelide/http/Headers;
	public fun status ()Lelide/http/Status;
	public synthetic fun toMutable ()Lelide/http/MutableMessage;
	public fun toMutable ()Lelide/http/MutableResponse;
	public fun toString ()Ljava/lang/String;
	public fun trailers ()Lelide/http/Headers;
	public fun version ()Lelide/http/ProtocolVersion;
}

public abstract interface class elide/http/Response$PlatformResponse : elide/http/Response {
}

public class elide/http/StandardHeader : java/lang/Enum, elide/core/api/Symbolic, elide/http/HeaderName$PlatformHeaderName {
	public static final field Accept Lelide/http/StandardHeader;
	public static final field AcceptCharset Lelide/http/StandardHeader;
	public static final field AcceptEncoding Lelide/http/StandardHeader;
	public static final field AcceptLanguage Lelide/http/StandardHeader;
	public static final field AcceptRanges Lelide/http/StandardHeader;
	public static final field Age Lelide/http/StandardHeader;
	public static final field Allow Lelide/http/StandardHeader;
	public static final field Authorization Lelide/http/StandardHeader;
	public static final field CacheControl Lelide/http/StandardHeader;
	public static final field Companion Lelide/http/StandardHeader$Companion;
	public static final field Connection Lelide/http/StandardHeader;
	public static final field ContentDisposition Lelide/http/StandardHeader;
	public static final field ContentEncoding Lelide/http/StandardHeader;
	public static final field ContentLanguage Lelide/http/StandardHeader;
	public static final field ContentLength Lelide/http/StandardHeader;
	public static final field ContentRange Lelide/http/StandardHeader;
	public static final field ContentType Lelide/http/StandardHeader;
	public static final field Cookie Lelide/http/StandardHeader;
	public static final field Date Lelide/http/StandardHeader;
	public static final field ETag Lelide/http/StandardHeader;
	public static final field Expect Lelide/http/StandardHeader;
	public static final field Expires Lelide/http/StandardHeader;
	public static final field From Lelide/http/StandardHeader;
	public static final field Host Lelide/http/StandardHeader;
	public static final field IfMatch Lelide/http/StandardHeader;
	public static final field IfModifiedSince Lelide/http/StandardHeader;
	public static final field IfNoneMatch Lelide/http/StandardHeader;
	public static final field IfRange Lelide/http/StandardHeader;
	public static final field IfUnmodifiedSince Lelide/http/StandardHeader;
	public static final field LastModified Lelide/http/StandardHeader;
	public static final field Link Lelide/http/StandardHeader;
	public static final field Location Lelide/http/StandardHeader;
	public synthetic fun <init> (Ljava/lang/String;ILjava/lang/String;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun asString ()Ljava/lang/String;
	public fun getAllowedOnRequests ()Z
	public fun getAllowedOnResponses ()Z
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public synthetic fun getName ()Ljava/lang/String;
	public fun getNameNormalized ()Ljava/lang/String;
	public synthetic fun getSymbol ()Ljava/lang/Object;
	public fun getSymbol ()Ljava/lang/String;
	public static fun valueOf (Ljava/lang/String;)Lelide/http/StandardHeader;
	public static fun values ()[Lelide/http/StandardHeader;
}

public final class elide/http/StandardHeader$Companion : elide/core/api/Symbolic$SealedResolver {
	public final fun getAll ()Lkotlin/sequences/Sequence;
	public synthetic fun resolve (Ljava/lang/Object;)Lelide/core/api/Symbolic;
	public fun resolve (Ljava/lang/String;)Lelide/http/StandardHeader;
}

public final class elide/http/StandardMethod : java/lang/Enum, elide/core/api/Symbolic, elide/http/Method$PlatformMethod {
	public static final field CONNECT Lelide/http/StandardMethod;
	public static final field Companion Lelide/http/StandardMethod$Companion;
	public static final field DELETE Lelide/http/StandardMethod;
	public static final field GET Lelide/http/StandardMethod;
	public static final field HEAD Lelide/http/StandardMethod;
	public static final field OPTIONS Lelide/http/StandardMethod;
	public static final field PATCH Lelide/http/StandardMethod;
	public static final field POST Lelide/http/StandardMethod;
	public static final field PUT Lelide/http/StandardMethod;
	public static final field TRACE Lelide/http/StandardMethod;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public fun getPermitsRequestBody ()Z
	public fun getPermitsResponseBody ()Z
	public fun getRequiresRequestBody ()Z
	public synthetic fun getSymbol ()Ljava/lang/Object;
	public fun getSymbol ()Ljava/lang/String;
	public static fun valueOf (Ljava/lang/String;)Lelide/http/StandardMethod;
	public static fun values ()[Lelide/http/StandardMethod;
}

public final class elide/http/StandardMethod$Companion : elide/core/api/Symbolic$SealedResolver {
	public final fun getAll ()Lkotlin/sequences/Sequence;
	public synthetic fun resolve (Ljava/lang/Object;)Lelide/core/api/Symbolic;
	public fun resolve (Ljava/lang/String;)Lelide/http/StandardMethod;
}

public abstract interface class elide/http/Status : elide/http/HttpToken {
	public static final field Companion Lelide/http/Status$Companion;
	public fun asString ()Ljava/lang/String;
	public abstract fun getCode ()Lelide/http/StatusCode;
	public abstract fun getMessage ()Ljava/lang/String;
	public static fun of (Lelide/http/StatusCode;Ljava/lang/String;)Lelide/http/Status;
}

public final class elide/http/Status$Companion {
	public final fun of (Lelide/http/StatusCode;Ljava/lang/String;)Lelide/http/Status;
	public static synthetic fun of$default (Lelide/http/Status$Companion;Lelide/http/StatusCode;Ljava/lang/String;ILjava/lang/Object;)Lelide/http/Status;
}

public final class elide/http/Status$NotFound : elide/http/Status$StandardStatus {
	public static final field INSTANCE Lelide/http/Status$NotFound;
	public fun equals (Ljava/lang/Object;)Z
	public fun getStandardCode ()Lelide/http/StatusCode$StandardStatusCode;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class elide/http/Status$Ok : elide/http/Status$StandardStatus {
	public static final field INSTANCE Lelide/http/Status$Ok;
	public fun equals (Ljava/lang/Object;)Z
	public fun getStandardCode ()Lelide/http/StatusCode$StandardStatusCode;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract interface class elide/http/Status$PlatformStatus : elide/http/Status {
}

public abstract interface class elide/http/Status$StandardStatus : elide/http/Status {
	public fun getCode ()Lelide/http/StatusCode;
	public fun getMessage ()Ljava/lang/String;
	public abstract fun getStandardCode ()Lelide/http/StatusCode$StandardStatusCode;
}

public final class elide/http/Status$StatusPair : elide/http/Status {
	public static final synthetic fun box-impl (Lkotlin/Pair;)Lelide/http/Status$StatusPair;
	public static fun constructor-impl (Lkotlin/Pair;)Lkotlin/Pair;
	public fun equals (Ljava/lang/Object;)Z
	public static fun equals-impl (Lkotlin/Pair;Ljava/lang/Object;)Z
	public static final fun equals-impl0 (Lkotlin/Pair;Lkotlin/Pair;)Z
	public fun getCode ()Lelide/http/StatusCode;
	public static fun getCode-impl (Lkotlin/Pair;)Lelide/http/StatusCode;
	public fun getMessage ()Ljava/lang/String;
	public static fun getMessage-impl (Lkotlin/Pair;)Ljava/lang/String;
	public fun hashCode ()I
	public static fun hashCode-impl (Lkotlin/Pair;)I
	public fun toString ()Ljava/lang/String;
	public static fun toString-impl (Lkotlin/Pair;)Ljava/lang/String;
	public final synthetic fun unbox-impl ()Lkotlin/Pair;
}

public abstract interface class elide/http/StatusCode : elide/core/api/Symbolic, elide/http/HttpToken {
	public static final field Companion Lelide/http/StatusCode$Companion;
	public abstract fun getSymbol-Mh2AYeg ()S
	public static fun resolve-vckuEUM (SLjava/lang/String;)Lelide/http/StatusCode;
}

public final class elide/http/StatusCode$Companion {
	public final fun resolve-vckuEUM (SLjava/lang/String;)Lelide/http/StatusCode;
	public static synthetic fun resolve-vckuEUM$default (Lelide/http/StatusCode$Companion;SLjava/lang/String;ILjava/lang/Object;)Lelide/http/StatusCode;
}

public final class elide/http/StatusCode$CustomStatusCode : elide/http/StatusCode {
	public static final field Companion Lelide/http/StatusCode$CustomStatusCode$Companion;
	public static final field MAX S
	public static final field MIN S
	public fun asString ()Ljava/lang/String;
	public static fun asString-impl (Lkotlin/Pair;)Ljava/lang/String;
	public static final synthetic fun box-impl (Lkotlin/Pair;)Lelide/http/StatusCode$CustomStatusCode;
	public static fun constructor-impl (S)Lkotlin/Pair;
	public static fun constructor-impl (SLjava/lang/String;)Lkotlin/Pair;
	public fun equals (Ljava/lang/Object;)Z
	public static fun equals-impl (Lkotlin/Pair;Ljava/lang/Object;)Z
	public static final fun equals-impl0 (Lkotlin/Pair;Lkotlin/Pair;)Z
	public synthetic fun getSymbol ()Ljava/lang/Object;
	public fun getSymbol-Mh2AYeg ()S
	public static fun getSymbol-Mh2AYeg (Lkotlin/Pair;)S
	public fun hashCode ()I
	public static fun hashCode-impl (Lkotlin/Pair;)I
	public fun toString ()Ljava/lang/String;
	public static fun toString-impl (Lkotlin/Pair;)Ljava/lang/String;
	public final synthetic fun unbox-impl ()Lkotlin/Pair;
}

public final class elide/http/StatusCode$CustomStatusCode$Companion : elide/core/api/Symbolic$SealedResolver {
	public synthetic fun resolve (Ljava/lang/Object;)Lelide/core/api/Symbolic;
	public fun resolve-FRmtUpM (S)Lkotlin/Pair;
}

public final class elide/http/StatusCode$StandardStatusCode : java/lang/Enum, elide/http/StatusCode {
	public static final field Accepted Lelide/http/StatusCode$StandardStatusCode;
	public static final field BadRequest Lelide/http/StatusCode$StandardStatusCode;
	public static final field Companion Lelide/http/StatusCode$StandardStatusCode$Companion;
	public static final field Continue Lelide/http/StatusCode$StandardStatusCode;
	public static final field Created Lelide/http/StatusCode$StandardStatusCode;
	public static final field Forbidden Lelide/http/StatusCode$StandardStatusCode;
	public static final field InternalServerError Lelide/http/StatusCode$StandardStatusCode;
	public static final field MethodNotAllowed Lelide/http/StatusCode$StandardStatusCode;
	public static final field MultipleChoices Lelide/http/StatusCode$StandardStatusCode;
	public static final field NoContent Lelide/http/StatusCode$StandardStatusCode;
	public static final field NonAuthoritativeInformation Lelide/http/StatusCode$StandardStatusCode;
	public static final field NotAcceptable Lelide/http/StatusCode$StandardStatusCode;
	public static final field NotFound Lelide/http/StatusCode$StandardStatusCode;
	public static final field Ok Lelide/http/StatusCode$StandardStatusCode;
	public static final field ProxyAuthenticationRequired Lelide/http/StatusCode$StandardStatusCode;
	public static final field ResetContent Lelide/http/StatusCode$StandardStatusCode;
	public static final field SwitchingProtocols Lelide/http/StatusCode$StandardStatusCode;
	public static final field Unauthorized Lelide/http/StatusCode$StandardStatusCode;
	public fun asString ()Ljava/lang/String;
	public final fun getAllowsBody ()Z
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public final fun getImpliesBody ()Z
	public final fun getReasonPhrase ()Ljava/lang/String;
	public synthetic fun getSymbol ()Ljava/lang/Object;
	public fun getSymbol-Mh2AYeg ()S
	public static fun valueOf (Ljava/lang/String;)Lelide/http/StatusCode$StandardStatusCode;
	public static fun values ()[Lelide/http/StatusCode$StandardStatusCode;
}

public final class elide/http/StatusCode$StandardStatusCode$Companion : elide/core/api/Symbolic$SealedResolver {
	public final fun getAll ()Lkotlin/sequences/Sequence;
	public synthetic fun resolve (Ljava/lang/Object;)Lelide/core/api/Symbolic;
	public fun resolve-xj2QHRw (S)Lelide/http/StatusCode$StandardStatusCode;
}

public final class elide/http/StatusCode$StatusClass : java/lang/Enum {
	public static final field CLIENT_ERROR Lelide/http/StatusCode$StatusClass;
	public static final field CONTROL Lelide/http/StatusCode$StatusClass;
	public static final field INFORMATIONAL Lelide/http/StatusCode$StatusClass;
	public static final field REDIRECTION Lelide/http/StatusCode$StatusClass;
	public static final field SERVER_ERROR Lelide/http/StatusCode$StatusClass;
	public static final field SUCCESS Lelide/http/StatusCode$StatusClass;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public static fun valueOf (Ljava/lang/String;)Lelide/http/StatusCode$StatusClass;
	public static fun values ()[Lelide/http/StatusCode$StatusClass;
}

public final class elide/http/body/HttpBody {
	public static final field INSTANCE Lelide/http/body/HttpBody;
	public static final fun bytes-A1ZtycI ([B)[B
	public static final fun micronaut-IQxrpHU (JLjava/lang/Object;)Lkotlin/Pair;
	public static final fun netty-vryQ6VI (Lio/netty/buffer/ByteBuf;)Lio/netty/buffer/ByteBuf;
	public static final fun string-3f56i_k (Ljava/lang/String;)Ljava/lang/String;
}

public final class elide/http/body/MicronautBody : elide/http/body/PlatformBody {
	public static final field Companion Lelide/http/body/MicronautBody$Companion;
	public static final synthetic fun box-impl (Lkotlin/Pair;)Lelide/http/body/MicronautBody;
	public static fun constructor-impl (JLjava/util/Optional;)Lkotlin/Pair;
	public static fun constructor-impl (Lkotlin/Pair;)Lkotlin/Pair;
	public fun equals (Ljava/lang/Object;)Z
	public static fun equals-impl (Lkotlin/Pair;Ljava/lang/Object;)Z
	public static final fun equals-impl0 (Lkotlin/Pair;Lkotlin/Pair;)Z
	public fun getContentLength-s-VKNKU ()J
	public static fun getContentLength-s-VKNKU (Lkotlin/Pair;)J
	public fun hashCode ()I
	public static fun hashCode-impl (Lkotlin/Pair;)I
	public fun isPresent ()Z
	public static fun isPresent-impl (Lkotlin/Pair;)Z
	public static final fun of (Lio/micronaut/http/HttpMessage;)Lelide/http/Body;
	public static final fun string-Q-HMnJc (Ljava/lang/String;)Lkotlin/Pair;
	public fun toString ()Ljava/lang/String;
	public static fun toString-impl (Lkotlin/Pair;)Ljava/lang/String;
	public final synthetic fun unbox-impl ()Lkotlin/Pair;
	public fun unwrap ()Ljava/lang/Object;
	public static fun unwrap-impl (Lkotlin/Pair;)Ljava/lang/Object;
}

public final class elide/http/body/MicronautBody$Companion {
	public final fun of (Lio/micronaut/http/HttpMessage;)Lelide/http/Body;
	public final fun string-Q-HMnJc (Ljava/lang/String;)Lkotlin/Pair;
}

public final class elide/http/body/NettyBody : elide/http/body/PlatformBody {
	public static final synthetic fun box-impl (Lio/netty/buffer/ByteBuf;)Lelide/http/body/NettyBody;
	public fun equals (Ljava/lang/Object;)Z
	public static fun equals-impl (Lio/netty/buffer/ByteBuf;Ljava/lang/Object;)Z
	public static final fun equals-impl0 (Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;)Z
	public fun getContentLength-s-VKNKU ()J
	public static fun getContentLength-s-VKNKU (Lio/netty/buffer/ByteBuf;)J
	public fun hashCode ()I
	public static fun hashCode-impl (Lio/netty/buffer/ByteBuf;)I
	public fun isPresent ()Z
	public static fun isPresent-impl (Lio/netty/buffer/ByteBuf;)Z
	public fun toString ()Ljava/lang/String;
	public static fun toString-impl (Lio/netty/buffer/ByteBuf;)Ljava/lang/String;
	public final synthetic fun unbox-impl ()Lio/netty/buffer/ByteBuf;
	public fun unwrap ()Lio/netty/buffer/ByteBuf;
	public synthetic fun unwrap ()Ljava/lang/Object;
	public static fun unwrap-impl (Lio/netty/buffer/ByteBuf;)Lio/netty/buffer/ByteBuf;
}

public abstract interface class elide/http/body/PlatformBody : elide/http/Body$PlatformBody {
	public abstract fun unwrap ()Ljava/lang/Object;
}

public abstract interface class elide/http/body/PrimitiveBody : elide/http/body/PlatformBody {
	public static final field Companion Lelide/http/body/PrimitiveBody$Companion;
	public static fun bytes-A1ZtycI ([B)[B
	public fun isPresent ()Z
	public static fun string-3f56i_k (Ljava/lang/String;)Ljava/lang/String;
	public abstract fun unwrap ()Ljava/lang/Object;
}

public final class elide/http/body/PrimitiveBody$Bytes : elide/http/body/PrimitiveBody {
	public static final synthetic fun box-impl ([B)Lelide/http/body/PrimitiveBody$Bytes;
	public fun equals (Ljava/lang/Object;)Z
	public static fun equals-impl ([BLjava/lang/Object;)Z
	public static final fun equals-impl0 ([B[B)Z
	public fun getContentLength-s-VKNKU ()J
	public static fun getContentLength-s-VKNKU ([B)J
	public fun hashCode ()I
	public static fun hashCode-impl ([B)I
	public fun toString ()Ljava/lang/String;
	public static fun toString-impl ([B)Ljava/lang/String;
	public final synthetic fun unbox-impl ()[B
	public synthetic fun unwrap ()Ljava/lang/Object;
	public fun unwrap ()[B
	public static fun unwrap-impl ([B)[B
}

public final class elide/http/body/PrimitiveBody$Companion {
	public final fun bytes-A1ZtycI ([B)[B
	public final fun string-3f56i_k (Ljava/lang/String;)Ljava/lang/String;
}

public final class elide/http/body/PrimitiveBody$StringBody : elide/http/body/PrimitiveBody {
	public static final synthetic fun box-impl (Ljava/lang/String;)Lelide/http/body/PrimitiveBody$StringBody;
	public fun equals (Ljava/lang/Object;)Z
	public static fun equals-impl (Ljava/lang/String;Ljava/lang/Object;)Z
	public static final fun equals-impl0 (Ljava/lang/String;Ljava/lang/String;)Z
	public fun getContentLength-s-VKNKU ()J
	public static fun getContentLength-s-VKNKU (Ljava/lang/String;)J
	public fun hashCode ()I
	public static fun hashCode-impl (Ljava/lang/String;)I
	public fun toString ()Ljava/lang/String;
	public static fun toString-impl (Ljava/lang/String;)Ljava/lang/String;
	public final synthetic fun unbox-impl ()Ljava/lang/String;
	public synthetic fun unwrap ()Ljava/lang/Object;
	public fun unwrap ()Ljava/lang/String;
	public static fun unwrap-impl (Ljava/lang/String;)Ljava/lang/String;
}

public abstract interface class elide/http/headers/PlatformHttpHeaders : elide/http/Headers$PlatformHeaders {
	public abstract fun getHeaders ()Ljava/lang/Object;
}

public abstract interface class elide/http/headers/PlatformMutableHttpHeaders : elide/http/MutableHeaders$PlatformMutableHeaders {
	public abstract fun getHeaders ()Ljava/lang/Object;
}

public abstract interface class elide/http/request/PlatformHttpRequest : elide/http/Request$PlatformRequest {
	public abstract fun getRequest ()Ljava/lang/Object;
}

public abstract interface class elide/http/request/PlatformMutableHttpRequest : elide/http/MutableRequest$PlatformMutableRequest {
	public abstract fun getRequest ()Ljava/lang/Object;
}

public final class elide/http/response/NettyHttpResponse : elide/http/response/PlatformHttpResponse {
	public static final synthetic fun box-impl (Lio/netty/handler/codec/http/HttpResponse;)Lelide/http/response/NettyHttpResponse;
	public fun equals (Ljava/lang/Object;)Z
	public static fun equals-impl (Lio/netty/handler/codec/http/HttpResponse;Ljava/lang/Object;)Z
	public static final fun equals-impl0 (Lio/netty/handler/codec/http/HttpResponse;Lio/netty/handler/codec/http/HttpResponse;)Z
	public fun getBody ()Lelide/http/Body;
	public static fun getBody-impl (Lio/netty/handler/codec/http/HttpResponse;)Lelide/http/Body;
	public fun getHeaders ()Lelide/http/Headers;
	public static fun getHeaders-impl (Lio/netty/handler/codec/http/HttpResponse;)Lelide/http/Headers;
	public fun getResponse ()Lio/netty/handler/codec/http/HttpResponse;
	public synthetic fun getResponse ()Ljava/lang/Object;
	public static fun getResponse-impl (Lio/netty/handler/codec/http/HttpResponse;)Lio/netty/handler/codec/http/HttpResponse;
	public fun getStatus ()Lelide/http/Status;
	public static fun getStatus-impl (Lio/netty/handler/codec/http/HttpResponse;)Lelide/http/Status;
	public fun getTrailers ()Lelide/http/Headers;
	public static fun getTrailers-impl (Lio/netty/handler/codec/http/HttpResponse;)Lelide/http/Headers;
	public fun getVersion ()Lelide/http/ProtocolVersion;
	public static fun getVersion-impl (Lio/netty/handler/codec/http/HttpResponse;)Lelide/http/ProtocolVersion;
	public fun hashCode ()I
	public static fun hashCode-impl (Lio/netty/handler/codec/http/HttpResponse;)I
	public synthetic fun toMutable ()Lelide/http/MutableMessage;
	public fun toMutable ()Lelide/http/MutableResponse;
	public static fun toMutable-impl (Lio/netty/handler/codec/http/HttpResponse;)Lelide/http/MutableResponse;
	public fun toString ()Ljava/lang/String;
	public static fun toString-impl (Lio/netty/handler/codec/http/HttpResponse;)Ljava/lang/String;
	public final synthetic fun unbox-impl ()Lio/netty/handler/codec/http/HttpResponse;
}

public final class elide/http/response/NettyMutableHttpResponse : elide/http/response/PlatformMutableHttpResponse {
	public static final field Companion Lelide/http/response/NettyMutableHttpResponse$Companion;
	public static final synthetic fun box-impl (Lio/netty/handler/codec/http/FullHttpResponse;)Lelide/http/response/NettyMutableHttpResponse;
	public synthetic fun build ()Lelide/http/Message;
	public fun build ()Lelide/http/Response;
	public static fun build-impl (Lio/netty/handler/codec/http/FullHttpResponse;)Lelide/http/Response;
	public static final fun empty-XFFgoUU ()Lio/netty/handler/codec/http/FullHttpResponse;
	public fun equals (Ljava/lang/Object;)Z
	public static fun equals-impl (Lio/netty/handler/codec/http/FullHttpResponse;Ljava/lang/Object;)Z
	public static final fun equals-impl0 (Lio/netty/handler/codec/http/FullHttpResponse;Lio/netty/handler/codec/http/FullHttpResponse;)Z
	public fun getBody ()Lelide/http/Body;
	public static fun getBody-impl (Lio/netty/handler/codec/http/FullHttpResponse;)Lelide/http/Body;
	public synthetic fun getHeaders ()Lelide/http/Headers;
	public fun getHeaders ()Lelide/http/MutableHeaders;
	public static fun getHeaders-impl (Lio/netty/handler/codec/http/FullHttpResponse;)Lelide/http/MutableHeaders;
	public fun getResponse ()Lio/netty/handler/codec/http/HttpResponse;
	public synthetic fun getResponse ()Ljava/lang/Object;
	public static fun getResponse-impl (Lio/netty/handler/codec/http/FullHttpResponse;)Lio/netty/handler/codec/http/HttpResponse;
	public fun getStatus ()Lelide/http/Status;
	public static fun getStatus-impl (Lio/netty/handler/codec/http/FullHttpResponse;)Lelide/http/Status;
	public synthetic fun getTrailers ()Lelide/http/Headers;
	public fun getTrailers ()Lelide/http/MutableHeaders;
	public static fun getTrailers-impl (Lio/netty/handler/codec/http/FullHttpResponse;)Lelide/http/MutableHeaders;
	public fun getVersion ()Lelide/http/ProtocolVersion;
	public static fun getVersion-impl (Lio/netty/handler/codec/http/FullHttpResponse;)Lelide/http/ProtocolVersion;
	public fun hashCode ()I
	public static fun hashCode-impl (Lio/netty/handler/codec/http/FullHttpResponse;)I
	public fun setBody (Lelide/http/Body;)V
	public static fun setBody-impl (Lio/netty/handler/codec/http/FullHttpResponse;Lelide/http/Body;)V
	public fun setStatus (Lelide/http/Status;)V
	public static fun setStatus-impl (Lio/netty/handler/codec/http/FullHttpResponse;Lelide/http/Status;)V
	public fun toString ()Ljava/lang/String;
	public static fun toString-impl (Lio/netty/handler/codec/http/FullHttpResponse;)Ljava/lang/String;
	public final synthetic fun unbox-impl ()Lio/netty/handler/codec/http/FullHttpResponse;
}

public final class elide/http/response/NettyMutableHttpResponse$Companion {
	public final fun empty-XFFgoUU ()Lio/netty/handler/codec/http/FullHttpResponse;
}

public abstract interface class elide/http/response/PlatformHttpResponse : elide/http/Response$PlatformResponse {
	public abstract fun getResponse ()Ljava/lang/Object;
}

public abstract interface class elide/http/response/PlatformHttpStatus : elide/http/Status$PlatformStatus {
	public abstract fun getStatus ()Ljava/lang/Object;
}

public abstract interface class elide/http/response/PlatformMutableHttpResponse : elide/http/MutableResponse$PlatformMutableResponse {
	public abstract fun getResponse ()Ljava/lang/Object;
}

