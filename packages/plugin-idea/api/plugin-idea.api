public final class dev/elide/intellij/Constants {
	public static final field CONFIGURABLE_ID Ljava/lang/String;
	public static final field ELIDE_BINARY Ljava/lang/String;
	public static final field ELIDE_HOME Ljava/lang/String;
	public static final field ELIDE_RESOURCES_DIR Ljava/lang/String;
	public static final field INSTALL_URL Ljava/lang/String;
	public static final field INSTANCE Ldev/elide/intellij/Constants;
	public static final field LOCKFILE_NAME Ljava/lang/String;
	public static final field MANIFEST_NAME Ljava/lang/String;
	public static final field OUTPUT_DIR Ljava/lang/String;
	public static final field PLUGIN_ID Ljava/lang/String;
	public final fun getSYSTEM_ID ()Lcom/intellij/openapi/externalSystem/model/ProjectSystemId;
	public static final fun projectFileChooser ()Lcom/intellij/openapi/fileChooser/FileChooserDescriptor;
	public static final fun sdkFileChooser ()Lcom/intellij/openapi/fileChooser/FileChooserDescriptor;
}

public final class dev/elide/intellij/Constants$Commands {
	public static final field INSTANCE Ldev/elide/intellij/Constants$Commands;
	public static final field RUN Ljava/lang/String;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/elide/intellij/Constants$Icons {
	public static final field INSTANCE Ldev/elide/intellij/Constants$Icons;
	public fun equals (Ljava/lang/Object;)Z
	public static final fun getELIDE ()Ljavax/swing/Icon;
	public static final fun getRELOAD_PROJECT ()Ljavax/swing/Icon;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/elide/intellij/Constants$Strings : com/intellij/DynamicBundle {
	public static final field INSTANCE Ldev/elide/intellij/Constants$Strings;
	public fun equals (Ljava/lang/Object;)Z
	public static final fun get (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/elide/intellij/ElideAutoImportAware : com/intellij/openapi/externalSystem/ExternalSystemAutoImportAware {
	public fun <init> ()V
	public fun getAffectedExternalProjectFiles (Ljava/lang/String;Lcom/intellij/openapi/project/Project;)Ljava/util/List;
	public fun getAffectedExternalProjectPath (Ljava/lang/String;Lcom/intellij/openapi/project/Project;)Ljava/lang/String;
}

public final class dev/elide/intellij/ElideManager : com/intellij/openapi/externalSystem/ExternalSystemAutoImportAware, com/intellij/openapi/externalSystem/ExternalSystemConfigurableAware, com/intellij/openapi/externalSystem/ExternalSystemManager {
	public fun <init> ()V
	public fun enhanceRemoteProcessing (Lcom/intellij/execution/configurations/SimpleJavaParameters;)V
	public fun getAffectedExternalProjectFiles (Ljava/lang/String;Lcom/intellij/openapi/project/Project;)Ljava/util/List;
	public fun getAffectedExternalProjectPath (Ljava/lang/String;Lcom/intellij/openapi/project/Project;)Ljava/lang/String;
	public fun getConfigurable (Lcom/intellij/openapi/project/Project;)Lcom/intellij/openapi/options/Configurable;
	public fun getExecutionSettingsProvider ()Lcom/intellij/util/Function;
	public fun getExternalProjectDescriptor ()Lcom/intellij/openapi/fileChooser/FileChooserDescriptor;
	public fun getLocalSettingsProvider ()Lcom/intellij/util/Function;
	public fun getProjectResolverClass ()Ljava/lang/Class;
	public fun getSettingsProvider ()Lcom/intellij/util/Function;
	public fun getSystemId ()Lcom/intellij/openapi/externalSystem/model/ProjectSystemId;
	public fun getTaskManagerClass ()Ljava/lang/Class;
}

public final class dev/elide/intellij/InvalidElideHomeException : java/lang/Exception {
	public fun <init> (Ljava/lang/String;)V
	public fun <init> (Ljava/nio/file/Path;)V
	public fun getMessage ()Ljava/lang/String;
}

public final class dev/elide/intellij/action/ElideRunAction : com/intellij/openapi/externalSystem/action/ExternalSystemAction {
	public fun <init> ()V
	public fun actionPerformed (Lcom/intellij/openapi/actionSystem/AnActionEvent;)V
	public fun update (Lcom/intellij/openapi/actionSystem/AnActionEvent;)V
}

public final class dev/elide/intellij/action/ElideRunAnythingProvider : com/intellij/ide/actions/runAnything/activity/RunAnythingCommandLineProvider {
	public fun <init> ()V
	public fun getCompletionGroupTitle ()Ljava/lang/String;
	public fun getHelpCommand ()Ljava/lang/String;
	public fun getHelpCommandPlaceholder ()Ljava/lang/String;
	public fun getHelpGroupTitle ()Ljava/lang/String;
	public fun getHelpIcon ()Ljavax/swing/Icon;
	public synthetic fun getIcon (Ljava/lang/Object;)Ljavax/swing/Icon;
	public fun getIcon (Ljava/lang/String;)Ljavax/swing/Icon;
}

public final class dev/elide/intellij/cli/ElideCommandLine {
	public static final field Companion Ldev/elide/intellij/cli/ElideCommandLine$Companion;
	public synthetic fun <init> (Ljava/nio/file/Path;Ljava/nio/file/Path;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public static final fun at (Ljava/nio/file/Path;Ljava/nio/file/Path;)Ldev/elide/intellij/cli/ElideCommandLine;
	public final fun invoke (Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function3;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun resolve (Lcom/intellij/openapi/project/Project;Ljava/lang/String;Ljava/nio/file/Path;)Ldev/elide/intellij/cli/ElideCommandLine;
}

public final class dev/elide/intellij/cli/ElideCommandLine$Companion {
	public final fun at (Ljava/nio/file/Path;Ljava/nio/file/Path;)Ldev/elide/intellij/cli/ElideCommandLine;
	public static synthetic fun at$default (Ldev/elide/intellij/cli/ElideCommandLine$Companion;Ljava/nio/file/Path;Ljava/nio/file/Path;ILjava/lang/Object;)Ldev/elide/intellij/cli/ElideCommandLine;
	public final fun resolve (Lcom/intellij/openapi/project/Project;Ljava/lang/String;Ljava/nio/file/Path;)Ldev/elide/intellij/cli/ElideCommandLine;
	public static synthetic fun resolve$default (Ldev/elide/intellij/cli/ElideCommandLine$Companion;Lcom/intellij/openapi/project/Project;Ljava/lang/String;Ljava/nio/file/Path;ILjava/lang/Object;)Ldev/elide/intellij/cli/ElideCommandLine;
}

public final class dev/elide/intellij/cli/ElideCommandLineInfo : com/intellij/openapi/externalSystem/service/ui/command/line/CommandLineInfo {
	public fun <init> (Lcom/intellij/openapi/project/Project;Lcom/intellij/openapi/externalSystem/service/ui/project/path/WorkingDirectoryField;)V
	public fun getDialogTitle ()Ljava/lang/String;
	public fun getDialogTooltip ()Ljava/lang/String;
	public fun getFieldEmptyState ()Ljava/lang/String;
	public fun getSettingsHint ()Ljava/lang/String;
	public fun getSettingsName ()Ljava/lang/String;
	public fun getTablesInfo ()Ljava/util/List;
}

public final class dev/elide/intellij/cli/ElideCommandLineKt {
	public static final fun install (Ldev/elide/intellij/cli/ElideCommandLine;ZZLkotlin/jvm/functions/Function3;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun install$default (Ldev/elide/intellij/cli/ElideCommandLine;ZZLkotlin/jvm/functions/Function3;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static final fun invoke (Ldev/elide/intellij/cli/ElideCommandLine;[Ljava/lang/String;Lkotlin/jvm/functions/Function3;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class dev/elide/intellij/execution/ElideExternalTaskConfigurationType : com/intellij/openapi/externalSystem/service/execution/AbstractExternalSystemTaskConfigurationType {
	public fun <init> ()V
	public fun getIcon ()Ljavax/swing/Icon;
	public fun isDumbAware ()Z
}

public final class dev/elide/intellij/execution/ElideLazyRunConfigurationProducer : com/intellij/execution/actions/LazyRunConfigurationProducer {
	public fun <init> ()V
	public fun findExistingConfiguration (Lcom/intellij/execution/actions/ConfigurationContext;)Lcom/intellij/execution/RunnerAndConfigurationSettings;
	public fun getConfigurationFactory ()Lcom/intellij/execution/configurations/ConfigurationFactory;
	public synthetic fun isConfigurationFromContext (Lcom/intellij/execution/configurations/RunConfiguration;Lcom/intellij/execution/actions/ConfigurationContext;)Z
	public fun isConfigurationFromContext (Ldev/elide/intellij/execution/ElideRunConfiguration;Lcom/intellij/execution/actions/ConfigurationContext;)Z
	public fun isDumbAware ()Z
	public fun isPreferredConfiguration (Lcom/intellij/execution/actions/ConfigurationFromContext;Lcom/intellij/execution/actions/ConfigurationFromContext;)Z
	public synthetic fun setupConfigurationFromContext (Lcom/intellij/execution/configurations/RunConfiguration;Lcom/intellij/execution/actions/ConfigurationContext;Lcom/intellij/openapi/util/Ref;)Z
	public fun shouldReplace (Lcom/intellij/execution/actions/ConfigurationFromContext;Lcom/intellij/execution/actions/ConfigurationFromContext;)Z
}

public final class dev/elide/intellij/execution/ElideRunConfiguration : com/intellij/openapi/externalSystem/service/execution/ExternalSystemRunConfiguration, com/intellij/execution/target/TargetEnvironmentAwareRunProfile {
	public fun <init> (Lcom/intellij/openapi/project/Project;Lcom/intellij/execution/configurations/ConfigurationFactory;Ljava/lang/String;)V
	public fun canRunOn (Lcom/intellij/execution/target/TargetEnvironmentConfiguration;)Z
	public fun getDefaultLanguageRuntimeType ()Lcom/intellij/execution/target/LanguageRuntimeType;
	public fun getDefaultTargetName ()Ljava/lang/String;
	public final fun getEntrypoint ()Ldev/elide/intellij/project/model/ElideEntrypointInfo;
	public fun getIcon ()Ljavax/swing/Icon;
	public final fun getRawCommandLine ()Ljava/lang/String;
	public fun setDefaultTargetName (Ljava/lang/String;)V
	public final fun setEntrypoint (Ldev/elide/intellij/project/model/ElideEntrypointInfo;)V
	public final fun setRawCommandLine (Ljava/lang/String;)V
}

public final class dev/elide/intellij/execution/ElideRunConfigurationExtension : com/intellij/openapi/externalSystem/service/execution/configuration/ExternalSystemReifiedRunConfigurationExtension {
	public fun <init> ()V
	public synthetic fun configureFragments (Lcom/intellij/openapi/externalSystem/service/execution/configuration/fragments/SettingsEditorFragmentContainer;Lcom/intellij/openapi/externalSystem/service/execution/ExternalSystemRunConfiguration;)V
	public fun configureFragments (Lcom/intellij/openapi/externalSystem/service/execution/configuration/fragments/SettingsEditorFragmentContainer;Ldev/elide/intellij/execution/ElideRunConfiguration;)V
}

public final class dev/elide/intellij/execution/ElideRuntimeConfigurationProducer : com/intellij/openapi/externalSystem/service/execution/AbstractExternalSystemRunConfigurationProducer {
	public fun <init> ()V
	public fun getConfigurationFactory ()Lcom/intellij/execution/configurations/ConfigurationFactory;
}

public final class dev/elide/intellij/execution/ElideRuntimeTargetConfiguration : com/intellij/execution/target/LanguageRuntimeConfiguration, com/intellij/openapi/components/PersistentStateComponent {
	public fun <init> ()V
	public final fun getElideHome ()Ljava/lang/String;
	public fun getState ()Ldev/elide/intellij/execution/ElideRuntimeTargetConfiguration$State;
	public synthetic fun getState ()Ljava/lang/Object;
	public fun loadState (Ldev/elide/intellij/execution/ElideRuntimeTargetConfiguration$State;)V
	public synthetic fun loadState (Ljava/lang/Object;)V
	public final fun setElideHome (Ljava/lang/String;)V
}

public final class dev/elide/intellij/execution/ElideRuntimeTargetConfiguration$State : com/intellij/openapi/components/BaseState {
	public fun <init> ()V
	public final fun getElideHome ()Ljava/lang/String;
	public final fun setElideHome (Ljava/lang/String;)V
}

public final class dev/elide/intellij/execution/ElideRuntimeTargetUI : com/intellij/openapi/options/BoundConfigurable {
	public fun <init> (Ldev/elide/intellij/execution/ElideRuntimeTargetConfiguration;Lcom/intellij/execution/target/TargetEnvironmentType;Ljava/util/function/Supplier;Lcom/intellij/openapi/project/Project;)V
	public fun createPanel ()Lcom/intellij/openapi/ui/DialogPanel;
}

public final class dev/elide/intellij/execution/ElideRuntimeType : com/intellij/execution/target/LanguageRuntimeType {
	public static final field Companion Ldev/elide/intellij/execution/ElideRuntimeType$Companion;
	public static final field TYPE_ID Ljava/lang/String;
	public fun <init> ()V
	public synthetic fun createConfigurable (Lcom/intellij/openapi/project/Project;Lcom/intellij/execution/target/LanguageRuntimeConfiguration;Lcom/intellij/execution/target/TargetEnvironmentType;Ljava/util/function/Supplier;)Lcom/intellij/openapi/options/Configurable;
	public fun createConfigurable (Lcom/intellij/openapi/project/Project;Ldev/elide/intellij/execution/ElideRuntimeTargetConfiguration;Lcom/intellij/execution/target/TargetEnvironmentType;Ljava/util/function/Supplier;)Lcom/intellij/openapi/options/Configurable;
	public synthetic fun createDefaultConfig ()Lcom/intellij/execution/target/ContributedConfigurationBase;
	public fun createDefaultConfig ()Ldev/elide/intellij/execution/ElideRuntimeTargetConfiguration;
	public synthetic fun createSerializer (Lcom/intellij/execution/target/ContributedConfigurationBase;)Lcom/intellij/openapi/components/PersistentStateComponent;
	public fun createSerializer (Ldev/elide/intellij/execution/ElideRuntimeTargetConfiguration;)Lcom/intellij/openapi/components/PersistentStateComponent;
	public synthetic fun duplicateConfig (Lcom/intellij/execution/target/ContributedConfigurationBase;)Lcom/intellij/execution/target/ContributedConfigurationBase;
	public fun duplicateConfig (Ldev/elide/intellij/execution/ElideRuntimeTargetConfiguration;)Ldev/elide/intellij/execution/ElideRuntimeTargetConfiguration;
	public synthetic fun findLanguageRuntime (Lcom/intellij/execution/target/TargetEnvironmentConfiguration;)Lcom/intellij/execution/target/LanguageRuntimeConfiguration;
	public fun findLanguageRuntime (Lcom/intellij/execution/target/TargetEnvironmentConfiguration;)Ldev/elide/intellij/execution/ElideRuntimeTargetConfiguration;
	public fun getConfigurableDescription ()Ljava/lang/String;
	public fun getDisplayName ()Ljava/lang/String;
	public fun getIcon ()Ljavax/swing/Icon;
	public fun getLaunchDescription ()Ljava/lang/String;
	public fun isApplicableTo (Lcom/intellij/execution/RunnerAndConfigurationSettings;)Z
}

public final class dev/elide/intellij/execution/ElideRuntimeType$Companion {
}

public final class dev/elide/intellij/project/ElideOpenProjectProvider : com/intellij/openapi/externalSystem/importing/AbstractOpenProjectProvider {
	public fun <init> ()V
	public fun getSystemId ()Lcom/intellij/openapi/externalSystem/model/ProjectSystemId;
	public fun unlinkProject (Lcom/intellij/openapi/project/Project;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class dev/elide/intellij/project/ElideProjectDataService : com/intellij/openapi/externalSystem/service/project/manage/AbstractProjectDataService {
	public fun <init> ()V
	public fun getTargetDataKey ()Lcom/intellij/openapi/externalSystem/model/Key;
	public fun importData (Ljava/util/Collection;Lcom/intellij/openapi/externalSystem/model/project/ProjectData;Lcom/intellij/openapi/project/Project;Lcom/intellij/openapi/externalSystem/service/project/IdeModifiableModelsProvider;)V
}

public final class dev/elide/intellij/project/ElideProjectResolver : com/intellij/openapi/externalSystem/service/project/ExternalSystemProjectResolver {
	public static final field Companion Ldev/elide/intellij/project/ElideProjectResolver$Companion;
	public fun <init> ()V
	public fun cancelTask (Lcom/intellij/openapi/externalSystem/model/task/ExternalSystemTaskId;Lcom/intellij/openapi/externalSystem/model/task/ExternalSystemTaskNotificationListener;)Z
	public synthetic fun resolveProjectInfo (Lcom/intellij/openapi/externalSystem/model/task/ExternalSystemTaskId;Ljava/lang/String;ZLcom/intellij/openapi/externalSystem/model/settings/ExternalSystemExecutionSettings;Lcom/intellij/openapi/externalSystem/importing/ProjectResolverPolicy;Lcom/intellij/openapi/externalSystem/model/task/ExternalSystemTaskNotificationListener;)Lcom/intellij/openapi/externalSystem/model/DataNode;
	public fun resolveProjectInfo (Lcom/intellij/openapi/externalSystem/model/task/ExternalSystemTaskId;Ljava/lang/String;ZLdev/elide/intellij/settings/ElideExecutionSettings;Lcom/intellij/openapi/externalSystem/importing/ProjectResolverPolicy;Lcom/intellij/openapi/externalSystem/model/task/ExternalSystemTaskNotificationListener;)Lcom/intellij/openapi/externalSystem/model/DataNode;
}

public final class dev/elide/intellij/project/ElideProjectResolver$Companion {
}

public final class dev/elide/intellij/project/ElideUnlinkedProjectAware : com/intellij/openapi/externalSystem/autolink/ExternalSystemUnlinkedProjectAware {
	public fun <init> ()V
	public fun getSystemId ()Lcom/intellij/openapi/externalSystem/model/ProjectSystemId;
	public fun isBuildFile (Lcom/intellij/openapi/project/Project;Lcom/intellij/openapi/vfs/VirtualFile;)Z
	public fun isLinkedProject (Lcom/intellij/openapi/project/Project;Ljava/lang/String;)Z
	public fun linkAndLoadProjectAsync (Lcom/intellij/openapi/project/Project;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun subscribe (Lcom/intellij/openapi/project/Project;Lcom/intellij/openapi/externalSystem/autolink/ExternalSystemProjectLinkListener;Lcom/intellij/openapi/Disposable;)V
	public fun unlinkProject (Lcom/intellij/openapi/project/Project;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class dev/elide/intellij/project/manifest/ElideManifestService : elide/tooling/project/PackageManifestService {
	public fun <init> ()V
	public fun encode (Lelide/tooling/project/manifest/PackageManifest;Ljava/io/OutputStream;)V
	public fun export (Lelide/tooling/project/manifest/ElidePackageManifest;Lelide/tooling/project/ProjectEcosystem;)Lelide/tooling/project/manifest/PackageManifest;
	public fun merge (Ljava/lang/Iterable;)Lelide/tooling/project/manifest/ElidePackageManifest;
	public fun parse (Ljava/io/InputStream;Lelide/tooling/project/ProjectEcosystem;)Lelide/tooling/project/manifest/ElidePackageManifest;
	public synthetic fun parse (Ljava/io/InputStream;Lelide/tooling/project/ProjectEcosystem;)Lelide/tooling/project/manifest/PackageManifest;
	public fun parse (Ljava/nio/file/Path;)Lelide/tooling/project/manifest/ElidePackageManifest;
	public synthetic fun parse (Ljava/nio/file/Path;)Lelide/tooling/project/manifest/PackageManifest;
	public fun resolve (Ljava/nio/file/Path;Lelide/tooling/project/ProjectEcosystem;)Ljava/nio/file/Path;
}

public final class dev/elide/intellij/project/model/ElideDependenciesContributor : dev/elide/intellij/project/model/ElideProjectModelContributor {
	public fun <init> ()V
	public fun enhanceModule (Lcom/intellij/openapi/externalSystem/model/DataNode;Lelide/tooling/project/ElideConfiguredProject;Lelide/tooling/project/SourceSet;Ljava/nio/file/Path;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class dev/elide/intellij/project/model/ElideEntrypointInfo {
	public static final field Companion Ldev/elide/intellij/project/model/ElideEntrypointInfo$Companion;
	public fun <init> ()V
	public fun <init> (Ldev/elide/intellij/project/model/ElideEntrypointInfo$Kind;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
	public synthetic fun <init> (Ldev/elide/intellij/project/model/ElideEntrypointInfo$Kind;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ldev/elide/intellij/project/model/ElideEntrypointInfo$Kind;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/lang/String;
	public final fun component4 ()Ljava/lang/String;
	public final fun copy (Ldev/elide/intellij/project/model/ElideEntrypointInfo$Kind;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ldev/elide/intellij/project/model/ElideEntrypointInfo;
	public static synthetic fun copy$default (Ldev/elide/intellij/project/model/ElideEntrypointInfo;Ldev/elide/intellij/project/model/ElideEntrypointInfo$Kind;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Ldev/elide/intellij/project/model/ElideEntrypointInfo;
	public fun equals (Ljava/lang/Object;)Z
	public static final fun generic (Ljava/lang/String;)Ldev/elide/intellij/project/model/ElideEntrypointInfo;
	public final fun getDescriptiveName ()Ljava/lang/String;
	public final fun getDisplayName ()Ljava/lang/String;
	public final fun getKind ()Ldev/elide/intellij/project/model/ElideEntrypointInfo$Kind;
	public final fun getValue ()Ljava/lang/String;
	public fun hashCode ()I
	public static final fun jvmMain (Ljava/lang/String;)Ldev/elide/intellij/project/model/ElideEntrypointInfo;
	public static final fun script (Ljava/lang/String;)Ldev/elide/intellij/project/model/ElideEntrypointInfo;
	public fun toString ()Ljava/lang/String;
}

public final class dev/elide/intellij/project/model/ElideEntrypointInfo$Companion {
	public final fun generic (Ljava/lang/String;)Ldev/elide/intellij/project/model/ElideEntrypointInfo;
	public final fun jvmMain (Ljava/lang/String;)Ldev/elide/intellij/project/model/ElideEntrypointInfo;
	public final fun script (Ljava/lang/String;)Ldev/elide/intellij/project/model/ElideEntrypointInfo;
}

public final class dev/elide/intellij/project/model/ElideEntrypointInfo$Kind : java/lang/Enum {
	public static final field Generic Ldev/elide/intellij/project/model/ElideEntrypointInfo$Kind;
	public static final field JvmMainClass Ldev/elide/intellij/project/model/ElideEntrypointInfo$Kind;
	public static final field Script Ldev/elide/intellij/project/model/ElideEntrypointInfo$Kind;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public static fun valueOf (Ljava/lang/String;)Ldev/elide/intellij/project/model/ElideEntrypointInfo$Kind;
	public static fun values ()[Ldev/elide/intellij/project/model/ElideEntrypointInfo$Kind;
}

public final class dev/elide/intellij/project/model/ElideJdkContributor : dev/elide/intellij/project/model/ElideProjectModelContributor {
	public fun <init> ()V
	public fun enhanceModule (Lcom/intellij/openapi/externalSystem/model/DataNode;Lelide/tooling/project/ElideConfiguredProject;Lelide/tooling/project/SourceSet;Ljava/nio/file/Path;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun enhanceProject (Lcom/intellij/openapi/externalSystem/model/DataNode;Lelide/tooling/project/ElideConfiguredProject;Ljava/nio/file/Path;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class dev/elide/intellij/project/model/ElideProjectData {
	public static final field Companion Ldev/elide/intellij/project/model/ElideProjectData$Companion;
	public fun <init> ()V
	public fun <init> (Ljava/util/List;)V
	public synthetic fun <init> (Ljava/util/List;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/util/List;
	public final fun copy (Ljava/util/List;)Ldev/elide/intellij/project/model/ElideProjectData;
	public static synthetic fun copy$default (Ldev/elide/intellij/project/model/ElideProjectData;Ljava/util/List;ILjava/lang/Object;)Ldev/elide/intellij/project/model/ElideProjectData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getEntrypoints ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/elide/intellij/project/model/ElideProjectData$Companion {
	public final fun getPROJECT_KEY ()Lcom/intellij/openapi/externalSystem/model/Key;
}

public final class dev/elide/intellij/project/model/ElideProjectDataKt {
	public static final fun getFullCommandLine (Ldev/elide/intellij/project/model/ElideEntrypointInfo;)Ljava/lang/String;
}

public final class dev/elide/intellij/project/model/ElideProjectModel {
	public static final field INSTANCE Ldev/elide/intellij/project/model/ElideProjectModel;
	public final fun buildProjectModel (Ljava/nio/file/Path;Lelide/tooling/project/ElideConfiguredProject;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun equals (Ljava/lang/Object;)Z
	public final fun extractSourceSetContentRoot (Ljava/lang/String;)Ljava/lang/String;
	public fun hashCode ()I
	public final fun mapSourceSetType (Lelide/tooling/project/SourceSetType;)Lcom/intellij/openapi/externalSystem/model/project/ExternalSystemSourceType;
	public final fun selectSourceSetRoot (Ljava/nio/file/Path;Lelide/tooling/project/SourceSet;)Ljava/nio/file/Path;
	public fun toString ()Ljava/lang/String;
}

public abstract interface class dev/elide/intellij/project/model/ElideProjectModelContributor {
	public static final field Companion Ldev/elide/intellij/project/model/ElideProjectModelContributor$Companion;
	public fun enhanceModule (Lcom/intellij/openapi/externalSystem/model/DataNode;Lelide/tooling/project/ElideConfiguredProject;Lelide/tooling/project/SourceSet;Ljava/nio/file/Path;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun enhanceProject (Lcom/intellij/openapi/externalSystem/model/DataNode;Lelide/tooling/project/ElideConfiguredProject;Ljava/nio/file/Path;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getExtensions ()Lcom/intellij/openapi/extensions/ExtensionPointName;
}

public final class dev/elide/intellij/project/model/ElideProjectModelContributor$Companion {
	public final fun getExtensions ()Lcom/intellij/openapi/extensions/ExtensionPointName;
}

public final class dev/elide/intellij/service/ElideDistributionResolver {
	public static final field Companion Ldev/elide/intellij/service/ElideDistributionResolver$Companion;
	public fun <init> (Lcom/intellij/openapi/project/Project;)V
	public static final fun defaultDistributionPath ()Ljava/nio/file/Path;
	public static final fun getElideHome (Lcom/intellij/openapi/project/Project;Ljava/lang/String;)Ljava/nio/file/Path;
	public final fun resolveDistributionPath (Ljava/lang/String;)Ljava/nio/file/Path;
	public static final fun resourcesPath (Lcom/intellij/openapi/project/Project;Ljava/lang/String;)Ljava/nio/file/Path;
	public static final fun resourcesPath (Ljava/nio/file/Path;)Ljava/nio/file/Path;
	public static final fun validateDistributionPath (Ljava/nio/file/Path;)Z
}

public final class dev/elide/intellij/service/ElideDistributionResolver$Companion {
	public final fun defaultDistributionPath ()Ljava/nio/file/Path;
	public final fun getElideHome (Lcom/intellij/openapi/project/Project;Ljava/lang/String;)Ljava/nio/file/Path;
	public final fun resourcesPath (Lcom/intellij/openapi/project/Project;Ljava/lang/String;)Ljava/nio/file/Path;
	public final fun resourcesPath (Ljava/nio/file/Path;)Ljava/nio/file/Path;
	public final fun validateDistributionPath (Ljava/nio/file/Path;)Z
}

public final class dev/elide/intellij/service/ElideExecutionService {
	public fun <init> (Lcom/intellij/openapi/project/Project;)V
	public final fun execute (Ljava/lang/String;Ljava/lang/String;Lcom/intellij/execution/Executor;)V
}

public final class dev/elide/intellij/service/ElideProjectIndexService : com/intellij/openapi/components/SerializablePersistentStateComponent {
	public fun <init> ()V
	public final fun contains (Ljava/lang/String;)Z
	public final fun get (Ljava/lang/String;)Ldev/elide/intellij/project/model/ElideProjectData;
	public final fun getEntries ()Ljava/util/Set;
	public final fun update (Ljava/lang/String;Ldev/elide/intellij/project/model/ElideProjectData;)V
	public final fun update (Ljava/util/Map;)V
}

public final class dev/elide/intellij/service/ElideProjectIndexService$ElideProjectIndex {
	public final field projects Ljava/util/Map;
	public fun <init> ()V
	public fun <init> (Ljava/util/Map;)V
	public synthetic fun <init> (Ljava/util/Map;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/util/Map;
	public final fun copy (Ljava/util/Map;)Ldev/elide/intellij/service/ElideProjectIndexService$ElideProjectIndex;
	public static synthetic fun copy$default (Ldev/elide/intellij/service/ElideProjectIndexService$ElideProjectIndex;Ljava/util/Map;ILjava/lang/Object;)Ldev/elide/intellij/service/ElideProjectIndexService$ElideProjectIndex;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/elide/intellij/service/ElideProjectIndexServiceKt {
	public static final fun getElideProjectIndex (Lcom/intellij/openapi/project/Project;)Ldev/elide/intellij/service/ElideProjectIndexService;
}

public final class dev/elide/intellij/settings/ElideConfigurable : com/intellij/openapi/externalSystem/service/settings/AbstractExternalSystemConfigurable {
	public fun <init> (Lcom/intellij/openapi/project/Project;)V
	public synthetic fun createProjectSettingsControl (Lcom/intellij/openapi/externalSystem/settings/ExternalProjectSettings;)Lcom/intellij/openapi/externalSystem/util/ExternalSystemSettingsControl;
	public synthetic fun createSystemSettingsControl (Lcom/intellij/openapi/externalSystem/settings/AbstractExternalSystemSettings;)Lcom/intellij/openapi/externalSystem/util/ExternalSystemSettingsControl;
	public fun getDisplayName ()Ljava/lang/String;
	public fun getId ()Ljava/lang/String;
	public synthetic fun newProjectSettings ()Lcom/intellij/openapi/externalSystem/settings/ExternalProjectSettings;
}

public final class dev/elide/intellij/settings/ElideDistributionSetting : java/lang/Enum {
	public static final field AutoDetect Ldev/elide/intellij/settings/ElideDistributionSetting;
	public static final field Custom Ldev/elide/intellij/settings/ElideDistributionSetting;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public static fun valueOf (Ljava/lang/String;)Ldev/elide/intellij/settings/ElideDistributionSetting;
	public static fun values ()[Ldev/elide/intellij/settings/ElideDistributionSetting;
}

public final class dev/elide/intellij/settings/ElideExecutionSettings : com/intellij/openapi/externalSystem/model/settings/ExternalSystemExecutionSettings {
	public fun <init> (Ljava/nio/file/Path;ZZ)V
	public final fun component1 ()Ljava/nio/file/Path;
	public final fun component2 ()Z
	public final fun component3 ()Z
	public final fun copy (Ljava/nio/file/Path;ZZ)Ldev/elide/intellij/settings/ElideExecutionSettings;
	public static synthetic fun copy$default (Ldev/elide/intellij/settings/ElideExecutionSettings;Ljava/nio/file/Path;ZZILjava/lang/Object;)Ldev/elide/intellij/settings/ElideExecutionSettings;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getDownloadDocs ()Z
	public final fun getDownloadSources ()Z
	public final fun getElideHome ()Ljava/nio/file/Path;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/elide/intellij/settings/ElideLocalSettings : com/intellij/openapi/externalSystem/settings/AbstractExternalSystemLocalSettings {
	public fun <init> (Lcom/intellij/openapi/project/Project;)V
}

public final class dev/elide/intellij/settings/ElideLocalSettings$State : com/intellij/openapi/externalSystem/settings/AbstractExternalSystemLocalSettings$State {
	public fun <init> ()V
}

public final class dev/elide/intellij/settings/ElideProjectSettings : com/intellij/openapi/externalSystem/settings/ExternalProjectSettings {
	public fun <init> ()V
	public fun <init> (Ldev/elide/intellij/settings/ElideDistributionSetting;Ljava/lang/String;)V
	public synthetic fun <init> (Ldev/elide/intellij/settings/ElideDistributionSetting;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun clone ()Lcom/intellij/openapi/externalSystem/settings/ExternalProjectSettings;
	public synthetic fun clone ()Ljava/lang/Object;
	public final fun component1 ()Ldev/elide/intellij/settings/ElideDistributionSetting;
	public final fun component2 ()Ljava/lang/String;
	public final fun copy (Ldev/elide/intellij/settings/ElideDistributionSetting;Ljava/lang/String;)Ldev/elide/intellij/settings/ElideProjectSettings;
	public static synthetic fun copy$default (Ldev/elide/intellij/settings/ElideProjectSettings;Ldev/elide/intellij/settings/ElideDistributionSetting;Ljava/lang/String;ILjava/lang/Object;)Ldev/elide/intellij/settings/ElideProjectSettings;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getElideDistributionPath ()Ljava/lang/String;
	public final fun getElideDistributionType ()Ldev/elide/intellij/settings/ElideDistributionSetting;
	public fun hashCode ()I
	public final fun setElideDistributionPath (Ljava/lang/String;)V
	public final fun setElideDistributionType (Ldev/elide/intellij/settings/ElideDistributionSetting;)V
	public fun toString ()Ljava/lang/String;
}

public final class dev/elide/intellij/settings/ElideProjectSettingsControl : com/intellij/openapi/externalSystem/service/settings/AbstractExternalProjectSettingsControl {
	public fun <init> (Ldev/elide/intellij/settings/ElideProjectSettings;)V
	public synthetic fun applyExtraSettings (Lcom/intellij/openapi/externalSystem/settings/ExternalProjectSettings;)V
	public fun showUi (Z)V
	public fun validate (Ldev/elide/intellij/settings/ElideProjectSettings;)Z
	public synthetic fun validate (Ljava/lang/Object;)Z
}

public final class dev/elide/intellij/settings/ElideProjectSettingsListener : com/intellij/openapi/externalSystem/settings/ExternalSystemSettingsListener {
	public fun <init> ()V
}

public final class dev/elide/intellij/settings/ElideSettings : com/intellij/openapi/externalSystem/settings/AbstractExternalSystemSettings, com/intellij/openapi/components/PersistentStateComponent {
	public static final field Companion Ldev/elide/intellij/settings/ElideSettings$Companion;
	public fun <init> (Lcom/intellij/openapi/project/Project;)V
	public synthetic fun checkSettings (Lcom/intellij/openapi/externalSystem/settings/ExternalProjectSettings;Lcom/intellij/openapi/externalSystem/settings/ExternalProjectSettings;)V
	public synthetic fun copyExtraSettingsFrom (Lcom/intellij/openapi/externalSystem/settings/AbstractExternalSystemSettings;)V
	public final fun getDownloadDocs ()Z
	public final fun getDownloadSources ()Z
	public static final fun getSettings (Lcom/intellij/openapi/project/Project;)Ldev/elide/intellij/settings/ElideSettings;
	public fun getState ()Ldev/elide/intellij/settings/ElideSettings$ElideSettingsState;
	public synthetic fun getState ()Ljava/lang/Object;
	public fun loadState (Ldev/elide/intellij/settings/ElideSettings$ElideSettingsState;)V
	public synthetic fun loadState (Ljava/lang/Object;)V
	public final fun setDownloadDocs (Z)V
	public final fun setDownloadSources (Z)V
	public fun subscribe (Lcom/intellij/openapi/externalSystem/settings/ExternalSystemSettingsListener;Lcom/intellij/openapi/Disposable;)V
}

public final class dev/elide/intellij/settings/ElideSettings$Companion {
	public final fun getSettings (Lcom/intellij/openapi/project/Project;)Ldev/elide/intellij/settings/ElideSettings;
}

public final class dev/elide/intellij/settings/ElideSettings$ElideSettingsState : com/intellij/openapi/externalSystem/settings/AbstractExternalSystemSettings$State {
	public fun <init> ()V
	public final fun getDownloadDocs ()Z
	public final fun getDownloadSources ()Z
	public fun getLinkedExternalProjectsSettings ()Ljava/util/Set;
	public final fun setDownloadDocs (Z)V
	public final fun setDownloadSources (Z)V
	public fun setLinkedExternalProjectsSettings (Ljava/util/Set;)V
}

public abstract interface class dev/elide/intellij/settings/ElideSettingsListener : com/intellij/openapi/externalSystem/settings/ExternalSystemSettingsListener {
	public static final field Companion Ldev/elide/intellij/settings/ElideSettingsListener$Companion;
	public static fun getTOPIC ()Lcom/intellij/util/messages/Topic;
}

public final class dev/elide/intellij/settings/ElideSettingsListener$Companion {
	public final fun getTOPIC ()Lcom/intellij/util/messages/Topic;
}

public final class dev/elide/intellij/settings/ElideSystemSettingsControl : com/intellij/openapi/externalSystem/util/ExternalSystemSettingsControl {
	public fun <init> (Ldev/elide/intellij/settings/ElideSettings;)V
	public fun apply (Ldev/elide/intellij/settings/ElideSettings;)V
	public synthetic fun apply (Ljava/lang/Object;)V
	public fun disposeUIResources ()V
	public fun fillUi (Lcom/intellij/openapi/externalSystem/util/PaintAwarePanel;I)V
	public fun isModified ()Z
	public fun reset ()V
	public fun showUi (Z)V
	public fun validate (Ldev/elide/intellij/settings/ElideSettings;)Z
	public synthetic fun validate (Ljava/lang/Object;)Z
}

public final class dev/elide/intellij/startup/ElideStartupActivity : com/intellij/openapi/startup/ProjectActivity {
	public fun <init> ()V
	public fun execute (Lcom/intellij/openapi/project/Project;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class dev/elide/intellij/tasks/ElideTaskManager : com/intellij/openapi/externalSystem/task/ExternalSystemTaskManager {
	public fun <init> ()V
	public fun cancelTask (Lcom/intellij/openapi/externalSystem/model/task/ExternalSystemTaskId;Lcom/intellij/openapi/externalSystem/model/task/ExternalSystemTaskNotificationListener;)Z
	public synthetic fun executeTasks (Ljava/lang/String;Lcom/intellij/openapi/externalSystem/model/task/ExternalSystemTaskId;Lcom/intellij/openapi/externalSystem/model/settings/ExternalSystemExecutionSettings;Lcom/intellij/openapi/externalSystem/model/task/ExternalSystemTaskNotificationListener;)V
	public fun executeTasks (Ljava/lang/String;Lcom/intellij/openapi/externalSystem/model/task/ExternalSystemTaskId;Ldev/elide/intellij/settings/ElideExecutionSettings;Lcom/intellij/openapi/externalSystem/model/task/ExternalSystemTaskNotificationListener;)V
}

public final class dev/elide/intellij/ui/ElideIconProvider : com/intellij/openapi/externalSystem/ui/ExternalSystemIconProvider {
	public fun <init> ()V
	public fun getReloadIcon ()Ljavax/swing/Icon;
}

public final class dev/elide/intellij/ui/ElideNotifications {
	public static final field INSTANCE Ldev/elide/intellij/ui/ElideNotifications;
	public final fun notifyInvalidElideHome (Lcom/intellij/openapi/project/Project;)V
	public static synthetic fun notifyInvalidElideHome$default (Ldev/elide/intellij/ui/ElideNotifications;Lcom/intellij/openapi/project/Project;ILjava/lang/Object;)V
}

