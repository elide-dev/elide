/*
 * Copyright Â© 2022, The Elide Framework Authors. All rights reserved.
 *
 * The Gust/Elide framework and tools, and all associated source or object computer code, except where otherwise noted,
 * are licensed under the Zero Prosperity license, which is enclosed in this repository, in the file LICENSE.txt. Use of
 * this code in object or source form requires and implies consent and agreement to that license in principle and
 * practice. Source or object code not listing this header, or unless specified otherwise, remain the property of
 * Elide LLC and its suppliers, if any. The intellectual and technical concepts contained herein are proprietary to
 * Elide LLC and its suppliers and may be covered by U.S. and Foreign Patents, or patents in process, and are protected
 * by trade secret and copyright law. Dissemination of this information, or reproduction of this material, in any form,
 * is strictly forbidden except in adherence with assigned license requirements.
 */

syntax = "proto3";
package elide.app;

import "elide/app/app.proto";
import "elide/app/deployment.proto";
import "elide/std/version.proto";

option optimize_for = SPEED;
option cc_enable_arenas = true;
option java_multiple_files = true;
option java_string_check_utf8 = true;
option php_class_prefix = "ELD";
option swift_prefix = "Elide";
option objc_class_prefix = "ELD";
option java_package = "tools.elide.app";
option csharp_namespace = "Elide.App";
option go_package = "github.com/elide-tools/elide/app;app";

// Primary key information for a given application instance.
message InstanceKey {
  // Unique ID allocated for this instance.
  string id = 1;

  // Tenant which owns this instance.
  string owner = 2;
}

// Describes statuses which an application instance may inhabit.
enum InstanceStatus {
  // Instance status is unknown to this version of the protocol.
  INSTANCE_STATUS_UNKNOWN = 0;

  // Instance is currently running.
  RUNNING = 1;

  // Instance is currently stopped.
  STOPPED = 2;

  // Instance is currently provisioning.
  PROVISIONING = 3;

  // Instance is currently de-provisioning.
  DEPROVISIONING = 4;
}

// Describes instance assignment information.
message InstanceAssignment {
  // ID of the host this instance is assigned to.
  string host = 1;
}

// Describes an allocation constituent to an application instance.
message InstanceAllocation {
  // ID of this allocation.
  string id = 1;
}

// Top-level record which describes an application instance.
message ApplicationInstance {
  // Primary key info for this instance.
  InstanceKey key = 1;

  // Short (and unique) name for this instance.
  string name = 2;

  // Display name for this instance.
  string display_name = 3;

  // Current status of this instance.
  InstanceStatus status = 4;

  // Assignment information for this instance.
  InstanceAssignment assignment = 5;

  // Application associated with this instance.
  elide.app.Application app = 6;

  // Version information for this deployment.
  elide.std.Version version = 7;

  // Deployment this instance is associated with.
  elide.app.Deployment deployment = 8;

  // Encloses allocations constituent to this application instance.
  repeated InstanceAllocation allocation = 9;

  // Domains where this instance can be accessed.
  repeated string domain = 10;
}
