/*
 * Copyright Â© 2022, The Elide Framework Authors. All rights reserved.
 *
 * The Gust/Elide framework and tools, and all associated source or object computer code, except where otherwise noted,
 * are licensed under the Zero Prosperity license, which is enclosed in this repository, in the file LICENSE.txt. Use of
 * this code in object or source form requires and implies consent and agreement to that license in principle and
 * practice. Source or object code not listing this header, or unless specified otherwise, remain the property of
 * Elide LLC and its suppliers, if any. The intellectual and technical concepts contained herein are proprietary to
 * Elide LLC and its suppliers and may be covered by U.S. and Foreign Patents, or patents in process, and are protected
 * by trade secret and copyright law. Dissemination of this information, or reproduction of this material, in any form,
 * is strictly forbidden except in adherence with assigned license requirements.
 */

syntax = "proto3";
package elide.app;

option optimize_for = SPEED;
option cc_enable_arenas = true;
option java_multiple_files = true;
option java_string_check_utf8 = true;
option php_class_prefix = "ELD";
option swift_prefix = "Elide";
option objc_class_prefix = "ELD";
option java_package = "tools.elide.app";
option csharp_namespace = "Elide.App";
option go_package = "github.com/elide-tools/elide/app;app";

// Describes primary key information for an application region.
message RegionKey {
  // ID of the region.
  string id = 1;

  // Group/parent for this region.
  string group = 2;
}

// Enumerates condition flags which may be applied to a given region.
enum RegionFlag {
  // Specifies an unrecognized region state flag which is backwards-incompatible with this protocol.
  REGION_FLAG_UNRECOGNIZED = 0;
}

// Describes an application region, where deployments can take place.
message Region {
  // Unique key information for this region.
  RegionKey key = 1;

  // Short-name for this region; unique and immutable.
  string name = 2;

  // Display name for this region; mutable.
  string display_name = 3;

  // Whether this region is active for assignment.
  bool active = 4;

  // Whether capacity is available in this region.
  bool available = 5;

  // Provider associated with this region.
  string provider = 6;

  // Condition flags applied to this region.
  RegionFlag flag = 7;
}

// Specifies a reference to a known compute or hosting region.
message RegionReference {
  // Name of the region under reference.
  string name = 1;
}
