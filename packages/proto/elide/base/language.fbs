/*
 * Copyright Â© 2022, The Elide Framework Authors. All rights reserved.
 *
 * The Gust/Elide framework and tools, and all associated source or object computer code, except where otherwise noted,
 * are licensed under the Zero Prosperity license, which is enclosed in this repository, in the file LICENSE.txt. Use of
 * this code in object or source form requires and implies consent and agreement to that license in principle and
 * practice. Source or object code not listing this header, or unless specified otherwise, remain the property of
 * Elide LLC and its suppliers, if any. The intellectual and technical concepts contained herein are proprietary to
 * Elide LLC and its suppliers and may be covered by U.S. and Foreign Patents, or patents in process, and are protected
 * by trade secret and copyright law. Dissemination of this information, or reproduction of this material, in any form,
 * is strictly forbidden except in adherence with assigned license requirements.
 */

/**
 * Defines basic framework structures related to modelling human language. These structures are render-able by the Soy
 * templates stored alongside them, and are used for various things throughout the codebase.
 */
namespace elide.base;

// Specifies common/major languages present in software development or the open internet. This is not an exhaustive list
// and if you need to specify an entry that isn't present (without a code change), it is best to opt for the `iso_`-
// prefixed fields in `LanguageSpec`.
enum Language : int {
  // Generic, unqualified reference to English.
  ENGLISH = 0,

  // Generic, unqualified reference to French.
  FRENCH = 1,

  // Generic, unqualified reference to Spanish.
  SPANISH = 2,

  // Generic, unqualified reference to Chinese.
  CHINESE = 3,

  // Generic, unqualified reference to Korean.
  KOREAN = 4,

  // Generic, unqualified reference to Japanese.
  JAPANESE = 5,

  // Generic, unqualified reference to Arabic.
  ARABIC = 6,

  // Generic, unqualified reference to Hindi.
  HINDI = 7,

  // Generic, unqualified reference to Italian.
  ITALIAN = 8
}

// Specifies a given language, along with a nationality for that language.
table LanguageSpec {
  // Specifies a language either via the enumerated specifier, or the proper two-character ISO code for the language.
  selection: elide.base.LanguageSpec_.LanguageSelection;

  // Specifies an optional modifier for a given language `selection`.
  modifier: elide.base.LanguageSpec_.LanguageModifier;
}

namespace elide.base.LanguageSpec_;

// Specifies a language either via the enumerated specifier, or the proper two-character ISO code for the language.
table LanguageSelection {
  // Enumerated language specifier.
  language: elide.base.Language;

  // Two-character ISO-standard language specifier (for example: "EN" for English, "FR" for French). Casing doesn't
  // matter but upper-casing should be preferred for consistency.
  iso_language: string;
}

// Specifies an optional modifier for a given language `selection`.
table LanguageModifier {
  // Two-character ISO-standard country code, used as a modifier for a language spec (i.e. the `us` in `en-us`).
  iso_country:string;

  // Dialect to specify as part of this language spec, based on a simple two-character string.
  dialect:string;
}
