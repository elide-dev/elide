/*
 * Copyright Â© 2022, The Elide Framework Authors. All rights reserved.
 *
 * The Gust/Elide framework and tools, and all associated source or object computer code, except where otherwise noted,
 * are licensed under the Zero Prosperity license, which is enclosed in this repository, in the file LICENSE.txt. Use of
 * this code in object or source form requires and implies consent and agreement to that license in principle and
 * practice. Source or object code not listing this header, or unless specified otherwise, remain the property of
 * Elide LLC and its suppliers, if any. The intellectual and technical concepts contained herein are proprietary to
 * Elide LLC and its suppliers and may be covered by U.S. and Foreign Patents, or patents in process, and are protected
 * by trade secret and copyright law. Dissemination of this information, or reproduction of this material, in any form,
 * is strictly forbidden except in adherence with assigned license requirements.
 */

syntax = "proto3";
package elide.crypto;

import "elide/data/data.proto";
import "elide/data/encoding.proto";
import "elide/crypto/crypto.proto";

option optimize_for = SPEED;
option cc_enable_arenas = true;
option java_multiple_files = true;
option java_string_check_utf8 = true;
option php_class_prefix = "ELD";
option swift_prefix = "Elide";
option objc_class_prefix = "ELD";
option java_package = "tools.elide.crypto";
option csharp_namespace = "Elide.Crypto";
option go_package = "github.com/elide-tools/elide/crypto;crypto";

// Specifies a preamble which describes encrypted data; optionally, a portion of this pre-amble may, itself, be
// encrypted, and which specifies secured metadata about the enclosed or anticipated ciphertext.
message SymmetricPreamble {
  // Cipher algorithm information.
  CipherInfo cipher = 1;

  // Fingerprints of the ciphertext.
  repeated elide.data.DataFingerprint integrity = 2;

  // Encrypted header information for this value.
  elide.data.DataContainer metadata = 3;
}

// Encrypted portion of a secure preamble.
message EncryptedPreamble {
  // Encoding in use for the encrypted data.
  elide.data.Encoding encoding = 1;

  // Compression mode applied to the data, as applicable.
  elide.data.CompressionMode compression = 5;

  // Fingerprints of the plaintext data.
  repeated elide.data.DataFingerprint integrity = 6;
}
