/*
 * Copyright Â© 2022, The Elide Framework Authors. All rights reserved.
 *
 * The Gust/Elide framework and tools, and all associated source or object computer code, except where otherwise noted,
 * are licensed under the Zero Prosperity license, which is enclosed in this repository, in the file LICENSE.txt. Use of
 * this code in object or source form requires and implies consent and agreement to that license in principle and
 * practice. Source or object code not listing this header, or unless specified otherwise, remain the property of
 * Elide LLC and its suppliers, if any. The intellectual and technical concepts contained herein are proprietary to
 * Elide LLC and its suppliers and may be covered by U.S. and Foreign Patents, or patents in process, and are protected
 * by trade secret and copyright law. Dissemination of this information, or reproduction of this material, in any form,
 * is strictly forbidden except in adherence with assigned license requirements.
 */

syntax = "proto3";
package elide.machine;

import "elide/machine/arch.proto";

option optimize_for = SPEED;
option cc_enable_arenas = true;
option java_multiple_files = true;
option java_string_check_utf8 = true;
option php_class_prefix = "ELDM";
option swift_prefix = "ElideMachine";
option objc_class_prefix = "ELDM";
option java_package = "tools.elide.machine";
option csharp_namespace = "Elide.Machine";
option go_package = "github.com/elide-tools/elide/machine";

// Describes information about a single CPU.
message CpuInfo {
  // Index or ID of this CPU.
  uint32 id = 1;

  // CPU vendor name.
  string vendor = 2;

  // CPU model name.
  string model = 3;

  // CPU family name.
  string family = 4;

  // CPU micro-architecture name.
  string micro = 5;

  // CPU frequency, in MHz.
  uint32 frequency = 6;

  // CPU architecture information.
  ArchitectureInfo architecture = 7;
}

// Describes information about the CPUs available for a given machine.
message MachineCpuInfo {
  // Count of CPUs on this machine.
  uint32 count = 1;

  // Count of cores supported per CPU on this machine.
  uint32 cores = 2;

  // Information about each CPU on this machine.
  repeated CpuInfo cpu = 3;
}
