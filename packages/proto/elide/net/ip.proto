/*
 * Copyright Â© 2022, The Elide Framework Authors. All rights reserved.
 *
 * The Gust/Elide framework and tools, and all associated source or object computer code, except where otherwise noted,
 * are licensed under the Zero Prosperity license, which is enclosed in this repository, in the file LICENSE.txt. Use of
 * this code in object or source form requires and implies consent and agreement to that license in principle and
 * practice. Source or object code not listing this header, or unless specified otherwise, remain the property of
 * Elide LLC and its suppliers, if any. The intellectual and technical concepts contained herein are proprietary to
 * Elide LLC and its suppliers and may be covered by U.S. and Foreign Patents, or patents in process, and are protected
 * by trade secret and copyright law. Dissemination of this information, or reproduction of this material, in any form,
 * is strictly forbidden except in adherence with assigned license requirements.
 */

syntax = "proto3";
package elide.net;

option optimize_for = SPEED;
option cc_enable_arenas = true;
option java_multiple_files = true;
option java_string_check_utf8 = true;
option php_class_prefix = "ELDN";
option swift_prefix = "ElideNet";
option objc_class_prefix = "ELDN";
option java_package = "tools.elide.net";
option csharp_namespace = "Elide.Net";
option go_package = "github.com/elide-tools/elide/net";

// Enumerates known IP protocol versions.
enum IpProtocolVersion {
  // Default IP protocol version.
  IP_PROTOCOL_VERSION_DEFAULT = 0;

  // IPv4 protocol version.
  IPV4 = 1;

  // IPv6 protocol version.
  IPV6 = 2;
}

// Describes visibility for a requested or assigned IP address.
enum IpVisibility {
  // Default IP visibility.
  IP_VISIBILITY_DEFAULT = 0;

  // Public IP address.
  PUBLIC = 1;

  // Private IP address.
  PRIVATE = 2;
}

// Describes an IP address in generic terms.
message IpAddress {
  // IP protocol version.
  IpProtocolVersion version = 1;

  // Describes the visibility mode for this IP address.
  IpVisibility visibility = 2;

  // IP address.
  string address = 3;

  // Whether this address is dynamically assigned; use semantics for this field depend on the implementing service.
  bool dynamic = 4;
}
