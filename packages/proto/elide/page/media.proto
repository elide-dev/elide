/*
 * Copyright Â© 2022, The Elide Framework Authors. All rights reserved.
 *
 * The Gust/Elide framework and tools, and all associated source or object computer code, except where otherwise noted,
 * are licensed under the Zero Prosperity license, which is enclosed in this repository, in the file LICENSE.txt. Use of
 * this code in object or source form requires and implies consent and agreement to that license in principle and
 * practice. Source or object code not listing this header, or unless specified otherwise, remain the property of
 * Elide LLC and its suppliers, if any. The intellectual and technical concepts contained herein are proprietary to
 * Elide LLC and its suppliers and may be covered by U.S. and Foreign Patents, or patents in process, and are protected
 * by trade secret and copyright law. Dissemination of this information, or reproduction of this material, in any form,
 * is strictly forbidden except in adherence with assigned license requirements.
 */

/**
 * Structures that express and define page media assets, such as videos and images. Used by regular page context and
 * also semantic metadata context.
 */
syntax = "proto3";
package elide.page;

option optimize_for = SPEED;
option cc_enable_arenas = true;
option java_multiple_files = true;
option java_string_check_utf8 = true;
option java_outer_classname = "WebMedia";
option php_class_prefix = "ELD";
option swift_prefix = "Elide";
option objc_class_prefix = "ELD";
option java_package = "tools.elide.page";
option csharp_namespace = "Elide.Page";
option go_package = "github.com/elide-tools/elide/page";


// Enumerates known or supported video asset providers.
enum VideoProvider {
  // Private hosting for a given video asset.
  PRIVATE = 0;

  // YouTube hosting for a given video asset.
  YOUTUBE = 1;

  // Vimeo hosting for a given video asset.
  VIMEO = 2;
}


// Defines broad types of media that may be expressed.
enum MediaType {
  // This media is an image asset of some kind.
  IMAGE = 0;

  // This media is a video asset of some kind.
  VIDEO = 1;

  // This media is an audio asset of some kind.
  AUDIO = 2;

  // The media is a link to another asset or page of some kind.
  LINK = 3;

  // The media is an arbitrary kind of digital document.
  DOCUMENT = 4;
}


// Describes resolutions at which video assets may be made available.
enum VideoResolution {
  // The video is available in low-res form.
  LOW = 0;

  // The video is available in HD (720p/720i-1080p/1080i) form.
  HD = 1;

  // The video is available in 4K Ultra HD (UHD).
  UHD = 2;
}


// Defines the structure of attached content media, which is intended for emission in a given web page
// via some sort of render process, depending on the context in which this media is used.
message MediaAsset {
  // Describes concrete information about a media link, attached to some web page or data point.
  message Link {
    // URI to consider for an attached media link.
    string uri = 1;

    // Alternative text to display for this link, if applicable.
    string alt = 2;
  }

  // Describes concrete information about an image asset, attached to some web page or data point.
  message Image {
    // Describes information about an individual image asset, which is part of an attached image.
    message ImageAsset {
      // Specifies the intended resolution of this image asset.
      float resolution = 1;

      // Specifies the kind of image attached as this asset.
      string mime = 2;

      // Specifies the native width of this image asset.
      uint64 width = 3;

      // Specifies the native height of this image asset.
      uint64 height = 4;

      // Specifies the content, or content by reference, for this image.
      oneof content {
        // Raw Base64 content to be embedded directly in an image tag.
        string b64 = 10;

        // URI to be used in reference to this image asset.
        string uri = 20;
      }
    }

    // Concrete information regarding this image asset.
    repeated ImageAsset asset = 1;
  }

  // Describes concrete information about a video asset, attached to some web page or data point.
  message Video {
    // Describes information about an individual video asset, which is part of an attached video.
    message VideoAsset {
      // Resolutions at which a video might be available.
      VideoResolution resolution = 1;

      // Image asset to be used as a thumbnail for this video asset.
      Image thumb = 2;

      // URI where the video may be streamed or accessed.
      string uri = 3;
    }

    // Describes where the video may be streamed from, or accessed.
    VideoProvider provider = 1;

    // Title to display for this video asset.
    string title = 2;

    // Description for this video asset.
    string description = 3;

    // Duration of the video asset, in milliseconds.
    uint64 run_time = 4;

    // Describes the assets that back this video media.
    repeated VideoAsset asset = 5;
  }

  // Specifies information about a digital document of some kind, that is being referenced as an asset.
  message Document {
    // Enumerates common types of digital documents.
    enum DocumentType {
      // Default: generic document type.
      GENERIC_DOCUMENT = 0;

      // Plain text document.
      TEXT_PLAIN = 1;

      // Rich text document.
      TEXT_RICH = 2;

      // Markdown-formatted document.
      TEXT_MARKDOWN = 3;

      // HTML-formatted document.
      TEXT_HTML = 4;

      // Comma Separated Values in text format.
      TEXT_CSV = 5;

      // Portable Document Format.
      PDF = 6;

      // Word (old format, extension `.doc`).
      WORD_DOC = 7;

      // Word (new format, extension `.docx`).
      WORD_DOCX = 8;
    }

    // Specifies the type of document.
    DocumentType type = 1;
  }

  // Describes, in broad terms, the kind of media being attached.
  MediaType kind = 1;

  // Specifies concrete information about the attached media asset.
  oneof media {
    // Describes concrete information about an attached media link.
    Link link = 10;

    // Describes concrete information about an attached image.
    Image image = 20;

    // Describes concrete information about an attached video.
    Video video = 30;
  }
}
