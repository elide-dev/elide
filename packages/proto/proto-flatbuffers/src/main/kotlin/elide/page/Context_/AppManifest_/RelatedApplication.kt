// automatically generated by the FlatBuffers compiler, do not modify

package elide.page.Context_.AppManifest_

import com.google.flatbuffers.Constants
import com.google.flatbuffers.FlatBufferBuilder
import com.google.flatbuffers.Table
import java.nio.ByteBuffer
import java.nio.ByteOrder

@Suppress("unused")
class RelatedApplication : Table() {

    fun __init(_i: Int, _bb: ByteBuffer)  {
        __reset(_i, _bb)
    }
    fun __assign(_i: Int, _bb: ByteBuffer) : RelatedApplication {
        __init(_i, _bb)
        return this
    }
    val id : String?
        get() {
            val o = __offset(4)
            return if (o != 0) __string(o + bb_pos) else null
        }
    val idAsByteBuffer : ByteBuffer get() = __vector_as_bytebuffer(4, 1)
    fun idInByteBuffer(_bb: ByteBuffer) : ByteBuffer = __vector_in_bytebuffer(_bb, 4, 1)
    val platform : Int
        get() {
            val o = __offset(6)
            return if(o != 0) bb.getInt(o + bb_pos) else 0
        }
    val uri : webutil.html.types.TrustedResourceUrlProto? get() = uri(webutil.html.types.TrustedResourceUrlProto())
    fun uri(obj: webutil.html.types.TrustedResourceUrlProto) : webutil.html.types.TrustedResourceUrlProto? {
        val o = __offset(8)
        return if (o != 0) {
            obj.__assign(__indirect(o + bb_pos), bb)
        } else {
            null
        }
    }
    companion object {
        fun validateVersion() = Constants.FLATBUFFERS_22_12_06()
        fun getRootAsRelatedApplication(_bb: ByteBuffer): RelatedApplication = getRootAsRelatedApplication(_bb, RelatedApplication())
        fun getRootAsRelatedApplication(_bb: ByteBuffer, obj: RelatedApplication): RelatedApplication {
            _bb.order(ByteOrder.LITTLE_ENDIAN)
            return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb))
        }
        fun createRelatedApplication(builder: FlatBufferBuilder, idOffset: Int, platform: Int, uriOffset: Int) : Int {
            builder.startTable(3)
            addUri(builder, uriOffset)
            addPlatform(builder, platform)
            addId(builder, idOffset)
            return endRelatedApplication(builder)
        }
        fun startRelatedApplication(builder: FlatBufferBuilder) = builder.startTable(3)
        fun addId(builder: FlatBufferBuilder, id: Int) = builder.addOffset(0, id, 0)
        fun addPlatform(builder: FlatBufferBuilder, platform: Int) = builder.addInt(1, platform, 0)
        fun addUri(builder: FlatBufferBuilder, uri: Int) = builder.addOffset(2, uri, 0)
        fun endRelatedApplication(builder: FlatBufferBuilder) : Int {
            val o = builder.endTable()
            return o
        }
    }
}
