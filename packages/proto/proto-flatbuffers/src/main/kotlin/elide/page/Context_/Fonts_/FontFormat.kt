/*
 * Copyright (c) 2024 Elide Technologies, Inc.
 *
 * Licensed under the MIT license (the "License"); you may not use this file except in compliance
 * with the License. You may obtain a copy of the License at
 *
 *   https://opensource.org/license/mit/
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
 * an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations under the License.
 */

// automatically generated by the FlatBuffers compiler, do not modify

package elide.page.Context_.Fonts_

@Suppress("unused")
class FontFormat private constructor() {
    companion object {
        const val UNSPECIFIEDFORMAT: Int = 0
        const val OPENTYPE: Int = 1
        const val TRUETYPE: Int = 2
        const val VECTOR: Int = 3
        const val WEBFONT: Int = 4
        const val WEBFONT2: Int = 5
        const val EMBEDDEDOPENTYPE: Int = 6
        val names : Array<String> = arrayOf("UNSPECIFIED_FORMAT", "OPENTYPE", "TRUETYPE", "VECTOR", "WEBFONT", "WEBFONT2", "EMBEDDED_OPENTYPE")
        fun name(e: Int) : String = names[e]
    }
}
