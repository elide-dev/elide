public final synthetic class elide/rpc/server/$GrpcConfigurator$Definition$Reference : io/micronaut/context/AbstractInitializableBeanDefinitionReference {
	public static final field $ANNOTATION_METADATA Lio/micronaut/core/annotation/AnnotationMetadata;
	public fun <init> ()V
	public fun getBeanDefinitionType ()Ljava/lang/Class;
	public fun getBeanType ()Ljava/lang/Class;
	public fun load ()Lio/micronaut/inject/BeanDefinition;
}

public final synthetic class elide/rpc/server/$RpcRuntime$Definition$Reference : io/micronaut/context/AbstractInitializableBeanDefinitionReference {
	public static final field $ANNOTATION_METADATA Lio/micronaut/core/annotation/AnnotationMetadata;
	public fun <init> ()V
	public fun getBeanDefinitionType ()Ljava/lang/Class;
	public fun getBeanType ()Ljava/lang/Class;
	public fun load ()Lio/micronaut/inject/BeanDefinition;
}

public final synthetic class elide/rpc/server/$ServiceHealthManager$Definition$Reference : io/micronaut/context/AbstractInitializableBeanDefinitionReference {
	public static final field $ANNOTATION_METADATA Lio/micronaut/core/annotation/AnnotationMetadata;
	public fun <init> ()V
	public fun getBeanDefinitionType ()Ljava/lang/Class;
	public fun getBeanType ()Ljava/lang/Class;
	public fun load ()Lio/micronaut/inject/BeanDefinition;
}

public final class elide/rpc/server/ServiceHealthManager {
	public fun <init> ()V
	public final fun currentStatus (Lio/grpc/ServiceDescriptor;)Lio/grpc/health/v1/HealthCheckResponse$ServingStatus;
	public final fun currentStatus (Ljava/lang/String;)Lio/grpc/health/v1/HealthCheckResponse$ServingStatus;
	public final fun getService ()Lio/grpc/BindableService;
	public final fun notify (Ljava/lang/String;Lio/grpc/health/v1/HealthCheckResponse$ServingStatus;)V
	public final fun notifyNotServing (Lio/grpc/ServiceDescriptor;)V
	public final fun notifyPending (Lio/grpc/ServiceDescriptor;)V
	public final fun notifyServing (Lio/grpc/ServiceDescriptor;)V
	public final fun notifyUnknown (Lio/grpc/ServiceDescriptor;)V
	public final fun terminalShutdown ()V
}

public final synthetic class elide/rpc/server/web/$GrpcWebConfig$Intercepted$Definition$Reference : io/micronaut/context/AbstractInitializableBeanDefinitionReference, io/micronaut/inject/AdvisedBeanType {
	public static final field $ANNOTATION_METADATA Lio/micronaut/core/annotation/AnnotationMetadata;
	public fun <init> ()V
	public fun getBeanDefinitionType ()Ljava/lang/Class;
	public fun getBeanType ()Ljava/lang/Class;
	public fun getInterceptedType ()Ljava/lang/Class;
	public fun load ()Lio/micronaut/inject/BeanDefinition;
}

public final synthetic class elide/rpc/server/web/$GrpcWebController$Definition$Reference : io/micronaut/context/AbstractInitializableBeanDefinitionReference {
	public static final field $ANNOTATION_METADATA Lio/micronaut/core/annotation/AnnotationMetadata;
	public fun <init> ()V
	public fun getBeanDefinitionType ()Ljava/lang/Class;
	public fun getBeanType ()Ljava/lang/Class;
	public fun load ()Lio/micronaut/inject/BeanDefinition;
}

public final synthetic class elide/rpc/server/web/$GrpcWebServiceRelay$Definition$Reference : io/micronaut/context/AbstractInitializableBeanDefinitionReference {
	public static final field $ANNOTATION_METADATA Lio/micronaut/core/annotation/AnnotationMetadata;
	public fun <init> ()V
	public fun getBeanDefinitionType ()Ljava/lang/Class;
	public fun getBeanType ()Ljava/lang/Class;
	public fun load ()Lio/micronaut/inject/BeanDefinition;
}

public final class elide/rpc/server/web/GrpcWeb {
	public static final field BINARY_HEADER_SUFFIX Ljava/lang/String;
	public static final field GRPC_HEADER_PREFIX Ljava/lang/String;
	public static final field INSTANCE Lelide/rpc/server/web/GrpcWeb;
}

public final class elide/rpc/server/web/GrpcWeb$Headers {
	public static final field INSTANCE Lelide/rpc/server/web/GrpcWeb$Headers;
	public static final field errorMessage Ljava/lang/String;
	public static final field sentinel Ljava/lang/String;
	public static final field status Ljava/lang/String;
}

public final class elide/rpc/server/web/GrpcWeb$Metadata {
	public static final field INSTANCE Lelide/rpc/server/web/GrpcWeb$Metadata;
	public final fun getApiKey ()Lio/grpc/Metadata$Key;
	public final fun getAuthorization ()Lio/grpc/Metadata$Key;
	public final fun getInternalCall ()Lio/grpc/Metadata$Key;
	public final fun getTrace ()Lio/grpc/Metadata$Key;
}

public abstract class elide/rpc/server/web/GrpcWebCallResponse {
	public synthetic fun <init> (ZLkotlin/jvm/internal/DefaultConstructorMarker;)V
	public abstract fun fill (Lio/micronaut/http/MutableHttpResponse;)V
	public final fun getSuccess ()Z
}

public final class elide/rpc/server/web/GrpcWebCallResponse$Error : elide/rpc/server/web/GrpcWebCallResponse {
	public fun <init> (Lelide/rpc/server/web/GrpcWebContentType;Lio/grpc/Status;Ljava/lang/Throwable;Lio/grpc/Metadata;Lio/grpc/Metadata;)V
	public final fun component1 ()Lelide/rpc/server/web/GrpcWebContentType;
	public final fun component2 ()Lio/grpc/Status;
	public final fun component3 ()Ljava/lang/Throwable;
	public final fun component4 ()Lio/grpc/Metadata;
	public final fun component5 ()Lio/grpc/Metadata;
	public final fun copy (Lelide/rpc/server/web/GrpcWebContentType;Lio/grpc/Status;Ljava/lang/Throwable;Lio/grpc/Metadata;Lio/grpc/Metadata;)Lelide/rpc/server/web/GrpcWebCallResponse$Error;
	public static synthetic fun copy$default (Lelide/rpc/server/web/GrpcWebCallResponse$Error;Lelide/rpc/server/web/GrpcWebContentType;Lio/grpc/Status;Ljava/lang/Throwable;Lio/grpc/Metadata;Lio/grpc/Metadata;ILjava/lang/Object;)Lelide/rpc/server/web/GrpcWebCallResponse$Error;
	public fun equals (Ljava/lang/Object;)Z
	public fun fill (Lio/micronaut/http/MutableHttpResponse;)V
	public final fun getCause ()Ljava/lang/Throwable;
	public final fun getContentType ()Lelide/rpc/server/web/GrpcWebContentType;
	public final fun getHeaders ()Lio/grpc/Metadata;
	public final fun getStatus ()Lio/grpc/Status;
	public final fun getTrailers ()Lio/grpc/Metadata;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class elide/rpc/server/web/GrpcWebCallResponse$UnaryResponse : elide/rpc/server/web/GrpcWebCallResponse {
	public fun <init> (Lelide/rpc/server/web/GrpcWebContentType;[BLio/grpc/Metadata;Lio/grpc/Metadata;)V
	public final fun component1 ()Lelide/rpc/server/web/GrpcWebContentType;
	public final fun component2 ()[B
	public final fun component3 ()Lio/grpc/Metadata;
	public final fun component4 ()Lio/grpc/Metadata;
	public final fun copy (Lelide/rpc/server/web/GrpcWebContentType;[BLio/grpc/Metadata;Lio/grpc/Metadata;)Lelide/rpc/server/web/GrpcWebCallResponse$UnaryResponse;
	public static synthetic fun copy$default (Lelide/rpc/server/web/GrpcWebCallResponse$UnaryResponse;Lelide/rpc/server/web/GrpcWebContentType;[BLio/grpc/Metadata;Lio/grpc/Metadata;ILjava/lang/Object;)Lelide/rpc/server/web/GrpcWebCallResponse$UnaryResponse;
	public fun equals (Ljava/lang/Object;)Z
	public fun fill (Lio/micronaut/http/MutableHttpResponse;)V
	public final fun getContentType ()Lelide/rpc/server/web/GrpcWebContentType;
	public final fun getHeaders ()Lio/grpc/Metadata;
	public final fun getPayload ()[B
	public final fun getTrailers ()Lio/grpc/Metadata;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract interface class elide/rpc/server/web/GrpcWebConfig : io/micronaut/core/util/Toggleable {
	public static final field Companion Lelide/rpc/server/web/GrpcWebConfig$Companion;
	public static final field DEFAULT_ENABLED Z
	public static final field DEFAULT_TIMEOUT_SECONDS J
	public static final field defaultEndpoint Ljava/lang/String;
	public abstract fun getEndpoint ()Ljava/lang/String;
	public abstract fun getTimeout ()Ljava/time/Duration;
	public abstract fun isEnabled ()Z
}

public final class elide/rpc/server/web/GrpcWebConfig$Companion {
	public static final field DEFAULT_ENABLED Z
	public static final field DEFAULT_TIMEOUT_SECONDS J
	public static final field defaultEndpoint Ljava/lang/String;
	public final fun getDEFAULTS ()Lelide/rpc/server/web/GrpcWebConfig;
}

public final class elide/rpc/server/web/GrpcWebConfig$DefaultImpls {
	public static fun getEndpoint (Lelide/rpc/server/web/GrpcWebConfig;)Ljava/lang/String;
	public static fun getTimeout (Lelide/rpc/server/web/GrpcWebConfig;)Ljava/time/Duration;
	public static fun isEnabled (Lelide/rpc/server/web/GrpcWebConfig;)Z
}

public final class elide/rpc/server/web/GrpcWebContentType : java/lang/Enum {
	public static final field BINARY Lelide/rpc/server/web/GrpcWebContentType;
	public static final field Companion Lelide/rpc/server/web/GrpcWebContentType$Companion;
	public static final field TEXT Lelide/rpc/server/web/GrpcWebContentType;
	public final fun contentType (Z)Ljava/lang/String;
	public static synthetic fun contentType$default (Lelide/rpc/server/web/GrpcWebContentType;ZILjava/lang/Object;)Ljava/lang/String;
	public static final fun getAllValidContentTypes$rpc ()[Ljava/lang/String;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public final fun mediaType (Z)Lio/micronaut/http/MediaType;
	public static synthetic fun mediaType$default (Lelide/rpc/server/web/GrpcWebContentType;ZILjava/lang/Object;)Lio/micronaut/http/MediaType;
	public static final fun resolve$rpc (Lio/micronaut/http/MediaType;)Lelide/rpc/server/web/GrpcWebContentType;
	public static fun valueOf (Ljava/lang/String;)Lelide/rpc/server/web/GrpcWebContentType;
	public static fun values ()[Lelide/rpc/server/web/GrpcWebContentType;
}

public final class elide/rpc/server/web/GrpcWebContentType$Companion {
}

public final class elide/rpc/server/web/GrpcWebController : elide/server/controller/StatusEnabledController {
	public fun <init> ()V
	public final fun handleRequest (Ljava/lang/String;Ljava/lang/String;Lio/micronaut/http/HttpRequest;Ljava/security/Principal;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class elide/rpc/server/web/GrpcWebTransport {
	public abstract fun channel ()Lio/grpc/ManagedChannel;
}

public abstract interface class elide/rpc/server/web/MessageDeserializer {
	public abstract fun deserialize (Ljava/lang/reflect/Method;[B)Lcom/google/protobuf/Message;
}

public final class elide/rpc/server/web/MetadataUtil {
	public static final field INSTANCE Lelide/rpc/server/web/MetadataUtil;
	public static final fun fillHeadersFromMetadata (Lio/grpc/Metadata;Lio/micronaut/core/type/MutableHeaders;)V
	public static final fun metadataFromHeaders (Lio/micronaut/core/type/Headers;)Lio/grpc/Metadata;
	public static final fun packTrailer (Ljava/io/ByteArrayOutputStream;Ljava/lang/String;[B)V
	public static final fun packTrailers (Ljava/io/ByteArrayOutputStream;Lio/grpc/Metadata;)V
}

public final class elide/rpc/server/web/RpcSymbol : java/lang/Enum {
	public static final field DATA Lelide/rpc/server/web/RpcSymbol;
	public static final field TRAILER Lelide/rpc/server/web/RpcSymbol;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public final fun getValue ()B
	public static fun valueOf (Ljava/lang/String;)Lelide/rpc/server/web/RpcSymbol;
	public static fun values ()[Lelide/rpc/server/web/RpcSymbol;
}

