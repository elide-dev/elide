public synthetic class elide/server/$Application$AppStartupListener$Definition : io/micronaut/context/AbstractInitializableBeanDefinitionAndReference {
	public static final field $ANNOTATION_METADATA Lio/micronaut/core/annotation/AnnotationMetadata;
	public fun <init> ()V
	protected fun <init> (Ljava/lang/Class;Lio/micronaut/context/AbstractInitializableBeanDefinition$MethodOrFieldReference;)V
	public fun instantiate (Lio/micronaut/context/BeanResolutionContext;Lio/micronaut/context/BeanContext;)Ljava/lang/Object;
	public fun isEnabled (Lio/micronaut/context/BeanContext;)Z
	public fun isEnabled (Lio/micronaut/context/BeanContext;Lio/micronaut/context/BeanResolutionContext;)Z
	public fun load ()Lio/micronaut/inject/BeanDefinition;
}

public abstract interface class elide/server/Application {
	public fun boot ([Ljava/lang/String;)V
}

public final class elide/server/Application$AppStartupListener : io/micronaut/context/event/ApplicationEventListener {
	public fun <init> ()V
	public fun onApplicationEvent (Lio/micronaut/runtime/server/event/ServerStartupEvent;)V
	public synthetic fun onApplicationEvent (Ljava/lang/Object;)V
}

public final class elide/server/Application$Initialization {
	public static final field INSTANCE Lelide/server/Application$Initialization;
	public final fun initializeOnWarmup (Lkotlin/jvm/functions/Function1;)V
	public final fun initializeWithServer (Lkotlin/jvm/functions/Function1;)V
}

public abstract class elide/server/BaseResponseHandler : elide/server/ResponseHandler {
	public fun <init> ()V
	public fun respond (Lio/micronaut/http/MutableHttpResponse;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class elide/server/HtmlRenderer : elide/server/SuspensionRenderer {
	public fun <init> (ZLelide/server/controller/PageController;Lkotlin/jvm/functions/Function2;)V
	public synthetic fun <init> (ZLelide/server/controller/PageController;Lkotlin/jvm/functions/Function2;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun render (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class elide/server/PageExtensionsKt {
	public static final fun script (Lkotlinx/html/BODY;Ljava/lang/String;ZZLjava/lang/String;Ljava/util/Map;)V
	public static final fun script (Lkotlinx/html/HEAD;Ljava/lang/String;ZZLjava/lang/String;Ljava/util/Map;)V
	public static synthetic fun script$default (Lkotlinx/html/BODY;Ljava/lang/String;ZZLjava/lang/String;Ljava/util/Map;ILjava/lang/Object;)V
	public static synthetic fun script$default (Lkotlinx/html/HEAD;Ljava/lang/String;ZZLjava/lang/String;Ljava/util/Map;ILjava/lang/Object;)V
	public static final fun stylesheet (Lkotlinx/html/HEAD;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V
	public static synthetic fun stylesheet$default (Lkotlinx/html/HEAD;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;ILjava/lang/Object;)V
}

public final class elide/server/ResponseExtensionsKt {
	public static final fun html (Lelide/server/controller/PageController;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun htmlSuspend (Lkotlinx/html/TagConsumer;Ljava/lang/String;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun htmlSuspend$default (Lkotlinx/html/TagConsumer;Ljava/lang/String;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static final fun staticFile (Ljava/lang/String;Ljava/lang/String;)Lio/micronaut/http/HttpResponse;
	public static final fun visitAndFinalizeSuspend (Lkotlinx/html/Tag;Lkotlinx/html/TagConsumer;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class elide/server/ResponseHandler {
	public abstract fun respond (Lio/micronaut/http/MutableHttpResponse;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class elide/server/SSRExtensionsKt {
	public static final field DEFAULT_SSR_DOM_ID Ljava/lang/String;
	public static final field EMBEDDED_ROOT Ljava/lang/String;
	public static final fun getDEFAULT_INVOCATION_BASE ()Ljava/lang/String;
	public static final fun injectSSR (Lkotlinx/html/BODY;Lelide/server/controller/ElideController;Lio/micronaut/http/HttpRequest;Ljava/lang/String;Ljava/util/Set;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun injectSSR$default (Lkotlinx/html/BODY;Lelide/server/controller/ElideController;Lio/micronaut/http/HttpRequest;Ljava/lang/String;Ljava/util/Set;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static final fun ssr (Lio/micronaut/http/HttpRequest;Ljava/lang/String;Lio/micronaut/http/MutableHttpResponse;ZLkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun ssr$default (Lio/micronaut/http/HttpRequest;Ljava/lang/String;Lio/micronaut/http/MutableHttpResponse;ZLkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static final fun streamSSR (Lkotlinx/html/BODY;Lelide/server/controller/ElideController;Lio/micronaut/http/HttpRequest;Ljava/lang/String;Ljava/util/Set;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun streamSSR$default (Lkotlinx/html/BODY;Lelide/server/controller/ElideController;Lio/micronaut/http/HttpRequest;Ljava/lang/String;Ljava/util/Set;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
}

public abstract interface class elide/server/ServerInitializer {
	public fun initialize ()V
}

public abstract interface class elide/server/StreamingSuspensionRenderer {
	public abstract fun render (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class elide/server/SuspensionRenderer {
	public abstract fun render (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface annotation class elide/server/annotations/Page : java/lang/annotation/Annotation {
	public abstract fun consumes ()[Ljava/lang/String;
	public abstract fun name ()Ljava/lang/String;
	public abstract fun precompile ()Z
	public abstract fun produces ()[Ljava/lang/String;
	public abstract fun route ()Ljava/lang/String;
}

public synthetic class elide/server/cfg/$AssetConfig$Intercepted$Definition : io/micronaut/context/AbstractInitializableBeanDefinitionAndReference, io/micronaut/inject/AdvisedBeanType {
	public static final field $ANNOTATION_METADATA Lio/micronaut/core/annotation/AnnotationMetadata;
	public fun <init> ()V
	protected fun <init> (Ljava/lang/Class;Lio/micronaut/context/AbstractInitializableBeanDefinition$MethodOrFieldReference;)V
	public fun getInterceptedType ()Ljava/lang/Class;
	public fun instantiate (Lio/micronaut/context/BeanResolutionContext;Lio/micronaut/context/BeanContext;)Ljava/lang/Object;
	public fun isEnabled (Lio/micronaut/context/BeanContext;)Z
	public fun isEnabled (Lio/micronaut/context/BeanContext;Lio/micronaut/context/BeanResolutionContext;)Z
	public fun load ()Lio/micronaut/inject/BeanDefinition;
}

public synthetic class elide/server/cfg/$ServerConfig$Definition : io/micronaut/context/AbstractInitializableBeanDefinitionAndReference {
	public static final field $ANNOTATION_METADATA Lio/micronaut/core/annotation/AnnotationMetadata;
	public fun <init> ()V
	protected fun <init> (Ljava/lang/Class;Lio/micronaut/context/AbstractInitializableBeanDefinition$MethodOrFieldReference;)V
	public fun inject (Lio/micronaut/context/BeanResolutionContext;Lio/micronaut/context/BeanContext;Ljava/lang/Object;)Ljava/lang/Object;
	public fun instantiate (Lio/micronaut/context/BeanResolutionContext;Lio/micronaut/context/BeanContext;)Ljava/lang/Object;
	public fun isEnabled (Lio/micronaut/context/BeanContext;)Z
	public fun isEnabled (Lio/micronaut/context/BeanContext;Lio/micronaut/context/BeanResolutionContext;)Z
	public fun load ()Lio/micronaut/inject/BeanDefinition;
}

public abstract interface class elide/server/cfg/AssetConfig : io/micronaut/core/util/Toggleable {
	public static final field Companion Lelide/server/cfg/AssetConfig$Companion;
	public static final field DEFAULT_ASSET_PREFIX Ljava/lang/String;
	public static final field DEFAULT_ENABLE_ETAGS Z
	public static final field DEFAULT_PREFER_WEAK_ETAGS Z
	public static final field DEFAULT_REWRITING_ENABLED Z
	public fun getEtags ()Ljava/lang/Boolean;
	public fun getHashLinks ()Ljava/lang/Boolean;
	public fun getPreferWeakEtags ()Ljava/lang/Boolean;
	public fun getPrefix ()Ljava/lang/String;
	public fun getRewriting ()Ljava/lang/Boolean;
}

public final class elide/server/cfg/AssetConfig$Companion {
	public static final field DEFAULT_ASSET_PREFIX Ljava/lang/String;
	public static final field DEFAULT_ENABLE_ETAGS Z
	public static final field DEFAULT_PREFER_WEAK_ETAGS Z
	public static final field DEFAULT_REWRITING_ENABLED Z
}

public final class elide/server/cfg/ServerConfig {
	public fun <init> ()V
	public fun <init> (Lelide/server/cfg/AssetConfig;)V
	public synthetic fun <init> (Lelide/server/cfg/AssetConfig;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Lelide/server/cfg/AssetConfig;
	public final fun copy (Lelide/server/cfg/AssetConfig;)Lelide/server/cfg/ServerConfig;
	public static synthetic fun copy$default (Lelide/server/cfg/ServerConfig;Lelide/server/cfg/AssetConfig;ILjava/lang/Object;)Lelide/server/cfg/ServerConfig;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getAssets ()Lelide/server/cfg/AssetConfig;
	public fun hashCode ()I
	public final fun setAssets (Lelide/server/cfg/AssetConfig;)V
	public fun toString ()Ljava/lang/String;
}

public final class elide/server/cfg/ServerConfigurator : io/micronaut/context/ApplicationContextConfigurer {
	public static final field Companion Lelide/server/cfg/ServerConfigurator$Companion;
	public fun <init> ()V
	public fun configure (Lio/micronaut/context/ApplicationContextBuilder;)V
}

public final class elide/server/cfg/ServerConfigurator$Companion {
	public final fun getBannedConfig ()Ljava/util/SortedSet;
	public final fun getBaseMap ()Ljava/util/SortedMap;
	public final fun getCipherSuites ()Ljava/util/List;
	public final fun getDefaultAccessLogExclusions ()Ljava/util/SortedSet;
	public final fun getLabsMap ()Ljava/util/SortedMap;
	public final fun getNonTestMap ()Ljava/util/SortedMap;
	public final fun getSystemProps ()Ljava/util/SortedMap;
}

public abstract class elide/server/controller/BaseController : elide/server/controller/ElideController {
	public fun <init> ()V
}

public abstract interface class elide/server/controller/ElideController {
	public abstract fun context ()Lio/micronaut/context/ApplicationContext;
}

public abstract class elide/server/controller/PageController : elide/server/controller/BaseController {
	public fun <init> ()V
	public fun context ()Lio/micronaut/context/ApplicationContext;
	protected final fun html (Lio/micronaut/http/HttpRequest;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class elide/server/controller/PageController$ServerRenderAgent {
	public fun <init> (Lkotlinx/html/HTML;Lelide/server/controller/PageController;Lio/micronaut/http/HttpRequest;)V
	public final fun body (Ljava/lang/String;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun body$default (Lelide/server/controller/PageController$ServerRenderAgent;Ljava/lang/String;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public final fun getDom ()Lkotlinx/html/HTML;
	public final fun head (Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun render (Lkotlinx/html/BODY;Ljava/lang/String;Ljava/util/Set;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun render$default (Lelide/server/controller/PageController$ServerRenderAgent;Lkotlinx/html/BODY;Ljava/lang/String;Ljava/util/Set;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
}

public abstract class elide/server/controller/PageWithProps : elide/server/controller/PageController {
	protected fun <init> (Lkotlin/reflect/KClass;Ljava/lang/Object;)V
	public synthetic fun <init> (Lkotlin/reflect/KClass;Ljava/lang/Object;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun finalizeAsync (Lelide/ssr/type/RequestState;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun props (Lelide/ssr/type/RequestState;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun propsAsync (Lelide/ssr/type/RequestState;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class elide/server/controller/StatusEnabledController {
}

public synthetic class elide/server/controller/builtin/$NotFoundController$Definition : io/micronaut/context/AbstractInitializableBeanDefinitionAndReference {
	public static final field $ANNOTATION_METADATA Lio/micronaut/core/annotation/AnnotationMetadata;
	public fun <init> ()V
	protected fun <init> (Ljava/lang/Class;Lio/micronaut/context/AbstractInitializableBeanDefinition$MethodOrFieldReference;)V
	public fun inject (Lio/micronaut/context/BeanResolutionContext;Lio/micronaut/context/BeanContext;Ljava/lang/Object;)Ljava/lang/Object;
	public fun instantiate (Lio/micronaut/context/BeanResolutionContext;Lio/micronaut/context/BeanContext;)Ljava/lang/Object;
	public fun isEnabled (Lio/micronaut/context/BeanContext;)Z
	public fun isEnabled (Lio/micronaut/context/BeanContext;Lio/micronaut/context/BeanResolutionContext;)Z
	public fun load ()Lio/micronaut/inject/BeanDefinition;
}

public synthetic class elide/server/controller/builtin/$NotFoundController$ReflectConfig : io/micronaut/core/graal/GraalReflectionConfigurer {
	public static final field $ANNOTATION_METADATA Lio/micronaut/core/annotation/AnnotationMetadata;
	public fun <init> ()V
	public fun getAnnotationMetadata ()Lio/micronaut/core/annotation/AnnotationMetadata;
}

public synthetic class elide/server/controller/builtin/$ServerErrorController$Definition : io/micronaut/context/AbstractInitializableBeanDefinitionAndReference {
	public static final field $ANNOTATION_METADATA Lio/micronaut/core/annotation/AnnotationMetadata;
	public fun <init> ()V
	protected fun <init> (Ljava/lang/Class;Lio/micronaut/context/AbstractInitializableBeanDefinition$MethodOrFieldReference;)V
	public fun inject (Lio/micronaut/context/BeanResolutionContext;Lio/micronaut/context/BeanContext;Ljava/lang/Object;)Ljava/lang/Object;
	public fun instantiate (Lio/micronaut/context/BeanResolutionContext;Lio/micronaut/context/BeanContext;)Ljava/lang/Object;
	public fun isEnabled (Lio/micronaut/context/BeanContext;)Z
	public fun isEnabled (Lio/micronaut/context/BeanContext;Lio/micronaut/context/BeanResolutionContext;)Z
	public fun load ()Lio/micronaut/inject/BeanDefinition;
}

public synthetic class elide/server/controller/builtin/$ServerErrorController$ReflectConfig : io/micronaut/core/graal/GraalReflectionConfigurer {
	public static final field $ANNOTATION_METADATA Lio/micronaut/core/annotation/AnnotationMetadata;
	public fun <init> ()V
	public fun getAnnotationMetadata ()Lio/micronaut/core/annotation/AnnotationMetadata;
}

public abstract class elide/server/controller/builtin/BuiltinController : elide/server/controller/PageController, elide/server/controller/StatusEnabledController {
	public fun <init> ()V
	public abstract fun handle (Lio/micronaut/http/HttpRequest;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class elide/server/controller/builtin/NotFoundController : elide/server/controller/builtin/BuiltinController {
	public fun <init> ()V
	public fun handle (Lio/micronaut/http/HttpRequest;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class elide/server/controller/builtin/ServerErrorController : elide/server/controller/builtin/BuiltinController {
	public fun <init> ()V
	public fun handle (Lio/micronaut/http/HttpRequest;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public synthetic class elide/server/http/$HeaderFinalizingFilter$Definition : io/micronaut/context/AbstractInitializableBeanDefinitionAndReference {
	public static final field $ANNOTATION_METADATA Lio/micronaut/core/annotation/AnnotationMetadata;
	public fun <init> ()V
	protected fun <init> (Ljava/lang/Class;Lio/micronaut/context/AbstractInitializableBeanDefinition$MethodOrFieldReference;)V
	public fun instantiate (Lio/micronaut/context/BeanResolutionContext;Lio/micronaut/context/BeanContext;)Ljava/lang/Object;
	public fun isEnabled (Lio/micronaut/context/BeanContext;)Z
	public fun isEnabled (Lio/micronaut/context/BeanContext;Lio/micronaut/context/BeanResolutionContext;)Z
	public fun load ()Lio/micronaut/inject/BeanDefinition;
}

public final class elide/server/http/HeaderFinalizingFilter : io/micronaut/http/filter/HttpServerFilter {
	public fun <init> ()V
	public fun doFilter (Lio/micronaut/http/HttpRequest;Lio/micronaut/http/filter/ServerFilterChain;)Lorg/reactivestreams/Publisher;
}

public final class elide/server/http/RequestContext {
	public static final field INSTANCE Lelide/server/http/RequestContext;
}

public final class elide/server/http/RequestContext$Key {
	public static final field Companion Lelide/server/http/RequestContext$Key$Companion;
	public fun <init> (Ljava/lang/String;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;)Lelide/server/http/RequestContext$Key;
	public static synthetic fun copy$default (Lelide/server/http/RequestContext$Key;Ljava/lang/String;ILjava/lang/Object;)Lelide/server/http/RequestContext$Key;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getName ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class elide/server/http/RequestContext$Key$Companion {
	public final fun getASSET_MANAGER ()Lelide/server/http/RequestContext$Key;
}

public synthetic class elide/server/runtime/$AppExecutor$DefaultExecutor$Definition : io/micronaut/context/AbstractInitializableBeanDefinitionAndReference {
	public static final field $ANNOTATION_METADATA Lio/micronaut/core/annotation/AnnotationMetadata;
	public fun <init> ()V
	protected fun <init> (Ljava/lang/Class;Lio/micronaut/context/AbstractInitializableBeanDefinition$MethodOrFieldReference;)V
	public fun instantiate (Lio/micronaut/context/BeanResolutionContext;Lio/micronaut/context/BeanContext;)Ljava/lang/Object;
	public fun isContextScope ()Z
	public fun isEnabled (Lio/micronaut/context/BeanContext;)Z
	public fun isEnabled (Lio/micronaut/context/BeanContext;Lio/micronaut/context/BeanResolutionContext;)Z
	public fun load ()Lio/micronaut/inject/BeanDefinition;
}

public abstract interface class elide/server/runtime/AppExecutor {
	public static final field Companion Lelide/server/runtime/AppExecutor$Companion;
	public static fun async (Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun executor ()Ljava/util/concurrent/Executor;
	public static fun io (Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun service ()Lcom/google/common/util/concurrent/ListeningExecutorService;
}

public final class elide/server/runtime/AppExecutor$Companion {
	public final fun async (Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun io (Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class elide/server/runtime/AppExecutor$DefaultExecutor : elide/server/runtime/AppExecutor {
	public static final field Companion Lelide/server/runtime/AppExecutor$DefaultExecutor$Companion;
	public fun <init> (Ljava/lang/Thread$UncaughtExceptionHandler;)V
	public static final fun acquire ()Lelide/server/runtime/AppExecutor;
	public final fun overrideExecutor (Lcom/google/common/util/concurrent/ListeningScheduledExecutorService;)V
	public synthetic fun service ()Lcom/google/common/util/concurrent/ListeningExecutorService;
	public fun service ()Lcom/google/common/util/concurrent/ListeningScheduledExecutorService;
}

public final class elide/server/runtime/AppExecutor$DefaultExecutor$Companion {
	public final fun acquire ()Lelide/server/runtime/AppExecutor;
}

public final class elide/server/runtime/AppExecutor$DefaultSettings {
	public static final field INSTANCE Lelide/server/runtime/AppExecutor$DefaultSettings;
	public static final field priority I
	public final fun getPoolSize ()I
}

public synthetic class elide/server/runtime/jvm/$UncaughtExceptionHandler$Definition : io/micronaut/context/AbstractInitializableBeanDefinitionAndReference {
	public static final field $ANNOTATION_METADATA Lio/micronaut/core/annotation/AnnotationMetadata;
	public fun <init> ()V
	protected fun <init> (Ljava/lang/Class;Lio/micronaut/context/AbstractInitializableBeanDefinition$MethodOrFieldReference;)V
	public fun instantiate (Lio/micronaut/context/BeanResolutionContext;Lio/micronaut/context/BeanContext;)Ljava/lang/Object;
	public fun isEnabled (Lio/micronaut/context/BeanContext;)Z
	public fun isEnabled (Lio/micronaut/context/BeanContext;Lio/micronaut/context/BeanResolutionContext;)Z
	public fun load ()Lio/micronaut/inject/BeanDefinition;
}

public synthetic class elide/server/runtime/jvm/$UncaughtExceptionHandler$UncaughtExceptionHandlerLoggingProvider$Definition : io/micronaut/context/AbstractInitializableBeanDefinitionAndReference {
	public static final field $ANNOTATION_METADATA Lio/micronaut/core/annotation/AnnotationMetadata;
	public fun <init> ()V
	protected fun <init> (Ljava/lang/Class;Lio/micronaut/context/AbstractInitializableBeanDefinition$MethodOrFieldReference;)V
	public fun instantiate (Lio/micronaut/context/BeanResolutionContext;Lio/micronaut/context/BeanContext;)Ljava/lang/Object;
	public fun isEnabled (Lio/micronaut/context/BeanContext;)Z
	public fun isEnabled (Lio/micronaut/context/BeanContext;Lio/micronaut/context/BeanResolutionContext;)Z
	public fun load ()Lio/micronaut/inject/BeanDefinition;
}

public synthetic class elide/server/runtime/jvm/$UncaughtExceptionHandler$UncaughtExceptionHandlerLoggingProvider$Get0$Definition : io/micronaut/context/AbstractInitializableBeanDefinitionAndReference {
	public static final field $ANNOTATION_METADATA Lio/micronaut/core/annotation/AnnotationMetadata;
	public fun <init> ()V
	protected fun <init> (Ljava/lang/Class;Lio/micronaut/context/AbstractInitializableBeanDefinition$MethodOrFieldReference;)V
	public fun instantiate (Lio/micronaut/context/BeanResolutionContext;Lio/micronaut/context/BeanContext;)Ljava/lang/Object;
	public fun isEnabled (Lio/micronaut/context/BeanContext;)Z
	public fun isEnabled (Lio/micronaut/context/BeanContext;Lio/micronaut/context/BeanResolutionContext;)Z
	public fun load ()Lio/micronaut/inject/BeanDefinition;
}

public final class elide/server/runtime/jvm/SecurityProviderConfigurator {
	public static final field INSTANCE Lelide/server/runtime/jvm/SecurityProviderConfigurator;
	public static final fun initialize ()V
	public static final fun ready ()Z
}

public class elide/server/runtime/jvm/UncaughtExceptionHandler : java/lang/Thread$UncaughtExceptionHandler {
	public fun <init> (Lelide/server/runtime/jvm/UncaughtExceptionHandler$UncaughtExceptionHandlerLoggingProvider;)V
	public fun uncaughtException (Ljava/lang/Thread;Ljava/lang/Throwable;)V
}

public class elide/server/runtime/jvm/UncaughtExceptionHandler$UncaughtExceptionHandlerLoggingProvider : java/util/function/Supplier {
	public fun <init> ()V
	public fun get ()Lelide/runtime/Logger;
	public synthetic fun get ()Ljava/lang/Object;
}

public final class elide/server/ssr/ServerSSRRenderer : elide/server/SuspensionRenderer {
	public static final field Companion Lelide/server/ssr/ServerSSRRenderer$Companion;
	public static final field ssrId Ljava/lang/String;
	public fun <init> (Lkotlinx/html/BODY;Lelide/server/controller/ElideController;Lio/micronaut/http/HttpRequest;Lelide/runtime/gvm/ExecutableScript;Ljava/lang/StringBuilder;Ljava/util/concurrent/atomic/AtomicReference;)V
	public synthetic fun <init> (Lkotlinx/html/BODY;Lelide/server/controller/ElideController;Lio/micronaut/http/HttpRequest;Lelide/runtime/gvm/ExecutableScript;Ljava/lang/StringBuilder;Ljava/util/concurrent/atomic/AtomicReference;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun render (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun renderResponse (Lio/micronaut/http/MutableHttpResponse;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun renderSuspendAsync (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class elide/server/ssr/ServerSSRRenderer$Companion {
}

public final class kotlinx/html/Api_extKt {
	public static final fun visitSuspend (Lkotlinx/html/Tag;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun visitTagSuspend (Lkotlinx/html/Tag;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class kotlinx/html/tagext/Tags_extKt {
	public static final fun body (Lkotlinx/html/HTML;Ljava/lang/String;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun body$default (Lkotlinx/html/HTML;Ljava/lang/String;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static final fun head (Lkotlinx/html/HTML;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

