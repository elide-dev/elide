public final class elide/http/HttpBytes {
	public static final field Companion Lelide/http/HttpBytes$Companion;
	public final fun getSize-s-VKNKU ()J
}

public final class elide/http/HttpBytes$Companion {
	public final fun getEMPTY ()Lelide/http/HttpBytes;
}

public final class elide/http/HttpHeaders : elide/http/api/HttpHeaders, java/util/Map, kotlin/jvm/internal/markers/KMappedMarker {
	public static final field Companion Lelide/http/HttpHeaders$Companion;
	public synthetic fun <init> (Lelide/struct/api/SortedMap;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun clear ()V
	public fun compute (Lelide/http/api/HttpHeaders$HeaderName;Ljava/util/function/BiFunction;)Lelide/http/api/HttpHeaders$HeaderValue;
	public synthetic fun compute (Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
	public fun computeIfAbsent (Lelide/http/api/HttpHeaders$HeaderName;Ljava/util/function/Function;)Lelide/http/api/HttpHeaders$HeaderValue;
	public synthetic fun computeIfAbsent (Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
	public fun computeIfPresent (Lelide/http/api/HttpHeaders$HeaderName;Ljava/util/function/BiFunction;)Lelide/http/api/HttpHeaders$HeaderValue;
	public synthetic fun computeIfPresent (Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
	public fun contains (Lelide/http/api/HttpHeaders$HeaderName;)Z
	public fun contains (Ljava/lang/String;)Z
	public fun containsKey (Lelide/http/api/HttpHeaders$HeaderName;)Z
	public final fun containsKey (Ljava/lang/Object;)Z
	public fun containsValue (Lelide/http/api/HttpHeaders$HeaderValue;)Z
	public final fun containsValue (Ljava/lang/Object;)Z
	public static final fun empty ()Lelide/http/HttpHeaders;
	public final fun entrySet ()Ljava/util/Set;
	public fun get (Lelide/http/api/HttpHeaders$HeaderName;)Lelide/http/api/HttpHeaders$HeaderValue;
	public final fun get (Ljava/lang/Object;)Lelide/http/api/HttpHeaders$HeaderValue;
	public final synthetic fun get (Ljava/lang/Object;)Ljava/lang/Object;
	public fun get (Ljava/lang/String;)Ljava/lang/String;
	public fun getAll (Lelide/http/api/HttpHeaders$HeaderName;)Lkotlin/sequences/Sequence;
	public fun getAll (Ljava/lang/String;)Lkotlin/sequences/Sequence;
	public fun getEntries ()Ljava/util/Set;
	public fun getKeys ()Ljava/util/Set;
	public fun getSize ()I
	public fun getValues ()Ljava/util/Collection;
	public fun isEmpty ()Z
	public final fun keySet ()Ljava/util/Set;
	public fun merge (Lelide/http/api/HttpHeaders$HeaderName;Lelide/http/api/HttpHeaders$HeaderValue;Ljava/util/function/BiFunction;)Lelide/http/api/HttpHeaders$HeaderValue;
	public synthetic fun merge (Ljava/lang/Object;Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
	public static fun of (Ljava/util/Collection;)Lelide/http/HttpHeaders;
	public static fun of (Ljava/util/Map;)Lelide/http/HttpHeaders;
	public static fun of (Lkotlin/sequences/Sequence;)Lelide/http/HttpHeaders;
	public static fun of ([Lkotlin/Pair;)Lelide/http/HttpHeaders;
	public fun put (Lelide/http/api/HttpHeaders$HeaderName;Lelide/http/api/HttpHeaders$HeaderValue;)Lelide/http/api/HttpHeaders$HeaderValue;
	public synthetic fun put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
	public fun putAll (Ljava/util/Map;)V
	public fun putIfAbsent (Lelide/http/api/HttpHeaders$HeaderName;Lelide/http/api/HttpHeaders$HeaderValue;)Lelide/http/api/HttpHeaders$HeaderValue;
	public synthetic fun putIfAbsent (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
	public fun remove (Ljava/lang/Object;)Lelide/http/api/HttpHeaders$HeaderValue;
	public synthetic fun remove (Ljava/lang/Object;)Ljava/lang/Object;
	public fun remove (Ljava/lang/Object;Ljava/lang/Object;)Z
	public fun replace (Lelide/http/api/HttpHeaders$HeaderName;Lelide/http/api/HttpHeaders$HeaderValue;)Lelide/http/api/HttpHeaders$HeaderValue;
	public fun replace (Lelide/http/api/HttpHeaders$HeaderName;Lelide/http/api/HttpHeaders$HeaderValue;Lelide/http/api/HttpHeaders$HeaderValue;)Z
	public synthetic fun replace (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
	public synthetic fun replace (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
	public fun replaceAll (Ljava/util/function/BiFunction;)V
	public final fun size ()I
	public final fun values ()Ljava/util/Collection;
}

public final class elide/http/HttpHeaders$Companion : elide/http/api/HttpHeaders$Factory {
	public final fun empty ()Lelide/http/HttpHeaders;
	public final fun mutable (Ljava/util/Collection;)Lelide/http/MutableHttpHeaders;
	public final fun mutable (Ljava/util/Map;)Lelide/http/MutableHttpHeaders;
	public final fun mutable (Lkotlin/sequences/Sequence;)Lelide/http/MutableHttpHeaders;
	public final fun mutable ([Lkotlin/Pair;)Lelide/http/MutableHttpHeaders;
	public fun of (Ljava/util/Collection;)Lelide/http/HttpHeaders;
	public synthetic fun of (Ljava/util/Collection;)Lelide/http/api/HttpHeaders;
	public fun of (Ljava/util/Map;)Lelide/http/HttpHeaders;
	public synthetic fun of (Ljava/util/Map;)Lelide/http/api/HttpHeaders;
	public fun of (Lkotlin/sequences/Sequence;)Lelide/http/HttpHeaders;
	public synthetic fun of (Lkotlin/sequences/Sequence;)Lelide/http/api/HttpHeaders;
	public fun of ([Lkotlin/Pair;)Lelide/http/HttpHeaders;
	public synthetic fun of ([Lkotlin/Pair;)Lelide/http/api/HttpHeaders;
}

public final class elide/http/HttpMapping : elide/http/api/HttpMapping, elide/struct/api/SortedMap {
	public fun clear ()V
	public fun compute (Ljava/lang/Comparable;Ljava/util/function/BiFunction;)Ljava/lang/CharSequence;
	public synthetic fun compute (Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
	public fun computeIfAbsent (Ljava/lang/Comparable;Ljava/util/function/Function;)Ljava/lang/CharSequence;
	public synthetic fun computeIfAbsent (Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
	public fun computeIfPresent (Ljava/lang/Comparable;Ljava/util/function/BiFunction;)Ljava/lang/CharSequence;
	public synthetic fun computeIfPresent (Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
	public fun containsKey (Ljava/lang/Comparable;)Z
	public final fun containsKey (Ljava/lang/Object;)Z
	public fun containsValue (Ljava/lang/CharSequence;)Z
	public final fun containsValue (Ljava/lang/Object;)Z
	public final fun entrySet ()Ljava/util/Set;
	public fun get (Ljava/lang/Comparable;)Ljava/lang/CharSequence;
	public synthetic fun get (Ljava/lang/Comparable;)Ljava/lang/Object;
	public final fun get (Ljava/lang/Object;)Ljava/lang/CharSequence;
	public final synthetic fun get (Ljava/lang/Object;)Ljava/lang/Object;
	public fun getEntries ()Ljava/util/Set;
	public fun getKeys ()Ljava/util/Set;
	public fun getSize ()I
	public fun getValues ()Ljava/util/Collection;
	public fun isEmpty ()Z
	public final fun keySet ()Ljava/util/Set;
	public fun merge (Ljava/lang/Comparable;Ljava/lang/CharSequence;Ljava/util/function/BiFunction;)Ljava/lang/CharSequence;
	public synthetic fun merge (Ljava/lang/Object;Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
	public fun put (Ljava/lang/Comparable;Ljava/lang/CharSequence;)Ljava/lang/CharSequence;
	public synthetic fun put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
	public fun putAll (Ljava/util/Map;)V
	public fun putIfAbsent (Ljava/lang/Comparable;Ljava/lang/CharSequence;)Ljava/lang/CharSequence;
	public synthetic fun putIfAbsent (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
	public fun remove (Ljava/lang/Object;)Ljava/lang/CharSequence;
	public synthetic fun remove (Ljava/lang/Object;)Ljava/lang/Object;
	public fun remove (Ljava/lang/Object;Ljava/lang/Object;)Z
	public fun replace (Ljava/lang/Comparable;Ljava/lang/CharSequence;)Ljava/lang/CharSequence;
	public fun replace (Ljava/lang/Comparable;Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z
	public synthetic fun replace (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
	public synthetic fun replace (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
	public fun replaceAll (Ljava/util/function/BiFunction;)V
	public final fun size ()I
	public final fun values ()Ljava/util/Collection;
}

public abstract class elide/http/HttpMessage : elide/http/api/HttpMessage {
	public fun <init> ()V
	public fun <init> (Lelide/http/api/HttpVersion;Lelide/http/HttpHeaders;)V
	public synthetic fun <init> (Lelide/http/api/HttpVersion;Lelide/http/HttpHeaders;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun getBody ()Lelide/http/HttpPayload;
	public synthetic fun getBody ()Lelide/http/api/HttpPayload;
	public fun getHeaders ()Lelide/http/HttpHeaders;
	public synthetic fun getHeaders ()Lelide/http/api/HttpHeaders;
	public fun getMutable ()Z
	public fun getVersion ()Lelide/http/api/HttpVersion;
}

public abstract interface class elide/http/HttpMethod : elide/http/api/HttpMethod {
}

public final class elide/http/HttpMethod$Custom : elide/http/HttpMethod {
	public fun <init> (Ljava/lang/String;ZZZ)V
	public synthetic fun <init> (Ljava/lang/String;ZZZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Z
	public final fun component3 ()Z
	public final fun component4 ()Z
	public final fun copy (Ljava/lang/String;ZZZ)Lelide/http/HttpMethod$Custom;
	public static synthetic fun copy$default (Lelide/http/HttpMethod$Custom;Ljava/lang/String;ZZZILjava/lang/Object;)Lelide/http/HttpMethod$Custom;
	public fun equals (Ljava/lang/Object;)Z
	public fun getBody ()Z
	public fun getIdempotent ()Z
	public fun getName ()Ljava/lang/String;
	public fun getWrite ()Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class elide/http/HttpMethod$Standard : elide/http/api/HttpMethod {
	public static final synthetic fun box-impl (Lelide/http/api/StandardHttpMethod;)Lelide/http/HttpMethod$Standard;
	public static fun constructor-impl (Lelide/http/api/StandardHttpMethod;)Lelide/http/api/StandardHttpMethod;
	public fun equals (Ljava/lang/Object;)Z
	public static fun equals-impl (Lelide/http/api/StandardHttpMethod;Ljava/lang/Object;)Z
	public static final fun equals-impl0 (Lelide/http/api/StandardHttpMethod;Lelide/http/api/StandardHttpMethod;)Z
	public fun getBody ()Z
	public static fun getBody-impl (Lelide/http/api/StandardHttpMethod;)Z
	public fun getIdempotent ()Z
	public static fun getIdempotent-impl (Lelide/http/api/StandardHttpMethod;)Z
	public final fun getMethod ()Lelide/http/api/StandardHttpMethod;
	public fun getName ()Ljava/lang/String;
	public static fun getName-impl (Lelide/http/api/StandardHttpMethod;)Ljava/lang/String;
	public fun getWrite ()Z
	public static fun getWrite-impl (Lelide/http/api/StandardHttpMethod;)Z
	public fun hashCode ()I
	public static fun hashCode-impl (Lelide/http/api/StandardHttpMethod;)I
	public fun toString ()Ljava/lang/String;
	public static fun toString-impl (Lelide/http/api/StandardHttpMethod;)Ljava/lang/String;
	public final synthetic fun unbox-impl ()Lelide/http/api/StandardHttpMethod;
}

public abstract class elide/http/HttpPayload : elide/http/api/HttpPayload {
	public synthetic fun <init> (Lelide/http/HttpBytes;Ljava/lang/String;JILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public synthetic fun <init> (Lelide/http/HttpBytes;Ljava/lang/String;JLkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun contentTypeOrDefault-PwY7DFU ()Ljava/lang/String;
	public fun getBytes ()Lelide/http/HttpBytes;
	public fun getContentType-8OAbpuQ ()Ljava/lang/String;
	public fun getMutable ()Z
	public fun getPresent ()Z
	public fun getSize-s-VKNKU ()J
}

public final class elide/http/HttpPayload$Bytes : elide/http/HttpPayload {
	public synthetic fun <init> (Lelide/http/HttpBytes;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public synthetic fun <init> (Lelide/http/HttpBytes;Ljava/lang/String;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
}

public final class elide/http/HttpPayload$Empty : elide/http/HttpPayload {
	public static final field INSTANCE Lelide/http/HttpPayload$Empty;
	public fun equals (Ljava/lang/Object;)Z
	public fun getPresent ()Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class elide/http/HttpPayload$Text : elide/http/HttpPayload {
	public synthetic fun <init> (Lelide/http/HttpBytes;Ljava/lang/String;Lelide/core/encoding/Encoding;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public synthetic fun <init> (Lelide/http/HttpBytes;Ljava/lang/String;Lelide/core/encoding/Encoding;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getEncoding ()Lelide/core/encoding/Encoding;
}

public final class elide/http/HttpRequest : elide/http/HttpMessage, elide/http/api/HttpRequest {
	public static final field Companion Lelide/http/HttpRequest$Companion;
	public fun <init> ()V
	public static fun copy (Lelide/http/api/HttpRequest;Lelide/http/api/HttpMethod;Ljava/lang/String;Lelide/http/api/HttpMapping;)Lelide/http/api/HttpRequest;
	public static final fun copy$default (Lelide/http/api/HttpRequest;Lelide/http/api/HttpMethod;Ljava/lang/String;Lelide/http/api/HttpMapping;ILjava/lang/Object;)Lelide/http/api/HttpRequest;
	public static fun create (Lelide/http/api/HttpMethod;Ljava/lang/String;Lelide/http/api/HttpMapping;)Lelide/http/api/HttpRequest;
	public static final fun create$default (Lelide/http/api/HttpMethod;Ljava/lang/String;Lelide/http/api/HttpMapping;ILjava/lang/Object;)Lelide/http/api/HttpRequest;
	public fun getMethod ()Lelide/http/api/HttpMethod;
	public fun getMutable ()Z
	public fun getPath ()Ljava/lang/String;
	public fun getQuery ()Lelide/http/api/HttpMapping;
	public fun getType ()Lelide/http/api/HttpMessageType;
	public fun getUrl ()Lelide/net/api/URL;
}

public final class elide/http/HttpRequest$Companion : elide/http/api/HttpRequest$Factory {
	public fun copy (Lelide/http/api/HttpRequest;Lelide/http/api/HttpMethod;Ljava/lang/String;Lelide/http/api/HttpMapping;)Lelide/http/api/HttpRequest;
	public fun create (Lelide/http/api/HttpMethod;Ljava/lang/String;Lelide/http/api/HttpMapping;)Lelide/http/api/HttpRequest;
}

public final class elide/http/HttpRequests {
	public static final field INSTANCE Lelide/http/HttpRequests;
}

public final class elide/http/HttpResponse : elide/http/HttpMessage, elide/http/api/HttpResponse {
	public static final field Companion Lelide/http/HttpResponse$Companion;
	public fun <init> ()V
	public fun getStatus ()Lelide/http/api/HttpStatus;
	public fun getTrailers ()Lelide/http/api/HttpHeaders;
	public fun getType ()Lelide/http/api/HttpMessageType;
}

public final class elide/http/HttpResponse$Companion : elide/http/api/HttpResponse$Factory {
}

public final class elide/http/HttpStatus : elide/http/api/HttpStatus {
	public static final synthetic fun box-impl (Lelide/http/HttpStatus$HttpStatusInfo;)Lelide/http/HttpStatus;
	public static fun constructor-impl (Lelide/http/HttpStatus$HttpStatusInfo;)Lelide/http/HttpStatus$HttpStatusInfo;
	public fun equals (Ljava/lang/Object;)Z
	public static fun equals-impl (Lelide/http/HttpStatus$HttpStatusInfo;Ljava/lang/Object;)Z
	public static final fun equals-impl0 (Lelide/http/HttpStatus$HttpStatusInfo;Lelide/http/HttpStatus$HttpStatusInfo;)Z
	public fun getCode-pVg5ArA ()I
	public static fun getCode-pVg5ArA (Lelide/http/HttpStatus$HttpStatusInfo;)I
	public fun getText ()Ljava/lang/String;
	public static fun getText-impl (Lelide/http/HttpStatus$HttpStatusInfo;)Ljava/lang/String;
	public fun getType ()Lelide/http/api/HttpStatus$Type;
	public static fun getType-impl (Lelide/http/HttpStatus$HttpStatusInfo;)Lelide/http/api/HttpStatus$Type;
	public fun hashCode ()I
	public static fun hashCode-impl (Lelide/http/HttpStatus$HttpStatusInfo;)I
	public fun toString ()Ljava/lang/String;
	public static fun toString-impl (Lelide/http/HttpStatus$HttpStatusInfo;)Ljava/lang/String;
	public final synthetic fun unbox-impl ()Lelide/http/HttpStatus$HttpStatusInfo;
}

public final class elide/http/HttpStatus$HttpStatusInfo : java/lang/Record {
	public synthetic fun <init> (ILjava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public synthetic fun <init> (ILjava/lang/String;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun code ()I
	public final fun component1-pVg5ArA ()I
	public final fun component2 ()Ljava/lang/String;
	public final fun copy-qim9Vi0 (ILjava/lang/String;)Lelide/http/HttpStatus$HttpStatusInfo;
	public static synthetic fun copy-qim9Vi0$default (Lelide/http/HttpStatus$HttpStatusInfo;ILjava/lang/String;ILjava/lang/Object;)Lelide/http/HttpStatus$HttpStatusInfo;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun reason ()Ljava/lang/String;
	public fun toString ()Ljava/lang/String;
}

public final class elide/http/HttpStatusCode : java/lang/Enum {
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public static fun valueOf (Ljava/lang/String;)Lelide/http/HttpStatusCode;
	public static fun values ()[Lelide/http/HttpStatusCode;
}

public final class elide/http/MutableHttpHeaders : elide/http/api/MutableHttpHeaders, java/util/Map, kotlin/jvm/internal/markers/KMutableMap {
	public static final field Companion Lelide/http/MutableHttpHeaders$Companion;
	public fun add (Lelide/http/api/HttpHeaders$HeaderName;Ljava/lang/String;)V
	public fun add (Ljava/lang/String;Ljava/lang/String;)V
	public fun clear ()V
	public fun contains (Lelide/http/api/HttpHeaders$HeaderName;)Z
	public fun contains (Ljava/lang/String;)Z
	public fun containsKey (Lelide/http/api/HttpHeaders$HeaderName;)Z
	public final fun containsKey (Ljava/lang/Object;)Z
	public fun containsValue (Lelide/http/api/HttpHeaders$HeaderValue;)Z
	public final fun containsValue (Ljava/lang/Object;)Z
	public static fun create ()Lelide/http/MutableHttpHeaders;
	public final fun entrySet ()Ljava/util/Set;
	public fun get (Lelide/http/api/HttpHeaders$HeaderName;)Lelide/http/api/HttpHeaders$HeaderValue;
	public final fun get (Ljava/lang/Object;)Lelide/http/api/HttpHeaders$HeaderValue;
	public final synthetic fun get (Ljava/lang/Object;)Ljava/lang/Object;
	public fun get (Ljava/lang/String;)Ljava/lang/String;
	public fun getAll (Lelide/http/api/HttpHeaders$HeaderName;)Lkotlin/sequences/Sequence;
	public fun getAll (Ljava/lang/String;)Lkotlin/sequences/Sequence;
	public fun getEntries ()Ljava/util/Set;
	public fun getKeys ()Ljava/util/Set;
	public fun getSize ()I
	public fun getValues ()Ljava/util/Collection;
	public fun isEmpty ()Z
	public final fun keySet ()Ljava/util/Set;
	public static fun of (Ljava/util/Collection;)Lelide/http/MutableHttpHeaders;
	public static fun of (Ljava/util/Map;)Lelide/http/MutableHttpHeaders;
	public static fun of (Lkotlin/sequences/Sequence;)Lelide/http/MutableHttpHeaders;
	public static fun of ([Lkotlin/Pair;)Lelide/http/MutableHttpHeaders;
	public fun put (Lelide/http/api/HttpHeaders$HeaderName;Lelide/http/api/HttpHeaders$HeaderValue;)Lelide/http/api/HttpHeaders$HeaderValue;
	public synthetic fun put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
	public fun putAll (Ljava/util/Map;)V
	public fun remove (Lelide/http/api/HttpHeaders$HeaderName;)Lelide/http/api/HttpHeaders$HeaderValue;
	public fun remove (Lelide/http/api/HttpHeaders$HeaderName;Ljava/lang/String;)V
	public final fun remove (Ljava/lang/Object;)Lelide/http/api/HttpHeaders$HeaderValue;
	public final synthetic fun remove (Ljava/lang/Object;)Ljava/lang/Object;
	public fun set (Lelide/http/api/HttpHeaders$HeaderName;Ljava/lang/String;)V
	public fun set (Ljava/lang/String;Ljava/lang/String;)V
	public final fun size ()I
	public final fun values ()Ljava/util/Collection;
}

public final class elide/http/MutableHttpHeaders$Companion : elide/http/api/MutableHttpHeaders$Factory {
	public fun create ()Lelide/http/MutableHttpHeaders;
	public synthetic fun create ()Lelide/http/api/MutableHttpHeaders;
	public fun of (Ljava/util/Collection;)Lelide/http/MutableHttpHeaders;
	public synthetic fun of (Ljava/util/Collection;)Lelide/http/api/HttpHeaders;
	public synthetic fun of (Ljava/util/Collection;)Lelide/http/api/MutableHttpHeaders;
	public fun of (Ljava/util/Map;)Lelide/http/MutableHttpHeaders;
	public synthetic fun of (Ljava/util/Map;)Lelide/http/api/HttpHeaders;
	public synthetic fun of (Ljava/util/Map;)Lelide/http/api/MutableHttpHeaders;
	public fun of (Lkotlin/sequences/Sequence;)Lelide/http/MutableHttpHeaders;
	public synthetic fun of (Lkotlin/sequences/Sequence;)Lelide/http/api/HttpHeaders;
	public synthetic fun of (Lkotlin/sequences/Sequence;)Lelide/http/api/MutableHttpHeaders;
	public fun of ([Lkotlin/Pair;)Lelide/http/MutableHttpHeaders;
	public synthetic fun of ([Lkotlin/Pair;)Lelide/http/api/HttpHeaders;
	public synthetic fun of ([Lkotlin/Pair;)Lelide/http/api/MutableHttpHeaders;
}

public final class elide/http/MutableHttpMapping : elide/http/api/MutableHttpMapping, elide/struct/api/MutableSortedMap {
	public static final field Companion Lelide/http/MutableHttpMapping$Companion;
	public fun clear ()V
	public fun containsKey (Ljava/lang/Comparable;)Z
	public final fun containsKey (Ljava/lang/Object;)Z
	public fun containsValue (Ljava/lang/CharSequence;)Z
	public final fun containsValue (Ljava/lang/Object;)Z
	public static final fun empty ()Lelide/http/api/MutableHttpMapping;
	public final fun entrySet ()Ljava/util/Set;
	public fun get (Ljava/lang/Comparable;)Ljava/lang/CharSequence;
	public synthetic fun get (Ljava/lang/Comparable;)Ljava/lang/Object;
	public final fun get (Ljava/lang/Object;)Ljava/lang/CharSequence;
	public final synthetic fun get (Ljava/lang/Object;)Ljava/lang/Object;
	public fun getEntries ()Ljava/util/Set;
	public fun getKeys ()Ljava/util/Set;
	public fun getSize ()I
	public fun getValues ()Ljava/util/Collection;
	public fun isEmpty ()Z
	public final fun keySet ()Ljava/util/Set;
	public fun put (Ljava/lang/Comparable;Ljava/lang/CharSequence;)Ljava/lang/CharSequence;
	public synthetic fun put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
	public fun putAll (Ljava/util/Map;)V
	public fun remove (Ljava/lang/Comparable;)Ljava/lang/CharSequence;
	public final fun remove (Ljava/lang/Object;)Ljava/lang/CharSequence;
	public final synthetic fun remove (Ljava/lang/Object;)Ljava/lang/Object;
	public final fun size ()I
	public final fun values ()Ljava/util/Collection;
}

public final class elide/http/MutableHttpMapping$Companion {
	public final fun empty ()Lelide/http/api/MutableHttpMapping;
}

public abstract class elide/http/MutableHttpMessage : elide/http/api/MutableHttpMessage {
	public fun <init> ()V
	public fun <init> (Lelide/http/MutableHttpPayload;Lelide/http/api/HttpVersion;Lelide/http/MutableHttpHeaders;)V
	public synthetic fun <init> (Lelide/http/MutableHttpPayload;Lelide/http/api/HttpVersion;Lelide/http/MutableHttpHeaders;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun getBody ()Lelide/http/MutableHttpPayload;
	public synthetic fun getBody ()Lelide/http/api/HttpPayload;
	public synthetic fun getBody ()Lelide/http/api/MutableHttpPayload;
	public fun getHeaders ()Lelide/http/MutableHttpHeaders;
	public synthetic fun getHeaders ()Lelide/http/api/HttpHeaders;
	public synthetic fun getHeaders ()Lelide/http/api/MutableHttpHeaders;
	public fun getMutable ()Z
	public fun getVersion ()Lelide/http/api/HttpVersion;
	public fun setBody (Lelide/http/MutableHttpPayload;)V
	public fun setVersion (Lelide/http/api/HttpVersion;)V
}

public abstract class elide/http/MutableHttpPayload : elide/http/HttpPayload, elide/http/api/MutableHttpPayload {
	public synthetic fun <init> (Lelide/http/HttpBytes;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public synthetic fun <init> (Lelide/http/HttpBytes;Ljava/lang/String;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun getBytes ()Lelide/http/HttpBytes;
	public fun getContentType-8OAbpuQ ()Ljava/lang/String;
	public fun getMutable ()Z
	public fun getPresent ()Z
	public fun setBytes (Lelide/http/HttpBytes;)V
	public fun setContentType-fEgg5ZM (Ljava/lang/String;)V
}

public final class elide/http/MutableHttpPayload$Bytes : elide/http/MutableHttpPayload {
	public synthetic fun <init> (Lelide/http/HttpBytes;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public synthetic fun <init> (Lelide/http/HttpBytes;Ljava/lang/String;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
}

public final class elide/http/MutableHttpPayload$Empty : elide/http/MutableHttpPayload {
	public static final field INSTANCE Lelide/http/MutableHttpPayload$Empty;
	public fun equals (Ljava/lang/Object;)Z
	public fun getPresent ()Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class elide/http/MutableHttpPayload$Text : elide/http/MutableHttpPayload {
	public synthetic fun <init> (Lelide/http/HttpBytes;Ljava/lang/String;Lelide/core/encoding/Encoding;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public synthetic fun <init> (Lelide/http/HttpBytes;Ljava/lang/String;Lelide/core/encoding/Encoding;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getEncoding ()Lelide/core/encoding/Encoding;
	public final fun setEncoding (Lelide/core/encoding/Encoding;)V
}

public final class elide/http/MutableHttpRequest : elide/http/MutableHttpMessage, elide/http/api/MutableHttpRequest {
	public fun <init> ()V
	public fun getMethod ()Lelide/http/api/HttpMethod;
	public fun getMutable ()Z
	public fun getPath ()Ljava/lang/String;
	public synthetic fun getQuery ()Lelide/http/api/HttpMapping;
	public fun getQuery ()Lelide/http/api/MutableHttpMapping;
	public fun getType ()Lelide/http/api/HttpMessageType;
	public fun getUrl ()Lelide/net/api/URL;
	public fun setMethod (Lelide/http/api/HttpMethod;)V
	public fun setPath (Ljava/lang/String;)V
	public fun setQuery (Lelide/http/api/MutableHttpMapping;)V
	public fun setUrl (Lelide/net/api/URL;)V
}

public final class elide/http/MutableHttpResponse : elide/http/MutableHttpMessage, elide/http/api/MutableHttpResponse {
	public fun <init> ()V
	public fun getStatus ()Lelide/http/api/HttpStatus;
	public fun getTrailers ()Lelide/http/api/HttpHeaders;
	public fun getType ()Lelide/http/api/HttpMessageType;
	public fun setStatus (Lelide/http/api/HttpStatus;)V
	public fun setTrailers (Lelide/http/api/HttpHeaders;)V
}

public final class elide/http/api/CaseInsensitiveHttpString : java/lang/CharSequence {
	public static final field Companion Lelide/http/api/CaseInsensitiveHttpString$Companion;
	public final fun charAt (I)C
	public fun equals (Ljava/lang/Object;)Z
	public fun get (I)C
	public fun getLength ()I
	public final fun getOriginal ()Ljava/lang/String;
	public fun hashCode ()I
	public final fun length ()I
	public fun subSequence (II)Ljava/lang/CharSequence;
	public fun toString ()Ljava/lang/String;
}

public final class elide/http/api/CaseInsensitiveHttpString$Companion {
	public final fun of (Ljava/lang/String;)Lelide/http/api/CaseInsensitiveHttpString;
}

public final class elide/http/api/HttpEncoding : elide/http/api/HeaderValueTokenType {
	public static final synthetic fun box-impl (Lkotlin/Pair;)Lelide/http/api/HttpEncoding;
	public fun equals (Ljava/lang/Object;)Z
	public static fun equals-impl (Lkotlin/Pair;Ljava/lang/Object;)Z
	public static final fun equals-impl0 (Lkotlin/Pair;Lkotlin/Pair;)Z
	public fun getAllValues ()Ljava/util/Collection;
	public static fun getAllValues-impl (Lkotlin/Pair;)Ljava/util/Collection;
	public fun getAsString ()Ljava/lang/String;
	public static fun getAsString-impl (Lkotlin/Pair;)Ljava/lang/String;
	public synthetic fun getToken ()Ljava/lang/Object;
	public fun getToken ()Ljava/lang/String;
	public static fun getToken-impl (Lkotlin/Pair;)Ljava/lang/String;
	public synthetic fun getValue ()Ljava/lang/Object;
	public fun getValue ()Ljava/lang/String;
	public static fun getValue-impl (Lkotlin/Pair;)Ljava/lang/String;
	public fun hashCode ()I
	public static fun hashCode-impl (Lkotlin/Pair;)I
	public fun toString ()Ljava/lang/String;
	public static fun toString-impl (Lkotlin/Pair;)Ljava/lang/String;
	public final synthetic fun unbox-impl ()Lkotlin/Pair;
}

public abstract interface class elide/http/api/HttpHeader : java/lang/Comparable {
	public static final field Companion Lelide/http/api/HttpHeader$Companion;
	public abstract fun compareTo (Lelide/http/api/HttpHeader;)I
	public abstract fun getName ()Lelide/http/api/HttpHeaders$HeaderName;
	public abstract fun getType ()Lkotlin/reflect/KClass;
}

public final class elide/http/api/HttpHeader$Companion {
	public final fun getACCEPT ()Lelide/http/api/HttpHeader;
	public final fun getACCEPT_CHARSET ()Lelide/http/api/HttpHeader;
	public final fun getACCEPT_ENCODING ()Lelide/http/api/HttpHeader;
	public final fun getACCEPT_LANGUAGE ()Lelide/http/api/HttpHeader;
	public final fun getACCEPT_RANGES ()Lelide/http/api/HttpHeader;
	public final fun getAGE ()Lelide/http/api/HttpHeader;
	public final fun getAUTHORIZATION ()Lelide/http/api/HttpHeader;
	public final fun getAUTHORIZATION_INFO ()Lelide/http/api/HttpHeader;
	public final fun getCACHE_CONTROL ()Lelide/http/api/HttpHeader;
	public final fun getCONTENT_ENCODING ()Lelide/http/api/HttpHeader;
	public final fun getCONTENT_LANGUAGE ()Lelide/http/api/HttpHeader;
	public final fun getCONTENT_LENGTH ()Lelide/http/api/HttpHeader;
	public final fun getCONTENT_TYPE ()Lelide/http/api/HttpHeader;
	public final fun getCOOKIE ()Lelide/http/api/HttpHeader;
	public final fun getDATE ()Lelide/http/api/HttpHeader;
	public final fun getETAG ()Lelide/http/api/HttpHeader;
	public final fun getEXPIRES ()Lelide/http/api/HttpHeader;
	public final fun getHOST ()Lelide/http/api/HttpHeader;
	public final fun getLAST_MODIFIED ()Lelide/http/api/HttpHeader;
	public final fun getLOCATION ()Lelide/http/api/HttpHeader;
	public final fun getSERVER ()Lelide/http/api/HttpHeader;
	public final fun getSET_COOKIE ()Lelide/http/api/HttpHeader;
}

public final class elide/http/api/HttpHeader$DefaultImpls {
	public static fun compareTo (Lelide/http/api/HttpHeader;Lelide/http/api/HttpHeader;)I
}

public abstract interface class elide/http/api/HttpHeaderValue {
	public static final field Companion Lelide/http/api/HttpHeaderValue$Companion;
	public abstract fun getAllValues ()Ljava/util/Collection;
	public abstract fun getAsString ()Ljava/lang/String;
	public abstract fun getValue ()Ljava/lang/Object;
}

public final class elide/http/api/HttpHeaderValue$Companion {
	public final fun getAll ()Ljava/util/Collection;
	public final fun getBROTLI ()Lelide/http/api/HttpHeaderValue;
	public final fun getDEFLATE ()Lelide/http/api/HttpHeaderValue;
	public final fun getENGLISH-PiB4aRU ()Ljava/lang/String;
	public final fun getFRENCH-PiB4aRU ()Ljava/lang/String;
	public final fun getGERMAN-PiB4aRU ()Ljava/lang/String;
	public final fun getGZIP ()Lelide/http/api/HttpHeaderValue;
	public final fun getHTML-PwY7DFU ()Ljava/lang/String;
	public final fun getIDENTITY ()Lelide/http/api/HttpHeaderValue;
	public final fun getJSON-PwY7DFU ()Ljava/lang/String;
	public final fun getNO_CACHE ()Lelide/http/api/HttpHeaderValue;
	public final fun getNO_STORE ()Lelide/http/api/HttpHeaderValue;
	public final fun getPRIVATE ()Lelide/http/api/HttpHeaderValue;
	public final fun getPUBLIC ()Lelide/http/api/HttpHeaderValue;
	public final fun getSPANISH-PiB4aRU ()Ljava/lang/String;
	public final fun getTEXT-PwY7DFU ()Ljava/lang/String;
	public final fun getUTF8-Oyo3xqs ()Lkotlin/Pair;
	public final fun getXML-PwY7DFU ()Ljava/lang/String;
}

public final class elide/http/api/HttpHeaderValue$ContentLanguage {
	public static final field INSTANCE Lelide/http/api/HttpHeaderValue$ContentLanguage;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getAll ()Ljava/util/Collection;
	public final fun getENGLISH-PiB4aRU ()Ljava/lang/String;
	public final fun getFRENCH-PiB4aRU ()Ljava/lang/String;
	public final fun getGERMAN-PiB4aRU ()Ljava/lang/String;
	public final fun getSPANISH-PiB4aRU ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class elide/http/api/HttpHeaderValue$ContentType {
	public static final field INSTANCE Lelide/http/api/HttpHeaderValue$ContentType;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getAll ()Ljava/util/Collection;
	public final fun getHTML-PwY7DFU ()Ljava/lang/String;
	public final fun getJSON-PwY7DFU ()Ljava/lang/String;
	public final fun getTEXT-PwY7DFU ()Ljava/lang/String;
	public final fun getXML-PwY7DFU ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract interface class elide/http/api/HttpHeaders : elide/http/api/HttpMapping {
	public abstract fun contains (Lelide/http/api/HttpHeaders$HeaderName;)Z
	public abstract fun contains (Ljava/lang/String;)Z
	public abstract fun get (Lelide/http/api/HttpHeaders$HeaderName;)Lelide/http/api/HttpHeaders$HeaderValue;
	public abstract fun get (Ljava/lang/String;)Ljava/lang/String;
	public abstract fun getAll (Lelide/http/api/HttpHeaders$HeaderName;)Lkotlin/sequences/Sequence;
	public abstract fun getAll (Ljava/lang/String;)Lkotlin/sequences/Sequence;
}

public final class elide/http/api/HttpHeaders$DefaultImpls {
	public static fun contains (Lelide/http/api/HttpHeaders;Ljava/lang/String;)Z
	public static fun get (Lelide/http/api/HttpHeaders;Ljava/lang/String;)Ljava/lang/String;
	public static fun getAll (Lelide/http/api/HttpHeaders;Ljava/lang/String;)Lkotlin/sequences/Sequence;
}

public abstract interface class elide/http/api/HttpHeaders$Factory {
	public abstract fun of (Ljava/util/Collection;)Lelide/http/api/HttpHeaders;
	public abstract fun of (Ljava/util/Map;)Lelide/http/api/HttpHeaders;
	public abstract fun of (Lkotlin/sequences/Sequence;)Lelide/http/api/HttpHeaders;
	public abstract fun of ([Lkotlin/Pair;)Lelide/http/api/HttpHeaders;
}

public final class elide/http/api/HttpHeaders$HeaderName : java/lang/CharSequence, java/lang/Comparable {
	public static final field Companion Lelide/http/api/HttpHeaders$HeaderName$Companion;
	public synthetic fun <init> (Lelide/http/api/CaseInsensitiveHttpString;ZLkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun charAt (I)C
	public fun compareTo (Lelide/http/api/HttpHeaders$HeaderName;)I
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public fun equals (Ljava/lang/Object;)Z
	public fun get (I)C
	public fun getLength ()I
	public final fun getName ()Lelide/http/api/CaseInsensitiveHttpString;
	public fun hashCode ()I
	public final fun length ()I
	public static final fun of (Ljava/lang/String;)Lelide/http/api/HttpHeaders$HeaderName;
	public static final fun std$serverless (Ljava/lang/String;)Lelide/http/api/HttpHeaders$HeaderName;
	public fun subSequence (II)Ljava/lang/CharSequence;
	public fun toString ()Ljava/lang/String;
}

public final class elide/http/api/HttpHeaders$HeaderName$Companion {
	public final fun getAsHeaderName (Ljava/lang/String;)Lelide/http/api/HttpHeaders$HeaderName;
	public final fun of (Ljava/lang/String;)Lelide/http/api/HttpHeaders$HeaderName;
}

public abstract interface class elide/http/api/HttpHeaders$HeaderValue : java/lang/Comparable, java/util/Collection, kotlin/jvm/internal/markers/KMappedMarker {
	public static final field Companion Lelide/http/api/HttpHeaders$HeaderValue$Companion;
	public abstract fun compareTo (Lelide/http/api/HttpHeaders$HeaderValue;)I
	public abstract fun compareTo (Ljava/lang/String;)I
	public abstract fun contains (Ljava/lang/String;)Z
	public abstract fun containsAll (Ljava/util/Collection;)Z
	public abstract fun getAllValues ()Ljava/util/List;
	public abstract fun getAsString ()Ljava/lang/String;
	public abstract fun getSize ()I
	public abstract fun isEmpty ()Z
	public abstract fun iterator ()Ljava/util/Iterator;
	public static fun multi (Ljava/util/Collection;)Lelide/http/api/HttpHeaders$HeaderValue;
	public static fun multi ([Ljava/lang/String;)Lelide/http/api/HttpHeaders$HeaderValue;
	public static fun of (Ljava/util/Collection;)Lelide/http/api/HttpHeaders$HeaderValue;
	public static fun single (Ljava/lang/String;)Lelide/http/api/HttpHeaders$HeaderValue;
}

public final class elide/http/api/HttpHeaders$HeaderValue$Companion {
	public final fun multi (Ljava/util/Collection;)Lelide/http/api/HttpHeaders$HeaderValue;
	public final fun multi ([Ljava/lang/String;)Lelide/http/api/HttpHeaders$HeaderValue;
	public final fun of (Ljava/util/Collection;)Lelide/http/api/HttpHeaders$HeaderValue;
	public final fun single (Ljava/lang/String;)Lelide/http/api/HttpHeaders$HeaderValue;
}

public final class elide/http/api/HttpHeaders$HeaderValue$DefaultImpls {
	public static fun compareTo (Lelide/http/api/HttpHeaders$HeaderValue;Lelide/http/api/HttpHeaders$HeaderValue;)I
	public static fun compareTo (Lelide/http/api/HttpHeaders$HeaderValue;Ljava/lang/String;)I
	public static fun contains (Lelide/http/api/HttpHeaders$HeaderValue;Ljava/lang/String;)Z
	public static fun containsAll (Lelide/http/api/HttpHeaders$HeaderValue;Ljava/util/Collection;)Z
	public static fun getSize (Lelide/http/api/HttpHeaders$HeaderValue;)I
	public static fun isEmpty (Lelide/http/api/HttpHeaders$HeaderValue;)Z
	public static fun iterator (Lelide/http/api/HttpHeaders$HeaderValue;)Ljava/util/Iterator;
}

public final class elide/http/api/HttpHeaders$HeaderValue$MultiValue : elide/http/api/HttpHeaders$HeaderValue, java/lang/Comparable {
	public synthetic fun add (Ljava/lang/Object;)Z
	public fun add (Ljava/lang/String;)Z
	public fun addAll (Ljava/util/Collection;)Z
	public static final synthetic fun box-impl ([Ljava/lang/String;)Lelide/http/api/HttpHeaders$HeaderValue$MultiValue;
	public fun clear ()V
	public fun compareTo (Lelide/http/api/HttpHeaders$HeaderValue;)I
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public fun compareTo (Ljava/lang/String;)I
	public static fun compareTo-impl ([Ljava/lang/String;Lelide/http/api/HttpHeaders$HeaderValue;)I
	public static fun compareTo-impl ([Ljava/lang/String;Ljava/lang/String;)I
	public static fun constructor-impl ([Ljava/lang/String;)[Ljava/lang/String;
	public final fun contains (Ljava/lang/Object;)Z
	public fun contains (Ljava/lang/String;)Z
	public static fun contains-impl ([Ljava/lang/String;Ljava/lang/String;)Z
	public fun containsAll (Ljava/util/Collection;)Z
	public static fun containsAll-impl ([Ljava/lang/String;Ljava/util/Collection;)Z
	public fun equals (Ljava/lang/Object;)Z
	public static fun equals-impl ([Ljava/lang/String;Ljava/lang/Object;)Z
	public static final fun equals-impl0 ([Ljava/lang/String;[Ljava/lang/String;)Z
	public fun getAllValues ()Ljava/util/List;
	public static fun getAllValues-impl ([Ljava/lang/String;)Ljava/util/List;
	public fun getAsString ()Ljava/lang/String;
	public static fun getAsString-impl ([Ljava/lang/String;)Ljava/lang/String;
	public fun getSize ()I
	public static fun getSize-impl ([Ljava/lang/String;)I
	public fun hashCode ()I
	public static fun hashCode-impl ([Ljava/lang/String;)I
	public fun isEmpty ()Z
	public static fun isEmpty-impl ([Ljava/lang/String;)Z
	public fun iterator ()Ljava/util/Iterator;
	public static fun iterator-impl ([Ljava/lang/String;)Ljava/util/Iterator;
	public fun remove (Ljava/lang/Object;)Z
	public fun removeAll (Ljava/util/Collection;)Z
	public fun removeIf (Ljava/util/function/Predicate;)Z
	public fun retainAll (Ljava/util/Collection;)Z
	public synthetic fun size ()I
	public fun toArray ()[Ljava/lang/Object;
	public fun toArray ([Ljava/lang/Object;)[Ljava/lang/Object;
	public fun toString ()Ljava/lang/String;
	public static fun toString-impl ([Ljava/lang/String;)Ljava/lang/String;
	public final synthetic fun unbox-impl ()[Ljava/lang/String;
}

public final class elide/http/api/HttpHeaders$HeaderValue$SingleValue : elide/http/api/HttpHeaders$HeaderValue, java/lang/Comparable {
	public synthetic fun add (Ljava/lang/Object;)Z
	public fun add (Ljava/lang/String;)Z
	public fun addAll (Ljava/util/Collection;)Z
	public static final synthetic fun box-impl (Ljava/lang/String;)Lelide/http/api/HttpHeaders$HeaderValue$SingleValue;
	public fun clear ()V
	public fun compareTo (Lelide/http/api/HttpHeaders$HeaderValue;)I
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public fun compareTo (Ljava/lang/String;)I
	public static fun compareTo-impl (Ljava/lang/String;Lelide/http/api/HttpHeaders$HeaderValue;)I
	public static fun compareTo-impl (Ljava/lang/String;Ljava/lang/String;)I
	public static fun constructor-impl (Ljava/lang/String;)Ljava/lang/String;
	public final fun contains (Ljava/lang/Object;)Z
	public fun contains (Ljava/lang/String;)Z
	public static fun contains-impl (Ljava/lang/String;Ljava/lang/String;)Z
	public fun containsAll (Ljava/util/Collection;)Z
	public static fun containsAll-impl (Ljava/lang/String;Ljava/util/Collection;)Z
	public fun equals (Ljava/lang/Object;)Z
	public static fun equals-impl (Ljava/lang/String;Ljava/lang/Object;)Z
	public static final fun equals-impl0 (Ljava/lang/String;Ljava/lang/String;)Z
	public fun getAllValues ()Ljava/util/List;
	public static fun getAllValues-impl (Ljava/lang/String;)Ljava/util/List;
	public fun getAsString ()Ljava/lang/String;
	public static fun getAsString-impl (Ljava/lang/String;)Ljava/lang/String;
	public fun getSize ()I
	public static fun getSize-impl (Ljava/lang/String;)I
	public fun hashCode ()I
	public static fun hashCode-impl (Ljava/lang/String;)I
	public fun isEmpty ()Z
	public static fun isEmpty-impl (Ljava/lang/String;)Z
	public fun iterator ()Ljava/util/Iterator;
	public static fun iterator-impl (Ljava/lang/String;)Ljava/util/Iterator;
	public fun remove (Ljava/lang/Object;)Z
	public fun removeAll (Ljava/util/Collection;)Z
	public fun removeIf (Ljava/util/function/Predicate;)Z
	public fun retainAll (Ljava/util/Collection;)Z
	public synthetic fun size ()I
	public fun toArray ()[Ljava/lang/Object;
	public fun toArray ([Ljava/lang/Object;)[Ljava/lang/Object;
	public fun toString ()Ljava/lang/String;
	public static fun toString-impl (Ljava/lang/String;)Ljava/lang/String;
	public final synthetic fun unbox-impl ()Ljava/lang/String;
}

public abstract interface class elide/http/api/HttpMapping : java/util/Map, kotlin/jvm/internal/markers/KMappedMarker {
}

public abstract interface class elide/http/api/HttpMessage {
	public abstract fun getBody ()Lelide/http/api/HttpPayload;
	public abstract fun getHeaders ()Lelide/http/api/HttpHeaders;
	public abstract fun getMutable ()Z
	public abstract fun getType ()Lelide/http/api/HttpMessageType;
	public abstract fun getVersion ()Lelide/http/api/HttpVersion;
}

public final class elide/http/api/HttpMessage$DefaultImpls {
	public static fun getMutable (Lelide/http/api/HttpMessage;)Z
}

public final class elide/http/api/HttpMessageType : java/lang/Enum {
	public static final field REQUEST Lelide/http/api/HttpMessageType;
	public static final field RESPONSE Lelide/http/api/HttpMessageType;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public static fun valueOf (Ljava/lang/String;)Lelide/http/api/HttpMessageType;
	public static fun values ()[Lelide/http/api/HttpMessageType;
}

public abstract interface class elide/http/api/HttpMethod {
	public abstract fun getBody ()Z
	public abstract fun getIdempotent ()Z
	public abstract fun getName ()Ljava/lang/String;
	public abstract fun getWrite ()Z
}

public abstract interface class elide/http/api/HttpPayload {
	public abstract fun contentTypeOrDefault-PwY7DFU ()Ljava/lang/String;
	public abstract fun getBytes ()Lelide/http/HttpBytes;
	public abstract fun getContentType-8OAbpuQ ()Ljava/lang/String;
	public abstract fun getMutable ()Z
	public abstract fun getPresent ()Z
	public abstract fun getSize-s-VKNKU ()J
}

public final class elide/http/api/HttpPayload$DefaultImpls {
	public static fun contentTypeOrDefault-PwY7DFU (Lelide/http/api/HttpPayload;)Ljava/lang/String;
}

public abstract interface class elide/http/api/HttpRequest : elide/http/api/HttpMessage {
	public abstract fun getMethod ()Lelide/http/api/HttpMethod;
	public abstract fun getMutable ()Z
	public abstract fun getPath ()Ljava/lang/String;
	public abstract fun getQuery ()Lelide/http/api/HttpMapping;
	public abstract fun getType ()Lelide/http/api/HttpMessageType;
	public abstract fun getUrl ()Lelide/net/api/URL;
}

public final class elide/http/api/HttpRequest$DefaultImpls {
	public static fun getMutable (Lelide/http/api/HttpRequest;)Z
	public static fun getType (Lelide/http/api/HttpRequest;)Lelide/http/api/HttpMessageType;
}

public final class elide/http/api/HttpRequest$Defaults {
	public static final field INSTANCE Lelide/http/api/HttpRequest$Defaults;
	public static final field PATH Ljava/lang/String;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getMETHOD ()Lelide/http/api/HttpMethod;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract interface class elide/http/api/HttpRequest$Factory {
	public abstract fun copy (Lelide/http/api/HttpRequest;Lelide/http/api/HttpMethod;Ljava/lang/String;Lelide/http/api/HttpMapping;)Lelide/http/api/HttpRequest;
	public abstract fun create (Lelide/http/api/HttpMethod;Ljava/lang/String;Lelide/http/api/HttpMapping;)Lelide/http/api/HttpRequest;
}

public final class elide/http/api/HttpRequest$Factory$DefaultImpls {
	public static synthetic fun copy$default (Lelide/http/api/HttpRequest$Factory;Lelide/http/api/HttpRequest;Lelide/http/api/HttpMethod;Ljava/lang/String;Lelide/http/api/HttpMapping;ILjava/lang/Object;)Lelide/http/api/HttpRequest;
	public static synthetic fun create$default (Lelide/http/api/HttpRequest$Factory;Lelide/http/api/HttpMethod;Ljava/lang/String;Lelide/http/api/HttpMapping;ILjava/lang/Object;)Lelide/http/api/HttpRequest;
}

public abstract interface class elide/http/api/HttpResponse : elide/http/api/HttpMessage {
	public abstract fun getStatus ()Lelide/http/api/HttpStatus;
	public abstract fun getTrailers ()Lelide/http/api/HttpHeaders;
	public abstract fun getType ()Lelide/http/api/HttpMessageType;
}

public final class elide/http/api/HttpResponse$DefaultImpls {
	public static fun getMutable (Lelide/http/api/HttpResponse;)Z
	public static fun getType (Lelide/http/api/HttpResponse;)Lelide/http/api/HttpMessageType;
}

public abstract interface class elide/http/api/HttpResponse$Factory {
}

public abstract interface class elide/http/api/HttpStatus {
	public abstract fun getCode-pVg5ArA ()I
	public abstract fun getText ()Ljava/lang/String;
	public abstract fun getType ()Lelide/http/api/HttpStatus$Type;
}

public final class elide/http/api/HttpStatus$Type : java/lang/Enum {
	public static final field CLIENT_ERROR Lelide/http/api/HttpStatus$Type;
	public static final field Companion Lelide/http/api/HttpStatus$Type$Companion;
	public static final field INFORMATIONAL Lelide/http/api/HttpStatus$Type;
	public static final field REDIRECTION Lelide/http/api/HttpStatus$Type;
	public static final field SERVER_ERROR Lelide/http/api/HttpStatus$Type;
	public static final field SUCCESSFUL Lelide/http/api/HttpStatus$Type;
	public static final fun fromCode-WZ4Q5Ns (I)Lelide/http/api/HttpStatus$Type;
	public final fun getDescription ()Ljava/lang/String;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public final fun getErr ()Z
	public final fun getRange ()Lkotlin/ranges/IntRange;
	public final fun getServerFault ()Z
	public static fun valueOf (Ljava/lang/String;)Lelide/http/api/HttpStatus$Type;
	public static fun values ()[Lelide/http/api/HttpStatus$Type;
}

public final class elide/http/api/HttpStatus$Type$Companion {
	public final fun fromCode-WZ4Q5Ns (I)Lelide/http/api/HttpStatus$Type;
}

public final class elide/http/api/HttpToken : elide/http/api/HeaderValueTokenType, elide/http/api/HttpHeaderValue {
	public static final synthetic fun box-impl (Ljava/lang/String;)Lelide/http/api/HttpToken;
	public fun equals (Ljava/lang/Object;)Z
	public static fun equals-impl (Ljava/lang/String;Ljava/lang/Object;)Z
	public static final fun equals-impl0 (Ljava/lang/String;Ljava/lang/String;)Z
	public fun getAllValues ()Ljava/util/Collection;
	public static fun getAllValues-impl (Ljava/lang/String;)Ljava/util/Collection;
	public fun getAsString ()Ljava/lang/String;
	public static fun getAsString-impl (Ljava/lang/String;)Ljava/lang/String;
	public synthetic fun getToken ()Ljava/lang/Object;
	public fun getToken ()Ljava/lang/String;
	public synthetic fun getValue ()Ljava/lang/Object;
	public fun getValue ()Ljava/lang/String;
	public static fun getValue-impl (Ljava/lang/String;)Ljava/lang/String;
	public fun hashCode ()I
	public static fun hashCode-impl (Ljava/lang/String;)I
	public fun toString ()Ljava/lang/String;
	public static fun toString-impl (Ljava/lang/String;)Ljava/lang/String;
	public final synthetic fun unbox-impl ()Ljava/lang/String;
}

public final class elide/http/api/HttpTokenList : elide/http/api/HeaderValueMultiTokenType, elide/http/api/HttpHeaderValue {
	public static final synthetic fun box-impl (Ljava/util/List;)Lelide/http/api/HttpTokenList;
	public fun equals (Ljava/lang/Object;)Z
	public static fun equals-impl (Ljava/util/List;Ljava/lang/Object;)Z
	public static final fun equals-impl0 (Ljava/util/List;Ljava/util/List;)Z
	public fun getAllValues ()Ljava/util/Collection;
	public static fun getAllValues-impl (Ljava/util/List;)Ljava/util/Collection;
	public fun getAsString ()Ljava/lang/String;
	public static fun getAsString-impl (Ljava/util/List;)Ljava/lang/String;
	public synthetic fun getTokens ()Ljava/util/Collection;
	public fun getTokens ()Ljava/util/List;
	public synthetic fun getValue ()Ljava/lang/Object;
	public fun getValue ()Ljava/lang/String;
	public static fun getValue-impl (Ljava/util/List;)Ljava/lang/String;
	public fun hashCode ()I
	public static fun hashCode-impl (Ljava/util/List;)I
	public fun toString ()Ljava/lang/String;
	public static fun toString-impl (Ljava/util/List;)Ljava/lang/String;
	public final synthetic fun unbox-impl ()Ljava/util/List;
}

public final class elide/http/api/HttpVersion : java/lang/Enum {
	public static final field HTTP_1_1 Lelide/http/api/HttpVersion;
	public static final field HTTP_2 Lelide/http/api/HttpVersion;
	public static final field HTTP_3 Lelide/http/api/HttpVersion;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public static fun valueOf (Ljava/lang/String;)Lelide/http/api/HttpVersion;
	public static fun values ()[Lelide/http/api/HttpVersion;
}

public final class elide/http/api/Language : elide/http/api/HeaderValueTokenType, elide/http/api/HttpHeaderValue {
	public static final synthetic fun box-impl (Ljava/lang/String;)Lelide/http/api/Language;
	public fun equals (Ljava/lang/Object;)Z
	public static fun equals-impl (Ljava/lang/String;Ljava/lang/Object;)Z
	public static final fun equals-impl0 (Ljava/lang/String;Ljava/lang/String;)Z
	public fun getAllValues ()Ljava/util/Collection;
	public static fun getAllValues-impl (Ljava/lang/String;)Ljava/util/Collection;
	public fun getAsString ()Ljava/lang/String;
	public static fun getAsString-impl (Ljava/lang/String;)Ljava/lang/String;
	public synthetic fun getToken ()Ljava/lang/Object;
	public fun getToken ()Ljava/lang/String;
	public synthetic fun getValue ()Ljava/lang/Object;
	public fun getValue ()Ljava/lang/String;
	public static fun getValue-impl (Ljava/lang/String;)Ljava/lang/String;
	public fun hashCode ()I
	public static fun hashCode-impl (Ljava/lang/String;)I
	public fun toString ()Ljava/lang/String;
	public static fun toString-impl (Ljava/lang/String;)Ljava/lang/String;
	public final synthetic fun unbox-impl ()Ljava/lang/String;
}

public final class elide/http/api/Mimetype : elide/http/api/HeaderValueTokenType, elide/http/api/HttpHeaderValue {
	public static final field Companion Lelide/http/api/Mimetype$Companion;
	public static final synthetic fun box-impl (Ljava/lang/String;)Lelide/http/api/Mimetype;
	public fun equals (Ljava/lang/Object;)Z
	public static fun equals-impl (Ljava/lang/String;Ljava/lang/Object;)Z
	public static final fun equals-impl0 (Ljava/lang/String;Ljava/lang/String;)Z
	public fun getAllValues ()Ljava/util/Collection;
	public static fun getAllValues-impl (Ljava/lang/String;)Ljava/util/Collection;
	public fun getAsString ()Ljava/lang/String;
	public static fun getAsString-impl (Ljava/lang/String;)Ljava/lang/String;
	public synthetic fun getToken ()Ljava/lang/Object;
	public fun getToken ()Ljava/lang/String;
	public synthetic fun getValue ()Ljava/lang/Object;
	public fun getValue ()Ljava/lang/String;
	public static fun getValue-impl (Ljava/lang/String;)Ljava/lang/String;
	public fun hashCode ()I
	public static fun hashCode-impl (Ljava/lang/String;)I
	public fun toString ()Ljava/lang/String;
	public static fun toString-impl (Ljava/lang/String;)Ljava/lang/String;
	public final synthetic fun unbox-impl ()Ljava/lang/String;
}

public final class elide/http/api/Mimetype$Companion {
	public final fun getOctetStream-PwY7DFU ()Ljava/lang/String;
	public final fun getText-PwY7DFU ()Ljava/lang/String;
}

public abstract interface class elide/http/api/MutableHttpHeaders : elide/http/api/HttpHeaders, elide/http/api/MutableHttpMapping {
	public abstract fun add (Lelide/http/api/HttpHeaders$HeaderName;Ljava/lang/String;)V
	public abstract fun add (Ljava/lang/String;Ljava/lang/String;)V
	public abstract fun remove (Lelide/http/api/HttpHeaders$HeaderName;)Lelide/http/api/HttpHeaders$HeaderValue;
	public abstract fun remove (Lelide/http/api/HttpHeaders$HeaderName;Ljava/lang/String;)V
	public abstract fun set (Lelide/http/api/HttpHeaders$HeaderName;Ljava/lang/String;)V
	public abstract fun set (Ljava/lang/String;Ljava/lang/String;)V
}

public final class elide/http/api/MutableHttpHeaders$DefaultImpls {
	public static fun add (Lelide/http/api/MutableHttpHeaders;Ljava/lang/String;Ljava/lang/String;)V
	public static fun contains (Lelide/http/api/MutableHttpHeaders;Ljava/lang/String;)Z
	public static fun get (Lelide/http/api/MutableHttpHeaders;Ljava/lang/String;)Ljava/lang/String;
	public static fun getAll (Lelide/http/api/MutableHttpHeaders;Ljava/lang/String;)Lkotlin/sequences/Sequence;
	public static fun set (Lelide/http/api/MutableHttpHeaders;Ljava/lang/String;Ljava/lang/String;)V
}

public abstract interface class elide/http/api/MutableHttpHeaders$Factory : elide/http/api/HttpHeaders$Factory {
	public abstract fun create ()Lelide/http/api/MutableHttpHeaders;
	public abstract fun of (Ljava/util/Collection;)Lelide/http/api/MutableHttpHeaders;
	public abstract fun of (Ljava/util/Map;)Lelide/http/api/MutableHttpHeaders;
	public abstract fun of (Lkotlin/sequences/Sequence;)Lelide/http/api/MutableHttpHeaders;
	public abstract fun of ([Lkotlin/Pair;)Lelide/http/api/MutableHttpHeaders;
}

public abstract interface class elide/http/api/MutableHttpMapping : elide/http/api/HttpMapping, java/util/Map, kotlin/jvm/internal/markers/KMutableMap {
}

public abstract interface class elide/http/api/MutableHttpMessage : elide/http/api/HttpMessage {
	public abstract fun getBody ()Lelide/http/api/MutableHttpPayload;
	public abstract fun getHeaders ()Lelide/http/api/MutableHttpHeaders;
	public abstract fun getMutable ()Z
}

public final class elide/http/api/MutableHttpMessage$DefaultImpls {
	public static fun getMutable (Lelide/http/api/MutableHttpMessage;)Z
}

public abstract interface class elide/http/api/MutableHttpPayload : elide/http/api/HttpPayload {
}

public final class elide/http/api/MutableHttpPayload$DefaultImpls {
	public static fun contentTypeOrDefault-PwY7DFU (Lelide/http/api/MutableHttpPayload;)Ljava/lang/String;
}

public abstract interface class elide/http/api/MutableHttpRequest : elide/http/api/HttpRequest, elide/http/api/MutableHttpMessage {
	public abstract fun getMethod ()Lelide/http/api/HttpMethod;
	public abstract fun getMutable ()Z
	public abstract fun getPath ()Ljava/lang/String;
	public abstract fun getQuery ()Lelide/http/api/MutableHttpMapping;
	public abstract fun getUrl ()Lelide/net/api/URL;
	public abstract fun setMethod (Lelide/http/api/HttpMethod;)V
	public abstract fun setPath (Ljava/lang/String;)V
	public abstract fun setQuery (Lelide/http/api/MutableHttpMapping;)V
	public abstract fun setUrl (Lelide/net/api/URL;)V
}

public final class elide/http/api/MutableHttpRequest$DefaultImpls {
	public static fun getMutable (Lelide/http/api/MutableHttpRequest;)Z
	public static fun getType (Lelide/http/api/MutableHttpRequest;)Lelide/http/api/HttpMessageType;
}

public abstract interface class elide/http/api/MutableHttpRequest$Factory : elide/http/api/HttpRequest$Factory {
	public abstract fun copy (Lelide/http/api/HttpRequest;Lelide/http/api/HttpMethod;Ljava/lang/String;Lelide/http/api/HttpMapping;)Lelide/http/api/MutableHttpRequest;
	public abstract fun create (Lelide/http/api/HttpMethod;Ljava/lang/String;Lelide/http/api/HttpMapping;)Lelide/http/api/MutableHttpRequest;
}

public abstract interface class elide/http/api/MutableHttpResponse : elide/http/api/HttpResponse, elide/http/api/MutableHttpMessage {
	public abstract fun getStatus ()Lelide/http/api/HttpStatus;
	public abstract fun getTrailers ()Lelide/http/api/HttpHeaders;
	public abstract fun setStatus (Lelide/http/api/HttpStatus;)V
}

public final class elide/http/api/MutableHttpResponse$DefaultImpls {
	public static fun getMutable (Lelide/http/api/MutableHttpResponse;)Z
	public static fun getType (Lelide/http/api/MutableHttpResponse;)Lelide/http/api/HttpMessageType;
}

public abstract interface class elide/http/api/MutableHttpResponse$Factory : elide/http/api/HttpResponse$Factory {
}

public final class elide/http/api/StandardHttpMethod : java/lang/Enum, elide/http/api/HttpMethod {
	public static final field CONNECT Lelide/http/api/StandardHttpMethod;
	public static final field Companion Lelide/http/api/StandardHttpMethod$Companion;
	public static final field DELETE Lelide/http/api/StandardHttpMethod;
	public static final field GET Lelide/http/api/StandardHttpMethod;
	public static final field HEAD Lelide/http/api/StandardHttpMethod;
	public static final field OPTIONS Lelide/http/api/StandardHttpMethod;
	public static final field PATCH Lelide/http/api/StandardHttpMethod;
	public static final field POST Lelide/http/api/StandardHttpMethod;
	public static final field PUT Lelide/http/api/StandardHttpMethod;
	public static final field TRACE Lelide/http/api/StandardHttpMethod;
	public fun getBody ()Z
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public fun getIdempotent ()Z
	public synthetic fun getName ()Ljava/lang/String;
	public static final fun getReadMethods ()Ljava/util/Set;
	public fun getWrite ()Z
	public static final fun getWriteMethods ()Ljava/util/Set;
	public static fun valueOf (Ljava/lang/String;)Lelide/http/api/StandardHttpMethod;
	public static fun values ()[Lelide/http/api/StandardHttpMethod;
}

public final class elide/http/api/StandardHttpMethod$Companion {
	public final fun getReadMethods ()Ljava/util/Set;
	public final fun getWriteMethods ()Ljava/util/Set;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/net/URL : elide/net/api/URL {
	public static final synthetic fun box-impl (Lelide/net/URL$ParsedURL;)Lelide/net/URL;
	public static fun constructor-impl (Lelide/net/URL$ParsedURL;)Lelide/net/URL$ParsedURL;
	public fun equals (Ljava/lang/Object;)Z
	public static fun equals-impl (Lelide/net/URL$ParsedURL;Ljava/lang/Object;)Z
	public static final fun equals-impl0 (Lelide/net/URL$ParsedURL;Lelide/net/URL$ParsedURL;)Z
	public final fun getUrlInfo ()Lelide/net/URL$ParsedURL;
	public fun hashCode ()I
	public static fun hashCode-impl (Lelide/net/URL$ParsedURL;)I
	public fun toString ()Ljava/lang/String;
	public static fun toString-impl (Lelide/net/URL$ParsedURL;)Ljava/lang/String;
	public final synthetic fun unbox-impl ()Lelide/net/URL$ParsedURL;
}

public abstract class elide/net/URL$ParsedURL : elide/net/api/URLInfo {
}

public abstract interface class elide/net/api/URL {
}

public abstract interface class elide/net/api/URLInfo {
}

