public abstract class elide/tooling/AbstractJvmMultiPathContainer : elide/tooling/MultiPath$MultiPathContainer {
	public static final field Companion Lelide/tooling/AbstractJvmMultiPathContainer$Companion;
	public synthetic fun <init> (ILkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun add (Lelide/tooling/MultiPath$Entry;)Z
	public synthetic fun add (Ljava/lang/Object;)Z
	public fun addAll (Ljava/util/Collection;)Z
	public fun clear ()V
	public fun remove (Ljava/lang/Object;)Z
	public fun removeAll (Ljava/util/Collection;)Z
	public fun removeIf (Ljava/util/function/Predicate;)Z
	public fun retainAll (Ljava/util/Collection;)Z
	public fun toArray ()[Ljava/lang/Object;
	public fun toArray ([Ljava/lang/Object;)[Ljava/lang/Object;
	public static final synthetic fun write$Self (Lelide/tooling/AbstractJvmMultiPathContainer;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class elide/tooling/AbstractJvmMultiPathContainer$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract class elide/tooling/AbstractTool : elide/tooling/Tool$EmbeddedTool {
	public static final field Companion Lelide/tooling/AbstractTool$Companion;
	protected fun <init> (Lelide/tooling/Tool$CommandLineTool;)V
	public final fun delegateToTool (Ljava/nio/file/Path;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun embeddedToolError (Lelide/tooling/Tool$CommandLineTool;Ljava/lang/String;ILjava/lang/Throwable;)Ljava/lang/Void;
	public fun getDescription ()Ljava/lang/String;
	public fun getDocs ()Ljava/net/URI;
	public fun getInfo ()Lelide/tooling/Tool$CommandLineTool;
	public fun getLabel ()Ljava/lang/String;
	public fun getLogging ()Lelide/runtime/Logger;
	public fun getName ()Ljava/lang/String;
	public fun getVersion ()Ljava/lang/String;
	public abstract fun invoke (Lelide/tooling/AbstractTool$EmbeddedToolState;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun supported ()Z
}

public final class elide/tooling/AbstractTool$Companion {
	public final fun embeddedToolError (Lelide/tooling/Tool$CommandLineTool;Ljava/lang/String;ILjava/lang/Throwable;)Ljava/lang/Void;
	public static synthetic fun embeddedToolError$default (Lelide/tooling/AbstractTool$Companion;Lelide/tooling/Tool$CommandLineTool;Ljava/lang/String;ILjava/lang/Throwable;ILjava/lang/Object;)Ljava/lang/Void;
}

public class elide/tooling/AbstractTool$EmbeddedToolError : java/lang/RuntimeException {
	public fun <init> (Lelide/tooling/Tool$CommandLineTool;ILjava/lang/String;Ljava/lang/Throwable;)V
	public synthetic fun <init> (Lelide/tooling/Tool$CommandLineTool;ILjava/lang/String;Ljava/lang/Throwable;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getExitCode ()I
	public final fun getTool ()Lelide/tooling/Tool$CommandLineTool;
}

public abstract interface class elide/tooling/AbstractTool$EmbeddedToolState {
	public fun getProject ()Lelide/tooling/project/ElideProject;
	public abstract fun getResourcesPath ()Ljava/nio/file/Path;
}

public abstract interface class elide/tooling/Argument : elide/tooling/Arguments {
	public static final field Companion Lelide/tooling/Argument$Companion;
	public abstract fun asArgumentString (Lelide/tooling/ArgumentContext;)Ljava/lang/String;
	public static fun of (Ljava/lang/String;)Lelide/tooling/Argument;
	public static fun of (Lkotlin/Pair;)Lelide/tooling/Argument;
}

public final class elide/tooling/Argument$Companion {
	public final fun of (Ljava/lang/String;)Lelide/tooling/Argument;
	public final fun of (Lkotlin/Pair;)Lelide/tooling/Argument;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/Argument$KeyValueArg : elide/tooling/Argument {
	public fun asArgumentSequence ()Lkotlin/sequences/Sequence;
	public static fun asArgumentSequence-impl (Lkotlin/Pair;)Lkotlin/sequences/Sequence;
	public fun asArgumentString (Lelide/tooling/ArgumentContext;)Ljava/lang/String;
	public static fun asArgumentString-impl (Lkotlin/Pair;Lelide/tooling/ArgumentContext;)Ljava/lang/String;
	public static final synthetic fun box-impl (Lkotlin/Pair;)Lelide/tooling/Argument$KeyValueArg;
	public fun equals (Ljava/lang/Object;)Z
	public static fun equals-impl (Lkotlin/Pair;Ljava/lang/Object;)Z
	public static final fun equals-impl0 (Lkotlin/Pair;Lkotlin/Pair;)Z
	public static final fun getName-impl (Lkotlin/Pair;)Ljava/lang/String;
	public static final fun getValue-impl (Lkotlin/Pair;)Ljava/lang/String;
	public fun hashCode ()I
	public static fun hashCode-impl (Lkotlin/Pair;)I
	public fun toString ()Ljava/lang/String;
	public static fun toString-impl (Lkotlin/Pair;)Ljava/lang/String;
	public final synthetic fun unbox-impl ()Lkotlin/Pair;
}

public final class elide/tooling/Argument$StringArg : elide/tooling/Argument {
	public fun asArgumentSequence ()Lkotlin/sequences/Sequence;
	public static fun asArgumentSequence-impl (Ljava/lang/String;)Lkotlin/sequences/Sequence;
	public fun asArgumentString (Lelide/tooling/ArgumentContext;)Ljava/lang/String;
	public static fun asArgumentString-impl (Ljava/lang/String;Lelide/tooling/ArgumentContext;)Ljava/lang/String;
	public static final synthetic fun box-impl (Ljava/lang/String;)Lelide/tooling/Argument$StringArg;
	public fun equals (Ljava/lang/Object;)Z
	public static fun equals-impl (Ljava/lang/String;Ljava/lang/Object;)Z
	public static final fun equals-impl0 (Ljava/lang/String;Ljava/lang/String;)Z
	public fun hashCode ()I
	public static fun hashCode-impl (Ljava/lang/String;)I
	public fun toString ()Ljava/lang/String;
	public static fun toString-impl (Ljava/lang/String;)Ljava/lang/String;
	public final synthetic fun unbox-impl ()Ljava/lang/String;
}

public abstract interface class elide/tooling/ArgumentContext {
	public static final field Companion Lelide/tooling/ArgumentContext$Companion;
	public abstract fun getArgSeparator ()C
	public abstract fun getKvToken ()C
	public static fun of (CC)Lelide/tooling/ArgumentContext;
}

public final class elide/tooling/ArgumentContext$Companion {
	public final fun of (CC)Lelide/tooling/ArgumentContext;
}

public final class elide/tooling/ArgumentContext$Default : elide/tooling/ArgumentContext {
	public static final field INSTANCE Lelide/tooling/ArgumentContext$Default;
	public fun equals (Ljava/lang/Object;)Z
	public fun getArgSeparator ()C
	public fun getKvToken ()C
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/ArgumentExtensionsKt {
	public static final fun asArgumentString (Lelide/tooling/Argument;Lelide/tooling/ArgumentContext;)Ljava/lang/String;
	public static final fun asArgumentString (Lelide/tooling/Arguments$Suite;Lelide/tooling/ArgumentContext;)Ljava/lang/String;
	public static synthetic fun asArgumentString$default (Lelide/tooling/Argument;Lelide/tooling/ArgumentContext;ILjava/lang/Object;)Ljava/lang/String;
	public static synthetic fun asArgumentString$default (Lelide/tooling/Arguments$Suite;Lelide/tooling/ArgumentContext;ILjava/lang/Object;)Ljava/lang/String;
	public static final fun toStringBuilder (Lelide/tooling/Arguments$Suite;Lelide/tooling/ArgumentContext;Ljava/lang/StringBuilder;)Ljava/lang/StringBuilder;
	public static synthetic fun toStringBuilder$default (Lelide/tooling/Arguments$Suite;Lelide/tooling/ArgumentContext;Ljava/lang/StringBuilder;ILjava/lang/Object;)Ljava/lang/StringBuilder;
}

public abstract interface class elide/tooling/Arguments {
	public static final field Companion Lelide/tooling/Arguments$Companion;
	public fun asArgumentList (Lelide/tooling/ArgumentContext;)Ljava/util/List;
	public static synthetic fun asArgumentList$default (Lelide/tooling/Arguments;Lelide/tooling/ArgumentContext;ILjava/lang/Object;)Ljava/util/List;
	public abstract fun asArgumentSequence ()Lkotlin/sequences/Sequence;
	public fun asArgumentStrings (Lelide/tooling/ArgumentContext;)Lkotlin/sequences/Sequence;
	public static synthetic fun asArgumentStrings$default (Lelide/tooling/Arguments;Lelide/tooling/ArgumentContext;ILjava/lang/Object;)Lkotlin/sequences/Sequence;
	public static fun empty ()Lelide/tooling/Arguments$EmptyArguments;
	public static fun from (Ljava/util/Collection;)Lelide/tooling/Arguments$Suite;
	public static fun from (Lkotlin/sequences/Sequence;)Lelide/tooling/Arguments$Suite;
	public fun get (I)Lelide/tooling/Argument;
	public static fun of (Ljava/lang/String;)Lelide/tooling/Arguments;
	public static fun of (Ljava/util/Collection;)Lelide/tooling/Arguments$Suite;
	public static fun of (Lkotlin/Pair;)Lelide/tooling/Arguments$Suite;
	public static fun of (Lkotlin/sequences/Sequence;)Lelide/tooling/Arguments$Suite;
}

public final class elide/tooling/Arguments$ArgumentList : elide/tooling/Arguments$Suite, java/util/Collection, kotlin/jvm/internal/markers/KMappedMarker {
	public fun add (Lelide/tooling/Argument;)Z
	public synthetic fun add (Ljava/lang/Object;)Z
	public fun addAll (Ljava/util/Collection;)Z
	public fun asArgumentSequence ()Lkotlin/sequences/Sequence;
	public static fun asArgumentSequence-impl (Lkotlinx/collections/immutable/PersistentList;)Lkotlin/sequences/Sequence;
	public static final synthetic fun box-impl (Lkotlinx/collections/immutable/PersistentList;)Lelide/tooling/Arguments$ArgumentList;
	public fun clear ()V
	public fun contains (Lelide/tooling/Argument;)Z
	public final fun contains (Ljava/lang/Object;)Z
	public static fun contains-impl (Lkotlinx/collections/immutable/PersistentList;Lelide/tooling/Argument;)Z
	public fun containsAll (Ljava/util/Collection;)Z
	public static fun containsAll-impl (Lkotlinx/collections/immutable/PersistentList;Ljava/util/Collection;)Z
	public fun equals (Ljava/lang/Object;)Z
	public static fun equals-impl (Lkotlinx/collections/immutable/PersistentList;Ljava/lang/Object;)Z
	public static final fun equals-impl0 (Lkotlinx/collections/immutable/PersistentList;Lkotlinx/collections/immutable/PersistentList;)Z
	public fun getSize ()I
	public static fun getSize-impl (Lkotlinx/collections/immutable/PersistentList;)I
	public fun hashCode ()I
	public static fun hashCode-impl (Lkotlinx/collections/immutable/PersistentList;)I
	public fun isEmpty ()Z
	public static fun isEmpty-impl (Lkotlinx/collections/immutable/PersistentList;)Z
	public fun iterator ()Ljava/util/Iterator;
	public static fun iterator-impl (Lkotlinx/collections/immutable/PersistentList;)Ljava/util/Iterator;
	public fun remove (Ljava/lang/Object;)Z
	public fun removeAll (Ljava/util/Collection;)Z
	public fun removeIf (Ljava/util/function/Predicate;)Z
	public fun retainAll (Ljava/util/Collection;)Z
	public synthetic fun size ()I
	public fun toArray ()[Ljava/lang/Object;
	public fun toArray ([Ljava/lang/Object;)[Ljava/lang/Object;
	public fun toMutable ()Lelide/tooling/MutableArguments;
	public static fun toMutable-impl (Lkotlinx/collections/immutable/PersistentList;)Lelide/tooling/MutableArguments;
	public fun toString ()Ljava/lang/String;
	public static fun toString-impl (Lkotlinx/collections/immutable/PersistentList;)Ljava/lang/String;
	public final synthetic fun unbox-impl ()Lkotlinx/collections/immutable/PersistentList;
}

public final class elide/tooling/Arguments$Companion {
	public final fun empty ()Lelide/tooling/Arguments$EmptyArguments;
	public final fun from (Ljava/util/Collection;)Lelide/tooling/Arguments$Suite;
	public final fun from (Lkotlin/sequences/Sequence;)Lelide/tooling/Arguments$Suite;
	public final fun of (Ljava/lang/String;)Lelide/tooling/Arguments;
	public final fun of (Ljava/util/Collection;)Lelide/tooling/Arguments$Suite;
	public final fun of (Lkotlin/Pair;)Lelide/tooling/Arguments$Suite;
	public final fun of (Lkotlin/sequences/Sequence;)Lelide/tooling/Arguments$Suite;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/Arguments$EmptyArguments : elide/tooling/Arguments$Suite {
	public static final field INSTANCE Lelide/tooling/Arguments$EmptyArguments;
	public fun add (Lelide/tooling/Argument;)Z
	public synthetic fun add (Ljava/lang/Object;)Z
	public fun addAll (Ljava/util/Collection;)Z
	public fun asArgumentSequence ()Lkotlin/sequences/Sequence;
	public fun clear ()V
	public fun contains (Lelide/tooling/Argument;)Z
	public final fun contains (Ljava/lang/Object;)Z
	public fun containsAll (Ljava/util/Collection;)Z
	public fun equals (Ljava/lang/Object;)Z
	public fun getSize ()I
	public fun hashCode ()I
	public fun isEmpty ()Z
	public fun iterator ()Ljava/util/Iterator;
	public fun remove (Ljava/lang/Object;)Z
	public fun removeAll (Ljava/util/Collection;)Z
	public fun removeIf (Ljava/util/function/Predicate;)Z
	public fun retainAll (Ljava/util/Collection;)Z
	public final fun size ()I
	public fun toArray ()[Ljava/lang/Object;
	public fun toArray ([Ljava/lang/Object;)[Ljava/lang/Object;
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/Arguments$SingleArgument : elide/tooling/Arguments$Suite {
	public fun add (Lelide/tooling/Argument;)Z
	public synthetic fun add (Ljava/lang/Object;)Z
	public fun addAll (Ljava/util/Collection;)Z
	public fun asArgumentSequence ()Lkotlin/sequences/Sequence;
	public static fun asArgumentSequence-impl (Lelide/tooling/Argument;)Lkotlin/sequences/Sequence;
	public static final synthetic fun box-impl (Lelide/tooling/Argument;)Lelide/tooling/Arguments$SingleArgument;
	public fun clear ()V
	public fun contains (Lelide/tooling/Argument;)Z
	public final fun contains (Ljava/lang/Object;)Z
	public static fun contains-impl (Lelide/tooling/Argument;Lelide/tooling/Argument;)Z
	public fun containsAll (Ljava/util/Collection;)Z
	public static fun containsAll-impl (Lelide/tooling/Argument;Ljava/util/Collection;)Z
	public fun equals (Ljava/lang/Object;)Z
	public static fun equals-impl (Lelide/tooling/Argument;Ljava/lang/Object;)Z
	public static final fun equals-impl0 (Lelide/tooling/Argument;Lelide/tooling/Argument;)Z
	public fun getSize ()I
	public static fun getSize-impl (Lelide/tooling/Argument;)I
	public fun hashCode ()I
	public static fun hashCode-impl (Lelide/tooling/Argument;)I
	public fun isEmpty ()Z
	public static fun isEmpty-impl (Lelide/tooling/Argument;)Z
	public fun iterator ()Ljava/util/Iterator;
	public static fun iterator-impl (Lelide/tooling/Argument;)Ljava/util/Iterator;
	public fun remove (Ljava/lang/Object;)Z
	public fun removeAll (Ljava/util/Collection;)Z
	public fun removeIf (Ljava/util/function/Predicate;)Z
	public fun retainAll (Ljava/util/Collection;)Z
	public synthetic fun size ()I
	public fun toArray ()[Ljava/lang/Object;
	public fun toArray ([Ljava/lang/Object;)[Ljava/lang/Object;
	public fun toString ()Ljava/lang/String;
	public static fun toString-impl (Lelide/tooling/Argument;)Ljava/lang/String;
	public final synthetic fun unbox-impl ()Lelide/tooling/Argument;
}

public abstract interface class elide/tooling/Arguments$Suite : elide/tooling/Arguments, java/util/Collection, kotlin/jvm/internal/markers/KMappedMarker {
	public fun toMutable ()Lelide/tooling/MutableArguments;
}

public final class elide/tooling/BuildMode : java/lang/Enum {
	public static final field Companion Lelide/tooling/BuildMode$Companion;
	public static final field Debug Lelide/tooling/BuildMode;
	public static final field Development Lelide/tooling/BuildMode;
	public static final field Release Lelide/tooling/BuildMode;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public static fun valueOf (Ljava/lang/String;)Lelide/tooling/BuildMode;
	public static fun values ()[Lelide/tooling/BuildMode;
}

public final class elide/tooling/BuildMode$Companion {
	public final fun default ()Lelide/tooling/BuildMode;
	public final fun fromString (Ljava/lang/String;)Lelide/tooling/BuildMode;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/Classpath : elide/tooling/MultiPath$MultiPathContainer {
	public static final field Companion Lelide/tooling/Classpath$Companion;
	public synthetic fun <init> (Lelide/tooling/JvmMultiPathContainer;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun add (Lelide/tooling/MultiPath$Entry;)Z
	public synthetic fun add (Ljava/lang/Object;)Z
	public fun addAll (Ljava/util/Collection;)Z
	public fun asArgumentList (Lelide/tooling/ArgumentContext;)Ljava/util/List;
	public fun asArgumentSequence ()Lkotlin/sequences/Sequence;
	public fun asArgumentString (Lelide/tooling/ArgumentContext;)Ljava/lang/String;
	public fun asArgumentStrings (Lelide/tooling/ArgumentContext;)Lkotlin/sequences/Sequence;
	public fun asList ()Ljava/util/List;
	public fun asPathSequence ()Lkotlin/sequences/Sequence;
	public fun asSequence ()Lkotlin/sequences/Sequence;
	public fun clear ()V
	public fun contains (Lelide/tooling/MultiPath$Entry;)Z
	public final fun contains (Ljava/lang/Object;)Z
	public fun contains (Ljava/lang/String;)Z
	public fun contains (Ljava/nio/file/Path;)Z
	public fun containsAll (Ljava/util/Collection;)Z
	public static final fun empty ()Lelide/tooling/Classpath;
	public static final fun from (Ljava/util/Collection;)Lelide/tooling/Classpath;
	public static final fun fromCurrent ()Lelide/tooling/Classpath;
	public static final fun fromOriginOf (Lkotlin/reflect/KClass;)Lelide/tooling/Classpath;
	public fun get (I)Lelide/tooling/Argument;
	public fun get-WZ4Q5Ns (I)Lelide/tooling/JvmMultiPathEntry;
	public synthetic fun get-WZ4Q5Ns (I)Lelide/tooling/MultiPath$Entry;
	public fun getEntries ()Ljava/util/Set;
	public fun getPaths ()Ljava/util/List;
	public fun getRole ()Lelide/tooling/JvmMultiPath;
	public synthetic fun getRole ()Ljava/lang/Enum;
	public fun getSize ()I
	public fun isEmpty ()Z
	public fun iterator ()Ljava/util/Iterator;
	public static final fun of (Ljava/nio/file/Path;[Ljava/nio/file/Path;)Lelide/tooling/Classpath;
	public fun plus (Lelide/tooling/MultiPath;)Lelide/tooling/MultiPath$MultiPathContainer;
	public synthetic fun plus (Lelide/tooling/MultiPath;)Lelide/tooling/MultiPath;
	public fun plus (Ljava/nio/file/Path;)Lelide/tooling/MultiPath$MultiPathContainer;
	public synthetic fun plus (Ljava/nio/file/Path;)Lelide/tooling/MultiPath;
	public fun plus (Ljava/util/Collection;)Lelide/tooling/MultiPath$MultiPathContainer;
	public synthetic fun plus (Ljava/util/Collection;)Lelide/tooling/MultiPath;
	public fun plus (Lkotlin/sequences/Sequence;)Lelide/tooling/MultiPath$MultiPathContainer;
	public synthetic fun plus (Lkotlin/sequences/Sequence;)Lelide/tooling/MultiPath;
	public fun remove (Ljava/lang/Object;)Z
	public fun removeAll (Ljava/util/Collection;)Z
	public fun removeIf (Ljava/util/function/Predicate;)Z
	public fun retainAll (Ljava/util/Collection;)Z
	public final fun size ()I
	public fun toArray ()[Ljava/lang/Object;
	public fun toArray ([Ljava/lang/Object;)[Ljava/lang/Object;
	public fun toMutable ()Lelide/tooling/MultiPath$MutableMultiPath;
}

public final class elide/tooling/Classpath$Companion {
	public final fun empty ()Lelide/tooling/Classpath;
	public final fun from (Ljava/util/Collection;)Lelide/tooling/Classpath;
	public final fun fromCurrent ()Lelide/tooling/Classpath;
	public final fun fromOriginOf (Lkotlin/reflect/KClass;)Lelide/tooling/Classpath;
	public final fun of (Ljava/nio/file/Path;[Ljava/nio/file/Path;)Lelide/tooling/Classpath;
}

public abstract interface class elide/tooling/ClasspathProvider {
	public abstract fun classpath (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class elide/tooling/ClasspathSpec : java/util/function/Predicate {
	public static final field Companion Lelide/tooling/ClasspathSpec$Companion;
	public fun getName ()Ljava/lang/String;
	public fun getUsage ()Lelide/tooling/MultiPathUsage;
	public fun test (Lelide/tooling/ClasspathSpec;)Z
	public synthetic fun test (Ljava/lang/Object;)Z
}

public final class elide/tooling/ClasspathSpec$Companion {
	public final fun getCompile ()Lelide/tooling/ClasspathSpec;
	public final fun getRuntime ()Lelide/tooling/ClasspathSpec;
	public final fun getTestCompile ()Lelide/tooling/ClasspathSpec;
	public final fun getTestRuntime ()Lelide/tooling/ClasspathSpec;
}

public abstract interface class elide/tooling/ClasspathsProvider {
	public abstract fun classpathProvider (Lelide/tooling/ClasspathSpec;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class elide/tooling/Environment : java/util/Map, kotlin/jvm/internal/markers/KMappedMarker {
	public static final field Companion Lelide/tooling/Environment$Companion;
	public static fun empty ()Lelide/tooling/Environment$EmptyEnvironment;
	public fun extend (Lelide/tooling/Environment;)Lelide/tooling/Environment;
	public fun extend (Ljava/lang/Iterable;)Lelide/tooling/Environment;
	public fun extend (Ljava/util/Map;)Lelide/tooling/Environment;
	public fun extend ([Lkotlin/Pair;)Lelide/tooling/Environment;
	public static fun from-shrlnSI (Ljava/util/Map;)Lkotlinx/collections/immutable/PersistentMap;
	public static fun host ()Lelide/tooling/Environment$HostEnv;
	public static fun of-shrlnSI (Lkotlinx/collections/immutable/PersistentMap;)Lkotlinx/collections/immutable/PersistentMap;
	public static fun of-shrlnSI ([Lkotlin/Pair;)Lkotlinx/collections/immutable/PersistentMap;
	public abstract fun toMutable ()Lelide/tooling/MutableEnvironment;
}

public final class elide/tooling/Environment$Companion {
	public final fun empty ()Lelide/tooling/Environment$EmptyEnvironment;
	public final fun from-shrlnSI (Ljava/util/Map;)Lkotlinx/collections/immutable/PersistentMap;
	public final fun host ()Lelide/tooling/Environment$HostEnv;
	public final fun of-shrlnSI (Lkotlinx/collections/immutable/PersistentMap;)Lkotlinx/collections/immutable/PersistentMap;
	public final fun of-shrlnSI ([Lkotlin/Pair;)Lkotlinx/collections/immutable/PersistentMap;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/Environment$CompoundEnv : elide/tooling/Environment {
	public static final synthetic fun box-impl (Lkotlin/Pair;)Lelide/tooling/Environment$CompoundEnv;
	public fun clear ()V
	public synthetic fun compute (Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
	public fun compute (Ljava/lang/String;Ljava/util/function/BiFunction;)Ljava/lang/String;
	public synthetic fun computeIfAbsent (Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
	public fun computeIfAbsent (Ljava/lang/String;Ljava/util/function/Function;)Ljava/lang/String;
	public synthetic fun computeIfPresent (Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
	public fun computeIfPresent (Ljava/lang/String;Ljava/util/function/BiFunction;)Ljava/lang/String;
	public final fun containsKey (Ljava/lang/Object;)Z
	public fun containsKey (Ljava/lang/String;)Z
	public static fun containsKey-impl (Lkotlin/Pair;Ljava/lang/String;)Z
	public final fun containsValue (Ljava/lang/Object;)Z
	public fun containsValue (Ljava/lang/String;)Z
	public static fun containsValue-impl (Lkotlin/Pair;Ljava/lang/String;)Z
	public synthetic fun entrySet ()Ljava/util/Set;
	public fun equals (Ljava/lang/Object;)Z
	public static fun equals-impl (Lkotlin/Pair;Ljava/lang/Object;)Z
	public static final fun equals-impl0 (Lkotlin/Pair;Lkotlin/Pair;)Z
	public final synthetic fun get (Ljava/lang/Object;)Ljava/lang/Object;
	public final fun get (Ljava/lang/Object;)Ljava/lang/String;
	public fun get (Ljava/lang/String;)Ljava/lang/String;
	public static fun get-impl (Lkotlin/Pair;Ljava/lang/String;)Ljava/lang/String;
	public fun getEntries ()Ljava/util/Set;
	public static fun getEntries-impl (Lkotlin/Pair;)Ljava/util/Set;
	public fun getKeys ()Ljava/util/Set;
	public static fun getKeys-impl (Lkotlin/Pair;)Ljava/util/Set;
	public fun getSize ()I
	public static fun getSize-impl (Lkotlin/Pair;)I
	public fun getValues ()Ljava/util/Collection;
	public static fun getValues-impl (Lkotlin/Pair;)Ljava/util/Collection;
	public fun hashCode ()I
	public static fun hashCode-impl (Lkotlin/Pair;)I
	public fun isEmpty ()Z
	public static fun isEmpty-impl (Lkotlin/Pair;)Z
	public synthetic fun keySet ()Ljava/util/Set;
	public synthetic fun merge (Ljava/lang/Object;Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
	public fun merge (Ljava/lang/String;Ljava/lang/String;Ljava/util/function/BiFunction;)Ljava/lang/String;
	public synthetic fun put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
	public fun put (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
	public fun putAll (Ljava/util/Map;)V
	public synthetic fun putIfAbsent (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
	public fun putIfAbsent (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
	public synthetic fun remove (Ljava/lang/Object;)Ljava/lang/Object;
	public fun remove (Ljava/lang/Object;)Ljava/lang/String;
	public fun remove (Ljava/lang/Object;Ljava/lang/Object;)Z
	public synthetic fun replace (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
	public synthetic fun replace (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
	public fun replace (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
	public fun replace (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
	public fun replaceAll (Ljava/util/function/BiFunction;)V
	public synthetic fun size ()I
	public fun toMutable ()Lelide/tooling/MutableEnvironment;
	public static fun toMutable-impl (Lkotlin/Pair;)Lelide/tooling/MutableEnvironment;
	public fun toString ()Ljava/lang/String;
	public static fun toString-impl (Lkotlin/Pair;)Ljava/lang/String;
	public final synthetic fun unbox-impl ()Lkotlin/Pair;
	public synthetic fun values ()Ljava/util/Collection;
}

public final class elide/tooling/Environment$EmptyEnvironment : elide/tooling/Environment, java/util/Map, kotlin/jvm/internal/markers/KMappedMarker {
	public static final field INSTANCE Lelide/tooling/Environment$EmptyEnvironment;
	public fun clear ()V
	public synthetic fun compute (Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
	public fun compute (Ljava/lang/String;Ljava/util/function/BiFunction;)Ljava/lang/String;
	public synthetic fun computeIfAbsent (Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
	public fun computeIfAbsent (Ljava/lang/String;Ljava/util/function/Function;)Ljava/lang/String;
	public synthetic fun computeIfPresent (Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
	public fun computeIfPresent (Ljava/lang/String;Ljava/util/function/BiFunction;)Ljava/lang/String;
	public final fun containsKey (Ljava/lang/Object;)Z
	public fun containsKey (Ljava/lang/String;)Z
	public final fun containsValue (Ljava/lang/Object;)Z
	public fun containsValue (Ljava/lang/String;)Z
	public final fun entrySet ()Ljava/util/Set;
	public fun equals (Ljava/lang/Object;)Z
	public final synthetic fun get (Ljava/lang/Object;)Ljava/lang/Object;
	public final fun get (Ljava/lang/Object;)Ljava/lang/String;
	public fun get (Ljava/lang/String;)Ljava/lang/String;
	public fun getEntries ()Ljava/util/Set;
	public fun getKeys ()Ljava/util/Set;
	public fun getSize ()I
	public fun getValues ()Ljava/util/Collection;
	public fun hashCode ()I
	public fun isEmpty ()Z
	public final fun keySet ()Ljava/util/Set;
	public synthetic fun merge (Ljava/lang/Object;Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
	public fun merge (Ljava/lang/String;Ljava/lang/String;Ljava/util/function/BiFunction;)Ljava/lang/String;
	public synthetic fun put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
	public fun put (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
	public fun putAll (Ljava/util/Map;)V
	public synthetic fun putIfAbsent (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
	public fun putIfAbsent (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
	public synthetic fun remove (Ljava/lang/Object;)Ljava/lang/Object;
	public fun remove (Ljava/lang/Object;)Ljava/lang/String;
	public fun remove (Ljava/lang/Object;Ljava/lang/Object;)Z
	public synthetic fun replace (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
	public synthetic fun replace (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
	public fun replace (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
	public fun replace (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
	public fun replaceAll (Ljava/util/function/BiFunction;)V
	public final fun size ()I
	public fun toMutable ()Lelide/tooling/MutableEnvironment;
	public fun toString ()Ljava/lang/String;
	public final fun values ()Ljava/util/Collection;
}

public final class elide/tooling/Environment$HostEnv : elide/tooling/Environment, java/util/Map, kotlin/jvm/internal/markers/KMappedMarker {
	public static final field INSTANCE Lelide/tooling/Environment$HostEnv;
	public fun clear ()V
	public synthetic fun compute (Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
	public fun compute (Ljava/lang/String;Ljava/util/function/BiFunction;)Ljava/lang/String;
	public synthetic fun computeIfAbsent (Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
	public fun computeIfAbsent (Ljava/lang/String;Ljava/util/function/Function;)Ljava/lang/String;
	public synthetic fun computeIfPresent (Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
	public fun computeIfPresent (Ljava/lang/String;Ljava/util/function/BiFunction;)Ljava/lang/String;
	public final fun containsKey (Ljava/lang/Object;)Z
	public fun containsKey (Ljava/lang/String;)Z
	public final fun containsValue (Ljava/lang/Object;)Z
	public fun containsValue (Ljava/lang/String;)Z
	public final fun entrySet ()Ljava/util/Set;
	public fun equals (Ljava/lang/Object;)Z
	public final synthetic fun get (Ljava/lang/Object;)Ljava/lang/Object;
	public final fun get (Ljava/lang/Object;)Ljava/lang/String;
	public fun get (Ljava/lang/String;)Ljava/lang/String;
	public fun getEntries ()Ljava/util/Set;
	public fun getKeys ()Ljava/util/Set;
	public fun getSize ()I
	public fun getValues ()Ljava/util/Collection;
	public fun hashCode ()I
	public fun isEmpty ()Z
	public final fun keySet ()Ljava/util/Set;
	public synthetic fun merge (Ljava/lang/Object;Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
	public fun merge (Ljava/lang/String;Ljava/lang/String;Ljava/util/function/BiFunction;)Ljava/lang/String;
	public synthetic fun put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
	public fun put (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
	public fun putAll (Ljava/util/Map;)V
	public synthetic fun putIfAbsent (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
	public fun putIfAbsent (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
	public synthetic fun remove (Ljava/lang/Object;)Ljava/lang/Object;
	public fun remove (Ljava/lang/Object;)Ljava/lang/String;
	public fun remove (Ljava/lang/Object;Ljava/lang/Object;)Z
	public synthetic fun replace (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
	public synthetic fun replace (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
	public fun replace (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
	public fun replace (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
	public fun replaceAll (Ljava/util/function/BiFunction;)V
	public final fun size ()I
	public fun toMutable ()Lelide/tooling/MutableEnvironment;
	public fun toString ()Ljava/lang/String;
	public final fun values ()Ljava/util/Collection;
}

public final class elide/tooling/Environment$MappedEnv : elide/tooling/Environment, java/util/Map, kotlin/jvm/internal/markers/KMappedMarker {
	public static final synthetic fun box-impl (Lkotlinx/collections/immutable/PersistentMap;)Lelide/tooling/Environment$MappedEnv;
	public fun clear ()V
	public synthetic fun compute (Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
	public fun compute (Ljava/lang/String;Ljava/util/function/BiFunction;)Ljava/lang/String;
	public synthetic fun computeIfAbsent (Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
	public fun computeIfAbsent (Ljava/lang/String;Ljava/util/function/Function;)Ljava/lang/String;
	public synthetic fun computeIfPresent (Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
	public fun computeIfPresent (Ljava/lang/String;Ljava/util/function/BiFunction;)Ljava/lang/String;
	public final fun containsKey (Ljava/lang/Object;)Z
	public fun containsKey (Ljava/lang/String;)Z
	public static fun containsKey-impl (Lkotlinx/collections/immutable/PersistentMap;Ljava/lang/String;)Z
	public final fun containsValue (Ljava/lang/Object;)Z
	public fun containsValue (Ljava/lang/String;)Z
	public static fun containsValue-impl (Lkotlinx/collections/immutable/PersistentMap;Ljava/lang/String;)Z
	public synthetic fun entrySet ()Ljava/util/Set;
	public fun equals (Ljava/lang/Object;)Z
	public static fun equals-impl (Lkotlinx/collections/immutable/PersistentMap;Ljava/lang/Object;)Z
	public static final fun equals-impl0 (Lkotlinx/collections/immutable/PersistentMap;Lkotlinx/collections/immutable/PersistentMap;)Z
	public final synthetic fun get (Ljava/lang/Object;)Ljava/lang/Object;
	public final fun get (Ljava/lang/Object;)Ljava/lang/String;
	public fun get (Ljava/lang/String;)Ljava/lang/String;
	public static fun get-impl (Lkotlinx/collections/immutable/PersistentMap;Ljava/lang/String;)Ljava/lang/String;
	public fun getEntries ()Ljava/util/Set;
	public static fun getEntries-impl (Lkotlinx/collections/immutable/PersistentMap;)Ljava/util/Set;
	public fun getKeys ()Ljava/util/Set;
	public static fun getKeys-impl (Lkotlinx/collections/immutable/PersistentMap;)Ljava/util/Set;
	public fun getSize ()I
	public static fun getSize-impl (Lkotlinx/collections/immutable/PersistentMap;)I
	public fun getValues ()Ljava/util/Collection;
	public static fun getValues-impl (Lkotlinx/collections/immutable/PersistentMap;)Ljava/util/Collection;
	public fun hashCode ()I
	public static fun hashCode-impl (Lkotlinx/collections/immutable/PersistentMap;)I
	public fun isEmpty ()Z
	public static fun isEmpty-impl (Lkotlinx/collections/immutable/PersistentMap;)Z
	public synthetic fun keySet ()Ljava/util/Set;
	public synthetic fun merge (Ljava/lang/Object;Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
	public fun merge (Ljava/lang/String;Ljava/lang/String;Ljava/util/function/BiFunction;)Ljava/lang/String;
	public synthetic fun put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
	public fun put (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
	public fun putAll (Ljava/util/Map;)V
	public synthetic fun putIfAbsent (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
	public fun putIfAbsent (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
	public synthetic fun remove (Ljava/lang/Object;)Ljava/lang/Object;
	public fun remove (Ljava/lang/Object;)Ljava/lang/String;
	public fun remove (Ljava/lang/Object;Ljava/lang/Object;)Z
	public synthetic fun replace (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
	public synthetic fun replace (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
	public fun replace (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
	public fun replace (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
	public fun replaceAll (Ljava/util/function/BiFunction;)V
	public synthetic fun size ()I
	public fun toMutable ()Lelide/tooling/MutableEnvironment;
	public static fun toMutable-impl (Lkotlinx/collections/immutable/PersistentMap;)Lelide/tooling/MutableEnvironment;
	public fun toString ()Ljava/lang/String;
	public static fun toString-impl (Lkotlinx/collections/immutable/PersistentMap;)Ljava/lang/String;
	public final synthetic fun unbox-impl ()Lkotlinx/collections/immutable/PersistentMap;
	public synthetic fun values ()Ljava/util/Collection;
}

public abstract class elide/tooling/GenericTool : elide/tooling/AbstractTool {
	public static final field Companion Lelide/tooling/GenericTool$Companion;
	public fun <init> (Lelide/tooling/Tool$CommandLineTool;)V
	public fun amendArgs (Lelide/tooling/MutableArguments;)V
	public abstract fun createTool ()Ljava/lang/Object;
	public static final fun gatherArgs (Ljava/util/SortedSet;Lelide/tooling/Arguments;)Lkotlin/Pair;
	public abstract fun getInputs ()Ljava/lang/Object;
	public abstract fun getOutputs ()Ljava/lang/Object;
	public abstract fun getTaskDescription ()Ljava/lang/String;
	public abstract fun getToolLogger ()Lelide/runtime/Logger;
	public fun invoke (Lelide/tooling/AbstractTool$EmbeddedToolState;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun resolveInputs ()Ljava/lang/Object;
	public fun resolveOutputs (Ljava/io/StringWriter;Ljava/io/StringWriter;ILkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun supported ()Z
	public fun toolExec (Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun toolRun (Ljava/io/PrintWriter;Ljava/io/PrintWriter;[Ljava/lang/String;)I
}

public final class elide/tooling/GenericTool$Companion {
	public final fun gatherArgs (Ljava/util/SortedSet;Lelide/tooling/Arguments;)Lkotlin/Pair;
}

public abstract interface class elide/tooling/Inputs {
	public static final field Companion Lelide/tooling/Inputs$Companion;
}

public final class elide/tooling/Inputs$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract interface class elide/tooling/Inputs$Compound : elide/tooling/Inputs {
}

public abstract interface class elide/tooling/Inputs$Files : elide/tooling/Inputs {
}

public abstract interface class elide/tooling/Inputs$None : elide/tooling/Inputs {
}

public abstract interface class elide/tooling/Inputs$Values : elide/tooling/Inputs {
}

public final class elide/tooling/JvmMultiPath : java/lang/Enum {
	public static final field CLASSPATH Lelide/tooling/JvmMultiPath;
	public static final field MODULEPATH Lelide/tooling/JvmMultiPath;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public static fun valueOf (Ljava/lang/String;)Lelide/tooling/JvmMultiPath;
	public static fun values ()[Lelide/tooling/JvmMultiPath;
}

public final class elide/tooling/JvmMultiPathContainer : elide/tooling/AbstractJvmMultiPathContainer {
	public fun <init> (Lelide/tooling/JvmMultiPath;Lkotlinx/collections/immutable/PersistentList;Lkotlinx/collections/immutable/PersistentSet;)V
	public synthetic fun <init> (Lelide/tooling/JvmMultiPath;Lkotlinx/collections/immutable/PersistentList;Lkotlinx/collections/immutable/PersistentSet;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun asArgumentSequence ()Lkotlin/sequences/Sequence;
	public fun asArgumentString (Lelide/tooling/ArgumentContext;)Ljava/lang/String;
	public fun asPathSequence ()Lkotlin/sequences/Sequence;
	public static final fun empty ()Lelide/tooling/JvmMultiPathContainer;
	public static final fun from (Lelide/tooling/JvmMultiPath;Ljava/util/Collection;)Lelide/tooling/JvmMultiPathContainer;
	public synthetic fun getEntries ()Ljava/util/Set;
	public fun getEntries ()Lkotlinx/collections/immutable/PersistentSet;
	public synthetic fun getPaths ()Ljava/util/List;
	public fun getPaths ()Lkotlinx/collections/immutable/PersistentList;
	public fun getRole ()Lelide/tooling/JvmMultiPath;
	public synthetic fun getRole ()Ljava/lang/Enum;
	public static final fun of (Lelide/tooling/JvmMultiPath;Ljava/nio/file/Path;[Ljava/nio/file/Path;)Lelide/tooling/JvmMultiPathContainer;
	public fun plus (Lelide/tooling/MultiPath;)Lelide/tooling/JvmMultiPathContainer;
	public synthetic fun plus (Lelide/tooling/MultiPath;)Lelide/tooling/MultiPath$MultiPathContainer;
	public synthetic fun plus (Lelide/tooling/MultiPath;)Lelide/tooling/MultiPath;
	public fun plus (Ljava/nio/file/Path;)Lelide/tooling/JvmMultiPathContainer;
	public synthetic fun plus (Ljava/nio/file/Path;)Lelide/tooling/MultiPath$MultiPathContainer;
	public synthetic fun plus (Ljava/nio/file/Path;)Lelide/tooling/MultiPath;
	public fun plus (Ljava/util/Collection;)Lelide/tooling/AbstractJvmMultiPathContainer;
	public synthetic fun plus (Ljava/util/Collection;)Lelide/tooling/MultiPath$MultiPathContainer;
	public synthetic fun plus (Ljava/util/Collection;)Lelide/tooling/MultiPath;
	public fun plus (Lkotlin/sequences/Sequence;)Lelide/tooling/JvmMultiPathContainer;
	public synthetic fun plus (Lkotlin/sequences/Sequence;)Lelide/tooling/MultiPath$MultiPathContainer;
	public synthetic fun plus (Lkotlin/sequences/Sequence;)Lelide/tooling/MultiPath;
	public fun toMutable ()Lelide/tooling/MultiPath$MutableMultiPath;
}

public final synthetic class elide/tooling/JvmMultiPathContainer$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/JvmMultiPathContainer$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/JvmMultiPathContainer;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/JvmMultiPathContainer;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/JvmMultiPathEntry : java/lang/Record, elide/tooling/MultiPath$Entry {
	public static final field Companion Lelide/tooling/JvmMultiPathEntry$Companion;
	public fun <init> (Lelide/tooling/JvmMultiPathEntryType;Ljava/nio/file/Path;)V
	public final fun component1 ()Lelide/tooling/JvmMultiPathEntryType;
	public final fun component2 ()Ljava/nio/file/Path;
	public final fun copy (Lelide/tooling/JvmMultiPathEntryType;Ljava/nio/file/Path;)Lelide/tooling/JvmMultiPathEntry;
	public static synthetic fun copy$default (Lelide/tooling/JvmMultiPathEntry;Lelide/tooling/JvmMultiPathEntryType;Ljava/nio/file/Path;ILjava/lang/Object;)Lelide/tooling/JvmMultiPathEntry;
	public fun equals (Ljava/lang/Object;)Z
	public synthetic fun getPath ()Ljava/nio/file/Path;
	public fun hashCode ()I
	public fun path ()Ljava/nio/file/Path;
	public fun toString ()Ljava/lang/String;
	public final fun type ()Lelide/tooling/JvmMultiPathEntryType;
}

public final synthetic class elide/tooling/JvmMultiPathEntry$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/JvmMultiPathEntry$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/JvmMultiPathEntry;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/JvmMultiPathEntry;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/JvmMultiPathEntry$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/JvmMultiPathEntryType : java/lang/Enum {
	public static final field DIRECTORY Lelide/tooling/JvmMultiPathEntryType;
	public static final field JAR Lelide/tooling/JvmMultiPathEntryType;
	public static final field JMOD Lelide/tooling/JvmMultiPathEntryType;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public static fun valueOf (Ljava/lang/String;)Lelide/tooling/JvmMultiPathEntryType;
	public static fun values ()[Lelide/tooling/JvmMultiPathEntryType;
}

public final class elide/tooling/Modulepath : elide/tooling/MultiPath$MultiPathContainer {
	public static final field Companion Lelide/tooling/Modulepath$Companion;
	public synthetic fun <init> (Lelide/tooling/JvmMultiPathContainer;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun add (Lelide/tooling/MultiPath$Entry;)Z
	public synthetic fun add (Ljava/lang/Object;)Z
	public fun addAll (Ljava/util/Collection;)Z
	public fun asArgumentList (Lelide/tooling/ArgumentContext;)Ljava/util/List;
	public fun asArgumentSequence ()Lkotlin/sequences/Sequence;
	public fun asArgumentString (Lelide/tooling/ArgumentContext;)Ljava/lang/String;
	public fun asArgumentStrings (Lelide/tooling/ArgumentContext;)Lkotlin/sequences/Sequence;
	public fun asList ()Ljava/util/List;
	public fun asPathSequence ()Lkotlin/sequences/Sequence;
	public fun asSequence ()Lkotlin/sequences/Sequence;
	public fun clear ()V
	public fun contains (Lelide/tooling/MultiPath$Entry;)Z
	public final fun contains (Ljava/lang/Object;)Z
	public fun contains (Ljava/lang/String;)Z
	public fun contains (Ljava/nio/file/Path;)Z
	public fun containsAll (Ljava/util/Collection;)Z
	public static final fun empty ()Lelide/tooling/Modulepath;
	public static final fun from (Ljava/util/Collection;)Lelide/tooling/Modulepath;
	public fun get (I)Lelide/tooling/Argument;
	public fun get-WZ4Q5Ns (I)Lelide/tooling/JvmMultiPathEntry;
	public synthetic fun get-WZ4Q5Ns (I)Lelide/tooling/MultiPath$Entry;
	public fun getEntries ()Ljava/util/Set;
	public fun getPaths ()Ljava/util/List;
	public fun getRole ()Lelide/tooling/JvmMultiPath;
	public synthetic fun getRole ()Ljava/lang/Enum;
	public fun getSize ()I
	public fun isEmpty ()Z
	public fun iterator ()Ljava/util/Iterator;
	public static final fun of (Ljava/nio/file/Path;[Ljava/nio/file/Path;)Lelide/tooling/Modulepath;
	public fun plus (Lelide/tooling/MultiPath;)Lelide/tooling/MultiPath$MultiPathContainer;
	public synthetic fun plus (Lelide/tooling/MultiPath;)Lelide/tooling/MultiPath;
	public fun plus (Ljava/nio/file/Path;)Lelide/tooling/MultiPath$MultiPathContainer;
	public synthetic fun plus (Ljava/nio/file/Path;)Lelide/tooling/MultiPath;
	public fun plus (Ljava/util/Collection;)Lelide/tooling/MultiPath$MultiPathContainer;
	public synthetic fun plus (Ljava/util/Collection;)Lelide/tooling/MultiPath;
	public fun plus (Lkotlin/sequences/Sequence;)Lelide/tooling/MultiPath$MultiPathContainer;
	public synthetic fun plus (Lkotlin/sequences/Sequence;)Lelide/tooling/MultiPath;
	public fun remove (Ljava/lang/Object;)Z
	public fun removeAll (Ljava/util/Collection;)Z
	public fun removeIf (Ljava/util/function/Predicate;)Z
	public fun retainAll (Ljava/util/Collection;)Z
	public final fun size ()I
	public fun toArray ()[Ljava/lang/Object;
	public fun toArray ([Ljava/lang/Object;)[Ljava/lang/Object;
	public fun toMutable ()Lelide/tooling/MultiPath$MutableMultiPath;
}

public final class elide/tooling/Modulepath$Companion {
	public final fun empty ()Lelide/tooling/Modulepath;
	public final fun from (Ljava/util/Collection;)Lelide/tooling/Modulepath;
	public final fun of (Ljava/nio/file/Path;[Ljava/nio/file/Path;)Lelide/tooling/Modulepath;
}

public abstract interface class elide/tooling/MultiPath : elide/tooling/Argument {
	public static final field Companion Lelide/tooling/MultiPath$Companion;
	public fun asList ()Ljava/util/List;
	public abstract fun asPathSequence ()Lkotlin/sequences/Sequence;
	public abstract fun asSequence ()Lkotlin/sequences/Sequence;
	public abstract fun contains (Ljava/lang/String;)Z
	public abstract fun contains (Ljava/nio/file/Path;)Z
	public abstract fun get (I)Lelide/tooling/Argument;
	public abstract fun get-WZ4Q5Ns (I)Lelide/tooling/MultiPath$Entry;
	public abstract fun plus (Lelide/tooling/MultiPath;)Lelide/tooling/MultiPath;
	public abstract fun plus (Ljava/nio/file/Path;)Lelide/tooling/MultiPath;
	public abstract fun plus (Ljava/util/Collection;)Lelide/tooling/MultiPath;
	public abstract fun plus (Lkotlin/sequences/Sequence;)Lelide/tooling/MultiPath;
	public abstract fun toMutable ()Lelide/tooling/MultiPath$MutableMultiPath;
}

public final class elide/tooling/MultiPath$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract interface class elide/tooling/MultiPath$Entry {
	public abstract fun getPath ()Ljava/nio/file/Path;
}

public abstract interface class elide/tooling/MultiPath$MultiPathContainer : elide/tooling/MultiPath, java/util/Collection, kotlin/jvm/internal/markers/KMappedMarker {
	public static final field Companion Lelide/tooling/MultiPath$MultiPathContainer$Companion;
	public fun asSequence ()Lkotlin/sequences/Sequence;
	public fun contains (Lelide/tooling/MultiPath$Entry;)Z
	public fun contains (Ljava/lang/Object;)Z
	public fun contains (Ljava/lang/String;)Z
	public fun contains (Ljava/nio/file/Path;)Z
	public fun containsAll (Ljava/util/Collection;)Z
	public fun get (I)Lelide/tooling/Argument;
	public fun get-WZ4Q5Ns (I)Lelide/tooling/MultiPath$Entry;
	public abstract fun getEntries ()Ljava/util/Set;
	public abstract fun getPaths ()Ljava/util/List;
	public abstract fun getRole ()Ljava/lang/Enum;
	public fun getSize ()I
	public fun isEmpty ()Z
	public fun iterator ()Ljava/util/Iterator;
	public abstract fun plus (Lelide/tooling/MultiPath;)Lelide/tooling/MultiPath$MultiPathContainer;
	public abstract fun plus (Ljava/nio/file/Path;)Lelide/tooling/MultiPath$MultiPathContainer;
	public abstract fun plus (Ljava/util/Collection;)Lelide/tooling/MultiPath$MultiPathContainer;
	public abstract fun plus (Lkotlin/sequences/Sequence;)Lelide/tooling/MultiPath$MultiPathContainer;
	public fun size ()I
}

public final class elide/tooling/MultiPath$MultiPathContainer$Companion {
	public final fun serializer (Lkotlinx/serialization/KSerializer;Lkotlinx/serialization/KSerializer;)Lkotlinx/serialization/KSerializer;
}

public abstract interface class elide/tooling/MultiPath$MutableMultiPath : elide/tooling/MultiPath, java/util/Collection, kotlin/jvm/internal/markers/KMutableCollection {
	public abstract fun add (Lelide/tooling/MultiPath;)Z
	public abstract fun add (Ljava/nio/file/Path;)Z
	public abstract fun prepend (Lelide/tooling/MultiPath$Entry;)Z
	public abstract fun prepend (Lelide/tooling/MultiPath;)Z
	public abstract fun prepend (Ljava/nio/file/Path;)Z
}

public abstract interface class elide/tooling/MultiPath$MutableMultiPathContainer : elide/tooling/MultiPath$MultiPathContainer, elide/tooling/MultiPath$MutableMultiPath {
	public abstract fun add (Ljava/nio/file/Path;)Z
	public abstract fun build ()Lelide/tooling/MultiPath$MultiPathContainer;
	public abstract fun iterator ()Ljava/util/Iterator;
	public abstract fun plus (Lelide/tooling/MultiPath;)Lelide/tooling/MultiPath$MutableMultiPathContainer;
	public abstract fun plus (Ljava/nio/file/Path;)Lelide/tooling/MultiPath$MutableMultiPathContainer;
	public abstract fun plus (Ljava/util/Collection;)Lelide/tooling/MultiPath$MutableMultiPathContainer;
	public abstract fun plus (Lkotlin/sequences/Sequence;)Lelide/tooling/MultiPath$MutableMultiPathContainer;
	public abstract fun set (ILjava/nio/file/Path;)Z
	public synthetic fun toMutable ()Lelide/tooling/MultiPath$MutableMultiPath;
	public fun toMutable ()Lelide/tooling/MultiPath$MutableMultiPathContainer;
}

public abstract interface class elide/tooling/MultiPathUsage : java/lang/Comparable {
	public fun compareTo (Lelide/tooling/MultiPathUsage;)I
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public fun expand ()Ljava/util/List;
	public fun getApiSensitive ()Z
	public fun getInternalOnly ()Z
	public abstract fun getOrder-pVg5ArA ()I
	public fun getRuntimeOnly ()Z
	public abstract fun getScope ()Ljava/lang/String;
	public fun getTestOnly ()Z
	public fun includes ()Ljava/util/List;
}

public final class elide/tooling/MultiPathUsage$Compile : elide/tooling/MultiPathUsage {
	public static final field INSTANCE Lelide/tooling/MultiPathUsage$Compile;
	public fun equals (Ljava/lang/Object;)Z
	public fun getOrder-pVg5ArA ()I
	public fun getScope ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/MultiPathUsage$Processors : elide/tooling/MultiPathUsage {
	public static final field INSTANCE Lelide/tooling/MultiPathUsage$Processors;
	public fun equals (Ljava/lang/Object;)Z
	public fun getOrder-pVg5ArA ()I
	public fun getScope ()Ljava/lang/String;
	public fun hashCode ()I
	public fun includes ()Ljava/util/List;
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/MultiPathUsage$Runtime : elide/tooling/MultiPathUsage {
	public static final field INSTANCE Lelide/tooling/MultiPathUsage$Runtime;
	public fun equals (Ljava/lang/Object;)Z
	public fun getOrder-pVg5ArA ()I
	public fun getScope ()Ljava/lang/String;
	public fun hashCode ()I
	public fun includes ()Ljava/util/List;
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/MultiPathUsage$TestCompile : elide/tooling/MultiPathUsage {
	public static final field INSTANCE Lelide/tooling/MultiPathUsage$TestCompile;
	public fun equals (Ljava/lang/Object;)Z
	public fun getOrder-pVg5ArA ()I
	public fun getScope ()Ljava/lang/String;
	public fun hashCode ()I
	public fun includes ()Ljava/util/List;
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/MultiPathUsage$TestProcessors : elide/tooling/MultiPathUsage {
	public static final field INSTANCE Lelide/tooling/MultiPathUsage$TestProcessors;
	public fun equals (Ljava/lang/Object;)Z
	public fun getOrder-pVg5ArA ()I
	public fun getScope ()Ljava/lang/String;
	public fun hashCode ()I
	public fun includes ()Ljava/util/List;
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/MultiPathUsage$TestRuntime : elide/tooling/MultiPathUsage {
	public static final field INSTANCE Lelide/tooling/MultiPathUsage$TestRuntime;
	public fun equals (Ljava/lang/Object;)Z
	public fun getOrder-pVg5ArA ()I
	public fun getScope ()Ljava/lang/String;
	public fun hashCode ()I
	public fun includes ()Ljava/util/List;
	public fun toString ()Ljava/lang/String;
}

public abstract interface class elide/tooling/MutableArguments : elide/tooling/Arguments, elide/tooling/Arguments$Suite {
	public static final field Companion Lelide/tooling/MutableArguments$Companion;
	public abstract fun add (Lelide/tooling/Argument;)Z
	public fun add (Ljava/lang/String;)Z
	public abstract fun addAll (Ljava/util/Collection;)Z
	public fun addAllStrings (Ljava/util/Collection;)Z
	public abstract fun build ()Lelide/tooling/Arguments;
	public static fun from (Lelide/tooling/Arguments;)Lelide/tooling/MutableArguments;
	public static fun from (Lkotlinx/collections/immutable/PersistentList;)Lelide/tooling/MutableArguments;
	public fun toMutable ()Lelide/tooling/MutableArguments;
}

public final class elide/tooling/MutableArguments$Companion {
	public final fun from (Lelide/tooling/Arguments;)Lelide/tooling/MutableArguments;
	public final fun from (Lkotlinx/collections/immutable/PersistentList;)Lelide/tooling/MutableArguments;
}

public final class elide/tooling/MutableArguments$MutableArgumentList : elide/tooling/MutableArguments, java/util/List, kotlin/jvm/internal/markers/KMutableList {
	public fun add (ILelide/tooling/Argument;)V
	public synthetic fun add (ILjava/lang/Object;)V
	public fun add (Lelide/tooling/Argument;)Z
	public synthetic fun add (Ljava/lang/Object;)Z
	public static fun add-impl (Ljava/util/List;ILelide/tooling/Argument;)V
	public static fun add-impl (Ljava/util/List;Lelide/tooling/Argument;)Z
	public fun addAll (ILjava/util/Collection;)Z
	public fun addAll (Ljava/util/Collection;)Z
	public static fun addAll-impl (Ljava/util/List;ILjava/util/Collection;)Z
	public static fun addAll-impl (Ljava/util/List;Ljava/util/Collection;)Z
	public fun asArgumentSequence ()Lkotlin/sequences/Sequence;
	public static fun asArgumentSequence-impl (Ljava/util/List;)Lkotlin/sequences/Sequence;
	public static final synthetic fun box-impl (Ljava/util/List;)Lelide/tooling/MutableArguments$MutableArgumentList;
	public fun build ()Lelide/tooling/Arguments;
	public static fun build-impl (Ljava/util/List;)Lelide/tooling/Arguments;
	public fun clear ()V
	public static fun clear-impl (Ljava/util/List;)V
	public static fun constructor-impl (Ljava/util/List;)Ljava/util/List;
	public fun contains (Lelide/tooling/Argument;)Z
	public final fun contains (Ljava/lang/Object;)Z
	public static fun contains-impl (Ljava/util/List;Lelide/tooling/Argument;)Z
	public fun containsAll (Ljava/util/Collection;)Z
	public static fun containsAll-impl (Ljava/util/List;Ljava/util/Collection;)Z
	public fun equals (Ljava/lang/Object;)Z
	public static fun equals-impl (Ljava/util/List;Ljava/lang/Object;)Z
	public static final fun equals-impl0 (Ljava/util/List;Ljava/util/List;)Z
	public fun get (I)Lelide/tooling/Argument;
	public synthetic fun get (I)Ljava/lang/Object;
	public static fun get-impl (Ljava/util/List;I)Lelide/tooling/Argument;
	public fun getSize ()I
	public static fun getSize-impl (Ljava/util/List;)I
	public fun hashCode ()I
	public static fun hashCode-impl (Ljava/util/List;)I
	public fun indexOf (Lelide/tooling/Argument;)I
	public final fun indexOf (Ljava/lang/Object;)I
	public static fun indexOf-impl (Ljava/util/List;Lelide/tooling/Argument;)I
	public fun isEmpty ()Z
	public static fun isEmpty-impl (Ljava/util/List;)Z
	public fun iterator ()Ljava/util/Iterator;
	public static fun iterator-impl (Ljava/util/List;)Ljava/util/Iterator;
	public fun lastIndexOf (Lelide/tooling/Argument;)I
	public final fun lastIndexOf (Ljava/lang/Object;)I
	public static fun lastIndexOf-impl (Ljava/util/List;Lelide/tooling/Argument;)I
	public fun listIterator ()Ljava/util/ListIterator;
	public fun listIterator (I)Ljava/util/ListIterator;
	public static fun listIterator-impl (Ljava/util/List;)Ljava/util/ListIterator;
	public static fun listIterator-impl (Ljava/util/List;I)Ljava/util/ListIterator;
	public final fun remove (I)Lelide/tooling/Argument;
	public synthetic fun remove (I)Ljava/lang/Object;
	public fun remove (Lelide/tooling/Argument;)Z
	public final fun remove (Ljava/lang/Object;)Z
	public static fun remove-impl (Ljava/util/List;Lelide/tooling/Argument;)Z
	public fun removeAll (Ljava/util/Collection;)Z
	public static fun removeAll-impl (Ljava/util/List;Ljava/util/Collection;)Z
	public fun removeAt (I)Lelide/tooling/Argument;
	public static fun removeAt-impl (Ljava/util/List;I)Lelide/tooling/Argument;
	public fun retainAll (Ljava/util/Collection;)Z
	public static fun retainAll-impl (Ljava/util/List;Ljava/util/Collection;)Z
	public fun set (ILelide/tooling/Argument;)Lelide/tooling/Argument;
	public synthetic fun set (ILjava/lang/Object;)Ljava/lang/Object;
	public static fun set-impl (Ljava/util/List;ILelide/tooling/Argument;)Lelide/tooling/Argument;
	public synthetic fun size ()I
	public fun subList (II)Ljava/util/List;
	public static fun subList-impl (Ljava/util/List;II)Ljava/util/List;
	public fun toArray ()[Ljava/lang/Object;
	public fun toArray ([Ljava/lang/Object;)[Ljava/lang/Object;
	public fun toString ()Ljava/lang/String;
	public static fun toString-impl (Ljava/util/List;)Ljava/lang/String;
	public final synthetic fun unbox-impl ()Ljava/util/List;
}

public final class elide/tooling/MutableArguments$PersistentArgumentList : elide/tooling/MutableArguments {
	public fun <init> (Lkotlinx/collections/immutable/PersistentList;)V
	public fun add (Lelide/tooling/Argument;)Z
	public synthetic fun add (Ljava/lang/Object;)Z
	public fun addAll (Ljava/util/Collection;)Z
	public fun asArgumentSequence ()Lkotlin/sequences/Sequence;
	public fun build ()Lelide/tooling/Arguments;
	public fun clear ()V
	public fun contains (Lelide/tooling/Argument;)Z
	public final fun contains (Ljava/lang/Object;)Z
	public fun containsAll (Ljava/util/Collection;)Z
	public fun get (I)Lelide/tooling/Argument;
	public fun getSize ()I
	public fun isEmpty ()Z
	public fun iterator ()Ljava/util/Iterator;
	public fun remove (Ljava/lang/Object;)Z
	public fun removeAll (Ljava/util/Collection;)Z
	public fun removeIf (Ljava/util/function/Predicate;)Z
	public fun retainAll (Ljava/util/Collection;)Z
	public final fun size ()I
	public fun toArray ()[Ljava/lang/Object;
	public fun toArray ([Ljava/lang/Object;)[Ljava/lang/Object;
}

public final class elide/tooling/MutableClasspath : elide/tooling/MultiPath$MutableMultiPathContainer {
	public static final field Companion Lelide/tooling/MutableClasspath$Companion;
	public synthetic fun <init> (Lelide/tooling/MutableJvmMultiPathContainer;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun add (Lelide/tooling/MultiPath$Entry;)Z
	public fun add (Lelide/tooling/MultiPath;)Z
	public synthetic fun add (Ljava/lang/Object;)Z
	public fun add (Ljava/nio/file/Path;)Z
	public fun addAll (Ljava/util/Collection;)Z
	public fun asArgumentList (Lelide/tooling/ArgumentContext;)Ljava/util/List;
	public fun asArgumentSequence ()Lkotlin/sequences/Sequence;
	public fun asArgumentString (Lelide/tooling/ArgumentContext;)Ljava/lang/String;
	public fun asArgumentStrings (Lelide/tooling/ArgumentContext;)Lkotlin/sequences/Sequence;
	public fun asList ()Ljava/util/List;
	public fun asPathSequence ()Lkotlin/sequences/Sequence;
	public fun asSequence ()Lkotlin/sequences/Sequence;
	public fun build ()Lelide/tooling/MultiPath$MultiPathContainer;
	public fun clear ()V
	public fun contains (Lelide/tooling/MultiPath$Entry;)Z
	public final fun contains (Ljava/lang/Object;)Z
	public fun contains (Ljava/lang/String;)Z
	public fun contains (Ljava/nio/file/Path;)Z
	public fun containsAll (Ljava/util/Collection;)Z
	public static final fun empty ()Lelide/tooling/MutableClasspath;
	public static final fun from (Ljava/util/Collection;)Lelide/tooling/MutableClasspath;
	public fun get (I)Lelide/tooling/Argument;
	public fun get-WZ4Q5Ns (I)Lelide/tooling/JvmMultiPathEntry;
	public synthetic fun get-WZ4Q5Ns (I)Lelide/tooling/MultiPath$Entry;
	public fun getEntries ()Ljava/util/Set;
	public fun getPaths ()Ljava/util/List;
	public fun getRole ()Lelide/tooling/JvmMultiPath;
	public synthetic fun getRole ()Ljava/lang/Enum;
	public fun getSize ()I
	public fun isEmpty ()Z
	public fun iterator ()Ljava/util/Iterator;
	public static final fun of (Ljava/nio/file/Path;[Ljava/nio/file/Path;)Lelide/tooling/MutableClasspath;
	public synthetic fun plus (Lelide/tooling/MultiPath;)Lelide/tooling/MultiPath$MultiPathContainer;
	public fun plus (Lelide/tooling/MultiPath;)Lelide/tooling/MultiPath$MutableMultiPathContainer;
	public synthetic fun plus (Lelide/tooling/MultiPath;)Lelide/tooling/MultiPath;
	public synthetic fun plus (Ljava/nio/file/Path;)Lelide/tooling/MultiPath$MultiPathContainer;
	public fun plus (Ljava/nio/file/Path;)Lelide/tooling/MultiPath$MutableMultiPathContainer;
	public synthetic fun plus (Ljava/nio/file/Path;)Lelide/tooling/MultiPath;
	public synthetic fun plus (Ljava/util/Collection;)Lelide/tooling/MultiPath$MultiPathContainer;
	public fun plus (Ljava/util/Collection;)Lelide/tooling/MultiPath$MutableMultiPathContainer;
	public synthetic fun plus (Ljava/util/Collection;)Lelide/tooling/MultiPath;
	public synthetic fun plus (Lkotlin/sequences/Sequence;)Lelide/tooling/MultiPath$MultiPathContainer;
	public fun plus (Lkotlin/sequences/Sequence;)Lelide/tooling/MultiPath$MutableMultiPathContainer;
	public synthetic fun plus (Lkotlin/sequences/Sequence;)Lelide/tooling/MultiPath;
	public fun prepend (Lelide/tooling/MultiPath$Entry;)Z
	public fun prepend (Lelide/tooling/MultiPath;)Z
	public fun prepend (Ljava/nio/file/Path;)Z
	public fun remove (Lelide/tooling/MultiPath$Entry;)Z
	public final fun remove (Ljava/lang/Object;)Z
	public fun removeAll (Ljava/util/Collection;)Z
	public fun retainAll (Ljava/util/Collection;)Z
	public fun set (ILjava/nio/file/Path;)Z
	public final fun size ()I
	public fun toArray ()[Ljava/lang/Object;
	public fun toArray ([Ljava/lang/Object;)[Ljava/lang/Object;
	public synthetic fun toMutable ()Lelide/tooling/MultiPath$MutableMultiPath;
	public fun toMutable ()Lelide/tooling/MultiPath$MutableMultiPathContainer;
}

public final class elide/tooling/MutableClasspath$Companion {
	public final fun empty ()Lelide/tooling/MutableClasspath;
	public final fun from (Ljava/util/Collection;)Lelide/tooling/MutableClasspath;
	public final fun of (Ljava/nio/file/Path;[Ljava/nio/file/Path;)Lelide/tooling/MutableClasspath;
}

public abstract interface class elide/tooling/MutableEnvironment : elide/tooling/Environment {
	public static final field Companion Lelide/tooling/MutableEnvironment$Companion;
	public abstract fun build ()Lelide/tooling/Environment;
	public static fun empty ()Lelide/tooling/MutableEnvironment;
	public static fun from (Lelide/tooling/Environment;)Lelide/tooling/MutableEnvironment;
	public static fun from (Lkotlinx/collections/immutable/PersistentMap;)Lelide/tooling/MutableEnvironment;
}

public final class elide/tooling/MutableEnvironment$Companion {
	public final fun empty ()Lelide/tooling/MutableEnvironment;
	public final fun from (Lelide/tooling/Environment;)Lelide/tooling/MutableEnvironment;
	public final fun from (Lkotlinx/collections/immutable/PersistentMap;)Lelide/tooling/MutableEnvironment;
}

public final class elide/tooling/MutableEnvironment$PersistentEnvMap : elide/tooling/MutableEnvironment {
	public static final synthetic fun box-impl (Lkotlinx/collections/immutable/PersistentMap;)Lelide/tooling/MutableEnvironment$PersistentEnvMap;
	public fun build ()Lelide/tooling/Environment;
	public static fun build-impl (Lkotlinx/collections/immutable/PersistentMap;)Lelide/tooling/Environment;
	public fun clear ()V
	public synthetic fun compute (Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
	public fun compute (Ljava/lang/String;Ljava/util/function/BiFunction;)Ljava/lang/String;
	public synthetic fun computeIfAbsent (Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
	public fun computeIfAbsent (Ljava/lang/String;Ljava/util/function/Function;)Ljava/lang/String;
	public synthetic fun computeIfPresent (Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
	public fun computeIfPresent (Ljava/lang/String;Ljava/util/function/BiFunction;)Ljava/lang/String;
	public final fun containsKey (Ljava/lang/Object;)Z
	public fun containsKey (Ljava/lang/String;)Z
	public static fun containsKey-impl (Lkotlinx/collections/immutable/PersistentMap;Ljava/lang/String;)Z
	public final fun containsValue (Ljava/lang/Object;)Z
	public fun containsValue (Ljava/lang/String;)Z
	public static fun containsValue-impl (Lkotlinx/collections/immutable/PersistentMap;Ljava/lang/String;)Z
	public synthetic fun entrySet ()Ljava/util/Set;
	public fun equals (Ljava/lang/Object;)Z
	public static fun equals-impl (Lkotlinx/collections/immutable/PersistentMap;Ljava/lang/Object;)Z
	public static final fun equals-impl0 (Lkotlinx/collections/immutable/PersistentMap;Lkotlinx/collections/immutable/PersistentMap;)Z
	public final synthetic fun get (Ljava/lang/Object;)Ljava/lang/Object;
	public final fun get (Ljava/lang/Object;)Ljava/lang/String;
	public fun get (Ljava/lang/String;)Ljava/lang/String;
	public static fun get-impl (Lkotlinx/collections/immutable/PersistentMap;Ljava/lang/String;)Ljava/lang/String;
	public fun getEntries ()Ljava/util/Set;
	public static fun getEntries-impl (Lkotlinx/collections/immutable/PersistentMap;)Ljava/util/Set;
	public fun getKeys ()Ljava/util/Set;
	public static fun getKeys-impl (Lkotlinx/collections/immutable/PersistentMap;)Ljava/util/Set;
	public fun getSize ()I
	public static fun getSize-impl (Lkotlinx/collections/immutable/PersistentMap;)I
	public fun getValues ()Ljava/util/Collection;
	public static fun getValues-impl (Lkotlinx/collections/immutable/PersistentMap;)Ljava/util/Collection;
	public fun hashCode ()I
	public static fun hashCode-impl (Lkotlinx/collections/immutable/PersistentMap;)I
	public fun isEmpty ()Z
	public static fun isEmpty-impl (Lkotlinx/collections/immutable/PersistentMap;)Z
	public synthetic fun keySet ()Ljava/util/Set;
	public synthetic fun merge (Ljava/lang/Object;Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
	public fun merge (Ljava/lang/String;Ljava/lang/String;Ljava/util/function/BiFunction;)Ljava/lang/String;
	public synthetic fun put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
	public fun put (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
	public fun putAll (Ljava/util/Map;)V
	public synthetic fun putIfAbsent (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
	public fun putIfAbsent (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
	public synthetic fun remove (Ljava/lang/Object;)Ljava/lang/Object;
	public fun remove (Ljava/lang/Object;)Ljava/lang/String;
	public fun remove (Ljava/lang/Object;Ljava/lang/Object;)Z
	public synthetic fun replace (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
	public synthetic fun replace (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
	public fun replace (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
	public fun replace (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
	public fun replaceAll (Ljava/util/function/BiFunction;)V
	public synthetic fun size ()I
	public fun toMutable ()Lelide/tooling/MutableEnvironment;
	public static fun toMutable-impl (Lkotlinx/collections/immutable/PersistentMap;)Lelide/tooling/MutableEnvironment;
	public fun toString ()Ljava/lang/String;
	public static fun toString-impl (Lkotlinx/collections/immutable/PersistentMap;)Ljava/lang/String;
	public final synthetic fun unbox-impl ()Lkotlinx/collections/immutable/PersistentMap;
	public synthetic fun values ()Ljava/util/Collection;
}

public final class elide/tooling/MutableJvmMultiPathContainer : elide/tooling/MultiPath$MutableMultiPathContainer {
	public fun <init> (Lelide/tooling/JvmMultiPath;Ljava/util/List;Ljava/util/Set;)V
	public synthetic fun <init> (Lelide/tooling/JvmMultiPath;Ljava/util/List;Ljava/util/Set;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun add (Lelide/tooling/MultiPath$Entry;)Z
	public fun add (Lelide/tooling/MultiPath;)Z
	public synthetic fun add (Ljava/lang/Object;)Z
	public fun add (Ljava/nio/file/Path;)Z
	public fun addAll (Ljava/util/Collection;)Z
	public fun asArgumentSequence ()Lkotlin/sequences/Sequence;
	public fun asArgumentString (Lelide/tooling/ArgumentContext;)Ljava/lang/String;
	public fun asPathSequence ()Lkotlin/sequences/Sequence;
	public fun build ()Lelide/tooling/MultiPath$MultiPathContainer;
	public fun clear ()V
	public static final fun empty ()Lelide/tooling/MutableJvmMultiPathContainer;
	public static final fun from (Lelide/tooling/JvmMultiPath;Ljava/util/Collection;)Lelide/tooling/MutableJvmMultiPathContainer;
	public fun getEntries ()Ljava/util/Set;
	public fun getPaths ()Ljava/util/List;
	public fun getRole ()Lelide/tooling/JvmMultiPath;
	public synthetic fun getRole ()Ljava/lang/Enum;
	public fun iterator ()Ljava/util/Iterator;
	public static final fun of (Lelide/tooling/JvmMultiPath;Ljava/nio/file/Path;[Ljava/nio/file/Path;)Lelide/tooling/MutableJvmMultiPathContainer;
	public synthetic fun plus (Lelide/tooling/MultiPath;)Lelide/tooling/MultiPath$MultiPathContainer;
	public synthetic fun plus (Lelide/tooling/MultiPath;)Lelide/tooling/MultiPath$MutableMultiPathContainer;
	public synthetic fun plus (Lelide/tooling/MultiPath;)Lelide/tooling/MultiPath;
	public fun plus (Lelide/tooling/MultiPath;)Lelide/tooling/MutableJvmMultiPathContainer;
	public synthetic fun plus (Ljava/nio/file/Path;)Lelide/tooling/MultiPath$MultiPathContainer;
	public synthetic fun plus (Ljava/nio/file/Path;)Lelide/tooling/MultiPath$MutableMultiPathContainer;
	public synthetic fun plus (Ljava/nio/file/Path;)Lelide/tooling/MultiPath;
	public fun plus (Ljava/nio/file/Path;)Lelide/tooling/MutableJvmMultiPathContainer;
	public synthetic fun plus (Ljava/util/Collection;)Lelide/tooling/MultiPath$MultiPathContainer;
	public synthetic fun plus (Ljava/util/Collection;)Lelide/tooling/MultiPath$MutableMultiPathContainer;
	public synthetic fun plus (Ljava/util/Collection;)Lelide/tooling/MultiPath;
	public fun plus (Ljava/util/Collection;)Lelide/tooling/MutableJvmMultiPathContainer;
	public synthetic fun plus (Lkotlin/sequences/Sequence;)Lelide/tooling/MultiPath$MultiPathContainer;
	public synthetic fun plus (Lkotlin/sequences/Sequence;)Lelide/tooling/MultiPath$MutableMultiPathContainer;
	public synthetic fun plus (Lkotlin/sequences/Sequence;)Lelide/tooling/MultiPath;
	public fun plus (Lkotlin/sequences/Sequence;)Lelide/tooling/MutableJvmMultiPathContainer;
	public fun prepend (Lelide/tooling/MultiPath$Entry;)Z
	public fun prepend (Lelide/tooling/MultiPath;)Z
	public fun prepend (Ljava/nio/file/Path;)Z
	public fun remove (Lelide/tooling/MultiPath$Entry;)Z
	public final fun remove (Ljava/lang/Object;)Z
	public fun removeAll (Ljava/util/Collection;)Z
	public fun retainAll (Ljava/util/Collection;)Z
	public fun set (ILjava/nio/file/Path;)Z
	public fun setEntries (Ljava/util/Set;)V
	public fun setPaths (Ljava/util/List;)V
	public fun toArray ()[Ljava/lang/Object;
	public fun toArray ([Ljava/lang/Object;)[Ljava/lang/Object;
	public synthetic fun toMutable ()Lelide/tooling/MultiPath$MutableMultiPath;
	public synthetic fun toMutable ()Lelide/tooling/MultiPath$MutableMultiPathContainer;
	public fun toMutable ()Lelide/tooling/MutableJvmMultiPathContainer;
}

public final synthetic class elide/tooling/MutableJvmMultiPathContainer$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/MutableJvmMultiPathContainer$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/MutableJvmMultiPathContainer;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/MutableJvmMultiPathContainer;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/MutableModulepath : elide/tooling/MultiPath$MutableMultiPathContainer {
	public static final field Companion Lelide/tooling/MutableModulepath$Companion;
	public synthetic fun <init> (Lelide/tooling/MutableJvmMultiPathContainer;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun add (Lelide/tooling/MultiPath$Entry;)Z
	public fun add (Lelide/tooling/MultiPath;)Z
	public synthetic fun add (Ljava/lang/Object;)Z
	public fun add (Ljava/nio/file/Path;)Z
	public fun addAll (Ljava/util/Collection;)Z
	public fun asArgumentList (Lelide/tooling/ArgumentContext;)Ljava/util/List;
	public fun asArgumentSequence ()Lkotlin/sequences/Sequence;
	public fun asArgumentString (Lelide/tooling/ArgumentContext;)Ljava/lang/String;
	public fun asArgumentStrings (Lelide/tooling/ArgumentContext;)Lkotlin/sequences/Sequence;
	public fun asList ()Ljava/util/List;
	public fun asPathSequence ()Lkotlin/sequences/Sequence;
	public fun asSequence ()Lkotlin/sequences/Sequence;
	public fun build ()Lelide/tooling/MultiPath$MultiPathContainer;
	public fun clear ()V
	public fun contains (Lelide/tooling/MultiPath$Entry;)Z
	public final fun contains (Ljava/lang/Object;)Z
	public fun contains (Ljava/lang/String;)Z
	public fun contains (Ljava/nio/file/Path;)Z
	public fun containsAll (Ljava/util/Collection;)Z
	public static final fun empty ()Lelide/tooling/MutableModulepath;
	public static final fun from (Ljava/util/Collection;)Lelide/tooling/MutableModulepath;
	public fun get (I)Lelide/tooling/Argument;
	public fun get-WZ4Q5Ns (I)Lelide/tooling/JvmMultiPathEntry;
	public synthetic fun get-WZ4Q5Ns (I)Lelide/tooling/MultiPath$Entry;
	public fun getEntries ()Ljava/util/Set;
	public fun getPaths ()Ljava/util/List;
	public fun getRole ()Lelide/tooling/JvmMultiPath;
	public synthetic fun getRole ()Ljava/lang/Enum;
	public fun getSize ()I
	public fun isEmpty ()Z
	public fun iterator ()Ljava/util/Iterator;
	public static final fun of (Ljava/nio/file/Path;[Ljava/nio/file/Path;)Lelide/tooling/MutableModulepath;
	public synthetic fun plus (Lelide/tooling/MultiPath;)Lelide/tooling/MultiPath$MultiPathContainer;
	public fun plus (Lelide/tooling/MultiPath;)Lelide/tooling/MultiPath$MutableMultiPathContainer;
	public synthetic fun plus (Lelide/tooling/MultiPath;)Lelide/tooling/MultiPath;
	public synthetic fun plus (Ljava/nio/file/Path;)Lelide/tooling/MultiPath$MultiPathContainer;
	public fun plus (Ljava/nio/file/Path;)Lelide/tooling/MultiPath$MutableMultiPathContainer;
	public synthetic fun plus (Ljava/nio/file/Path;)Lelide/tooling/MultiPath;
	public synthetic fun plus (Ljava/util/Collection;)Lelide/tooling/MultiPath$MultiPathContainer;
	public fun plus (Ljava/util/Collection;)Lelide/tooling/MultiPath$MutableMultiPathContainer;
	public synthetic fun plus (Ljava/util/Collection;)Lelide/tooling/MultiPath;
	public synthetic fun plus (Lkotlin/sequences/Sequence;)Lelide/tooling/MultiPath$MultiPathContainer;
	public fun plus (Lkotlin/sequences/Sequence;)Lelide/tooling/MultiPath$MutableMultiPathContainer;
	public synthetic fun plus (Lkotlin/sequences/Sequence;)Lelide/tooling/MultiPath;
	public fun prepend (Lelide/tooling/MultiPath$Entry;)Z
	public fun prepend (Lelide/tooling/MultiPath;)Z
	public fun prepend (Ljava/nio/file/Path;)Z
	public fun remove (Lelide/tooling/MultiPath$Entry;)Z
	public final fun remove (Ljava/lang/Object;)Z
	public fun removeAll (Ljava/util/Collection;)Z
	public fun retainAll (Ljava/util/Collection;)Z
	public fun set (ILjava/nio/file/Path;)Z
	public final fun size ()I
	public fun toArray ()[Ljava/lang/Object;
	public fun toArray ([Ljava/lang/Object;)[Ljava/lang/Object;
	public synthetic fun toMutable ()Lelide/tooling/MultiPath$MutableMultiPath;
	public fun toMutable ()Lelide/tooling/MultiPath$MutableMultiPathContainer;
}

public final class elide/tooling/MutableModulepath$Companion {
	public final fun empty ()Lelide/tooling/MutableModulepath;
	public final fun from (Ljava/util/Collection;)Lelide/tooling/MutableModulepath;
	public final fun of (Ljava/nio/file/Path;[Ljava/nio/file/Path;)Lelide/tooling/MutableModulepath;
}

public abstract interface class elide/tooling/Outputs {
	public static final field Companion Lelide/tooling/Outputs$Companion;
}

public final class elide/tooling/Outputs$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract interface class elide/tooling/Outputs$Disk : elide/tooling/Outputs {
}

public abstract interface class elide/tooling/Outputs$Disk$Directory : elide/tooling/Outputs$Disk {
}

public abstract interface class elide/tooling/Outputs$Disk$File : elide/tooling/Outputs$Disk {
}

public abstract interface class elide/tooling/Outputs$Memory : elide/tooling/Outputs {
}

public abstract interface class elide/tooling/Outputs$None : elide/tooling/Outputs {
}

public abstract interface class elide/tooling/Tool {
	public static final field Companion Lelide/tooling/Tool$Companion;
	public static fun describe (Ljava/lang/String;Lelide/tooling/Inputs;Lelide/tooling/Outputs;Ljava/net/URI;Lelide/tooling/Arguments;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lelide/tooling/Environment;Ljava/lang/String;Z)Lelide/tooling/Tool$CommandLineTool;
	public static fun describe (Ljava/lang/String;Ljava/net/URI;Lelide/tooling/Arguments;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lelide/tooling/Environment;Ljava/lang/String;Z)Lelide/tooling/Tool$CommandLineTool;
	public abstract fun getDescription ()Ljava/lang/String;
	public abstract fun getDocs ()Ljava/net/URI;
	public abstract fun getLabel ()Ljava/lang/String;
	public abstract fun getName ()Ljava/lang/String;
	public abstract fun getVersion ()Ljava/lang/String;
}

public abstract interface class elide/tooling/Tool$CommandLineTool : elide/tooling/Tool {
	public abstract fun extend (Lelide/tooling/Arguments;Lelide/tooling/Environment;)Lelide/tooling/Tool$CommandLineTool;
	public static synthetic fun extend$default (Lelide/tooling/Tool$CommandLineTool;Lelide/tooling/Arguments;Lelide/tooling/Environment;ILjava/lang/Object;)Lelide/tooling/Tool$CommandLineTool;
	public abstract fun getArgs ()Lelide/tooling/Arguments;
	public abstract fun getEnvironment ()Lelide/tooling/Environment;
	public abstract fun help ()Ljava/lang/StringBuilder;
	public abstract fun using (Lelide/tooling/Inputs;Lelide/tooling/Outputs;)Lelide/tooling/Tool$CommandLineTool;
}

public final class elide/tooling/Tool$Companion {
	public final fun describe (Ljava/lang/String;Lelide/tooling/Inputs;Lelide/tooling/Outputs;Ljava/net/URI;Lelide/tooling/Arguments;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lelide/tooling/Environment;Ljava/lang/String;Z)Lelide/tooling/Tool$CommandLineTool;
	public final fun describe (Ljava/lang/String;Ljava/net/URI;Lelide/tooling/Arguments;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lelide/tooling/Environment;Ljava/lang/String;Z)Lelide/tooling/Tool$CommandLineTool;
	public static synthetic fun describe$default (Lelide/tooling/Tool$Companion;Ljava/lang/String;Lelide/tooling/Inputs;Lelide/tooling/Outputs;Ljava/net/URI;Lelide/tooling/Arguments;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lelide/tooling/Environment;Ljava/lang/String;ZILjava/lang/Object;)Lelide/tooling/Tool$CommandLineTool;
	public static synthetic fun describe$default (Lelide/tooling/Tool$Companion;Ljava/lang/String;Ljava/net/URI;Lelide/tooling/Arguments;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lelide/tooling/Environment;Ljava/lang/String;ZILjava/lang/Object;)Lelide/tooling/Tool$CommandLineTool;
	public final fun getGlobalToolRegistry ()Ljava/util/concurrent/ConcurrentSkipListMap;
}

public final class elide/tooling/Tool$ComplexCliTool : elide/tooling/Tool$CommandLineTool, elide/tooling/Tool$KnownInputs, elide/tooling/Tool$KnownOutputs {
	public fun extend (Lelide/tooling/Arguments;Lelide/tooling/Environment;)Lelide/tooling/Tool$CommandLineTool;
	public fun getArgs ()Lelide/tooling/Arguments;
	public fun getDescription ()Ljava/lang/String;
	public fun getDocs ()Ljava/net/URI;
	public fun getEnvironment ()Lelide/tooling/Environment;
	public fun getInputs ()Lelide/tooling/Inputs;
	public fun getLabel ()Ljava/lang/String;
	public fun getName ()Ljava/lang/String;
	public fun getOutputs ()Lelide/tooling/Outputs;
	public fun getVersion ()Ljava/lang/String;
	public fun help ()Ljava/lang/StringBuilder;
	public fun using (Lelide/tooling/Inputs;Lelide/tooling/Outputs;)Lelide/tooling/Tool$CommandLineTool;
}

public abstract interface class elide/tooling/Tool$EmbeddedTool : elide/tooling/Tool {
	public abstract fun getInfo ()Lelide/tooling/Tool$CommandLineTool;
	public abstract fun supported ()Z
}

public abstract interface class elide/tooling/Tool$KnownInputs : elide/tooling/Tool {
	public abstract fun getInputs ()Lelide/tooling/Inputs;
}

public abstract interface class elide/tooling/Tool$KnownOutputs : elide/tooling/Tool {
	public abstract fun getOutputs ()Lelide/tooling/Outputs;
}

public abstract interface class elide/tooling/Tool$Result {
	public abstract fun getSuccess ()Z
}

public final class elide/tooling/Tool$Result$Success : elide/tooling/Tool$Result {
	public static final field INSTANCE Lelide/tooling/Tool$Result$Success;
	public fun equals (Ljava/lang/Object;)Z
	public fun getSuccess ()Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/Tool$Result$UnspecifiedFailure : elide/tooling/Tool$Result {
	public static final field INSTANCE Lelide/tooling/Tool$Result$UnspecifiedFailure;
	public fun equals (Ljava/lang/Object;)Z
	public fun getSuccess ()Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/Tool$SimpleCliTool : java/lang/Record, elide/tooling/Tool$CommandLineTool {
	public fun args ()Lelide/tooling/Arguments;
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/net/URI;
	public final fun component3 ()Lelide/tooling/Arguments;
	public final fun component4 ()Ljava/lang/String;
	public final fun component5 ()Ljava/lang/String;
	public final fun component6 ()Ljava/lang/String;
	public final fun component7 ()Lelide/tooling/Environment;
	public fun description ()Ljava/lang/String;
	public fun docs ()Ljava/net/URI;
	public fun environment ()Lelide/tooling/Environment;
	public fun equals (Ljava/lang/Object;)Z
	public fun extend (Lelide/tooling/Arguments;Lelide/tooling/Environment;)Lelide/tooling/Tool$CommandLineTool;
	public synthetic fun getArgs ()Lelide/tooling/Arguments;
	public synthetic fun getDescription ()Ljava/lang/String;
	public synthetic fun getDocs ()Ljava/net/URI;
	public synthetic fun getEnvironment ()Lelide/tooling/Environment;
	public synthetic fun getLabel ()Ljava/lang/String;
	public synthetic fun getName ()Ljava/lang/String;
	public synthetic fun getVersion ()Ljava/lang/String;
	public fun hashCode ()I
	public fun help ()Ljava/lang/StringBuilder;
	public fun label ()Ljava/lang/String;
	public fun name ()Ljava/lang/String;
	public fun toString ()Ljava/lang/String;
	public fun using (Lelide/tooling/Inputs;Lelide/tooling/Outputs;)Lelide/tooling/Tool$CommandLineTool;
	public fun version ()Ljava/lang/String;
}

public abstract interface class elide/tooling/deps/DependencyEcosystem {
	public abstract fun getName ()Ljava/lang/String;
}

public final class elide/tooling/deps/DependencyEcosystem$Gems : elide/tooling/deps/DependencyEcosystem {
	public static final field INSTANCE Lelide/tooling/deps/DependencyEcosystem$Gems;
	public fun equals (Ljava/lang/Object;)Z
	public fun getName ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/deps/DependencyEcosystem$HuggingFace : elide/tooling/deps/DependencyEcosystem {
	public static final field INSTANCE Lelide/tooling/deps/DependencyEcosystem$HuggingFace;
	public fun equals (Ljava/lang/Object;)Z
	public fun getName ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/deps/DependencyEcosystem$JSR : elide/tooling/deps/DependencyEcosystem {
	public static final field INSTANCE Lelide/tooling/deps/DependencyEcosystem$JSR;
	public fun equals (Ljava/lang/Object;)Z
	public fun getName ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/deps/DependencyEcosystem$Maven : elide/tooling/deps/DependencyEcosystem {
	public static final field INSTANCE Lelide/tooling/deps/DependencyEcosystem$Maven;
	public fun equals (Ljava/lang/Object;)Z
	public fun getName ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/deps/DependencyEcosystem$NPM : elide/tooling/deps/DependencyEcosystem {
	public static final field INSTANCE Lelide/tooling/deps/DependencyEcosystem$NPM;
	public fun equals (Ljava/lang/Object;)Z
	public fun getName ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/deps/DependencyEcosystem$PyPI : elide/tooling/deps/DependencyEcosystem {
	public static final field INSTANCE Lelide/tooling/deps/DependencyEcosystem$PyPI;
	public fun equals (Ljava/lang/Object;)Z
	public fun getName ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract interface class elide/tooling/deps/DependencyResolver : elide/tooling/lockfile/LockfileContributor, java/lang/AutoCloseable {
	public fun contribute (Ljava/nio/file/Path;Lelide/tooling/project/ElideProject;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getEcosystem ()Lelide/tooling/deps/DependencyEcosystem;
	public abstract fun resolve (Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun seal (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class elide/tooling/deps/DependencyResolver$JsrResolver : elide/tooling/deps/DependencyResolver {
	public fun getEcosystem ()Lelide/tooling/deps/DependencyEcosystem;
}

public abstract interface class elide/tooling/deps/DependencyResolver$MavenResolver : elide/tooling/deps/DependencyResolver {
	public fun getEcosystem ()Lelide/tooling/deps/DependencyEcosystem;
}

public abstract interface class elide/tooling/deps/DependencyResolver$NpmResolver : elide/tooling/deps/DependencyResolver {
	public fun getEcosystem ()Lelide/tooling/deps/DependencyEcosystem;
}

public abstract interface class elide/tooling/deps/DependencyResolver$PyPiResolver : elide/tooling/deps/DependencyResolver {
	public fun getEcosystem ()Lelide/tooling/deps/DependencyEcosystem;
}

public abstract interface class elide/tooling/deps/PackageSpec {
	public static final field Companion Lelide/tooling/deps/PackageSpec$Companion;
	public static final field LATEST_VERSION Ljava/lang/String;
	public static final field PREFIX_MAVEN Ljava/lang/String;
	public static final field PREFIX_NPM Ljava/lang/String;
	public static final field PREFIX_PIP Ljava/lang/String;
	public static final field SNAPSHOT_VERSION Ljava/lang/String;
	public static final field STABLE_VERSION Ljava/lang/String;
	public abstract fun getAmbiguous ()Z
	public abstract fun getEcosystem ()Lelide/tooling/deps/DependencyEcosystem;
	public abstract fun getFormatted ()Ljava/lang/String;
	public abstract fun getModule ()Ljava/lang/String;
	public abstract fun getNamespace ()Ljava/lang/String;
	public abstract fun getPurl ()Lcom/github/packageurl/PackageURL;
	public abstract fun getString ()Ljava/lang/String;
	public abstract fun getVersion ()Lelide/tooling/deps/PackageSpec$Version;
	public static fun parse (Ljava/lang/String;Lelide/tooling/project/ElideProject;Lelide/tooling/deps/DependencyEcosystem;)Lelide/tooling/deps/PackageSpec;
	public static fun tryParse (Ljava/lang/String;Lelide/tooling/project/ElideProject;Lelide/tooling/deps/DependencyEcosystem;)Lelide/tooling/deps/PackageSpec;
}

public final class elide/tooling/deps/PackageSpec$AmbiguousEcosystem : elide/tooling/deps/PackageSpec$ParseError {
	public fun <init> ()V
	public final fun getCandidates ()Ljava/util/List;
}

public final class elide/tooling/deps/PackageSpec$Companion {
	public static final field LATEST_VERSION Ljava/lang/String;
	public static final field PREFIX_MAVEN Ljava/lang/String;
	public static final field PREFIX_NPM Ljava/lang/String;
	public static final field PREFIX_PIP Ljava/lang/String;
	public static final field SNAPSHOT_VERSION Ljava/lang/String;
	public static final field STABLE_VERSION Ljava/lang/String;
	public final fun parse (Ljava/lang/String;Lelide/tooling/project/ElideProject;Lelide/tooling/deps/DependencyEcosystem;)Lelide/tooling/deps/PackageSpec;
	public static synthetic fun parse$default (Lelide/tooling/deps/PackageSpec$Companion;Ljava/lang/String;Lelide/tooling/project/ElideProject;Lelide/tooling/deps/DependencyEcosystem;ILjava/lang/Object;)Lelide/tooling/deps/PackageSpec;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public final fun tryParse (Ljava/lang/String;Lelide/tooling/project/ElideProject;Lelide/tooling/deps/DependencyEcosystem;)Lelide/tooling/deps/PackageSpec;
	public static synthetic fun tryParse$default (Lelide/tooling/deps/PackageSpec$Companion;Ljava/lang/String;Lelide/tooling/project/ElideProject;Lelide/tooling/deps/DependencyEcosystem;ILjava/lang/Object;)Lelide/tooling/deps/PackageSpec;
}

public final class elide/tooling/deps/PackageSpec$MavenPackageSpec : elide/tooling/deps/PackageSpec$SpecializedPackageSpec {
	public static final field Companion Lelide/tooling/deps/PackageSpec$MavenPackageSpec$Companion;
	public final fun getClassifier ()Ljava/lang/String;
	public fun getFormatted ()Ljava/lang/String;
	public final fun getGroupId ()Ljava/lang/String;
	public fun getModule ()Ljava/lang/String;
	public final fun getName ()Ljava/lang/String;
	public fun getNamespace ()Ljava/lang/String;
}

public final class elide/tooling/deps/PackageSpec$MavenPackageSpec$Companion : elide/tooling/deps/PackageSpec$SpecializedPackageSpecParser {
	public fun parse (Ljava/lang/String;)Lelide/tooling/deps/PackageSpec$MavenPackageSpec;
	public synthetic fun parse (Ljava/lang/String;)Lelide/tooling/deps/PackageSpec$SpecializedPackageSpec;
}

public final class elide/tooling/deps/PackageSpec$NoVersion : elide/tooling/deps/PackageSpec$Version {
	public static final field INSTANCE Lelide/tooling/deps/PackageSpec$NoVersion;
	public fun equals (Ljava/lang/Object;)Z
	public fun getFormatted ()Ljava/lang/String;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/deps/PackageSpec$NpmPackageSpec : elide/tooling/deps/PackageSpec$SpecializedPackageSpec {
	public static final field Companion Lelide/tooling/deps/PackageSpec$NpmPackageSpec$Companion;
	public fun getFormatted ()Ljava/lang/String;
	public fun getModule ()Ljava/lang/String;
	public final fun getName ()Ljava/lang/String;
	public fun getNamespace ()Ljava/lang/String;
	public final fun getScope ()Ljava/lang/String;
}

public final class elide/tooling/deps/PackageSpec$NpmPackageSpec$Companion : elide/tooling/deps/PackageSpec$SpecializedPackageSpecParser {
	public fun parse (Ljava/lang/String;)Lelide/tooling/deps/PackageSpec$NpmPackageSpec;
	public synthetic fun parse (Ljava/lang/String;)Lelide/tooling/deps/PackageSpec$SpecializedPackageSpec;
}

public final class elide/tooling/deps/PackageSpec$NpmSemverOperator : java/lang/Enum, elide/tooling/deps/PackageSpec$SemverOperator {
	public static final field CARET Lelide/tooling/deps/PackageSpec$NpmSemverOperator;
	public static final field Companion Lelide/tooling/deps/PackageSpec$NpmSemverOperator$Companion;
	public static final field TILDE Lelide/tooling/deps/PackageSpec$NpmSemverOperator;
	public fun getEffective ()Lelide/tooling/deps/PackageSpec$SimpleSemverOperator;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public fun getFormatted ()Ljava/lang/String;
	public static fun valueOf (Ljava/lang/String;)Lelide/tooling/deps/PackageSpec$NpmSemverOperator;
	public static fun values ()[Lelide/tooling/deps/PackageSpec$NpmSemverOperator;
}

public final class elide/tooling/deps/PackageSpec$NpmSemverOperator$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract class elide/tooling/deps/PackageSpec$ParseError : java/lang/Exception {
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/Throwable;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
}

public final class elide/tooling/deps/PackageSpec$PipPackageSpec : elide/tooling/deps/PackageSpec$SpecializedPackageSpec {
	public static final field Companion Lelide/tooling/deps/PackageSpec$PipPackageSpec$Companion;
	public fun getFormatted ()Ljava/lang/String;
	public fun getModule ()Ljava/lang/String;
	public fun getNamespace ()Ljava/lang/String;
}

public final class elide/tooling/deps/PackageSpec$PipPackageSpec$Companion : elide/tooling/deps/PackageSpec$SpecializedPackageSpecParser {
	public fun parse (Ljava/lang/String;)Lelide/tooling/deps/PackageSpec$PipPackageSpec;
	public synthetic fun parse (Ljava/lang/String;)Lelide/tooling/deps/PackageSpec$SpecializedPackageSpec;
}

public final class elide/tooling/deps/PackageSpec$SemanticVersion : elide/tooling/deps/PackageSpec$Version {
	public static final field Companion Lelide/tooling/deps/PackageSpec$SemanticVersion$Companion;
	public static final synthetic fun box-impl (Lorg/semver4j/Semver;)Lelide/tooling/deps/PackageSpec$SemanticVersion;
	public fun equals (Ljava/lang/Object;)Z
	public static fun equals-impl (Lorg/semver4j/Semver;Ljava/lang/Object;)Z
	public static final fun equals-impl0 (Lorg/semver4j/Semver;Lorg/semver4j/Semver;)Z
	public fun getFormatted ()Ljava/lang/String;
	public static fun getFormatted-impl (Lorg/semver4j/Semver;)Ljava/lang/String;
	public fun hashCode ()I
	public static fun hashCode-impl (Lorg/semver4j/Semver;)I
	public fun toString ()Ljava/lang/String;
	public static fun toString-impl (Lorg/semver4j/Semver;)Ljava/lang/String;
	public final synthetic fun unbox-impl ()Lorg/semver4j/Semver;
}

public final synthetic class elide/tooling/deps/PackageSpec$SemanticVersion$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/deps/PackageSpec$SemanticVersion$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun deserialize-feEs_2A (Lkotlinx/serialization/encoding/Decoder;)Lorg/semver4j/Semver;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public final fun serialize-lvB3Mmw (Lkotlinx/serialization/encoding/Encoder;Lorg/semver4j/Semver;)V
}

public final class elide/tooling/deps/PackageSpec$SemanticVersion$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/deps/PackageSpec$SemanticVersionRange : elide/tooling/deps/PackageSpec$Version {
	public static final field Companion Lelide/tooling/deps/PackageSpec$SemanticVersionRange$Companion;
	public static final synthetic fun box-impl (Lkotlin/Pair;)Lelide/tooling/deps/PackageSpec$SemanticVersionRange;
	public fun equals (Ljava/lang/Object;)Z
	public static fun equals-impl (Lkotlin/Pair;Ljava/lang/Object;)Z
	public static final fun equals-impl0 (Lkotlin/Pair;Lkotlin/Pair;)Z
	public fun getFormatted ()Ljava/lang/String;
	public static fun getFormatted-impl (Lkotlin/Pair;)Ljava/lang/String;
	public fun hashCode ()I
	public static fun hashCode-impl (Lkotlin/Pair;)I
	public fun toString ()Ljava/lang/String;
	public static fun toString-impl (Lkotlin/Pair;)Ljava/lang/String;
	public final synthetic fun unbox-impl ()Lkotlin/Pair;
}

public final synthetic class elide/tooling/deps/PackageSpec$SemanticVersionRange$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/deps/PackageSpec$SemanticVersionRange$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun deserialize-2QLoWv0 (Lkotlinx/serialization/encoding/Decoder;)Lkotlin/Pair;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public final fun serialize-wgC37mI (Lkotlinx/serialization/encoding/Encoder;Lkotlin/Pair;)V
}

public final class elide/tooling/deps/PackageSpec$SemanticVersionRange$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract interface class elide/tooling/deps/PackageSpec$SemverOperator {
	public static final field Companion Lelide/tooling/deps/PackageSpec$SemverOperator$Companion;
	public abstract fun getEffective ()Lelide/tooling/deps/PackageSpec$SimpleSemverOperator;
	public abstract fun getFormatted ()Ljava/lang/String;
}

public final class elide/tooling/deps/PackageSpec$SemverOperator$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/deps/PackageSpec$SimpleSemverOperator : java/lang/Enum, elide/core/api/Symbolic, elide/tooling/deps/PackageSpec$SemverOperator {
	public static final field Companion Lelide/tooling/deps/PackageSpec$SimpleSemverOperator$Companion;
	public static final field EQUALS Lelide/tooling/deps/PackageSpec$SimpleSemverOperator;
	public static final field GREATER_THAN Lelide/tooling/deps/PackageSpec$SimpleSemverOperator;
	public static final field GREATER_THAN_OR_EQUALS Lelide/tooling/deps/PackageSpec$SimpleSemverOperator;
	public static final field LESS_THAN Lelide/tooling/deps/PackageSpec$SimpleSemverOperator;
	public static final field LESS_THAN_OR_EQUALS Lelide/tooling/deps/PackageSpec$SimpleSemverOperator;
	public fun getEffective ()Lelide/tooling/deps/PackageSpec$SimpleSemverOperator;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public fun getFormatted ()Ljava/lang/String;
	public synthetic fun getSymbol ()Ljava/lang/Object;
	public fun getSymbol ()Ljava/lang/String;
	public static fun valueOf (Ljava/lang/String;)Lelide/tooling/deps/PackageSpec$SimpleSemverOperator;
	public static fun values ()[Lelide/tooling/deps/PackageSpec$SimpleSemverOperator;
}

public final class elide/tooling/deps/PackageSpec$SimpleSemverOperator$Companion : elide/core/api/Symbolic$SealedResolver {
	public synthetic fun resolve (Ljava/lang/Object;)Lelide/core/api/Symbolic;
	public fun resolve (Ljava/lang/String;)Lelide/tooling/deps/PackageSpec$SimpleSemverOperator;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract class elide/tooling/deps/PackageSpec$SpecializedPackageSpec : elide/tooling/deps/PackageSpec {
	public synthetic fun <init> (Lelide/tooling/deps/DependencyEcosystem;Lelide/tooling/deps/PackageSpec$Version;Ljava/lang/String;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun equals (Ljava/lang/Object;)Z
	public fun getAmbiguous ()Z
	public fun getEcosystem ()Lelide/tooling/deps/DependencyEcosystem;
	public fun getPurl ()Lcom/github/packageurl/PackageURL;
	public fun getString ()Ljava/lang/String;
	public fun getVersion ()Lelide/tooling/deps/PackageSpec$Version;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract class elide/tooling/deps/PackageSpec$SpecializedPackageSpecParser {
	public abstract fun parse (Ljava/lang/String;)Lelide/tooling/deps/PackageSpec$SpecializedPackageSpec;
	public fun parseVersion (Ljava/lang/String;)Lelide/tooling/deps/PackageSpec$Version;
}

public final class elide/tooling/deps/PackageSpec$SymbolicVersion : java/lang/Enum, elide/core/api/Symbolic, elide/tooling/deps/PackageSpec$Version {
	public static final field Companion Lelide/tooling/deps/PackageSpec$SymbolicVersion$Companion;
	public static final field LATEST Lelide/tooling/deps/PackageSpec$SymbolicVersion;
	public static final field SNAPSHOT Lelide/tooling/deps/PackageSpec$SymbolicVersion;
	public static final field STABLE Lelide/tooling/deps/PackageSpec$SymbolicVersion;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public fun getFormatted ()Ljava/lang/String;
	public synthetic fun getSymbol ()Ljava/lang/Object;
	public fun getSymbol ()Ljava/lang/String;
	public static fun valueOf (Ljava/lang/String;)Lelide/tooling/deps/PackageSpec$SymbolicVersion;
	public static fun values ()[Lelide/tooling/deps/PackageSpec$SymbolicVersion;
}

public final class elide/tooling/deps/PackageSpec$SymbolicVersion$Companion : elide/core/api/Symbolic$SealedResolver {
	public synthetic fun resolve (Ljava/lang/Object;)Lelide/core/api/Symbolic;
	public fun resolve (Ljava/lang/String;)Lelide/tooling/deps/PackageSpec$SymbolicVersion;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract interface class elide/tooling/deps/PackageSpec$Version {
	public static final field Companion Lelide/tooling/deps/PackageSpec$Version$Companion;
	public abstract fun getFormatted ()Ljava/lang/String;
}

public final class elide/tooling/deps/PackageSpec$Version$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/deps/PackageSpec$VersionString : elide/tooling/deps/PackageSpec$Version {
	public static final field Companion Lelide/tooling/deps/PackageSpec$VersionString$Companion;
	public static final synthetic fun box-impl (Ljava/lang/String;)Lelide/tooling/deps/PackageSpec$VersionString;
	public fun equals (Ljava/lang/Object;)Z
	public static fun equals-impl (Ljava/lang/String;Ljava/lang/Object;)Z
	public static final fun equals-impl0 (Ljava/lang/String;Ljava/lang/String;)Z
	public fun getFormatted ()Ljava/lang/String;
	public static fun getFormatted-impl (Ljava/lang/String;)Ljava/lang/String;
	public final fun getVersion ()Ljava/lang/String;
	public fun hashCode ()I
	public static fun hashCode-impl (Ljava/lang/String;)I
	public fun toString ()Ljava/lang/String;
	public static fun toString-impl (Ljava/lang/String;)Ljava/lang/String;
	public final synthetic fun unbox-impl ()Ljava/lang/String;
}

public final synthetic class elide/tooling/deps/PackageSpec$VersionString$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/deps/PackageSpec$VersionString$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun deserialize-mf9Hjcw (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/String;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public final fun serialize-bukAN28 (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/String;)V
}

public final class elide/tooling/deps/PackageSpec$VersionString$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract interface class elide/tooling/lockfile/ElideLockfile {
	public static final field Companion Lelide/tooling/lockfile/ElideLockfile$Companion;
	public abstract fun getFingerprint ()Lelide/tooling/lockfile/ElideLockfile$Fingerprint;
	public abstract fun getStanzas ()Ljava/util/Set;
	public abstract fun getVersion ()Lelide/tooling/lockfile/ElideLockfile$Version;
	public static fun latest ()Lelide/tooling/lockfile/LockfileDefinition;
	public static fun supported ()Lkotlin/sequences/Sequence;
}

public final class elide/tooling/lockfile/ElideLockfile$Companion {
	public final fun latest ()Lelide/tooling/lockfile/LockfileDefinition;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public final fun supported ()Lkotlin/sequences/Sequence;
}

public abstract interface class elide/tooling/lockfile/ElideLockfile$Fingerprint : java/lang/Comparable {
	public static final field Companion Lelide/tooling/lockfile/ElideLockfile$Fingerprint$Companion;
	public abstract fun asBytes ()Lkotlinx/io/bytestring/ByteString;
	public fun compareTo (Lelide/tooling/lockfile/ElideLockfile$Fingerprint;)I
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public static fun of (J)Lelide/tooling/lockfile/ElideLockfile$Fingerprint;
	public static fun of (Lelide/core/crypto/HashAlgorithm;[BLelide/core/encoding/Encoding;)Lelide/tooling/lockfile/ElideLockfile$Fingerprint;
	public static fun of (Ljava/lang/String;)Lelide/tooling/lockfile/ElideLockfile$Fingerprint;
	public static fun of (Ljava/util/Collection;)Lelide/tooling/lockfile/ElideLockfile$Fingerprint;
	public static fun of ([B)Lelide/tooling/lockfile/ElideLockfile$Fingerprint;
	public static fun ofFileDigest (Ljava/io/File;)Lelide/tooling/lockfile/ElideLockfile$Fingerprint;
	public static fun ofFileState (Ljava/io/File;)Lelide/tooling/lockfile/ElideLockfile$Fingerprint;
}

public final class elide/tooling/lockfile/ElideLockfile$Fingerprint$Bytes : java/lang/Record, elide/tooling/lockfile/ElideLockfile$Fingerprint, java/io/Serializable {
	public static final field Companion Lelide/tooling/lockfile/ElideLockfile$Fingerprint$Bytes$Companion;
	public fun asBytes ()Lkotlinx/io/bytestring/ByteString;
	public final fun component1 ()[B
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()I
	public final fun digest ()Ljava/lang/String;
	public fun equals (Ljava/lang/Object;)Z
	public static final fun getSerialVersionUID ()J
	public final fun hash ()I
	public fun hashCode ()I
	public static final fun of ([B)Lelide/tooling/lockfile/ElideLockfile$Fingerprint;
	public fun toString ()Ljava/lang/String;
	public final fun value ()[B
}

public final synthetic class elide/tooling/lockfile/ElideLockfile$Fingerprint$Bytes$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/lockfile/ElideLockfile$Fingerprint$Bytes$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/lockfile/ElideLockfile$Fingerprint$Bytes;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/lockfile/ElideLockfile$Fingerprint$Bytes;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/lockfile/ElideLockfile$Fingerprint$Bytes$Companion {
	public final fun getSerialVersionUID ()J
	public final fun of ([B)Lelide/tooling/lockfile/ElideLockfile$Fingerprint;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/lockfile/ElideLockfile$Fingerprint$Companion {
	public final fun of (J)Lelide/tooling/lockfile/ElideLockfile$Fingerprint;
	public final fun of (Lelide/core/crypto/HashAlgorithm;[BLelide/core/encoding/Encoding;)Lelide/tooling/lockfile/ElideLockfile$Fingerprint;
	public final fun of (Ljava/lang/String;)Lelide/tooling/lockfile/ElideLockfile$Fingerprint;
	public final fun of (Ljava/util/Collection;)Lelide/tooling/lockfile/ElideLockfile$Fingerprint;
	public final fun of ([B)Lelide/tooling/lockfile/ElideLockfile$Fingerprint;
	public static synthetic fun of$default (Lelide/tooling/lockfile/ElideLockfile$Fingerprint$Companion;Lelide/core/crypto/HashAlgorithm;[BLelide/core/encoding/Encoding;ILjava/lang/Object;)Lelide/tooling/lockfile/ElideLockfile$Fingerprint;
	public final fun ofFileDigest (Ljava/io/File;)Lelide/tooling/lockfile/ElideLockfile$Fingerprint;
	public final fun ofFileState (Ljava/io/File;)Lelide/tooling/lockfile/ElideLockfile$Fingerprint;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/lockfile/ElideLockfile$Fingerprint$Compound : java/lang/Record, elide/tooling/lockfile/ElideLockfile$Fingerprint, java/io/Serializable {
	public static final field Companion Lelide/tooling/lockfile/ElideLockfile$Fingerprint$Compound$Companion;
	public synthetic fun <init> (Ljava/util/Set;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun asBytes ()Lkotlinx/io/bytestring/ByteString;
	public final fun component1 ()Ljava/util/Set;
	public final fun component2 ()I
	public final fun constituents ()Ljava/util/Set;
	public fun equals (Ljava/lang/Object;)Z
	public static final fun getSerialVersionUID ()J
	public final fun hash ()I
	public fun hashCode ()I
	public static final fun of (I)Lelide/tooling/lockfile/ElideLockfile$Fingerprint$Compound;
	public static final fun of (Ljava/util/Set;)Lelide/tooling/lockfile/ElideLockfile$Fingerprint;
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/lockfile/ElideLockfile$Fingerprint$Compound$Companion {
	public final fun getSerialVersionUID ()J
	public final fun of (I)Lelide/tooling/lockfile/ElideLockfile$Fingerprint$Compound;
	public final fun of (Ljava/util/Set;)Lelide/tooling/lockfile/ElideLockfile$Fingerprint;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/lockfile/ElideLockfile$Fingerprint$Digest : elide/tooling/lockfile/ElideLockfile$Fingerprint, java/io/Serializable {
	public static final field Companion Lelide/tooling/lockfile/ElideLockfile$Fingerprint$Digest$Companion;
	public fun asBytes ()Lkotlinx/io/bytestring/ByteString;
	public static fun asBytes-impl (Lkotlin/Triple;)Lkotlinx/io/bytestring/ByteString;
	public static final synthetic fun box-impl (Lkotlin/Triple;)Lelide/tooling/lockfile/ElideLockfile$Fingerprint$Digest;
	public fun equals (Ljava/lang/Object;)Z
	public static fun equals-impl (Lkotlin/Triple;Ljava/lang/Object;)Z
	public static final fun equals-impl0 (Lkotlin/Triple;Lkotlin/Triple;)Z
	public final fun getPair ()Lkotlin/Triple;
	public static final fun getSerialVersionUID ()J
	public fun hashCode ()I
	public static fun hashCode-impl (Lkotlin/Triple;)I
	public static final fun of (Lelide/core/crypto/HashAlgorithm;Lelide/core/encoding/Encoding;[B)Lelide/tooling/lockfile/ElideLockfile$Fingerprint;
	public fun toString ()Ljava/lang/String;
	public static fun toString-impl (Lkotlin/Triple;)Ljava/lang/String;
	public final synthetic fun unbox-impl ()Lkotlin/Triple;
}

public final synthetic class elide/tooling/lockfile/ElideLockfile$Fingerprint$Digest$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/lockfile/ElideLockfile$Fingerprint$Digest$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun deserialize-sbpk-BE (Lkotlinx/serialization/encoding/Decoder;)Lkotlin/Triple;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public final fun serialize-jEHtoQk (Lkotlinx/serialization/encoding/Encoder;Lkotlin/Triple;)V
}

public final class elide/tooling/lockfile/ElideLockfile$Fingerprint$Digest$Companion {
	public final fun getSerialVersionUID ()J
	public final fun of (Lelide/core/crypto/HashAlgorithm;Lelide/core/encoding/Encoding;[B)Lelide/tooling/lockfile/ElideLockfile$Fingerprint;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/lockfile/ElideLockfile$Fingerprint$FileDigest : elide/tooling/lockfile/ElideLockfile$Fingerprint, java/io/Serializable {
	public static final field Companion Lelide/tooling/lockfile/ElideLockfile$Fingerprint$FileDigest$Companion;
	public fun asBytes ()Lkotlinx/io/bytestring/ByteString;
	public static fun asBytes-impl (Lkotlin/Pair;)Lkotlinx/io/bytestring/ByteString;
	public static final synthetic fun box-impl (Lkotlin/Pair;)Lelide/tooling/lockfile/ElideLockfile$Fingerprint$FileDigest;
	public fun equals (Ljava/lang/Object;)Z
	public static fun equals-impl (Lkotlin/Pair;Ljava/lang/Object;)Z
	public static final fun equals-impl0 (Lkotlin/Pair;Lkotlin/Pair;)Z
	public final fun getPair ()Lkotlin/Pair;
	public static final fun getSerialVersionUID ()J
	public fun hashCode ()I
	public static fun hashCode-impl (Lkotlin/Pair;)I
	public static final fun of (J[B)Lelide/tooling/lockfile/ElideLockfile$Fingerprint;
	public static final fun of (Ljava/io/File;)Lelide/tooling/lockfile/ElideLockfile$Fingerprint;
	public fun toString ()Ljava/lang/String;
	public static fun toString-impl (Lkotlin/Pair;)Ljava/lang/String;
	public final synthetic fun unbox-impl ()Lkotlin/Pair;
}

public final synthetic class elide/tooling/lockfile/ElideLockfile$Fingerprint$FileDigest$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/lockfile/ElideLockfile$Fingerprint$FileDigest$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun deserialize-NlK8oVw (Lkotlinx/serialization/encoding/Decoder;)Lkotlin/Pair;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public final fun serialize-BsX3X4A (Lkotlinx/serialization/encoding/Encoder;Lkotlin/Pair;)V
}

public final class elide/tooling/lockfile/ElideLockfile$Fingerprint$FileDigest$Companion {
	public final fun getSerialVersionUID ()J
	public final fun of (J[B)Lelide/tooling/lockfile/ElideLockfile$Fingerprint;
	public final fun of (Ljava/io/File;)Lelide/tooling/lockfile/ElideLockfile$Fingerprint;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/lockfile/ElideLockfile$Fingerprint$FileState : elide/tooling/lockfile/ElideLockfile$Fingerprint, java/io/Serializable {
	public static final field Companion Lelide/tooling/lockfile/ElideLockfile$Fingerprint$FileState$Companion;
	public fun asBytes ()Lkotlinx/io/bytestring/ByteString;
	public static fun asBytes-impl (Lkotlin/Pair;)Lkotlinx/io/bytestring/ByteString;
	public static final synthetic fun box-impl (Lkotlin/Pair;)Lelide/tooling/lockfile/ElideLockfile$Fingerprint$FileState;
	public fun equals (Ljava/lang/Object;)Z
	public static fun equals-impl (Lkotlin/Pair;Ljava/lang/Object;)Z
	public static final fun equals-impl0 (Lkotlin/Pair;Lkotlin/Pair;)Z
	public final fun getPair ()Lkotlin/Pair;
	public static final fun getSerialVersionUID ()J
	public fun hashCode ()I
	public static fun hashCode-impl (Lkotlin/Pair;)I
	public static final fun of (JJ)Lelide/tooling/lockfile/ElideLockfile$Fingerprint;
	public static final fun of (Ljava/io/File;)Lelide/tooling/lockfile/ElideLockfile$Fingerprint;
	public fun toString ()Ljava/lang/String;
	public static fun toString-impl (Lkotlin/Pair;)Ljava/lang/String;
	public final synthetic fun unbox-impl ()Lkotlin/Pair;
}

public final synthetic class elide/tooling/lockfile/ElideLockfile$Fingerprint$FileState$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/lockfile/ElideLockfile$Fingerprint$FileState$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun deserialize-60n-070 (Lkotlinx/serialization/encoding/Decoder;)Lkotlin/Pair;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public final fun serialize-5L4d2UA (Lkotlinx/serialization/encoding/Encoder;Lkotlin/Pair;)V
}

public final class elide/tooling/lockfile/ElideLockfile$Fingerprint$FileState$Companion {
	public final fun getSerialVersionUID ()J
	public final fun of (JJ)Lelide/tooling/lockfile/ElideLockfile$Fingerprint;
	public final fun of (Ljava/io/File;)Lelide/tooling/lockfile/ElideLockfile$Fingerprint;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/lockfile/ElideLockfile$Fingerprint$NoContent : elide/tooling/lockfile/ElideLockfile$Fingerprint {
	public static final field INSTANCE Lelide/tooling/lockfile/ElideLockfile$Fingerprint$NoContent;
	public fun asBytes ()Lkotlinx/io/bytestring/ByteString;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/lockfile/ElideLockfile$Fingerprint$Numeric : elide/tooling/lockfile/ElideLockfile$Fingerprint, java/io/Serializable {
	public static final field Companion Lelide/tooling/lockfile/ElideLockfile$Fingerprint$Numeric$Companion;
	public fun asBytes ()Lkotlinx/io/bytestring/ByteString;
	public static fun asBytes-impl (J)Lkotlinx/io/bytestring/ByteString;
	public static final synthetic fun box-impl (J)Lelide/tooling/lockfile/ElideLockfile$Fingerprint$Numeric;
	public fun equals (Ljava/lang/Object;)Z
	public static fun equals-impl (JLjava/lang/Object;)Z
	public static final fun equals-impl0 (JJ)Z
	public static final fun getSerialVersionUID ()J
	public final fun getValue ()J
	public fun hashCode ()I
	public static fun hashCode-impl (J)I
	public static final fun of (J)Lelide/tooling/lockfile/ElideLockfile$Fingerprint;
	public fun toString ()Ljava/lang/String;
	public static fun toString-impl (J)Ljava/lang/String;
	public final synthetic fun unbox-impl ()J
}

public final synthetic class elide/tooling/lockfile/ElideLockfile$Fingerprint$Numeric$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/lockfile/ElideLockfile$Fingerprint$Numeric$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun deserialize-_H3wXn4 (Lkotlinx/serialization/encoding/Decoder;)J
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public final fun serialize-w-TI7_E (Lkotlinx/serialization/encoding/Encoder;J)V
}

public final class elide/tooling/lockfile/ElideLockfile$Fingerprint$Numeric$Companion {
	public final fun getSerialVersionUID ()J
	public final fun of (J)Lelide/tooling/lockfile/ElideLockfile$Fingerprint;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/lockfile/ElideLockfile$Fingerprint$RawFingerprint : elide/tooling/lockfile/ElideLockfile$Fingerprint, java/io/Serializable {
	public static final field Companion Lelide/tooling/lockfile/ElideLockfile$Fingerprint$RawFingerprint$Companion;
	public synthetic fun <init> ([BLkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun asBytes ()Lkotlinx/io/bytestring/ByteString;
	public static final fun getSerialVersionUID ()J
	public static final fun of ([B)Lelide/tooling/lockfile/ElideLockfile$Fingerprint;
}

public final synthetic class elide/tooling/lockfile/ElideLockfile$Fingerprint$RawFingerprint$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/lockfile/ElideLockfile$Fingerprint$RawFingerprint$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/lockfile/ElideLockfile$Fingerprint$RawFingerprint;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/lockfile/ElideLockfile$Fingerprint$RawFingerprint;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/lockfile/ElideLockfile$Fingerprint$RawFingerprint$Companion {
	public final fun getSerialVersionUID ()J
	public final fun of ([B)Lelide/tooling/lockfile/ElideLockfile$Fingerprint;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/lockfile/ElideLockfile$Fingerprint$StringValue : elide/tooling/lockfile/ElideLockfile$Fingerprint, java/io/Serializable {
	public static final field Companion Lelide/tooling/lockfile/ElideLockfile$Fingerprint$StringValue$Companion;
	public fun asBytes ()Lkotlinx/io/bytestring/ByteString;
	public static fun asBytes-impl (Ljava/lang/String;)Lkotlinx/io/bytestring/ByteString;
	public static final synthetic fun box-impl (Ljava/lang/String;)Lelide/tooling/lockfile/ElideLockfile$Fingerprint$StringValue;
	public fun equals (Ljava/lang/Object;)Z
	public static fun equals-impl (Ljava/lang/String;Ljava/lang/Object;)Z
	public static final fun equals-impl0 (Ljava/lang/String;Ljava/lang/String;)Z
	public static final fun getSerialVersionUID ()J
	public final fun getValue ()Ljava/lang/String;
	public fun hashCode ()I
	public static fun hashCode-impl (Ljava/lang/String;)I
	public static final fun of (Ljava/lang/String;)Lelide/tooling/lockfile/ElideLockfile$Fingerprint;
	public fun toString ()Ljava/lang/String;
	public static fun toString-impl (Ljava/lang/String;)Ljava/lang/String;
	public final synthetic fun unbox-impl ()Ljava/lang/String;
}

public final synthetic class elide/tooling/lockfile/ElideLockfile$Fingerprint$StringValue$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/lockfile/ElideLockfile$Fingerprint$StringValue$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun deserialize-XBAQx5U (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/String;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public final fun serialize-SQVv7II (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/String;)V
}

public final class elide/tooling/lockfile/ElideLockfile$Fingerprint$StringValue$Companion {
	public final fun getSerialVersionUID ()J
	public final fun of (Ljava/lang/String;)Lelide/tooling/lockfile/ElideLockfile$Fingerprint;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract interface class elide/tooling/lockfile/ElideLockfile$Fingerprinted {
	public abstract fun getFingerprint ()Lelide/tooling/lockfile/ElideLockfile$Fingerprint;
}

public final class elide/tooling/lockfile/ElideLockfile$Format : java/lang/Enum {
	public static final field AUTO Lelide/tooling/lockfile/ElideLockfile$Format;
	public static final field BINARY Lelide/tooling/lockfile/ElideLockfile$Format;
	public static final field JSON Lelide/tooling/lockfile/ElideLockfile$Format;
	public final fun extensionFor (Ljava/lang/String;)Ljava/lang/String;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public final fun getFilename ()Ljava/lang/String;
	public static fun valueOf (Ljava/lang/String;)Lelide/tooling/lockfile/ElideLockfile$Format;
	public static fun values ()[Lelide/tooling/lockfile/ElideLockfile$Format;
}

public abstract interface class elide/tooling/lockfile/ElideLockfile$InputMaterial : elide/tooling/lockfile/ElideLockfile$Fingerprinted, elide/tooling/lockfile/ElideLockfile$LockfileElement {
	public static final field Companion Lelide/tooling/lockfile/ElideLockfile$InputMaterial$Companion;
	public abstract fun getFingerprint ()Lelide/tooling/lockfile/ElideLockfile$Fingerprint;
	public abstract fun getIdentifier ()Ljava/lang/String;
	public abstract fun getRemarks ()Lelide/tooling/lockfile/ElideLockfile$Remarks;
}

public final class elide/tooling/lockfile/ElideLockfile$InputMaterial$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/lockfile/ElideLockfile$InputMaterial$DependencyManifest : java/lang/Record, elide/tooling/lockfile/ElideLockfile$InputMaterial$File, java/io/Serializable {
	public static final field Companion Lelide/tooling/lockfile/ElideLockfile$InputMaterial$DependencyManifest$Companion;
	public synthetic fun <init> (Lelide/tooling/project/ProjectEcosystem;Ljava/lang/String;Lelide/tooling/lockfile/ElideLockfile$Fingerprint;Lelide/tooling/lockfile/ElideLockfile$Remarks;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Lelide/tooling/project/ProjectEcosystem;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Lelide/tooling/lockfile/ElideLockfile$Fingerprint;
	public final fun component4 ()Lelide/tooling/lockfile/ElideLockfile$Remarks;
	public final fun ecosystem ()Lelide/tooling/project/ProjectEcosystem;
	public fun equals (Ljava/lang/Object;)Z
	public fun fingerprint ()Lelide/tooling/lockfile/ElideLockfile$Fingerprint;
	public synthetic fun getFingerprint ()Lelide/tooling/lockfile/ElideLockfile$Fingerprint;
	public synthetic fun getIdentifier ()Ljava/lang/String;
	public synthetic fun getRelativePath ()Ljava/lang/String;
	public synthetic fun getRemarks ()Lelide/tooling/lockfile/ElideLockfile$Remarks;
	public static final fun getSerialVersionUID ()J
	public fun hashCode ()I
	public fun identifier ()Ljava/lang/String;
	public static final fun of (Lelide/tooling/project/ProjectEcosystem;Ljava/lang/String;Lelide/tooling/lockfile/ElideLockfile$Fingerprint;Lelide/tooling/lockfile/ElideLockfile$Remarks;)Lelide/tooling/lockfile/ElideLockfile$InputMaterial$DependencyManifest;
	public fun relativePath ()Ljava/lang/String;
	public fun remarks ()Lelide/tooling/lockfile/ElideLockfile$Remarks;
	public fun toString ()Ljava/lang/String;
}

public final synthetic class elide/tooling/lockfile/ElideLockfile$InputMaterial$DependencyManifest$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/lockfile/ElideLockfile$InputMaterial$DependencyManifest$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/lockfile/ElideLockfile$InputMaterial$DependencyManifest;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/lockfile/ElideLockfile$InputMaterial$DependencyManifest;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/lockfile/ElideLockfile$InputMaterial$DependencyManifest$Companion {
	public final fun getSerialVersionUID ()J
	public final fun of (Lelide/tooling/project/ProjectEcosystem;Ljava/lang/String;Lelide/tooling/lockfile/ElideLockfile$Fingerprint;Lelide/tooling/lockfile/ElideLockfile$Remarks;)Lelide/tooling/lockfile/ElideLockfile$InputMaterial$DependencyManifest;
	public static synthetic fun of$default (Lelide/tooling/lockfile/ElideLockfile$InputMaterial$DependencyManifest$Companion;Lelide/tooling/project/ProjectEcosystem;Ljava/lang/String;Lelide/tooling/lockfile/ElideLockfile$Fingerprint;Lelide/tooling/lockfile/ElideLockfile$Remarks;ILjava/lang/Object;)Lelide/tooling/lockfile/ElideLockfile$InputMaterial$DependencyManifest;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract interface class elide/tooling/lockfile/ElideLockfile$InputMaterial$File : elide/tooling/lockfile/ElideLockfile$InputMaterial {
	public static final field Companion Lelide/tooling/lockfile/ElideLockfile$InputMaterial$File$Companion;
	public abstract fun getRelativePath ()Ljava/lang/String;
}

public final class elide/tooling/lockfile/ElideLockfile$InputMaterial$File$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/lockfile/ElideLockfile$InputMaterial$PeerLockfile : java/lang/Record, elide/tooling/lockfile/ElideLockfile$InputMaterial$File, java/io/Serializable {
	public static final field Companion Lelide/tooling/lockfile/ElideLockfile$InputMaterial$PeerLockfile$Companion;
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;Lelide/tooling/lockfile/ElideLockfile$Fingerprint;Lelide/tooling/lockfile/ElideLockfile$Remarks;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Lelide/tooling/lockfile/ElideLockfile$Fingerprint;
	public final fun component4 ()Lelide/tooling/lockfile/ElideLockfile$Remarks;
	public fun equals (Ljava/lang/Object;)Z
	public fun fingerprint ()Lelide/tooling/lockfile/ElideLockfile$Fingerprint;
	public final fun generatedBy ()Ljava/lang/String;
	public synthetic fun getFingerprint ()Lelide/tooling/lockfile/ElideLockfile$Fingerprint;
	public synthetic fun getIdentifier ()Ljava/lang/String;
	public synthetic fun getRelativePath ()Ljava/lang/String;
	public synthetic fun getRemarks ()Lelide/tooling/lockfile/ElideLockfile$Remarks;
	public static final fun getSerialVersionUID ()J
	public fun hashCode ()I
	public fun identifier ()Ljava/lang/String;
	public static final fun of (Ljava/lang/String;Ljava/lang/String;Lelide/tooling/lockfile/ElideLockfile$Fingerprint;Lelide/tooling/lockfile/ElideLockfile$Remarks;)Lelide/tooling/lockfile/ElideLockfile$InputMaterial$PeerLockfile;
	public fun relativePath ()Ljava/lang/String;
	public fun remarks ()Lelide/tooling/lockfile/ElideLockfile$Remarks;
	public fun toString ()Ljava/lang/String;
}

public final synthetic class elide/tooling/lockfile/ElideLockfile$InputMaterial$PeerLockfile$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/lockfile/ElideLockfile$InputMaterial$PeerLockfile$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/lockfile/ElideLockfile$InputMaterial$PeerLockfile;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/lockfile/ElideLockfile$InputMaterial$PeerLockfile;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/lockfile/ElideLockfile$InputMaterial$PeerLockfile$Companion {
	public final fun getSerialVersionUID ()J
	public final fun of (Ljava/lang/String;Ljava/lang/String;Lelide/tooling/lockfile/ElideLockfile$Fingerprint;Lelide/tooling/lockfile/ElideLockfile$Remarks;)Lelide/tooling/lockfile/ElideLockfile$InputMaterial$PeerLockfile;
	public static synthetic fun of$default (Lelide/tooling/lockfile/ElideLockfile$InputMaterial$PeerLockfile$Companion;Ljava/lang/String;Ljava/lang/String;Lelide/tooling/lockfile/ElideLockfile$Fingerprint;Lelide/tooling/lockfile/ElideLockfile$Remarks;ILjava/lang/Object;)Lelide/tooling/lockfile/ElideLockfile$InputMaterial$PeerLockfile;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract interface class elide/tooling/lockfile/ElideLockfile$LockfileElement : java/lang/Comparable {
	public static final field Companion Lelide/tooling/lockfile/ElideLockfile$LockfileElement$Companion;
	public fun compareTo (Lelide/tooling/lockfile/ElideLockfile$LockfileElement;)I
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public abstract fun getIdentifier ()Ljava/lang/String;
}

public final class elide/tooling/lockfile/ElideLockfile$LockfileElement$Companion {
	public final fun serializer (Lkotlinx/serialization/KSerializer;)Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/lockfile/ElideLockfile$LockfileException : java/lang/RuntimeException {
	public fun <init> (Ljava/lang/String;Ljava/lang/Throwable;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/Throwable;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
}

public final class elide/tooling/lockfile/ElideLockfile$MavenArtifact : java/lang/Record, java/io/Serializable, java/lang/Comparable {
	public static final field Companion Lelide/tooling/lockfile/ElideLockfile$MavenArtifact$Companion;
	public synthetic fun <init> (ILjava/lang/String;Ljava/lang/String;Lelide/tooling/lockfile/ElideLockfile$Fingerprint;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun artifact ()Ljava/lang/String;
	public fun compareTo (Lelide/tooling/lockfile/ElideLockfile$MavenArtifact;)I
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public final fun component1-pVg5ArA ()I
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/lang/String;
	public final fun component4 ()Lelide/tooling/lockfile/ElideLockfile$Fingerprint;
	public final fun coordinate ()Ljava/lang/String;
	public final fun copy-SGjrQA4 (ILjava/lang/String;Ljava/lang/String;Lelide/tooling/lockfile/ElideLockfile$Fingerprint;)Lelide/tooling/lockfile/ElideLockfile$MavenArtifact;
	public static synthetic fun copy-SGjrQA4$default (Lelide/tooling/lockfile/ElideLockfile$MavenArtifact;ILjava/lang/String;Ljava/lang/String;Lelide/tooling/lockfile/ElideLockfile$Fingerprint;ILjava/lang/Object;)Lelide/tooling/lockfile/ElideLockfile$MavenArtifact;
	public fun equals (Ljava/lang/Object;)Z
	public final fun fingerprint ()Lelide/tooling/lockfile/ElideLockfile$Fingerprint;
	public static final fun getSerialVersionUID ()J
	public fun hashCode ()I
	public final fun id ()I
	public fun toString ()Ljava/lang/String;
}

public final synthetic class elide/tooling/lockfile/ElideLockfile$MavenArtifact$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/lockfile/ElideLockfile$MavenArtifact$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/lockfile/ElideLockfile$MavenArtifact;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/lockfile/ElideLockfile$MavenArtifact;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/lockfile/ElideLockfile$MavenArtifact$Companion {
	public final fun getSerialVersionUID ()J
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/lockfile/ElideLockfile$MavenLockfile : java/lang/Record, elide/tooling/lockfile/ElideLockfile$State, java/io/Serializable {
	public static final field Companion Lelide/tooling/lockfile/ElideLockfile$MavenLockfile$Companion;
	public fun <init> (Ljava/util/List;Ljava/util/List;)V
	public final fun classpath ()Ljava/util/List;
	public final fun component1 ()Ljava/util/List;
	public final fun component2 ()Ljava/util/List;
	public final fun copy (Ljava/util/List;Ljava/util/List;)Lelide/tooling/lockfile/ElideLockfile$MavenLockfile;
	public static synthetic fun copy$default (Lelide/tooling/lockfile/ElideLockfile$MavenLockfile;Ljava/util/List;Ljava/util/List;ILjava/lang/Object;)Lelide/tooling/lockfile/ElideLockfile$MavenLockfile;
	public fun equals (Ljava/lang/Object;)Z
	public static final fun getSerialVersionUID ()J
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public final fun usage ()Ljava/util/List;
}

public final synthetic class elide/tooling/lockfile/ElideLockfile$MavenLockfile$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/lockfile/ElideLockfile$MavenLockfile$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/lockfile/ElideLockfile$MavenLockfile;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/lockfile/ElideLockfile$MavenLockfile;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/lockfile/ElideLockfile$MavenLockfile$Companion {
	public final fun getSerialVersionUID ()J
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/lockfile/ElideLockfile$MavenUsage : java/lang/Record, java/io/Serializable {
	public static final field Companion Lelide/tooling/lockfile/ElideLockfile$MavenUsage$Companion;
	public synthetic fun <init> (ILjava/util/Set;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1-pVg5ArA ()I
	public final fun component2 ()Ljava/util/Set;
	public final fun copy-qim9Vi0 (ILjava/util/Set;)Lelide/tooling/lockfile/ElideLockfile$MavenUsage;
	public static synthetic fun copy-qim9Vi0$default (Lelide/tooling/lockfile/ElideLockfile$MavenUsage;ILjava/util/Set;ILjava/lang/Object;)Lelide/tooling/lockfile/ElideLockfile$MavenUsage;
	public fun equals (Ljava/lang/Object;)Z
	public static final fun getSerialVersionUID ()J
	public fun hashCode ()I
	public final fun id ()I
	public fun toString ()Ljava/lang/String;
	public final fun types ()Ljava/util/Set;
}

public final synthetic class elide/tooling/lockfile/ElideLockfile$MavenUsage$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/lockfile/ElideLockfile$MavenUsage$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/lockfile/ElideLockfile$MavenUsage;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/lockfile/ElideLockfile$MavenUsage;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/lockfile/ElideLockfile$MavenUsage$Companion {
	public final fun getSerialVersionUID ()J
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/lockfile/ElideLockfile$MavenUsageType : java/lang/Enum, java/io/Serializable {
	public static final field COMPILE Lelide/tooling/lockfile/ElideLockfile$MavenUsageType;
	public static final field Companion Lelide/tooling/lockfile/ElideLockfile$MavenUsageType$Companion;
	public static final field PROCESSORS Lelide/tooling/lockfile/ElideLockfile$MavenUsageType;
	public static final field RUNTIME Lelide/tooling/lockfile/ElideLockfile$MavenUsageType;
	public static final field TEST Lelide/tooling/lockfile/ElideLockfile$MavenUsageType;
	public static final field TEST_PROCESSORS Lelide/tooling/lockfile/ElideLockfile$MavenUsageType;
	public static final field TEST_RUNTIME Lelide/tooling/lockfile/ElideLockfile$MavenUsageType;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public static fun valueOf (Ljava/lang/String;)Lelide/tooling/lockfile/ElideLockfile$MavenUsageType;
	public static fun values ()[Lelide/tooling/lockfile/ElideLockfile$MavenUsageType;
}

public final class elide/tooling/lockfile/ElideLockfile$MavenUsageType$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract interface class elide/tooling/lockfile/ElideLockfile$Remarks {
	public static final field Companion Lelide/tooling/lockfile/ElideLockfile$Remarks$Companion;
	public abstract fun getMessage ()Ljava/lang/String;
	public static fun text (Ljava/lang/String;)Lelide/tooling/lockfile/ElideLockfile$Remarks;
}

public final class elide/tooling/lockfile/ElideLockfile$Remarks$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public final fun text (Ljava/lang/String;)Lelide/tooling/lockfile/ElideLockfile$Remarks;
}

public final class elide/tooling/lockfile/ElideLockfile$Remarks$None : elide/tooling/lockfile/ElideLockfile$Remarks {
	public static final field INSTANCE Lelide/tooling/lockfile/ElideLockfile$Remarks$None;
	public fun equals (Ljava/lang/Object;)Z
	public fun getMessage ()Ljava/lang/String;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/lockfile/ElideLockfile$Remarks$Text : java/lang/Record, elide/tooling/lockfile/ElideLockfile$Remarks, java/io/Serializable {
	public static final field Companion Lelide/tooling/lockfile/ElideLockfile$Remarks$Text$Companion;
	public final fun component1 ()Ljava/lang/String;
	public fun equals (Ljava/lang/Object;)Z
	public synthetic fun getMessage ()Ljava/lang/String;
	public static final fun getSerialVersionUID ()J
	public fun hashCode ()I
	public fun message ()Ljava/lang/String;
	public fun toString ()Ljava/lang/String;
}

public final synthetic class elide/tooling/lockfile/ElideLockfile$Remarks$Text$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/lockfile/ElideLockfile$Remarks$Text$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/lockfile/ElideLockfile$Remarks$Text;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/lockfile/ElideLockfile$Remarks$Text;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/lockfile/ElideLockfile$Remarks$Text$Companion {
	public final fun getSerialVersionUID ()J
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract interface class elide/tooling/lockfile/ElideLockfile$Stanza : elide/tooling/lockfile/ElideLockfile$Fingerprinted, elide/tooling/lockfile/ElideLockfile$LockfileElement {
	public static final field Companion Lelide/tooling/lockfile/ElideLockfile$Stanza$Companion;
	public abstract fun getContributedBy ()Ljava/lang/String;
	public abstract fun getFingerprint ()Lelide/tooling/lockfile/ElideLockfile$Fingerprint;
	public abstract fun getInputs ()Ljava/util/Set;
	public abstract fun getRemarks ()Lelide/tooling/lockfile/ElideLockfile$Remarks;
	public abstract fun getState ()Lelide/tooling/lockfile/ElideLockfile$State;
}

public final class elide/tooling/lockfile/ElideLockfile$Stanza$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/lockfile/ElideLockfile$StanzaData : java/lang/Record, elide/tooling/lockfile/ElideLockfile$Stanza {
	public static final field Companion Lelide/tooling/lockfile/ElideLockfile$StanzaData$Companion;
	public fun <init> (Ljava/lang/String;Lelide/tooling/lockfile/ElideLockfile$Fingerprint;Ljava/lang/String;Ljava/util/Set;Lelide/tooling/lockfile/ElideLockfile$Remarks;Lelide/tooling/lockfile/ElideLockfile$State;)V
	public synthetic fun <init> (Ljava/lang/String;Lelide/tooling/lockfile/ElideLockfile$Fingerprint;Ljava/lang/String;Ljava/util/Set;Lelide/tooling/lockfile/ElideLockfile$Remarks;Lelide/tooling/lockfile/ElideLockfile$State;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Lelide/tooling/lockfile/ElideLockfile$Fingerprint;
	public final fun component3 ()Ljava/lang/String;
	public final fun component4 ()Ljava/util/Set;
	public final fun component5 ()Lelide/tooling/lockfile/ElideLockfile$Remarks;
	public final fun component6 ()Lelide/tooling/lockfile/ElideLockfile$State;
	public fun contributedBy ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;Lelide/tooling/lockfile/ElideLockfile$Fingerprint;Ljava/lang/String;Ljava/util/Set;Lelide/tooling/lockfile/ElideLockfile$Remarks;Lelide/tooling/lockfile/ElideLockfile$State;)Lelide/tooling/lockfile/ElideLockfile$StanzaData;
	public static synthetic fun copy$default (Lelide/tooling/lockfile/ElideLockfile$StanzaData;Ljava/lang/String;Lelide/tooling/lockfile/ElideLockfile$Fingerprint;Ljava/lang/String;Ljava/util/Set;Lelide/tooling/lockfile/ElideLockfile$Remarks;Lelide/tooling/lockfile/ElideLockfile$State;ILjava/lang/Object;)Lelide/tooling/lockfile/ElideLockfile$StanzaData;
	public fun equals (Ljava/lang/Object;)Z
	public fun fingerprint ()Lelide/tooling/lockfile/ElideLockfile$Fingerprint;
	public synthetic fun getContributedBy ()Ljava/lang/String;
	public synthetic fun getFingerprint ()Lelide/tooling/lockfile/ElideLockfile$Fingerprint;
	public synthetic fun getIdentifier ()Ljava/lang/String;
	public synthetic fun getInputs ()Ljava/util/Set;
	public synthetic fun getRemarks ()Lelide/tooling/lockfile/ElideLockfile$Remarks;
	public synthetic fun getState ()Lelide/tooling/lockfile/ElideLockfile$State;
	public fun hashCode ()I
	public fun identifier ()Ljava/lang/String;
	public fun inputs ()Ljava/util/Set;
	public fun remarks ()Lelide/tooling/lockfile/ElideLockfile$Remarks;
	public fun state ()Lelide/tooling/lockfile/ElideLockfile$State;
	public fun toString ()Ljava/lang/String;
}

public final synthetic class elide/tooling/lockfile/ElideLockfile$StanzaData$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/lockfile/ElideLockfile$StanzaData$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/lockfile/ElideLockfile$StanzaData;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/lockfile/ElideLockfile$StanzaData;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/lockfile/ElideLockfile$StanzaData$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract interface class elide/tooling/lockfile/ElideLockfile$State {
	public static final field Companion Lelide/tooling/lockfile/ElideLockfile$State$Companion;
}

public final class elide/tooling/lockfile/ElideLockfile$State$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/lockfile/ElideLockfile$State$NoState : elide/tooling/lockfile/ElideLockfile$State {
	public static final field INSTANCE Lelide/tooling/lockfile/ElideLockfile$State$NoState;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toString ()Ljava/lang/String;
}

public abstract interface class elide/tooling/lockfile/ElideLockfile$Version {
	public static final field Companion Lelide/tooling/lockfile/ElideLockfile$Version$Companion;
	public fun getCurrent ()Z
	public fun getDefaultFilename ()Ljava/lang/String;
	public fun getDefaultFormat ()Lelide/tooling/lockfile/ElideLockfile$Format;
	public fun getDefaultPath ()Ljava/nio/file/Path;
	public abstract fun getLabel ()Ljava/lang/String;
	public abstract fun getOrdinal-pVg5ArA ()I
	public fun getSupported ()Z
}

public final class elide/tooling/lockfile/ElideLockfile$Version$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/lockfile/Fingerprints {
	public static final field INSTANCE Lelide/tooling/lockfile/Fingerprints;
	public static final fun buildFrom (Ljava/util/List;)Lelide/tooling/lockfile/ElideLockfile$Fingerprint;
	public static final fun forBytes ([B)Lelide/tooling/lockfile/ElideLockfile$Fingerprint;
	public static final fun forFile (Ljava/nio/file/Path;Z)Lelide/tooling/lockfile/ElideLockfile$Fingerprint;
	public static synthetic fun forFile$default (Ljava/nio/file/Path;ZILjava/lang/Object;)Lelide/tooling/lockfile/ElideLockfile$Fingerprint;
	public static final fun forProject (Lelide/tooling/project/ElideProject;)Lelide/tooling/lockfile/ElideLockfile$Fingerprint;
}

public abstract interface class elide/tooling/lockfile/InterpretedLockfile {
	public abstract fun getDefinition ()Lelide/tooling/lockfile/LockfileDefinition;
	public abstract fun getDuration-FghU774 ()Lkotlin/time/Duration;
	public abstract fun getFormat ()Lelide/tooling/lockfile/ElideLockfile$Format;
	public abstract fun getLockfile ()Lelide/tooling/lockfile/ElideLockfile;
	public abstract fun getPath ()Ljava/nio/file/Path;
	public abstract fun getRoot ()Ljava/nio/file/Path;
	public abstract fun updateTo-dnQKTGw (Lkotlin/time/Duration;Lkotlin/jvm/functions/Function0;)Lelide/tooling/lockfile/InterpretedLockfile;
	public static synthetic fun updateTo-dnQKTGw$default (Lelide/tooling/lockfile/InterpretedLockfile;Lkotlin/time/Duration;Lkotlin/jvm/functions/Function0;ILjava/lang/Object;)Lelide/tooling/lockfile/InterpretedLockfile;
}

public abstract interface class elide/tooling/lockfile/LockfileContributor {
	public abstract fun contribute (Ljava/nio/file/Path;Lelide/tooling/project/ElideProject;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class elide/tooling/lockfile/LockfileContributors {
	public static final field INSTANCE Lelide/tooling/lockfile/LockfileContributors;
	public static final fun collect ()Lkotlin/sequences/Sequence;
}

public abstract interface class elide/tooling/lockfile/LockfileDefinition {
	public abstract fun readFrom (Lelide/tooling/lockfile/ElideLockfile$Format;Ljava/io/InputStream;)Lelide/tooling/lockfile/ElideLockfile;
	public abstract fun writeTo (Lelide/tooling/lockfile/ElideLockfile$Format;Lelide/tooling/lockfile/ElideLockfile;Ljava/io/OutputStream;)V
}

public final class elide/tooling/lockfile/LockfileFnsKt {
	public static final fun loadLockfile (Lkotlinx/coroutines/CoroutineScope;Ljava/nio/file/Path;Lelide/tooling/lockfile/LockfileDefinition;)Lkotlinx/coroutines/Deferred;
	public static synthetic fun loadLockfile$default (Lkotlinx/coroutines/CoroutineScope;Ljava/nio/file/Path;Lelide/tooling/lockfile/LockfileDefinition;ILjava/lang/Object;)Lkotlinx/coroutines/Deferred;
	public static final fun loadLockfileSafe (Ljava/nio/file/Path;Lelide/tooling/lockfile/LockfileDefinition;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun loadLockfileSafe$default (Ljava/nio/file/Path;Lelide/tooling/lockfile/LockfileDefinition;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
}

public abstract interface class elide/tooling/lockfile/LockfileLoader {
	public abstract fun loadLockfile (Ljava/nio/file/Path;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class elide/tooling/lockfile/LockfileStanza {
	public static final field INSTANCE Lelide/tooling/lockfile/LockfileStanza;
	public static final field MAVEN Ljava/lang/String;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/lockfile/Lockfiles {
	public static final field INSTANCE Lelide/tooling/lockfile/Lockfiles;
	public static final fun build ([Lelide/tooling/lockfile/ElideLockfile$Stanza;)Lelide/tooling/lockfile/ElideLockfile;
	public static final fun create (Ljava/nio/file/Path;Lelide/tooling/project/ElideProject;Ljava/util/List;Lelide/tooling/lockfile/LockfileContributor;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun create$default (Ljava/nio/file/Path;Lelide/tooling/project/ElideProject;Ljava/util/List;Lelide/tooling/lockfile/LockfileContributor;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static final fun read (Ljava/nio/file/Path;Lelide/tooling/lockfile/LockfileDefinition;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun read$default (Ljava/nio/file/Path;Lelide/tooling/lockfile/LockfileDefinition;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static final fun write (Lelide/tooling/lockfile/ElideLockfile;Ljava/nio/file/Path;Lelide/tooling/lockfile/ElideLockfile$Format;Lelide/tooling/lockfile/LockfileDefinition;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class elide/tooling/project/ElideConfiguredProject : elide/tooling/project/ElideProject {
	public abstract fun getActiveLockfile ()Lelide/tooling/lockfile/InterpretedLockfile;
	public abstract fun getResourcesPath ()Ljava/nio/file/Path;
	public abstract fun getSourceSets ()Lelide/tooling/project/SourceSets;
}

public abstract interface class elide/tooling/project/ElideProject {
	public fun activeWorkspace ()Lkotlin/Pair;
	public abstract fun getEnv ()Lelide/tooling/project/ProjectEnvironment;
	public abstract fun getManifest ()Lelide/tooling/project/manifest/ElidePackageManifest;
	public abstract fun getRoot ()Ljava/nio/file/Path;
	public abstract fun getWorkspace ()Ljava/nio/file/Path;
	public abstract fun load (Lelide/tooling/project/ElideProjectLoader;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class elide/tooling/project/ElideProjectInfo : java/lang/Record, elide/tooling/project/ElideProject {
	public static final field Companion Lelide/tooling/project/ElideProjectInfo$Companion;
	public fun <init> (Ljava/nio/file/Path;Lelide/tooling/project/manifest/ElidePackageManifest;Lelide/tooling/project/ProjectEnvironment;Ljava/nio/file/Path;)V
	public synthetic fun <init> (Ljava/nio/file/Path;Lelide/tooling/project/manifest/ElidePackageManifest;Lelide/tooling/project/ProjectEnvironment;Ljava/nio/file/Path;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/nio/file/Path;
	public final fun component2 ()Lelide/tooling/project/manifest/ElidePackageManifest;
	public final fun component3 ()Lelide/tooling/project/ProjectEnvironment;
	public final fun component4 ()Ljava/nio/file/Path;
	public final fun copy (Ljava/nio/file/Path;Lelide/tooling/project/manifest/ElidePackageManifest;Lelide/tooling/project/ProjectEnvironment;Ljava/nio/file/Path;)Lelide/tooling/project/ElideProjectInfo;
	public static synthetic fun copy$default (Lelide/tooling/project/ElideProjectInfo;Ljava/nio/file/Path;Lelide/tooling/project/manifest/ElidePackageManifest;Lelide/tooling/project/ProjectEnvironment;Ljava/nio/file/Path;ILjava/lang/Object;)Lelide/tooling/project/ElideProjectInfo;
	public fun env ()Lelide/tooling/project/ProjectEnvironment;
	public fun equals (Ljava/lang/Object;)Z
	public synthetic fun getEnv ()Lelide/tooling/project/ProjectEnvironment;
	public synthetic fun getManifest ()Lelide/tooling/project/manifest/ElidePackageManifest;
	public synthetic fun getRoot ()Ljava/nio/file/Path;
	public synthetic fun getWorkspace ()Ljava/nio/file/Path;
	public fun hashCode ()I
	public fun load (Lelide/tooling/project/ElideProjectLoader;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun manifest ()Lelide/tooling/project/manifest/ElidePackageManifest;
	public fun root ()Ljava/nio/file/Path;
	public fun toString ()Ljava/lang/String;
	public fun workspace ()Ljava/nio/file/Path;
}

public final synthetic class elide/tooling/project/ElideProjectInfo$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/ElideProjectInfo$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/ElideProjectInfo;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/ElideProjectInfo;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/ElideProjectInfo$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract interface class elide/tooling/project/ElideProjectLoader {
	public abstract fun getLockfileLoader ()Lelide/tooling/lockfile/LockfileLoader;
	public abstract fun getResourcesPath ()Ljava/nio/file/Path;
	public abstract fun getSourceSetFactory ()Lelide/tooling/project/SourceSetFactory;
}

public abstract interface class elide/tooling/project/PackageManifestService {
	public abstract fun encode (Lelide/tooling/project/manifest/PackageManifest;Ljava/io/OutputStream;)V
	public abstract fun export (Lelide/tooling/project/manifest/ElidePackageManifest;Lelide/tooling/project/ProjectEcosystem;)Lelide/tooling/project/manifest/PackageManifest;
	public abstract fun merge (Ljava/lang/Iterable;)Lelide/tooling/project/manifest/ElidePackageManifest;
	public abstract fun parse (Ljava/io/InputStream;Lelide/tooling/project/ProjectEcosystem;)Lelide/tooling/project/manifest/PackageManifest;
	public abstract fun parse (Ljava/nio/file/Path;)Lelide/tooling/project/manifest/PackageManifest;
	public abstract fun resolve (Ljava/nio/file/Path;Lelide/tooling/project/ProjectEcosystem;)Ljava/nio/file/Path;
	public static synthetic fun resolve$default (Lelide/tooling/project/PackageManifestService;Ljava/nio/file/Path;Lelide/tooling/project/ProjectEcosystem;ILjava/lang/Object;)Ljava/nio/file/Path;
}

public final class elide/tooling/project/ProjectEcosystem : java/lang/Enum {
	public static final field Elide Lelide/tooling/project/ProjectEcosystem;
	public static final field GradleCatalog Lelide/tooling/project/ProjectEcosystem;
	public static final field MavenPom Lelide/tooling/project/ProjectEcosystem;
	public static final field Node Lelide/tooling/project/ProjectEcosystem;
	public static final field Python Lelide/tooling/project/ProjectEcosystem;
	public static final field PythonRequirements Lelide/tooling/project/ProjectEcosystem;
	public static final field Ruby Lelide/tooling/project/ProjectEcosystem;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public static fun valueOf (Ljava/lang/String;)Lelide/tooling/project/ProjectEcosystem;
	public static fun values ()[Lelide/tooling/project/ProjectEcosystem;
}

public final class elide/tooling/project/ProjectEnvironment : java/lang/Record {
	public static final field Companion Lelide/tooling/project/ProjectEnvironment$Companion;
	public synthetic fun <init> (Ljava/util/Map;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/util/Map;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun plus (Lelide/tooling/project/ProjectEnvironment;)Lelide/tooling/project/ProjectEnvironment;
	public fun toString ()Ljava/lang/String;
	public final fun vars ()Ljava/util/Map;
	public static final fun wrapping (Ljava/util/Map;)Lelide/tooling/project/ProjectEnvironment;
}

public final synthetic class elide/tooling/project/ProjectEnvironment$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/ProjectEnvironment$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/ProjectEnvironment;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/ProjectEnvironment;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/ProjectEnvironment$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public final fun wrapping (Ljava/util/Map;)Lelide/tooling/project/ProjectEnvironment;
}

public final class elide/tooling/project/SourceFilePath : java/lang/Record, java/lang/Comparable {
	public fun <init> (Ljava/nio/file/Path;Lelide/tooling/project/SourceSetLanguage;)V
	public synthetic fun <init> (Ljava/nio/file/Path;Lelide/tooling/project/SourceSetLanguage;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun compareTo (Lelide/tooling/project/SourceFilePath;)I
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public final fun component1 ()Ljava/nio/file/Path;
	public final fun component2 ()Lelide/tooling/project/SourceSetLanguage;
	public final fun copy (Ljava/nio/file/Path;Lelide/tooling/project/SourceSetLanguage;)Lelide/tooling/project/SourceFilePath;
	public static synthetic fun copy$default (Lelide/tooling/project/SourceFilePath;Ljava/nio/file/Path;Lelide/tooling/project/SourceSetLanguage;ILjava/lang/Object;)Lelide/tooling/project/SourceFilePath;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun lang ()Lelide/tooling/project/SourceSetLanguage;
	public final fun path ()Ljava/nio/file/Path;
	public fun toString ()Ljava/lang/String;
}

public abstract interface class elide/tooling/project/SourceSet {
	public abstract fun getLanguages ()Ljava/util/Set;
	public abstract fun getName ()Ljava/lang/String;
	public abstract fun getPaths ()Ljava/util/SortedSet;
	public abstract fun getSpec ()Ljava/util/List;
	public abstract fun getType ()Lelide/tooling/project/SourceSetType;
}

public abstract interface class elide/tooling/project/SourceSetFactory {
	public abstract fun load (Ljava/nio/file/Path;Ljava/lang/String;Lelide/tooling/project/manifest/ElidePackageManifest$SourceSet;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class elide/tooling/project/SourceSetFactory$Default : elide/tooling/project/SourceSetFactory {
	public static final field INSTANCE Lelide/tooling/project/SourceSetFactory$Default;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun load (Ljava/nio/file/Path;Ljava/lang/String;Lelide/tooling/project/manifest/ElidePackageManifest$SourceSet;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun toString ()Ljava/lang/String;
}

public abstract interface class elide/tooling/project/SourceSetLanguage {
}

public final class elide/tooling/project/SourceSetLanguage$JSX : elide/tooling/project/SourceSetLanguage, elide/tooling/project/SourceSetLanguage$SourceVariant {
	public static final field INSTANCE Lelide/tooling/project/SourceSetLanguage$JSX;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/project/SourceSetLanguage$Java : elide/tooling/project/SourceSetLanguage {
	public static final field INSTANCE Lelide/tooling/project/SourceSetLanguage$Java;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/project/SourceSetLanguage$JavaScript : elide/tooling/project/SourceSetLanguage {
	public static final field INSTANCE Lelide/tooling/project/SourceSetLanguage$JavaScript;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/project/SourceSetLanguage$Kotlin : elide/tooling/project/SourceSetLanguage {
	public static final field INSTANCE Lelide/tooling/project/SourceSetLanguage$Kotlin;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/project/SourceSetLanguage$KotlinScript : elide/tooling/project/SourceSetLanguage, elide/tooling/project/SourceSetLanguage$SourceVariant {
	public static final field INSTANCE Lelide/tooling/project/SourceSetLanguage$KotlinScript;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/project/SourceSetLanguage$Python : elide/tooling/project/SourceSetLanguage {
	public static final field INSTANCE Lelide/tooling/project/SourceSetLanguage$Python;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/project/SourceSetLanguage$Ruby : elide/tooling/project/SourceSetLanguage {
	public static final field INSTANCE Lelide/tooling/project/SourceSetLanguage$Ruby;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract interface class elide/tooling/project/SourceSetLanguage$SourceVariant : elide/tooling/project/SourceSetLanguage {
}

public final class elide/tooling/project/SourceSetLanguage$TSX : elide/tooling/project/SourceSetLanguage, elide/tooling/project/SourceSetLanguage$SourceVariant {
	public static final field INSTANCE Lelide/tooling/project/SourceSetLanguage$TSX;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/project/SourceSetLanguage$TypeScript : elide/tooling/project/SourceSetLanguage {
	public static final field INSTANCE Lelide/tooling/project/SourceSetLanguage$TypeScript;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract interface class elide/tooling/project/SourceSetType : java/lang/Comparable {
}

public final class elide/tooling/project/SourceSetType$Sources : elide/tooling/project/SourceSetType {
	public static final field INSTANCE Lelide/tooling/project/SourceSetType$Sources;
	public fun compareTo (Lelide/tooling/project/SourceSetType;)I
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/project/SourceSetType$Tests : elide/tooling/project/SourceSetType {
	public static final field INSTANCE Lelide/tooling/project/SourceSetType$Tests;
	public fun compareTo (Lelide/tooling/project/SourceSetType;)I
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract interface class elide/tooling/project/SourceSets {
	public abstract fun contains (Ljava/lang/String;)Z
	public abstract fun find ([Lelide/tooling/project/SourceSetLanguage;)Lkotlin/sequences/Sequence;
	public abstract fun find ([Lelide/tooling/project/SourceSetType;)Lkotlin/sequences/Sequence;
	public abstract fun get (Ljava/lang/String;)Lelide/tooling/project/SourceSet;
}

public abstract interface class elide/tooling/project/agents/AdviceEnabled {
	public abstract fun advice (Lelide/tooling/project/agents/AgentAdviceBuilder;)V
}

public abstract interface class elide/tooling/project/agents/AdviceStanza : elide/tooling/project/agents/RenderableAdvice {
	public static final field Companion Lelide/tooling/project/agents/AdviceStanza$Companion;
}

public final class elide/tooling/project/agents/AdviceStanza$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/agents/AgentAdvice : java/lang/Record, elide/tooling/project/agents/RenderableAdvice {
	public static final field Companion Lelide/tooling/project/agents/AgentAdvice$Companion;
	public fun <init> (Ljava/util/List;)V
	public static final fun build (Lkotlin/jvm/functions/Function1;)Lelide/tooling/project/agents/AgentAdvice;
	public final fun component1 ()Ljava/util/List;
	public final fun copy (Ljava/util/List;)Lelide/tooling/project/agents/AgentAdvice;
	public static synthetic fun copy$default (Lelide/tooling/project/agents/AgentAdvice;Ljava/util/List;ILjava/lang/Object;)Lelide/tooling/project/agents/AgentAdvice;
	public static final fun defaults (Lelide/tooling/project/ElideConfiguredProject;)Lelide/tooling/project/agents/AgentAdvice;
	public fun equals (Ljava/lang/Object;)Z
	public fun export (Ljava/lang/StringBuilder;)V
	public fun hashCode ()I
	public final fun plus (Lelide/tooling/project/agents/AgentAdvice;)Lelide/tooling/project/agents/AgentAdvice;
	public final fun stanzas ()Ljava/util/List;
	public fun toString ()Ljava/lang/String;
	public static final fun withDefaults (Lelide/tooling/project/ElideConfiguredProject;Lkotlin/jvm/functions/Function1;)Lelide/tooling/project/agents/AgentAdvice;
}

public final synthetic class elide/tooling/project/agents/AgentAdvice$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/agents/AgentAdvice$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/agents/AgentAdvice;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/agents/AgentAdvice;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/agents/AgentAdvice$Companion {
	public final fun build (Lkotlin/jvm/functions/Function1;)Lelide/tooling/project/agents/AgentAdvice;
	public final fun defaults (Lelide/tooling/project/ElideConfiguredProject;)Lelide/tooling/project/agents/AgentAdvice;
	public static synthetic fun defaults$default (Lelide/tooling/project/agents/AgentAdvice$Companion;Lelide/tooling/project/ElideConfiguredProject;ILjava/lang/Object;)Lelide/tooling/project/agents/AgentAdvice;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public final fun withDefaults (Lelide/tooling/project/ElideConfiguredProject;Lkotlin/jvm/functions/Function1;)Lelide/tooling/project/agents/AgentAdvice;
	public static synthetic fun withDefaults$default (Lelide/tooling/project/agents/AgentAdvice$Companion;Lelide/tooling/project/ElideConfiguredProject;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lelide/tooling/project/agents/AgentAdvice;
}

public abstract interface class elide/tooling/project/agents/AgentAdviceBuilder : elide/tooling/project/agents/RenderableAdvice {
	public abstract fun add (Lelide/tooling/project/agents/RenderableAdvice;)Lelide/tooling/project/agents/RenderableAdvice;
	public abstract fun buildWith (Lkotlin/jvm/functions/Function1;)Lelide/tooling/project/agents/RenderableAdvice;
	public fun forProject (Lelide/tooling/project/ElideConfiguredProject;)Lelide/tooling/project/agents/RenderableAdvice;
	public fun heading-tdVZR1g (Ljava/lang/String;)Ljava/lang/String;
	public fun plus (Lelide/tooling/project/agents/RenderableAdvice;)V
	public fun plusAssign (Lelide/tooling/project/agents/RenderableAdvice;)V
	public fun section-nd44FIE (Ljava/lang/String;Ljava/lang/String;)Lkotlin/Pair;
	public fun text-38wvzaY (Ljava/lang/String;)Ljava/lang/String;
	public fun text-38wvzaY (Lkotlin/jvm/functions/Function0;)Ljava/lang/String;
}

public final class elide/tooling/project/agents/ElideAdvice : elide/tooling/project/agents/AdviceEnabled {
	public static final field INSTANCE Lelide/tooling/project/agents/ElideAdvice;
	public fun advice (Lelide/tooling/project/agents/AgentAdviceBuilder;)V
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/project/agents/Heading : elide/tooling/project/agents/AdviceStanza {
	public static final field Companion Lelide/tooling/project/agents/Heading$Companion;
	public static final synthetic fun box-impl (Ljava/lang/String;)Lelide/tooling/project/agents/Heading;
	public fun equals (Ljava/lang/Object;)Z
	public static fun equals-impl (Ljava/lang/String;Ljava/lang/Object;)Z
	public static final fun equals-impl0 (Ljava/lang/String;Ljava/lang/String;)Z
	public fun export (Ljava/lang/StringBuilder;)V
	public static fun export-impl (Ljava/lang/String;Ljava/lang/StringBuilder;)V
	public static final fun getHeadingText-impl (Ljava/lang/String;)Ljava/lang/String;
	public fun hashCode ()I
	public static fun hashCode-impl (Ljava/lang/String;)I
	public fun toString ()Ljava/lang/String;
	public static fun toString-impl (Ljava/lang/String;)Ljava/lang/String;
	public final synthetic fun unbox-impl ()Ljava/lang/String;
}

public final synthetic class elide/tooling/project/agents/Heading$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/agents/Heading$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun deserialize-tdVZR1g (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/String;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public final fun serialize-MfVRbnk (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/String;)V
}

public final class elide/tooling/project/agents/Heading$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/agents/ProjectAdvice : elide/tooling/project/agents/RenderableAdvice {
	public static final field Companion Lelide/tooling/project/agents/ProjectAdvice$Companion;
	public static final fun build (Lelide/tooling/project/ElideConfiguredProject;)Lelide/tooling/project/agents/ProjectAdvice;
	public fun export (Ljava/lang/StringBuilder;)V
}

public final class elide/tooling/project/agents/ProjectAdvice$Companion {
	public final fun build (Lelide/tooling/project/ElideConfiguredProject;)Lelide/tooling/project/agents/ProjectAdvice;
}

public abstract interface class elide/tooling/project/agents/RenderableAdvice {
	public abstract fun export (Ljava/lang/StringBuilder;)V
}

public final class elide/tooling/project/agents/Section : elide/tooling/project/agents/AdviceStanza {
	public static final field Companion Lelide/tooling/project/agents/Section$Companion;
	public static final synthetic fun box-impl (Lkotlin/Pair;)Lelide/tooling/project/agents/Section;
	public fun equals (Ljava/lang/Object;)Z
	public static fun equals-impl (Lkotlin/Pair;Ljava/lang/Object;)Z
	public static final fun equals-impl0 (Lkotlin/Pair;Lkotlin/Pair;)Z
	public fun export (Ljava/lang/StringBuilder;)V
	public static fun export-impl (Lkotlin/Pair;Ljava/lang/StringBuilder;)V
	public static final fun getHeadingText-impl (Lkotlin/Pair;)Ljava/lang/String;
	public static final fun getTextContent-impl (Lkotlin/Pair;)Ljava/lang/String;
	public fun hashCode ()I
	public static fun hashCode-impl (Lkotlin/Pair;)I
	public fun toString ()Ljava/lang/String;
	public static fun toString-impl (Lkotlin/Pair;)Ljava/lang/String;
	public final synthetic fun unbox-impl ()Lkotlin/Pair;
}

public final synthetic class elide/tooling/project/agents/Section$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/agents/Section$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun deserialize-k_NIFGA (Lkotlinx/serialization/encoding/Decoder;)Lkotlin/Pair;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public final fun serialize-O5ZZglA (Lkotlinx/serialization/encoding/Encoder;Lkotlin/Pair;)V
}

public final class elide/tooling/project/agents/Section$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/agents/Text : elide/tooling/project/agents/AdviceStanza {
	public static final field Companion Lelide/tooling/project/agents/Text$Companion;
	public static final synthetic fun box-impl (Ljava/lang/String;)Lelide/tooling/project/agents/Text;
	public fun equals (Ljava/lang/Object;)Z
	public static fun equals-impl (Ljava/lang/String;Ljava/lang/Object;)Z
	public static final fun equals-impl0 (Ljava/lang/String;Ljava/lang/String;)Z
	public fun export (Ljava/lang/StringBuilder;)V
	public static fun export-impl (Ljava/lang/String;Ljava/lang/StringBuilder;)V
	public final fun getContent ()Ljava/lang/String;
	public fun hashCode ()I
	public static fun hashCode-impl (Ljava/lang/String;)I
	public fun toString ()Ljava/lang/String;
	public static fun toString-impl (Ljava/lang/String;)Ljava/lang/String;
	public final synthetic fun unbox-impl ()Ljava/lang/String;
}

public final synthetic class elide/tooling/project/agents/Text$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/agents/Text$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun deserialize-38wvzaY (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/String;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public final fun serialize-Taqz-q4 (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/String;)V
}

public final class elide/tooling/project/agents/Text$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public synthetic class elide/tooling/project/codecs/$ElidePackageManifestCodec$Definition : io/micronaut/context/AbstractInitializableBeanDefinitionAndReference {
	public static final field $ANNOTATION_METADATA Lio/micronaut/core/annotation/AnnotationMetadata;
	public fun <init> ()V
	protected fun <init> (Ljava/lang/Class;Lio/micronaut/context/AbstractInitializableBeanDefinition$MethodOrFieldReference;)V
	public fun instantiate (Lio/micronaut/context/BeanResolutionContext;Lio/micronaut/context/BeanContext;)Ljava/lang/Object;
	public fun isEnabled (Lio/micronaut/context/BeanContext;)Z
	public fun isEnabled (Lio/micronaut/context/BeanContext;Lio/micronaut/context/BeanResolutionContext;)Z
	public fun load ()Lio/micronaut/inject/BeanDefinition;
}

public synthetic class elide/tooling/project/codecs/$GradleCatalogCodec$Definition : io/micronaut/context/AbstractInitializableBeanDefinitionAndReference {
	public static final field $ANNOTATION_METADATA Lio/micronaut/core/annotation/AnnotationMetadata;
	public fun <init> ()V
	protected fun <init> (Ljava/lang/Class;Lio/micronaut/context/AbstractInitializableBeanDefinition$MethodOrFieldReference;)V
	public fun instantiate (Lio/micronaut/context/BeanResolutionContext;Lio/micronaut/context/BeanContext;)Ljava/lang/Object;
	public fun isEnabled (Lio/micronaut/context/BeanContext;)Z
	public fun isEnabled (Lio/micronaut/context/BeanContext;Lio/micronaut/context/BeanResolutionContext;)Z
	public fun load ()Lio/micronaut/inject/BeanDefinition;
}

public synthetic class elide/tooling/project/codecs/$MavenPomManifestCodec$Definition : io/micronaut/context/AbstractInitializableBeanDefinitionAndReference {
	public static final field $ANNOTATION_METADATA Lio/micronaut/core/annotation/AnnotationMetadata;
	public fun <init> ()V
	protected fun <init> (Ljava/lang/Class;Lio/micronaut/context/AbstractInitializableBeanDefinition$MethodOrFieldReference;)V
	public fun instantiate (Lio/micronaut/context/BeanResolutionContext;Lio/micronaut/context/BeanContext;)Ljava/lang/Object;
	public fun isEnabled (Lio/micronaut/context/BeanContext;)Z
	public fun isEnabled (Lio/micronaut/context/BeanContext;Lio/micronaut/context/BeanResolutionContext;)Z
	public fun load ()Lio/micronaut/inject/BeanDefinition;
}

public synthetic class elide/tooling/project/codecs/$NodeManifestCodec$Definition : io/micronaut/context/AbstractInitializableBeanDefinitionAndReference {
	public static final field $ANNOTATION_METADATA Lio/micronaut/core/annotation/AnnotationMetadata;
	public fun <init> ()V
	protected fun <init> (Ljava/lang/Class;Lio/micronaut/context/AbstractInitializableBeanDefinition$MethodOrFieldReference;)V
	public fun instantiate (Lio/micronaut/context/BeanResolutionContext;Lio/micronaut/context/BeanContext;)Ljava/lang/Object;
	public fun isEnabled (Lio/micronaut/context/BeanContext;)Z
	public fun isEnabled (Lio/micronaut/context/BeanContext;Lio/micronaut/context/BeanResolutionContext;)Z
	public fun load ()Lio/micronaut/inject/BeanDefinition;
}

public synthetic class elide/tooling/project/codecs/$PyProjectManifestCodec$Definition : io/micronaut/context/AbstractInitializableBeanDefinitionAndReference {
	public static final field $ANNOTATION_METADATA Lio/micronaut/core/annotation/AnnotationMetadata;
	public fun <init> ()V
	protected fun <init> (Ljava/lang/Class;Lio/micronaut/context/AbstractInitializableBeanDefinition$MethodOrFieldReference;)V
	public fun instantiate (Lio/micronaut/context/BeanResolutionContext;Lio/micronaut/context/BeanContext;)Ljava/lang/Object;
	public fun isEnabled (Lio/micronaut/context/BeanContext;)Z
	public fun isEnabled (Lio/micronaut/context/BeanContext;Lio/micronaut/context/BeanResolutionContext;)Z
	public fun load ()Lio/micronaut/inject/BeanDefinition;
}

public synthetic class elide/tooling/project/codecs/$PythonRequirementsManifestCodec$Definition : io/micronaut/context/AbstractInitializableBeanDefinitionAndReference {
	public static final field $ANNOTATION_METADATA Lio/micronaut/core/annotation/AnnotationMetadata;
	public fun <init> ()V
	protected fun <init> (Ljava/lang/Class;Lio/micronaut/context/AbstractInitializableBeanDefinition$MethodOrFieldReference;)V
	public fun instantiate (Lio/micronaut/context/BeanResolutionContext;Lio/micronaut/context/BeanContext;)Ljava/lang/Object;
	public fun isEnabled (Lio/micronaut/context/BeanContext;)Z
	public fun isEnabled (Lio/micronaut/context/BeanContext;Lio/micronaut/context/BeanResolutionContext;)Z
	public fun load ()Lio/micronaut/inject/BeanDefinition;
}

public final class elide/tooling/project/codecs/ElidePackageManifestCodec : elide/tooling/project/codecs/PackageManifestCodec {
	public static final field DEFAULT_EXTENSION Ljava/lang/String;
	public static final field DEFAULT_NAME Ljava/lang/String;
	public fun <init> ()V
	public fun defaultPath ()Ljava/nio/file/Path;
	public fun fromElidePackage (Lelide/tooling/project/manifest/ElidePackageManifest;)Lelide/tooling/project/manifest/ElidePackageManifest;
	public synthetic fun fromElidePackage (Lelide/tooling/project/manifest/ElidePackageManifest;)Lelide/tooling/project/manifest/PackageManifest;
	public fun parse (Ljava/io/InputStream;)Lelide/tooling/project/manifest/ElidePackageManifest;
	public synthetic fun parse (Ljava/io/InputStream;)Lelide/tooling/project/manifest/PackageManifest;
	public fun supported (Ljava/nio/file/Path;)Z
	public fun toElidePackage (Lelide/tooling/project/manifest/ElidePackageManifest;)Lelide/tooling/project/manifest/ElidePackageManifest;
	public synthetic fun toElidePackage (Lelide/tooling/project/manifest/PackageManifest;)Lelide/tooling/project/manifest/ElidePackageManifest;
	public fun write (Lelide/tooling/project/manifest/ElidePackageManifest;Ljava/io/OutputStream;)V
	public synthetic fun write (Lelide/tooling/project/manifest/PackageManifest;Ljava/io/OutputStream;)V
}

public final class elide/tooling/project/codecs/ElidePackageManifestCodec$ElideBuiltinModuleKey : org/pkl/core/module/ModuleKey, org/pkl/core/module/ResolvedModuleKey {
	public fun <init> (Ljava/net/URI;)V
	public fun getOriginal ()Lorg/pkl/core/module/ModuleKey;
	public fun getUri ()Ljava/net/URI;
	public fun hasHierarchicalUris ()Z
	public fun isGlobbable ()Z
	public fun loadSource ()Ljava/lang/String;
	public fun resolve (Lorg/pkl/core/SecurityManager;)Lorg/pkl/core/module/ResolvedModuleKey;
}

public final class elide/tooling/project/codecs/ElidePackageManifestCodec$ElidePklModuleKeyFactory : org/pkl/core/module/ModuleKeyFactory {
	public fun <init> ()V
	public fun create (Ljava/net/URI;)Ljava/util/Optional;
}

public final class elide/tooling/project/codecs/ElidePackageManifestCodec$ElidePklResourceReader : org/pkl/core/resource/ResourceReader {
	public fun <init> ()V
	public fun getUriScheme ()Ljava/lang/String;
	public fun hasHierarchicalUris ()Z
	public fun isGlobbable ()Z
	public fun read (Ljava/net/URI;)Ljava/util/Optional;
}

public final class elide/tooling/project/codecs/GradleCatalogCodec : elide/tooling/project/codecs/PackageManifestCodec {
	public static final field DEFAULT_NAME Ljava/lang/String;
	public fun <init> ()V
	public fun defaultPath ()Ljava/nio/file/Path;
	public fun fromElidePackage (Lelide/tooling/project/manifest/ElidePackageManifest;)Lelide/tooling/project/manifest/GradleCatalogManifest;
	public synthetic fun fromElidePackage (Lelide/tooling/project/manifest/ElidePackageManifest;)Lelide/tooling/project/manifest/PackageManifest;
	public fun parse (Ljava/io/InputStream;)Lelide/tooling/project/manifest/GradleCatalogManifest;
	public synthetic fun parse (Ljava/io/InputStream;)Lelide/tooling/project/manifest/PackageManifest;
	public fun supported (Ljava/nio/file/Path;)Z
	public fun toElidePackage (Lelide/tooling/project/manifest/GradleCatalogManifest;)Lelide/tooling/project/manifest/ElidePackageManifest;
	public synthetic fun toElidePackage (Lelide/tooling/project/manifest/PackageManifest;)Lelide/tooling/project/manifest/ElidePackageManifest;
	public fun write (Lelide/tooling/project/manifest/GradleCatalogManifest;Ljava/io/OutputStream;)V
	public synthetic fun write (Lelide/tooling/project/manifest/PackageManifest;Ljava/io/OutputStream;)V
}

public abstract interface annotation class elide/tooling/project/codecs/ManifestCodec : java/lang/annotation/Annotation {
	public abstract fun ecosystem ()Lelide/tooling/project/ProjectEcosystem;
}

public final class elide/tooling/project/codecs/MavenPomManifestCodec : elide/tooling/project/codecs/PackageManifestCodec {
	public static final field DEFAULT_EXTENSION Ljava/lang/String;
	public static final field DEFAULT_NAME Ljava/lang/String;
	public fun <init> (Ljakarta/inject/Provider;Ljakarta/inject/Provider;Ljakarta/inject/Provider;)V
	public fun defaultPath ()Ljava/nio/file/Path;
	public fun fromElidePackage (Lelide/tooling/project/manifest/ElidePackageManifest;)Lelide/tooling/project/manifest/MavenPomManifest;
	public synthetic fun fromElidePackage (Lelide/tooling/project/manifest/ElidePackageManifest;)Lelide/tooling/project/manifest/PackageManifest;
	public fun parse (Ljava/io/InputStream;)Lelide/tooling/project/manifest/MavenPomManifest;
	public synthetic fun parse (Ljava/io/InputStream;)Lelide/tooling/project/manifest/PackageManifest;
	public fun parseAsFile (Ljava/nio/file/Path;)Lelide/tooling/project/manifest/MavenPomManifest;
	public synthetic fun parseAsFile (Ljava/nio/file/Path;)Lelide/tooling/project/manifest/PackageManifest;
	public fun supported (Ljava/nio/file/Path;)Z
	public fun toElidePackage (Lelide/tooling/project/manifest/MavenPomManifest;)Lelide/tooling/project/manifest/ElidePackageManifest;
	public synthetic fun toElidePackage (Lelide/tooling/project/manifest/PackageManifest;)Lelide/tooling/project/manifest/ElidePackageManifest;
	public fun write (Lelide/tooling/project/manifest/MavenPomManifest;Ljava/io/OutputStream;)V
	public synthetic fun write (Lelide/tooling/project/manifest/PackageManifest;Ljava/io/OutputStream;)V
}

public final class elide/tooling/project/codecs/MavenPomManifestCodec$MavenModelProblems : java/io/IOException {
	public fun <init> (Ljava/util/List;)V
	public final fun getProblems ()Ljava/util/List;
}

public final class elide/tooling/project/codecs/NodeManifestCodec : elide/tooling/project/codecs/PackageManifestCodec {
	public static final field DEFAULT_EXTENSION Ljava/lang/String;
	public static final field DEFAULT_NAME Ljava/lang/String;
	public fun <init> ()V
	public fun defaultPath ()Ljava/nio/file/Path;
	public fun fromElidePackage (Lelide/tooling/project/manifest/ElidePackageManifest;)Lelide/tooling/project/manifest/NodePackageManifest;
	public synthetic fun fromElidePackage (Lelide/tooling/project/manifest/ElidePackageManifest;)Lelide/tooling/project/manifest/PackageManifest;
	public fun parse (Ljava/io/InputStream;)Lelide/tooling/project/manifest/NodePackageManifest;
	public synthetic fun parse (Ljava/io/InputStream;)Lelide/tooling/project/manifest/PackageManifest;
	public fun supported (Ljava/nio/file/Path;)Z
	public fun toElidePackage (Lelide/tooling/project/manifest/NodePackageManifest;)Lelide/tooling/project/manifest/ElidePackageManifest;
	public synthetic fun toElidePackage (Lelide/tooling/project/manifest/PackageManifest;)Lelide/tooling/project/manifest/ElidePackageManifest;
	public fun write (Lelide/tooling/project/manifest/NodePackageManifest;Ljava/io/OutputStream;)V
	public synthetic fun write (Lelide/tooling/project/manifest/PackageManifest;Ljava/io/OutputStream;)V
}

public abstract interface class elide/tooling/project/codecs/PackageManifestCodec {
	public abstract fun defaultPath ()Ljava/nio/file/Path;
	public abstract fun fromElidePackage (Lelide/tooling/project/manifest/ElidePackageManifest;)Lelide/tooling/project/manifest/PackageManifest;
	public abstract fun parse (Ljava/io/InputStream;)Lelide/tooling/project/manifest/PackageManifest;
	public fun parseAsFile (Ljava/nio/file/Path;)Lelide/tooling/project/manifest/PackageManifest;
	public abstract fun supported (Ljava/nio/file/Path;)Z
	public abstract fun toElidePackage (Lelide/tooling/project/manifest/PackageManifest;)Lelide/tooling/project/manifest/ElidePackageManifest;
	public abstract fun write (Lelide/tooling/project/manifest/PackageManifest;Ljava/io/OutputStream;)V
}

public final class elide/tooling/project/codecs/PyProjectManifestCodec : elide/tooling/project/codecs/PackageManifestCodec {
	public static final field DEFAULT_EXTENSION Ljava/lang/String;
	public static final field DEFAULT_NAME Ljava/lang/String;
	public static final field DEFAULT_PROJECT_NAME Ljava/lang/String;
	public fun <init> ()V
	public fun defaultPath ()Ljava/nio/file/Path;
	public synthetic fun fromElidePackage (Lelide/tooling/project/manifest/ElidePackageManifest;)Lelide/tooling/project/manifest/PackageManifest;
	public fun fromElidePackage (Lelide/tooling/project/manifest/ElidePackageManifest;)Lelide/tooling/project/manifest/PyProjectManifest;
	public synthetic fun parse (Ljava/io/InputStream;)Lelide/tooling/project/manifest/PackageManifest;
	public fun parse (Ljava/io/InputStream;)Lelide/tooling/project/manifest/PyProjectManifest;
	public fun supported (Ljava/nio/file/Path;)Z
	public synthetic fun toElidePackage (Lelide/tooling/project/manifest/PackageManifest;)Lelide/tooling/project/manifest/ElidePackageManifest;
	public fun toElidePackage (Lelide/tooling/project/manifest/PyProjectManifest;)Lelide/tooling/project/manifest/ElidePackageManifest;
	public synthetic fun write (Lelide/tooling/project/manifest/PackageManifest;Ljava/io/OutputStream;)V
	public fun write (Lelide/tooling/project/manifest/PyProjectManifest;Ljava/io/OutputStream;)V
}

public final class elide/tooling/project/codecs/PythonRequirementsManifestCodec : elide/tooling/project/codecs/PackageManifestCodec {
	public static final field DEFAULT_EXTENSION Ljava/lang/String;
	public static final field DEFAULT_NAME Ljava/lang/String;
	public fun <init> ()V
	public fun defaultPath ()Ljava/nio/file/Path;
	public synthetic fun fromElidePackage (Lelide/tooling/project/manifest/ElidePackageManifest;)Lelide/tooling/project/manifest/PackageManifest;
	public fun fromElidePackage-wYB4BT0 (Lelide/tooling/project/manifest/ElidePackageManifest;)Ljava/util/List;
	public synthetic fun parse (Ljava/io/InputStream;)Lelide/tooling/project/manifest/PackageManifest;
	public fun parse-wYB4BT0 (Ljava/io/InputStream;)Ljava/util/List;
	public fun supported (Ljava/nio/file/Path;)Z
	public synthetic fun toElidePackage (Lelide/tooling/project/manifest/PackageManifest;)Lelide/tooling/project/manifest/ElidePackageManifest;
	public fun toElidePackage-2GSRwKQ (Ljava/util/List;)Lelide/tooling/project/manifest/ElidePackageManifest;
	public synthetic fun write (Lelide/tooling/project/manifest/PackageManifest;Ljava/io/OutputStream;)V
	public fun write-lyIW0jc (Ljava/util/List;Ljava/io/OutputStream;)V
}

public final class elide/tooling/project/manifest/ElidePackageManifest : elide/tooling/project/manifest/PackageManifest {
	public static final field Companion Lelide/tooling/project/manifest/ElidePackageManifest$Companion;
	public fun <init> ()V
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Ljava/util/List;Ljava/util/Map;Ljava/util/Map;Lelide/tooling/project/manifest/ElidePackageManifest$DependencyResolution;Lelide/tooling/project/manifest/ElidePackageManifest$JavaScriptSettings;Lelide/tooling/project/manifest/ElidePackageManifest$TypeScriptSettings;Lelide/tooling/project/manifest/ElidePackageManifest$JvmSettings;Lelide/tooling/project/manifest/ElidePackageManifest$KotlinSettings;Lelide/tooling/project/manifest/ElidePackageManifest$PythonSettings;Lelide/tooling/project/manifest/ElidePackageManifest$RubySettings;Lelide/tooling/project/manifest/ElidePackageManifest$PklSettings;Lelide/tooling/project/manifest/ElidePackageManifest$NativeImageSettings;Lelide/tooling/project/manifest/ElidePackageManifest$DevSettings;Ljava/util/Map;Lelide/tooling/project/manifest/ElidePackageManifest$TestingSettings;Lelide/tooling/project/manifest/ElidePackageManifest$LockfileSettings;Lelide/tooling/project/manifest/ElidePackageManifest$WebSettings;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Ljava/util/List;Ljava/util/Map;Ljava/util/Map;Lelide/tooling/project/manifest/ElidePackageManifest$DependencyResolution;Lelide/tooling/project/manifest/ElidePackageManifest$JavaScriptSettings;Lelide/tooling/project/manifest/ElidePackageManifest$TypeScriptSettings;Lelide/tooling/project/manifest/ElidePackageManifest$JvmSettings;Lelide/tooling/project/manifest/ElidePackageManifest$KotlinSettings;Lelide/tooling/project/manifest/ElidePackageManifest$PythonSettings;Lelide/tooling/project/manifest/ElidePackageManifest$RubySettings;Lelide/tooling/project/manifest/ElidePackageManifest$PklSettings;Lelide/tooling/project/manifest/ElidePackageManifest$NativeImageSettings;Lelide/tooling/project/manifest/ElidePackageManifest$DevSettings;Ljava/util/Map;Lelide/tooling/project/manifest/ElidePackageManifest$TestingSettings;Lelide/tooling/project/manifest/ElidePackageManifest$LockfileSettings;Lelide/tooling/project/manifest/ElidePackageManifest$WebSettings;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun activeWorkspace ()Lkotlin/Pair;
	public final fun component1 ()Ljava/lang/String;
	public final fun component10 ()Lelide/tooling/project/manifest/ElidePackageManifest$TypeScriptSettings;
	public final fun component11 ()Lelide/tooling/project/manifest/ElidePackageManifest$JvmSettings;
	public final fun component12 ()Lelide/tooling/project/manifest/ElidePackageManifest$KotlinSettings;
	public final fun component13 ()Lelide/tooling/project/manifest/ElidePackageManifest$PythonSettings;
	public final fun component14 ()Lelide/tooling/project/manifest/ElidePackageManifest$RubySettings;
	public final fun component15 ()Lelide/tooling/project/manifest/ElidePackageManifest$PklSettings;
	public final fun component16 ()Lelide/tooling/project/manifest/ElidePackageManifest$NativeImageSettings;
	public final fun component17 ()Lelide/tooling/project/manifest/ElidePackageManifest$DevSettings;
	public final fun component18 ()Ljava/util/Map;
	public final fun component19 ()Lelide/tooling/project/manifest/ElidePackageManifest$TestingSettings;
	public final fun component2 ()Ljava/lang/String;
	public final fun component20 ()Lelide/tooling/project/manifest/ElidePackageManifest$LockfileSettings;
	public final fun component21 ()Lelide/tooling/project/manifest/ElidePackageManifest$WebSettings;
	public final fun component3 ()Ljava/lang/String;
	public final fun component4 ()Ljava/util/List;
	public final fun component5 ()Ljava/util/List;
	public final fun component6 ()Ljava/util/Map;
	public final fun component7 ()Ljava/util/Map;
	public final fun component8 ()Lelide/tooling/project/manifest/ElidePackageManifest$DependencyResolution;
	public final fun component9 ()Lelide/tooling/project/manifest/ElidePackageManifest$JavaScriptSettings;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Ljava/util/List;Ljava/util/Map;Ljava/util/Map;Lelide/tooling/project/manifest/ElidePackageManifest$DependencyResolution;Lelide/tooling/project/manifest/ElidePackageManifest$JavaScriptSettings;Lelide/tooling/project/manifest/ElidePackageManifest$TypeScriptSettings;Lelide/tooling/project/manifest/ElidePackageManifest$JvmSettings;Lelide/tooling/project/manifest/ElidePackageManifest$KotlinSettings;Lelide/tooling/project/manifest/ElidePackageManifest$PythonSettings;Lelide/tooling/project/manifest/ElidePackageManifest$RubySettings;Lelide/tooling/project/manifest/ElidePackageManifest$PklSettings;Lelide/tooling/project/manifest/ElidePackageManifest$NativeImageSettings;Lelide/tooling/project/manifest/ElidePackageManifest$DevSettings;Ljava/util/Map;Lelide/tooling/project/manifest/ElidePackageManifest$TestingSettings;Lelide/tooling/project/manifest/ElidePackageManifest$LockfileSettings;Lelide/tooling/project/manifest/ElidePackageManifest$WebSettings;)Lelide/tooling/project/manifest/ElidePackageManifest;
	public static synthetic fun copy$default (Lelide/tooling/project/manifest/ElidePackageManifest;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Ljava/util/List;Ljava/util/Map;Ljava/util/Map;Lelide/tooling/project/manifest/ElidePackageManifest$DependencyResolution;Lelide/tooling/project/manifest/ElidePackageManifest$JavaScriptSettings;Lelide/tooling/project/manifest/ElidePackageManifest$TypeScriptSettings;Lelide/tooling/project/manifest/ElidePackageManifest$JvmSettings;Lelide/tooling/project/manifest/ElidePackageManifest$KotlinSettings;Lelide/tooling/project/manifest/ElidePackageManifest$PythonSettings;Lelide/tooling/project/manifest/ElidePackageManifest$RubySettings;Lelide/tooling/project/manifest/ElidePackageManifest$PklSettings;Lelide/tooling/project/manifest/ElidePackageManifest$NativeImageSettings;Lelide/tooling/project/manifest/ElidePackageManifest$DevSettings;Ljava/util/Map;Lelide/tooling/project/manifest/ElidePackageManifest$TestingSettings;Lelide/tooling/project/manifest/ElidePackageManifest$LockfileSettings;Lelide/tooling/project/manifest/ElidePackageManifest$WebSettings;ILjava/lang/Object;)Lelide/tooling/project/manifest/ElidePackageManifest;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getArtifacts ()Ljava/util/Map;
	public final fun getDependencies ()Lelide/tooling/project/manifest/ElidePackageManifest$DependencyResolution;
	public final fun getDescription ()Ljava/lang/String;
	public final fun getDev ()Lelide/tooling/project/manifest/ElidePackageManifest$DevSettings;
	public fun getEcosystem ()Lelide/tooling/project/ProjectEcosystem;
	public final fun getEntrypoint ()Ljava/util/List;
	public final fun getJavascript ()Lelide/tooling/project/manifest/ElidePackageManifest$JavaScriptSettings;
	public final fun getJvm ()Lelide/tooling/project/manifest/ElidePackageManifest$JvmSettings;
	public final fun getKotlin ()Lelide/tooling/project/manifest/ElidePackageManifest$KotlinSettings;
	public final fun getLockfile ()Lelide/tooling/project/manifest/ElidePackageManifest$LockfileSettings;
	public final fun getName ()Ljava/lang/String;
	public final fun getNativeImage ()Lelide/tooling/project/manifest/ElidePackageManifest$NativeImageSettings;
	public final fun getPkl ()Lelide/tooling/project/manifest/ElidePackageManifest$PklSettings;
	public final fun getPython ()Lelide/tooling/project/manifest/ElidePackageManifest$PythonSettings;
	public final fun getRuby ()Lelide/tooling/project/manifest/ElidePackageManifest$RubySettings;
	public final fun getScripts ()Ljava/util/Map;
	public final fun getSources ()Ljava/util/Map;
	public final fun getTests ()Lelide/tooling/project/manifest/ElidePackageManifest$TestingSettings;
	public final fun getTypescript ()Lelide/tooling/project/manifest/ElidePackageManifest$TypeScriptSettings;
	public final fun getVersion ()Ljava/lang/String;
	public final fun getWeb ()Lelide/tooling/project/manifest/ElidePackageManifest$WebSettings;
	public final fun getWorkspaces ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public final fun within (Ljava/nio/file/Path;Lelide/tooling/project/manifest/ElidePackageManifest;)Lelide/tooling/project/manifest/ElidePackageManifest;
}

public final synthetic class elide/tooling/project/manifest/ElidePackageManifest$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/ElidePackageManifest$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/manifest/ElidePackageManifest;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/manifest/ElidePackageManifest;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public abstract interface class elide/tooling/project/manifest/ElidePackageManifest$Artifact {
	public static final field Companion Lelide/tooling/project/manifest/ElidePackageManifest$Artifact$Companion;
	public abstract fun getDependsOn ()Ljava/util/List;
	public abstract fun getFrom ()Ljava/util/List;
}

public final class elide/tooling/project/manifest/ElidePackageManifest$Artifact$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/ElidePackageManifest$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/ElidePackageManifest$ContainerImage : elide/tooling/project/manifest/ElidePackageManifest$Artifact {
	public static final field Companion Lelide/tooling/project/manifest/ElidePackageManifest$ContainerImage$Companion;
	public fun <init> ()V
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Ljava/util/List;Ljava/util/List;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Ljava/util/List;Ljava/util/List;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/util/List;
	public final fun component4 ()Ljava/util/List;
	public final fun component5 ()Ljava/util/List;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Ljava/util/List;Ljava/util/List;)Lelide/tooling/project/manifest/ElidePackageManifest$ContainerImage;
	public static synthetic fun copy$default (Lelide/tooling/project/manifest/ElidePackageManifest$ContainerImage;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Ljava/util/List;Ljava/util/List;ILjava/lang/Object;)Lelide/tooling/project/manifest/ElidePackageManifest$ContainerImage;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getBase ()Ljava/lang/String;
	public fun getDependsOn ()Ljava/util/List;
	public fun getFrom ()Ljava/util/List;
	public final fun getImage ()Ljava/lang/String;
	public final fun getTags ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final synthetic class elide/tooling/project/manifest/ElidePackageManifest$ContainerImage$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/ElidePackageManifest$ContainerImage$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/manifest/ElidePackageManifest$ContainerImage;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/manifest/ElidePackageManifest$ContainerImage;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/manifest/ElidePackageManifest$ContainerImage$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/ElidePackageManifest$CoverageSettings : java/lang/Record {
	public static final field Companion Lelide/tooling/project/manifest/ElidePackageManifest$CoverageSettings$Companion;
	public fun <init> ()V
	public fun <init> (ZLjava/util/List;)V
	public synthetic fun <init> (ZLjava/util/List;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Z
	public final fun component2 ()Ljava/util/List;
	public final fun copy (ZLjava/util/List;)Lelide/tooling/project/manifest/ElidePackageManifest$CoverageSettings;
	public static synthetic fun copy$default (Lelide/tooling/project/manifest/ElidePackageManifest$CoverageSettings;ZLjava/util/List;ILjava/lang/Object;)Lelide/tooling/project/manifest/ElidePackageManifest$CoverageSettings;
	public final fun enabled ()Z
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun paths ()Ljava/util/List;
	public fun toString ()Ljava/lang/String;
}

public final synthetic class elide/tooling/project/manifest/ElidePackageManifest$CoverageSettings$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/ElidePackageManifest$CoverageSettings$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/manifest/ElidePackageManifest$CoverageSettings;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/manifest/ElidePackageManifest$CoverageSettings;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/manifest/ElidePackageManifest$CoverageSettings$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/ElidePackageManifest$CssSettings {
	public static final field Companion Lelide/tooling/project/manifest/ElidePackageManifest$CssSettings$Companion;
	public fun <init> ()V
	public fun <init> (ZLjava/util/List;)V
	public synthetic fun <init> (ZLjava/util/List;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Z
	public final fun component2 ()Ljava/util/List;
	public final fun copy (ZLjava/util/List;)Lelide/tooling/project/manifest/ElidePackageManifest$CssSettings;
	public static synthetic fun copy$default (Lelide/tooling/project/manifest/ElidePackageManifest$CssSettings;ZLjava/util/List;ILjava/lang/Object;)Lelide/tooling/project/manifest/ElidePackageManifest$CssSettings;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getMinify ()Z
	public final fun getTargets ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final synthetic class elide/tooling/project/manifest/ElidePackageManifest$CssSettings$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/ElidePackageManifest$CssSettings$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/manifest/ElidePackageManifest$CssSettings;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/manifest/ElidePackageManifest$CssSettings;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/manifest/ElidePackageManifest$CssSettings$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/ElidePackageManifest$CssTarget {
	public static final field Companion Lelide/tooling/project/manifest/ElidePackageManifest$CssTarget$Companion;
	public fun <init> (Ljava/lang/String;Ljava/lang/String;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;)Lelide/tooling/project/manifest/ElidePackageManifest$CssTarget;
	public static synthetic fun copy$default (Lelide/tooling/project/manifest/ElidePackageManifest$CssTarget;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Lelide/tooling/project/manifest/ElidePackageManifest$CssTarget;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getBrowser ()Ljava/lang/String;
	public final fun getVersion ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final synthetic class elide/tooling/project/manifest/ElidePackageManifest$CssTarget$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/ElidePackageManifest$CssTarget$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/manifest/ElidePackageManifest$CssTarget;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/manifest/ElidePackageManifest$CssTarget;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/manifest/ElidePackageManifest$CssTarget$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract interface class elide/tooling/project/manifest/ElidePackageManifest$DependencyEcosystemConfig {
}

public abstract interface class elide/tooling/project/manifest/ElidePackageManifest$DependencyEcosystemConfig$PackageSpec {
}

public abstract interface class elide/tooling/project/manifest/ElidePackageManifest$DependencyEcosystemConfig$RepositorySpec {
}

public final class elide/tooling/project/manifest/ElidePackageManifest$DependencyResolution : java/lang/Record {
	public static final field Companion Lelide/tooling/project/manifest/ElidePackageManifest$DependencyResolution$Companion;
	public fun <init> ()V
	public fun <init> (Lelide/tooling/project/manifest/ElidePackageManifest$MavenDependencies;Lelide/tooling/project/manifest/ElidePackageManifest$NpmDependencies;Lelide/tooling/project/manifest/ElidePackageManifest$PipDependencies;Lelide/tooling/project/manifest/ElidePackageManifest$GemDependencies;)V
	public synthetic fun <init> (Lelide/tooling/project/manifest/ElidePackageManifest$MavenDependencies;Lelide/tooling/project/manifest/ElidePackageManifest$NpmDependencies;Lelide/tooling/project/manifest/ElidePackageManifest$PipDependencies;Lelide/tooling/project/manifest/ElidePackageManifest$GemDependencies;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Lelide/tooling/project/manifest/ElidePackageManifest$MavenDependencies;
	public final fun component2 ()Lelide/tooling/project/manifest/ElidePackageManifest$NpmDependencies;
	public final fun component3 ()Lelide/tooling/project/manifest/ElidePackageManifest$PipDependencies;
	public final fun component4 ()Lelide/tooling/project/manifest/ElidePackageManifest$GemDependencies;
	public final fun copy (Lelide/tooling/project/manifest/ElidePackageManifest$MavenDependencies;Lelide/tooling/project/manifest/ElidePackageManifest$NpmDependencies;Lelide/tooling/project/manifest/ElidePackageManifest$PipDependencies;Lelide/tooling/project/manifest/ElidePackageManifest$GemDependencies;)Lelide/tooling/project/manifest/ElidePackageManifest$DependencyResolution;
	public static synthetic fun copy$default (Lelide/tooling/project/manifest/ElidePackageManifest$DependencyResolution;Lelide/tooling/project/manifest/ElidePackageManifest$MavenDependencies;Lelide/tooling/project/manifest/ElidePackageManifest$NpmDependencies;Lelide/tooling/project/manifest/ElidePackageManifest$PipDependencies;Lelide/tooling/project/manifest/ElidePackageManifest$GemDependencies;ILjava/lang/Object;)Lelide/tooling/project/manifest/ElidePackageManifest$DependencyResolution;
	public fun equals (Ljava/lang/Object;)Z
	public final fun gems ()Lelide/tooling/project/manifest/ElidePackageManifest$GemDependencies;
	public fun hashCode ()I
	public final fun maven ()Lelide/tooling/project/manifest/ElidePackageManifest$MavenDependencies;
	public final fun npm ()Lelide/tooling/project/manifest/ElidePackageManifest$NpmDependencies;
	public final fun pip ()Lelide/tooling/project/manifest/ElidePackageManifest$PipDependencies;
	public fun toString ()Ljava/lang/String;
}

public final synthetic class elide/tooling/project/manifest/ElidePackageManifest$DependencyResolution$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/ElidePackageManifest$DependencyResolution$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/manifest/ElidePackageManifest$DependencyResolution;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/manifest/ElidePackageManifest$DependencyResolution;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/manifest/ElidePackageManifest$DependencyResolution$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/ElidePackageManifest$DevSettings {
	public static final field Companion Lelide/tooling/project/manifest/ElidePackageManifest$DevSettings$Companion;
	public fun <init> ()V
	public fun <init> (Lelide/tooling/project/manifest/ElidePackageManifest$ProjectSourceSpec;Lelide/tooling/project/manifest/ElidePackageManifest$LspSettings;)V
	public synthetic fun <init> (Lelide/tooling/project/manifest/ElidePackageManifest$ProjectSourceSpec;Lelide/tooling/project/manifest/ElidePackageManifest$LspSettings;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Lelide/tooling/project/manifest/ElidePackageManifest$ProjectSourceSpec;
	public final fun component2 ()Lelide/tooling/project/manifest/ElidePackageManifest$LspSettings;
	public final fun copy (Lelide/tooling/project/manifest/ElidePackageManifest$ProjectSourceSpec;Lelide/tooling/project/manifest/ElidePackageManifest$LspSettings;)Lelide/tooling/project/manifest/ElidePackageManifest$DevSettings;
	public static synthetic fun copy$default (Lelide/tooling/project/manifest/ElidePackageManifest$DevSettings;Lelide/tooling/project/manifest/ElidePackageManifest$ProjectSourceSpec;Lelide/tooling/project/manifest/ElidePackageManifest$LspSettings;ILjava/lang/Object;)Lelide/tooling/project/manifest/ElidePackageManifest$DevSettings;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getLsp ()Lelide/tooling/project/manifest/ElidePackageManifest$LspSettings;
	public final fun getSource ()Lelide/tooling/project/manifest/ElidePackageManifest$ProjectSourceSpec;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final synthetic class elide/tooling/project/manifest/ElidePackageManifest$DevSettings$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/ElidePackageManifest$DevSettings$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/manifest/ElidePackageManifest$DevSettings;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/manifest/ElidePackageManifest$DevSettings;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/manifest/ElidePackageManifest$DevSettings$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/ElidePackageManifest$GemDependencies : java/lang/Record, elide/tooling/project/manifest/ElidePackageManifest$DependencyEcosystemConfig {
	public static final field Companion Lelide/tooling/project/manifest/ElidePackageManifest$GemDependencies$Companion;
	public fun <init> ()V
	public fun <init> (Ljava/util/List;Ljava/util/List;Ljava/util/List;)V
	public synthetic fun <init> (Ljava/util/List;Ljava/util/List;Ljava/util/List;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/util/List;
	public final fun component2 ()Ljava/util/List;
	public final fun component3 ()Ljava/util/List;
	public final fun copy (Ljava/util/List;Ljava/util/List;Ljava/util/List;)Lelide/tooling/project/manifest/ElidePackageManifest$GemDependencies;
	public static synthetic fun copy$default (Lelide/tooling/project/manifest/ElidePackageManifest$GemDependencies;Ljava/util/List;Ljava/util/List;Ljava/util/List;ILjava/lang/Object;)Lelide/tooling/project/manifest/ElidePackageManifest$GemDependencies;
	public final fun devPackages ()Ljava/util/List;
	public fun equals (Ljava/lang/Object;)Z
	public final fun from ()Ljava/util/List;
	public fun hashCode ()I
	public final fun packages ()Ljava/util/List;
	public fun toString ()Ljava/lang/String;
}

public final synthetic class elide/tooling/project/manifest/ElidePackageManifest$GemDependencies$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/ElidePackageManifest$GemDependencies$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/manifest/ElidePackageManifest$GemDependencies;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/manifest/ElidePackageManifest$GemDependencies;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/manifest/ElidePackageManifest$GemDependencies$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/ElidePackageManifest$GemPackage : java/lang/Record, elide/tooling/project/manifest/ElidePackageManifest$DependencyEcosystemConfig$PackageSpec {
	public static final field Companion Lelide/tooling/project/manifest/ElidePackageManifest$GemPackage$Companion;
	public fun <init> (Ljava/lang/String;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;)Lelide/tooling/project/manifest/ElidePackageManifest$GemPackage;
	public static synthetic fun copy$default (Lelide/tooling/project/manifest/ElidePackageManifest$GemPackage;Ljava/lang/String;ILjava/lang/Object;)Lelide/tooling/project/manifest/ElidePackageManifest$GemPackage;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun name ()Ljava/lang/String;
	public fun toString ()Ljava/lang/String;
}

public final synthetic class elide/tooling/project/manifest/ElidePackageManifest$GemPackage$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/ElidePackageManifest$GemPackage$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/manifest/ElidePackageManifest$GemPackage;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/manifest/ElidePackageManifest$GemPackage;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/manifest/ElidePackageManifest$GemPackage$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/ElidePackageManifest$GradleCatalog : java/lang/Record, java/lang/Comparable {
	public static final field Companion Lelide/tooling/project/manifest/ElidePackageManifest$GradleCatalog$Companion;
	public fun <init> (Ljava/lang/String;Ljava/lang/String;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun compareTo (Lelide/tooling/project/manifest/ElidePackageManifest$GradleCatalog;)I
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;)Lelide/tooling/project/manifest/ElidePackageManifest$GradleCatalog;
	public static synthetic fun copy$default (Lelide/tooling/project/manifest/ElidePackageManifest$GradleCatalog;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Lelide/tooling/project/manifest/ElidePackageManifest$GradleCatalog;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun name ()Ljava/lang/String;
	public static final fun parse (Ljava/lang/String;)Lelide/tooling/project/manifest/ElidePackageManifest$GradleCatalog;
	public final fun path ()Ljava/lang/String;
	public fun toString ()Ljava/lang/String;
}

public final synthetic class elide/tooling/project/manifest/ElidePackageManifest$GradleCatalog$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/ElidePackageManifest$GradleCatalog$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/manifest/ElidePackageManifest$GradleCatalog;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/manifest/ElidePackageManifest$GradleCatalog;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/manifest/ElidePackageManifest$GradleCatalog$Companion {
	public final fun parse (Ljava/lang/String;)Lelide/tooling/project/manifest/ElidePackageManifest$GradleCatalog;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/ElidePackageManifest$Jar : elide/tooling/project/manifest/ElidePackageManifest$Artifact {
	public static final field Companion Lelide/tooling/project/manifest/ElidePackageManifest$Jar$Companion;
	public fun <init> ()V
	public fun <init> (Ljava/lang/String;Ljava/util/List;Ljava/util/List;Ljava/util/Map;Lelide/tooling/project/manifest/ElidePackageManifest$JarOptions;Ljava/util/List;Ljava/util/List;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/util/List;Ljava/util/List;Ljava/util/Map;Lelide/tooling/project/manifest/ElidePackageManifest$JarOptions;Ljava/util/List;Ljava/util/List;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/util/List;
	public final fun component3 ()Ljava/util/List;
	public final fun component4 ()Ljava/util/Map;
	public final fun component5 ()Lelide/tooling/project/manifest/ElidePackageManifest$JarOptions;
	public final fun component6 ()Ljava/util/List;
	public final fun component7 ()Ljava/util/List;
	public final fun copy (Ljava/lang/String;Ljava/util/List;Ljava/util/List;Ljava/util/Map;Lelide/tooling/project/manifest/ElidePackageManifest$JarOptions;Ljava/util/List;Ljava/util/List;)Lelide/tooling/project/manifest/ElidePackageManifest$Jar;
	public static synthetic fun copy$default (Lelide/tooling/project/manifest/ElidePackageManifest$Jar;Ljava/lang/String;Ljava/util/List;Ljava/util/List;Ljava/util/Map;Lelide/tooling/project/manifest/ElidePackageManifest$JarOptions;Ljava/util/List;Ljava/util/List;ILjava/lang/Object;)Lelide/tooling/project/manifest/ElidePackageManifest$Jar;
	public fun equals (Ljava/lang/Object;)Z
	public fun getDependsOn ()Ljava/util/List;
	public fun getFrom ()Ljava/util/List;
	public final fun getManifest ()Ljava/util/Map;
	public final fun getName ()Ljava/lang/String;
	public final fun getOptions ()Lelide/tooling/project/manifest/ElidePackageManifest$JarOptions;
	public final fun getResources ()Ljava/util/List;
	public final fun getSources ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final synthetic class elide/tooling/project/manifest/ElidePackageManifest$Jar$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/ElidePackageManifest$Jar$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/manifest/ElidePackageManifest$Jar;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/manifest/ElidePackageManifest$Jar;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/manifest/ElidePackageManifest$Jar$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/ElidePackageManifest$JarOptions {
	public static final field Companion Lelide/tooling/project/manifest/ElidePackageManifest$JarOptions$Companion;
	public fun <init> ()V
	public fun <init> (ZZLjava/lang/String;)V
	public synthetic fun <init> (ZZLjava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Z
	public final fun component2 ()Z
	public final fun component3 ()Ljava/lang/String;
	public final fun copy (ZZLjava/lang/String;)Lelide/tooling/project/manifest/ElidePackageManifest$JarOptions;
	public static synthetic fun copy$default (Lelide/tooling/project/manifest/ElidePackageManifest$JarOptions;ZZLjava/lang/String;ILjava/lang/Object;)Lelide/tooling/project/manifest/ElidePackageManifest$JarOptions;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getCompress ()Z
	public final fun getDefaultManifestProperties ()Z
	public final fun getEntrypoint ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final synthetic class elide/tooling/project/manifest/ElidePackageManifest$JarOptions$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/ElidePackageManifest$JarOptions$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/manifest/ElidePackageManifest$JarOptions;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/manifest/ElidePackageManifest$JarOptions;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/manifest/ElidePackageManifest$JarOptions$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/ElidePackageManifest$JarResource {
	public static final field Companion Lelide/tooling/project/manifest/ElidePackageManifest$JarResource$Companion;
	public fun <init> (Ljava/lang/String;Ljava/lang/String;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;)Lelide/tooling/project/manifest/ElidePackageManifest$JarResource;
	public static synthetic fun copy$default (Lelide/tooling/project/manifest/ElidePackageManifest$JarResource;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Lelide/tooling/project/manifest/ElidePackageManifest$JarResource;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getPath ()Ljava/lang/String;
	public final fun getPosition ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final synthetic class elide/tooling/project/manifest/ElidePackageManifest$JarResource$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/ElidePackageManifest$JarResource$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/manifest/ElidePackageManifest$JarResource;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/manifest/ElidePackageManifest$JarResource;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/manifest/ElidePackageManifest$JarResource$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/ElidePackageManifest$JavaCompilerSettings : java/lang/Record {
	public static final field Companion Lelide/tooling/project/manifest/ElidePackageManifest$JavaCompilerSettings$Companion;
	public fun <init> ()V
	public fun <init> (Ljava/util/List;)V
	public synthetic fun <init> (Ljava/util/List;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/util/List;
	public final fun copy (Ljava/util/List;)Lelide/tooling/project/manifest/ElidePackageManifest$JavaCompilerSettings;
	public static synthetic fun copy$default (Lelide/tooling/project/manifest/ElidePackageManifest$JavaCompilerSettings;Ljava/util/List;ILjava/lang/Object;)Lelide/tooling/project/manifest/ElidePackageManifest$JavaCompilerSettings;
	public fun equals (Ljava/lang/Object;)Z
	public final fun flags ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final synthetic class elide/tooling/project/manifest/ElidePackageManifest$JavaCompilerSettings$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/ElidePackageManifest$JavaCompilerSettings$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/manifest/ElidePackageManifest$JavaCompilerSettings;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/manifest/ElidePackageManifest$JavaCompilerSettings;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/manifest/ElidePackageManifest$JavaCompilerSettings$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/ElidePackageManifest$JavaLanguage : java/lang/Record {
	public static final field Companion Lelide/tooling/project/manifest/ElidePackageManifest$JavaLanguage$Companion;
	public fun <init> ()V
	public fun <init> (Lelide/tooling/project/manifest/ElidePackageManifest$JvmTarget;Lelide/tooling/project/manifest/ElidePackageManifest$JvmTarget;Lelide/tooling/project/manifest/ElidePackageManifest$JavaCompilerSettings;)V
	public synthetic fun <init> (Lelide/tooling/project/manifest/ElidePackageManifest$JvmTarget;Lelide/tooling/project/manifest/ElidePackageManifest$JvmTarget;Lelide/tooling/project/manifest/ElidePackageManifest$JavaCompilerSettings;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun compiler ()Lelide/tooling/project/manifest/ElidePackageManifest$JavaCompilerSettings;
	public final fun component1 ()Lelide/tooling/project/manifest/ElidePackageManifest$JvmTarget;
	public final fun component2 ()Lelide/tooling/project/manifest/ElidePackageManifest$JvmTarget;
	public final fun component3 ()Lelide/tooling/project/manifest/ElidePackageManifest$JavaCompilerSettings;
	public final fun copy (Lelide/tooling/project/manifest/ElidePackageManifest$JvmTarget;Lelide/tooling/project/manifest/ElidePackageManifest$JvmTarget;Lelide/tooling/project/manifest/ElidePackageManifest$JavaCompilerSettings;)Lelide/tooling/project/manifest/ElidePackageManifest$JavaLanguage;
	public static synthetic fun copy$default (Lelide/tooling/project/manifest/ElidePackageManifest$JavaLanguage;Lelide/tooling/project/manifest/ElidePackageManifest$JvmTarget;Lelide/tooling/project/manifest/ElidePackageManifest$JvmTarget;Lelide/tooling/project/manifest/ElidePackageManifest$JavaCompilerSettings;ILjava/lang/Object;)Lelide/tooling/project/manifest/ElidePackageManifest$JavaLanguage;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun release ()Lelide/tooling/project/manifest/ElidePackageManifest$JvmTarget;
	public final fun source ()Lelide/tooling/project/manifest/ElidePackageManifest$JvmTarget;
	public fun toString ()Ljava/lang/String;
}

public final synthetic class elide/tooling/project/manifest/ElidePackageManifest$JavaLanguage$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/ElidePackageManifest$JavaLanguage$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/manifest/ElidePackageManifest$JavaLanguage;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/manifest/ElidePackageManifest$JavaLanguage;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/manifest/ElidePackageManifest$JavaLanguage$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/ElidePackageManifest$JavaScriptSettings : java/lang/Record {
	public static final field Companion Lelide/tooling/project/manifest/ElidePackageManifest$JavaScriptSettings$Companion;
	public fun <init> ()V
	public fun <init> (Z)V
	public synthetic fun <init> (ZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Z
	public final fun copy (Z)Lelide/tooling/project/manifest/ElidePackageManifest$JavaScriptSettings;
	public static synthetic fun copy$default (Lelide/tooling/project/manifest/ElidePackageManifest$JavaScriptSettings;ZILjava/lang/Object;)Lelide/tooling/project/manifest/ElidePackageManifest$JavaScriptSettings;
	public final fun debug ()Z
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final synthetic class elide/tooling/project/manifest/ElidePackageManifest$JavaScriptSettings$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/ElidePackageManifest$JavaScriptSettings$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/manifest/ElidePackageManifest$JavaScriptSettings;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/manifest/ElidePackageManifest$JavaScriptSettings;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/manifest/ElidePackageManifest$JavaScriptSettings$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/ElidePackageManifest$JvmFeatures : java/lang/Record {
	public static final field Companion Lelide/tooling/project/manifest/ElidePackageManifest$JvmFeatures$Companion;
	public fun <init> ()V
	public fun <init> (Z)V
	public synthetic fun <init> (ZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Z
	public final fun copy (Z)Lelide/tooling/project/manifest/ElidePackageManifest$JvmFeatures;
	public static synthetic fun copy$default (Lelide/tooling/project/manifest/ElidePackageManifest$JvmFeatures;ZILjava/lang/Object;)Lelide/tooling/project/manifest/ElidePackageManifest$JvmFeatures;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun testing ()Z
	public fun toString ()Ljava/lang/String;
}

public final synthetic class elide/tooling/project/manifest/ElidePackageManifest$JvmFeatures$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/ElidePackageManifest$JvmFeatures$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/manifest/ElidePackageManifest$JvmFeatures;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/manifest/ElidePackageManifest$JvmFeatures;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/manifest/ElidePackageManifest$JvmFeatures$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/ElidePackageManifest$JvmSettings : java/lang/Record {
	public static final field Companion Lelide/tooling/project/manifest/ElidePackageManifest$JvmSettings$Companion;
	public fun <init> ()V
	public fun <init> (Ljava/lang/String;Lelide/tooling/project/manifest/ElidePackageManifest$JvmTarget;Ljava/lang/String;Lelide/tooling/project/manifest/ElidePackageManifest$JvmFeatures;Lelide/tooling/project/manifest/ElidePackageManifest$JavaLanguage;Ljava/util/List;)V
	public synthetic fun <init> (Ljava/lang/String;Lelide/tooling/project/manifest/ElidePackageManifest$JvmTarget;Ljava/lang/String;Lelide/tooling/project/manifest/ElidePackageManifest$JvmFeatures;Lelide/tooling/project/manifest/ElidePackageManifest$JavaLanguage;Ljava/util/List;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Lelide/tooling/project/manifest/ElidePackageManifest$JvmTarget;
	public final fun component3 ()Ljava/lang/String;
	public final fun component4 ()Lelide/tooling/project/manifest/ElidePackageManifest$JvmFeatures;
	public final fun component5 ()Lelide/tooling/project/manifest/ElidePackageManifest$JavaLanguage;
	public final fun component6 ()Ljava/util/List;
	public final fun copy (Ljava/lang/String;Lelide/tooling/project/manifest/ElidePackageManifest$JvmTarget;Ljava/lang/String;Lelide/tooling/project/manifest/ElidePackageManifest$JvmFeatures;Lelide/tooling/project/manifest/ElidePackageManifest$JavaLanguage;Ljava/util/List;)Lelide/tooling/project/manifest/ElidePackageManifest$JvmSettings;
	public static synthetic fun copy$default (Lelide/tooling/project/manifest/ElidePackageManifest$JvmSettings;Ljava/lang/String;Lelide/tooling/project/manifest/ElidePackageManifest$JvmTarget;Ljava/lang/String;Lelide/tooling/project/manifest/ElidePackageManifest$JvmFeatures;Lelide/tooling/project/manifest/ElidePackageManifest$JavaLanguage;Ljava/util/List;ILjava/lang/Object;)Lelide/tooling/project/manifest/ElidePackageManifest$JvmSettings;
	public fun equals (Ljava/lang/Object;)Z
	public final fun features ()Lelide/tooling/project/manifest/ElidePackageManifest$JvmFeatures;
	public final fun flags ()Ljava/util/List;
	public fun hashCode ()I
	public final fun java ()Lelide/tooling/project/manifest/ElidePackageManifest$JavaLanguage;
	public final fun javaHome ()Ljava/lang/String;
	public final fun main ()Ljava/lang/String;
	public final fun target ()Lelide/tooling/project/manifest/ElidePackageManifest$JvmTarget;
	public fun toString ()Ljava/lang/String;
}

public final synthetic class elide/tooling/project/manifest/ElidePackageManifest$JvmSettings$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/ElidePackageManifest$JvmSettings$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/manifest/ElidePackageManifest$JvmSettings;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/manifest/ElidePackageManifest$JvmSettings;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/manifest/ElidePackageManifest$JvmSettings$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract interface class elide/tooling/project/manifest/ElidePackageManifest$JvmTarget {
	public static final field Companion Lelide/tooling/project/manifest/ElidePackageManifest$JvmTarget$Companion;
	public abstract fun getArgValue ()Ljava/lang/String;
}

public final class elide/tooling/project/manifest/ElidePackageManifest$JvmTarget$Companion {
	public final fun getDEFAULT ()Lelide/tooling/project/manifest/ElidePackageManifest$JvmTarget;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/ElidePackageManifest$JvmTarget$NumericJvmTarget : java/lang/Record, elide/tooling/project/manifest/ElidePackageManifest$JvmTarget {
	public static final field Companion Lelide/tooling/project/manifest/ElidePackageManifest$JvmTarget$NumericJvmTarget$Companion;
	public synthetic fun <init> (ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun argValue ()Ljava/lang/String;
	public final fun component1-pVg5ArA ()I
	public final fun copy-WZ4Q5Ns (I)Lelide/tooling/project/manifest/ElidePackageManifest$JvmTarget$NumericJvmTarget;
	public static synthetic fun copy-WZ4Q5Ns$default (Lelide/tooling/project/manifest/ElidePackageManifest$JvmTarget$NumericJvmTarget;IILjava/lang/Object;)Lelide/tooling/project/manifest/ElidePackageManifest$JvmTarget$NumericJvmTarget;
	public fun equals (Ljava/lang/Object;)Z
	public synthetic fun getArgValue ()Ljava/lang/String;
	public fun hashCode ()I
	public final fun number ()I
	public fun toString ()Ljava/lang/String;
}

public final synthetic class elide/tooling/project/manifest/ElidePackageManifest$JvmTarget$NumericJvmTarget$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/ElidePackageManifest$JvmTarget$NumericJvmTarget$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/manifest/ElidePackageManifest$JvmTarget$NumericJvmTarget;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/manifest/ElidePackageManifest$JvmTarget$NumericJvmTarget;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/manifest/ElidePackageManifest$JvmTarget$NumericJvmTarget$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/ElidePackageManifest$JvmTarget$StringJvmTarget : java/lang/Record, elide/tooling/project/manifest/ElidePackageManifest$JvmTarget {
	public static final field Companion Lelide/tooling/project/manifest/ElidePackageManifest$JvmTarget$StringJvmTarget$Companion;
	public fun <init> (Ljava/lang/String;)V
	public fun argValue ()Ljava/lang/String;
	public final fun component1 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;)Lelide/tooling/project/manifest/ElidePackageManifest$JvmTarget$StringJvmTarget;
	public static synthetic fun copy$default (Lelide/tooling/project/manifest/ElidePackageManifest$JvmTarget$StringJvmTarget;Ljava/lang/String;ILjava/lang/Object;)Lelide/tooling/project/manifest/ElidePackageManifest$JvmTarget$StringJvmTarget;
	public fun equals (Ljava/lang/Object;)Z
	public synthetic fun getArgValue ()Ljava/lang/String;
	public fun hashCode ()I
	public final fun name ()Ljava/lang/String;
	public fun toString ()Ljava/lang/String;
}

public final synthetic class elide/tooling/project/manifest/ElidePackageManifest$JvmTarget$StringJvmTarget$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/ElidePackageManifest$JvmTarget$StringJvmTarget$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/manifest/ElidePackageManifest$JvmTarget$StringJvmTarget;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/manifest/ElidePackageManifest$JvmTarget$StringJvmTarget;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/manifest/ElidePackageManifest$JvmTarget$StringJvmTarget$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/ElidePackageManifest$JvmTargetValidationMode : java/lang/Enum {
	public static final field Companion Lelide/tooling/project/manifest/ElidePackageManifest$JvmTargetValidationMode$Companion;
	public static final field ERROR Lelide/tooling/project/manifest/ElidePackageManifest$JvmTargetValidationMode;
	public static final field IGNORE Lelide/tooling/project/manifest/ElidePackageManifest$JvmTargetValidationMode;
	public static final field WARNING Lelide/tooling/project/manifest/ElidePackageManifest$JvmTargetValidationMode;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public static fun valueOf (Ljava/lang/String;)Lelide/tooling/project/manifest/ElidePackageManifest$JvmTargetValidationMode;
	public static fun values ()[Lelide/tooling/project/manifest/ElidePackageManifest$JvmTargetValidationMode;
}

public final class elide/tooling/project/manifest/ElidePackageManifest$JvmTargetValidationMode$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/ElidePackageManifest$KotlinFeatureOptions : java/lang/Record {
	public static final field Companion Lelide/tooling/project/manifest/ElidePackageManifest$KotlinFeatureOptions$Companion;
	public fun <init> ()V
	public fun <init> (ZZZZZZZZZ)V
	public synthetic fun <init> (ZZZZZZZZZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun autoClasspath ()Z
	public final fun component1 ()Z
	public final fun component2 ()Z
	public final fun component3 ()Z
	public final fun component4 ()Z
	public final fun component5 ()Z
	public final fun component6 ()Z
	public final fun component7 ()Z
	public final fun component8 ()Z
	public final fun component9 ()Z
	public final fun copy (ZZZZZZZZZ)Lelide/tooling/project/manifest/ElidePackageManifest$KotlinFeatureOptions;
	public static synthetic fun copy$default (Lelide/tooling/project/manifest/ElidePackageManifest$KotlinFeatureOptions;ZZZZZZZZZILjava/lang/Object;)Lelide/tooling/project/manifest/ElidePackageManifest$KotlinFeatureOptions;
	public final fun coroutines ()Z
	public final fun enableDefaultPlugins ()Z
	public fun equals (Ljava/lang/Object;)Z
	public final fun experimental ()Z
	public fun hashCode ()I
	public final fun incremental ()Z
	public final fun injection ()Z
	public final fun kotlinx ()Z
	public final fun serialization ()Z
	public final fun testing ()Z
	public fun toString ()Ljava/lang/String;
}

public final synthetic class elide/tooling/project/manifest/ElidePackageManifest$KotlinFeatureOptions$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/ElidePackageManifest$KotlinFeatureOptions$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/manifest/ElidePackageManifest$KotlinFeatureOptions;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/manifest/ElidePackageManifest$KotlinFeatureOptions;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/manifest/ElidePackageManifest$KotlinFeatureOptions$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/ElidePackageManifest$KotlinJvmCompilerOptions : java/lang/Record {
	public static final field Companion Lelide/tooling/project/manifest/ElidePackageManifest$KotlinJvmCompilerOptions$Companion;
	public fun <init> ()V
	public fun <init> (Ljava/util/List;ZZZZZLjava/util/List;Ljava/lang/String;Ljava/lang/String;ZLelide/tooling/project/manifest/ElidePackageManifest$JvmTarget;ZLelide/tooling/project/manifest/ElidePackageManifest$JvmTargetValidationMode;)V
	public synthetic fun <init> (Ljava/util/List;ZZZZZLjava/util/List;Ljava/lang/String;Ljava/lang/String;ZLelide/tooling/project/manifest/ElidePackageManifest$JvmTarget;ZLelide/tooling/project/manifest/ElidePackageManifest$JvmTargetValidationMode;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun allWarningsAsErrors ()Z
	public final fun apiVersion ()Ljava/lang/String;
	public final fun collect ()Lkotlin/sequences/Sequence;
	public final fun component1 ()Ljava/util/List;
	public final fun component10 ()Z
	public final fun component11 ()Lelide/tooling/project/manifest/ElidePackageManifest$JvmTarget;
	public final fun component12 ()Z
	public final fun component13 ()Lelide/tooling/project/manifest/ElidePackageManifest$JvmTargetValidationMode;
	public final fun component2 ()Z
	public final fun component3 ()Z
	public final fun component4 ()Z
	public final fun component5 ()Z
	public final fun component6 ()Z
	public final fun component7 ()Ljava/util/List;
	public final fun component8 ()Ljava/lang/String;
	public final fun component9 ()Ljava/lang/String;
	public final fun copy (Ljava/util/List;ZZZZZLjava/util/List;Ljava/lang/String;Ljava/lang/String;ZLelide/tooling/project/manifest/ElidePackageManifest$JvmTarget;ZLelide/tooling/project/manifest/ElidePackageManifest$JvmTargetValidationMode;)Lelide/tooling/project/manifest/ElidePackageManifest$KotlinJvmCompilerOptions;
	public static synthetic fun copy$default (Lelide/tooling/project/manifest/ElidePackageManifest$KotlinJvmCompilerOptions;Ljava/util/List;ZZZZZLjava/util/List;Ljava/lang/String;Ljava/lang/String;ZLelide/tooling/project/manifest/ElidePackageManifest$JvmTarget;ZLelide/tooling/project/manifest/ElidePackageManifest$JvmTargetValidationMode;ILjava/lang/Object;)Lelide/tooling/project/manifest/ElidePackageManifest$KotlinJvmCompilerOptions;
	public fun equals (Ljava/lang/Object;)Z
	public final fun extraWarnings ()Z
	public final fun freeCompilerArgs ()Ljava/util/List;
	public fun hashCode ()I
	public final fun javaParameters ()Z
	public final fun jvmTarget ()Lelide/tooling/project/manifest/ElidePackageManifest$JvmTarget;
	public final fun jvmTargetValidationMode ()Lelide/tooling/project/manifest/ElidePackageManifest$JvmTargetValidationMode;
	public final fun languageVersion ()Ljava/lang/String;
	public final fun noJdk ()Z
	public final fun optIn ()Ljava/util/List;
	public final fun progressiveMode ()Z
	public final fun suppressWarnings ()Z
	public fun toString ()Ljava/lang/String;
	public final fun verbose ()Z
}

public final synthetic class elide/tooling/project/manifest/ElidePackageManifest$KotlinJvmCompilerOptions$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/ElidePackageManifest$KotlinJvmCompilerOptions$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/manifest/ElidePackageManifest$KotlinJvmCompilerOptions;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/manifest/ElidePackageManifest$KotlinJvmCompilerOptions;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/manifest/ElidePackageManifest$KotlinJvmCompilerOptions$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/ElidePackageManifest$KotlinSettings : java/lang/Record {
	public static final field Companion Lelide/tooling/project/manifest/ElidePackageManifest$KotlinSettings$Companion;
	public fun <init> ()V
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Lelide/tooling/project/manifest/ElidePackageManifest$KotlinJvmCompilerOptions;Lelide/tooling/project/manifest/ElidePackageManifest$KotlinFeatureOptions;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;Lelide/tooling/project/manifest/ElidePackageManifest$KotlinJvmCompilerOptions;Lelide/tooling/project/manifest/ElidePackageManifest$KotlinFeatureOptions;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun apiLevel ()Ljava/lang/String;
	public final fun compilerOptions ()Lelide/tooling/project/manifest/ElidePackageManifest$KotlinJvmCompilerOptions;
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Lelide/tooling/project/manifest/ElidePackageManifest$KotlinJvmCompilerOptions;
	public final fun component4 ()Lelide/tooling/project/manifest/ElidePackageManifest$KotlinFeatureOptions;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;Lelide/tooling/project/manifest/ElidePackageManifest$KotlinJvmCompilerOptions;Lelide/tooling/project/manifest/ElidePackageManifest$KotlinFeatureOptions;)Lelide/tooling/project/manifest/ElidePackageManifest$KotlinSettings;
	public static synthetic fun copy$default (Lelide/tooling/project/manifest/ElidePackageManifest$KotlinSettings;Ljava/lang/String;Ljava/lang/String;Lelide/tooling/project/manifest/ElidePackageManifest$KotlinJvmCompilerOptions;Lelide/tooling/project/manifest/ElidePackageManifest$KotlinFeatureOptions;ILjava/lang/Object;)Lelide/tooling/project/manifest/ElidePackageManifest$KotlinSettings;
	public fun equals (Ljava/lang/Object;)Z
	public final fun features ()Lelide/tooling/project/manifest/ElidePackageManifest$KotlinFeatureOptions;
	public fun hashCode ()I
	public final fun languageLevel ()Ljava/lang/String;
	public fun toString ()Ljava/lang/String;
}

public final synthetic class elide/tooling/project/manifest/ElidePackageManifest$KotlinSettings$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/ElidePackageManifest$KotlinSettings$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/manifest/ElidePackageManifest$KotlinSettings;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/manifest/ElidePackageManifest$KotlinSettings;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/manifest/ElidePackageManifest$KotlinSettings$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/ElidePackageManifest$LockfileSettings : java/lang/Record {
	public static final field Companion Lelide/tooling/project/manifest/ElidePackageManifest$LockfileSettings$Companion;
	public fun <init> ()V
	public fun <init> (ZLjava/lang/String;)V
	public synthetic fun <init> (ZLjava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Z
	public final fun component2 ()Ljava/lang/String;
	public final fun copy (ZLjava/lang/String;)Lelide/tooling/project/manifest/ElidePackageManifest$LockfileSettings;
	public static synthetic fun copy$default (Lelide/tooling/project/manifest/ElidePackageManifest$LockfileSettings;ZLjava/lang/String;ILjava/lang/Object;)Lelide/tooling/project/manifest/ElidePackageManifest$LockfileSettings;
	public final fun enabled ()Z
	public fun equals (Ljava/lang/Object;)Z
	public final fun format ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final synthetic class elide/tooling/project/manifest/ElidePackageManifest$LockfileSettings$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/ElidePackageManifest$LockfileSettings$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/manifest/ElidePackageManifest$LockfileSettings;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/manifest/ElidePackageManifest$LockfileSettings;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/manifest/ElidePackageManifest$LockfileSettings$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/ElidePackageManifest$LspSettings {
	public static final field Companion Lelide/tooling/project/manifest/ElidePackageManifest$LspSettings$Companion;
	public fun <init> ()V
	public fun <init> (Ljava/util/List;)V
	public synthetic fun <init> (Ljava/util/List;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/util/List;
	public final fun copy (Ljava/util/List;)Lelide/tooling/project/manifest/ElidePackageManifest$LspSettings;
	public static synthetic fun copy$default (Lelide/tooling/project/manifest/ElidePackageManifest$LspSettings;Ljava/util/List;ILjava/lang/Object;)Lelide/tooling/project/manifest/ElidePackageManifest$LspSettings;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getDelegates ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final synthetic class elide/tooling/project/manifest/ElidePackageManifest$LspSettings$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/ElidePackageManifest$LspSettings$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/manifest/ElidePackageManifest$LspSettings;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/manifest/ElidePackageManifest$LspSettings;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/manifest/ElidePackageManifest$LspSettings$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/ElidePackageManifest$MavenCoordinates : java/lang/Record {
	public static final field Companion Lelide/tooling/project/manifest/ElidePackageManifest$MavenCoordinates$Companion;
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun classifier ()Ljava/lang/String;
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lelide/tooling/project/manifest/ElidePackageManifest$MavenCoordinates;
	public static synthetic fun copy$default (Lelide/tooling/project/manifest/ElidePackageManifest$MavenCoordinates;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Lelide/tooling/project/manifest/ElidePackageManifest$MavenCoordinates;
	public fun equals (Ljava/lang/Object;)Z
	public final fun group ()Ljava/lang/String;
	public fun hashCode ()I
	public final fun name ()Ljava/lang/String;
	public fun toString ()Ljava/lang/String;
}

public final synthetic class elide/tooling/project/manifest/ElidePackageManifest$MavenCoordinates$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/ElidePackageManifest$MavenCoordinates$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/manifest/ElidePackageManifest$MavenCoordinates;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/manifest/ElidePackageManifest$MavenCoordinates;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/manifest/ElidePackageManifest$MavenCoordinates$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/ElidePackageManifest$MavenDependencies : java/lang/Record, elide/tooling/project/manifest/ElidePackageManifest$DependencyEcosystemConfig {
	public static final field Companion Lelide/tooling/project/manifest/ElidePackageManifest$MavenDependencies$Companion;
	public fun <init> ()V
	public fun <init> (Lelide/tooling/project/manifest/ElidePackageManifest$MavenCoordinates;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/Map;ZLjava/util/List;)V
	public synthetic fun <init> (Lelide/tooling/project/manifest/ElidePackageManifest$MavenCoordinates;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/Map;ZLjava/util/List;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun allPackages ()Lkotlin/sequences/Sequence;
	public final fun catalogs ()Ljava/util/List;
	public final fun component1 ()Lelide/tooling/project/manifest/ElidePackageManifest$MavenCoordinates;
	public final fun component2 ()Ljava/util/List;
	public final fun component3 ()Ljava/util/List;
	public final fun component4 ()Ljava/util/List;
	public final fun component5 ()Ljava/util/List;
	public final fun component6 ()Ljava/util/Map;
	public final fun component7 ()Z
	public final fun component8 ()Ljava/util/List;
	public final fun coordinates ()Lelide/tooling/project/manifest/ElidePackageManifest$MavenCoordinates;
	public final fun copy (Lelide/tooling/project/manifest/ElidePackageManifest$MavenCoordinates;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/Map;ZLjava/util/List;)Lelide/tooling/project/manifest/ElidePackageManifest$MavenDependencies;
	public static synthetic fun copy$default (Lelide/tooling/project/manifest/ElidePackageManifest$MavenDependencies;Lelide/tooling/project/manifest/ElidePackageManifest$MavenCoordinates;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/Map;ZLjava/util/List;ILjava/lang/Object;)Lelide/tooling/project/manifest/ElidePackageManifest$MavenDependencies;
	public final fun enableDefaultRepositories ()Z
	public fun equals (Ljava/lang/Object;)Z
	public final fun from ()Ljava/util/List;
	public final fun hasPackages ()Z
	public fun hashCode ()I
	public final fun packages ()Ljava/util/List;
	public final fun processors ()Ljava/util/List;
	public final fun repositories ()Ljava/util/Map;
	public final fun testPackages ()Ljava/util/List;
	public fun toString ()Ljava/lang/String;
}

public final synthetic class elide/tooling/project/manifest/ElidePackageManifest$MavenDependencies$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/ElidePackageManifest$MavenDependencies$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/manifest/ElidePackageManifest$MavenDependencies;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/manifest/ElidePackageManifest$MavenDependencies;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/manifest/ElidePackageManifest$MavenDependencies$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/ElidePackageManifest$MavenPackage : java/lang/Record, elide/tooling/project/manifest/ElidePackageManifest$DependencyEcosystemConfig$PackageSpec, java/lang/Comparable {
	public static final field Companion Lelide/tooling/project/manifest/ElidePackageManifest$MavenPackage$Companion;
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun classifier ()Ljava/lang/String;
	public fun compareTo (Lelide/tooling/project/manifest/ElidePackageManifest$MavenPackage;)I
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/lang/String;
	public final fun component4 ()Ljava/lang/String;
	public final fun component5 ()Ljava/lang/String;
	public final fun component6 ()Ljava/lang/String;
	public final fun coordinate ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lelide/tooling/project/manifest/ElidePackageManifest$MavenPackage;
	public static synthetic fun copy$default (Lelide/tooling/project/manifest/ElidePackageManifest$MavenPackage;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Lelide/tooling/project/manifest/ElidePackageManifest$MavenPackage;
	public fun equals (Ljava/lang/Object;)Z
	public final fun group ()Ljava/lang/String;
	public fun hashCode ()I
	public final fun name ()Ljava/lang/String;
	public static final fun parse (Ljava/lang/String;)Lelide/tooling/project/manifest/ElidePackageManifest$MavenPackage;
	public final fun repository ()Ljava/lang/String;
	public fun toString ()Ljava/lang/String;
	public final fun version ()Ljava/lang/String;
}

public final synthetic class elide/tooling/project/manifest/ElidePackageManifest$MavenPackage$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/ElidePackageManifest$MavenPackage$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/manifest/ElidePackageManifest$MavenPackage;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/manifest/ElidePackageManifest$MavenPackage;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/manifest/ElidePackageManifest$MavenPackage$Companion {
	public final fun parse (Ljava/lang/String;)Lelide/tooling/project/manifest/ElidePackageManifest$MavenPackage;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/ElidePackageManifest$MavenRepository : elide/tooling/project/manifest/ElidePackageManifest$DependencyEcosystemConfig$RepositorySpec {
	public static final field Companion Lelide/tooling/project/manifest/ElidePackageManifest$MavenRepository$Companion;
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lelide/tooling/project/manifest/ElidePackageManifest$MavenRepository;
	public static synthetic fun copy$default (Lelide/tooling/project/manifest/ElidePackageManifest$MavenRepository;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Lelide/tooling/project/manifest/ElidePackageManifest$MavenRepository;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getDescription ()Ljava/lang/String;
	public final fun getName ()Ljava/lang/String;
	public final fun getUrl ()Ljava/lang/String;
	public fun hashCode ()I
	public static final fun parse (Ljava/lang/String;)Lelide/tooling/project/manifest/ElidePackageManifest$MavenRepository;
	public final fun setName (Ljava/lang/String;)V
	public fun toString ()Ljava/lang/String;
}

public final synthetic class elide/tooling/project/manifest/ElidePackageManifest$MavenRepository$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/ElidePackageManifest$MavenRepository$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/manifest/ElidePackageManifest$MavenRepository;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/manifest/ElidePackageManifest$MavenRepository;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/manifest/ElidePackageManifest$MavenRepository$Companion {
	public final fun parse (Ljava/lang/String;)Lelide/tooling/project/manifest/ElidePackageManifest$MavenRepository;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/ElidePackageManifest$NativeImage : java/lang/Record, elide/tooling/project/manifest/ElidePackageManifest$Artifact {
	public static final field Companion Lelide/tooling/project/manifest/ElidePackageManifest$NativeImage$Companion;
	public fun <init> ()V
	public fun <init> (Ljava/lang/String;Lelide/tooling/project/manifest/ElidePackageManifest$NativeImageType;Ljava/lang/String;Ljava/lang/String;Lelide/tooling/project/manifest/ElidePackageManifest$NativeImageOptions;Ljava/util/List;Ljava/util/List;)V
	public synthetic fun <init> (Ljava/lang/String;Lelide/tooling/project/manifest/ElidePackageManifest$NativeImageType;Ljava/lang/String;Ljava/lang/String;Lelide/tooling/project/manifest/ElidePackageManifest$NativeImageOptions;Ljava/util/List;Ljava/util/List;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Lelide/tooling/project/manifest/ElidePackageManifest$NativeImageType;
	public final fun component3 ()Ljava/lang/String;
	public final fun component4 ()Ljava/lang/String;
	public final fun component5 ()Lelide/tooling/project/manifest/ElidePackageManifest$NativeImageOptions;
	public final fun component6 ()Ljava/util/List;
	public final fun component7 ()Ljava/util/List;
	public final fun copy (Ljava/lang/String;Lelide/tooling/project/manifest/ElidePackageManifest$NativeImageType;Ljava/lang/String;Ljava/lang/String;Lelide/tooling/project/manifest/ElidePackageManifest$NativeImageOptions;Ljava/util/List;Ljava/util/List;)Lelide/tooling/project/manifest/ElidePackageManifest$NativeImage;
	public static synthetic fun copy$default (Lelide/tooling/project/manifest/ElidePackageManifest$NativeImage;Ljava/lang/String;Lelide/tooling/project/manifest/ElidePackageManifest$NativeImageType;Ljava/lang/String;Ljava/lang/String;Lelide/tooling/project/manifest/ElidePackageManifest$NativeImageOptions;Ljava/util/List;Ljava/util/List;ILjava/lang/Object;)Lelide/tooling/project/manifest/ElidePackageManifest$NativeImage;
	public fun dependsOn ()Ljava/util/List;
	public final fun entrypoint ()Ljava/lang/String;
	public fun equals (Ljava/lang/Object;)Z
	public fun from ()Ljava/util/List;
	public synthetic fun getDependsOn ()Ljava/util/List;
	public synthetic fun getFrom ()Ljava/util/List;
	public fun hashCode ()I
	public final fun moduleName ()Ljava/lang/String;
	public final fun name ()Ljava/lang/String;
	public final fun options ()Lelide/tooling/project/manifest/ElidePackageManifest$NativeImageOptions;
	public fun toString ()Ljava/lang/String;
	public final fun type ()Lelide/tooling/project/manifest/ElidePackageManifest$NativeImageType;
}

public final synthetic class elide/tooling/project/manifest/ElidePackageManifest$NativeImage$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/ElidePackageManifest$NativeImage$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/manifest/ElidePackageManifest$NativeImage;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/manifest/ElidePackageManifest$NativeImage;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/manifest/ElidePackageManifest$NativeImage$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/ElidePackageManifest$NativeImageClassInit : java/lang/Record {
	public static final field Companion Lelide/tooling/project/manifest/ElidePackageManifest$NativeImageClassInit$Companion;
	public fun <init> ()V
	public fun <init> (ZLjava/util/List;Ljava/util/List;)V
	public synthetic fun <init> (ZLjava/util/List;Ljava/util/List;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun buildtime ()Ljava/util/List;
	public final fun component1 ()Z
	public final fun component2 ()Ljava/util/List;
	public final fun component3 ()Ljava/util/List;
	public final fun copy (ZLjava/util/List;Ljava/util/List;)Lelide/tooling/project/manifest/ElidePackageManifest$NativeImageClassInit;
	public static synthetic fun copy$default (Lelide/tooling/project/manifest/ElidePackageManifest$NativeImageClassInit;ZLjava/util/List;Ljava/util/List;ILjava/lang/Object;)Lelide/tooling/project/manifest/ElidePackageManifest$NativeImageClassInit;
	public final fun enabled ()Z
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun runtime ()Ljava/util/List;
	public fun toString ()Ljava/lang/String;
}

public final synthetic class elide/tooling/project/manifest/ElidePackageManifest$NativeImageClassInit$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/ElidePackageManifest$NativeImageClassInit$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/manifest/ElidePackageManifest$NativeImageClassInit;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/manifest/ElidePackageManifest$NativeImageClassInit;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/manifest/ElidePackageManifest$NativeImageClassInit$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/ElidePackageManifest$NativeImageLinkAtBuildTime : java/lang/Record {
	public static final field Companion Lelide/tooling/project/manifest/ElidePackageManifest$NativeImageLinkAtBuildTime$Companion;
	public fun <init> ()V
	public fun <init> (ZLjava/util/List;)V
	public synthetic fun <init> (ZLjava/util/List;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Z
	public final fun component2 ()Ljava/util/List;
	public final fun copy (ZLjava/util/List;)Lelide/tooling/project/manifest/ElidePackageManifest$NativeImageLinkAtBuildTime;
	public static synthetic fun copy$default (Lelide/tooling/project/manifest/ElidePackageManifest$NativeImageLinkAtBuildTime;ZLjava/util/List;ILjava/lang/Object;)Lelide/tooling/project/manifest/ElidePackageManifest$NativeImageLinkAtBuildTime;
	public final fun enabled ()Z
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun packages ()Ljava/util/List;
	public fun toString ()Ljava/lang/String;
}

public final synthetic class elide/tooling/project/manifest/ElidePackageManifest$NativeImageLinkAtBuildTime$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/ElidePackageManifest$NativeImageLinkAtBuildTime$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/manifest/ElidePackageManifest$NativeImageLinkAtBuildTime;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/manifest/ElidePackageManifest$NativeImageLinkAtBuildTime;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/manifest/ElidePackageManifest$NativeImageLinkAtBuildTime$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/ElidePackageManifest$NativeImageOptions : java/lang/Record {
	public static final field Companion Lelide/tooling/project/manifest/ElidePackageManifest$NativeImageOptions$Companion;
	public fun <init> ()V
	public fun <init> (ZLelide/tooling/project/manifest/ElidePackageManifest$NativeImageLinkAtBuildTime;Lelide/tooling/project/manifest/ElidePackageManifest$NativeImageClassInit;Lelide/tooling/project/manifest/ElidePackageManifest$OptimizationLevel;Lelide/tooling/project/manifest/ElidePackageManifest$ProfileGuidedOptimization;Ljava/util/List;)V
	public synthetic fun <init> (ZLelide/tooling/project/manifest/ElidePackageManifest$NativeImageLinkAtBuildTime;Lelide/tooling/project/manifest/ElidePackageManifest$NativeImageClassInit;Lelide/tooling/project/manifest/ElidePackageManifest$OptimizationLevel;Lelide/tooling/project/manifest/ElidePackageManifest$ProfileGuidedOptimization;Ljava/util/List;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun classInit ()Lelide/tooling/project/manifest/ElidePackageManifest$NativeImageClassInit;
	public final fun component1 ()Z
	public final fun component2 ()Lelide/tooling/project/manifest/ElidePackageManifest$NativeImageLinkAtBuildTime;
	public final fun component3 ()Lelide/tooling/project/manifest/ElidePackageManifest$NativeImageClassInit;
	public final fun component4 ()Lelide/tooling/project/manifest/ElidePackageManifest$OptimizationLevel;
	public final fun component5 ()Lelide/tooling/project/manifest/ElidePackageManifest$ProfileGuidedOptimization;
	public final fun component6 ()Ljava/util/List;
	public final fun copy (ZLelide/tooling/project/manifest/ElidePackageManifest$NativeImageLinkAtBuildTime;Lelide/tooling/project/manifest/ElidePackageManifest$NativeImageClassInit;Lelide/tooling/project/manifest/ElidePackageManifest$OptimizationLevel;Lelide/tooling/project/manifest/ElidePackageManifest$ProfileGuidedOptimization;Ljava/util/List;)Lelide/tooling/project/manifest/ElidePackageManifest$NativeImageOptions;
	public static synthetic fun copy$default (Lelide/tooling/project/manifest/ElidePackageManifest$NativeImageOptions;ZLelide/tooling/project/manifest/ElidePackageManifest$NativeImageLinkAtBuildTime;Lelide/tooling/project/manifest/ElidePackageManifest$NativeImageClassInit;Lelide/tooling/project/manifest/ElidePackageManifest$OptimizationLevel;Lelide/tooling/project/manifest/ElidePackageManifest$ProfileGuidedOptimization;Ljava/util/List;ILjava/lang/Object;)Lelide/tooling/project/manifest/ElidePackageManifest$NativeImageOptions;
	public fun equals (Ljava/lang/Object;)Z
	public final fun flags ()Ljava/util/List;
	public fun hashCode ()I
	public final fun linkAtBuildTime ()Lelide/tooling/project/manifest/ElidePackageManifest$NativeImageLinkAtBuildTime;
	public final fun optimization ()Lelide/tooling/project/manifest/ElidePackageManifest$OptimizationLevel;
	public final fun pgo ()Lelide/tooling/project/manifest/ElidePackageManifest$ProfileGuidedOptimization;
	public fun toString ()Ljava/lang/String;
	public final fun verbose ()Z
}

public final synthetic class elide/tooling/project/manifest/ElidePackageManifest$NativeImageOptions$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/ElidePackageManifest$NativeImageOptions$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/manifest/ElidePackageManifest$NativeImageOptions;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/manifest/ElidePackageManifest$NativeImageOptions;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/manifest/ElidePackageManifest$NativeImageOptions$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/ElidePackageManifest$NativeImageSettings : java/lang/Record {
	public static final field Companion Lelide/tooling/project/manifest/ElidePackageManifest$NativeImageSettings$Companion;
	public fun <init> ()V
	public fun <init> (Z)V
	public synthetic fun <init> (ZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Z
	public final fun copy (Z)Lelide/tooling/project/manifest/ElidePackageManifest$NativeImageSettings;
	public static synthetic fun copy$default (Lelide/tooling/project/manifest/ElidePackageManifest$NativeImageSettings;ZILjava/lang/Object;)Lelide/tooling/project/manifest/ElidePackageManifest$NativeImageSettings;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public final fun verbose ()Z
}

public final synthetic class elide/tooling/project/manifest/ElidePackageManifest$NativeImageSettings$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/ElidePackageManifest$NativeImageSettings$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/manifest/ElidePackageManifest$NativeImageSettings;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/manifest/ElidePackageManifest$NativeImageSettings;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/manifest/ElidePackageManifest$NativeImageSettings$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/ElidePackageManifest$NativeImageType : java/lang/Enum, elide/core/api/Symbolic {
	public static final field BINARY Lelide/tooling/project/manifest/ElidePackageManifest$NativeImageType;
	public static final field Companion Lelide/tooling/project/manifest/ElidePackageManifest$NativeImageType$Companion;
	public static final field LIBRARY Lelide/tooling/project/manifest/ElidePackageManifest$NativeImageType;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public synthetic fun getSymbol ()Ljava/lang/Object;
	public fun getSymbol ()Ljava/lang/String;
	public static fun valueOf (Ljava/lang/String;)Lelide/tooling/project/manifest/ElidePackageManifest$NativeImageType;
	public static fun values ()[Lelide/tooling/project/manifest/ElidePackageManifest$NativeImageType;
}

public final class elide/tooling/project/manifest/ElidePackageManifest$NativeImageType$Companion : elide/core/api/Symbolic$SealedResolver {
	public synthetic fun resolve (Ljava/lang/Object;)Lelide/core/api/Symbolic;
	public fun resolve (Ljava/lang/String;)Lelide/tooling/project/manifest/ElidePackageManifest$NativeImageType;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/ElidePackageManifest$NpmDependencies : java/lang/Record, elide/tooling/project/manifest/ElidePackageManifest$DependencyEcosystemConfig {
	public static final field Companion Lelide/tooling/project/manifest/ElidePackageManifest$NpmDependencies$Companion;
	public fun <init> ()V
	public fun <init> (Ljava/util/List;Ljava/util/List;Ljava/util/Map;Ljava/util/List;)V
	public synthetic fun <init> (Ljava/util/List;Ljava/util/List;Ljava/util/Map;Ljava/util/List;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/util/List;
	public final fun component2 ()Ljava/util/List;
	public final fun component3 ()Ljava/util/Map;
	public final fun component4 ()Ljava/util/List;
	public final fun copy (Ljava/util/List;Ljava/util/List;Ljava/util/Map;Ljava/util/List;)Lelide/tooling/project/manifest/ElidePackageManifest$NpmDependencies;
	public static synthetic fun copy$default (Lelide/tooling/project/manifest/ElidePackageManifest$NpmDependencies;Ljava/util/List;Ljava/util/List;Ljava/util/Map;Ljava/util/List;ILjava/lang/Object;)Lelide/tooling/project/manifest/ElidePackageManifest$NpmDependencies;
	public final fun devPackages ()Ljava/util/List;
	public fun equals (Ljava/lang/Object;)Z
	public final fun from ()Ljava/util/List;
	public final fun hasPackages ()Z
	public fun hashCode ()I
	public final fun packages ()Ljava/util/List;
	public final fun repositories ()Ljava/util/Map;
	public fun toString ()Ljava/lang/String;
}

public final synthetic class elide/tooling/project/manifest/ElidePackageManifest$NpmDependencies$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/ElidePackageManifest$NpmDependencies$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/manifest/ElidePackageManifest$NpmDependencies;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/manifest/ElidePackageManifest$NpmDependencies;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/manifest/ElidePackageManifest$NpmDependencies$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/ElidePackageManifest$NpmPackage : java/lang/Record, elide/tooling/project/manifest/ElidePackageManifest$DependencyEcosystemConfig$PackageSpec {
	public static final field Companion Lelide/tooling/project/manifest/ElidePackageManifest$NpmPackage$Companion;
	public fun <init> (Ljava/lang/String;Ljava/lang/String;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;)Lelide/tooling/project/manifest/ElidePackageManifest$NpmPackage;
	public static synthetic fun copy$default (Lelide/tooling/project/manifest/ElidePackageManifest$NpmPackage;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Lelide/tooling/project/manifest/ElidePackageManifest$NpmPackage;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun name ()Ljava/lang/String;
	public static final fun parse (Ljava/lang/String;)Lelide/tooling/project/manifest/ElidePackageManifest$NpmPackage;
	public fun toString ()Ljava/lang/String;
	public final fun version ()Ljava/lang/String;
}

public final synthetic class elide/tooling/project/manifest/ElidePackageManifest$NpmPackage$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/ElidePackageManifest$NpmPackage$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/manifest/ElidePackageManifest$NpmPackage;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/manifest/ElidePackageManifest$NpmPackage;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/manifest/ElidePackageManifest$NpmPackage$Companion {
	public final fun parse (Ljava/lang/String;)Lelide/tooling/project/manifest/ElidePackageManifest$NpmPackage;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/ElidePackageManifest$NpmRepository : java/lang/Record, elide/tooling/project/manifest/ElidePackageManifest$DependencyEcosystemConfig$RepositorySpec {
	public static final field Companion Lelide/tooling/project/manifest/ElidePackageManifest$NpmRepository$Companion;
	public fun <init> (Ljava/lang/String;Ljava/lang/String;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;)Lelide/tooling/project/manifest/ElidePackageManifest$NpmRepository;
	public static synthetic fun copy$default (Lelide/tooling/project/manifest/ElidePackageManifest$NpmRepository;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Lelide/tooling/project/manifest/ElidePackageManifest$NpmRepository;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun name ()Ljava/lang/String;
	public fun toString ()Ljava/lang/String;
	public final fun url ()Ljava/lang/String;
}

public final synthetic class elide/tooling/project/manifest/ElidePackageManifest$NpmRepository$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/ElidePackageManifest$NpmRepository$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/manifest/ElidePackageManifest$NpmRepository;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/manifest/ElidePackageManifest$NpmRepository;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/manifest/ElidePackageManifest$NpmRepository$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/ElidePackageManifest$OptimizationLevel : java/lang/Enum, elide/core/api/Symbolic {
	public static final field AUTO Lelide/tooling/project/manifest/ElidePackageManifest$OptimizationLevel;
	public static final field BUILD Lelide/tooling/project/manifest/ElidePackageManifest$OptimizationLevel;
	public static final field Companion Lelide/tooling/project/manifest/ElidePackageManifest$OptimizationLevel$Companion;
	public static final field FOUR Lelide/tooling/project/manifest/ElidePackageManifest$OptimizationLevel;
	public static final field ONE Lelide/tooling/project/manifest/ElidePackageManifest$OptimizationLevel;
	public static final field THREE Lelide/tooling/project/manifest/ElidePackageManifest$OptimizationLevel;
	public static final field TWO Lelide/tooling/project/manifest/ElidePackageManifest$OptimizationLevel;
	public static final field ZERO Lelide/tooling/project/manifest/ElidePackageManifest$OptimizationLevel;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public synthetic fun getSymbol ()Ljava/lang/Object;
	public fun getSymbol ()Ljava/lang/String;
	public static fun valueOf (Ljava/lang/String;)Lelide/tooling/project/manifest/ElidePackageManifest$OptimizationLevel;
	public static fun values ()[Lelide/tooling/project/manifest/ElidePackageManifest$OptimizationLevel;
}

public final class elide/tooling/project/manifest/ElidePackageManifest$OptimizationLevel$Companion : elide/core/api/Symbolic$SealedResolver {
	public synthetic fun resolve (Ljava/lang/Object;)Lelide/core/api/Symbolic;
	public fun resolve (Ljava/lang/String;)Lelide/tooling/project/manifest/ElidePackageManifest$OptimizationLevel;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/ElidePackageManifest$PipDependencies : java/lang/Record, elide/tooling/project/manifest/ElidePackageManifest$DependencyEcosystemConfig {
	public static final field Companion Lelide/tooling/project/manifest/ElidePackageManifest$PipDependencies$Companion;
	public fun <init> ()V
	public fun <init> (Ljava/util/List;Ljava/util/Map;)V
	public synthetic fun <init> (Ljava/util/List;Ljava/util/Map;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun allPackages ()Lkotlin/sequences/Sequence;
	public final fun component1 ()Ljava/util/List;
	public final fun component2 ()Ljava/util/Map;
	public final fun copy (Ljava/util/List;Ljava/util/Map;)Lelide/tooling/project/manifest/ElidePackageManifest$PipDependencies;
	public static synthetic fun copy$default (Lelide/tooling/project/manifest/ElidePackageManifest$PipDependencies;Ljava/util/List;Ljava/util/Map;ILjava/lang/Object;)Lelide/tooling/project/manifest/ElidePackageManifest$PipDependencies;
	public fun equals (Ljava/lang/Object;)Z
	public final fun hasPackages ()Z
	public fun hashCode ()I
	public final fun optionalPackages ()Ljava/util/Map;
	public final fun packages ()Ljava/util/List;
	public fun toString ()Ljava/lang/String;
}

public final synthetic class elide/tooling/project/manifest/ElidePackageManifest$PipDependencies$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/ElidePackageManifest$PipDependencies$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/manifest/ElidePackageManifest$PipDependencies;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/manifest/ElidePackageManifest$PipDependencies;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/manifest/ElidePackageManifest$PipDependencies$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/ElidePackageManifest$PipPackage : java/lang/Record, elide/tooling/project/manifest/ElidePackageManifest$DependencyEcosystemConfig$PackageSpec {
	public static final field Companion Lelide/tooling/project/manifest/ElidePackageManifest$PipPackage$Companion;
	public fun <init> (Ljava/lang/String;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;)Lelide/tooling/project/manifest/ElidePackageManifest$PipPackage;
	public static synthetic fun copy$default (Lelide/tooling/project/manifest/ElidePackageManifest$PipPackage;Ljava/lang/String;ILjava/lang/Object;)Lelide/tooling/project/manifest/ElidePackageManifest$PipPackage;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun name ()Ljava/lang/String;
	public fun toString ()Ljava/lang/String;
}

public final synthetic class elide/tooling/project/manifest/ElidePackageManifest$PipPackage$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/ElidePackageManifest$PipPackage$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/manifest/ElidePackageManifest$PipPackage;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/manifest/ElidePackageManifest$PipPackage;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/manifest/ElidePackageManifest$PipPackage$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/ElidePackageManifest$PklSettings : java/lang/Record {
	public static final field Companion Lelide/tooling/project/manifest/ElidePackageManifest$PklSettings$Companion;
	public fun <init> ()V
	public fun <init> (Z)V
	public synthetic fun <init> (ZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Z
	public final fun copy (Z)Lelide/tooling/project/manifest/ElidePackageManifest$PklSettings;
	public static synthetic fun copy$default (Lelide/tooling/project/manifest/ElidePackageManifest$PklSettings;ZILjava/lang/Object;)Lelide/tooling/project/manifest/ElidePackageManifest$PklSettings;
	public final fun debug ()Z
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final synthetic class elide/tooling/project/manifest/ElidePackageManifest$PklSettings$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/ElidePackageManifest$PklSettings$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/manifest/ElidePackageManifest$PklSettings;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/manifest/ElidePackageManifest$PklSettings;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/manifest/ElidePackageManifest$PklSettings$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/ElidePackageManifest$ProfileGuidedOptimization : java/lang/Record {
	public static final field Companion Lelide/tooling/project/manifest/ElidePackageManifest$ProfileGuidedOptimization$Companion;
	public fun <init> ()V
	public fun <init> (ZZZZLjava/util/List;)V
	public synthetic fun <init> (ZZZZLjava/util/List;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun autoprofile ()Z
	public final fun component1 ()Z
	public final fun component2 ()Z
	public final fun component3 ()Z
	public final fun component4 ()Z
	public final fun component5 ()Ljava/util/List;
	public final fun copy (ZZZZLjava/util/List;)Lelide/tooling/project/manifest/ElidePackageManifest$ProfileGuidedOptimization;
	public static synthetic fun copy$default (Lelide/tooling/project/manifest/ElidePackageManifest$ProfileGuidedOptimization;ZZZZLjava/util/List;ILjava/lang/Object;)Lelide/tooling/project/manifest/ElidePackageManifest$ProfileGuidedOptimization;
	public final fun enabled ()Z
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun instrument ()Z
	public final fun profiles ()Ljava/util/List;
	public final fun sampling ()Z
	public fun toString ()Ljava/lang/String;
}

public final synthetic class elide/tooling/project/manifest/ElidePackageManifest$ProfileGuidedOptimization$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/ElidePackageManifest$ProfileGuidedOptimization$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/manifest/ElidePackageManifest$ProfileGuidedOptimization;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/manifest/ElidePackageManifest$ProfileGuidedOptimization;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/manifest/ElidePackageManifest$ProfileGuidedOptimization$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/ElidePackageManifest$ProjectSourceSpec {
	public static final field Companion Lelide/tooling/project/manifest/ElidePackageManifest$ProjectSourceSpec$Companion;
	public fun <init> ()V
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lelide/tooling/project/manifest/ElidePackageManifest$ProjectSourceSpec;
	public static synthetic fun copy$default (Lelide/tooling/project/manifest/ElidePackageManifest$ProjectSourceSpec;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Lelide/tooling/project/manifest/ElidePackageManifest$ProjectSourceSpec;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getPlatform ()Ljava/lang/String;
	public final fun getProject ()Ljava/lang/String;
	public final fun getSubpath ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final synthetic class elide/tooling/project/manifest/ElidePackageManifest$ProjectSourceSpec$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/ElidePackageManifest$ProjectSourceSpec$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/manifest/ElidePackageManifest$ProjectSourceSpec;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/manifest/ElidePackageManifest$ProjectSourceSpec;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/manifest/ElidePackageManifest$ProjectSourceSpec$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/ElidePackageManifest$PythonSettings : java/lang/Record {
	public static final field Companion Lelide/tooling/project/manifest/ElidePackageManifest$PythonSettings$Companion;
	public fun <init> ()V
	public fun <init> (Z)V
	public synthetic fun <init> (ZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Z
	public final fun copy (Z)Lelide/tooling/project/manifest/ElidePackageManifest$PythonSettings;
	public static synthetic fun copy$default (Lelide/tooling/project/manifest/ElidePackageManifest$PythonSettings;ZILjava/lang/Object;)Lelide/tooling/project/manifest/ElidePackageManifest$PythonSettings;
	public final fun debug ()Z
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final synthetic class elide/tooling/project/manifest/ElidePackageManifest$PythonSettings$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/ElidePackageManifest$PythonSettings$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/manifest/ElidePackageManifest$PythonSettings;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/manifest/ElidePackageManifest$PythonSettings;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/manifest/ElidePackageManifest$PythonSettings$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/ElidePackageManifest$RubySettings : java/lang/Record {
	public static final field Companion Lelide/tooling/project/manifest/ElidePackageManifest$RubySettings$Companion;
	public fun <init> ()V
	public fun <init> (Z)V
	public synthetic fun <init> (ZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Z
	public final fun copy (Z)Lelide/tooling/project/manifest/ElidePackageManifest$RubySettings;
	public static synthetic fun copy$default (Lelide/tooling/project/manifest/ElidePackageManifest$RubySettings;ZILjava/lang/Object;)Lelide/tooling/project/manifest/ElidePackageManifest$RubySettings;
	public final fun debug ()Z
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final synthetic class elide/tooling/project/manifest/ElidePackageManifest$RubySettings$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/ElidePackageManifest$RubySettings$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/manifest/ElidePackageManifest$RubySettings;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/manifest/ElidePackageManifest$RubySettings;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/manifest/ElidePackageManifest$RubySettings$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/ElidePackageManifest$SourceSet : java/lang/Record {
	public static final field Companion Lelide/tooling/project/manifest/ElidePackageManifest$SourceSet$Companion;
	public fun <init> (Ljava/util/List;)V
	public final fun component1 ()Ljava/util/List;
	public final fun copy (Ljava/util/List;)Lelide/tooling/project/manifest/ElidePackageManifest$SourceSet;
	public static synthetic fun copy$default (Lelide/tooling/project/manifest/ElidePackageManifest$SourceSet;Ljava/util/List;ILjava/lang/Object;)Lelide/tooling/project/manifest/ElidePackageManifest$SourceSet;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public static final fun parse (Ljava/lang/String;)Lelide/tooling/project/manifest/ElidePackageManifest$SourceSet;
	public final fun spec ()Ljava/util/List;
	public fun toString ()Ljava/lang/String;
}

public final synthetic class elide/tooling/project/manifest/ElidePackageManifest$SourceSet$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/ElidePackageManifest$SourceSet$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/manifest/ElidePackageManifest$SourceSet;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/manifest/ElidePackageManifest$SourceSet;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/manifest/ElidePackageManifest$SourceSet$Companion {
	public final fun parse (Ljava/lang/String;)Lelide/tooling/project/manifest/ElidePackageManifest$SourceSet;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/ElidePackageManifest$TestingSettings : java/lang/Record {
	public static final field Companion Lelide/tooling/project/manifest/ElidePackageManifest$TestingSettings$Companion;
	public fun <init> ()V
	public fun <init> (Lelide/tooling/project/manifest/ElidePackageManifest$CoverageSettings;)V
	public synthetic fun <init> (Lelide/tooling/project/manifest/ElidePackageManifest$CoverageSettings;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Lelide/tooling/project/manifest/ElidePackageManifest$CoverageSettings;
	public final fun copy (Lelide/tooling/project/manifest/ElidePackageManifest$CoverageSettings;)Lelide/tooling/project/manifest/ElidePackageManifest$TestingSettings;
	public static synthetic fun copy$default (Lelide/tooling/project/manifest/ElidePackageManifest$TestingSettings;Lelide/tooling/project/manifest/ElidePackageManifest$CoverageSettings;ILjava/lang/Object;)Lelide/tooling/project/manifest/ElidePackageManifest$TestingSettings;
	public final fun coverage ()Lelide/tooling/project/manifest/ElidePackageManifest$CoverageSettings;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final synthetic class elide/tooling/project/manifest/ElidePackageManifest$TestingSettings$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/ElidePackageManifest$TestingSettings$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/manifest/ElidePackageManifest$TestingSettings;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/manifest/ElidePackageManifest$TestingSettings;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/manifest/ElidePackageManifest$TestingSettings$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/ElidePackageManifest$TypeScriptSettings : java/lang/Record {
	public static final field Companion Lelide/tooling/project/manifest/ElidePackageManifest$TypeScriptSettings$Companion;
	public fun <init> ()V
	public fun <init> (Z)V
	public synthetic fun <init> (ZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Z
	public final fun copy (Z)Lelide/tooling/project/manifest/ElidePackageManifest$TypeScriptSettings;
	public static synthetic fun copy$default (Lelide/tooling/project/manifest/ElidePackageManifest$TypeScriptSettings;ZILjava/lang/Object;)Lelide/tooling/project/manifest/ElidePackageManifest$TypeScriptSettings;
	public final fun debug ()Z
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final synthetic class elide/tooling/project/manifest/ElidePackageManifest$TypeScriptSettings$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/ElidePackageManifest$TypeScriptSettings$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/manifest/ElidePackageManifest$TypeScriptSettings;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/manifest/ElidePackageManifest$TypeScriptSettings;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/manifest/ElidePackageManifest$TypeScriptSettings$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/ElidePackageManifest$WebSettings {
	public static final field Companion Lelide/tooling/project/manifest/ElidePackageManifest$WebSettings$Companion;
	public fun <init> ()V
	public fun <init> (ZLelide/tooling/project/manifest/ElidePackageManifest$CssSettings;)V
	public synthetic fun <init> (ZLelide/tooling/project/manifest/ElidePackageManifest$CssSettings;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Z
	public final fun component2 ()Lelide/tooling/project/manifest/ElidePackageManifest$CssSettings;
	public final fun copy (ZLelide/tooling/project/manifest/ElidePackageManifest$CssSettings;)Lelide/tooling/project/manifest/ElidePackageManifest$WebSettings;
	public static synthetic fun copy$default (Lelide/tooling/project/manifest/ElidePackageManifest$WebSettings;ZLelide/tooling/project/manifest/ElidePackageManifest$CssSettings;ILjava/lang/Object;)Lelide/tooling/project/manifest/ElidePackageManifest$WebSettings;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getCss ()Lelide/tooling/project/manifest/ElidePackageManifest$CssSettings;
	public final fun getDebug ()Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final synthetic class elide/tooling/project/manifest/ElidePackageManifest$WebSettings$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/ElidePackageManifest$WebSettings$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/manifest/ElidePackageManifest$WebSettings;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/manifest/ElidePackageManifest$WebSettings;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/manifest/ElidePackageManifest$WebSettings$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/ElidePackageManifestKt {
	public static final fun merge (Lelide/tooling/project/manifest/ElidePackageManifest$DependencyResolution;Lelide/tooling/project/manifest/ElidePackageManifest$DependencyResolution;)Lelide/tooling/project/manifest/ElidePackageManifest$DependencyResolution;
	public static final fun merge (Lelide/tooling/project/manifest/ElidePackageManifest$GemDependencies;Lelide/tooling/project/manifest/ElidePackageManifest$GemDependencies;)Lelide/tooling/project/manifest/ElidePackageManifest$GemDependencies;
	public static final fun merge (Lelide/tooling/project/manifest/ElidePackageManifest$MavenDependencies;Lelide/tooling/project/manifest/ElidePackageManifest$MavenDependencies;)Lelide/tooling/project/manifest/ElidePackageManifest$MavenDependencies;
	public static final fun merge (Lelide/tooling/project/manifest/ElidePackageManifest$NpmDependencies;Lelide/tooling/project/manifest/ElidePackageManifest$NpmDependencies;)Lelide/tooling/project/manifest/ElidePackageManifest$NpmDependencies;
	public static final fun merge (Lelide/tooling/project/manifest/ElidePackageManifest$PipDependencies;Lelide/tooling/project/manifest/ElidePackageManifest$PipDependencies;)Lelide/tooling/project/manifest/ElidePackageManifest$PipDependencies;
	public static final fun merge (Lelide/tooling/project/manifest/ElidePackageManifest;Lelide/tooling/project/manifest/ElidePackageManifest;)Lelide/tooling/project/manifest/ElidePackageManifest;
}

public final class elide/tooling/project/manifest/GradleCatalogManifest : java/lang/Record, elide/tooling/project/manifest/PackageManifest {
	public static final field Companion Lelide/tooling/project/manifest/GradleCatalogManifest$Companion;
	public fun <init> ()V
	public final fun bundles ()Ljava/util/Map;
	public final fun component1 ()Ljava/nio/file/Path;
	public final fun component2 ()Ljava/util/Map;
	public final fun component3 ()Ljava/util/Map;
	public final fun component4 ()Ljava/util/Map;
	public final fun component5 ()Ljava/util/Map;
	public fun ecosystem ()Lelide/tooling/project/ProjectEcosystem;
	public fun equals (Ljava/lang/Object;)Z
	public synthetic fun getEcosystem ()Lelide/tooling/project/ProjectEcosystem;
	public fun hashCode ()I
	public final fun libraries ()Ljava/util/Map;
	public final fun path ()Ljava/nio/file/Path;
	public final fun plugins ()Ljava/util/Map;
	public fun toString ()Ljava/lang/String;
	public final fun versions ()Ljava/util/Map;
}

public final synthetic class elide/tooling/project/manifest/GradleCatalogManifest$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/GradleCatalogManifest$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/manifest/GradleCatalogManifest;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/manifest/GradleCatalogManifest;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/manifest/GradleCatalogManifest$CatalogBundle : java/lang/Record, elide/tooling/project/manifest/GradleCatalogManifest$CatalogBundleDefinition {
	public static final field Companion Lelide/tooling/project/manifest/GradleCatalogManifest$CatalogBundle$Companion;
	public fun <init> ()V
	public final fun component1 ()Ljava/util/List;
	public fun equals (Ljava/lang/Object;)Z
	public synthetic fun getLibraries ()Ljava/util/List;
	public fun hashCode ()I
	public fun libraries ()Ljava/util/List;
	public fun toString ()Ljava/lang/String;
}

public final synthetic class elide/tooling/project/manifest/GradleCatalogManifest$CatalogBundle$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/GradleCatalogManifest$CatalogBundle$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/manifest/GradleCatalogManifest$CatalogBundle;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/manifest/GradleCatalogManifest$CatalogBundle;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/manifest/GradleCatalogManifest$CatalogBundle$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract interface class elide/tooling/project/manifest/GradleCatalogManifest$CatalogBundleDefinition : elide/tooling/project/manifest/GradleCatalogManifest$SymbolicCatalogEntry {
	public static final field Companion Lelide/tooling/project/manifest/GradleCatalogManifest$CatalogBundleDefinition$Companion;
	public abstract fun getLibraries ()Ljava/util/List;
}

public final class elide/tooling/project/manifest/GradleCatalogManifest$CatalogBundleDefinition$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract interface class elide/tooling/project/manifest/GradleCatalogManifest$CatalogLibraryDefinition : elide/tooling/project/manifest/GradleCatalogManifest$SymbolicCatalogEntry {
	public static final field Companion Lelide/tooling/project/manifest/GradleCatalogManifest$CatalogLibraryDefinition$Companion;
	public abstract fun getCoordinate ()Ljava/lang/String;
	public abstract fun getGroup ()Ljava/lang/String;
	public abstract fun getModule ()Ljava/lang/String;
	public abstract fun getName ()Ljava/lang/String;
	public abstract fun getVersion ()Lelide/tooling/project/manifest/GradleCatalogManifest$CatalogVersionSpec;
}

public final class elide/tooling/project/manifest/GradleCatalogManifest$CatalogLibraryDefinition$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/GradleCatalogManifest$CatalogLibraryGroupName : java/lang/Record, elide/tooling/project/manifest/GradleCatalogManifest$CatalogLibraryDefinition {
	public static final field Companion Lelide/tooling/project/manifest/GradleCatalogManifest$CatalogLibraryGroupName$Companion;
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Lelide/tooling/project/manifest/GradleCatalogManifest$CatalogVersionSpec;
	public fun coordinate ()Ljava/lang/String;
	public fun equals (Ljava/lang/Object;)Z
	public synthetic fun getCoordinate ()Ljava/lang/String;
	public synthetic fun getGroup ()Ljava/lang/String;
	public synthetic fun getModule ()Ljava/lang/String;
	public synthetic fun getName ()Ljava/lang/String;
	public synthetic fun getVersion ()Lelide/tooling/project/manifest/GradleCatalogManifest$CatalogVersionSpec;
	public fun group ()Ljava/lang/String;
	public fun hashCode ()I
	public fun module ()Ljava/lang/String;
	public fun name ()Ljava/lang/String;
	public fun toString ()Ljava/lang/String;
	public fun version ()Lelide/tooling/project/manifest/GradleCatalogManifest$CatalogVersionSpec;
}

public final synthetic class elide/tooling/project/manifest/GradleCatalogManifest$CatalogLibraryGroupName$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/GradleCatalogManifest$CatalogLibraryGroupName$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/manifest/GradleCatalogManifest$CatalogLibraryGroupName;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/manifest/GradleCatalogManifest$CatalogLibraryGroupName;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/manifest/GradleCatalogManifest$CatalogLibraryGroupName$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/GradleCatalogManifest$CatalogLibraryModule : java/lang/Record, elide/tooling/project/manifest/GradleCatalogManifest$CatalogLibraryDefinition {
	public static final field Companion Lelide/tooling/project/manifest/GradleCatalogManifest$CatalogLibraryModule$Companion;
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Lelide/tooling/project/manifest/GradleCatalogManifest$CatalogVersionSpec;
	public fun coordinate ()Ljava/lang/String;
	public fun equals (Ljava/lang/Object;)Z
	public synthetic fun getCoordinate ()Ljava/lang/String;
	public synthetic fun getGroup ()Ljava/lang/String;
	public synthetic fun getModule ()Ljava/lang/String;
	public synthetic fun getName ()Ljava/lang/String;
	public synthetic fun getVersion ()Lelide/tooling/project/manifest/GradleCatalogManifest$CatalogVersionSpec;
	public fun group ()Ljava/lang/String;
	public fun hashCode ()I
	public fun module ()Ljava/lang/String;
	public fun name ()Ljava/lang/String;
	public fun toString ()Ljava/lang/String;
	public fun version ()Lelide/tooling/project/manifest/GradleCatalogManifest$CatalogVersionSpec;
}

public final synthetic class elide/tooling/project/manifest/GradleCatalogManifest$CatalogLibraryModule$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/GradleCatalogManifest$CatalogLibraryModule$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/manifest/GradleCatalogManifest$CatalogLibraryModule;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/manifest/GradleCatalogManifest$CatalogLibraryModule;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/manifest/GradleCatalogManifest$CatalogLibraryModule$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/GradleCatalogManifest$CatalogPlugin : java/lang/Record, elide/tooling/project/manifest/GradleCatalogManifest$CatalogPluginDefinition {
	public static final field Companion Lelide/tooling/project/manifest/GradleCatalogManifest$CatalogPlugin$Companion;
	public fun <init> ()V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Lelide/tooling/project/manifest/GradleCatalogManifest$CatalogVersionSpec;
	public fun equals (Ljava/lang/Object;)Z
	public synthetic fun getId ()Ljava/lang/String;
	public synthetic fun getVersion ()Lelide/tooling/project/manifest/GradleCatalogManifest$CatalogVersionSpec;
	public fun hashCode ()I
	public fun id ()Ljava/lang/String;
	public fun toString ()Ljava/lang/String;
	public fun version ()Lelide/tooling/project/manifest/GradleCatalogManifest$CatalogVersionSpec;
}

public final synthetic class elide/tooling/project/manifest/GradleCatalogManifest$CatalogPlugin$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/GradleCatalogManifest$CatalogPlugin$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/manifest/GradleCatalogManifest$CatalogPlugin;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/manifest/GradleCatalogManifest$CatalogPlugin;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/manifest/GradleCatalogManifest$CatalogPlugin$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract interface class elide/tooling/project/manifest/GradleCatalogManifest$CatalogPluginDefinition : elide/tooling/project/manifest/GradleCatalogManifest$SymbolicCatalogEntry {
	public static final field Companion Lelide/tooling/project/manifest/GradleCatalogManifest$CatalogPluginDefinition$Companion;
	public abstract fun getId ()Ljava/lang/String;
	public abstract fun getVersion ()Lelide/tooling/project/manifest/GradleCatalogManifest$CatalogVersionSpec;
}

public final class elide/tooling/project/manifest/GradleCatalogManifest$CatalogPluginDefinition$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract interface class elide/tooling/project/manifest/GradleCatalogManifest$CatalogVersionSpec {
	public static final field Companion Lelide/tooling/project/manifest/GradleCatalogManifest$CatalogVersionSpec$Companion;
	public fun provideVersion (Ljava/util/Map;)Ljava/lang/String;
}

public final class elide/tooling/project/manifest/GradleCatalogManifest$CatalogVersionSpec$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/GradleCatalogManifest$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/GradleCatalogManifest$NoVersion : elide/tooling/project/manifest/GradleCatalogManifest$CatalogVersionSpec {
	public static final field INSTANCE Lelide/tooling/project/manifest/GradleCatalogManifest$NoVersion;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toString ()Ljava/lang/String;
}

public abstract interface class elide/tooling/project/manifest/GradleCatalogManifest$SymbolicCatalogEntry {
}

public final class elide/tooling/project/manifest/GradleCatalogManifest$VersionRef : java/lang/Record, elide/tooling/project/manifest/GradleCatalogManifest$CatalogVersionSpec, elide/tooling/project/manifest/GradleCatalogManifest$SymbolicCatalogEntry {
	public static final field Companion Lelide/tooling/project/manifest/GradleCatalogManifest$VersionRef$Companion;
	public final fun component1 ()Ljava/lang/String;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun provideVersion (Ljava/util/Map;)Ljava/lang/String;
	public final fun ref ()Ljava/lang/String;
	public fun toString ()Ljava/lang/String;
}

public final synthetic class elide/tooling/project/manifest/GradleCatalogManifest$VersionRef$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/GradleCatalogManifest$VersionRef$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/manifest/GradleCatalogManifest$VersionRef;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/manifest/GradleCatalogManifest$VersionRef;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/manifest/GradleCatalogManifest$VersionRef$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/GradleCatalogManifest$VersionSpec : java/lang/Record, elide/tooling/project/manifest/GradleCatalogManifest$CatalogVersionSpec, elide/tooling/project/manifest/GradleCatalogManifest$SymbolicCatalogEntry {
	public static final field Companion Lelide/tooling/project/manifest/GradleCatalogManifest$VersionSpec$Companion;
	public final fun component1 ()Ljava/lang/String;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun provideVersion (Ljava/util/Map;)Ljava/lang/String;
	public fun toString ()Ljava/lang/String;
	public final fun version ()Ljava/lang/String;
}

public final synthetic class elide/tooling/project/manifest/GradleCatalogManifest$VersionSpec$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/GradleCatalogManifest$VersionSpec$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/manifest/GradleCatalogManifest$VersionSpec;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/manifest/GradleCatalogManifest$VersionSpec;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/manifest/GradleCatalogManifest$VersionSpec$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/MavenPomManifest : java/lang/Record, elide/tooling/project/manifest/PackageManifest {
	public static final field Companion Lelide/tooling/project/manifest/MavenPomManifest$Companion;
	public fun <init> (Ljava/nio/file/Path;Lorg/apache/maven/model/Model;)V
	public synthetic fun <init> (Ljava/nio/file/Path;Lorg/apache/maven/model/Model;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/nio/file/Path;
	public final fun component2 ()Lorg/apache/maven/model/Model;
	public final fun copy (Ljava/nio/file/Path;Lorg/apache/maven/model/Model;)Lelide/tooling/project/manifest/MavenPomManifest;
	public static synthetic fun copy$default (Lelide/tooling/project/manifest/MavenPomManifest;Ljava/nio/file/Path;Lorg/apache/maven/model/Model;ILjava/lang/Object;)Lelide/tooling/project/manifest/MavenPomManifest;
	public fun ecosystem ()Lelide/tooling/project/ProjectEcosystem;
	public fun equals (Ljava/lang/Object;)Z
	public synthetic fun getEcosystem ()Lelide/tooling/project/ProjectEcosystem;
	public fun hashCode ()I
	public final fun model ()Lorg/apache/maven/model/Model;
	public final fun path ()Ljava/nio/file/Path;
	public fun toString ()Ljava/lang/String;
}

public final synthetic class elide/tooling/project/manifest/MavenPomManifest$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/MavenPomManifest$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/manifest/MavenPomManifest;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/manifest/MavenPomManifest;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/manifest/MavenPomManifest$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/NodePackageManifest : java/lang/Record, elide/tooling/project/manifest/PackageManifest {
	public static final field Companion Lelide/tooling/project/manifest/NodePackageManifest$Companion;
	public fun <init> ()V
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Ljava/lang/String;Lelide/tooling/project/manifest/NodePackageManifest$ProjectBugs;Ljava/lang/String;Lelide/tooling/project/manifest/NodePackageManifest$ProjectPerson;Ljava/util/List;Lelide/tooling/project/manifest/NodePackageManifest$ProjectFunding;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Lelide/tooling/project/manifest/NodePackageManifest$ProjectBins;Lelide/tooling/project/manifest/NodePackageManifest$ProjectMans;Lelide/tooling/project/manifest/NodePackageManifest$ProjectDirectories;Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/List;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/List;Ljava/util/List;ZLjava/util/Map;Ljava/util/List;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Ljava/lang/String;Lelide/tooling/project/manifest/NodePackageManifest$ProjectBugs;Ljava/lang/String;Lelide/tooling/project/manifest/NodePackageManifest$ProjectPerson;Ljava/util/List;Lelide/tooling/project/manifest/NodePackageManifest$ProjectFunding;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Lelide/tooling/project/manifest/NodePackageManifest$ProjectBins;Lelide/tooling/project/manifest/NodePackageManifest$ProjectMans;Lelide/tooling/project/manifest/NodePackageManifest$ProjectDirectories;Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/List;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/List;Ljava/util/List;ZLjava/util/Map;Ljava/util/List;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun author ()Lelide/tooling/project/manifest/NodePackageManifest$ProjectPerson;
	public final fun bin ()Lelide/tooling/project/manifest/NodePackageManifest$ProjectBins;
	public final fun browser ()Ljava/lang/String;
	public final fun bugs ()Lelide/tooling/project/manifest/NodePackageManifest$ProjectBugs;
	public final fun bundleDependencies ()Ljava/util/List;
	public final fun component1 ()Ljava/lang/String;
	public final fun component10 ()Lelide/tooling/project/manifest/NodePackageManifest$ProjectFunding;
	public final fun component11 ()Ljava/util/List;
	public final fun component12 ()Ljava/lang/String;
	public final fun component13 ()Ljava/lang/String;
	public final fun component14 ()Lelide/tooling/project/manifest/NodePackageManifest$ProjectBins;
	public final fun component15 ()Lelide/tooling/project/manifest/NodePackageManifest$ProjectMans;
	public final fun component16 ()Lelide/tooling/project/manifest/NodePackageManifest$ProjectDirectories;
	public final fun component17 ()Ljava/lang/String;
	public final fun component18 ()Ljava/util/Map;
	public final fun component19 ()Ljava/util/Map;
	public final fun component2 ()Ljava/lang/String;
	public final fun component20 ()Ljava/util/Map;
	public final fun component21 ()Ljava/util/Map;
	public final fun component22 ()Ljava/util/Map;
	public final fun component23 ()Ljava/util/Map;
	public final fun component24 ()Ljava/util/List;
	public final fun component25 ()Ljava/util/Map;
	public final fun component26 ()Ljava/util/Map;
	public final fun component27 ()Ljava/util/Map;
	public final fun component28 ()Ljava/util/List;
	public final fun component29 ()Ljava/util/List;
	public final fun component3 ()Ljava/lang/String;
	public final fun component30 ()Z
	public final fun component31 ()Ljava/util/Map;
	public final fun component32 ()Ljava/util/List;
	public final fun component4 ()Ljava/util/List;
	public final fun component5 ()Ljava/lang/String;
	public final fun component6 ()Lelide/tooling/project/manifest/NodePackageManifest$ProjectBugs;
	public final fun component7 ()Ljava/lang/String;
	public final fun component8 ()Lelide/tooling/project/manifest/NodePackageManifest$ProjectPerson;
	public final fun component9 ()Ljava/util/List;
	public final fun config ()Ljava/util/Map;
	public final fun contributors ()Ljava/util/List;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Ljava/lang/String;Lelide/tooling/project/manifest/NodePackageManifest$ProjectBugs;Ljava/lang/String;Lelide/tooling/project/manifest/NodePackageManifest$ProjectPerson;Ljava/util/List;Lelide/tooling/project/manifest/NodePackageManifest$ProjectFunding;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Lelide/tooling/project/manifest/NodePackageManifest$ProjectBins;Lelide/tooling/project/manifest/NodePackageManifest$ProjectMans;Lelide/tooling/project/manifest/NodePackageManifest$ProjectDirectories;Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/List;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/List;Ljava/util/List;ZLjava/util/Map;Ljava/util/List;)Lelide/tooling/project/manifest/NodePackageManifest;
	public static synthetic fun copy$default (Lelide/tooling/project/manifest/NodePackageManifest;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Ljava/lang/String;Lelide/tooling/project/manifest/NodePackageManifest$ProjectBugs;Ljava/lang/String;Lelide/tooling/project/manifest/NodePackageManifest$ProjectPerson;Ljava/util/List;Lelide/tooling/project/manifest/NodePackageManifest$ProjectFunding;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Lelide/tooling/project/manifest/NodePackageManifest$ProjectBins;Lelide/tooling/project/manifest/NodePackageManifest$ProjectMans;Lelide/tooling/project/manifest/NodePackageManifest$ProjectDirectories;Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/List;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/List;Ljava/util/List;ZLjava/util/Map;Ljava/util/List;ILjava/lang/Object;)Lelide/tooling/project/manifest/NodePackageManifest;
	public final fun cpu ()Ljava/util/List;
	public final fun dependencies ()Ljava/util/Map;
	public final fun description ()Ljava/lang/String;
	public final fun devDependencies ()Ljava/util/Map;
	public final fun directories ()Lelide/tooling/project/manifest/NodePackageManifest$ProjectDirectories;
	public fun ecosystem ()Lelide/tooling/project/ProjectEcosystem;
	public final fun engines ()Ljava/util/Map;
	public fun equals (Ljava/lang/Object;)Z
	public final fun files ()Ljava/util/List;
	public final fun funding ()Lelide/tooling/project/manifest/NodePackageManifest$ProjectFunding;
	public synthetic fun getEcosystem ()Lelide/tooling/project/ProjectEcosystem;
	public fun hashCode ()I
	public final fun homepage ()Ljava/lang/String;
	public final fun keywords ()Ljava/util/List;
	public final fun license ()Ljava/lang/String;
	public final fun main ()Ljava/lang/String;
	public final fun man ()Lelide/tooling/project/manifest/NodePackageManifest$ProjectMans;
	public final fun name ()Ljava/lang/String;
	public final fun optionalDependencies ()Ljava/util/Map;
	public final fun os ()Ljava/util/List;
	public final fun overrides ()Ljava/util/Map;
	public final fun peerDependencies ()Ljava/util/Map;
	public final fun peerDependenciesMeta ()Ljava/util/Map;
	public final fun private ()Z
	public final fun publishConfig ()Ljava/util/Map;
	public final fun repository ()Ljava/lang/String;
	public final fun scripts ()Ljava/util/Map;
	public fun toString ()Ljava/lang/String;
	public final fun version ()Ljava/lang/String;
	public final fun workspaces ()Ljava/util/List;
}

public final synthetic class elide/tooling/project/manifest/NodePackageManifest$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/NodePackageManifest$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/manifest/NodePackageManifest;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/manifest/NodePackageManifest;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/manifest/NodePackageManifest$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract interface class elide/tooling/project/manifest/NodePackageManifest$PackageOverride {
	public static final field Companion Lelide/tooling/project/manifest/NodePackageManifest$PackageOverride$Companion;
}

public final class elide/tooling/project/manifest/NodePackageManifest$PackageOverride$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/NodePackageManifest$PackageOverride$PackageOverrideMap : java/lang/Record, elide/tooling/project/manifest/NodePackageManifest$ProjectRepo {
	public static final field Companion Lelide/tooling/project/manifest/NodePackageManifest$PackageOverride$PackageOverrideMap$Companion;
	public fun <init> ()V
	public fun <init> (Ljava/util/Map;)V
	public synthetic fun <init> (Ljava/util/Map;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/util/Map;
	public final fun copy (Ljava/util/Map;)Lelide/tooling/project/manifest/NodePackageManifest$PackageOverride$PackageOverrideMap;
	public static synthetic fun copy$default (Lelide/tooling/project/manifest/NodePackageManifest$PackageOverride$PackageOverrideMap;Ljava/util/Map;ILjava/lang/Object;)Lelide/tooling/project/manifest/NodePackageManifest$PackageOverride$PackageOverrideMap;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun inner ()Ljava/util/Map;
	public fun toString ()Ljava/lang/String;
}

public final synthetic class elide/tooling/project/manifest/NodePackageManifest$PackageOverride$PackageOverrideMap$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/NodePackageManifest$PackageOverride$PackageOverrideMap$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/manifest/NodePackageManifest$PackageOverride$PackageOverrideMap;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/manifest/NodePackageManifest$PackageOverride$PackageOverrideMap;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/manifest/NodePackageManifest$PackageOverride$PackageOverrideMap$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/NodePackageManifest$PackageOverride$PackageOverrideString : java/lang/Record, elide/tooling/project/manifest/NodePackageManifest$ProjectRepo {
	public static final field Companion Lelide/tooling/project/manifest/NodePackageManifest$PackageOverride$PackageOverrideString$Companion;
	public fun <init> ()V
	public fun <init> (Ljava/lang/String;)V
	public synthetic fun <init> (Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;)Lelide/tooling/project/manifest/NodePackageManifest$PackageOverride$PackageOverrideString;
	public static synthetic fun copy$default (Lelide/tooling/project/manifest/NodePackageManifest$PackageOverride$PackageOverrideString;Ljava/lang/String;ILjava/lang/Object;)Lelide/tooling/project/manifest/NodePackageManifest$PackageOverride$PackageOverrideString;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun string ()Ljava/lang/String;
	public fun toString ()Ljava/lang/String;
}

public final synthetic class elide/tooling/project/manifest/NodePackageManifest$PackageOverride$PackageOverrideString$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/NodePackageManifest$PackageOverride$PackageOverrideString$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/manifest/NodePackageManifest$PackageOverride$PackageOverrideString;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/manifest/NodePackageManifest$PackageOverride$PackageOverrideString;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/manifest/NodePackageManifest$PackageOverride$PackageOverrideString$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract interface class elide/tooling/project/manifest/NodePackageManifest$ProjectBins {
	public static final field Companion Lelide/tooling/project/manifest/NodePackageManifest$ProjectBins$Companion;
}

public final class elide/tooling/project/manifest/NodePackageManifest$ProjectBins$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/NodePackageManifest$ProjectBins$ProjectBinMap : java/lang/Record, elide/tooling/project/manifest/NodePackageManifest$ProjectBins {
	public static final field Companion Lelide/tooling/project/manifest/NodePackageManifest$ProjectBins$ProjectBinMap$Companion;
	public fun <init> ()V
	public fun <init> (Ljava/util/Map;)V
	public synthetic fun <init> (Ljava/util/Map;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun bins ()Ljava/util/Map;
	public final fun component1 ()Ljava/util/Map;
	public final fun copy (Ljava/util/Map;)Lelide/tooling/project/manifest/NodePackageManifest$ProjectBins$ProjectBinMap;
	public static synthetic fun copy$default (Lelide/tooling/project/manifest/NodePackageManifest$ProjectBins$ProjectBinMap;Ljava/util/Map;ILjava/lang/Object;)Lelide/tooling/project/manifest/NodePackageManifest$ProjectBins$ProjectBinMap;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final synthetic class elide/tooling/project/manifest/NodePackageManifest$ProjectBins$ProjectBinMap$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/NodePackageManifest$ProjectBins$ProjectBinMap$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/manifest/NodePackageManifest$ProjectBins$ProjectBinMap;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/manifest/NodePackageManifest$ProjectBins$ProjectBinMap;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/manifest/NodePackageManifest$ProjectBins$ProjectBinMap$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/NodePackageManifest$ProjectBins$ProjectBinString : java/lang/Record, elide/tooling/project/manifest/NodePackageManifest$ProjectBins {
	public static final field Companion Lelide/tooling/project/manifest/NodePackageManifest$ProjectBins$ProjectBinString$Companion;
	public fun <init> ()V
	public fun <init> (Ljava/lang/String;)V
	public synthetic fun <init> (Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;)Lelide/tooling/project/manifest/NodePackageManifest$ProjectBins$ProjectBinString;
	public static synthetic fun copy$default (Lelide/tooling/project/manifest/NodePackageManifest$ProjectBins$ProjectBinString;Ljava/lang/String;ILjava/lang/Object;)Lelide/tooling/project/manifest/NodePackageManifest$ProjectBins$ProjectBinString;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun string ()Ljava/lang/String;
	public fun toString ()Ljava/lang/String;
}

public final synthetic class elide/tooling/project/manifest/NodePackageManifest$ProjectBins$ProjectBinString$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/NodePackageManifest$ProjectBins$ProjectBinString$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/manifest/NodePackageManifest$ProjectBins$ProjectBinString;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/manifest/NodePackageManifest$ProjectBins$ProjectBinString;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/manifest/NodePackageManifest$ProjectBins$ProjectBinString$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract interface class elide/tooling/project/manifest/NodePackageManifest$ProjectBugs {
	public static final field Companion Lelide/tooling/project/manifest/NodePackageManifest$ProjectBugs$Companion;
}

public final class elide/tooling/project/manifest/NodePackageManifest$ProjectBugs$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/NodePackageManifest$ProjectBugs$ProjectBugsConfig : java/lang/Record, elide/tooling/project/manifest/NodePackageManifest$ProjectBugs {
	public static final field Companion Lelide/tooling/project/manifest/NodePackageManifest$ProjectBugs$ProjectBugsConfig$Companion;
	public fun <init> ()V
	public fun <init> (Ljava/lang/String;Ljava/lang/String;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;)Lelide/tooling/project/manifest/NodePackageManifest$ProjectBugs$ProjectBugsConfig;
	public static synthetic fun copy$default (Lelide/tooling/project/manifest/NodePackageManifest$ProjectBugs$ProjectBugsConfig;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Lelide/tooling/project/manifest/NodePackageManifest$ProjectBugs$ProjectBugsConfig;
	public final fun email ()Ljava/lang/String;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public final fun url ()Ljava/lang/String;
}

public final synthetic class elide/tooling/project/manifest/NodePackageManifest$ProjectBugs$ProjectBugsConfig$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/NodePackageManifest$ProjectBugs$ProjectBugsConfig$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/manifest/NodePackageManifest$ProjectBugs$ProjectBugsConfig;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/manifest/NodePackageManifest$ProjectBugs$ProjectBugsConfig;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/manifest/NodePackageManifest$ProjectBugs$ProjectBugsConfig$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/NodePackageManifest$ProjectBugs$ProjectBugsUrl : java/lang/Record, elide/tooling/project/manifest/NodePackageManifest$ProjectBugs {
	public static final field Companion Lelide/tooling/project/manifest/NodePackageManifest$ProjectBugs$ProjectBugsUrl$Companion;
	public fun <init> ()V
	public fun <init> (Ljava/lang/String;)V
	public synthetic fun <init> (Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;)Lelide/tooling/project/manifest/NodePackageManifest$ProjectBugs$ProjectBugsUrl;
	public static synthetic fun copy$default (Lelide/tooling/project/manifest/NodePackageManifest$ProjectBugs$ProjectBugsUrl;Ljava/lang/String;ILjava/lang/Object;)Lelide/tooling/project/manifest/NodePackageManifest$ProjectBugs$ProjectBugsUrl;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public final fun url ()Ljava/lang/String;
}

public final synthetic class elide/tooling/project/manifest/NodePackageManifest$ProjectBugs$ProjectBugsUrl$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/NodePackageManifest$ProjectBugs$ProjectBugsUrl$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/manifest/NodePackageManifest$ProjectBugs$ProjectBugsUrl;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/manifest/NodePackageManifest$ProjectBugs$ProjectBugsUrl;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/manifest/NodePackageManifest$ProjectBugs$ProjectBugsUrl$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/NodePackageManifest$ProjectDirectories : java/lang/Record {
	public static final field Companion Lelide/tooling/project/manifest/NodePackageManifest$ProjectDirectories$Companion;
	public fun <init> ()V
	public fun <init> (Ljava/lang/String;Ljava/lang/String;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun bin ()Ljava/lang/String;
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;)Lelide/tooling/project/manifest/NodePackageManifest$ProjectDirectories;
	public static synthetic fun copy$default (Lelide/tooling/project/manifest/NodePackageManifest$ProjectDirectories;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Lelide/tooling/project/manifest/NodePackageManifest$ProjectDirectories;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun man ()Ljava/lang/String;
	public fun toString ()Ljava/lang/String;
}

public final synthetic class elide/tooling/project/manifest/NodePackageManifest$ProjectDirectories$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/NodePackageManifest$ProjectDirectories$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/manifest/NodePackageManifest$ProjectDirectories;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/manifest/NodePackageManifest$ProjectDirectories;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/manifest/NodePackageManifest$ProjectDirectories$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract interface class elide/tooling/project/manifest/NodePackageManifest$ProjectFunding {
	public static final field Companion Lelide/tooling/project/manifest/NodePackageManifest$ProjectFunding$Companion;
}

public final class elide/tooling/project/manifest/NodePackageManifest$ProjectFunding$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/NodePackageManifest$ProjectFunding$ProjectMultiFunding : java/lang/Record, elide/tooling/project/manifest/NodePackageManifest$ProjectFunding {
	public static final field Companion Lelide/tooling/project/manifest/NodePackageManifest$ProjectFunding$ProjectMultiFunding$Companion;
	public fun <init> ()V
	public fun <init> (Ljava/util/List;)V
	public synthetic fun <init> (Ljava/util/List;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/util/List;
	public final fun copy (Ljava/util/List;)Lelide/tooling/project/manifest/NodePackageManifest$ProjectFunding$ProjectMultiFunding;
	public static synthetic fun copy$default (Lelide/tooling/project/manifest/NodePackageManifest$ProjectFunding$ProjectMultiFunding;Ljava/util/List;ILjava/lang/Object;)Lelide/tooling/project/manifest/NodePackageManifest$ProjectFunding$ProjectMultiFunding;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun list ()Ljava/util/List;
	public fun toString ()Ljava/lang/String;
}

public final synthetic class elide/tooling/project/manifest/NodePackageManifest$ProjectFunding$ProjectMultiFunding$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/NodePackageManifest$ProjectFunding$ProjectMultiFunding$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/manifest/NodePackageManifest$ProjectFunding$ProjectMultiFunding;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/manifest/NodePackageManifest$ProjectFunding$ProjectMultiFunding;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/manifest/NodePackageManifest$ProjectFunding$ProjectMultiFunding$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/NodePackageManifest$ProjectFunding$ProjectSingleFunding : java/lang/Record, elide/tooling/project/manifest/NodePackageManifest$ProjectFunding {
	public static final field Companion Lelide/tooling/project/manifest/NodePackageManifest$ProjectFunding$ProjectSingleFunding$Companion;
	public fun <init> ()V
	public fun <init> (Lelide/tooling/project/manifest/NodePackageManifest$ProjectFundingEntry;)V
	public synthetic fun <init> (Lelide/tooling/project/manifest/NodePackageManifest$ProjectFundingEntry;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Lelide/tooling/project/manifest/NodePackageManifest$ProjectFundingEntry;
	public final fun copy (Lelide/tooling/project/manifest/NodePackageManifest$ProjectFundingEntry;)Lelide/tooling/project/manifest/NodePackageManifest$ProjectFunding$ProjectSingleFunding;
	public static synthetic fun copy$default (Lelide/tooling/project/manifest/NodePackageManifest$ProjectFunding$ProjectSingleFunding;Lelide/tooling/project/manifest/NodePackageManifest$ProjectFundingEntry;ILjava/lang/Object;)Lelide/tooling/project/manifest/NodePackageManifest$ProjectFunding$ProjectSingleFunding;
	public final fun entry ()Lelide/tooling/project/manifest/NodePackageManifest$ProjectFundingEntry;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final synthetic class elide/tooling/project/manifest/NodePackageManifest$ProjectFunding$ProjectSingleFunding$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/NodePackageManifest$ProjectFunding$ProjectSingleFunding$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/manifest/NodePackageManifest$ProjectFunding$ProjectSingleFunding;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/manifest/NodePackageManifest$ProjectFunding$ProjectSingleFunding;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/manifest/NodePackageManifest$ProjectFunding$ProjectSingleFunding$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract interface class elide/tooling/project/manifest/NodePackageManifest$ProjectFundingEntry {
	public static final field Companion Lelide/tooling/project/manifest/NodePackageManifest$ProjectFundingEntry$Companion;
}

public final class elide/tooling/project/manifest/NodePackageManifest$ProjectFundingEntry$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/NodePackageManifest$ProjectFundingEntry$ProjectFundingMap : java/lang/Record, elide/tooling/project/manifest/NodePackageManifest$ProjectFundingEntry {
	public static final field Companion Lelide/tooling/project/manifest/NodePackageManifest$ProjectFundingEntry$ProjectFundingMap$Companion;
	public fun <init> ()V
	public fun <init> (Ljava/lang/String;Ljava/lang/String;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;)Lelide/tooling/project/manifest/NodePackageManifest$ProjectFundingEntry$ProjectFundingMap;
	public static synthetic fun copy$default (Lelide/tooling/project/manifest/NodePackageManifest$ProjectFundingEntry$ProjectFundingMap;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Lelide/tooling/project/manifest/NodePackageManifest$ProjectFundingEntry$ProjectFundingMap;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public final fun type ()Ljava/lang/String;
	public final fun url ()Ljava/lang/String;
}

public final synthetic class elide/tooling/project/manifest/NodePackageManifest$ProjectFundingEntry$ProjectFundingMap$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/NodePackageManifest$ProjectFundingEntry$ProjectFundingMap$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/manifest/NodePackageManifest$ProjectFundingEntry$ProjectFundingMap;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/manifest/NodePackageManifest$ProjectFundingEntry$ProjectFundingMap;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/manifest/NodePackageManifest$ProjectFundingEntry$ProjectFundingMap$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/NodePackageManifest$ProjectFundingEntry$ProjectFundingString : java/lang/Record, elide/tooling/project/manifest/NodePackageManifest$ProjectFundingEntry {
	public static final field Companion Lelide/tooling/project/manifest/NodePackageManifest$ProjectFundingEntry$ProjectFundingString$Companion;
	public fun <init> ()V
	public fun <init> (Ljava/lang/String;)V
	public synthetic fun <init> (Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;)Lelide/tooling/project/manifest/NodePackageManifest$ProjectFundingEntry$ProjectFundingString;
	public static synthetic fun copy$default (Lelide/tooling/project/manifest/NodePackageManifest$ProjectFundingEntry$ProjectFundingString;Ljava/lang/String;ILjava/lang/Object;)Lelide/tooling/project/manifest/NodePackageManifest$ProjectFundingEntry$ProjectFundingString;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun string ()Ljava/lang/String;
	public fun toString ()Ljava/lang/String;
}

public final synthetic class elide/tooling/project/manifest/NodePackageManifest$ProjectFundingEntry$ProjectFundingString$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/NodePackageManifest$ProjectFundingEntry$ProjectFundingString$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/manifest/NodePackageManifest$ProjectFundingEntry$ProjectFundingString;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/manifest/NodePackageManifest$ProjectFundingEntry$ProjectFundingString;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/manifest/NodePackageManifest$ProjectFundingEntry$ProjectFundingString$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract interface class elide/tooling/project/manifest/NodePackageManifest$ProjectMans {
	public static final field Companion Lelide/tooling/project/manifest/NodePackageManifest$ProjectMans$Companion;
}

public final class elide/tooling/project/manifest/NodePackageManifest$ProjectMans$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/NodePackageManifest$ProjectMans$ProjectManList : java/lang/Record, elide/tooling/project/manifest/NodePackageManifest$ProjectMans {
	public static final field Companion Lelide/tooling/project/manifest/NodePackageManifest$ProjectMans$ProjectManList$Companion;
	public fun <init> ()V
	public fun <init> (Ljava/util/List;)V
	public synthetic fun <init> (Ljava/util/List;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/util/List;
	public final fun copy (Ljava/util/List;)Lelide/tooling/project/manifest/NodePackageManifest$ProjectMans$ProjectManList;
	public static synthetic fun copy$default (Lelide/tooling/project/manifest/NodePackageManifest$ProjectMans$ProjectManList;Ljava/util/List;ILjava/lang/Object;)Lelide/tooling/project/manifest/NodePackageManifest$ProjectMans$ProjectManList;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun list ()Ljava/util/List;
	public fun toString ()Ljava/lang/String;
}

public final synthetic class elide/tooling/project/manifest/NodePackageManifest$ProjectMans$ProjectManList$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/NodePackageManifest$ProjectMans$ProjectManList$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/manifest/NodePackageManifest$ProjectMans$ProjectManList;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/manifest/NodePackageManifest$ProjectMans$ProjectManList;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/manifest/NodePackageManifest$ProjectMans$ProjectManList$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/NodePackageManifest$ProjectMans$ProjectManString : java/lang/Record, elide/tooling/project/manifest/NodePackageManifest$ProjectMans {
	public static final field Companion Lelide/tooling/project/manifest/NodePackageManifest$ProjectMans$ProjectManString$Companion;
	public fun <init> ()V
	public fun <init> (Ljava/lang/String;)V
	public synthetic fun <init> (Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;)Lelide/tooling/project/manifest/NodePackageManifest$ProjectMans$ProjectManString;
	public static synthetic fun copy$default (Lelide/tooling/project/manifest/NodePackageManifest$ProjectMans$ProjectManString;Ljava/lang/String;ILjava/lang/Object;)Lelide/tooling/project/manifest/NodePackageManifest$ProjectMans$ProjectManString;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun string ()Ljava/lang/String;
	public fun toString ()Ljava/lang/String;
}

public final synthetic class elide/tooling/project/manifest/NodePackageManifest$ProjectMans$ProjectManString$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/NodePackageManifest$ProjectMans$ProjectManString$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/manifest/NodePackageManifest$ProjectMans$ProjectManString;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/manifest/NodePackageManifest$ProjectMans$ProjectManString;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/manifest/NodePackageManifest$ProjectMans$ProjectManString$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract interface class elide/tooling/project/manifest/NodePackageManifest$ProjectPerson {
	public static final field Companion Lelide/tooling/project/manifest/NodePackageManifest$ProjectPerson$Companion;
}

public final class elide/tooling/project/manifest/NodePackageManifest$ProjectPerson$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/NodePackageManifest$ProjectPerson$ProjectPersonMap : java/lang/Record, elide/tooling/project/manifest/NodePackageManifest$ProjectBugs {
	public static final field Companion Lelide/tooling/project/manifest/NodePackageManifest$ProjectPerson$ProjectPersonMap$Companion;
	public fun <init> ()V
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lelide/tooling/project/manifest/NodePackageManifest$ProjectPerson$ProjectPersonMap;
	public static synthetic fun copy$default (Lelide/tooling/project/manifest/NodePackageManifest$ProjectPerson$ProjectPersonMap;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Lelide/tooling/project/manifest/NodePackageManifest$ProjectPerson$ProjectPersonMap;
	public final fun email ()Ljava/lang/String;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun name ()Ljava/lang/String;
	public fun toString ()Ljava/lang/String;
	public final fun url ()Ljava/lang/String;
}

public final synthetic class elide/tooling/project/manifest/NodePackageManifest$ProjectPerson$ProjectPersonMap$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/NodePackageManifest$ProjectPerson$ProjectPersonMap$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/manifest/NodePackageManifest$ProjectPerson$ProjectPersonMap;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/manifest/NodePackageManifest$ProjectPerson$ProjectPersonMap;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/manifest/NodePackageManifest$ProjectPerson$ProjectPersonMap$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/NodePackageManifest$ProjectPerson$ProjectPersonString : java/lang/Record, elide/tooling/project/manifest/NodePackageManifest$ProjectBugs {
	public static final field Companion Lelide/tooling/project/manifest/NodePackageManifest$ProjectPerson$ProjectPersonString$Companion;
	public fun <init> (Ljava/lang/String;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;)Lelide/tooling/project/manifest/NodePackageManifest$ProjectPerson$ProjectPersonString;
	public static synthetic fun copy$default (Lelide/tooling/project/manifest/NodePackageManifest$ProjectPerson$ProjectPersonString;Ljava/lang/String;ILjava/lang/Object;)Lelide/tooling/project/manifest/NodePackageManifest$ProjectPerson$ProjectPersonString;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun string ()Ljava/lang/String;
	public fun toString ()Ljava/lang/String;
}

public final synthetic class elide/tooling/project/manifest/NodePackageManifest$ProjectPerson$ProjectPersonString$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/NodePackageManifest$ProjectPerson$ProjectPersonString$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/manifest/NodePackageManifest$ProjectPerson$ProjectPersonString;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/manifest/NodePackageManifest$ProjectPerson$ProjectPersonString;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/manifest/NodePackageManifest$ProjectPerson$ProjectPersonString$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract interface class elide/tooling/project/manifest/NodePackageManifest$ProjectRepo {
	public static final field Companion Lelide/tooling/project/manifest/NodePackageManifest$ProjectRepo$Companion;
}

public final class elide/tooling/project/manifest/NodePackageManifest$ProjectRepo$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/NodePackageManifest$ProjectRepo$ProjectRepoMap : java/lang/Record, elide/tooling/project/manifest/NodePackageManifest$ProjectRepo {
	public static final field Companion Lelide/tooling/project/manifest/NodePackageManifest$ProjectRepo$ProjectRepoMap$Companion;
	public fun <init> ()V
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lelide/tooling/project/manifest/NodePackageManifest$ProjectRepo$ProjectRepoMap;
	public static synthetic fun copy$default (Lelide/tooling/project/manifest/NodePackageManifest$ProjectRepo$ProjectRepoMap;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Lelide/tooling/project/manifest/NodePackageManifest$ProjectRepo$ProjectRepoMap;
	public final fun directory ()Ljava/lang/String;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public final fun type ()Ljava/lang/String;
	public final fun url ()Ljava/lang/String;
}

public final synthetic class elide/tooling/project/manifest/NodePackageManifest$ProjectRepo$ProjectRepoMap$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/NodePackageManifest$ProjectRepo$ProjectRepoMap$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/manifest/NodePackageManifest$ProjectRepo$ProjectRepoMap;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/manifest/NodePackageManifest$ProjectRepo$ProjectRepoMap;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/manifest/NodePackageManifest$ProjectRepo$ProjectRepoMap$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/NodePackageManifest$ProjectRepo$ProjectRepoString : java/lang/Record, elide/tooling/project/manifest/NodePackageManifest$ProjectRepo {
	public static final field Companion Lelide/tooling/project/manifest/NodePackageManifest$ProjectRepo$ProjectRepoString$Companion;
	public fun <init> ()V
	public fun <init> (Ljava/lang/String;)V
	public synthetic fun <init> (Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;)Lelide/tooling/project/manifest/NodePackageManifest$ProjectRepo$ProjectRepoString;
	public static synthetic fun copy$default (Lelide/tooling/project/manifest/NodePackageManifest$ProjectRepo$ProjectRepoString;Ljava/lang/String;ILjava/lang/Object;)Lelide/tooling/project/manifest/NodePackageManifest$ProjectRepo$ProjectRepoString;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun string ()Ljava/lang/String;
	public fun toString ()Ljava/lang/String;
}

public final synthetic class elide/tooling/project/manifest/NodePackageManifest$ProjectRepo$ProjectRepoString$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/NodePackageManifest$ProjectRepo$ProjectRepoString$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/manifest/NodePackageManifest$ProjectRepo$ProjectRepoString;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/manifest/NodePackageManifest$ProjectRepo$ProjectRepoString;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/manifest/NodePackageManifest$ProjectRepo$ProjectRepoString$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract interface class elide/tooling/project/manifest/PackageManifest {
	public static final field Companion Lelide/tooling/project/manifest/PackageManifest$Companion;
	public abstract fun getEcosystem ()Lelide/tooling/project/ProjectEcosystem;
}

public final class elide/tooling/project/manifest/PackageManifest$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/PyProjectManifest : java/lang/Record, elide/tooling/project/manifest/PackageManifest {
	public static final field Companion Lelide/tooling/project/manifest/PyProjectManifest$Companion;
	public fun <init> (Lelide/tooling/project/manifest/PyProjectManifest$BuildSystemConfig;Lelide/tooling/project/manifest/PyProjectManifest$ProjectConfig;)V
	public final fun buildSystem ()Lelide/tooling/project/manifest/PyProjectManifest$BuildSystemConfig;
	public final fun component1 ()Lelide/tooling/project/manifest/PyProjectManifest$BuildSystemConfig;
	public final fun component2 ()Lelide/tooling/project/manifest/PyProjectManifest$ProjectConfig;
	public final fun copy (Lelide/tooling/project/manifest/PyProjectManifest$BuildSystemConfig;Lelide/tooling/project/manifest/PyProjectManifest$ProjectConfig;)Lelide/tooling/project/manifest/PyProjectManifest;
	public static synthetic fun copy$default (Lelide/tooling/project/manifest/PyProjectManifest;Lelide/tooling/project/manifest/PyProjectManifest$BuildSystemConfig;Lelide/tooling/project/manifest/PyProjectManifest$ProjectConfig;ILjava/lang/Object;)Lelide/tooling/project/manifest/PyProjectManifest;
	public fun ecosystem ()Lelide/tooling/project/ProjectEcosystem;
	public fun equals (Ljava/lang/Object;)Z
	public synthetic fun getEcosystem ()Lelide/tooling/project/ProjectEcosystem;
	public fun hashCode ()I
	public final fun project ()Lelide/tooling/project/manifest/PyProjectManifest$ProjectConfig;
	public fun toString ()Ljava/lang/String;
}

public final synthetic class elide/tooling/project/manifest/PyProjectManifest$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/PyProjectManifest$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/manifest/PyProjectManifest;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/manifest/PyProjectManifest;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/manifest/PyProjectManifest$BuildSystemConfig : java/lang/Record {
	public static final field Companion Lelide/tooling/project/manifest/PyProjectManifest$BuildSystemConfig$Companion;
	public fun <init> ()V
	public fun <init> (Ljava/util/List;Ljava/lang/String;)V
	public synthetic fun <init> (Ljava/util/List;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun buildBackend ()Ljava/lang/String;
	public final fun component1 ()Ljava/util/List;
	public final fun component2 ()Ljava/lang/String;
	public final fun copy (Ljava/util/List;Ljava/lang/String;)Lelide/tooling/project/manifest/PyProjectManifest$BuildSystemConfig;
	public static synthetic fun copy$default (Lelide/tooling/project/manifest/PyProjectManifest$BuildSystemConfig;Ljava/util/List;Ljava/lang/String;ILjava/lang/Object;)Lelide/tooling/project/manifest/PyProjectManifest$BuildSystemConfig;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun requires ()Ljava/util/List;
	public fun toString ()Ljava/lang/String;
}

public final synthetic class elide/tooling/project/manifest/PyProjectManifest$BuildSystemConfig$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/PyProjectManifest$BuildSystemConfig$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/manifest/PyProjectManifest$BuildSystemConfig;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/manifest/PyProjectManifest$BuildSystemConfig;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/manifest/PyProjectManifest$BuildSystemConfig$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/PyProjectManifest$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/PyProjectManifest$ProjectConfig : java/lang/Record {
	public static final field Companion Lelide/tooling/project/manifest/PyProjectManifest$ProjectConfig$Companion;
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Ljava/util/Map;Ljava/lang/String;Ljava/util/List;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Ljava/util/Map;Ljava/lang/String;Ljava/util/List;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun authors ()Ljava/util/List;
	public final fun classifiers ()Ljava/util/List;
	public final fun component1 ()Ljava/lang/String;
	public final fun component10 ()Ljava/lang/String;
	public final fun component11 ()Ljava/util/List;
	public final fun component12 ()Ljava/util/List;
	public final fun component13 ()Ljava/util/List;
	public final fun component14 ()Ljava/util/Map;
	public final fun component15 ()Ljava/util/Map;
	public final fun component16 ()Ljava/util/Map;
	public final fun component17 ()Ljava/util/Map;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/util/List;
	public final fun component4 ()Ljava/util/Map;
	public final fun component5 ()Ljava/lang/String;
	public final fun component6 ()Ljava/util/List;
	public final fun component7 ()Ljava/util/List;
	public final fun component8 ()Ljava/lang/String;
	public final fun component9 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Ljava/util/Map;Ljava/lang/String;Ljava/util/List;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)Lelide/tooling/project/manifest/PyProjectManifest$ProjectConfig;
	public static synthetic fun copy$default (Lelide/tooling/project/manifest/PyProjectManifest$ProjectConfig;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Ljava/util/Map;Ljava/lang/String;Ljava/util/List;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;ILjava/lang/Object;)Lelide/tooling/project/manifest/PyProjectManifest$ProjectConfig;
	public final fun dependencies ()Ljava/util/List;
	public final fun description ()Ljava/lang/String;
	public final fun entrypoints ()Ljava/util/Map;
	public fun equals (Ljava/lang/Object;)Z
	public final fun guiScripts ()Ljava/util/Map;
	public fun hashCode ()I
	public final fun keywords ()Ljava/util/List;
	public final fun license ()Ljava/lang/String;
	public final fun licenseFiles ()Ljava/util/List;
	public final fun maintainers ()Ljava/util/List;
	public final fun name ()Ljava/lang/String;
	public final fun optionalDependencies ()Ljava/util/Map;
	public final fun readme ()Ljava/lang/String;
	public final fun requiresPython ()Ljava/lang/String;
	public final fun scripts ()Ljava/util/Map;
	public fun toString ()Ljava/lang/String;
	public final fun urls ()Ljava/util/Map;
	public final fun version ()Ljava/lang/String;
}

public final synthetic class elide/tooling/project/manifest/PyProjectManifest$ProjectConfig$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/PyProjectManifest$ProjectConfig$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/manifest/PyProjectManifest$ProjectConfig;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/manifest/PyProjectManifest$ProjectConfig;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/manifest/PyProjectManifest$ProjectConfig$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/PyProjectManifest$ProjectPerson : java/lang/Record {
	public static final field Companion Lelide/tooling/project/manifest/PyProjectManifest$ProjectPerson$Companion;
	public fun <init> ()V
	public fun <init> (Ljava/lang/String;Ljava/lang/String;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;)Lelide/tooling/project/manifest/PyProjectManifest$ProjectPerson;
	public static synthetic fun copy$default (Lelide/tooling/project/manifest/PyProjectManifest$ProjectPerson;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Lelide/tooling/project/manifest/PyProjectManifest$ProjectPerson;
	public final fun email ()Ljava/lang/String;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun name ()Ljava/lang/String;
	public fun toString ()Ljava/lang/String;
}

public final synthetic class elide/tooling/project/manifest/PyProjectManifest$ProjectPerson$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/PyProjectManifest$ProjectPerson$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/manifest/PyProjectManifest$ProjectPerson;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/manifest/PyProjectManifest$ProjectPerson;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/manifest/PyProjectManifest$ProjectPerson$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/PythonRequirementsManifest : elide/tooling/project/manifest/PackageManifest {
	public static final field Companion Lelide/tooling/project/manifest/PythonRequirementsManifest$Companion;
	public static final synthetic fun box-impl (Ljava/util/List;)Lelide/tooling/project/manifest/PythonRequirementsManifest;
	public static fun constructor-impl (Ljava/util/List;)Ljava/util/List;
	public fun equals (Ljava/lang/Object;)Z
	public static fun equals-impl (Ljava/util/List;Ljava/lang/Object;)Z
	public static final fun equals-impl0 (Ljava/util/List;Ljava/util/List;)Z
	public final fun getDependencies ()Ljava/util/List;
	public fun getEcosystem ()Lelide/tooling/project/ProjectEcosystem;
	public static fun getEcosystem-impl (Ljava/util/List;)Lelide/tooling/project/ProjectEcosystem;
	public fun hashCode ()I
	public static fun hashCode-impl (Ljava/util/List;)I
	public fun toString ()Ljava/lang/String;
	public static fun toString-impl (Ljava/util/List;)Ljava/lang/String;
	public final synthetic fun unbox-impl ()Ljava/util/List;
}

public final synthetic class elide/tooling/project/manifest/PythonRequirementsManifest$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/PythonRequirementsManifest$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun deserialize-wYB4BT0 (Lkotlinx/serialization/encoding/Decoder;)Ljava/util/List;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public final fun serialize-a3yuNkU (Lkotlinx/serialization/encoding/Encoder;Ljava/util/List;)V
}

public final class elide/tooling/project/manifest/PythonRequirementsManifest$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract interface class elide/tooling/project/mcp/McpContributor {
	public static final field Companion Lelide/tooling/project/mcp/McpContributor$Companion;
	public static fun all ()Lkotlin/sequences/Sequence;
	public abstract fun contribute (Lelide/tooling/project/mcp/McpContributor$McpContext;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class elide/tooling/project/mcp/McpContributor$Companion {
	public final fun all ()Lkotlin/sequences/Sequence;
}

public abstract interface class elide/tooling/project/mcp/McpContributor$McpContext {
	public abstract fun getServer ()Lio/modelcontextprotocol/kotlin/sdk/server/Server;
}

public final class elide/tooling/project/mcp/McpProjectConfig {
	public static final field Companion Lelide/tooling/project/mcp/McpProjectConfig$Companion;
	public static final field MCP_CONFIG_FILE Ljava/lang/String;
	public fun <init> (Ljava/util/Map;)V
	public final fun component1 ()Ljava/util/Map;
	public final fun copy (Ljava/util/Map;)Lelide/tooling/project/mcp/McpProjectConfig;
	public static synthetic fun copy$default (Lelide/tooling/project/mcp/McpProjectConfig;Ljava/util/Map;ILjava/lang/Object;)Lelide/tooling/project/mcp/McpProjectConfig;
	public static final fun createForElide ()Lelide/tooling/project/mcp/McpProjectConfig;
	public static final fun createForElideJson ()Ljava/lang/String;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getMcpServers ()Ljava/util/Map;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final synthetic class elide/tooling/project/mcp/McpProjectConfig$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/mcp/McpProjectConfig$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/mcp/McpProjectConfig;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/mcp/McpProjectConfig;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/mcp/McpProjectConfig$Command : elide/tooling/project/mcp/McpProjectConfig$McpServerType {
	public static final field Companion Lelide/tooling/project/mcp/McpProjectConfig$Command$Companion;
	public fun <init> (Ljava/lang/String;Ljava/util/List;Ljava/util/Map;Ljava/lang/String;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/util/List;Ljava/util/Map;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/util/List;
	public final fun component3 ()Ljava/util/Map;
	public final fun component4 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;Ljava/util/List;Ljava/util/Map;Ljava/lang/String;)Lelide/tooling/project/mcp/McpProjectConfig$Command;
	public static synthetic fun copy$default (Lelide/tooling/project/mcp/McpProjectConfig$Command;Ljava/lang/String;Ljava/util/List;Ljava/util/Map;Ljava/lang/String;ILjava/lang/Object;)Lelide/tooling/project/mcp/McpProjectConfig$Command;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getArgs ()Ljava/util/List;
	public final fun getCommand ()Ljava/lang/String;
	public final fun getEnv ()Ljava/util/Map;
	public final fun getType ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final synthetic class elide/tooling/project/mcp/McpProjectConfig$Command$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/mcp/McpProjectConfig$Command$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/mcp/McpProjectConfig$Command;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/mcp/McpProjectConfig$Command;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/mcp/McpProjectConfig$Command$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/mcp/McpProjectConfig$Companion {
	public final fun createForElide ()Lelide/tooling/project/mcp/McpProjectConfig;
	public final fun createForElideJson ()Ljava/lang/String;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract interface class elide/tooling/project/mcp/McpProjectConfig$McpServerType {
	public static final field Companion Lelide/tooling/project/mcp/McpProjectConfig$McpServerType$Companion;
}

public final class elide/tooling/project/mcp/McpProjectConfig$McpServerType$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/mcp/ModelContextProtocol {
	public static final field INSTANCE Lelide/tooling/project/mcp/ModelContextProtocol;
	public final fun build (Lelide/tooling/project/mcp/ModelContextProtocol$McpConfiguration;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun configure (Lelide/tooling/project/ElideConfiguredProject;Lkotlin/jvm/functions/Function0;Ljava/lang/String;Z)Lelide/tooling/project/mcp/ModelContextProtocol$McpConfiguration;
	public static synthetic fun configure$default (Lelide/tooling/project/mcp/ModelContextProtocol;Lelide/tooling/project/ElideConfiguredProject;Lkotlin/jvm/functions/Function0;Ljava/lang/String;ZILjava/lang/Object;)Lelide/tooling/project/mcp/ModelContextProtocol$McpConfiguration;
}

public abstract interface class elide/tooling/project/mcp/ModelContextProtocol$McpConfiguration {
	public abstract fun getContextFactory ()Lkotlin/jvm/functions/Function0;
	public abstract fun getDebug ()Z
	public abstract fun getElideVersion ()Ljava/lang/String;
	public abstract fun getProject ()Lkotlin/jvm/functions/Function0;
}

public final class elide/tooling/project/mcp/ModelContextProtocol$McpOverHttp : java/lang/Record, elide/tooling/project/mcp/ModelContextProtocol$McpServerConfig {
	public static final field Companion Lelide/tooling/project/mcp/ModelContextProtocol$McpOverHttp$Companion;
	public static final field DEFAULT_MCP_HOST Ljava/lang/String;
	public static final field DEFAULT_MCP_PORT S
	public final fun component1 ()Ljava/lang/String;
	public final fun component2-Mh2AYeg ()S
	public fun equals (Ljava/lang/Object;)Z
	public synthetic fun getMode ()Lelide/tooling/project/mcp/ModelContextProtocol$McpServingMode;
	public fun hashCode ()I
	public final fun host ()Ljava/lang/String;
	public fun mode ()Lelide/tooling/project/mcp/ModelContextProtocol$McpServingMode;
	public static final fun of-X7ZSXPM (Ljava/lang/String;Lkotlin/UShort;)Lelide/tooling/project/mcp/ModelContextProtocol$McpOverHttp;
	public final fun port ()S
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/project/mcp/ModelContextProtocol$McpOverHttp$Companion {
	public final fun of-X7ZSXPM (Ljava/lang/String;Lkotlin/UShort;)Lelide/tooling/project/mcp/ModelContextProtocol$McpOverHttp;
	public static synthetic fun of-X7ZSXPM$default (Lelide/tooling/project/mcp/ModelContextProtocol$McpOverHttp$Companion;Ljava/lang/String;Lkotlin/UShort;ILjava/lang/Object;)Lelide/tooling/project/mcp/ModelContextProtocol$McpOverHttp;
}

public final class elide/tooling/project/mcp/ModelContextProtocol$McpOverStdio : elide/tooling/project/mcp/ModelContextProtocol$McpServerConfig {
	public static final field INSTANCE Lelide/tooling/project/mcp/ModelContextProtocol$McpOverStdio;
	public fun equals (Ljava/lang/Object;)Z
	public fun getMode ()Lelide/tooling/project/mcp/ModelContextProtocol$McpServingMode;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract interface class elide/tooling/project/mcp/ModelContextProtocol$McpServer {
	public abstract fun getConfig ()Lelide/tooling/project/mcp/ModelContextProtocol$McpServerConfig;
	public abstract fun getServerFactory ()Lkotlin/jvm/functions/Function0;
	public fun launchAndWait (Lelide/tooling/project/mcp/ModelContextProtocol$McpServerConfig;ZLkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun launchAndWait (ZZLio/modelcontextprotocol/kotlin/sdk/shared/AbstractTransport;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun launchAndWait$default (Lelide/tooling/project/mcp/ModelContextProtocol$McpServer;Lelide/tooling/project/mcp/ModelContextProtocol$McpServerConfig;ZLkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
}

public abstract interface class elide/tooling/project/mcp/ModelContextProtocol$McpServerConfig {
	public abstract fun getMode ()Lelide/tooling/project/mcp/ModelContextProtocol$McpServingMode;
}

public final class elide/tooling/project/mcp/ModelContextProtocol$McpServingMode : java/lang/Enum {
	public static final field Http Lelide/tooling/project/mcp/ModelContextProtocol$McpServingMode;
	public static final field Stdio Lelide/tooling/project/mcp/ModelContextProtocol$McpServingMode;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public static fun valueOf (Ljava/lang/String;)Lelide/tooling/project/mcp/ModelContextProtocol$McpServingMode;
	public static fun values ()[Lelide/tooling/project/mcp/ModelContextProtocol$McpServingMode;
}

