public final class elide/tool/cli/Statics {
	public static final field INSTANCE Lelide/tool/cli/Statics;
	public static field err Ljava/io/PrintStream;
	public static field out Ljava/io/PrintStream;
	public final fun assignStreams (Ljava/io/PrintStream;Ljava/io/PrintStream;Ljava/io/InputStream;)V
	public final fun getArgs ()[Ljava/lang/String;
	public final fun getBin ()Ljava/lang/String;
	public final fun getBinPath ()Ljava/nio/file/Path;
	public final fun getDisableStreams ()Z
	public final fun getElideHome ()Ljava/nio/file/Path;
	public final fun getIn ()Ljava/io/InputStream;
	public final fun getLogging ()Lelide/runtime/Logger;
	public final fun getNoColor ()Z
	public final fun getResourcesPath ()Ljava/nio/file/Path;
	public final fun getServerLogger ()Lelide/runtime/Logger;
	public final fun getTerminal ()Lcom/github/ajalt/mordant/terminal/Terminal;
	public final fun mountArgs (Ljava/lang/String;[Ljava/lang/String;)V
}

public abstract class elide/tooling/AbstractTool : elide/tool/Tool$EmbeddedTool {
	public static final field Companion Lelide/tooling/AbstractTool$Companion;
	protected fun <init> (Lelide/tool/Tool$CommandLineTool;)V
	public final fun delegateToTool (Ljava/nio/file/Path;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun embeddedToolError (Lelide/tool/Tool$CommandLineTool;Ljava/lang/String;ILjava/lang/Throwable;)Ljava/lang/Void;
	public fun getDescription ()Ljava/lang/String;
	public fun getDocs ()Ljava/net/URI;
	public fun getInfo ()Lelide/tool/Tool$CommandLineTool;
	public fun getLabel ()Ljava/lang/String;
	public fun getLogging ()Lelide/runtime/Logger;
	public fun getName ()Ljava/lang/String;
	public fun getVersion ()Ljava/lang/String;
	public abstract fun invoke (Lelide/tooling/AbstractTool$EmbeddedToolState;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun supported ()Z
}

public final class elide/tooling/AbstractTool$Companion {
	public final fun embeddedToolError (Lelide/tool/Tool$CommandLineTool;Ljava/lang/String;ILjava/lang/Throwable;)Ljava/lang/Void;
	public static synthetic fun embeddedToolError$default (Lelide/tooling/AbstractTool$Companion;Lelide/tool/Tool$CommandLineTool;Ljava/lang/String;ILjava/lang/Throwable;ILjava/lang/Object;)Ljava/lang/Void;
}

public class elide/tooling/AbstractTool$EmbeddedToolError : java/lang/RuntimeException {
	public fun <init> (Lelide/tool/Tool$CommandLineTool;ILjava/lang/String;Ljava/lang/Throwable;)V
	public synthetic fun <init> (Lelide/tool/Tool$CommandLineTool;ILjava/lang/String;Ljava/lang/Throwable;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getExitCode ()I
	public final fun getTool ()Lelide/tool/Tool$CommandLineTool;
}

public abstract interface class elide/tooling/AbstractTool$EmbeddedToolState {
	public abstract fun getResourcesPath ()Ljava/nio/file/Path;
}

public abstract class elide/tooling/GenericTool : elide/tooling/AbstractTool {
	public static final field Companion Lelide/tooling/GenericTool$Companion;
	public fun <init> (Lelide/tool/Tool$CommandLineTool;)V
	public fun amendArgs (Lelide/tool/MutableArguments;)V
	public abstract fun createTool ()Ljava/lang/Object;
	public static final fun gatherArgs (Ljava/util/SortedSet;Lelide/tool/Arguments;)Lkotlin/Pair;
	public abstract fun getInputs ()Ljava/lang/Object;
	public abstract fun getOutputs ()Ljava/lang/Object;
	public abstract fun getTaskDescription ()Ljava/lang/String;
	public abstract fun getToolLogger ()Lelide/runtime/Logger;
	public fun invoke (Lelide/tooling/AbstractTool$EmbeddedToolState;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun resolveInputs ()Ljava/lang/Object;
	public fun resolveOutputs (Ljava/io/StringWriter;Ljava/io/StringWriter;ILkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun supported ()Z
	public fun toolExec (Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun toolRun (Ljava/io/PrintWriter;Ljava/io/PrintWriter;[Ljava/lang/String;)I
}

public final class elide/tooling/GenericTool$Companion {
	public final fun gatherArgs (Ljava/util/SortedSet;Lelide/tool/Arguments;)Lkotlin/Pair;
}

public final class elide/tooling/builder/BuildDriver {
	public static final field INSTANCE Lelide/tooling/builder/BuildDriver;
	public static final fun buildProject (Lkotlinx/coroutines/CoroutineScope;Lio/micronaut/context/BeanContext;Lelide/tooling/project/ElideProject;Lelide/tooling/config/BuildConfigurator$BuildConfiguration;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun buildProject$default (Lkotlinx/coroutines/CoroutineScope;Lio/micronaut/context/BeanContext;Lelide/tooling/project/ElideProject;Lelide/tooling/config/BuildConfigurator$BuildConfiguration;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static final fun configure (Lio/micronaut/context/BeanContext;Lelide/tooling/project/ElideProject;Lelide/tooling/config/BuildConfigurator$BuildSettings;Lelide/tooling/config/BuildConfigurator;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun configure$default (Lio/micronaut/context/BeanContext;Lelide/tooling/project/ElideProject;Lelide/tooling/config/BuildConfigurator$BuildSettings;Lelide/tooling/config/BuildConfigurator;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static final fun dependencies (Lkotlinx/coroutines/CoroutineScope;Lelide/tooling/config/BuildConfigurator$BuildConfiguration;)Lkotlinx/coroutines/Deferred;
	public static final fun resolve (Lkotlinx/coroutines/CoroutineScope;Lelide/tooling/config/BuildConfigurator$BuildConfiguration;Ljava/util/List;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun resolve$default (Lkotlinx/coroutines/CoroutineScope;Lelide/tooling/config/BuildConfigurator$BuildConfiguration;Ljava/util/List;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
}

public final class elide/tooling/builder/TestDriver {
	public static final field INSTANCE Lelide/tooling/builder/TestDriver;
	public static final fun configureTests (Lkotlinx/coroutines/CoroutineScope;Lio/micronaut/context/BeanContext;Lelide/tooling/project/ElideProject;Lelide/runtime/intrinsics/testing/TestingRegistrar;Lkotlin/jvm/functions/Function1;Lelide/tooling/registry/ResolverRegistry;Lelide/exec/ActionScope;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun configureTests$default (Lkotlinx/coroutines/CoroutineScope;Lio/micronaut/context/BeanContext;Lelide/tooling/project/ElideProject;Lelide/runtime/intrinsics/testing/TestingRegistrar;Lkotlin/jvm/functions/Function1;Lelide/tooling/registry/ResolverRegistry;Lelide/exec/ActionScope;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static final fun discoverTests (Lkotlinx/coroutines/CoroutineScope;Lio/micronaut/context/BeanContext;Lelide/tooling/project/ElideProject;Lelide/runtime/intrinsics/testing/TestingRegistrar;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun discoverTests$default (Lkotlinx/coroutines/CoroutineScope;Lio/micronaut/context/BeanContext;Lelide/tooling/project/ElideProject;Lelide/runtime/intrinsics/testing/TestingRegistrar;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
}

public final class elide/tooling/config/BuildConfiguration {
	public static final field INSTANCE Lelide/tooling/config/BuildConfiguration;
	public static final fun configure (Lelide/tooling/project/ElideProject;Lio/micronaut/context/BeanContext;Lelide/tooling/config/BuildConfigurator$BuildConfiguration;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun configure (Lelide/tooling/project/ElideProject;Lio/micronaut/context/BeanContext;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun create ()Lelide/tooling/config/BuildConfigurator$BuildConfiguration;
	public static final fun create (Ljava/nio/file/Path;Lelide/tooling/config/BuildConfigurator$MutableBuildSettings;)Lelide/tooling/config/BuildConfigurator$BuildConfiguration;
	public static synthetic fun create$default (Ljava/nio/file/Path;Lelide/tooling/config/BuildConfigurator$MutableBuildSettings;ILjava/lang/Object;)Lelide/tooling/config/BuildConfigurator$BuildConfiguration;
}

public abstract interface class elide/tooling/config/BuildConfigurator : elide/tooling/config/ProjectConfigurator {
	public abstract fun contribute (Lelide/tooling/config/BuildConfigurator$ElideBuildState;Lelide/tooling/config/BuildConfigurator$BuildConfiguration;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class elide/tooling/config/BuildConfigurator$BuildConfiguration {
	public abstract fun getActionScope ()Lelide/exec/ActionScope;
	public abstract fun getProjectRoot ()Ljava/nio/file/Path;
	public abstract fun getResolvers ()Lelide/tooling/registry/ResolverRegistry;
	public abstract fun getSettings ()Lelide/tooling/config/BuildConfigurator$MutableBuildSettings;
	public abstract fun getTaskGraph ()Lcom/google/common/graph/ImmutableGraph$Builder;
}

public abstract interface class elide/tooling/config/BuildConfigurator$BuildConsoleController {
	public abstract fun onCurrentWork (Lelide/tooling/config/BuildConfigurator$BuildWork;)V
}

public abstract interface class elide/tooling/config/BuildConfigurator$BuildEvent : elide/tooling/config/BuildConfigurator$BuildNotify {
}

public abstract interface class elide/tooling/config/BuildConfigurator$BuildEventController {
	public abstract fun onError (Lelide/tooling/config/BuildConfigurator$BuildEvent;)V
	public abstract fun onEventBegin (Lelide/tooling/config/BuildConfigurator$BuildEvent;)V
	public abstract fun onEventEnd (Lelide/tooling/config/BuildConfigurator$BuildEvent;)V
	public abstract fun onProgress (Lelide/tooling/config/BuildConfigurator$BuildEvent;)V
	public abstract fun onProgress (Lelide/tooling/config/BuildConfigurator$BuildTransfer;Lelide/tooling/config/BuildConfigurator$BuildEvent;)V
	public abstract fun onProgress (Lelide/tooling/config/BuildConfigurator$BuildWorker;Lelide/tooling/config/BuildConfigurator$BuildEvent;)V
	public abstract fun onTransferEnd (Lelide/tooling/config/BuildConfigurator$BuildTransfer;)V
	public abstract fun onTransferError (Lelide/tooling/config/BuildConfigurator$BuildTransfer;Lelide/tooling/config/BuildConfigurator$BuildEvent;)V
	public abstract fun onTransferStart (Lelide/tooling/config/BuildConfigurator$BuildTransfer;Lelide/tooling/config/BuildConfigurator$BuildEvent;)V
	public abstract fun onWorkerEnd (Lelide/tooling/config/BuildConfigurator$BuildWorker;)V
	public abstract fun onWorkerError (Lelide/tooling/config/BuildConfigurator$BuildWorker;Lelide/tooling/config/BuildConfigurator$BuildEvent;)V
	public abstract fun onWorkerStart (Lelide/tooling/config/BuildConfigurator$BuildWorker;Ljava/lang/String;)V
}

public abstract interface class elide/tooling/config/BuildConfigurator$BuildNotify {
}

public abstract interface class elide/tooling/config/BuildConfigurator$BuildSettings {
	public abstract fun getCaching ()Z
	public abstract fun getChecks ()Z
	public abstract fun getDependencies ()Z
	public abstract fun toMutable ()Lelide/tooling/config/BuildConfigurator$MutableBuildSettings;
}

public abstract interface class elide/tooling/config/BuildConfigurator$BuildTransfer : elide/tooling/config/BuildConfigurator$BuildNotify {
}

public abstract interface class elide/tooling/config/BuildConfigurator$BuildWork : elide/tooling/config/BuildConfigurator$BuildEvent {
}

public abstract interface class elide/tooling/config/BuildConfigurator$BuildWorker : elide/tooling/config/BuildConfigurator$BuildNotify {
}

public abstract interface class elide/tooling/config/BuildConfigurator$ElideBuildState {
	public abstract fun getBeanContext ()Lio/micronaut/context/BeanContext;
	public abstract fun getConsole ()Lelide/tooling/config/BuildConfigurator$BuildConsoleController;
	public abstract fun getEvents ()Lelide/tooling/config/BuildConfigurator$BuildEventController;
	public abstract fun getLayout ()Lelide/tooling/config/BuildConfigurator$ProjectDirectories;
	public abstract fun getManifest ()Lelide/tooling/project/manifest/ElidePackageManifest;
	public abstract fun getProject ()Lelide/tooling/project/ElideConfiguredProject;
	public abstract fun getResourcesPath ()Ljava/nio/file/Path;
}

public final class elide/tooling/config/BuildConfigurator$ImmutableBuildSettings : java/lang/Record, elide/tooling/config/BuildConfigurator$BuildSettings {
	public static final field Companion Lelide/tooling/config/BuildConfigurator$ImmutableBuildSettings$Companion;
	public fun <init> (ZZZ)V
	public fun caching ()Z
	public fun checks ()Z
	public final fun component1 ()Z
	public final fun component2 ()Z
	public final fun component3 ()Z
	public final fun copy (ZZZ)Lelide/tooling/config/BuildConfigurator$ImmutableBuildSettings;
	public static synthetic fun copy$default (Lelide/tooling/config/BuildConfigurator$ImmutableBuildSettings;ZZZILjava/lang/Object;)Lelide/tooling/config/BuildConfigurator$ImmutableBuildSettings;
	public fun dependencies ()Z
	public fun equals (Ljava/lang/Object;)Z
	public synthetic fun getCaching ()Z
	public synthetic fun getChecks ()Z
	public synthetic fun getDependencies ()Z
	public fun hashCode ()I
	public fun toMutable ()Lelide/tooling/config/BuildConfigurator$MutableBuildSettings;
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/config/BuildConfigurator$ImmutableBuildSettings$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/config/BuildConfigurator$ImmutableBuildSettings$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/config/BuildConfigurator$ImmutableBuildSettings;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/config/BuildConfigurator$ImmutableBuildSettings;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/config/BuildConfigurator$ImmutableBuildSettings$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/config/BuildConfigurator$MutableBuildSettings : elide/tooling/config/BuildConfigurator$BuildSettings {
	public fun <init> ()V
	public fun <init> (ZZZ)V
	public synthetic fun <init> (ZZZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun build ()Lelide/tooling/config/BuildConfigurator$BuildSettings;
	public final fun component1 ()Z
	public final fun component2 ()Z
	public final fun component3 ()Z
	public final fun copy (ZZZ)Lelide/tooling/config/BuildConfigurator$MutableBuildSettings;
	public static synthetic fun copy$default (Lelide/tooling/config/BuildConfigurator$MutableBuildSettings;ZZZILjava/lang/Object;)Lelide/tooling/config/BuildConfigurator$MutableBuildSettings;
	public fun equals (Ljava/lang/Object;)Z
	public fun getCaching ()Z
	public fun getChecks ()Z
	public fun getDependencies ()Z
	public fun hashCode ()I
	public fun setCaching (Z)V
	public fun setChecks (Z)V
	public fun setDependencies (Z)V
	public fun toMutable ()Lelide/tooling/config/BuildConfigurator$MutableBuildSettings;
	public fun toString ()Ljava/lang/String;
}

public abstract interface class elide/tooling/config/BuildConfigurator$ProjectDirectories {
	public fun getArtifacts ()Ljava/nio/file/Path;
	public fun getCache ()Ljava/nio/file/Path;
	public fun getDependencies ()Ljava/nio/file/Path;
	public fun getDevRoot ()Ljava/nio/file/Path;
	public abstract fun getProjectRoot ()Ljava/nio/file/Path;
	public fun getWorkspaceRoot ()Ljava/nio/file/Path;
}

public final class elide/tooling/config/BuildConfigurators {
	public static final field INSTANCE Lelide/tooling/config/BuildConfigurators;
	public static final fun collect ()Lkotlin/sequences/Sequence;
	public static final fun contribute (Lio/micronaut/context/BeanContext;Lelide/tooling/project/ElideConfiguredProject;Lelide/tooling/config/BuildConfigurator$BuildConfiguration;Lelide/tooling/config/BuildConfigurator;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun contribute (Lio/micronaut/context/BeanContext;Lelide/tooling/project/ElideConfiguredProject;Lkotlin/sequences/Sequence;Lelide/tooling/config/BuildConfigurator$BuildConfiguration;Lelide/tooling/config/BuildConfigurator;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun contribute$default (Lio/micronaut/context/BeanContext;Lelide/tooling/project/ElideConfiguredProject;Lelide/tooling/config/BuildConfigurator$BuildConfiguration;Lelide/tooling/config/BuildConfigurator;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static synthetic fun contribute$default (Lio/micronaut/context/BeanContext;Lelide/tooling/project/ElideConfiguredProject;Lkotlin/sequences/Sequence;Lelide/tooling/config/BuildConfigurator$BuildConfiguration;Lelide/tooling/config/BuildConfigurator;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
}

public abstract interface class elide/tooling/config/ProjectConfigurator {
}

public final class elide/tooling/config/TestConfiguration {
	public static final field INSTANCE Lelide/tooling/config/TestConfiguration;
	public static final fun configureTests (Lelide/tooling/project/ElideProject;Lio/micronaut/context/BeanContext;Lelide/runtime/intrinsics/testing/TestingRegistrar;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun configureTests (Lelide/tooling/project/ElideProject;Lio/micronaut/context/BeanContext;Lelide/tooling/config/TestConfigurator$TestConfiguration;Lelide/runtime/intrinsics/testing/TestingRegistrar;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun configureTests$default (Lelide/tooling/project/ElideProject;Lio/micronaut/context/BeanContext;Lelide/runtime/intrinsics/testing/TestingRegistrar;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static final fun create ()Lelide/tooling/config/TestConfigurator$TestConfiguration;
	public static final fun create (Ljava/nio/file/Path;Lelide/exec/ActionScope;Lelide/tooling/registry/ResolverRegistry;Lelide/tooling/config/TestConfigurator$MutableTestSettings;)Lelide/tooling/config/TestConfigurator$TestConfiguration;
	public static synthetic fun create$default (Ljava/nio/file/Path;Lelide/exec/ActionScope;Lelide/tooling/registry/ResolverRegistry;Lelide/tooling/config/TestConfigurator$MutableTestSettings;ILjava/lang/Object;)Lelide/tooling/config/TestConfigurator$TestConfiguration;
}

public abstract interface class elide/tooling/config/TestConfigurator : elide/tooling/config/ProjectConfigurator {
	public abstract fun contribute (Lelide/tooling/config/TestConfigurator$ElideTestState;Lelide/tooling/config/TestConfigurator$TestConfiguration;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class elide/tooling/config/TestConfigurator$ElideTestState {
	public abstract fun getBeanContext ()Lio/micronaut/context/BeanContext;
	public abstract fun getEvents ()Lelide/tooling/config/TestConfigurator$TestEventController;
	public abstract fun getLayout ()Lelide/tooling/config/BuildConfigurator$ProjectDirectories;
	public abstract fun getManifest ()Lelide/tooling/project/manifest/ElidePackageManifest;
	public abstract fun getProject ()Lelide/tooling/project/ElideConfiguredProject;
	public abstract fun getRegistrar ()Lelide/runtime/intrinsics/testing/TestingRegistrar;
	public abstract fun getResourcesPath ()Ljava/nio/file/Path;
}

public final class elide/tooling/config/TestConfigurator$ImmutableTestSettings : java/lang/Record, elide/tooling/config/TestConfigurator$TestSettings {
	public fun <init> ()V
	public fun <init> (ZZ)V
	public synthetic fun <init> (ZZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Z
	public final fun component2 ()Z
	public final fun copy (ZZ)Lelide/tooling/config/TestConfigurator$ImmutableTestSettings;
	public static synthetic fun copy$default (Lelide/tooling/config/TestConfigurator$ImmutableTestSettings;ZZILjava/lang/Object;)Lelide/tooling/config/TestConfigurator$ImmutableTestSettings;
	public fun enableCoverage ()Z
	public fun enableDiscovery ()Z
	public fun equals (Ljava/lang/Object;)Z
	public synthetic fun getEnableCoverage ()Z
	public synthetic fun getEnableDiscovery ()Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/config/TestConfigurator$MutableTestSettings : elide/tooling/config/TestConfigurator$TestSettings {
	public fun <init> ()V
	public fun <init> (ZZ)V
	public synthetic fun <init> (ZZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Z
	public final fun component2 ()Z
	public final fun copy (ZZ)Lelide/tooling/config/TestConfigurator$MutableTestSettings;
	public static synthetic fun copy$default (Lelide/tooling/config/TestConfigurator$MutableTestSettings;ZZILjava/lang/Object;)Lelide/tooling/config/TestConfigurator$MutableTestSettings;
	public fun equals (Ljava/lang/Object;)Z
	public fun getEnableCoverage ()Z
	public fun getEnableDiscovery ()Z
	public fun hashCode ()I
	public fun setEnableCoverage (Z)V
	public fun setEnableDiscovery (Z)V
	public fun toString ()Ljava/lang/String;
}

public abstract interface class elide/tooling/config/TestConfigurator$TestConfiguration {
	public abstract fun getActionScope ()Lelide/exec/ActionScope;
	public abstract fun getProjectRoot ()Ljava/nio/file/Path;
	public abstract fun getResolvers ()Lelide/tooling/registry/ResolverRegistry;
	public abstract fun getSettings ()Lelide/tooling/config/TestConfigurator$MutableTestSettings;
}

public abstract interface class elide/tooling/config/TestConfigurator$TestEvent : elide/tooling/config/TestConfigurator$TestNotify {
}

public abstract interface class elide/tooling/config/TestConfigurator$TestEventController {
	public abstract fun emit (Lelide/tooling/config/TestConfigurator$TestNotify;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class elide/tooling/config/TestConfigurator$TestEventController$Binder {
	public abstract fun bind (Lelide/tooling/config/TestConfigurator$TestNotify;Ljava/lang/Class;Lkotlin/jvm/functions/Function3;)Lelide/tooling/config/TestConfigurator$TestEventController$Binder;
}

public final class elide/tooling/config/TestConfigurator$TestEventController$Inert : elide/tooling/config/TestConfigurator$TestEventController {
	public static final field INSTANCE Lelide/tooling/config/TestConfigurator$TestEventController$Inert;
	public fun emit (Lelide/tooling/config/TestConfigurator$TestNotify;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/config/TestConfigurator$TestFail : elide/tooling/config/TestConfigurator$TestStatus {
	public static final field INSTANCE Lelide/tooling/config/TestConfigurator$TestFail;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract interface class elide/tooling/config/TestConfigurator$TestNotify {
}

public final class elide/tooling/config/TestConfigurator$TestPass : elide/tooling/config/TestConfigurator$TestStatus {
	public static final field INSTANCE Lelide/tooling/config/TestConfigurator$TestPass;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract interface class elide/tooling/config/TestConfigurator$TestSettings {
	public abstract fun getEnableCoverage ()Z
	public abstract fun getEnableDiscovery ()Z
}

public final class elide/tooling/config/TestConfigurator$TestSkip : elide/tooling/config/TestConfigurator$TestStatus {
	public static final field INSTANCE Lelide/tooling/config/TestConfigurator$TestSkip;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract interface class elide/tooling/config/TestConfigurator$TestStatus : elide/tooling/config/TestConfigurator$TestNotify {
}

public abstract interface class elide/tooling/config/TestConfigurator$TestWork : elide/tooling/config/TestConfigurator$TestEvent {
}

public abstract interface class elide/tooling/config/TestConfigurator$TestWorker : elide/tooling/config/TestConfigurator$TestNotify {
}

public final class elide/tooling/config/TestConfigurators {
	public static final field INSTANCE Lelide/tooling/config/TestConfigurators;
	public static final fun collect ()Lkotlin/sequences/Sequence;
	public static final fun contribute (Lio/micronaut/context/BeanContext;Lelide/tooling/project/ElideConfiguredProject;Lelide/runtime/intrinsics/testing/TestingRegistrar;Lelide/tooling/config/TestConfigurator$TestConfiguration;Lelide/tooling/config/TestConfigurator;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun contribute (Lio/micronaut/context/BeanContext;Lelide/tooling/project/ElideConfiguredProject;Lelide/runtime/intrinsics/testing/TestingRegistrar;Lkotlin/sequences/Sequence;Lelide/tooling/config/TestConfigurator$TestConfiguration;Lelide/tooling/config/TestConfigurator;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun contribute$default (Lio/micronaut/context/BeanContext;Lelide/tooling/project/ElideConfiguredProject;Lelide/runtime/intrinsics/testing/TestingRegistrar;Lelide/tooling/config/TestConfigurator$TestConfiguration;Lelide/tooling/config/TestConfigurator;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static synthetic fun contribute$default (Lio/micronaut/context/BeanContext;Lelide/tooling/project/ElideConfiguredProject;Lelide/runtime/intrinsics/testing/TestingRegistrar;Lkotlin/sequences/Sequence;Lelide/tooling/config/TestConfigurator$TestConfiguration;Lelide/tooling/config/TestConfigurator;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
}

public final class elide/tooling/coverage/CoverageJsonReport {
	public static final field Companion Lelide/tooling/coverage/CoverageJsonReport$Companion;
	public fun <init> (Ljava/util/List;)V
	public final fun component1 ()Ljava/util/List;
	public final fun copy (Ljava/util/List;)Lelide/tooling/coverage/CoverageJsonReport;
	public static synthetic fun copy$default (Lelide/tooling/coverage/CoverageJsonReport;Ljava/util/List;ILjava/lang/Object;)Lelide/tooling/coverage/CoverageJsonReport;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getEntries ()Ljava/util/List;
	public fun hashCode ()I
	public static final fun parse (Ljava/io/InputStream;)Lelide/tooling/coverage/CoverageJsonReport;
	public static final fun parse (Ljava/lang/String;)Lelide/tooling/coverage/CoverageJsonReport;
	public final fun toJson ()Ljava/lang/String;
	public final fun toJson (Ljava/io/OutputStream;)V
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/coverage/CoverageJsonReport$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/coverage/CoverageJsonReport$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/coverage/CoverageJsonReport;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/coverage/CoverageJsonReport;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/coverage/CoverageJsonReport$Companion {
	public final fun parse (Ljava/io/InputStream;)Lelide/tooling/coverage/CoverageJsonReport;
	public final fun parse (Ljava/lang/String;)Lelide/tooling/coverage/CoverageJsonReport;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/coverage/CoverageJsonReport$CoverageInfoStanza {
	public static final field Companion Lelide/tooling/coverage/CoverageJsonReport$CoverageInfoStanza$Companion;
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/util/List;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/util/List;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;Ljava/util/List;)Lelide/tooling/coverage/CoverageJsonReport$CoverageInfoStanza;
	public static synthetic fun copy$default (Lelide/tooling/coverage/CoverageJsonReport$CoverageInfoStanza;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;ILjava/lang/Object;)Lelide/tooling/coverage/CoverageJsonReport$CoverageInfoStanza;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getName ()Ljava/lang/String;
	public final fun getPath ()Ljava/lang/String;
	public final fun getRoots ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/coverage/CoverageJsonReport$CoverageInfoStanza$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/coverage/CoverageJsonReport$CoverageInfoStanza$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/coverage/CoverageJsonReport$CoverageInfoStanza;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/coverage/CoverageJsonReport$CoverageInfoStanza;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/coverage/CoverageJsonReport$CoverageInfoStanza$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/coverage/CoverageJsonReport$CoverageRoot {
	public static final field Companion Lelide/tooling/coverage/CoverageJsonReport$CoverageRoot$Companion;
	public fun <init> (Ljava/lang/String;ZLjava/lang/Integer;Lelide/tooling/coverage/CoverageJsonReport$CoverageSourceSection;Ljava/util/List;)V
	public synthetic fun <init> (Ljava/lang/String;ZLjava/lang/Integer;Lelide/tooling/coverage/CoverageJsonReport$CoverageSourceSection;Ljava/util/List;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Z
	public final fun component3 ()Ljava/lang/Integer;
	public final fun component4 ()Lelide/tooling/coverage/CoverageJsonReport$CoverageSourceSection;
	public final fun component5 ()Ljava/util/List;
	public final fun copy (Ljava/lang/String;ZLjava/lang/Integer;Lelide/tooling/coverage/CoverageJsonReport$CoverageSourceSection;Ljava/util/List;)Lelide/tooling/coverage/CoverageJsonReport$CoverageRoot;
	public static synthetic fun copy$default (Lelide/tooling/coverage/CoverageJsonReport$CoverageRoot;Ljava/lang/String;ZLjava/lang/Integer;Lelide/tooling/coverage/CoverageJsonReport$CoverageSourceSection;Ljava/util/List;ILjava/lang/Object;)Lelide/tooling/coverage/CoverageJsonReport$CoverageRoot;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getCount ()Ljava/lang/Integer;
	public final fun getCovered ()Z
	public final fun getName ()Ljava/lang/String;
	public final fun getSections ()Ljava/util/List;
	public final fun getSourceSection ()Lelide/tooling/coverage/CoverageJsonReport$CoverageSourceSection;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/coverage/CoverageJsonReport$CoverageRoot$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/coverage/CoverageJsonReport$CoverageRoot$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/coverage/CoverageJsonReport$CoverageRoot;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/coverage/CoverageJsonReport$CoverageRoot;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/coverage/CoverageJsonReport$CoverageRoot$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/coverage/CoverageJsonReport$CoverageSection {
	public static final field Companion Lelide/tooling/coverage/CoverageJsonReport$CoverageSection$Companion;
	public fun <init> (ZLjava/lang/Integer;Lelide/tooling/coverage/CoverageJsonReport$CoverageSourceSection;)V
	public synthetic fun <init> (ZLjava/lang/Integer;Lelide/tooling/coverage/CoverageJsonReport$CoverageSourceSection;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Z
	public final fun component2 ()Ljava/lang/Integer;
	public final fun component3 ()Lelide/tooling/coverage/CoverageJsonReport$CoverageSourceSection;
	public final fun copy (ZLjava/lang/Integer;Lelide/tooling/coverage/CoverageJsonReport$CoverageSourceSection;)Lelide/tooling/coverage/CoverageJsonReport$CoverageSection;
	public static synthetic fun copy$default (Lelide/tooling/coverage/CoverageJsonReport$CoverageSection;ZLjava/lang/Integer;Lelide/tooling/coverage/CoverageJsonReport$CoverageSourceSection;ILjava/lang/Object;)Lelide/tooling/coverage/CoverageJsonReport$CoverageSection;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getCount ()Ljava/lang/Integer;
	public final fun getCovered ()Z
	public final fun getSourceSection ()Lelide/tooling/coverage/CoverageJsonReport$CoverageSourceSection;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/coverage/CoverageJsonReport$CoverageSection$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/coverage/CoverageJsonReport$CoverageSection$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/coverage/CoverageJsonReport$CoverageSection;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/coverage/CoverageJsonReport$CoverageSection;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/coverage/CoverageJsonReport$CoverageSection$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/coverage/CoverageJsonReport$CoverageSourceSection {
	public static final field Companion Lelide/tooling/coverage/CoverageJsonReport$CoverageSourceSection$Companion;
	public fun <init> (Ljava/lang/String;IIIIIII)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()I
	public final fun component3 ()I
	public final fun component4 ()I
	public final fun component5 ()I
	public final fun component6 ()I
	public final fun component7 ()I
	public final fun component8 ()I
	public final fun copy (Ljava/lang/String;IIIIIII)Lelide/tooling/coverage/CoverageJsonReport$CoverageSourceSection;
	public static synthetic fun copy$default (Lelide/tooling/coverage/CoverageJsonReport$CoverageSourceSection;Ljava/lang/String;IIIIIIIILjava/lang/Object;)Lelide/tooling/coverage/CoverageJsonReport$CoverageSourceSection;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getCharEndIndex ()I
	public final fun getCharIndex ()I
	public final fun getCharLength ()I
	public final fun getCharacters ()Ljava/lang/String;
	public final fun getEndColumn ()I
	public final fun getEndLine ()I
	public final fun getStartColumn ()I
	public final fun getStartLine ()I
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/coverage/CoverageJsonReport$CoverageSourceSection$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/coverage/CoverageJsonReport$CoverageSourceSection$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/coverage/CoverageJsonReport$CoverageSourceSection;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/coverage/CoverageJsonReport$CoverageSourceSection;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/coverage/CoverageJsonReport$CoverageSourceSection$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract interface class elide/tooling/deps/DependencyEcosystem {
	public abstract fun getName ()Ljava/lang/String;
}

public final class elide/tooling/deps/DependencyEcosystem$Gems : elide/tooling/deps/DependencyEcosystem {
	public static final field INSTANCE Lelide/tooling/deps/DependencyEcosystem$Gems;
	public fun equals (Ljava/lang/Object;)Z
	public fun getName ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/deps/DependencyEcosystem$HuggingFace : elide/tooling/deps/DependencyEcosystem {
	public static final field INSTANCE Lelide/tooling/deps/DependencyEcosystem$HuggingFace;
	public fun equals (Ljava/lang/Object;)Z
	public fun getName ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/deps/DependencyEcosystem$JSR : elide/tooling/deps/DependencyEcosystem {
	public static final field INSTANCE Lelide/tooling/deps/DependencyEcosystem$JSR;
	public fun equals (Ljava/lang/Object;)Z
	public fun getName ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/deps/DependencyEcosystem$Maven : elide/tooling/deps/DependencyEcosystem {
	public static final field INSTANCE Lelide/tooling/deps/DependencyEcosystem$Maven;
	public fun equals (Ljava/lang/Object;)Z
	public fun getName ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/deps/DependencyEcosystem$NPM : elide/tooling/deps/DependencyEcosystem {
	public static final field INSTANCE Lelide/tooling/deps/DependencyEcosystem$NPM;
	public fun equals (Ljava/lang/Object;)Z
	public fun getName ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/deps/DependencyEcosystem$PyPI : elide/tooling/deps/DependencyEcosystem {
	public static final field INSTANCE Lelide/tooling/deps/DependencyEcosystem$PyPI;
	public fun equals (Ljava/lang/Object;)Z
	public fun getName ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract interface class elide/tooling/deps/DependencyResolver : java/lang/AutoCloseable {
	public abstract fun getEcosystem ()Lelide/tooling/deps/DependencyEcosystem;
	public abstract fun resolve (Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun seal (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class elide/tooling/deps/DependencyResolver$JsrResolver : elide/tooling/deps/DependencyResolver {
	public fun getEcosystem ()Lelide/tooling/deps/DependencyEcosystem;
}

public abstract interface class elide/tooling/deps/DependencyResolver$MavenResolver : elide/tooling/deps/DependencyResolver {
	public fun getEcosystem ()Lelide/tooling/deps/DependencyEcosystem;
}

public abstract interface class elide/tooling/deps/DependencyResolver$NpmResolver : elide/tooling/deps/DependencyResolver {
	public fun getEcosystem ()Lelide/tooling/deps/DependencyEcosystem;
}

public abstract interface class elide/tooling/deps/DependencyResolver$PyPiResolver : elide/tooling/deps/DependencyResolver {
	public fun getEcosystem ()Lelide/tooling/deps/DependencyEcosystem;
}

public abstract interface class elide/tooling/deps/PackageSpec {
	public static final field Companion Lelide/tooling/deps/PackageSpec$Companion;
	public static final field LATEST_VERSION Ljava/lang/String;
	public static final field PREFIX_MAVEN Ljava/lang/String;
	public static final field PREFIX_NPM Ljava/lang/String;
	public static final field PREFIX_PIP Ljava/lang/String;
	public static final field SNAPSHOT_VERSION Ljava/lang/String;
	public static final field STABLE_VERSION Ljava/lang/String;
	public abstract fun getAmbiguous ()Z
	public abstract fun getEcosystem ()Lelide/tooling/deps/DependencyEcosystem;
	public abstract fun getFormatted ()Ljava/lang/String;
	public abstract fun getModule ()Ljava/lang/String;
	public abstract fun getNamespace ()Ljava/lang/String;
	public abstract fun getPurl ()Lcom/github/packageurl/PackageURL;
	public abstract fun getString ()Ljava/lang/String;
	public abstract fun getVersion ()Lelide/tooling/deps/PackageSpec$Version;
	public static fun parse (Ljava/lang/String;Lelide/tooling/project/ElideProject;Lelide/tooling/deps/DependencyEcosystem;)Lelide/tooling/deps/PackageSpec;
	public static fun tryParse (Ljava/lang/String;Lelide/tooling/project/ElideProject;Lelide/tooling/deps/DependencyEcosystem;)Lelide/tooling/deps/PackageSpec;
}

public final class elide/tooling/deps/PackageSpec$AmbiguousEcosystem : elide/tooling/deps/PackageSpec$ParseError {
	public fun <init> ()V
	public final fun getCandidates ()Ljava/util/List;
}

public final class elide/tooling/deps/PackageSpec$Companion {
	public static final field LATEST_VERSION Ljava/lang/String;
	public static final field PREFIX_MAVEN Ljava/lang/String;
	public static final field PREFIX_NPM Ljava/lang/String;
	public static final field PREFIX_PIP Ljava/lang/String;
	public static final field SNAPSHOT_VERSION Ljava/lang/String;
	public static final field STABLE_VERSION Ljava/lang/String;
	public final fun parse (Ljava/lang/String;Lelide/tooling/project/ElideProject;Lelide/tooling/deps/DependencyEcosystem;)Lelide/tooling/deps/PackageSpec;
	public static synthetic fun parse$default (Lelide/tooling/deps/PackageSpec$Companion;Ljava/lang/String;Lelide/tooling/project/ElideProject;Lelide/tooling/deps/DependencyEcosystem;ILjava/lang/Object;)Lelide/tooling/deps/PackageSpec;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public final fun tryParse (Ljava/lang/String;Lelide/tooling/project/ElideProject;Lelide/tooling/deps/DependencyEcosystem;)Lelide/tooling/deps/PackageSpec;
	public static synthetic fun tryParse$default (Lelide/tooling/deps/PackageSpec$Companion;Ljava/lang/String;Lelide/tooling/project/ElideProject;Lelide/tooling/deps/DependencyEcosystem;ILjava/lang/Object;)Lelide/tooling/deps/PackageSpec;
}

public final class elide/tooling/deps/PackageSpec$MavenPackageSpec : elide/tooling/deps/PackageSpec$SpecializedPackageSpec {
	public static final field Companion Lelide/tooling/deps/PackageSpec$MavenPackageSpec$Companion;
	public final fun getClassifier ()Ljava/lang/String;
	public fun getFormatted ()Ljava/lang/String;
	public final fun getGroupId ()Ljava/lang/String;
	public fun getModule ()Ljava/lang/String;
	public final fun getName ()Ljava/lang/String;
	public fun getNamespace ()Ljava/lang/String;
}

public final class elide/tooling/deps/PackageSpec$MavenPackageSpec$Companion : elide/tooling/deps/PackageSpec$SpecializedPackageSpecParser {
	public fun parse (Ljava/lang/String;)Lelide/tooling/deps/PackageSpec$MavenPackageSpec;
	public synthetic fun parse (Ljava/lang/String;)Lelide/tooling/deps/PackageSpec$SpecializedPackageSpec;
}

public final class elide/tooling/deps/PackageSpec$NoVersion : elide/tooling/deps/PackageSpec$Version {
	public static final field INSTANCE Lelide/tooling/deps/PackageSpec$NoVersion;
	public fun equals (Ljava/lang/Object;)Z
	public fun getFormatted ()Ljava/lang/String;
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/deps/PackageSpec$NpmPackageSpec : elide/tooling/deps/PackageSpec$SpecializedPackageSpec {
	public static final field Companion Lelide/tooling/deps/PackageSpec$NpmPackageSpec$Companion;
	public fun getFormatted ()Ljava/lang/String;
	public fun getModule ()Ljava/lang/String;
	public final fun getName ()Ljava/lang/String;
	public fun getNamespace ()Ljava/lang/String;
	public final fun getScope ()Ljava/lang/String;
}

public final class elide/tooling/deps/PackageSpec$NpmPackageSpec$Companion : elide/tooling/deps/PackageSpec$SpecializedPackageSpecParser {
	public fun parse (Ljava/lang/String;)Lelide/tooling/deps/PackageSpec$NpmPackageSpec;
	public synthetic fun parse (Ljava/lang/String;)Lelide/tooling/deps/PackageSpec$SpecializedPackageSpec;
}

public final class elide/tooling/deps/PackageSpec$NpmSemverOperator : java/lang/Enum, elide/tooling/deps/PackageSpec$SemverOperator {
	public static final field CARET Lelide/tooling/deps/PackageSpec$NpmSemverOperator;
	public static final field Companion Lelide/tooling/deps/PackageSpec$NpmSemverOperator$Companion;
	public static final field TILDE Lelide/tooling/deps/PackageSpec$NpmSemverOperator;
	public fun getEffective ()Lelide/tooling/deps/PackageSpec$SimpleSemverOperator;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public fun getFormatted ()Ljava/lang/String;
	public static fun valueOf (Ljava/lang/String;)Lelide/tooling/deps/PackageSpec$NpmSemverOperator;
	public static fun values ()[Lelide/tooling/deps/PackageSpec$NpmSemverOperator;
}

public final class elide/tooling/deps/PackageSpec$NpmSemverOperator$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract class elide/tooling/deps/PackageSpec$ParseError : java/lang/Exception {
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/Throwable;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
}

public final class elide/tooling/deps/PackageSpec$PipPackageSpec : elide/tooling/deps/PackageSpec$SpecializedPackageSpec {
	public static final field Companion Lelide/tooling/deps/PackageSpec$PipPackageSpec$Companion;
	public fun getFormatted ()Ljava/lang/String;
	public fun getModule ()Ljava/lang/String;
	public fun getNamespace ()Ljava/lang/String;
}

public final class elide/tooling/deps/PackageSpec$PipPackageSpec$Companion : elide/tooling/deps/PackageSpec$SpecializedPackageSpecParser {
	public fun parse (Ljava/lang/String;)Lelide/tooling/deps/PackageSpec$PipPackageSpec;
	public synthetic fun parse (Ljava/lang/String;)Lelide/tooling/deps/PackageSpec$SpecializedPackageSpec;
}

public final class elide/tooling/deps/PackageSpec$SemanticVersion : elide/tooling/deps/PackageSpec$Version {
	public static final field Companion Lelide/tooling/deps/PackageSpec$SemanticVersion$Companion;
	public static final synthetic fun box-impl (Lorg/semver4j/Semver;)Lelide/tooling/deps/PackageSpec$SemanticVersion;
	public fun equals (Ljava/lang/Object;)Z
	public static fun equals-impl (Lorg/semver4j/Semver;Ljava/lang/Object;)Z
	public static final fun equals-impl0 (Lorg/semver4j/Semver;Lorg/semver4j/Semver;)Z
	public fun getFormatted ()Ljava/lang/String;
	public static fun getFormatted-impl (Lorg/semver4j/Semver;)Ljava/lang/String;
	public fun hashCode ()I
	public static fun hashCode-impl (Lorg/semver4j/Semver;)I
	public fun toString ()Ljava/lang/String;
	public static fun toString-impl (Lorg/semver4j/Semver;)Ljava/lang/String;
	public final synthetic fun unbox-impl ()Lorg/semver4j/Semver;
}

public final class elide/tooling/deps/PackageSpec$SemanticVersion$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/deps/PackageSpec$SemanticVersion$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun deserialize-feEs_2A (Lkotlinx/serialization/encoding/Decoder;)Lorg/semver4j/Semver;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun serialize-lvB3Mmw (Lkotlinx/serialization/encoding/Encoder;Lorg/semver4j/Semver;)V
}

public final class elide/tooling/deps/PackageSpec$SemanticVersion$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/deps/PackageSpec$SemanticVersionRange : elide/tooling/deps/PackageSpec$Version {
	public static final field Companion Lelide/tooling/deps/PackageSpec$SemanticVersionRange$Companion;
	public static final synthetic fun box-impl (Lkotlin/Pair;)Lelide/tooling/deps/PackageSpec$SemanticVersionRange;
	public fun equals (Ljava/lang/Object;)Z
	public static fun equals-impl (Lkotlin/Pair;Ljava/lang/Object;)Z
	public static final fun equals-impl0 (Lkotlin/Pair;Lkotlin/Pair;)Z
	public fun getFormatted ()Ljava/lang/String;
	public static fun getFormatted-impl (Lkotlin/Pair;)Ljava/lang/String;
	public fun hashCode ()I
	public static fun hashCode-impl (Lkotlin/Pair;)I
	public fun toString ()Ljava/lang/String;
	public static fun toString-impl (Lkotlin/Pair;)Ljava/lang/String;
	public final synthetic fun unbox-impl ()Lkotlin/Pair;
}

public final class elide/tooling/deps/PackageSpec$SemanticVersionRange$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/deps/PackageSpec$SemanticVersionRange$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun deserialize-2QLoWv0 (Lkotlinx/serialization/encoding/Decoder;)Lkotlin/Pair;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun serialize-wgC37mI (Lkotlinx/serialization/encoding/Encoder;Lkotlin/Pair;)V
}

public final class elide/tooling/deps/PackageSpec$SemanticVersionRange$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract interface class elide/tooling/deps/PackageSpec$SemverOperator {
	public static final field Companion Lelide/tooling/deps/PackageSpec$SemverOperator$Companion;
	public abstract fun getEffective ()Lelide/tooling/deps/PackageSpec$SimpleSemverOperator;
	public abstract fun getFormatted ()Ljava/lang/String;
}

public final class elide/tooling/deps/PackageSpec$SemverOperator$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/deps/PackageSpec$SimpleSemverOperator : java/lang/Enum, elide/core/api/Symbolic, elide/tooling/deps/PackageSpec$SemverOperator {
	public static final field Companion Lelide/tooling/deps/PackageSpec$SimpleSemverOperator$Companion;
	public static final field EQUALS Lelide/tooling/deps/PackageSpec$SimpleSemverOperator;
	public static final field GREATER_THAN Lelide/tooling/deps/PackageSpec$SimpleSemverOperator;
	public static final field GREATER_THAN_OR_EQUALS Lelide/tooling/deps/PackageSpec$SimpleSemverOperator;
	public static final field LESS_THAN Lelide/tooling/deps/PackageSpec$SimpleSemverOperator;
	public static final field LESS_THAN_OR_EQUALS Lelide/tooling/deps/PackageSpec$SimpleSemverOperator;
	public fun getEffective ()Lelide/tooling/deps/PackageSpec$SimpleSemverOperator;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public fun getFormatted ()Ljava/lang/String;
	public synthetic fun getSymbol ()Ljava/lang/Object;
	public fun getSymbol ()Ljava/lang/String;
	public static fun valueOf (Ljava/lang/String;)Lelide/tooling/deps/PackageSpec$SimpleSemverOperator;
	public static fun values ()[Lelide/tooling/deps/PackageSpec$SimpleSemverOperator;
}

public final class elide/tooling/deps/PackageSpec$SimpleSemverOperator$Companion : elide/core/api/Symbolic$SealedResolver {
	public synthetic fun resolve (Ljava/lang/Object;)Lelide/core/api/Symbolic;
	public fun resolve (Ljava/lang/String;)Lelide/tooling/deps/PackageSpec$SimpleSemverOperator;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract class elide/tooling/deps/PackageSpec$SpecializedPackageSpec : elide/tooling/deps/PackageSpec {
	public synthetic fun <init> (Lelide/tooling/deps/DependencyEcosystem;Lelide/tooling/deps/PackageSpec$Version;Ljava/lang/String;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun equals (Ljava/lang/Object;)Z
	public fun getAmbiguous ()Z
	public fun getEcosystem ()Lelide/tooling/deps/DependencyEcosystem;
	public fun getPurl ()Lcom/github/packageurl/PackageURL;
	public fun getString ()Ljava/lang/String;
	public fun getVersion ()Lelide/tooling/deps/PackageSpec$Version;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract class elide/tooling/deps/PackageSpec$SpecializedPackageSpecParser {
	public abstract fun parse (Ljava/lang/String;)Lelide/tooling/deps/PackageSpec$SpecializedPackageSpec;
	public fun parseVersion (Ljava/lang/String;)Lelide/tooling/deps/PackageSpec$Version;
}

public final class elide/tooling/deps/PackageSpec$SymbolicVersion : java/lang/Enum, elide/core/api/Symbolic, elide/tooling/deps/PackageSpec$Version {
	public static final field Companion Lelide/tooling/deps/PackageSpec$SymbolicVersion$Companion;
	public static final field LATEST Lelide/tooling/deps/PackageSpec$SymbolicVersion;
	public static final field SNAPSHOT Lelide/tooling/deps/PackageSpec$SymbolicVersion;
	public static final field STABLE Lelide/tooling/deps/PackageSpec$SymbolicVersion;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public fun getFormatted ()Ljava/lang/String;
	public synthetic fun getSymbol ()Ljava/lang/Object;
	public fun getSymbol ()Ljava/lang/String;
	public static fun valueOf (Ljava/lang/String;)Lelide/tooling/deps/PackageSpec$SymbolicVersion;
	public static fun values ()[Lelide/tooling/deps/PackageSpec$SymbolicVersion;
}

public final class elide/tooling/deps/PackageSpec$SymbolicVersion$Companion : elide/core/api/Symbolic$SealedResolver {
	public synthetic fun resolve (Ljava/lang/Object;)Lelide/core/api/Symbolic;
	public fun resolve (Ljava/lang/String;)Lelide/tooling/deps/PackageSpec$SymbolicVersion;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract interface class elide/tooling/deps/PackageSpec$Version {
	public static final field Companion Lelide/tooling/deps/PackageSpec$Version$Companion;
	public abstract fun getFormatted ()Ljava/lang/String;
}

public final class elide/tooling/deps/PackageSpec$Version$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/deps/PackageSpec$VersionString : elide/tooling/deps/PackageSpec$Version {
	public static final field Companion Lelide/tooling/deps/PackageSpec$VersionString$Companion;
	public static final synthetic fun box-impl (Ljava/lang/String;)Lelide/tooling/deps/PackageSpec$VersionString;
	public fun equals (Ljava/lang/Object;)Z
	public static fun equals-impl (Ljava/lang/String;Ljava/lang/Object;)Z
	public static final fun equals-impl0 (Ljava/lang/String;Ljava/lang/String;)Z
	public fun getFormatted ()Ljava/lang/String;
	public static fun getFormatted-impl (Ljava/lang/String;)Ljava/lang/String;
	public final fun getVersion ()Ljava/lang/String;
	public fun hashCode ()I
	public static fun hashCode-impl (Ljava/lang/String;)I
	public fun toString ()Ljava/lang/String;
	public static fun toString-impl (Ljava/lang/String;)Ljava/lang/String;
	public final synthetic fun unbox-impl ()Ljava/lang/String;
}

public final class elide/tooling/deps/PackageSpec$VersionString$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/deps/PackageSpec$VersionString$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun deserialize-mf9Hjcw (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/String;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun serialize-bukAN28 (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/String;)V
}

public final class elide/tooling/deps/PackageSpec$VersionString$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public synthetic class elide/tooling/js/resolver/$NpmResolver$Definition : io/micronaut/context/AbstractInitializableBeanDefinitionAndReference {
	public static final field $ANNOTATION_METADATA Lio/micronaut/core/annotation/AnnotationMetadata;
	public fun <init> ()V
	protected fun <init> (Ljava/lang/Class;Lio/micronaut/context/AbstractInitializableBeanDefinition$MethodOrFieldReference;)V
	public fun instantiate (Lio/micronaut/context/BeanResolutionContext;Lio/micronaut/context/BeanContext;)Ljava/lang/Object;
	public fun isEnabled (Lio/micronaut/context/BeanContext;)Z
	public fun isEnabled (Lio/micronaut/context/BeanContext;Lio/micronaut/context/BeanResolutionContext;)Z
	public fun load ()Lio/micronaut/inject/BeanDefinition;
}

public final class elide/tooling/js/resolver/NpmResolver : elide/tooling/deps/DependencyResolver$NpmResolver {
	public fun <init> (Ljakarta/inject/Provider;Ljakarta/inject/Provider;Lkotlin/jvm/functions/Function3;Lkotlin/jvm/functions/Function3;)V
	public fun close ()V
	public fun resolve (Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun seal (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final synthetic class elide/tooling/jvm/$JarTool$Introspection : io/micronaut/inject/beans/AbstractInitializableBeanIntrospectionAndReference {
	public static final field $ANNOTATION_METADATA Lio/micronaut/core/annotation/AnnotationMetadata;
	public fun <init> ()V
	public fun hasBuilder ()Z
	public fun isBuildable ()Z
}

public final synthetic class elide/tooling/jvm/$JavaCompiler$Introspection : io/micronaut/inject/beans/AbstractInitializableBeanIntrospectionAndReference {
	public static final field $ANNOTATION_METADATA Lio/micronaut/core/annotation/AnnotationMetadata;
	public fun <init> ()V
	public fun hasBuilder ()Z
	public fun isBuildable ()Z
}

public final synthetic class elide/tooling/jvm/$JavadocTool$Introspection : io/micronaut/inject/beans/AbstractInitializableBeanIntrospectionAndReference {
	public static final field $ANNOTATION_METADATA Lio/micronaut/core/annotation/AnnotationMetadata;
	public fun <init> ()V
	public fun hasBuilder ()Z
	public fun isBuildable ()Z
}

public abstract interface class elide/tooling/jvm/AnnotationProcessor {
}

public final class elide/tooling/jvm/JarTool : elide/tooling/GenericTool {
	public static final field Companion Lelide/tooling/jvm/JarTool$Companion;
	public fun <init> (Lelide/tool/Arguments;Lelide/tool/Environment;Lelide/tooling/jvm/JarTool$JarToolInputs;Lelide/tooling/jvm/JarTool$JarToolOutputs;)V
	public fun amendArgs (Lelide/tool/MutableArguments;)V
	public static final fun create (Lelide/tool/Arguments;Lelide/tool/Environment;Lelide/tooling/jvm/JarTool$JarToolInputs;Lelide/tooling/jvm/JarTool$JarToolOutputs;)Lelide/tooling/jvm/JarTool;
	public synthetic fun createTool ()Ljava/lang/Object;
	public fun createTool ()Lsun/tools/jar/JarToolProvider;
	public fun getInputs ()Lelide/tooling/jvm/JarTool$JarToolInputs;
	public synthetic fun getInputs ()Ljava/lang/Object;
	public fun getOutputs ()Lelide/tooling/jvm/JarTool$JarToolOutputs;
	public synthetic fun getOutputs ()Ljava/lang/Object;
	public fun getTaskDescription ()Ljava/lang/String;
	public fun getToolLogger ()Lelide/runtime/Logger;
	public static final fun jarFiles (Lkotlin/sequences/Sequence;)Lelide/tooling/jvm/JarTool$JarToolInputs;
	public static final fun outputJar (Ljava/nio/file/Path;Ljava/nio/file/Path;)Lelide/tooling/jvm/JarTool$JarToolOutputs;
	public fun toolRun (Ljava/io/PrintWriter;Ljava/io/PrintWriter;[Ljava/lang/String;)I
}

public final class elide/tooling/jvm/JarTool$Companion {
	public final fun create (Lelide/tool/Arguments;Lelide/tool/Environment;Lelide/tooling/jvm/JarTool$JarToolInputs;Lelide/tooling/jvm/JarTool$JarToolOutputs;)Lelide/tooling/jvm/JarTool;
	public final fun jarFiles (Lkotlin/sequences/Sequence;)Lelide/tooling/jvm/JarTool$JarToolInputs;
	public final fun outputJar (Ljava/nio/file/Path;Ljava/nio/file/Path;)Lelide/tooling/jvm/JarTool$JarToolOutputs;
	public static synthetic fun outputJar$default (Lelide/tooling/jvm/JarTool$Companion;Ljava/nio/file/Path;Ljava/nio/file/Path;ILjava/lang/Object;)Lelide/tooling/jvm/JarTool$JarToolOutputs;
}

public abstract interface class elide/tooling/jvm/JarTool$JarToolInputs : elide/tool/Inputs$Files {
}

public final class elide/tooling/jvm/JarTool$JarToolInputs$InputFiles : elide/tooling/jvm/JarTool$JarToolInputs {
	public static final synthetic fun box-impl (Lkotlinx/collections/immutable/PersistentList;)Lelide/tooling/jvm/JarTool$JarToolInputs$InputFiles;
	public static fun constructor-impl (Lkotlinx/collections/immutable/PersistentList;)Lkotlinx/collections/immutable/PersistentList;
	public fun equals (Ljava/lang/Object;)Z
	public static fun equals-impl (Lkotlinx/collections/immutable/PersistentList;Ljava/lang/Object;)Z
	public static final fun equals-impl0 (Lkotlinx/collections/immutable/PersistentList;Lkotlinx/collections/immutable/PersistentList;)Z
	public final fun getFiles ()Lkotlinx/collections/immutable/PersistentList;
	public fun hashCode ()I
	public static fun hashCode-impl (Lkotlinx/collections/immutable/PersistentList;)I
	public fun toString ()Ljava/lang/String;
	public static fun toString-impl (Lkotlinx/collections/immutable/PersistentList;)Ljava/lang/String;
	public final synthetic fun unbox-impl ()Lkotlinx/collections/immutable/PersistentList;
}

public final class elide/tooling/jvm/JarTool$JarToolInputs$NoInputs : elide/tooling/jvm/JarTool$JarToolInputs {
	public static final field INSTANCE Lelide/tooling/jvm/JarTool$JarToolInputs$NoInputs;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract interface class elide/tooling/jvm/JarTool$JarToolOutputs {
	public abstract fun flatten ()Lelide/tool/Outputs;
}

public final class elide/tooling/jvm/JarTool$JarToolOutputs$Jar : elide/tool/Outputs$Disk$File, elide/tooling/jvm/JarTool$JarToolOutputs {
	public static final synthetic fun box-impl (Lkotlin/Pair;)Lelide/tooling/jvm/JarTool$JarToolOutputs$Jar;
	public static fun constructor-impl (Lkotlin/Pair;)Lkotlin/Pair;
	public fun equals (Ljava/lang/Object;)Z
	public static fun equals-impl (Lkotlin/Pair;Ljava/lang/Object;)Z
	public static final fun equals-impl0 (Lkotlin/Pair;Lkotlin/Pair;)Z
	public fun flatten ()Lelide/tool/Outputs;
	public static fun flatten-impl (Lkotlin/Pair;)Lelide/tool/Outputs;
	public static final fun getDirectory-impl (Lkotlin/Pair;)Ljava/nio/file/Path;
	public static final fun getPath-impl (Lkotlin/Pair;)Ljava/nio/file/Path;
	public fun hashCode ()I
	public static fun hashCode-impl (Lkotlin/Pair;)I
	public fun toString ()Ljava/lang/String;
	public static fun toString-impl (Lkotlin/Pair;)Ljava/lang/String;
	public final synthetic fun unbox-impl ()Lkotlin/Pair;
}

public final class elide/tooling/jvm/JarTool$JarToolOutputs$NoOutputs : elide/tool/Outputs$None, elide/tooling/jvm/JarTool$JarToolOutputs {
	public static final field INSTANCE Lelide/tooling/jvm/JarTool$JarToolOutputs$NoOutputs;
	public fun equals (Ljava/lang/Object;)Z
	public fun flatten ()Lelide/tool/Outputs;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/jvm/JarToolKt {
	public static final field JAR Ljava/lang/String;
	public static final field JARTOOL_DESCRIPTION Ljava/lang/String;
	public static final fun getJartool ()Lelide/tool/Tool$CommandLineTool;
}

public final class elide/tooling/jvm/JavaCompiler : elide/tooling/AbstractTool {
	public static final field Companion Lelide/tooling/jvm/JavaCompiler$Companion;
	public fun <init> (Lelide/tool/Arguments;Lelide/tool/Environment;Lelide/tooling/jvm/JavaCompiler$JavaCompilerInputs;Lelide/tooling/jvm/JavaCompiler$JavaCompilerOutputs;Ljava/util/List;)V
	public synthetic fun <init> (Lelide/tool/Arguments;Lelide/tool/Environment;Lelide/tooling/jvm/JavaCompiler$JavaCompilerInputs;Lelide/tooling/jvm/JavaCompiler$JavaCompilerOutputs;Ljava/util/List;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public static final fun classesDir (Ljava/nio/file/Path;)Lelide/tooling/jvm/JavaCompiler$JavaCompilerOutputs;
	public static final fun create (Lelide/tool/Arguments;Lelide/tool/Environment;Lelide/tooling/jvm/JavaCompiler$JavaCompilerInputs;Lelide/tooling/jvm/JavaCompiler$JavaCompilerOutputs;)Lelide/tooling/jvm/JavaCompiler;
	public final fun getArgs ()Lelide/tool/Arguments;
	public final fun getEnv ()Lelide/tool/Environment;
	public final fun getInputs ()Lelide/tooling/jvm/JavaCompiler$JavaCompilerInputs;
	public final fun getOutputs ()Lelide/tooling/jvm/JavaCompiler$JavaCompilerOutputs;
	public final fun getProcessors ()Ljava/util/List;
	public fun invoke (Lelide/tooling/AbstractTool$EmbeddedToolState;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun jvmStyleArgs (Lelide/tool/Tool$CommandLineTool;Lelide/tool/Arguments;)Lkotlin/Pair;
	public static final fun resolveJavaToolchain (Lelide/tool/Tool$CommandLineTool;)Ljava/nio/file/Path;
	public static final fun sources (Lkotlin/sequences/Sequence;)Lelide/tooling/jvm/JavaCompiler$JavaCompilerInputs;
	public fun supported ()Z
}

public final class elide/tooling/jvm/JavaCompiler$Companion {
	public final fun classesDir (Ljava/nio/file/Path;)Lelide/tooling/jvm/JavaCompiler$JavaCompilerOutputs;
	public final fun create (Lelide/tool/Arguments;Lelide/tool/Environment;Lelide/tooling/jvm/JavaCompiler$JavaCompilerInputs;Lelide/tooling/jvm/JavaCompiler$JavaCompilerOutputs;)Lelide/tooling/jvm/JavaCompiler;
	public final fun jvmStyleArgs (Lelide/tool/Tool$CommandLineTool;Lelide/tool/Arguments;)Lkotlin/Pair;
	public final fun resolveJavaToolchain (Lelide/tool/Tool$CommandLineTool;)Ljava/nio/file/Path;
	public final fun sources (Lkotlin/sequences/Sequence;)Lelide/tooling/jvm/JavaCompiler$JavaCompilerInputs;
}

public abstract interface class elide/tooling/jvm/JavaCompiler$JavaCompilerInputs : elide/tool/Inputs$Files {
}

public final class elide/tooling/jvm/JavaCompiler$JavaCompilerInputs$SourceFiles : elide/tooling/jvm/JavaCompiler$JavaCompilerInputs {
	public static final synthetic fun box-impl (Lkotlinx/collections/immutable/PersistentList;)Lelide/tooling/jvm/JavaCompiler$JavaCompilerInputs$SourceFiles;
	public static fun constructor-impl (Lkotlinx/collections/immutable/PersistentList;)Lkotlinx/collections/immutable/PersistentList;
	public fun equals (Ljava/lang/Object;)Z
	public static fun equals-impl (Lkotlinx/collections/immutable/PersistentList;Ljava/lang/Object;)Z
	public static final fun equals-impl0 (Lkotlinx/collections/immutable/PersistentList;Lkotlinx/collections/immutable/PersistentList;)Z
	public final fun getFiles ()Lkotlinx/collections/immutable/PersistentList;
	public fun hashCode ()I
	public static fun hashCode-impl (Lkotlinx/collections/immutable/PersistentList;)I
	public fun toString ()Ljava/lang/String;
	public static fun toString-impl (Lkotlinx/collections/immutable/PersistentList;)Ljava/lang/String;
	public final synthetic fun unbox-impl ()Lkotlinx/collections/immutable/PersistentList;
}

public abstract interface class elide/tooling/jvm/JavaCompiler$JavaCompilerOutputs {
	public abstract fun flatten ()Lelide/tool/Outputs;
}

public final class elide/tooling/jvm/JavaCompiler$JavaCompilerOutputs$Classes : elide/tool/Outputs$Disk$Directory, elide/tooling/jvm/JavaCompiler$JavaCompilerOutputs {
	public static final synthetic fun box-impl (Ljava/nio/file/Path;)Lelide/tooling/jvm/JavaCompiler$JavaCompilerOutputs$Classes;
	public static fun constructor-impl (Ljava/nio/file/Path;)Ljava/nio/file/Path;
	public fun equals (Ljava/lang/Object;)Z
	public static fun equals-impl (Ljava/nio/file/Path;Ljava/lang/Object;)Z
	public static final fun equals-impl0 (Ljava/nio/file/Path;Ljava/nio/file/Path;)Z
	public fun flatten ()Lelide/tool/Outputs;
	public static fun flatten-impl (Ljava/nio/file/Path;)Lelide/tool/Outputs;
	public final fun getDirectory ()Ljava/nio/file/Path;
	public fun hashCode ()I
	public static fun hashCode-impl (Ljava/nio/file/Path;)I
	public fun toString ()Ljava/lang/String;
	public static fun toString-impl (Ljava/nio/file/Path;)Ljava/lang/String;
	public final synthetic fun unbox-impl ()Ljava/nio/file/Path;
}

public final class elide/tooling/jvm/JavaCompilerKt {
	public static final field JAVAC Ljava/lang/String;
	public static final field JAVAC_DESCRIPTION Ljava/lang/String;
	public static final fun getJavaIsSupported ()Z
	public static final fun getJavac ()Lelide/tool/Tool$CommandLineTool;
}

public final class elide/tooling/jvm/JavadocTool : elide/tooling/GenericTool {
	public fun <init> (Lelide/tool/Arguments;Lelide/tool/Environment;Lelide/tooling/jvm/JavadocTool$JavadocInputs;Lelide/tooling/jvm/JavadocTool$JavadocOutputs;)V
	public fun amendArgs (Lelide/tool/MutableArguments;)V
	public synthetic fun createTool ()Ljava/lang/Object;
	public fun createTool ()Ljdk/javadoc/internal/tool/JavadocToolProvider;
	public fun getInputs ()Lelide/tooling/jvm/JavadocTool$JavadocInputs;
	public synthetic fun getInputs ()Ljava/lang/Object;
	public fun getOutputs ()Lelide/tooling/jvm/JavadocTool$JavadocOutputs;
	public synthetic fun getOutputs ()Ljava/lang/Object;
	public fun getTaskDescription ()Ljava/lang/String;
	public fun getToolLogger ()Lelide/runtime/Logger;
	public fun toolRun (Ljava/io/PrintWriter;Ljava/io/PrintWriter;[Ljava/lang/String;)I
}

public abstract interface class elide/tooling/jvm/JavadocTool$JavadocInputs : elide/tool/Inputs$Files {
}

public final class elide/tooling/jvm/JavadocTool$JavadocInputs$NoInputs : elide/tooling/jvm/JavadocTool$JavadocInputs {
	public static final field INSTANCE Lelide/tooling/jvm/JavadocTool$JavadocInputs$NoInputs;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract interface class elide/tooling/jvm/JavadocTool$JavadocOutputs {
	public abstract fun flatten ()Lelide/tool/Outputs;
}

public final class elide/tooling/jvm/JavadocTool$JavadocOutputs$NoOutputs : elide/tool/Outputs$None, elide/tooling/jvm/JavadocTool$JavadocOutputs {
	public static final field INSTANCE Lelide/tooling/jvm/JavadocTool$JavadocOutputs$NoOutputs;
	public fun equals (Ljava/lang/Object;)Z
	public fun flatten ()Lelide/tool/Outputs;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/jvm/JavadocToolKt {
	public static final field JAVADOC Ljava/lang/String;
	public static final field JAVADOCTOOL_DESCRIPTION Ljava/lang/String;
	public static final fun getJavadoc ()Lelide/tool/Tool$CommandLineTool;
}

public synthetic class elide/tooling/jvm/resolver/$MavenAetherResolver$Definition : io/micronaut/context/AbstractInitializableBeanDefinitionAndReference {
	public static final field $ANNOTATION_METADATA Lio/micronaut/core/annotation/AnnotationMetadata;
	public fun <init> ()V
	protected fun <init> (Ljava/lang/Class;Lio/micronaut/context/AbstractInitializableBeanDefinition$MethodOrFieldReference;)V
	public fun inject (Lio/micronaut/context/BeanResolutionContext;Lio/micronaut/context/BeanContext;Ljava/lang/Object;)Ljava/lang/Object;
	public fun instantiate (Lio/micronaut/context/BeanResolutionContext;Lio/micronaut/context/BeanContext;)Ljava/lang/Object;
	public fun isEnabled (Lio/micronaut/context/BeanContext;)Z
	public fun isEnabled (Lio/micronaut/context/BeanContext;Lio/micronaut/context/BeanResolutionContext;)Z
	public fun load ()Lio/micronaut/inject/BeanDefinition;
}

public synthetic class elide/tooling/jvm/resolver/$RepositorySystemFactory$Definition : io/micronaut/context/AbstractInitializableBeanDefinitionAndReference {
	public static final field $ANNOTATION_METADATA Lio/micronaut/core/annotation/AnnotationMetadata;
	public fun <init> ()V
	protected fun <init> (Ljava/lang/Class;Lio/micronaut/context/AbstractInitializableBeanDefinition$MethodOrFieldReference;)V
	public fun instantiate (Lio/micronaut/context/BeanResolutionContext;Lio/micronaut/context/BeanContext;)Ljava/lang/Object;
	public fun isEnabled (Lio/micronaut/context/BeanContext;)Z
	public fun isEnabled (Lio/micronaut/context/BeanContext;Lio/micronaut/context/BeanResolutionContext;)Z
	public fun load ()Lio/micronaut/inject/BeanDefinition;
}

public synthetic class elide/tooling/jvm/resolver/$RepositorySystemFactory$MavenLocator0$Definition : io/micronaut/context/AbstractInitializableBeanDefinitionAndReference {
	public static final field $ANNOTATION_METADATA Lio/micronaut/core/annotation/AnnotationMetadata;
	public fun <init> ()V
	protected fun <init> (Ljava/lang/Class;Lio/micronaut/context/AbstractInitializableBeanDefinition$MethodOrFieldReference;)V
	public fun instantiate (Lio/micronaut/context/BeanResolutionContext;Lio/micronaut/context/BeanContext;)Ljava/lang/Object;
	public fun isEnabled (Lio/micronaut/context/BeanContext;)Z
	public fun isEnabled (Lio/micronaut/context/BeanContext;Lio/micronaut/context/BeanResolutionContext;)Z
	public fun load ()Lio/micronaut/inject/BeanDefinition;
}

public synthetic class elide/tooling/jvm/resolver/$RepositorySystemFactory$RemoteRepositoryManager3$Definition : io/micronaut/context/AbstractInitializableBeanDefinitionAndReference {
	public static final field $ANNOTATION_METADATA Lio/micronaut/core/annotation/AnnotationMetadata;
	public fun <init> ()V
	protected fun <init> (Ljava/lang/Class;Lio/micronaut/context/AbstractInitializableBeanDefinition$MethodOrFieldReference;)V
	public fun instantiate (Lio/micronaut/context/BeanResolutionContext;Lio/micronaut/context/BeanContext;)Ljava/lang/Object;
	public fun isEnabled (Lio/micronaut/context/BeanContext;)Z
	public fun isEnabled (Lio/micronaut/context/BeanContext;Lio/micronaut/context/BeanResolutionContext;)Z
	public fun load ()Lio/micronaut/inject/BeanDefinition;
}

public synthetic class elide/tooling/jvm/resolver/$RepositorySystemFactory$RepositorySystem1$Definition : io/micronaut/context/AbstractInitializableBeanDefinitionAndReference {
	public static final field $ANNOTATION_METADATA Lio/micronaut/core/annotation/AnnotationMetadata;
	public fun <init> ()V
	protected fun <init> (Ljava/lang/Class;Lio/micronaut/context/AbstractInitializableBeanDefinition$MethodOrFieldReference;)V
	public fun instantiate (Lio/micronaut/context/BeanResolutionContext;Lio/micronaut/context/BeanContext;)Ljava/lang/Object;
	public fun isEnabled (Lio/micronaut/context/BeanContext;)Z
	public fun isEnabled (Lio/micronaut/context/BeanContext;Lio/micronaut/context/BeanResolutionContext;)Z
	public fun load ()Lio/micronaut/inject/BeanDefinition;
}

public synthetic class elide/tooling/jvm/resolver/$RepositorySystemFactory$RepositorySystemSession2$Definition : io/micronaut/context/AbstractInitializableBeanDefinitionAndReference {
	public static final field $ANNOTATION_METADATA Lio/micronaut/core/annotation/AnnotationMetadata;
	public fun <init> ()V
	protected fun <init> (Ljava/lang/Class;Lio/micronaut/context/AbstractInitializableBeanDefinition$MethodOrFieldReference;)V
	public fun instantiate (Lio/micronaut/context/BeanResolutionContext;Lio/micronaut/context/BeanContext;)Ljava/lang/Object;
	public fun isEnabled (Lio/micronaut/context/BeanContext;)Z
	public fun isEnabled (Lio/micronaut/context/BeanContext;Lio/micronaut/context/BeanResolutionContext;)Z
	public fun load ()Lio/micronaut/inject/BeanDefinition;
}

public final class elide/tooling/jvm/resolver/MavenAetherResolver : elide/tool/ClasspathsProvider, elide/tooling/deps/DependencyResolver$MavenResolver, java/lang/AutoCloseable {
	public static final field Companion Lelide/tooling/jvm/resolver/MavenAetherResolver$Companion;
	public fun classpathProvider (Lelide/tool/ClasspathSpec;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun close ()V
	public fun resolve (Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun seal (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class elide/tooling/jvm/resolver/MavenAetherResolver$Companion {
}

public final class elide/tooling/jvm/resolver/MavenResolverErrors : java/lang/RuntimeException {
	public final fun getErrors ()Ljava/util/List;
}

public final class elide/tooling/jvm/resolver/RepositorySystemFactory {
	public fun <init> ()V
	public final fun mavenLocator ()Lorg/eclipse/aether/impl/DefaultServiceLocator;
	public final fun remoteRepositoryManager (Lorg/eclipse/aether/impl/DefaultServiceLocator;)Lorg/eclipse/aether/impl/RemoteRepositoryManager;
	public final fun repositorySystem (Lorg/eclipse/aether/impl/DefaultServiceLocator;)Lorg/eclipse/aether/internal/impl/DefaultRepositorySystem;
	public final fun repositorySystemSession ()Lorg/eclipse/aether/DefaultRepositorySystemSession;
}

public final synthetic class elide/tooling/kotlin/$Detekt$Introspection : io/micronaut/inject/beans/AbstractInitializableBeanIntrospectionAndReference {
	public static final field $ANNOTATION_METADATA Lio/micronaut/core/annotation/AnnotationMetadata;
	public fun <init> ()V
	public fun hasBuilder ()Z
	public fun isBuildable ()Z
}

public final synthetic class elide/tooling/kotlin/$KotlinCompiler$Introspection : io/micronaut/inject/beans/AbstractInitializableBeanIntrospectionAndReference {
	public static final field $ANNOTATION_METADATA Lio/micronaut/core/annotation/AnnotationMetadata;
	public fun <init> ()V
	public fun hasBuilder ()Z
	public fun isBuildable ()Z
}

public final class elide/tooling/kotlin/Detekt : elide/tooling/AbstractTool {
	public fun <init> (Lelide/tool/Arguments;Lelide/tool/Environment;Lelide/tooling/kotlin/Detekt$DetektInputs;Lelide/tooling/kotlin/Detekt$DetektOutputs;)V
	public final fun getInputs ()Lelide/tooling/kotlin/Detekt$DetektInputs;
	public final fun getOutputs ()Lelide/tooling/kotlin/Detekt$DetektOutputs;
	public fun invoke (Lelide/tooling/AbstractTool$EmbeddedToolState;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class elide/tooling/kotlin/Detekt$DetektInputs : elide/tool/Inputs$Files {
}

public final class elide/tooling/kotlin/Detekt$DetektInputs$Empty : elide/tooling/kotlin/Detekt$DetektInputs {
	public static final field INSTANCE Lelide/tooling/kotlin/Detekt$DetektInputs$Empty;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract interface class elide/tooling/kotlin/Detekt$DetektOutputs {
	public abstract fun flatten ()Lelide/tool/Outputs;
}

public final class elide/tooling/kotlin/Detekt$DetektOutputs$Empty : elide/tool/Outputs$None, elide/tooling/kotlin/Detekt$DetektOutputs {
	public static final field INSTANCE Lelide/tooling/kotlin/Detekt$DetektOutputs$Empty;
	public fun equals (Ljava/lang/Object;)Z
	public fun flatten ()Lelide/tool/Outputs;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/kotlin/DetektKt {
	public static final field DETEKT Ljava/lang/String;
	public static final field DETEKT_DESCRIPTION Ljava/lang/String;
	public static final fun getDetekt ()Lelide/tool/Tool$CommandLineTool;
}

public final class elide/tooling/kotlin/KotlinCompiler : elide/tooling/AbstractTool {
	public static final field Companion Lelide/tooling/kotlin/KotlinCompiler$Companion;
	public fun <init> (Lelide/tool/Arguments;Lelide/tool/Environment;Lelide/tooling/kotlin/KotlinCompiler$KotlinCompilerInputs;Lelide/tooling/kotlin/KotlinCompiler$KotlinCompilerOutputs;Lkotlin/jvm/functions/Function1;)V
	public synthetic fun <init> (Lelide/tool/Arguments;Lelide/tool/Environment;Lelide/tooling/kotlin/KotlinCompiler$KotlinCompilerInputs;Lelide/tooling/kotlin/KotlinCompiler$KotlinCompilerOutputs;Lkotlin/jvm/functions/Function1;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public static final fun classesDir (Ljava/nio/file/Path;)Lelide/tooling/kotlin/KotlinCompiler$KotlinCompilerOutputs;
	public static final fun create (Lelide/tool/Arguments;Lelide/tool/Environment;Lelide/tooling/kotlin/KotlinCompiler$KotlinCompilerInputs;Lelide/tooling/kotlin/KotlinCompiler$KotlinCompilerOutputs;Lkotlin/jvm/functions/Function1;)Lelide/tooling/kotlin/KotlinCompiler;
	public final fun getInputs ()Lelide/tooling/kotlin/KotlinCompiler$KotlinCompilerInputs;
	public final fun getOutputs ()Lelide/tooling/kotlin/KotlinCompiler$KotlinCompilerOutputs;
	public fun invoke (Lelide/tooling/AbstractTool$EmbeddedToolState;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun outputJar (Ljava/nio/file/Path;)Lelide/tooling/kotlin/KotlinCompiler$KotlinCompilerOutputs;
	public static final fun sources (Lkotlin/sequences/Sequence;)Lelide/tooling/kotlin/KotlinCompiler$KotlinCompilerInputs;
	public fun supported ()Z
}

public final class elide/tooling/kotlin/KotlinCompiler$Companion {
	public final fun classesDir (Ljava/nio/file/Path;)Lelide/tooling/kotlin/KotlinCompiler$KotlinCompilerOutputs;
	public final fun create (Lelide/tool/Arguments;Lelide/tool/Environment;Lelide/tooling/kotlin/KotlinCompiler$KotlinCompilerInputs;Lelide/tooling/kotlin/KotlinCompiler$KotlinCompilerOutputs;Lkotlin/jvm/functions/Function1;)Lelide/tooling/kotlin/KotlinCompiler;
	public static synthetic fun create$default (Lelide/tooling/kotlin/KotlinCompiler$Companion;Lelide/tool/Arguments;Lelide/tool/Environment;Lelide/tooling/kotlin/KotlinCompiler$KotlinCompilerInputs;Lelide/tooling/kotlin/KotlinCompiler$KotlinCompilerOutputs;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lelide/tooling/kotlin/KotlinCompiler;
	public final fun outputJar (Ljava/nio/file/Path;)Lelide/tooling/kotlin/KotlinCompiler$KotlinCompilerOutputs;
	public final fun sources (Lkotlin/sequences/Sequence;)Lelide/tooling/kotlin/KotlinCompiler$KotlinCompilerInputs;
}

public abstract interface class elide/tooling/kotlin/KotlinCompiler$KotlinCompilerInputs : elide/tool/Inputs$Files {
}

public final class elide/tooling/kotlin/KotlinCompiler$KotlinCompilerInputs$SourceFiles : elide/tooling/kotlin/KotlinCompiler$KotlinCompilerInputs {
	public static final synthetic fun box-impl (Lkotlinx/collections/immutable/PersistentList;)Lelide/tooling/kotlin/KotlinCompiler$KotlinCompilerInputs$SourceFiles;
	public static fun constructor-impl (Lkotlinx/collections/immutable/PersistentList;)Lkotlinx/collections/immutable/PersistentList;
	public fun equals (Ljava/lang/Object;)Z
	public static fun equals-impl (Lkotlinx/collections/immutable/PersistentList;Ljava/lang/Object;)Z
	public static final fun equals-impl0 (Lkotlinx/collections/immutable/PersistentList;Lkotlinx/collections/immutable/PersistentList;)Z
	public final fun getFiles ()Lkotlinx/collections/immutable/PersistentList;
	public fun hashCode ()I
	public static fun hashCode-impl (Lkotlinx/collections/immutable/PersistentList;)I
	public fun toString ()Ljava/lang/String;
	public static fun toString-impl (Lkotlinx/collections/immutable/PersistentList;)Ljava/lang/String;
	public final synthetic fun unbox-impl ()Lkotlinx/collections/immutable/PersistentList;
}

public abstract interface class elide/tooling/kotlin/KotlinCompiler$KotlinCompilerOutputs {
	public abstract fun flatten ()Lelide/tool/Outputs;
}

public final class elide/tooling/kotlin/KotlinCompiler$KotlinCompilerOutputs$Classes : elide/tool/Outputs$Disk$Directory, elide/tooling/kotlin/KotlinCompiler$KotlinCompilerOutputs {
	public static final synthetic fun box-impl (Ljava/nio/file/Path;)Lelide/tooling/kotlin/KotlinCompiler$KotlinCompilerOutputs$Classes;
	public static fun constructor-impl (Ljava/nio/file/Path;)Ljava/nio/file/Path;
	public fun equals (Ljava/lang/Object;)Z
	public static fun equals-impl (Ljava/nio/file/Path;Ljava/lang/Object;)Z
	public static final fun equals-impl0 (Ljava/nio/file/Path;Ljava/nio/file/Path;)Z
	public fun flatten ()Lelide/tool/Outputs;
	public static fun flatten-impl (Ljava/nio/file/Path;)Lelide/tool/Outputs;
	public final fun getDirectory ()Ljava/nio/file/Path;
	public fun hashCode ()I
	public static fun hashCode-impl (Ljava/nio/file/Path;)I
	public fun toString ()Ljava/lang/String;
	public static fun toString-impl (Ljava/nio/file/Path;)Ljava/lang/String;
	public final synthetic fun unbox-impl ()Ljava/nio/file/Path;
}

public final class elide/tooling/kotlin/KotlinCompiler$KotlinCompilerOutputs$Jar : elide/tool/Outputs$Disk$File, elide/tooling/kotlin/KotlinCompiler$KotlinCompilerOutputs {
	public static final synthetic fun box-impl (Ljava/nio/file/Path;)Lelide/tooling/kotlin/KotlinCompiler$KotlinCompilerOutputs$Jar;
	public static fun constructor-impl (Ljava/nio/file/Path;)Ljava/nio/file/Path;
	public fun equals (Ljava/lang/Object;)Z
	public static fun equals-impl (Ljava/nio/file/Path;Ljava/lang/Object;)Z
	public static final fun equals-impl0 (Ljava/nio/file/Path;Ljava/nio/file/Path;)Z
	public fun flatten ()Lelide/tool/Outputs;
	public static fun flatten-impl (Ljava/nio/file/Path;)Lelide/tool/Outputs;
	public final fun getPath ()Ljava/nio/file/Path;
	public fun hashCode ()I
	public static fun hashCode-impl (Ljava/nio/file/Path;)I
	public fun toString ()Ljava/lang/String;
	public static fun toString-impl (Ljava/nio/file/Path;)Ljava/lang/String;
	public final synthetic fun unbox-impl ()Ljava/nio/file/Path;
}

public final class elide/tooling/kotlin/KotlinCompilerKt {
	public static final field KOTLINC Ljava/lang/String;
	public static final field KOTLIN_COMPILER_DESCRIPTION Ljava/lang/String;
	public static final fun getKotlinIsSupported ()Z
	public static final fun getKotlinc ()Lelide/tool/Tool$CommandLineTool;
}

public synthetic class elide/tooling/project/$CompositePackageManifestService$Definition : io/micronaut/context/AbstractInitializableBeanDefinitionAndReference {
	public static final field $ANNOTATION_METADATA Lio/micronaut/core/annotation/AnnotationMetadata;
	public fun <init> ()V
	protected fun <init> (Ljava/lang/Class;Lio/micronaut/context/AbstractInitializableBeanDefinition$MethodOrFieldReference;)V
	public fun instantiate (Lio/micronaut/context/BeanResolutionContext;Lio/micronaut/context/BeanContext;)Ljava/lang/Object;
	public fun isEnabled (Lio/micronaut/context/BeanContext;)Z
	public fun isEnabled (Lio/micronaut/context/BeanContext;Lio/micronaut/context/BeanResolutionContext;)Z
	public fun load ()Lio/micronaut/inject/BeanDefinition;
}

public final class elide/tooling/project/CompositePackageManifestService : elide/tooling/project/PackageManifestService {
	public fun <init> (Ljakarta/inject/Provider;Ljakarta/inject/Provider;Ljakarta/inject/Provider;Ljakarta/inject/Provider;Ljakarta/inject/Provider;Ljakarta/inject/Provider;)V
	public fun encode (Lelide/tooling/project/manifest/PackageManifest;Ljava/io/OutputStream;)V
	public fun export (Lelide/tooling/project/manifest/ElidePackageManifest;Lelide/tooling/project/ProjectEcosystem;)Lelide/tooling/project/manifest/PackageManifest;
	public fun merge (Ljava/lang/Iterable;)Lelide/tooling/project/manifest/ElidePackageManifest;
	public fun parse (Ljava/io/InputStream;Lelide/tooling/project/ProjectEcosystem;)Lelide/tooling/project/manifest/PackageManifest;
	public fun parse (Ljava/nio/file/Path;)Lelide/tooling/project/manifest/PackageManifest;
	public fun resolve (Ljava/nio/file/Path;Lelide/tooling/project/ProjectEcosystem;)Ljava/nio/file/Path;
}

public final class elide/tooling/project/DefaultProjectLoader : elide/tooling/project/ElideProjectLoader {
	public static final field INSTANCE Lelide/tooling/project/DefaultProjectLoader;
	public fun getResourcesPath ()Ljava/nio/file/Path;
	public fun getSourceSetFactory ()Lelide/tooling/project/SourceSetFactory;
}

public abstract interface class elide/tooling/project/ElideConfiguredProject : elide/tooling/project/ElideProject {
	public abstract fun getResourcesPath ()Ljava/nio/file/Path;
	public abstract fun getSourceSets ()Lelide/tooling/project/SourceSets;
}

public abstract interface class elide/tooling/project/ElideProject {
	public abstract fun getEnv ()Lelide/tooling/project/ProjectEnvironment;
	public abstract fun getManifest ()Lelide/tooling/project/manifest/ElidePackageManifest;
	public abstract fun getRoot ()Ljava/nio/file/Path;
	public abstract fun load (Lelide/tooling/project/ElideProjectLoader;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun load$default (Lelide/tooling/project/ElideProject;Lelide/tooling/project/ElideProjectLoader;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
}

public final class elide/tooling/project/ElideProjectInfo : java/lang/Record, elide/tooling/project/ElideProject {
	public static final field Companion Lelide/tooling/project/ElideProjectInfo$Companion;
	public fun <init> (Ljava/nio/file/Path;Lelide/tooling/project/manifest/ElidePackageManifest;Lelide/tooling/project/ProjectEnvironment;)V
	public synthetic fun <init> (Ljava/nio/file/Path;Lelide/tooling/project/manifest/ElidePackageManifest;Lelide/tooling/project/ProjectEnvironment;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/nio/file/Path;
	public final fun component2 ()Lelide/tooling/project/manifest/ElidePackageManifest;
	public final fun component3 ()Lelide/tooling/project/ProjectEnvironment;
	public final fun copy (Ljava/nio/file/Path;Lelide/tooling/project/manifest/ElidePackageManifest;Lelide/tooling/project/ProjectEnvironment;)Lelide/tooling/project/ElideProjectInfo;
	public static synthetic fun copy$default (Lelide/tooling/project/ElideProjectInfo;Ljava/nio/file/Path;Lelide/tooling/project/manifest/ElidePackageManifest;Lelide/tooling/project/ProjectEnvironment;ILjava/lang/Object;)Lelide/tooling/project/ElideProjectInfo;
	public fun env ()Lelide/tooling/project/ProjectEnvironment;
	public fun equals (Ljava/lang/Object;)Z
	public synthetic fun getEnv ()Lelide/tooling/project/ProjectEnvironment;
	public synthetic fun getManifest ()Lelide/tooling/project/manifest/ElidePackageManifest;
	public synthetic fun getRoot ()Ljava/nio/file/Path;
	public fun hashCode ()I
	public fun load (Lelide/tooling/project/ElideProjectLoader;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun manifest ()Lelide/tooling/project/manifest/ElidePackageManifest;
	public fun root ()Ljava/nio/file/Path;
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/project/ElideProjectInfo$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/ElideProjectInfo$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/ElideProjectInfo;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/ElideProjectInfo;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/ElideProjectInfo$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract interface class elide/tooling/project/ElideProjectLoader {
	public abstract fun getResourcesPath ()Ljava/nio/file/Path;
	public abstract fun getSourceSetFactory ()Lelide/tooling/project/SourceSetFactory;
}

public abstract interface class elide/tooling/project/PackageManifestService {
	public abstract fun encode (Lelide/tooling/project/manifest/PackageManifest;Ljava/io/OutputStream;)V
	public abstract fun export (Lelide/tooling/project/manifest/ElidePackageManifest;Lelide/tooling/project/ProjectEcosystem;)Lelide/tooling/project/manifest/PackageManifest;
	public abstract fun merge (Ljava/lang/Iterable;)Lelide/tooling/project/manifest/ElidePackageManifest;
	public abstract fun parse (Ljava/io/InputStream;Lelide/tooling/project/ProjectEcosystem;)Lelide/tooling/project/manifest/PackageManifest;
	public abstract fun parse (Ljava/nio/file/Path;)Lelide/tooling/project/manifest/PackageManifest;
	public abstract fun resolve (Ljava/nio/file/Path;Lelide/tooling/project/ProjectEcosystem;)Ljava/nio/file/Path;
	public static synthetic fun resolve$default (Lelide/tooling/project/PackageManifestService;Ljava/nio/file/Path;Lelide/tooling/project/ProjectEcosystem;ILjava/lang/Object;)Ljava/nio/file/Path;
}

public final class elide/tooling/project/ProjectEcosystem : java/lang/Enum {
	public static final field Elide Lelide/tooling/project/ProjectEcosystem;
	public static final field GradleCatalog Lelide/tooling/project/ProjectEcosystem;
	public static final field MavenPom Lelide/tooling/project/ProjectEcosystem;
	public static final field Node Lelide/tooling/project/ProjectEcosystem;
	public static final field Python Lelide/tooling/project/ProjectEcosystem;
	public static final field PythonRequirements Lelide/tooling/project/ProjectEcosystem;
	public static final field Ruby Lelide/tooling/project/ProjectEcosystem;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public static fun valueOf (Ljava/lang/String;)Lelide/tooling/project/ProjectEcosystem;
	public static fun values ()[Lelide/tooling/project/ProjectEcosystem;
}

public final class elide/tooling/project/ProjectEnvironment : java/lang/Record {
	public static final field Companion Lelide/tooling/project/ProjectEnvironment$Companion;
	public synthetic fun <init> (Ljava/util/Map;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/util/Map;
	public final fun copy (Ljava/util/Map;)Lelide/tooling/project/ProjectEnvironment;
	public static synthetic fun copy$default (Lelide/tooling/project/ProjectEnvironment;Ljava/util/Map;ILjava/lang/Object;)Lelide/tooling/project/ProjectEnvironment;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public final fun vars ()Ljava/util/Map;
	public static final fun wrapping (Ljava/util/Map;)Lelide/tooling/project/ProjectEnvironment;
}

public final class elide/tooling/project/ProjectEnvironment$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/ProjectEnvironment$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/ProjectEnvironment;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/ProjectEnvironment;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/ProjectEnvironment$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public final fun wrapping (Ljava/util/Map;)Lelide/tooling/project/ProjectEnvironment;
}

public final class elide/tooling/project/SourceFilePath : java/lang/Record, java/lang/Comparable {
	public fun <init> (Ljava/nio/file/Path;Lelide/tooling/project/SourceSetLanguage;)V
	public synthetic fun <init> (Ljava/nio/file/Path;Lelide/tooling/project/SourceSetLanguage;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun compareTo (Lelide/tooling/project/SourceFilePath;)I
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public final fun component1 ()Ljava/nio/file/Path;
	public final fun component2 ()Lelide/tooling/project/SourceSetLanguage;
	public final fun copy (Ljava/nio/file/Path;Lelide/tooling/project/SourceSetLanguage;)Lelide/tooling/project/SourceFilePath;
	public static synthetic fun copy$default (Lelide/tooling/project/SourceFilePath;Ljava/nio/file/Path;Lelide/tooling/project/SourceSetLanguage;ILjava/lang/Object;)Lelide/tooling/project/SourceFilePath;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun lang ()Lelide/tooling/project/SourceSetLanguage;
	public final fun path ()Ljava/nio/file/Path;
	public fun toString ()Ljava/lang/String;
}

public abstract interface class elide/tooling/project/SourceSet {
	public abstract fun getLanguages ()Ljava/util/Set;
	public abstract fun getName ()Ljava/lang/String;
	public abstract fun getPaths ()Ljava/util/SortedSet;
	public abstract fun getSpec ()Ljava/util/List;
	public abstract fun getType ()Lelide/tooling/project/SourceSetType;
}

public abstract interface class elide/tooling/project/SourceSetFactory {
	public abstract fun load (Ljava/nio/file/Path;Ljava/lang/String;Lelide/tooling/project/manifest/ElidePackageManifest$SourceSet;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class elide/tooling/project/SourceSetLanguage {
}

public final class elide/tooling/project/SourceSetLanguage$JSX : elide/tooling/project/SourceSetLanguage, elide/tooling/project/SourceSetLanguage$SourceVariant {
	public static final field INSTANCE Lelide/tooling/project/SourceSetLanguage$JSX;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/project/SourceSetLanguage$Java : elide/tooling/project/SourceSetLanguage {
	public static final field INSTANCE Lelide/tooling/project/SourceSetLanguage$Java;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/project/SourceSetLanguage$JavaScript : elide/tooling/project/SourceSetLanguage {
	public static final field INSTANCE Lelide/tooling/project/SourceSetLanguage$JavaScript;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/project/SourceSetLanguage$Kotlin : elide/tooling/project/SourceSetLanguage {
	public static final field INSTANCE Lelide/tooling/project/SourceSetLanguage$Kotlin;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/project/SourceSetLanguage$KotlinScript : elide/tooling/project/SourceSetLanguage, elide/tooling/project/SourceSetLanguage$SourceVariant {
	public static final field INSTANCE Lelide/tooling/project/SourceSetLanguage$KotlinScript;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/project/SourceSetLanguage$Python : elide/tooling/project/SourceSetLanguage {
	public static final field INSTANCE Lelide/tooling/project/SourceSetLanguage$Python;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/project/SourceSetLanguage$Ruby : elide/tooling/project/SourceSetLanguage {
	public static final field INSTANCE Lelide/tooling/project/SourceSetLanguage$Ruby;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract interface class elide/tooling/project/SourceSetLanguage$SourceVariant : elide/tooling/project/SourceSetLanguage {
}

public final class elide/tooling/project/SourceSetLanguage$TSX : elide/tooling/project/SourceSetLanguage, elide/tooling/project/SourceSetLanguage$SourceVariant {
	public static final field INSTANCE Lelide/tooling/project/SourceSetLanguage$TSX;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/project/SourceSetLanguage$TypeScript : elide/tooling/project/SourceSetLanguage {
	public static final field INSTANCE Lelide/tooling/project/SourceSetLanguage$TypeScript;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract interface class elide/tooling/project/SourceSetType : java/lang/Comparable {
}

public final class elide/tooling/project/SourceSetType$Sources : elide/tooling/project/SourceSetType {
	public static final field INSTANCE Lelide/tooling/project/SourceSetType$Sources;
	public fun compareTo (Lelide/tooling/project/SourceSetType;)I
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/project/SourceSetType$Tests : elide/tooling/project/SourceSetType {
	public static final field INSTANCE Lelide/tooling/project/SourceSetType$Tests;
	public fun compareTo (Lelide/tooling/project/SourceSetType;)I
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract interface class elide/tooling/project/SourceSets {
	public abstract fun contains (Ljava/lang/String;)Z
	public abstract fun find ([Lelide/tooling/project/SourceSetLanguage;)Lkotlin/sequences/Sequence;
	public abstract fun find ([Lelide/tooling/project/SourceSetType;)Lkotlin/sequences/Sequence;
	public abstract fun get (Ljava/lang/String;)Lelide/tooling/project/SourceSet;
}

public synthetic class elide/tooling/project/codecs/$ElidePackageManifestCodec$Definition : io/micronaut/context/AbstractInitializableBeanDefinitionAndReference {
	public static final field $ANNOTATION_METADATA Lio/micronaut/core/annotation/AnnotationMetadata;
	public fun <init> ()V
	protected fun <init> (Ljava/lang/Class;Lio/micronaut/context/AbstractInitializableBeanDefinition$MethodOrFieldReference;)V
	public fun instantiate (Lio/micronaut/context/BeanResolutionContext;Lio/micronaut/context/BeanContext;)Ljava/lang/Object;
	public fun isEnabled (Lio/micronaut/context/BeanContext;)Z
	public fun isEnabled (Lio/micronaut/context/BeanContext;Lio/micronaut/context/BeanResolutionContext;)Z
	public fun load ()Lio/micronaut/inject/BeanDefinition;
}

public synthetic class elide/tooling/project/codecs/$GradleCatalogCodec$Definition : io/micronaut/context/AbstractInitializableBeanDefinitionAndReference {
	public static final field $ANNOTATION_METADATA Lio/micronaut/core/annotation/AnnotationMetadata;
	public fun <init> ()V
	protected fun <init> (Ljava/lang/Class;Lio/micronaut/context/AbstractInitializableBeanDefinition$MethodOrFieldReference;)V
	public fun instantiate (Lio/micronaut/context/BeanResolutionContext;Lio/micronaut/context/BeanContext;)Ljava/lang/Object;
	public fun isEnabled (Lio/micronaut/context/BeanContext;)Z
	public fun isEnabled (Lio/micronaut/context/BeanContext;Lio/micronaut/context/BeanResolutionContext;)Z
	public fun load ()Lio/micronaut/inject/BeanDefinition;
}

public synthetic class elide/tooling/project/codecs/$MavenPomManifestCodec$Definition : io/micronaut/context/AbstractInitializableBeanDefinitionAndReference {
	public static final field $ANNOTATION_METADATA Lio/micronaut/core/annotation/AnnotationMetadata;
	public fun <init> ()V
	protected fun <init> (Ljava/lang/Class;Lio/micronaut/context/AbstractInitializableBeanDefinition$MethodOrFieldReference;)V
	public fun instantiate (Lio/micronaut/context/BeanResolutionContext;Lio/micronaut/context/BeanContext;)Ljava/lang/Object;
	public fun isEnabled (Lio/micronaut/context/BeanContext;)Z
	public fun isEnabled (Lio/micronaut/context/BeanContext;Lio/micronaut/context/BeanResolutionContext;)Z
	public fun load ()Lio/micronaut/inject/BeanDefinition;
}

public synthetic class elide/tooling/project/codecs/$NodeManifestCodec$Definition : io/micronaut/context/AbstractInitializableBeanDefinitionAndReference {
	public static final field $ANNOTATION_METADATA Lio/micronaut/core/annotation/AnnotationMetadata;
	public fun <init> ()V
	protected fun <init> (Ljava/lang/Class;Lio/micronaut/context/AbstractInitializableBeanDefinition$MethodOrFieldReference;)V
	public fun instantiate (Lio/micronaut/context/BeanResolutionContext;Lio/micronaut/context/BeanContext;)Ljava/lang/Object;
	public fun isEnabled (Lio/micronaut/context/BeanContext;)Z
	public fun isEnabled (Lio/micronaut/context/BeanContext;Lio/micronaut/context/BeanResolutionContext;)Z
	public fun load ()Lio/micronaut/inject/BeanDefinition;
}

public synthetic class elide/tooling/project/codecs/$PyProjectManifestCodec$Definition : io/micronaut/context/AbstractInitializableBeanDefinitionAndReference {
	public static final field $ANNOTATION_METADATA Lio/micronaut/core/annotation/AnnotationMetadata;
	public fun <init> ()V
	protected fun <init> (Ljava/lang/Class;Lio/micronaut/context/AbstractInitializableBeanDefinition$MethodOrFieldReference;)V
	public fun instantiate (Lio/micronaut/context/BeanResolutionContext;Lio/micronaut/context/BeanContext;)Ljava/lang/Object;
	public fun isEnabled (Lio/micronaut/context/BeanContext;)Z
	public fun isEnabled (Lio/micronaut/context/BeanContext;Lio/micronaut/context/BeanResolutionContext;)Z
	public fun load ()Lio/micronaut/inject/BeanDefinition;
}

public synthetic class elide/tooling/project/codecs/$PythonRequirementsManifestCodec$Definition : io/micronaut/context/AbstractInitializableBeanDefinitionAndReference {
	public static final field $ANNOTATION_METADATA Lio/micronaut/core/annotation/AnnotationMetadata;
	public fun <init> ()V
	protected fun <init> (Ljava/lang/Class;Lio/micronaut/context/AbstractInitializableBeanDefinition$MethodOrFieldReference;)V
	public fun instantiate (Lio/micronaut/context/BeanResolutionContext;Lio/micronaut/context/BeanContext;)Ljava/lang/Object;
	public fun isEnabled (Lio/micronaut/context/BeanContext;)Z
	public fun isEnabled (Lio/micronaut/context/BeanContext;Lio/micronaut/context/BeanResolutionContext;)Z
	public fun load ()Lio/micronaut/inject/BeanDefinition;
}

public final class elide/tooling/project/codecs/ElidePackageManifestCodec : elide/tooling/project/codecs/PackageManifestCodec {
	public static final field DEFAULT_EXTENSION Ljava/lang/String;
	public static final field DEFAULT_NAME Ljava/lang/String;
	public fun <init> ()V
	public fun defaultPath ()Ljava/nio/file/Path;
	public fun fromElidePackage (Lelide/tooling/project/manifest/ElidePackageManifest;)Lelide/tooling/project/manifest/ElidePackageManifest;
	public synthetic fun fromElidePackage (Lelide/tooling/project/manifest/ElidePackageManifest;)Lelide/tooling/project/manifest/PackageManifest;
	public fun parse (Ljava/io/InputStream;)Lelide/tooling/project/manifest/ElidePackageManifest;
	public synthetic fun parse (Ljava/io/InputStream;)Lelide/tooling/project/manifest/PackageManifest;
	public fun supported (Ljava/nio/file/Path;)Z
	public fun toElidePackage (Lelide/tooling/project/manifest/ElidePackageManifest;)Lelide/tooling/project/manifest/ElidePackageManifest;
	public synthetic fun toElidePackage (Lelide/tooling/project/manifest/PackageManifest;)Lelide/tooling/project/manifest/ElidePackageManifest;
	public fun write (Lelide/tooling/project/manifest/ElidePackageManifest;Ljava/io/OutputStream;)V
	public synthetic fun write (Lelide/tooling/project/manifest/PackageManifest;Ljava/io/OutputStream;)V
}

public final class elide/tooling/project/codecs/ElidePackageManifestCodec$ElideBuiltinModuleKey : org/pkl/core/module/ModuleKey, org/pkl/core/module/ResolvedModuleKey {
	public fun <init> (Ljava/net/URI;)V
	public fun getOriginal ()Lorg/pkl/core/module/ModuleKey;
	public fun getUri ()Ljava/net/URI;
	public fun hasHierarchicalUris ()Z
	public fun isGlobbable ()Z
	public fun loadSource ()Ljava/lang/String;
	public fun resolve (Lorg/pkl/core/SecurityManager;)Lorg/pkl/core/module/ResolvedModuleKey;
}

public final class elide/tooling/project/codecs/ElidePackageManifestCodec$ElidePklModuleKeyFactory : org/pkl/core/module/ModuleKeyFactory {
	public fun <init> ()V
	public fun create (Ljava/net/URI;)Ljava/util/Optional;
}

public final class elide/tooling/project/codecs/ElidePackageManifestCodec$ElidePklResourceReader : org/pkl/core/resource/ResourceReader {
	public fun <init> ()V
	public fun getUriScheme ()Ljava/lang/String;
	public fun hasHierarchicalUris ()Z
	public fun isGlobbable ()Z
	public fun read (Ljava/net/URI;)Ljava/util/Optional;
}

public final class elide/tooling/project/codecs/GradleCatalogCodec : elide/tooling/project/codecs/PackageManifestCodec {
	public static final field DEFAULT_NAME Ljava/lang/String;
	public fun <init> ()V
	public fun defaultPath ()Ljava/nio/file/Path;
	public fun fromElidePackage (Lelide/tooling/project/manifest/ElidePackageManifest;)Lelide/tooling/project/manifest/GradleCatalogManifest;
	public synthetic fun fromElidePackage (Lelide/tooling/project/manifest/ElidePackageManifest;)Lelide/tooling/project/manifest/PackageManifest;
	public fun parse (Ljava/io/InputStream;)Lelide/tooling/project/manifest/GradleCatalogManifest;
	public synthetic fun parse (Ljava/io/InputStream;)Lelide/tooling/project/manifest/PackageManifest;
	public fun supported (Ljava/nio/file/Path;)Z
	public fun toElidePackage (Lelide/tooling/project/manifest/GradleCatalogManifest;)Lelide/tooling/project/manifest/ElidePackageManifest;
	public synthetic fun toElidePackage (Lelide/tooling/project/manifest/PackageManifest;)Lelide/tooling/project/manifest/ElidePackageManifest;
	public fun write (Lelide/tooling/project/manifest/GradleCatalogManifest;Ljava/io/OutputStream;)V
	public synthetic fun write (Lelide/tooling/project/manifest/PackageManifest;Ljava/io/OutputStream;)V
}

public abstract interface annotation class elide/tooling/project/codecs/ManifestCodec : java/lang/annotation/Annotation {
	public abstract fun ecosystem ()Lelide/tooling/project/ProjectEcosystem;
}

public final class elide/tooling/project/codecs/MavenPomManifestCodec : elide/tooling/project/codecs/PackageManifestCodec {
	public static final field DEFAULT_EXTENSION Ljava/lang/String;
	public static final field DEFAULT_NAME Ljava/lang/String;
	public fun <init> (Ljakarta/inject/Provider;Ljakarta/inject/Provider;Ljakarta/inject/Provider;Ljakarta/inject/Provider;)V
	public fun defaultPath ()Ljava/nio/file/Path;
	public fun fromElidePackage (Lelide/tooling/project/manifest/ElidePackageManifest;)Lelide/tooling/project/manifest/MavenPomManifest;
	public synthetic fun fromElidePackage (Lelide/tooling/project/manifest/ElidePackageManifest;)Lelide/tooling/project/manifest/PackageManifest;
	public fun parse (Ljava/io/InputStream;)Lelide/tooling/project/manifest/MavenPomManifest;
	public synthetic fun parse (Ljava/io/InputStream;)Lelide/tooling/project/manifest/PackageManifest;
	public fun parseAsFile (Ljava/nio/file/Path;)Lelide/tooling/project/manifest/MavenPomManifest;
	public synthetic fun parseAsFile (Ljava/nio/file/Path;)Lelide/tooling/project/manifest/PackageManifest;
	public fun supported (Ljava/nio/file/Path;)Z
	public fun toElidePackage (Lelide/tooling/project/manifest/MavenPomManifest;)Lelide/tooling/project/manifest/ElidePackageManifest;
	public synthetic fun toElidePackage (Lelide/tooling/project/manifest/PackageManifest;)Lelide/tooling/project/manifest/ElidePackageManifest;
	public fun write (Lelide/tooling/project/manifest/MavenPomManifest;Ljava/io/OutputStream;)V
	public synthetic fun write (Lelide/tooling/project/manifest/PackageManifest;Ljava/io/OutputStream;)V
}

public final class elide/tooling/project/codecs/MavenPomManifestCodec$MavenModelProblems : java/io/IOException {
	public fun <init> (Ljava/util/List;)V
	public final fun getProblems ()Ljava/util/List;
}

public final class elide/tooling/project/codecs/NodeManifestCodec : elide/tooling/project/codecs/PackageManifestCodec {
	public static final field DEFAULT_EXTENSION Ljava/lang/String;
	public static final field DEFAULT_NAME Ljava/lang/String;
	public fun <init> ()V
	public fun defaultPath ()Ljava/nio/file/Path;
	public fun fromElidePackage (Lelide/tooling/project/manifest/ElidePackageManifest;)Lelide/tooling/project/manifest/NodePackageManifest;
	public synthetic fun fromElidePackage (Lelide/tooling/project/manifest/ElidePackageManifest;)Lelide/tooling/project/manifest/PackageManifest;
	public fun parse (Ljava/io/InputStream;)Lelide/tooling/project/manifest/NodePackageManifest;
	public synthetic fun parse (Ljava/io/InputStream;)Lelide/tooling/project/manifest/PackageManifest;
	public fun supported (Ljava/nio/file/Path;)Z
	public fun toElidePackage (Lelide/tooling/project/manifest/NodePackageManifest;)Lelide/tooling/project/manifest/ElidePackageManifest;
	public synthetic fun toElidePackage (Lelide/tooling/project/manifest/PackageManifest;)Lelide/tooling/project/manifest/ElidePackageManifest;
	public fun write (Lelide/tooling/project/manifest/NodePackageManifest;Ljava/io/OutputStream;)V
	public synthetic fun write (Lelide/tooling/project/manifest/PackageManifest;Ljava/io/OutputStream;)V
}

public abstract interface class elide/tooling/project/codecs/PackageManifestCodec {
	public abstract fun defaultPath ()Ljava/nio/file/Path;
	public abstract fun fromElidePackage (Lelide/tooling/project/manifest/ElidePackageManifest;)Lelide/tooling/project/manifest/PackageManifest;
	public abstract fun parse (Ljava/io/InputStream;)Lelide/tooling/project/manifest/PackageManifest;
	public fun parseAsFile (Ljava/nio/file/Path;)Lelide/tooling/project/manifest/PackageManifest;
	public abstract fun supported (Ljava/nio/file/Path;)Z
	public abstract fun toElidePackage (Lelide/tooling/project/manifest/PackageManifest;)Lelide/tooling/project/manifest/ElidePackageManifest;
	public abstract fun write (Lelide/tooling/project/manifest/PackageManifest;Ljava/io/OutputStream;)V
}

public final class elide/tooling/project/codecs/PyProjectManifestCodec : elide/tooling/project/codecs/PackageManifestCodec {
	public static final field DEFAULT_EXTENSION Ljava/lang/String;
	public static final field DEFAULT_NAME Ljava/lang/String;
	public static final field DEFAULT_PROJECT_NAME Ljava/lang/String;
	public fun <init> ()V
	public fun defaultPath ()Ljava/nio/file/Path;
	public synthetic fun fromElidePackage (Lelide/tooling/project/manifest/ElidePackageManifest;)Lelide/tooling/project/manifest/PackageManifest;
	public fun fromElidePackage (Lelide/tooling/project/manifest/ElidePackageManifest;)Lelide/tooling/project/manifest/PyProjectManifest;
	public synthetic fun parse (Ljava/io/InputStream;)Lelide/tooling/project/manifest/PackageManifest;
	public fun parse (Ljava/io/InputStream;)Lelide/tooling/project/manifest/PyProjectManifest;
	public fun supported (Ljava/nio/file/Path;)Z
	public synthetic fun toElidePackage (Lelide/tooling/project/manifest/PackageManifest;)Lelide/tooling/project/manifest/ElidePackageManifest;
	public fun toElidePackage (Lelide/tooling/project/manifest/PyProjectManifest;)Lelide/tooling/project/manifest/ElidePackageManifest;
	public synthetic fun write (Lelide/tooling/project/manifest/PackageManifest;Ljava/io/OutputStream;)V
	public fun write (Lelide/tooling/project/manifest/PyProjectManifest;Ljava/io/OutputStream;)V
}

public final class elide/tooling/project/codecs/PythonRequirementsManifestCodec : elide/tooling/project/codecs/PackageManifestCodec {
	public static final field DEFAULT_EXTENSION Ljava/lang/String;
	public static final field DEFAULT_NAME Ljava/lang/String;
	public fun <init> ()V
	public fun defaultPath ()Ljava/nio/file/Path;
	public synthetic fun fromElidePackage (Lelide/tooling/project/manifest/ElidePackageManifest;)Lelide/tooling/project/manifest/PackageManifest;
	public fun fromElidePackage-wYB4BT0 (Lelide/tooling/project/manifest/ElidePackageManifest;)Ljava/util/List;
	public synthetic fun parse (Ljava/io/InputStream;)Lelide/tooling/project/manifest/PackageManifest;
	public fun parse-wYB4BT0 (Ljava/io/InputStream;)Ljava/util/List;
	public fun supported (Ljava/nio/file/Path;)Z
	public synthetic fun toElidePackage (Lelide/tooling/project/manifest/PackageManifest;)Lelide/tooling/project/manifest/ElidePackageManifest;
	public fun toElidePackage-2GSRwKQ (Ljava/util/List;)Lelide/tooling/project/manifest/ElidePackageManifest;
	public synthetic fun write (Lelide/tooling/project/manifest/PackageManifest;Ljava/io/OutputStream;)V
	public fun write-lyIW0jc (Ljava/util/List;Ljava/io/OutputStream;)V
}

public final class elide/tooling/project/manifest/ElidePackageManifest : java/lang/Record, elide/tooling/project/manifest/PackageManifest {
	public static final field Companion Lelide/tooling/project/manifest/ElidePackageManifest$Companion;
	public fun <init> ()V
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Ljava/util/List;Ljava/util/Map;Lelide/tooling/project/manifest/ElidePackageManifest$DependencyResolution;Lelide/tooling/project/manifest/ElidePackageManifest$JavaScriptSettings;Lelide/tooling/project/manifest/ElidePackageManifest$TypeScriptSettings;Lelide/tooling/project/manifest/ElidePackageManifest$JvmSettings;Lelide/tooling/project/manifest/ElidePackageManifest$KotlinSettings;Lelide/tooling/project/manifest/ElidePackageManifest$PythonSettings;Lelide/tooling/project/manifest/ElidePackageManifest$RubySettings;Lelide/tooling/project/manifest/ElidePackageManifest$PklSettings;Ljava/util/Map;Lelide/tooling/project/manifest/ElidePackageManifest$TestingSettings;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Ljava/util/List;Ljava/util/Map;Lelide/tooling/project/manifest/ElidePackageManifest$DependencyResolution;Lelide/tooling/project/manifest/ElidePackageManifest$JavaScriptSettings;Lelide/tooling/project/manifest/ElidePackageManifest$TypeScriptSettings;Lelide/tooling/project/manifest/ElidePackageManifest$JvmSettings;Lelide/tooling/project/manifest/ElidePackageManifest$KotlinSettings;Lelide/tooling/project/manifest/ElidePackageManifest$PythonSettings;Lelide/tooling/project/manifest/ElidePackageManifest$RubySettings;Lelide/tooling/project/manifest/ElidePackageManifest$PklSettings;Ljava/util/Map;Lelide/tooling/project/manifest/ElidePackageManifest$TestingSettings;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component10 ()Lelide/tooling/project/manifest/ElidePackageManifest$JvmSettings;
	public final fun component11 ()Lelide/tooling/project/manifest/ElidePackageManifest$KotlinSettings;
	public final fun component12 ()Lelide/tooling/project/manifest/ElidePackageManifest$PythonSettings;
	public final fun component13 ()Lelide/tooling/project/manifest/ElidePackageManifest$RubySettings;
	public final fun component14 ()Lelide/tooling/project/manifest/ElidePackageManifest$PklSettings;
	public final fun component15 ()Ljava/util/Map;
	public final fun component16 ()Lelide/tooling/project/manifest/ElidePackageManifest$TestingSettings;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/lang/String;
	public final fun component4 ()Ljava/util/List;
	public final fun component5 ()Ljava/util/List;
	public final fun component6 ()Ljava/util/Map;
	public final fun component7 ()Lelide/tooling/project/manifest/ElidePackageManifest$DependencyResolution;
	public final fun component8 ()Lelide/tooling/project/manifest/ElidePackageManifest$JavaScriptSettings;
	public final fun component9 ()Lelide/tooling/project/manifest/ElidePackageManifest$TypeScriptSettings;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Ljava/util/List;Ljava/util/Map;Lelide/tooling/project/manifest/ElidePackageManifest$DependencyResolution;Lelide/tooling/project/manifest/ElidePackageManifest$JavaScriptSettings;Lelide/tooling/project/manifest/ElidePackageManifest$TypeScriptSettings;Lelide/tooling/project/manifest/ElidePackageManifest$JvmSettings;Lelide/tooling/project/manifest/ElidePackageManifest$KotlinSettings;Lelide/tooling/project/manifest/ElidePackageManifest$PythonSettings;Lelide/tooling/project/manifest/ElidePackageManifest$RubySettings;Lelide/tooling/project/manifest/ElidePackageManifest$PklSettings;Ljava/util/Map;Lelide/tooling/project/manifest/ElidePackageManifest$TestingSettings;)Lelide/tooling/project/manifest/ElidePackageManifest;
	public static synthetic fun copy$default (Lelide/tooling/project/manifest/ElidePackageManifest;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Ljava/util/List;Ljava/util/Map;Lelide/tooling/project/manifest/ElidePackageManifest$DependencyResolution;Lelide/tooling/project/manifest/ElidePackageManifest$JavaScriptSettings;Lelide/tooling/project/manifest/ElidePackageManifest$TypeScriptSettings;Lelide/tooling/project/manifest/ElidePackageManifest$JvmSettings;Lelide/tooling/project/manifest/ElidePackageManifest$KotlinSettings;Lelide/tooling/project/manifest/ElidePackageManifest$PythonSettings;Lelide/tooling/project/manifest/ElidePackageManifest$RubySettings;Lelide/tooling/project/manifest/ElidePackageManifest$PklSettings;Ljava/util/Map;Lelide/tooling/project/manifest/ElidePackageManifest$TestingSettings;ILjava/lang/Object;)Lelide/tooling/project/manifest/ElidePackageManifest;
	public final fun dependencies ()Lelide/tooling/project/manifest/ElidePackageManifest$DependencyResolution;
	public final fun description ()Ljava/lang/String;
	public fun ecosystem ()Lelide/tooling/project/ProjectEcosystem;
	public final fun entrypoint ()Ljava/util/List;
	public fun equals (Ljava/lang/Object;)Z
	public synthetic fun getEcosystem ()Lelide/tooling/project/ProjectEcosystem;
	public fun hashCode ()I
	public final fun javascript ()Lelide/tooling/project/manifest/ElidePackageManifest$JavaScriptSettings;
	public final fun jvm ()Lelide/tooling/project/manifest/ElidePackageManifest$JvmSettings;
	public final fun kotlin ()Lelide/tooling/project/manifest/ElidePackageManifest$KotlinSettings;
	public final fun name ()Ljava/lang/String;
	public final fun pkl ()Lelide/tooling/project/manifest/ElidePackageManifest$PklSettings;
	public final fun python ()Lelide/tooling/project/manifest/ElidePackageManifest$PythonSettings;
	public final fun ruby ()Lelide/tooling/project/manifest/ElidePackageManifest$RubySettings;
	public final fun scripts ()Ljava/util/Map;
	public final fun sources ()Ljava/util/Map;
	public final fun tests ()Lelide/tooling/project/manifest/ElidePackageManifest$TestingSettings;
	public fun toString ()Ljava/lang/String;
	public final fun typescript ()Lelide/tooling/project/manifest/ElidePackageManifest$TypeScriptSettings;
	public final fun version ()Ljava/lang/String;
	public final fun workspaces ()Ljava/util/List;
}

public final class elide/tooling/project/manifest/ElidePackageManifest$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/ElidePackageManifest$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/manifest/ElidePackageManifest;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/manifest/ElidePackageManifest;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/manifest/ElidePackageManifest$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/ElidePackageManifest$CoverageSettings : java/lang/Record {
	public static final field Companion Lelide/tooling/project/manifest/ElidePackageManifest$CoverageSettings$Companion;
	public fun <init> ()V
	public fun <init> (ZLjava/util/List;)V
	public synthetic fun <init> (ZLjava/util/List;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Z
	public final fun component2 ()Ljava/util/List;
	public final fun copy (ZLjava/util/List;)Lelide/tooling/project/manifest/ElidePackageManifest$CoverageSettings;
	public static synthetic fun copy$default (Lelide/tooling/project/manifest/ElidePackageManifest$CoverageSettings;ZLjava/util/List;ILjava/lang/Object;)Lelide/tooling/project/manifest/ElidePackageManifest$CoverageSettings;
	public final fun enabled ()Z
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun paths ()Ljava/util/List;
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/project/manifest/ElidePackageManifest$CoverageSettings$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/ElidePackageManifest$CoverageSettings$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/manifest/ElidePackageManifest$CoverageSettings;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/manifest/ElidePackageManifest$CoverageSettings;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/manifest/ElidePackageManifest$CoverageSettings$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract interface class elide/tooling/project/manifest/ElidePackageManifest$DependencyEcosystemConfig {
}

public abstract interface class elide/tooling/project/manifest/ElidePackageManifest$DependencyEcosystemConfig$PackageSpec {
}

public abstract interface class elide/tooling/project/manifest/ElidePackageManifest$DependencyEcosystemConfig$RepositorySpec {
}

public final class elide/tooling/project/manifest/ElidePackageManifest$DependencyResolution : java/lang/Record {
	public static final field Companion Lelide/tooling/project/manifest/ElidePackageManifest$DependencyResolution$Companion;
	public fun <init> ()V
	public fun <init> (Lelide/tooling/project/manifest/ElidePackageManifest$MavenDependencies;Lelide/tooling/project/manifest/ElidePackageManifest$NpmDependencies;Lelide/tooling/project/manifest/ElidePackageManifest$PipDependencies;Lelide/tooling/project/manifest/ElidePackageManifest$GemDependencies;)V
	public synthetic fun <init> (Lelide/tooling/project/manifest/ElidePackageManifest$MavenDependencies;Lelide/tooling/project/manifest/ElidePackageManifest$NpmDependencies;Lelide/tooling/project/manifest/ElidePackageManifest$PipDependencies;Lelide/tooling/project/manifest/ElidePackageManifest$GemDependencies;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Lelide/tooling/project/manifest/ElidePackageManifest$MavenDependencies;
	public final fun component2 ()Lelide/tooling/project/manifest/ElidePackageManifest$NpmDependencies;
	public final fun component3 ()Lelide/tooling/project/manifest/ElidePackageManifest$PipDependencies;
	public final fun component4 ()Lelide/tooling/project/manifest/ElidePackageManifest$GemDependencies;
	public final fun copy (Lelide/tooling/project/manifest/ElidePackageManifest$MavenDependencies;Lelide/tooling/project/manifest/ElidePackageManifest$NpmDependencies;Lelide/tooling/project/manifest/ElidePackageManifest$PipDependencies;Lelide/tooling/project/manifest/ElidePackageManifest$GemDependencies;)Lelide/tooling/project/manifest/ElidePackageManifest$DependencyResolution;
	public static synthetic fun copy$default (Lelide/tooling/project/manifest/ElidePackageManifest$DependencyResolution;Lelide/tooling/project/manifest/ElidePackageManifest$MavenDependencies;Lelide/tooling/project/manifest/ElidePackageManifest$NpmDependencies;Lelide/tooling/project/manifest/ElidePackageManifest$PipDependencies;Lelide/tooling/project/manifest/ElidePackageManifest$GemDependencies;ILjava/lang/Object;)Lelide/tooling/project/manifest/ElidePackageManifest$DependencyResolution;
	public fun equals (Ljava/lang/Object;)Z
	public final fun gems ()Lelide/tooling/project/manifest/ElidePackageManifest$GemDependencies;
	public fun hashCode ()I
	public final fun maven ()Lelide/tooling/project/manifest/ElidePackageManifest$MavenDependencies;
	public final fun npm ()Lelide/tooling/project/manifest/ElidePackageManifest$NpmDependencies;
	public final fun pip ()Lelide/tooling/project/manifest/ElidePackageManifest$PipDependencies;
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/project/manifest/ElidePackageManifest$DependencyResolution$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/ElidePackageManifest$DependencyResolution$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/manifest/ElidePackageManifest$DependencyResolution;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/manifest/ElidePackageManifest$DependencyResolution;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/manifest/ElidePackageManifest$DependencyResolution$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/ElidePackageManifest$GemDependencies : java/lang/Record, elide/tooling/project/manifest/ElidePackageManifest$DependencyEcosystemConfig {
	public static final field Companion Lelide/tooling/project/manifest/ElidePackageManifest$GemDependencies$Companion;
	public fun <init> ()V
	public fun <init> (Ljava/util/List;Ljava/util/List;)V
	public synthetic fun <init> (Ljava/util/List;Ljava/util/List;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/util/List;
	public final fun component2 ()Ljava/util/List;
	public final fun copy (Ljava/util/List;Ljava/util/List;)Lelide/tooling/project/manifest/ElidePackageManifest$GemDependencies;
	public static synthetic fun copy$default (Lelide/tooling/project/manifest/ElidePackageManifest$GemDependencies;Ljava/util/List;Ljava/util/List;ILjava/lang/Object;)Lelide/tooling/project/manifest/ElidePackageManifest$GemDependencies;
	public final fun devPackages ()Ljava/util/List;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun packages ()Ljava/util/List;
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/project/manifest/ElidePackageManifest$GemDependencies$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/ElidePackageManifest$GemDependencies$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/manifest/ElidePackageManifest$GemDependencies;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/manifest/ElidePackageManifest$GemDependencies;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/manifest/ElidePackageManifest$GemDependencies$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/ElidePackageManifest$GemPackage : java/lang/Record, elide/tooling/project/manifest/ElidePackageManifest$DependencyEcosystemConfig$PackageSpec {
	public static final field Companion Lelide/tooling/project/manifest/ElidePackageManifest$GemPackage$Companion;
	public fun <init> (Ljava/lang/String;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;)Lelide/tooling/project/manifest/ElidePackageManifest$GemPackage;
	public static synthetic fun copy$default (Lelide/tooling/project/manifest/ElidePackageManifest$GemPackage;Ljava/lang/String;ILjava/lang/Object;)Lelide/tooling/project/manifest/ElidePackageManifest$GemPackage;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun name ()Ljava/lang/String;
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/project/manifest/ElidePackageManifest$GemPackage$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/ElidePackageManifest$GemPackage$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/manifest/ElidePackageManifest$GemPackage;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/manifest/ElidePackageManifest$GemPackage;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/manifest/ElidePackageManifest$GemPackage$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/ElidePackageManifest$GradleCatalog : java/lang/Record, java/lang/Comparable {
	public static final field Companion Lelide/tooling/project/manifest/ElidePackageManifest$GradleCatalog$Companion;
	public fun <init> (Ljava/lang/String;Ljava/lang/String;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun compareTo (Lelide/tooling/project/manifest/ElidePackageManifest$GradleCatalog;)I
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;)Lelide/tooling/project/manifest/ElidePackageManifest$GradleCatalog;
	public static synthetic fun copy$default (Lelide/tooling/project/manifest/ElidePackageManifest$GradleCatalog;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Lelide/tooling/project/manifest/ElidePackageManifest$GradleCatalog;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun name ()Ljava/lang/String;
	public static final fun parse (Ljava/lang/String;)Lelide/tooling/project/manifest/ElidePackageManifest$GradleCatalog;
	public final fun path ()Ljava/lang/String;
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/project/manifest/ElidePackageManifest$GradleCatalog$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/ElidePackageManifest$GradleCatalog$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/manifest/ElidePackageManifest$GradleCatalog;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/manifest/ElidePackageManifest$GradleCatalog;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/manifest/ElidePackageManifest$GradleCatalog$Companion {
	public final fun parse (Ljava/lang/String;)Lelide/tooling/project/manifest/ElidePackageManifest$GradleCatalog;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/ElidePackageManifest$JavaScriptSettings : java/lang/Record {
	public static final field Companion Lelide/tooling/project/manifest/ElidePackageManifest$JavaScriptSettings$Companion;
	public fun <init> ()V
	public fun <init> (Z)V
	public synthetic fun <init> (ZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Z
	public final fun copy (Z)Lelide/tooling/project/manifest/ElidePackageManifest$JavaScriptSettings;
	public static synthetic fun copy$default (Lelide/tooling/project/manifest/ElidePackageManifest$JavaScriptSettings;ZILjava/lang/Object;)Lelide/tooling/project/manifest/ElidePackageManifest$JavaScriptSettings;
	public final fun debug ()Z
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/project/manifest/ElidePackageManifest$JavaScriptSettings$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/ElidePackageManifest$JavaScriptSettings$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/manifest/ElidePackageManifest$JavaScriptSettings;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/manifest/ElidePackageManifest$JavaScriptSettings;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/manifest/ElidePackageManifest$JavaScriptSettings$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/ElidePackageManifest$JvmSettings : java/lang/Record {
	public static final field Companion Lelide/tooling/project/manifest/ElidePackageManifest$JvmSettings$Companion;
	public fun <init> ()V
	public fun <init> (Lelide/tooling/project/manifest/ElidePackageManifest$JvmTarget;Ljava/lang/String;)V
	public synthetic fun <init> (Lelide/tooling/project/manifest/ElidePackageManifest$JvmTarget;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Lelide/tooling/project/manifest/ElidePackageManifest$JvmTarget;
	public final fun component2 ()Ljava/lang/String;
	public final fun copy (Lelide/tooling/project/manifest/ElidePackageManifest$JvmTarget;Ljava/lang/String;)Lelide/tooling/project/manifest/ElidePackageManifest$JvmSettings;
	public static synthetic fun copy$default (Lelide/tooling/project/manifest/ElidePackageManifest$JvmSettings;Lelide/tooling/project/manifest/ElidePackageManifest$JvmTarget;Ljava/lang/String;ILjava/lang/Object;)Lelide/tooling/project/manifest/ElidePackageManifest$JvmSettings;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun javaHome ()Ljava/lang/String;
	public final fun target ()Lelide/tooling/project/manifest/ElidePackageManifest$JvmTarget;
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/project/manifest/ElidePackageManifest$JvmSettings$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/ElidePackageManifest$JvmSettings$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/manifest/ElidePackageManifest$JvmSettings;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/manifest/ElidePackageManifest$JvmSettings;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/manifest/ElidePackageManifest$JvmSettings$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract interface class elide/tooling/project/manifest/ElidePackageManifest$JvmTarget {
	public static final field Companion Lelide/tooling/project/manifest/ElidePackageManifest$JvmTarget$Companion;
}

public final class elide/tooling/project/manifest/ElidePackageManifest$JvmTarget$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/ElidePackageManifest$JvmTarget$NumericJvmTarget : elide/tooling/project/manifest/ElidePackageManifest$JvmTarget {
	public static final field Companion Lelide/tooling/project/manifest/ElidePackageManifest$JvmTarget$NumericJvmTarget$Companion;
	public static final synthetic fun box-impl (I)Lelide/tooling/project/manifest/ElidePackageManifest$JvmTarget$NumericJvmTarget;
	public static fun constructor-impl (I)I
	public fun equals (Ljava/lang/Object;)Z
	public static fun equals-impl (ILjava/lang/Object;)Z
	public static final fun equals-impl0 (II)Z
	public final fun getNumber-pVg5ArA ()I
	public fun hashCode ()I
	public static fun hashCode-impl (I)I
	public fun toString ()Ljava/lang/String;
	public static fun toString-impl (I)Ljava/lang/String;
	public final synthetic fun unbox-impl ()I
}

public final class elide/tooling/project/manifest/ElidePackageManifest$JvmTarget$NumericJvmTarget$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/ElidePackageManifest$JvmTarget$NumericJvmTarget$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun deserialize-WK7WSmo (Lkotlinx/serialization/encoding/Decoder;)I
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun serialize-_NRrRhk (Lkotlinx/serialization/encoding/Encoder;I)V
}

public final class elide/tooling/project/manifest/ElidePackageManifest$JvmTarget$NumericJvmTarget$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/ElidePackageManifest$JvmTarget$StringJvmTarget : elide/tooling/project/manifest/ElidePackageManifest$JvmTarget {
	public static final field Companion Lelide/tooling/project/manifest/ElidePackageManifest$JvmTarget$StringJvmTarget$Companion;
	public static final synthetic fun box-impl (Ljava/lang/String;)Lelide/tooling/project/manifest/ElidePackageManifest$JvmTarget$StringJvmTarget;
	public static fun constructor-impl (Ljava/lang/String;)Ljava/lang/String;
	public fun equals (Ljava/lang/Object;)Z
	public static fun equals-impl (Ljava/lang/String;Ljava/lang/Object;)Z
	public static final fun equals-impl0 (Ljava/lang/String;Ljava/lang/String;)Z
	public final fun getName ()Ljava/lang/String;
	public fun hashCode ()I
	public static fun hashCode-impl (Ljava/lang/String;)I
	public fun toString ()Ljava/lang/String;
	public static fun toString-impl (Ljava/lang/String;)Ljava/lang/String;
	public final synthetic fun unbox-impl ()Ljava/lang/String;
}

public final class elide/tooling/project/manifest/ElidePackageManifest$JvmTarget$StringJvmTarget$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/ElidePackageManifest$JvmTarget$StringJvmTarget$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun deserialize-lTraDT8 (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/String;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun serialize-ZUjt9F4 (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/String;)V
}

public final class elide/tooling/project/manifest/ElidePackageManifest$JvmTarget$StringJvmTarget$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/ElidePackageManifest$JvmTargetValidationMode : java/lang/Enum {
	public static final field Companion Lelide/tooling/project/manifest/ElidePackageManifest$JvmTargetValidationMode$Companion;
	public static final field ERROR Lelide/tooling/project/manifest/ElidePackageManifest$JvmTargetValidationMode;
	public static final field IGNORE Lelide/tooling/project/manifest/ElidePackageManifest$JvmTargetValidationMode;
	public static final field WARNING Lelide/tooling/project/manifest/ElidePackageManifest$JvmTargetValidationMode;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public static fun valueOf (Ljava/lang/String;)Lelide/tooling/project/manifest/ElidePackageManifest$JvmTargetValidationMode;
	public static fun values ()[Lelide/tooling/project/manifest/ElidePackageManifest$JvmTargetValidationMode;
}

public final class elide/tooling/project/manifest/ElidePackageManifest$JvmTargetValidationMode$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/ElidePackageManifest$KotlinFeatureOptions : java/lang/Record {
	public static final field Companion Lelide/tooling/project/manifest/ElidePackageManifest$KotlinFeatureOptions$Companion;
	public fun <init> ()V
	public fun <init> (ZZZZZZ)V
	public synthetic fun <init> (ZZZZZZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun autoClasspath ()Z
	public final fun component1 ()Z
	public final fun component2 ()Z
	public final fun component3 ()Z
	public final fun component4 ()Z
	public final fun component5 ()Z
	public final fun component6 ()Z
	public final fun copy (ZZZZZZ)Lelide/tooling/project/manifest/ElidePackageManifest$KotlinFeatureOptions;
	public static synthetic fun copy$default (Lelide/tooling/project/manifest/ElidePackageManifest$KotlinFeatureOptions;ZZZZZZILjava/lang/Object;)Lelide/tooling/project/manifest/ElidePackageManifest$KotlinFeatureOptions;
	public final fun coroutines ()Z
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun injection ()Z
	public final fun kotlinx ()Z
	public final fun serialization ()Z
	public final fun testing ()Z
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/project/manifest/ElidePackageManifest$KotlinFeatureOptions$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/ElidePackageManifest$KotlinFeatureOptions$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/manifest/ElidePackageManifest$KotlinFeatureOptions;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/manifest/ElidePackageManifest$KotlinFeatureOptions;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/manifest/ElidePackageManifest$KotlinFeatureOptions$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/ElidePackageManifest$KotlinJvmCompilerOptions : java/lang/Record {
	public static final field Companion Lelide/tooling/project/manifest/ElidePackageManifest$KotlinJvmCompilerOptions$Companion;
	public fun <init> ()V
	public fun <init> (Ljava/util/List;ZZZZZLjava/util/List;Ljava/lang/String;Ljava/lang/String;ZLelide/tooling/project/manifest/ElidePackageManifest$JvmTarget;ZLelide/tooling/project/manifest/ElidePackageManifest$JvmTargetValidationMode;)V
	public synthetic fun <init> (Ljava/util/List;ZZZZZLjava/util/List;Ljava/lang/String;Ljava/lang/String;ZLelide/tooling/project/manifest/ElidePackageManifest$JvmTarget;ZLelide/tooling/project/manifest/ElidePackageManifest$JvmTargetValidationMode;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun allWarningsAsErrors ()Z
	public final fun amend (Lelide/tool/MutableArguments;)V
	public final fun apiVersion ()Ljava/lang/String;
	public final fun component1 ()Ljava/util/List;
	public final fun component10 ()Z
	public final fun component11 ()Lelide/tooling/project/manifest/ElidePackageManifest$JvmTarget;
	public final fun component12 ()Z
	public final fun component13 ()Lelide/tooling/project/manifest/ElidePackageManifest$JvmTargetValidationMode;
	public final fun component2 ()Z
	public final fun component3 ()Z
	public final fun component4 ()Z
	public final fun component5 ()Z
	public final fun component6 ()Z
	public final fun component7 ()Ljava/util/List;
	public final fun component8 ()Ljava/lang/String;
	public final fun component9 ()Ljava/lang/String;
	public final fun copy (Ljava/util/List;ZZZZZLjava/util/List;Ljava/lang/String;Ljava/lang/String;ZLelide/tooling/project/manifest/ElidePackageManifest$JvmTarget;ZLelide/tooling/project/manifest/ElidePackageManifest$JvmTargetValidationMode;)Lelide/tooling/project/manifest/ElidePackageManifest$KotlinJvmCompilerOptions;
	public static synthetic fun copy$default (Lelide/tooling/project/manifest/ElidePackageManifest$KotlinJvmCompilerOptions;Ljava/util/List;ZZZZZLjava/util/List;Ljava/lang/String;Ljava/lang/String;ZLelide/tooling/project/manifest/ElidePackageManifest$JvmTarget;ZLelide/tooling/project/manifest/ElidePackageManifest$JvmTargetValidationMode;ILjava/lang/Object;)Lelide/tooling/project/manifest/ElidePackageManifest$KotlinJvmCompilerOptions;
	public fun equals (Ljava/lang/Object;)Z
	public final fun extraWarnings ()Z
	public final fun freeCompilerArgs ()Ljava/util/List;
	public fun hashCode ()I
	public final fun javaParameters ()Z
	public final fun jvmTarget ()Lelide/tooling/project/manifest/ElidePackageManifest$JvmTarget;
	public final fun jvmTargetValidationMode ()Lelide/tooling/project/manifest/ElidePackageManifest$JvmTargetValidationMode;
	public final fun languageVersion ()Ljava/lang/String;
	public final fun noJdk ()Z
	public final fun optIn ()Ljava/util/List;
	public final fun progressiveMode ()Z
	public final fun suppressWarnings ()Z
	public fun toString ()Ljava/lang/String;
	public final fun verbose ()Z
}

public final class elide/tooling/project/manifest/ElidePackageManifest$KotlinJvmCompilerOptions$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/ElidePackageManifest$KotlinJvmCompilerOptions$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/manifest/ElidePackageManifest$KotlinJvmCompilerOptions;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/manifest/ElidePackageManifest$KotlinJvmCompilerOptions;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/manifest/ElidePackageManifest$KotlinJvmCompilerOptions$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/ElidePackageManifest$KotlinSettings : java/lang/Record {
	public static final field Companion Lelide/tooling/project/manifest/ElidePackageManifest$KotlinSettings$Companion;
	public fun <init> ()V
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Lelide/tooling/project/manifest/ElidePackageManifest$KotlinJvmCompilerOptions;Lelide/tooling/project/manifest/ElidePackageManifest$KotlinFeatureOptions;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;Lelide/tooling/project/manifest/ElidePackageManifest$KotlinJvmCompilerOptions;Lelide/tooling/project/manifest/ElidePackageManifest$KotlinFeatureOptions;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun apiLevel ()Ljava/lang/String;
	public final fun compilerOptions ()Lelide/tooling/project/manifest/ElidePackageManifest$KotlinJvmCompilerOptions;
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Lelide/tooling/project/manifest/ElidePackageManifest$KotlinJvmCompilerOptions;
	public final fun component4 ()Lelide/tooling/project/manifest/ElidePackageManifest$KotlinFeatureOptions;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;Lelide/tooling/project/manifest/ElidePackageManifest$KotlinJvmCompilerOptions;Lelide/tooling/project/manifest/ElidePackageManifest$KotlinFeatureOptions;)Lelide/tooling/project/manifest/ElidePackageManifest$KotlinSettings;
	public static synthetic fun copy$default (Lelide/tooling/project/manifest/ElidePackageManifest$KotlinSettings;Ljava/lang/String;Ljava/lang/String;Lelide/tooling/project/manifest/ElidePackageManifest$KotlinJvmCompilerOptions;Lelide/tooling/project/manifest/ElidePackageManifest$KotlinFeatureOptions;ILjava/lang/Object;)Lelide/tooling/project/manifest/ElidePackageManifest$KotlinSettings;
	public fun equals (Ljava/lang/Object;)Z
	public final fun features ()Lelide/tooling/project/manifest/ElidePackageManifest$KotlinFeatureOptions;
	public fun hashCode ()I
	public final fun languageLevel ()Ljava/lang/String;
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/project/manifest/ElidePackageManifest$KotlinSettings$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/ElidePackageManifest$KotlinSettings$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/manifest/ElidePackageManifest$KotlinSettings;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/manifest/ElidePackageManifest$KotlinSettings;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/manifest/ElidePackageManifest$KotlinSettings$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/ElidePackageManifest$MavenDependencies : java/lang/Record, elide/tooling/project/manifest/ElidePackageManifest$DependencyEcosystemConfig {
	public static final field Companion Lelide/tooling/project/manifest/ElidePackageManifest$MavenDependencies$Companion;
	public fun <init> ()V
	public fun <init> (Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/Map;Z)V
	public synthetic fun <init> (Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/Map;ZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun allPackages ()Lkotlin/sequences/Sequence;
	public final fun catalogs ()Ljava/util/List;
	public final fun component1 ()Ljava/util/List;
	public final fun component2 ()Ljava/util/List;
	public final fun component3 ()Ljava/util/List;
	public final fun component4 ()Ljava/util/Map;
	public final fun component5 ()Z
	public final fun copy (Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/Map;Z)Lelide/tooling/project/manifest/ElidePackageManifest$MavenDependencies;
	public static synthetic fun copy$default (Lelide/tooling/project/manifest/ElidePackageManifest$MavenDependencies;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/Map;ZILjava/lang/Object;)Lelide/tooling/project/manifest/ElidePackageManifest$MavenDependencies;
	public final fun enableDefaultRepositories ()Z
	public fun equals (Ljava/lang/Object;)Z
	public final fun hasPackages ()Z
	public fun hashCode ()I
	public final fun packages ()Ljava/util/List;
	public final fun repositories ()Ljava/util/Map;
	public final fun testPackages ()Ljava/util/List;
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/project/manifest/ElidePackageManifest$MavenDependencies$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/ElidePackageManifest$MavenDependencies$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/manifest/ElidePackageManifest$MavenDependencies;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/manifest/ElidePackageManifest$MavenDependencies;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/manifest/ElidePackageManifest$MavenDependencies$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/ElidePackageManifest$MavenPackage : java/lang/Record, elide/tooling/project/manifest/ElidePackageManifest$DependencyEcosystemConfig$PackageSpec, java/lang/Comparable {
	public static final field Companion Lelide/tooling/project/manifest/ElidePackageManifest$MavenPackage$Companion;
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun compareTo (Lelide/tooling/project/manifest/ElidePackageManifest$MavenPackage;)I
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/lang/String;
	public final fun component4 ()Ljava/lang/String;
	public final fun component5 ()Ljava/lang/String;
	public final fun coordinate ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lelide/tooling/project/manifest/ElidePackageManifest$MavenPackage;
	public static synthetic fun copy$default (Lelide/tooling/project/manifest/ElidePackageManifest$MavenPackage;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Lelide/tooling/project/manifest/ElidePackageManifest$MavenPackage;
	public fun equals (Ljava/lang/Object;)Z
	public final fun group ()Ljava/lang/String;
	public fun hashCode ()I
	public final fun name ()Ljava/lang/String;
	public static final fun parse (Ljava/lang/String;)Lelide/tooling/project/manifest/ElidePackageManifest$MavenPackage;
	public final fun repository ()Ljava/lang/String;
	public fun toString ()Ljava/lang/String;
	public final fun version ()Ljava/lang/String;
}

public final class elide/tooling/project/manifest/ElidePackageManifest$MavenPackage$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/ElidePackageManifest$MavenPackage$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/manifest/ElidePackageManifest$MavenPackage;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/manifest/ElidePackageManifest$MavenPackage;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/manifest/ElidePackageManifest$MavenPackage$Companion {
	public final fun parse (Ljava/lang/String;)Lelide/tooling/project/manifest/ElidePackageManifest$MavenPackage;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/ElidePackageManifest$MavenRepository : elide/tooling/project/manifest/ElidePackageManifest$DependencyEcosystemConfig$RepositorySpec {
	public static final field Companion Lelide/tooling/project/manifest/ElidePackageManifest$MavenRepository$Companion;
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lelide/tooling/project/manifest/ElidePackageManifest$MavenRepository;
	public static synthetic fun copy$default (Lelide/tooling/project/manifest/ElidePackageManifest$MavenRepository;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Lelide/tooling/project/manifest/ElidePackageManifest$MavenRepository;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getDescription ()Ljava/lang/String;
	public final fun getName ()Ljava/lang/String;
	public final fun getUrl ()Ljava/lang/String;
	public fun hashCode ()I
	public static final fun parse (Ljava/lang/String;)Lelide/tooling/project/manifest/ElidePackageManifest$MavenRepository;
	public final fun setName (Ljava/lang/String;)V
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/project/manifest/ElidePackageManifest$MavenRepository$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/ElidePackageManifest$MavenRepository$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/manifest/ElidePackageManifest$MavenRepository;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/manifest/ElidePackageManifest$MavenRepository;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/manifest/ElidePackageManifest$MavenRepository$Companion {
	public final fun parse (Ljava/lang/String;)Lelide/tooling/project/manifest/ElidePackageManifest$MavenRepository;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/ElidePackageManifest$NpmDependencies : java/lang/Record, elide/tooling/project/manifest/ElidePackageManifest$DependencyEcosystemConfig {
	public static final field Companion Lelide/tooling/project/manifest/ElidePackageManifest$NpmDependencies$Companion;
	public fun <init> ()V
	public fun <init> (Ljava/util/List;Ljava/util/List;Ljava/util/Map;)V
	public synthetic fun <init> (Ljava/util/List;Ljava/util/List;Ljava/util/Map;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/util/List;
	public final fun component2 ()Ljava/util/List;
	public final fun component3 ()Ljava/util/Map;
	public final fun copy (Ljava/util/List;Ljava/util/List;Ljava/util/Map;)Lelide/tooling/project/manifest/ElidePackageManifest$NpmDependencies;
	public static synthetic fun copy$default (Lelide/tooling/project/manifest/ElidePackageManifest$NpmDependencies;Ljava/util/List;Ljava/util/List;Ljava/util/Map;ILjava/lang/Object;)Lelide/tooling/project/manifest/ElidePackageManifest$NpmDependencies;
	public final fun devPackages ()Ljava/util/List;
	public fun equals (Ljava/lang/Object;)Z
	public final fun hasPackages ()Z
	public fun hashCode ()I
	public final fun packages ()Ljava/util/List;
	public final fun repositories ()Ljava/util/Map;
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/project/manifest/ElidePackageManifest$NpmDependencies$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/ElidePackageManifest$NpmDependencies$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/manifest/ElidePackageManifest$NpmDependencies;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/manifest/ElidePackageManifest$NpmDependencies;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/manifest/ElidePackageManifest$NpmDependencies$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/ElidePackageManifest$NpmPackage : java/lang/Record, elide/tooling/project/manifest/ElidePackageManifest$DependencyEcosystemConfig$PackageSpec {
	public static final field Companion Lelide/tooling/project/manifest/ElidePackageManifest$NpmPackage$Companion;
	public fun <init> (Ljava/lang/String;Ljava/lang/String;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;)Lelide/tooling/project/manifest/ElidePackageManifest$NpmPackage;
	public static synthetic fun copy$default (Lelide/tooling/project/manifest/ElidePackageManifest$NpmPackage;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Lelide/tooling/project/manifest/ElidePackageManifest$NpmPackage;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun name ()Ljava/lang/String;
	public static final fun parse (Ljava/lang/String;)Lelide/tooling/project/manifest/ElidePackageManifest$NpmPackage;
	public fun toString ()Ljava/lang/String;
	public final fun version ()Ljava/lang/String;
}

public final class elide/tooling/project/manifest/ElidePackageManifest$NpmPackage$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/ElidePackageManifest$NpmPackage$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/manifest/ElidePackageManifest$NpmPackage;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/manifest/ElidePackageManifest$NpmPackage;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/manifest/ElidePackageManifest$NpmPackage$Companion {
	public final fun parse (Ljava/lang/String;)Lelide/tooling/project/manifest/ElidePackageManifest$NpmPackage;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/ElidePackageManifest$NpmRepository : java/lang/Record, elide/tooling/project/manifest/ElidePackageManifest$DependencyEcosystemConfig$RepositorySpec {
	public static final field Companion Lelide/tooling/project/manifest/ElidePackageManifest$NpmRepository$Companion;
	public fun <init> (Ljava/lang/String;Ljava/lang/String;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;)Lelide/tooling/project/manifest/ElidePackageManifest$NpmRepository;
	public static synthetic fun copy$default (Lelide/tooling/project/manifest/ElidePackageManifest$NpmRepository;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Lelide/tooling/project/manifest/ElidePackageManifest$NpmRepository;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun name ()Ljava/lang/String;
	public fun toString ()Ljava/lang/String;
	public final fun url ()Ljava/lang/String;
}

public final class elide/tooling/project/manifest/ElidePackageManifest$NpmRepository$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/ElidePackageManifest$NpmRepository$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/manifest/ElidePackageManifest$NpmRepository;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/manifest/ElidePackageManifest$NpmRepository;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/manifest/ElidePackageManifest$NpmRepository$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/ElidePackageManifest$PipDependencies : java/lang/Record, elide/tooling/project/manifest/ElidePackageManifest$DependencyEcosystemConfig {
	public static final field Companion Lelide/tooling/project/manifest/ElidePackageManifest$PipDependencies$Companion;
	public fun <init> ()V
	public fun <init> (Ljava/util/List;Ljava/util/Map;)V
	public synthetic fun <init> (Ljava/util/List;Ljava/util/Map;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun allPackages ()Lkotlin/sequences/Sequence;
	public final fun component1 ()Ljava/util/List;
	public final fun component2 ()Ljava/util/Map;
	public final fun copy (Ljava/util/List;Ljava/util/Map;)Lelide/tooling/project/manifest/ElidePackageManifest$PipDependencies;
	public static synthetic fun copy$default (Lelide/tooling/project/manifest/ElidePackageManifest$PipDependencies;Ljava/util/List;Ljava/util/Map;ILjava/lang/Object;)Lelide/tooling/project/manifest/ElidePackageManifest$PipDependencies;
	public fun equals (Ljava/lang/Object;)Z
	public final fun hasPackages ()Z
	public fun hashCode ()I
	public final fun optionalPackages ()Ljava/util/Map;
	public final fun packages ()Ljava/util/List;
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/project/manifest/ElidePackageManifest$PipDependencies$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/ElidePackageManifest$PipDependencies$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/manifest/ElidePackageManifest$PipDependencies;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/manifest/ElidePackageManifest$PipDependencies;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/manifest/ElidePackageManifest$PipDependencies$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/ElidePackageManifest$PipPackage : java/lang/Record, elide/tooling/project/manifest/ElidePackageManifest$DependencyEcosystemConfig$PackageSpec {
	public static final field Companion Lelide/tooling/project/manifest/ElidePackageManifest$PipPackage$Companion;
	public fun <init> (Ljava/lang/String;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;)Lelide/tooling/project/manifest/ElidePackageManifest$PipPackage;
	public static synthetic fun copy$default (Lelide/tooling/project/manifest/ElidePackageManifest$PipPackage;Ljava/lang/String;ILjava/lang/Object;)Lelide/tooling/project/manifest/ElidePackageManifest$PipPackage;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun name ()Ljava/lang/String;
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/project/manifest/ElidePackageManifest$PipPackage$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/ElidePackageManifest$PipPackage$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/manifest/ElidePackageManifest$PipPackage;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/manifest/ElidePackageManifest$PipPackage;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/manifest/ElidePackageManifest$PipPackage$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/ElidePackageManifest$PklSettings : java/lang/Record {
	public static final field Companion Lelide/tooling/project/manifest/ElidePackageManifest$PklSettings$Companion;
	public fun <init> ()V
	public fun <init> (Z)V
	public synthetic fun <init> (ZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Z
	public final fun copy (Z)Lelide/tooling/project/manifest/ElidePackageManifest$PklSettings;
	public static synthetic fun copy$default (Lelide/tooling/project/manifest/ElidePackageManifest$PklSettings;ZILjava/lang/Object;)Lelide/tooling/project/manifest/ElidePackageManifest$PklSettings;
	public final fun debug ()Z
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/project/manifest/ElidePackageManifest$PklSettings$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/ElidePackageManifest$PklSettings$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/manifest/ElidePackageManifest$PklSettings;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/manifest/ElidePackageManifest$PklSettings;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/manifest/ElidePackageManifest$PklSettings$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/ElidePackageManifest$PythonSettings : java/lang/Record {
	public static final field Companion Lelide/tooling/project/manifest/ElidePackageManifest$PythonSettings$Companion;
	public fun <init> ()V
	public fun <init> (Z)V
	public synthetic fun <init> (ZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Z
	public final fun copy (Z)Lelide/tooling/project/manifest/ElidePackageManifest$PythonSettings;
	public static synthetic fun copy$default (Lelide/tooling/project/manifest/ElidePackageManifest$PythonSettings;ZILjava/lang/Object;)Lelide/tooling/project/manifest/ElidePackageManifest$PythonSettings;
	public final fun debug ()Z
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/project/manifest/ElidePackageManifest$PythonSettings$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/ElidePackageManifest$PythonSettings$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/manifest/ElidePackageManifest$PythonSettings;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/manifest/ElidePackageManifest$PythonSettings;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/manifest/ElidePackageManifest$PythonSettings$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/ElidePackageManifest$RubySettings : java/lang/Record {
	public static final field Companion Lelide/tooling/project/manifest/ElidePackageManifest$RubySettings$Companion;
	public fun <init> ()V
	public fun <init> (Z)V
	public synthetic fun <init> (ZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Z
	public final fun copy (Z)Lelide/tooling/project/manifest/ElidePackageManifest$RubySettings;
	public static synthetic fun copy$default (Lelide/tooling/project/manifest/ElidePackageManifest$RubySettings;ZILjava/lang/Object;)Lelide/tooling/project/manifest/ElidePackageManifest$RubySettings;
	public final fun debug ()Z
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/project/manifest/ElidePackageManifest$RubySettings$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/ElidePackageManifest$RubySettings$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/manifest/ElidePackageManifest$RubySettings;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/manifest/ElidePackageManifest$RubySettings;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/manifest/ElidePackageManifest$RubySettings$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/ElidePackageManifest$SourceSet : java/lang/Record {
	public static final field Companion Lelide/tooling/project/manifest/ElidePackageManifest$SourceSet$Companion;
	public fun <init> (Ljava/util/List;)V
	public final fun component1 ()Ljava/util/List;
	public final fun copy (Ljava/util/List;)Lelide/tooling/project/manifest/ElidePackageManifest$SourceSet;
	public static synthetic fun copy$default (Lelide/tooling/project/manifest/ElidePackageManifest$SourceSet;Ljava/util/List;ILjava/lang/Object;)Lelide/tooling/project/manifest/ElidePackageManifest$SourceSet;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public static final fun parse (Ljava/lang/String;)Lelide/tooling/project/manifest/ElidePackageManifest$SourceSet;
	public final fun spec ()Ljava/util/List;
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/project/manifest/ElidePackageManifest$SourceSet$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/ElidePackageManifest$SourceSet$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/manifest/ElidePackageManifest$SourceSet;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/manifest/ElidePackageManifest$SourceSet;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/manifest/ElidePackageManifest$SourceSet$Companion {
	public final fun parse (Ljava/lang/String;)Lelide/tooling/project/manifest/ElidePackageManifest$SourceSet;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/ElidePackageManifest$TestingSettings : java/lang/Record {
	public static final field Companion Lelide/tooling/project/manifest/ElidePackageManifest$TestingSettings$Companion;
	public fun <init> ()V
	public fun <init> (Lelide/tooling/project/manifest/ElidePackageManifest$CoverageSettings;)V
	public synthetic fun <init> (Lelide/tooling/project/manifest/ElidePackageManifest$CoverageSettings;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Lelide/tooling/project/manifest/ElidePackageManifest$CoverageSettings;
	public final fun copy (Lelide/tooling/project/manifest/ElidePackageManifest$CoverageSettings;)Lelide/tooling/project/manifest/ElidePackageManifest$TestingSettings;
	public static synthetic fun copy$default (Lelide/tooling/project/manifest/ElidePackageManifest$TestingSettings;Lelide/tooling/project/manifest/ElidePackageManifest$CoverageSettings;ILjava/lang/Object;)Lelide/tooling/project/manifest/ElidePackageManifest$TestingSettings;
	public final fun coverage ()Lelide/tooling/project/manifest/ElidePackageManifest$CoverageSettings;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/project/manifest/ElidePackageManifest$TestingSettings$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/ElidePackageManifest$TestingSettings$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/manifest/ElidePackageManifest$TestingSettings;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/manifest/ElidePackageManifest$TestingSettings;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/manifest/ElidePackageManifest$TestingSettings$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/ElidePackageManifest$TypeScriptSettings : java/lang/Record {
	public static final field Companion Lelide/tooling/project/manifest/ElidePackageManifest$TypeScriptSettings$Companion;
	public fun <init> ()V
	public fun <init> (Z)V
	public synthetic fun <init> (ZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Z
	public final fun copy (Z)Lelide/tooling/project/manifest/ElidePackageManifest$TypeScriptSettings;
	public static synthetic fun copy$default (Lelide/tooling/project/manifest/ElidePackageManifest$TypeScriptSettings;ZILjava/lang/Object;)Lelide/tooling/project/manifest/ElidePackageManifest$TypeScriptSettings;
	public final fun debug ()Z
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/project/manifest/ElidePackageManifest$TypeScriptSettings$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/ElidePackageManifest$TypeScriptSettings$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/manifest/ElidePackageManifest$TypeScriptSettings;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/manifest/ElidePackageManifest$TypeScriptSettings;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/manifest/ElidePackageManifest$TypeScriptSettings$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/ElidePackageManifestKt {
	public static final fun merge (Lelide/tooling/project/manifest/ElidePackageManifest$DependencyResolution;Lelide/tooling/project/manifest/ElidePackageManifest$DependencyResolution;)Lelide/tooling/project/manifest/ElidePackageManifest$DependencyResolution;
	public static final fun merge (Lelide/tooling/project/manifest/ElidePackageManifest$GemDependencies;Lelide/tooling/project/manifest/ElidePackageManifest$GemDependencies;)Lelide/tooling/project/manifest/ElidePackageManifest$GemDependencies;
	public static final fun merge (Lelide/tooling/project/manifest/ElidePackageManifest$MavenDependencies;Lelide/tooling/project/manifest/ElidePackageManifest$MavenDependencies;)Lelide/tooling/project/manifest/ElidePackageManifest$MavenDependencies;
	public static final fun merge (Lelide/tooling/project/manifest/ElidePackageManifest$NpmDependencies;Lelide/tooling/project/manifest/ElidePackageManifest$NpmDependencies;)Lelide/tooling/project/manifest/ElidePackageManifest$NpmDependencies;
	public static final fun merge (Lelide/tooling/project/manifest/ElidePackageManifest$PipDependencies;Lelide/tooling/project/manifest/ElidePackageManifest$PipDependencies;)Lelide/tooling/project/manifest/ElidePackageManifest$PipDependencies;
	public static final fun merge (Lelide/tooling/project/manifest/ElidePackageManifest;Lelide/tooling/project/manifest/ElidePackageManifest;)Lelide/tooling/project/manifest/ElidePackageManifest;
}

public final class elide/tooling/project/manifest/GradleCatalogManifest : java/lang/Record, elide/tooling/project/manifest/PackageManifest {
	public static final field Companion Lelide/tooling/project/manifest/GradleCatalogManifest$Companion;
	public fun <init> (Ljava/nio/file/Path;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V
	public final fun bundles ()Ljava/util/Map;
	public final fun component1 ()Ljava/nio/file/Path;
	public final fun component2 ()Ljava/util/Map;
	public final fun component3 ()Ljava/util/Map;
	public final fun component4 ()Ljava/util/Map;
	public final fun component5 ()Ljava/util/Map;
	public final fun copy (Ljava/nio/file/Path;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)Lelide/tooling/project/manifest/GradleCatalogManifest;
	public static synthetic fun copy$default (Lelide/tooling/project/manifest/GradleCatalogManifest;Ljava/nio/file/Path;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;ILjava/lang/Object;)Lelide/tooling/project/manifest/GradleCatalogManifest;
	public fun ecosystem ()Lelide/tooling/project/ProjectEcosystem;
	public fun equals (Ljava/lang/Object;)Z
	public synthetic fun getEcosystem ()Lelide/tooling/project/ProjectEcosystem;
	public fun hashCode ()I
	public final fun libraries ()Ljava/util/Map;
	public final fun path ()Ljava/nio/file/Path;
	public final fun plugins ()Ljava/util/Map;
	public fun toString ()Ljava/lang/String;
	public final fun versions ()Ljava/util/Map;
}

public final class elide/tooling/project/manifest/GradleCatalogManifest$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/GradleCatalogManifest$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/manifest/GradleCatalogManifest;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/manifest/GradleCatalogManifest;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/manifest/GradleCatalogManifest$CatalogBundle : java/lang/Record, elide/tooling/project/manifest/GradleCatalogManifest$CatalogBundleDefinition {
	public static final field Companion Lelide/tooling/project/manifest/GradleCatalogManifest$CatalogBundle$Companion;
	public fun <init> ()V
	public final fun component1 ()Ljava/util/List;
	public final fun copy (Ljava/util/List;)Lelide/tooling/project/manifest/GradleCatalogManifest$CatalogBundle;
	public static synthetic fun copy$default (Lelide/tooling/project/manifest/GradleCatalogManifest$CatalogBundle;Ljava/util/List;ILjava/lang/Object;)Lelide/tooling/project/manifest/GradleCatalogManifest$CatalogBundle;
	public fun equals (Ljava/lang/Object;)Z
	public synthetic fun getLibraries ()Ljava/util/List;
	public fun hashCode ()I
	public fun libraries ()Ljava/util/List;
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/project/manifest/GradleCatalogManifest$CatalogBundle$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/GradleCatalogManifest$CatalogBundle$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/manifest/GradleCatalogManifest$CatalogBundle;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/manifest/GradleCatalogManifest$CatalogBundle;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/manifest/GradleCatalogManifest$CatalogBundle$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract interface class elide/tooling/project/manifest/GradleCatalogManifest$CatalogBundleDefinition : elide/tooling/project/manifest/GradleCatalogManifest$SymbolicCatalogEntry {
	public static final field Companion Lelide/tooling/project/manifest/GradleCatalogManifest$CatalogBundleDefinition$Companion;
	public abstract fun getLibraries ()Ljava/util/List;
}

public final class elide/tooling/project/manifest/GradleCatalogManifest$CatalogBundleDefinition$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/GradleCatalogManifest$CatalogLibrary : java/lang/Record, elide/tooling/project/manifest/GradleCatalogManifest$CatalogLibraryDefinition {
	public static final field Companion Lelide/tooling/project/manifest/GradleCatalogManifest$CatalogLibrary$Companion;
	public fun <init> ()V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/lang/String;
	public final fun component4 ()Ljava/lang/String;
	public final fun component5 ()Lelide/tooling/project/manifest/GradleCatalogManifest$CatalogVersionSpec;
	public fun coordinate ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lelide/tooling/project/manifest/GradleCatalogManifest$CatalogVersionSpec;)Lelide/tooling/project/manifest/GradleCatalogManifest$CatalogLibrary;
	public static synthetic fun copy$default (Lelide/tooling/project/manifest/GradleCatalogManifest$CatalogLibrary;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lelide/tooling/project/manifest/GradleCatalogManifest$CatalogVersionSpec;ILjava/lang/Object;)Lelide/tooling/project/manifest/GradleCatalogManifest$CatalogLibrary;
	public fun equals (Ljava/lang/Object;)Z
	public synthetic fun getCoordinate ()Ljava/lang/String;
	public synthetic fun getGroup ()Ljava/lang/String;
	public synthetic fun getModule ()Ljava/lang/String;
	public synthetic fun getName ()Ljava/lang/String;
	public synthetic fun getVersion ()Lelide/tooling/project/manifest/GradleCatalogManifest$CatalogVersionSpec;
	public fun group ()Ljava/lang/String;
	public fun hashCode ()I
	public fun module ()Ljava/lang/String;
	public fun name ()Ljava/lang/String;
	public fun toString ()Ljava/lang/String;
	public fun version ()Lelide/tooling/project/manifest/GradleCatalogManifest$CatalogVersionSpec;
}

public final class elide/tooling/project/manifest/GradleCatalogManifest$CatalogLibrary$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/GradleCatalogManifest$CatalogLibrary$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/manifest/GradleCatalogManifest$CatalogLibrary;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/manifest/GradleCatalogManifest$CatalogLibrary;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/manifest/GradleCatalogManifest$CatalogLibrary$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract interface class elide/tooling/project/manifest/GradleCatalogManifest$CatalogLibraryDefinition : elide/tooling/project/manifest/GradleCatalogManifest$SymbolicCatalogEntry {
	public static final field Companion Lelide/tooling/project/manifest/GradleCatalogManifest$CatalogLibraryDefinition$Companion;
	public abstract fun getCoordinate ()Ljava/lang/String;
	public abstract fun getGroup ()Ljava/lang/String;
	public abstract fun getModule ()Ljava/lang/String;
	public abstract fun getName ()Ljava/lang/String;
	public abstract fun getVersion ()Lelide/tooling/project/manifest/GradleCatalogManifest$CatalogVersionSpec;
}

public final class elide/tooling/project/manifest/GradleCatalogManifest$CatalogLibraryDefinition$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/GradleCatalogManifest$CatalogPlugin : java/lang/Record, elide/tooling/project/manifest/GradleCatalogManifest$CatalogPluginDefinition {
	public static final field Companion Lelide/tooling/project/manifest/GradleCatalogManifest$CatalogPlugin$Companion;
	public fun <init> ()V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Lelide/tooling/project/manifest/GradleCatalogManifest$CatalogVersionSpec;
	public final fun copy (Ljava/lang/String;Lelide/tooling/project/manifest/GradleCatalogManifest$CatalogVersionSpec;)Lelide/tooling/project/manifest/GradleCatalogManifest$CatalogPlugin;
	public static synthetic fun copy$default (Lelide/tooling/project/manifest/GradleCatalogManifest$CatalogPlugin;Ljava/lang/String;Lelide/tooling/project/manifest/GradleCatalogManifest$CatalogVersionSpec;ILjava/lang/Object;)Lelide/tooling/project/manifest/GradleCatalogManifest$CatalogPlugin;
	public fun equals (Ljava/lang/Object;)Z
	public synthetic fun getId ()Ljava/lang/String;
	public synthetic fun getVersion ()Lelide/tooling/project/manifest/GradleCatalogManifest$CatalogVersionSpec;
	public fun hashCode ()I
	public fun id ()Ljava/lang/String;
	public fun toString ()Ljava/lang/String;
	public fun version ()Lelide/tooling/project/manifest/GradleCatalogManifest$CatalogVersionSpec;
}

public final class elide/tooling/project/manifest/GradleCatalogManifest$CatalogPlugin$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/GradleCatalogManifest$CatalogPlugin$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/manifest/GradleCatalogManifest$CatalogPlugin;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/manifest/GradleCatalogManifest$CatalogPlugin;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/manifest/GradleCatalogManifest$CatalogPlugin$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract interface class elide/tooling/project/manifest/GradleCatalogManifest$CatalogPluginDefinition : elide/tooling/project/manifest/GradleCatalogManifest$SymbolicCatalogEntry {
	public static final field Companion Lelide/tooling/project/manifest/GradleCatalogManifest$CatalogPluginDefinition$Companion;
	public abstract fun getId ()Ljava/lang/String;
	public abstract fun getVersion ()Lelide/tooling/project/manifest/GradleCatalogManifest$CatalogVersionSpec;
}

public final class elide/tooling/project/manifest/GradleCatalogManifest$CatalogPluginDefinition$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract interface class elide/tooling/project/manifest/GradleCatalogManifest$CatalogVersionSpec {
	public static final field Companion Lelide/tooling/project/manifest/GradleCatalogManifest$CatalogVersionSpec$Companion;
	public fun provideVersion (Ljava/util/Map;)Ljava/lang/String;
}

public final class elide/tooling/project/manifest/GradleCatalogManifest$CatalogVersionSpec$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/GradleCatalogManifest$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/GradleCatalogManifest$NoVersion : elide/tooling/project/manifest/GradleCatalogManifest$CatalogVersionSpec {
	public static final field INSTANCE Lelide/tooling/project/manifest/GradleCatalogManifest$NoVersion;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
	public fun toString ()Ljava/lang/String;
}

public abstract interface class elide/tooling/project/manifest/GradleCatalogManifest$SymbolicCatalogEntry {
}

public final class elide/tooling/project/manifest/GradleCatalogManifest$VersionRef : java/lang/Record, elide/tooling/project/manifest/GradleCatalogManifest$CatalogVersionSpec, elide/tooling/project/manifest/GradleCatalogManifest$SymbolicCatalogEntry {
	public static final field Companion Lelide/tooling/project/manifest/GradleCatalogManifest$VersionRef$Companion;
	public final fun component1 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;)Lelide/tooling/project/manifest/GradleCatalogManifest$VersionRef;
	public static synthetic fun copy$default (Lelide/tooling/project/manifest/GradleCatalogManifest$VersionRef;Ljava/lang/String;ILjava/lang/Object;)Lelide/tooling/project/manifest/GradleCatalogManifest$VersionRef;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun provideVersion (Ljava/util/Map;)Ljava/lang/String;
	public final fun ref ()Ljava/lang/String;
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/project/manifest/GradleCatalogManifest$VersionRef$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/GradleCatalogManifest$VersionRef$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/manifest/GradleCatalogManifest$VersionRef;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/manifest/GradleCatalogManifest$VersionRef;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/manifest/GradleCatalogManifest$VersionRef$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/GradleCatalogManifest$VersionSpec : java/lang/Record, elide/tooling/project/manifest/GradleCatalogManifest$CatalogVersionSpec, elide/tooling/project/manifest/GradleCatalogManifest$SymbolicCatalogEntry {
	public static final field Companion Lelide/tooling/project/manifest/GradleCatalogManifest$VersionSpec$Companion;
	public final fun component1 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;)Lelide/tooling/project/manifest/GradleCatalogManifest$VersionSpec;
	public static synthetic fun copy$default (Lelide/tooling/project/manifest/GradleCatalogManifest$VersionSpec;Ljava/lang/String;ILjava/lang/Object;)Lelide/tooling/project/manifest/GradleCatalogManifest$VersionSpec;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun provideVersion (Ljava/util/Map;)Ljava/lang/String;
	public fun toString ()Ljava/lang/String;
	public final fun version ()Ljava/lang/String;
}

public final class elide/tooling/project/manifest/GradleCatalogManifest$VersionSpec$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/GradleCatalogManifest$VersionSpec$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/manifest/GradleCatalogManifest$VersionSpec;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/manifest/GradleCatalogManifest$VersionSpec;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/manifest/GradleCatalogManifest$VersionSpec$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/MavenPomManifest : java/lang/Record, elide/tooling/project/manifest/PackageManifest {
	public static final field Companion Lelide/tooling/project/manifest/MavenPomManifest$Companion;
	public fun <init> (Ljava/nio/file/Path;Lorg/apache/maven/model/Model;)V
	public final fun component1 ()Ljava/nio/file/Path;
	public final fun component2 ()Lorg/apache/maven/model/Model;
	public final fun copy (Ljava/nio/file/Path;Lorg/apache/maven/model/Model;)Lelide/tooling/project/manifest/MavenPomManifest;
	public static synthetic fun copy$default (Lelide/tooling/project/manifest/MavenPomManifest;Ljava/nio/file/Path;Lorg/apache/maven/model/Model;ILjava/lang/Object;)Lelide/tooling/project/manifest/MavenPomManifest;
	public fun ecosystem ()Lelide/tooling/project/ProjectEcosystem;
	public fun equals (Ljava/lang/Object;)Z
	public synthetic fun getEcosystem ()Lelide/tooling/project/ProjectEcosystem;
	public fun hashCode ()I
	public final fun model ()Lorg/apache/maven/model/Model;
	public final fun path ()Ljava/nio/file/Path;
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/project/manifest/MavenPomManifest$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/MavenPomManifest$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/manifest/MavenPomManifest;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/manifest/MavenPomManifest;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/manifest/MavenPomManifest$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/NodePackageManifest : java/lang/Record, elide/tooling/project/manifest/PackageManifest {
	public static final field Companion Lelide/tooling/project/manifest/NodePackageManifest$Companion;
	public fun <init> ()V
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Ljava/lang/String;Lelide/tooling/project/manifest/NodePackageManifest$ProjectBugs;Ljava/lang/String;Lelide/tooling/project/manifest/NodePackageManifest$ProjectPerson;Ljava/util/List;Lelide/tooling/project/manifest/NodePackageManifest$ProjectFunding;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Lelide/tooling/project/manifest/NodePackageManifest$ProjectBins;Lelide/tooling/project/manifest/NodePackageManifest$ProjectMans;Lelide/tooling/project/manifest/NodePackageManifest$ProjectDirectories;Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/List;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/List;Ljava/util/List;ZLjava/util/Map;Ljava/util/List;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Ljava/lang/String;Lelide/tooling/project/manifest/NodePackageManifest$ProjectBugs;Ljava/lang/String;Lelide/tooling/project/manifest/NodePackageManifest$ProjectPerson;Ljava/util/List;Lelide/tooling/project/manifest/NodePackageManifest$ProjectFunding;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Lelide/tooling/project/manifest/NodePackageManifest$ProjectBins;Lelide/tooling/project/manifest/NodePackageManifest$ProjectMans;Lelide/tooling/project/manifest/NodePackageManifest$ProjectDirectories;Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/List;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/List;Ljava/util/List;ZLjava/util/Map;Ljava/util/List;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun author ()Lelide/tooling/project/manifest/NodePackageManifest$ProjectPerson;
	public final fun bin ()Lelide/tooling/project/manifest/NodePackageManifest$ProjectBins;
	public final fun browser ()Ljava/lang/String;
	public final fun bugs ()Lelide/tooling/project/manifest/NodePackageManifest$ProjectBugs;
	public final fun bundleDependencies ()Ljava/util/List;
	public final fun component1 ()Ljava/lang/String;
	public final fun component10 ()Lelide/tooling/project/manifest/NodePackageManifest$ProjectFunding;
	public final fun component11 ()Ljava/util/List;
	public final fun component12 ()Ljava/lang/String;
	public final fun component13 ()Ljava/lang/String;
	public final fun component14 ()Lelide/tooling/project/manifest/NodePackageManifest$ProjectBins;
	public final fun component15 ()Lelide/tooling/project/manifest/NodePackageManifest$ProjectMans;
	public final fun component16 ()Lelide/tooling/project/manifest/NodePackageManifest$ProjectDirectories;
	public final fun component17 ()Ljava/lang/String;
	public final fun component18 ()Ljava/util/Map;
	public final fun component19 ()Ljava/util/Map;
	public final fun component2 ()Ljava/lang/String;
	public final fun component20 ()Ljava/util/Map;
	public final fun component21 ()Ljava/util/Map;
	public final fun component22 ()Ljava/util/Map;
	public final fun component23 ()Ljava/util/Map;
	public final fun component24 ()Ljava/util/List;
	public final fun component25 ()Ljava/util/Map;
	public final fun component26 ()Ljava/util/Map;
	public final fun component27 ()Ljava/util/Map;
	public final fun component28 ()Ljava/util/List;
	public final fun component29 ()Ljava/util/List;
	public final fun component3 ()Ljava/lang/String;
	public final fun component30 ()Z
	public final fun component31 ()Ljava/util/Map;
	public final fun component32 ()Ljava/util/List;
	public final fun component4 ()Ljava/util/List;
	public final fun component5 ()Ljava/lang/String;
	public final fun component6 ()Lelide/tooling/project/manifest/NodePackageManifest$ProjectBugs;
	public final fun component7 ()Ljava/lang/String;
	public final fun component8 ()Lelide/tooling/project/manifest/NodePackageManifest$ProjectPerson;
	public final fun component9 ()Ljava/util/List;
	public final fun config ()Ljava/util/Map;
	public final fun contributors ()Ljava/util/List;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Ljava/lang/String;Lelide/tooling/project/manifest/NodePackageManifest$ProjectBugs;Ljava/lang/String;Lelide/tooling/project/manifest/NodePackageManifest$ProjectPerson;Ljava/util/List;Lelide/tooling/project/manifest/NodePackageManifest$ProjectFunding;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Lelide/tooling/project/manifest/NodePackageManifest$ProjectBins;Lelide/tooling/project/manifest/NodePackageManifest$ProjectMans;Lelide/tooling/project/manifest/NodePackageManifest$ProjectDirectories;Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/List;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/List;Ljava/util/List;ZLjava/util/Map;Ljava/util/List;)Lelide/tooling/project/manifest/NodePackageManifest;
	public static synthetic fun copy$default (Lelide/tooling/project/manifest/NodePackageManifest;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Ljava/lang/String;Lelide/tooling/project/manifest/NodePackageManifest$ProjectBugs;Ljava/lang/String;Lelide/tooling/project/manifest/NodePackageManifest$ProjectPerson;Ljava/util/List;Lelide/tooling/project/manifest/NodePackageManifest$ProjectFunding;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Lelide/tooling/project/manifest/NodePackageManifest$ProjectBins;Lelide/tooling/project/manifest/NodePackageManifest$ProjectMans;Lelide/tooling/project/manifest/NodePackageManifest$ProjectDirectories;Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/List;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/List;Ljava/util/List;ZLjava/util/Map;Ljava/util/List;ILjava/lang/Object;)Lelide/tooling/project/manifest/NodePackageManifest;
	public final fun cpu ()Ljava/util/List;
	public final fun dependencies ()Ljava/util/Map;
	public final fun description ()Ljava/lang/String;
	public final fun devDependencies ()Ljava/util/Map;
	public final fun directories ()Lelide/tooling/project/manifest/NodePackageManifest$ProjectDirectories;
	public fun ecosystem ()Lelide/tooling/project/ProjectEcosystem;
	public final fun engines ()Ljava/util/Map;
	public fun equals (Ljava/lang/Object;)Z
	public final fun files ()Ljava/util/List;
	public final fun funding ()Lelide/tooling/project/manifest/NodePackageManifest$ProjectFunding;
	public synthetic fun getEcosystem ()Lelide/tooling/project/ProjectEcosystem;
	public fun hashCode ()I
	public final fun homepage ()Ljava/lang/String;
	public final fun keywords ()Ljava/util/List;
	public final fun license ()Ljava/lang/String;
	public final fun main ()Ljava/lang/String;
	public final fun man ()Lelide/tooling/project/manifest/NodePackageManifest$ProjectMans;
	public final fun name ()Ljava/lang/String;
	public final fun optionalDependencies ()Ljava/util/Map;
	public final fun os ()Ljava/util/List;
	public final fun overrides ()Ljava/util/Map;
	public final fun peerDependencies ()Ljava/util/Map;
	public final fun peerDependenciesMeta ()Ljava/util/Map;
	public final fun private ()Z
	public final fun publishConfig ()Ljava/util/Map;
	public final fun repository ()Ljava/lang/String;
	public final fun scripts ()Ljava/util/Map;
	public fun toString ()Ljava/lang/String;
	public final fun version ()Ljava/lang/String;
	public final fun workspaces ()Ljava/util/List;
}

public final class elide/tooling/project/manifest/NodePackageManifest$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/NodePackageManifest$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/manifest/NodePackageManifest;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/manifest/NodePackageManifest;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/manifest/NodePackageManifest$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract interface class elide/tooling/project/manifest/NodePackageManifest$PackageOverride {
	public static final field Companion Lelide/tooling/project/manifest/NodePackageManifest$PackageOverride$Companion;
}

public final class elide/tooling/project/manifest/NodePackageManifest$PackageOverride$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/NodePackageManifest$PackageOverride$PackageOverrideMap : java/lang/Record, elide/tooling/project/manifest/NodePackageManifest$ProjectRepo {
	public static final field Companion Lelide/tooling/project/manifest/NodePackageManifest$PackageOverride$PackageOverrideMap$Companion;
	public fun <init> ()V
	public fun <init> (Ljava/util/Map;)V
	public synthetic fun <init> (Ljava/util/Map;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/util/Map;
	public final fun copy (Ljava/util/Map;)Lelide/tooling/project/manifest/NodePackageManifest$PackageOverride$PackageOverrideMap;
	public static synthetic fun copy$default (Lelide/tooling/project/manifest/NodePackageManifest$PackageOverride$PackageOverrideMap;Ljava/util/Map;ILjava/lang/Object;)Lelide/tooling/project/manifest/NodePackageManifest$PackageOverride$PackageOverrideMap;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun inner ()Ljava/util/Map;
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/project/manifest/NodePackageManifest$PackageOverride$PackageOverrideMap$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/NodePackageManifest$PackageOverride$PackageOverrideMap$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/manifest/NodePackageManifest$PackageOverride$PackageOverrideMap;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/manifest/NodePackageManifest$PackageOverride$PackageOverrideMap;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/manifest/NodePackageManifest$PackageOverride$PackageOverrideMap$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/NodePackageManifest$PackageOverride$PackageOverrideString : java/lang/Record, elide/tooling/project/manifest/NodePackageManifest$ProjectRepo {
	public static final field Companion Lelide/tooling/project/manifest/NodePackageManifest$PackageOverride$PackageOverrideString$Companion;
	public fun <init> ()V
	public fun <init> (Ljava/lang/String;)V
	public synthetic fun <init> (Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;)Lelide/tooling/project/manifest/NodePackageManifest$PackageOverride$PackageOverrideString;
	public static synthetic fun copy$default (Lelide/tooling/project/manifest/NodePackageManifest$PackageOverride$PackageOverrideString;Ljava/lang/String;ILjava/lang/Object;)Lelide/tooling/project/manifest/NodePackageManifest$PackageOverride$PackageOverrideString;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun string ()Ljava/lang/String;
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/project/manifest/NodePackageManifest$PackageOverride$PackageOverrideString$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/NodePackageManifest$PackageOverride$PackageOverrideString$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/manifest/NodePackageManifest$PackageOverride$PackageOverrideString;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/manifest/NodePackageManifest$PackageOverride$PackageOverrideString;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/manifest/NodePackageManifest$PackageOverride$PackageOverrideString$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract interface class elide/tooling/project/manifest/NodePackageManifest$ProjectBins {
	public static final field Companion Lelide/tooling/project/manifest/NodePackageManifest$ProjectBins$Companion;
}

public final class elide/tooling/project/manifest/NodePackageManifest$ProjectBins$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/NodePackageManifest$ProjectBins$ProjectBinMap : java/lang/Record, elide/tooling/project/manifest/NodePackageManifest$ProjectBins {
	public static final field Companion Lelide/tooling/project/manifest/NodePackageManifest$ProjectBins$ProjectBinMap$Companion;
	public fun <init> ()V
	public fun <init> (Ljava/util/Map;)V
	public synthetic fun <init> (Ljava/util/Map;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun bins ()Ljava/util/Map;
	public final fun component1 ()Ljava/util/Map;
	public final fun copy (Ljava/util/Map;)Lelide/tooling/project/manifest/NodePackageManifest$ProjectBins$ProjectBinMap;
	public static synthetic fun copy$default (Lelide/tooling/project/manifest/NodePackageManifest$ProjectBins$ProjectBinMap;Ljava/util/Map;ILjava/lang/Object;)Lelide/tooling/project/manifest/NodePackageManifest$ProjectBins$ProjectBinMap;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/project/manifest/NodePackageManifest$ProjectBins$ProjectBinMap$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/NodePackageManifest$ProjectBins$ProjectBinMap$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/manifest/NodePackageManifest$ProjectBins$ProjectBinMap;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/manifest/NodePackageManifest$ProjectBins$ProjectBinMap;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/manifest/NodePackageManifest$ProjectBins$ProjectBinMap$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/NodePackageManifest$ProjectBins$ProjectBinString : java/lang/Record, elide/tooling/project/manifest/NodePackageManifest$ProjectBins {
	public static final field Companion Lelide/tooling/project/manifest/NodePackageManifest$ProjectBins$ProjectBinString$Companion;
	public fun <init> ()V
	public fun <init> (Ljava/lang/String;)V
	public synthetic fun <init> (Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;)Lelide/tooling/project/manifest/NodePackageManifest$ProjectBins$ProjectBinString;
	public static synthetic fun copy$default (Lelide/tooling/project/manifest/NodePackageManifest$ProjectBins$ProjectBinString;Ljava/lang/String;ILjava/lang/Object;)Lelide/tooling/project/manifest/NodePackageManifest$ProjectBins$ProjectBinString;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun string ()Ljava/lang/String;
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/project/manifest/NodePackageManifest$ProjectBins$ProjectBinString$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/NodePackageManifest$ProjectBins$ProjectBinString$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/manifest/NodePackageManifest$ProjectBins$ProjectBinString;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/manifest/NodePackageManifest$ProjectBins$ProjectBinString;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/manifest/NodePackageManifest$ProjectBins$ProjectBinString$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract interface class elide/tooling/project/manifest/NodePackageManifest$ProjectBugs {
	public static final field Companion Lelide/tooling/project/manifest/NodePackageManifest$ProjectBugs$Companion;
}

public final class elide/tooling/project/manifest/NodePackageManifest$ProjectBugs$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/NodePackageManifest$ProjectBugs$ProjectBugsConfig : java/lang/Record, elide/tooling/project/manifest/NodePackageManifest$ProjectBugs {
	public static final field Companion Lelide/tooling/project/manifest/NodePackageManifest$ProjectBugs$ProjectBugsConfig$Companion;
	public fun <init> ()V
	public fun <init> (Ljava/lang/String;Ljava/lang/String;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;)Lelide/tooling/project/manifest/NodePackageManifest$ProjectBugs$ProjectBugsConfig;
	public static synthetic fun copy$default (Lelide/tooling/project/manifest/NodePackageManifest$ProjectBugs$ProjectBugsConfig;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Lelide/tooling/project/manifest/NodePackageManifest$ProjectBugs$ProjectBugsConfig;
	public final fun email ()Ljava/lang/String;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public final fun url ()Ljava/lang/String;
}

public final class elide/tooling/project/manifest/NodePackageManifest$ProjectBugs$ProjectBugsConfig$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/NodePackageManifest$ProjectBugs$ProjectBugsConfig$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/manifest/NodePackageManifest$ProjectBugs$ProjectBugsConfig;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/manifest/NodePackageManifest$ProjectBugs$ProjectBugsConfig;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/manifest/NodePackageManifest$ProjectBugs$ProjectBugsConfig$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/NodePackageManifest$ProjectBugs$ProjectBugsUrl : java/lang/Record, elide/tooling/project/manifest/NodePackageManifest$ProjectBugs {
	public static final field Companion Lelide/tooling/project/manifest/NodePackageManifest$ProjectBugs$ProjectBugsUrl$Companion;
	public fun <init> ()V
	public fun <init> (Ljava/lang/String;)V
	public synthetic fun <init> (Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;)Lelide/tooling/project/manifest/NodePackageManifest$ProjectBugs$ProjectBugsUrl;
	public static synthetic fun copy$default (Lelide/tooling/project/manifest/NodePackageManifest$ProjectBugs$ProjectBugsUrl;Ljava/lang/String;ILjava/lang/Object;)Lelide/tooling/project/manifest/NodePackageManifest$ProjectBugs$ProjectBugsUrl;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public final fun url ()Ljava/lang/String;
}

public final class elide/tooling/project/manifest/NodePackageManifest$ProjectBugs$ProjectBugsUrl$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/NodePackageManifest$ProjectBugs$ProjectBugsUrl$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/manifest/NodePackageManifest$ProjectBugs$ProjectBugsUrl;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/manifest/NodePackageManifest$ProjectBugs$ProjectBugsUrl;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/manifest/NodePackageManifest$ProjectBugs$ProjectBugsUrl$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/NodePackageManifest$ProjectDirectories : java/lang/Record {
	public static final field Companion Lelide/tooling/project/manifest/NodePackageManifest$ProjectDirectories$Companion;
	public fun <init> ()V
	public fun <init> (Ljava/lang/String;Ljava/lang/String;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun bin ()Ljava/lang/String;
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;)Lelide/tooling/project/manifest/NodePackageManifest$ProjectDirectories;
	public static synthetic fun copy$default (Lelide/tooling/project/manifest/NodePackageManifest$ProjectDirectories;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Lelide/tooling/project/manifest/NodePackageManifest$ProjectDirectories;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun man ()Ljava/lang/String;
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/project/manifest/NodePackageManifest$ProjectDirectories$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/NodePackageManifest$ProjectDirectories$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/manifest/NodePackageManifest$ProjectDirectories;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/manifest/NodePackageManifest$ProjectDirectories;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/manifest/NodePackageManifest$ProjectDirectories$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract interface class elide/tooling/project/manifest/NodePackageManifest$ProjectFunding {
	public static final field Companion Lelide/tooling/project/manifest/NodePackageManifest$ProjectFunding$Companion;
}

public final class elide/tooling/project/manifest/NodePackageManifest$ProjectFunding$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/NodePackageManifest$ProjectFunding$ProjectMultiFunding : java/lang/Record, elide/tooling/project/manifest/NodePackageManifest$ProjectFunding {
	public static final field Companion Lelide/tooling/project/manifest/NodePackageManifest$ProjectFunding$ProjectMultiFunding$Companion;
	public fun <init> ()V
	public fun <init> (Ljava/util/List;)V
	public synthetic fun <init> (Ljava/util/List;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/util/List;
	public final fun copy (Ljava/util/List;)Lelide/tooling/project/manifest/NodePackageManifest$ProjectFunding$ProjectMultiFunding;
	public static synthetic fun copy$default (Lelide/tooling/project/manifest/NodePackageManifest$ProjectFunding$ProjectMultiFunding;Ljava/util/List;ILjava/lang/Object;)Lelide/tooling/project/manifest/NodePackageManifest$ProjectFunding$ProjectMultiFunding;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun list ()Ljava/util/List;
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/project/manifest/NodePackageManifest$ProjectFunding$ProjectMultiFunding$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/NodePackageManifest$ProjectFunding$ProjectMultiFunding$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/manifest/NodePackageManifest$ProjectFunding$ProjectMultiFunding;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/manifest/NodePackageManifest$ProjectFunding$ProjectMultiFunding;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/manifest/NodePackageManifest$ProjectFunding$ProjectMultiFunding$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/NodePackageManifest$ProjectFunding$ProjectSingleFunding : java/lang/Record, elide/tooling/project/manifest/NodePackageManifest$ProjectFunding {
	public static final field Companion Lelide/tooling/project/manifest/NodePackageManifest$ProjectFunding$ProjectSingleFunding$Companion;
	public fun <init> ()V
	public fun <init> (Lelide/tooling/project/manifest/NodePackageManifest$ProjectFundingEntry;)V
	public synthetic fun <init> (Lelide/tooling/project/manifest/NodePackageManifest$ProjectFundingEntry;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Lelide/tooling/project/manifest/NodePackageManifest$ProjectFundingEntry;
	public final fun copy (Lelide/tooling/project/manifest/NodePackageManifest$ProjectFundingEntry;)Lelide/tooling/project/manifest/NodePackageManifest$ProjectFunding$ProjectSingleFunding;
	public static synthetic fun copy$default (Lelide/tooling/project/manifest/NodePackageManifest$ProjectFunding$ProjectSingleFunding;Lelide/tooling/project/manifest/NodePackageManifest$ProjectFundingEntry;ILjava/lang/Object;)Lelide/tooling/project/manifest/NodePackageManifest$ProjectFunding$ProjectSingleFunding;
	public final fun entry ()Lelide/tooling/project/manifest/NodePackageManifest$ProjectFundingEntry;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/project/manifest/NodePackageManifest$ProjectFunding$ProjectSingleFunding$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/NodePackageManifest$ProjectFunding$ProjectSingleFunding$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/manifest/NodePackageManifest$ProjectFunding$ProjectSingleFunding;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/manifest/NodePackageManifest$ProjectFunding$ProjectSingleFunding;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/manifest/NodePackageManifest$ProjectFunding$ProjectSingleFunding$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract interface class elide/tooling/project/manifest/NodePackageManifest$ProjectFundingEntry {
	public static final field Companion Lelide/tooling/project/manifest/NodePackageManifest$ProjectFundingEntry$Companion;
}

public final class elide/tooling/project/manifest/NodePackageManifest$ProjectFundingEntry$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/NodePackageManifest$ProjectFundingEntry$ProjectFundingMap : java/lang/Record, elide/tooling/project/manifest/NodePackageManifest$ProjectFundingEntry {
	public static final field Companion Lelide/tooling/project/manifest/NodePackageManifest$ProjectFundingEntry$ProjectFundingMap$Companion;
	public fun <init> ()V
	public fun <init> (Ljava/lang/String;Ljava/lang/String;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;)Lelide/tooling/project/manifest/NodePackageManifest$ProjectFundingEntry$ProjectFundingMap;
	public static synthetic fun copy$default (Lelide/tooling/project/manifest/NodePackageManifest$ProjectFundingEntry$ProjectFundingMap;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Lelide/tooling/project/manifest/NodePackageManifest$ProjectFundingEntry$ProjectFundingMap;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public final fun type ()Ljava/lang/String;
	public final fun url ()Ljava/lang/String;
}

public final class elide/tooling/project/manifest/NodePackageManifest$ProjectFundingEntry$ProjectFundingMap$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/NodePackageManifest$ProjectFundingEntry$ProjectFundingMap$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/manifest/NodePackageManifest$ProjectFundingEntry$ProjectFundingMap;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/manifest/NodePackageManifest$ProjectFundingEntry$ProjectFundingMap;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/manifest/NodePackageManifest$ProjectFundingEntry$ProjectFundingMap$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/NodePackageManifest$ProjectFundingEntry$ProjectFundingString : java/lang/Record, elide/tooling/project/manifest/NodePackageManifest$ProjectFundingEntry {
	public static final field Companion Lelide/tooling/project/manifest/NodePackageManifest$ProjectFundingEntry$ProjectFundingString$Companion;
	public fun <init> ()V
	public fun <init> (Ljava/lang/String;)V
	public synthetic fun <init> (Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;)Lelide/tooling/project/manifest/NodePackageManifest$ProjectFundingEntry$ProjectFundingString;
	public static synthetic fun copy$default (Lelide/tooling/project/manifest/NodePackageManifest$ProjectFundingEntry$ProjectFundingString;Ljava/lang/String;ILjava/lang/Object;)Lelide/tooling/project/manifest/NodePackageManifest$ProjectFundingEntry$ProjectFundingString;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun string ()Ljava/lang/String;
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/project/manifest/NodePackageManifest$ProjectFundingEntry$ProjectFundingString$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/NodePackageManifest$ProjectFundingEntry$ProjectFundingString$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/manifest/NodePackageManifest$ProjectFundingEntry$ProjectFundingString;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/manifest/NodePackageManifest$ProjectFundingEntry$ProjectFundingString;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/manifest/NodePackageManifest$ProjectFundingEntry$ProjectFundingString$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract interface class elide/tooling/project/manifest/NodePackageManifest$ProjectMans {
	public static final field Companion Lelide/tooling/project/manifest/NodePackageManifest$ProjectMans$Companion;
}

public final class elide/tooling/project/manifest/NodePackageManifest$ProjectMans$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/NodePackageManifest$ProjectMans$ProjectManList : java/lang/Record, elide/tooling/project/manifest/NodePackageManifest$ProjectMans {
	public static final field Companion Lelide/tooling/project/manifest/NodePackageManifest$ProjectMans$ProjectManList$Companion;
	public fun <init> ()V
	public fun <init> (Ljava/util/List;)V
	public synthetic fun <init> (Ljava/util/List;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/util/List;
	public final fun copy (Ljava/util/List;)Lelide/tooling/project/manifest/NodePackageManifest$ProjectMans$ProjectManList;
	public static synthetic fun copy$default (Lelide/tooling/project/manifest/NodePackageManifest$ProjectMans$ProjectManList;Ljava/util/List;ILjava/lang/Object;)Lelide/tooling/project/manifest/NodePackageManifest$ProjectMans$ProjectManList;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun list ()Ljava/util/List;
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/project/manifest/NodePackageManifest$ProjectMans$ProjectManList$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/NodePackageManifest$ProjectMans$ProjectManList$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/manifest/NodePackageManifest$ProjectMans$ProjectManList;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/manifest/NodePackageManifest$ProjectMans$ProjectManList;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/manifest/NodePackageManifest$ProjectMans$ProjectManList$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/NodePackageManifest$ProjectMans$ProjectManString : java/lang/Record, elide/tooling/project/manifest/NodePackageManifest$ProjectMans {
	public static final field Companion Lelide/tooling/project/manifest/NodePackageManifest$ProjectMans$ProjectManString$Companion;
	public fun <init> ()V
	public fun <init> (Ljava/lang/String;)V
	public synthetic fun <init> (Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;)Lelide/tooling/project/manifest/NodePackageManifest$ProjectMans$ProjectManString;
	public static synthetic fun copy$default (Lelide/tooling/project/manifest/NodePackageManifest$ProjectMans$ProjectManString;Ljava/lang/String;ILjava/lang/Object;)Lelide/tooling/project/manifest/NodePackageManifest$ProjectMans$ProjectManString;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun string ()Ljava/lang/String;
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/project/manifest/NodePackageManifest$ProjectMans$ProjectManString$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/NodePackageManifest$ProjectMans$ProjectManString$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/manifest/NodePackageManifest$ProjectMans$ProjectManString;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/manifest/NodePackageManifest$ProjectMans$ProjectManString;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/manifest/NodePackageManifest$ProjectMans$ProjectManString$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract interface class elide/tooling/project/manifest/NodePackageManifest$ProjectPerson {
	public static final field Companion Lelide/tooling/project/manifest/NodePackageManifest$ProjectPerson$Companion;
}

public final class elide/tooling/project/manifest/NodePackageManifest$ProjectPerson$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/NodePackageManifest$ProjectPerson$ProjectPersonMap : java/lang/Record, elide/tooling/project/manifest/NodePackageManifest$ProjectBugs {
	public static final field Companion Lelide/tooling/project/manifest/NodePackageManifest$ProjectPerson$ProjectPersonMap$Companion;
	public fun <init> ()V
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lelide/tooling/project/manifest/NodePackageManifest$ProjectPerson$ProjectPersonMap;
	public static synthetic fun copy$default (Lelide/tooling/project/manifest/NodePackageManifest$ProjectPerson$ProjectPersonMap;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Lelide/tooling/project/manifest/NodePackageManifest$ProjectPerson$ProjectPersonMap;
	public final fun email ()Ljava/lang/String;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun name ()Ljava/lang/String;
	public fun toString ()Ljava/lang/String;
	public final fun url ()Ljava/lang/String;
}

public final class elide/tooling/project/manifest/NodePackageManifest$ProjectPerson$ProjectPersonMap$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/NodePackageManifest$ProjectPerson$ProjectPersonMap$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/manifest/NodePackageManifest$ProjectPerson$ProjectPersonMap;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/manifest/NodePackageManifest$ProjectPerson$ProjectPersonMap;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/manifest/NodePackageManifest$ProjectPerson$ProjectPersonMap$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/NodePackageManifest$ProjectPerson$ProjectPersonString : java/lang/Record, elide/tooling/project/manifest/NodePackageManifest$ProjectBugs {
	public static final field Companion Lelide/tooling/project/manifest/NodePackageManifest$ProjectPerson$ProjectPersonString$Companion;
	public fun <init> (Ljava/lang/String;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;)Lelide/tooling/project/manifest/NodePackageManifest$ProjectPerson$ProjectPersonString;
	public static synthetic fun copy$default (Lelide/tooling/project/manifest/NodePackageManifest$ProjectPerson$ProjectPersonString;Ljava/lang/String;ILjava/lang/Object;)Lelide/tooling/project/manifest/NodePackageManifest$ProjectPerson$ProjectPersonString;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun string ()Ljava/lang/String;
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/project/manifest/NodePackageManifest$ProjectPerson$ProjectPersonString$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/NodePackageManifest$ProjectPerson$ProjectPersonString$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/manifest/NodePackageManifest$ProjectPerson$ProjectPersonString;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/manifest/NodePackageManifest$ProjectPerson$ProjectPersonString;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/manifest/NodePackageManifest$ProjectPerson$ProjectPersonString$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract interface class elide/tooling/project/manifest/NodePackageManifest$ProjectRepo {
	public static final field Companion Lelide/tooling/project/manifest/NodePackageManifest$ProjectRepo$Companion;
}

public final class elide/tooling/project/manifest/NodePackageManifest$ProjectRepo$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/NodePackageManifest$ProjectRepo$ProjectRepoMap : java/lang/Record, elide/tooling/project/manifest/NodePackageManifest$ProjectRepo {
	public static final field Companion Lelide/tooling/project/manifest/NodePackageManifest$ProjectRepo$ProjectRepoMap$Companion;
	public fun <init> ()V
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lelide/tooling/project/manifest/NodePackageManifest$ProjectRepo$ProjectRepoMap;
	public static synthetic fun copy$default (Lelide/tooling/project/manifest/NodePackageManifest$ProjectRepo$ProjectRepoMap;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Lelide/tooling/project/manifest/NodePackageManifest$ProjectRepo$ProjectRepoMap;
	public final fun directory ()Ljava/lang/String;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public final fun type ()Ljava/lang/String;
	public final fun url ()Ljava/lang/String;
}

public final class elide/tooling/project/manifest/NodePackageManifest$ProjectRepo$ProjectRepoMap$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/NodePackageManifest$ProjectRepo$ProjectRepoMap$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/manifest/NodePackageManifest$ProjectRepo$ProjectRepoMap;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/manifest/NodePackageManifest$ProjectRepo$ProjectRepoMap;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/manifest/NodePackageManifest$ProjectRepo$ProjectRepoMap$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/NodePackageManifest$ProjectRepo$ProjectRepoString : java/lang/Record, elide/tooling/project/manifest/NodePackageManifest$ProjectRepo {
	public static final field Companion Lelide/tooling/project/manifest/NodePackageManifest$ProjectRepo$ProjectRepoString$Companion;
	public fun <init> ()V
	public fun <init> (Ljava/lang/String;)V
	public synthetic fun <init> (Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;)Lelide/tooling/project/manifest/NodePackageManifest$ProjectRepo$ProjectRepoString;
	public static synthetic fun copy$default (Lelide/tooling/project/manifest/NodePackageManifest$ProjectRepo$ProjectRepoString;Ljava/lang/String;ILjava/lang/Object;)Lelide/tooling/project/manifest/NodePackageManifest$ProjectRepo$ProjectRepoString;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun string ()Ljava/lang/String;
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/project/manifest/NodePackageManifest$ProjectRepo$ProjectRepoString$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/NodePackageManifest$ProjectRepo$ProjectRepoString$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/manifest/NodePackageManifest$ProjectRepo$ProjectRepoString;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/manifest/NodePackageManifest$ProjectRepo$ProjectRepoString;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/manifest/NodePackageManifest$ProjectRepo$ProjectRepoString$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract interface class elide/tooling/project/manifest/PackageManifest {
	public static final field Companion Lelide/tooling/project/manifest/PackageManifest$Companion;
	public abstract fun getEcosystem ()Lelide/tooling/project/ProjectEcosystem;
}

public final class elide/tooling/project/manifest/PackageManifest$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/PyProjectManifest : java/lang/Record, elide/tooling/project/manifest/PackageManifest {
	public static final field Companion Lelide/tooling/project/manifest/PyProjectManifest$Companion;
	public fun <init> (Lelide/tooling/project/manifest/PyProjectManifest$BuildSystemConfig;Lelide/tooling/project/manifest/PyProjectManifest$ProjectConfig;)V
	public final fun buildSystem ()Lelide/tooling/project/manifest/PyProjectManifest$BuildSystemConfig;
	public final fun component1 ()Lelide/tooling/project/manifest/PyProjectManifest$BuildSystemConfig;
	public final fun component2 ()Lelide/tooling/project/manifest/PyProjectManifest$ProjectConfig;
	public final fun copy (Lelide/tooling/project/manifest/PyProjectManifest$BuildSystemConfig;Lelide/tooling/project/manifest/PyProjectManifest$ProjectConfig;)Lelide/tooling/project/manifest/PyProjectManifest;
	public static synthetic fun copy$default (Lelide/tooling/project/manifest/PyProjectManifest;Lelide/tooling/project/manifest/PyProjectManifest$BuildSystemConfig;Lelide/tooling/project/manifest/PyProjectManifest$ProjectConfig;ILjava/lang/Object;)Lelide/tooling/project/manifest/PyProjectManifest;
	public fun ecosystem ()Lelide/tooling/project/ProjectEcosystem;
	public fun equals (Ljava/lang/Object;)Z
	public synthetic fun getEcosystem ()Lelide/tooling/project/ProjectEcosystem;
	public fun hashCode ()I
	public final fun project ()Lelide/tooling/project/manifest/PyProjectManifest$ProjectConfig;
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/project/manifest/PyProjectManifest$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/PyProjectManifest$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/manifest/PyProjectManifest;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/manifest/PyProjectManifest;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/manifest/PyProjectManifest$BuildSystemConfig : java/lang/Record {
	public static final field Companion Lelide/tooling/project/manifest/PyProjectManifest$BuildSystemConfig$Companion;
	public fun <init> ()V
	public fun <init> (Ljava/util/List;Ljava/lang/String;)V
	public synthetic fun <init> (Ljava/util/List;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun buildBackend ()Ljava/lang/String;
	public final fun component1 ()Ljava/util/List;
	public final fun component2 ()Ljava/lang/String;
	public final fun copy (Ljava/util/List;Ljava/lang/String;)Lelide/tooling/project/manifest/PyProjectManifest$BuildSystemConfig;
	public static synthetic fun copy$default (Lelide/tooling/project/manifest/PyProjectManifest$BuildSystemConfig;Ljava/util/List;Ljava/lang/String;ILjava/lang/Object;)Lelide/tooling/project/manifest/PyProjectManifest$BuildSystemConfig;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun requires ()Ljava/util/List;
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/project/manifest/PyProjectManifest$BuildSystemConfig$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/PyProjectManifest$BuildSystemConfig$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/manifest/PyProjectManifest$BuildSystemConfig;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/manifest/PyProjectManifest$BuildSystemConfig;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/manifest/PyProjectManifest$BuildSystemConfig$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/PyProjectManifest$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/PyProjectManifest$ProjectConfig : java/lang/Record {
	public static final field Companion Lelide/tooling/project/manifest/PyProjectManifest$ProjectConfig$Companion;
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Ljava/util/Map;Ljava/lang/String;Ljava/util/List;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Ljava/util/Map;Ljava/lang/String;Ljava/util/List;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun authors ()Ljava/util/List;
	public final fun classifiers ()Ljava/util/List;
	public final fun component1 ()Ljava/lang/String;
	public final fun component10 ()Ljava/lang/String;
	public final fun component11 ()Ljava/util/List;
	public final fun component12 ()Ljava/util/List;
	public final fun component13 ()Ljava/util/List;
	public final fun component14 ()Ljava/util/Map;
	public final fun component15 ()Ljava/util/Map;
	public final fun component16 ()Ljava/util/Map;
	public final fun component17 ()Ljava/util/Map;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/util/List;
	public final fun component4 ()Ljava/util/Map;
	public final fun component5 ()Ljava/lang/String;
	public final fun component6 ()Ljava/util/List;
	public final fun component7 ()Ljava/util/List;
	public final fun component8 ()Ljava/lang/String;
	public final fun component9 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Ljava/util/Map;Ljava/lang/String;Ljava/util/List;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)Lelide/tooling/project/manifest/PyProjectManifest$ProjectConfig;
	public static synthetic fun copy$default (Lelide/tooling/project/manifest/PyProjectManifest$ProjectConfig;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Ljava/util/Map;Ljava/lang/String;Ljava/util/List;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;ILjava/lang/Object;)Lelide/tooling/project/manifest/PyProjectManifest$ProjectConfig;
	public final fun dependencies ()Ljava/util/List;
	public final fun description ()Ljava/lang/String;
	public final fun entrypoints ()Ljava/util/Map;
	public fun equals (Ljava/lang/Object;)Z
	public final fun guiScripts ()Ljava/util/Map;
	public fun hashCode ()I
	public final fun keywords ()Ljava/util/List;
	public final fun license ()Ljava/lang/String;
	public final fun licenseFiles ()Ljava/util/List;
	public final fun maintainers ()Ljava/util/List;
	public final fun name ()Ljava/lang/String;
	public final fun optionalDependencies ()Ljava/util/Map;
	public final fun readme ()Ljava/lang/String;
	public final fun requiresPython ()Ljava/lang/String;
	public final fun scripts ()Ljava/util/Map;
	public fun toString ()Ljava/lang/String;
	public final fun urls ()Ljava/util/Map;
	public final fun version ()Ljava/lang/String;
}

public final class elide/tooling/project/manifest/PyProjectManifest$ProjectConfig$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/PyProjectManifest$ProjectConfig$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/manifest/PyProjectManifest$ProjectConfig;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/manifest/PyProjectManifest$ProjectConfig;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/manifest/PyProjectManifest$ProjectConfig$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/PyProjectManifest$ProjectPerson : java/lang/Record {
	public static final field Companion Lelide/tooling/project/manifest/PyProjectManifest$ProjectPerson$Companion;
	public fun <init> ()V
	public fun <init> (Ljava/lang/String;Ljava/lang/String;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;)Lelide/tooling/project/manifest/PyProjectManifest$ProjectPerson;
	public static synthetic fun copy$default (Lelide/tooling/project/manifest/PyProjectManifest$ProjectPerson;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Lelide/tooling/project/manifest/PyProjectManifest$ProjectPerson;
	public final fun email ()Ljava/lang/String;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun name ()Ljava/lang/String;
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/project/manifest/PyProjectManifest$ProjectPerson$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/PyProjectManifest$ProjectPerson$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lelide/tooling/project/manifest/PyProjectManifest$ProjectPerson;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lelide/tooling/project/manifest/PyProjectManifest$ProjectPerson;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class elide/tooling/project/manifest/PyProjectManifest$ProjectPerson$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/project/manifest/PythonRequirementsManifest : elide/tooling/project/manifest/PackageManifest {
	public static final field Companion Lelide/tooling/project/manifest/PythonRequirementsManifest$Companion;
	public static final synthetic fun box-impl (Ljava/util/List;)Lelide/tooling/project/manifest/PythonRequirementsManifest;
	public static fun constructor-impl (Ljava/util/List;)Ljava/util/List;
	public fun equals (Ljava/lang/Object;)Z
	public static fun equals-impl (Ljava/util/List;Ljava/lang/Object;)Z
	public static final fun equals-impl0 (Ljava/util/List;Ljava/util/List;)Z
	public final fun getDependencies ()Ljava/util/List;
	public fun getEcosystem ()Lelide/tooling/project/ProjectEcosystem;
	public static fun getEcosystem-impl (Ljava/util/List;)Lelide/tooling/project/ProjectEcosystem;
	public fun hashCode ()I
	public static fun hashCode-impl (Ljava/util/List;)I
	public fun toString ()Ljava/lang/String;
	public static fun toString-impl (Ljava/util/List;)Ljava/lang/String;
	public final synthetic fun unbox-impl ()Ljava/util/List;
}

public final class elide/tooling/project/manifest/PythonRequirementsManifest$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lelide/tooling/project/manifest/PythonRequirementsManifest$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun deserialize-wYB4BT0 (Lkotlinx/serialization/encoding/Decoder;)Ljava/util/List;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun serialize-a3yuNkU (Lkotlinx/serialization/encoding/Encoder;Ljava/util/List;)V
}

public final class elide/tooling/project/manifest/PythonRequirementsManifest$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class elide/tooling/py/resolver/PyPiResolver : elide/tooling/deps/DependencyResolver$PyPiResolver {
	public fun <init> ()V
	public fun close ()V
	public fun resolve (Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun seal (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class elide/tooling/registry/ResolverRegistry : elide/exec/Registry$Mutable {
	public static final field Companion Lelide/tooling/registry/ResolverRegistry$Companion;
	public fun <init> ()V
	public fun all ()Lkotlin/sequences/Sequence;
	public fun clear ()V
	public synthetic fun contains (Ljava/lang/Object;)Z
	public fun contains (Lkotlin/reflect/KClass;)Z
	public static final fun create ()Lelide/tooling/registry/ResolverRegistry;
	public synthetic fun get (Ljava/lang/Object;)Ljava/lang/Object;
	public fun get (Lkotlin/reflect/KClass;)Lelide/tooling/deps/DependencyResolver;
	public fun getCount-pVg5ArA ()I
	public fun getValue (Ljava/lang/Object;Lkotlin/reflect/KProperty;)Lelide/tooling/deps/DependencyResolver;
	public synthetic fun getValue (Ljava/lang/Object;Lkotlin/reflect/KProperty;)Ljava/lang/Object;
	public synthetic fun remove (Ljava/lang/Object;)Ljava/lang/Object;
	public fun remove (Lkotlin/reflect/KClass;)Lelide/tooling/deps/DependencyResolver;
	public synthetic fun set (Ljava/lang/Object;Ljava/lang/Object;)V
	public fun set (Lkotlin/reflect/KClass;Lelide/tooling/deps/DependencyResolver;)V
}

public final class elide/tooling/registry/ResolverRegistry$Companion {
	public final fun create ()Lelide/tooling/registry/ResolverRegistry;
}

public abstract class elide/tooling/runner/AbstractTestRunner : elide/tooling/runner/TestRunner, java/lang/AutoCloseable {
	public fun <init> (Lelide/tooling/runner/TestRunner$Config;Ljava/util/concurrent/Executor;Lelide/tooling/config/TestConfigurator$TestEventController;Lkotlin/jvm/functions/Function0;Lkotlin/time/TimeSource;)V
	public synthetic fun <init> (Lelide/tooling/runner/TestRunner$Config;Ljava/util/concurrent/Executor;Lelide/tooling/config/TestConfigurator$TestEventController;Lkotlin/jvm/functions/Function0;Lkotlin/time/TimeSource;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun awaitSettled (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun close ()V
	protected final fun fail (Ljava/lang/Throwable;)Lelide/runtime/intrinsics/testing/TestResult;
	public static synthetic fun fail$default (Lelide/tooling/runner/AbstractTestRunner;Ljava/lang/Throwable;ILjava/lang/Object;)Lelide/runtime/intrinsics/testing/TestResult;
	public fun getConfig ()Lelide/tooling/runner/TestRunner$Config;
	protected final fun getContextProvider ()Lkotlin/jvm/functions/Function0;
	public fun getEvents ()Lelide/tooling/config/TestConfigurator$TestEventController;
	public fun getExecutor ()Ljava/util/concurrent/Executor;
	protected final fun pass ()Lelide/runtime/intrinsics/testing/TestResult;
	protected fun resolve (Lelide/runtime/core/PolyglotContext;Lelide/runtime/intrinsics/testing/TestingRegistrar$RegisteredTest;)Lelide/runtime/intrinsics/testing/TestEntrypoint;
	protected abstract fun runTest (Lkotlinx/coroutines/CoroutineScope;Lelide/tooling/runner/AbstractTestRunner$TestRunRequest;)Lkotlinx/coroutines/Deferred;
	protected fun runnable (Lelide/runtime/core/PolyglotContext;Lelide/runtime/intrinsics/testing/TestingRegistrar$RegisteredTest;)Lelide/runtime/intrinsics/testing/Reason;
	protected final fun skip (Lelide/runtime/intrinsics/testing/Reason;)Lelide/runtime/intrinsics/testing/TestResult;
	protected final fun testExec (Lelide/tooling/runner/AbstractTestRunner$TestRunRequest;)V
	protected final fun testFailed (Lelide/tooling/runner/AbstractTestRunner$TestRunRequest;Ljava/lang/Throwable;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	protected final fun testSeen (Lelide/tooling/runner/AbstractTestRunner$TestRunRequest;)V
	protected final fun testSkipped (Lelide/runtime/intrinsics/testing/TestingRegistrar$RegisteredTest;Lelide/runtime/intrinsics/testing/Reason;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	protected final fun testSucceeded (Lelide/tooling/runner/AbstractTestRunner$TestRunRequest;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun tests (Lkotlinx/coroutines/CoroutineScope;Lkotlinx/coroutines/flow/Flow;ZLkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class elide/tooling/runner/AbstractTestRunner$TestCaseResult : java/lang/Record {
	public synthetic fun <init> (Lelide/runtime/intrinsics/testing/TestingRegistrar$TestScope;Lelide/runtime/intrinsics/testing/TestingRegistrar$RegisteredTest;Lelide/runtime/intrinsics/testing/TestResult;JLkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun case ()Lelide/runtime/intrinsics/testing/TestingRegistrar$RegisteredTest;
	public final fun component1 ()Lelide/runtime/intrinsics/testing/TestingRegistrar$TestScope;
	public final fun component2 ()Lelide/runtime/intrinsics/testing/TestingRegistrar$RegisteredTest;
	public final fun component3 ()Lelide/runtime/intrinsics/testing/TestResult;
	public final fun component4-UwyO8pc ()J
	public final fun copy-Wn2Vu4Y (Lelide/runtime/intrinsics/testing/TestingRegistrar$TestScope;Lelide/runtime/intrinsics/testing/TestingRegistrar$RegisteredTest;Lelide/runtime/intrinsics/testing/TestResult;J)Lelide/tooling/runner/AbstractTestRunner$TestCaseResult;
	public static synthetic fun copy-Wn2Vu4Y$default (Lelide/tooling/runner/AbstractTestRunner$TestCaseResult;Lelide/runtime/intrinsics/testing/TestingRegistrar$TestScope;Lelide/runtime/intrinsics/testing/TestingRegistrar$RegisteredTest;Lelide/runtime/intrinsics/testing/TestResult;JILjava/lang/Object;)Lelide/tooling/runner/AbstractTestRunner$TestCaseResult;
	public final fun duration ()J
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun result ()Lelide/runtime/intrinsics/testing/TestResult;
	public final fun scope ()Lelide/runtime/intrinsics/testing/TestingRegistrar$TestScope;
	public fun toString ()Ljava/lang/String;
}

protected final class elide/tooling/runner/AbstractTestRunner$TestExecutionResult : java/lang/Record {
	public synthetic fun <init> (Lelide/runtime/intrinsics/testing/TestingRegistrar$RegisteredTest;Lelide/runtime/intrinsics/testing/TestingRegistrar$TestScope;Lelide/runtime/intrinsics/testing/TestResult;JLkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Lelide/runtime/intrinsics/testing/TestingRegistrar$RegisteredTest;
	public final fun component2 ()Lelide/runtime/intrinsics/testing/TestingRegistrar$TestScope;
	public final fun component3 ()Lelide/runtime/intrinsics/testing/TestResult;
	public final fun component4-UwyO8pc ()J
	public final fun copy-Wn2Vu4Y (Lelide/runtime/intrinsics/testing/TestingRegistrar$RegisteredTest;Lelide/runtime/intrinsics/testing/TestingRegistrar$TestScope;Lelide/runtime/intrinsics/testing/TestResult;J)Lelide/tooling/runner/AbstractTestRunner$TestExecutionResult;
	public static synthetic fun copy-Wn2Vu4Y$default (Lelide/tooling/runner/AbstractTestRunner$TestExecutionResult;Lelide/runtime/intrinsics/testing/TestingRegistrar$RegisteredTest;Lelide/runtime/intrinsics/testing/TestingRegistrar$TestScope;Lelide/runtime/intrinsics/testing/TestResult;JILjava/lang/Object;)Lelide/tooling/runner/AbstractTestRunner$TestExecutionResult;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun result ()Lelide/runtime/intrinsics/testing/TestResult;
	public final fun scope ()Lelide/runtime/intrinsics/testing/TestingRegistrar$TestScope;
	public final fun test ()Lelide/runtime/intrinsics/testing/TestingRegistrar$RegisteredTest;
	public final fun timing ()J
	public fun toString ()Ljava/lang/String;
}

protected final class elide/tooling/runner/AbstractTestRunner$TestRunRequest : java/lang/Record {
	public fun <init> (Lelide/runtime/intrinsics/testing/TestingRegistrar$RegisteredTest;Lelide/runtime/intrinsics/testing/TestEntrypoint;Lelide/runtime/intrinsics/testing/TestingRegistrar$TestScope;Lelide/runtime/core/PolyglotContext;)V
	public final fun component1 ()Lelide/runtime/intrinsics/testing/TestingRegistrar$RegisteredTest;
	public final fun component2 ()Lelide/runtime/intrinsics/testing/TestEntrypoint;
	public final fun component3 ()Lelide/runtime/intrinsics/testing/TestingRegistrar$TestScope;
	public final fun component4 ()Lelide/runtime/core/PolyglotContext;
	public final fun context ()Lelide/runtime/core/PolyglotContext;
	public final fun copy (Lelide/runtime/intrinsics/testing/TestingRegistrar$RegisteredTest;Lelide/runtime/intrinsics/testing/TestEntrypoint;Lelide/runtime/intrinsics/testing/TestingRegistrar$TestScope;Lelide/runtime/core/PolyglotContext;)Lelide/tooling/runner/AbstractTestRunner$TestRunRequest;
	public static synthetic fun copy$default (Lelide/tooling/runner/AbstractTestRunner$TestRunRequest;Lelide/runtime/intrinsics/testing/TestingRegistrar$RegisteredTest;Lelide/runtime/intrinsics/testing/TestEntrypoint;Lelide/runtime/intrinsics/testing/TestingRegistrar$TestScope;Lelide/runtime/core/PolyglotContext;ILjava/lang/Object;)Lelide/tooling/runner/AbstractTestRunner$TestRunRequest;
	public final fun entry ()Lelide/runtime/intrinsics/testing/TestEntrypoint;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun scope ()Lelide/runtime/intrinsics/testing/TestingRegistrar$TestScope;
	public final fun test ()Lelide/runtime/intrinsics/testing/TestingRegistrar$RegisteredTest;
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/runner/AbstractTestRunner$TestRunResult : java/lang/Record {
	public synthetic fun <init> (Lelide/runtime/intrinsics/testing/TestResult;ILelide/tooling/runner/AbstractTestRunner$TestStats;Ljava/util/List;ZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public synthetic fun <init> (Lelide/runtime/intrinsics/testing/TestResult;ILelide/tooling/runner/AbstractTestRunner$TestStats;Ljava/util/List;ZLkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Lelide/runtime/intrinsics/testing/TestResult;
	public final fun component2-pVg5ArA ()I
	public final fun component3 ()Lelide/tooling/runner/AbstractTestRunner$TestStats;
	public final fun component4 ()Ljava/util/List;
	public final fun component5 ()Z
	public final fun copy-roUYKiI (Lelide/runtime/intrinsics/testing/TestResult;ILelide/tooling/runner/AbstractTestRunner$TestStats;Ljava/util/List;Z)Lelide/tooling/runner/AbstractTestRunner$TestRunResult;
	public static synthetic fun copy-roUYKiI$default (Lelide/tooling/runner/AbstractTestRunner$TestRunResult;Lelide/runtime/intrinsics/testing/TestResult;ILelide/tooling/runner/AbstractTestRunner$TestStats;Ljava/util/List;ZILjava/lang/Object;)Lelide/tooling/runner/AbstractTestRunner$TestRunResult;
	public final fun earlyExit ()Z
	public fun equals (Ljava/lang/Object;)Z
	public final fun exitCode ()I
	public fun hashCode ()I
	public final fun result ()Lelide/runtime/intrinsics/testing/TestResult;
	public final fun results ()Ljava/util/List;
	public final fun stats ()Lelide/tooling/runner/AbstractTestRunner$TestStats;
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/runner/AbstractTestRunner$TestStats : java/lang/Record {
	public synthetic fun <init> (IIIIIJLkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1-pVg5ArA ()I
	public final fun component2-pVg5ArA ()I
	public final fun component3-pVg5ArA ()I
	public final fun component4-pVg5ArA ()I
	public final fun component5-pVg5ArA ()I
	public final fun component6-UwyO8pc ()J
	public final fun copy-NqIEkfQ (IIIIIJ)Lelide/tooling/runner/AbstractTestRunner$TestStats;
	public static synthetic fun copy-NqIEkfQ$default (Lelide/tooling/runner/AbstractTestRunner$TestStats;IIIIIJILjava/lang/Object;)Lelide/tooling/runner/AbstractTestRunner$TestStats;
	public final fun duration ()J
	public fun equals (Ljava/lang/Object;)Z
	public final fun executions ()I
	public final fun fails ()I
	public fun hashCode ()I
	public final fun passes ()I
	public final fun skips ()I
	public final fun tests ()I
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/runner/ProcessRunner {
	public static final field INSTANCE Lelide/tooling/runner/ProcessRunner;
	public static final fun build (Ljava/nio/file/Path;Lkotlin/jvm/functions/Function1;)Lelide/tooling/runner/ProcessRunner$ProcessTaskBuilder;
	public static final fun buildFrom (Ljava/nio/file/Path;Lelide/tool/Arguments$Suite;Lelide/tool/Environment;Lelide/tooling/runner/ProcessRunner$StdStreams;Lelide/tooling/runner/ProcessRunner$ProcessOptions;)Lelide/tooling/runner/ProcessRunner$ProcessTaskBuilder;
	public static synthetic fun buildFrom$default (Ljava/nio/file/Path;Lelide/tool/Arguments$Suite;Lelide/tool/Environment;Lelide/tooling/runner/ProcessRunner$StdStreams;Lelide/tooling/runner/ProcessRunner$ProcessOptions;ILjava/lang/Object;)Lelide/tooling/runner/ProcessRunner$ProcessTaskBuilder;
	public static final fun spawnDefault (Lelide/tooling/runner/ProcessRunner$ProcessTaskBuilder;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class elide/tooling/runner/ProcessRunner$ProcessOptions : java/lang/Record {
	public fun <init> (Lelide/tooling/runner/ProcessRunner$ProcessShell;)V
	public final fun component1 ()Lelide/tooling/runner/ProcessRunner$ProcessShell;
	public final fun copy (Lelide/tooling/runner/ProcessRunner$ProcessShell;)Lelide/tooling/runner/ProcessRunner$ProcessOptions;
	public static synthetic fun copy$default (Lelide/tooling/runner/ProcessRunner$ProcessOptions;Lelide/tooling/runner/ProcessRunner$ProcessShell;ILjava/lang/Object;)Lelide/tooling/runner/ProcessRunner$ProcessOptions;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun shell ()Lelide/tooling/runner/ProcessRunner$ProcessShell;
	public fun toString ()Ljava/lang/String;
}

public abstract interface class elide/tooling/runner/ProcessRunner$ProcessShell {
}

public final class elide/tooling/runner/ProcessRunner$ProcessShell$Active : elide/tooling/runner/ProcessRunner$ProcessShell {
	public static final field INSTANCE Lelide/tooling/runner/ProcessRunner$ProcessShell$Active;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/runner/ProcessRunner$ProcessShell$ByPath : elide/tooling/runner/ProcessRunner$ProcessShell {
	public static final synthetic fun box-impl (Ljava/nio/file/Path;)Lelide/tooling/runner/ProcessRunner$ProcessShell$ByPath;
	public static fun constructor-impl (Ljava/nio/file/Path;)Ljava/nio/file/Path;
	public fun equals (Ljava/lang/Object;)Z
	public static fun equals-impl (Ljava/nio/file/Path;Ljava/lang/Object;)Z
	public static final fun equals-impl0 (Ljava/nio/file/Path;Ljava/nio/file/Path;)Z
	public final fun getPath ()Ljava/nio/file/Path;
	public fun hashCode ()I
	public static fun hashCode-impl (Ljava/nio/file/Path;)I
	public fun toString ()Ljava/lang/String;
	public static fun toString-impl (Ljava/nio/file/Path;)Ljava/lang/String;
	public final synthetic fun unbox-impl ()Ljava/nio/file/Path;
}

public final class elide/tooling/runner/ProcessRunner$ProcessShell$None : elide/tooling/runner/ProcessRunner$ProcessShell {
	public static final field INSTANCE Lelide/tooling/runner/ProcessRunner$ProcessShell$None;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract interface class elide/tooling/runner/ProcessRunner$ProcessStatus {
}

public final class elide/tooling/runner/ProcessRunner$ProcessStatus$Err : elide/tooling/runner/ProcessRunner$ProcessStatus {
	public static final synthetic fun box-impl (Ljava/lang/Throwable;)Lelide/tooling/runner/ProcessRunner$ProcessStatus$Err;
	public static fun constructor-impl (Ljava/lang/Throwable;)Ljava/lang/Throwable;
	public fun equals (Ljava/lang/Object;)Z
	public static fun equals-impl (Ljava/lang/Throwable;Ljava/lang/Object;)Z
	public static final fun equals-impl0 (Ljava/lang/Throwable;Ljava/lang/Throwable;)Z
	public final fun getErr ()Ljava/lang/Throwable;
	public fun hashCode ()I
	public static fun hashCode-impl (Ljava/lang/Throwable;)I
	public fun toString ()Ljava/lang/String;
	public static fun toString-impl (Ljava/lang/Throwable;)Ljava/lang/String;
	public final synthetic fun unbox-impl ()Ljava/lang/Throwable;
}

public abstract interface class elide/tooling/runner/ProcessRunner$ProcessStatus$Exit : elide/tooling/runner/ProcessRunner$ProcessStatus {
}

public final class elide/tooling/runner/ProcessRunner$ProcessStatus$ExitCode : elide/tooling/runner/ProcessRunner$ProcessStatus$Exit {
	public static final synthetic fun box-impl (I)Lelide/tooling/runner/ProcessRunner$ProcessStatus$ExitCode;
	public static fun constructor-impl (I)I
	public fun equals (Ljava/lang/Object;)Z
	public static fun equals-impl (ILjava/lang/Object;)Z
	public static final fun equals-impl0 (II)Z
	public final fun getCode ()I
	public fun hashCode ()I
	public static fun hashCode-impl (I)I
	public fun toString ()Ljava/lang/String;
	public static fun toString-impl (I)Ljava/lang/String;
	public final synthetic fun unbox-impl ()I
}

public final class elide/tooling/runner/ProcessRunner$ProcessStatus$ExitSignal : elide/tooling/runner/ProcessRunner$ProcessStatus$Exit {
	public static final synthetic fun box-impl (Ljava/lang/String;)Lelide/tooling/runner/ProcessRunner$ProcessStatus$ExitSignal;
	public static fun constructor-impl (Ljava/lang/String;)Ljava/lang/String;
	public fun equals (Ljava/lang/Object;)Z
	public static fun equals-impl (Ljava/lang/String;Ljava/lang/Object;)Z
	public static final fun equals-impl0 (Ljava/lang/String;Ljava/lang/String;)Z
	public final fun getSignal ()Ljava/lang/String;
	public fun hashCode ()I
	public static fun hashCode-impl (Ljava/lang/String;)I
	public fun toString ()Ljava/lang/String;
	public static fun toString-impl (Ljava/lang/String;)Ljava/lang/String;
	public final synthetic fun unbox-impl ()Ljava/lang/String;
}

public final class elide/tooling/runner/ProcessRunner$ProcessStatus$Pending : elide/tooling/runner/ProcessRunner$ProcessStatus {
	public static final field INSTANCE Lelide/tooling/runner/ProcessRunner$ProcessStatus$Pending;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/runner/ProcessRunner$ProcessStatus$Running : elide/tooling/runner/ProcessRunner$ProcessStatus {
	public static final field INSTANCE Lelide/tooling/runner/ProcessRunner$ProcessStatus$Running;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/runner/ProcessRunner$ProcessStatus$Success : elide/tooling/runner/ProcessRunner$ProcessStatus$Exit {
	public static final field INSTANCE Lelide/tooling/runner/ProcessRunner$ProcessStatus$Success;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract interface class elide/tooling/runner/ProcessRunner$ProcessTask : elide/tooling/runner/ProcessRunner$ProcessTaskInfo {
	public abstract fun asDeferred ()Lkotlinx/coroutines/Deferred;
	public abstract fun handle ()Ljava/lang/ProcessHandle;
	public abstract fun pid ()J
	public abstract fun process ()Ljava/lang/Process;
	public abstract fun status ()Lelide/tooling/runner/ProcessRunner$ProcessStatus;
}

public abstract interface class elide/tooling/runner/ProcessRunner$ProcessTaskBuilder : elide/tooling/runner/ProcessRunner$ProcessTaskInfo {
	public abstract fun getArgs ()Lelide/tool/MutableArguments;
	public abstract fun getEnv ()Lelide/tool/Environment;
	public abstract fun getExecutable ()Ljava/nio/file/Path;
	public abstract fun getOptions ()Lelide/tooling/runner/ProcessRunner$ProcessOptions;
	public abstract fun getStreams ()Lelide/tooling/runner/ProcessRunner$StdStreams;
	public abstract fun setArgs (Lelide/tool/MutableArguments;)V
	public abstract fun setEnv (Lelide/tool/Environment;)V
	public abstract fun setExecutable (Ljava/nio/file/Path;)V
	public abstract fun setOptions (Lelide/tooling/runner/ProcessRunner$ProcessOptions;)V
	public abstract fun setStreams (Lelide/tooling/runner/ProcessRunner$StdStreams;)V
	public abstract fun spawn (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class elide/tooling/runner/ProcessRunner$ProcessTaskInfo {
	public abstract fun getArgs ()Lelide/tool/Arguments;
	public abstract fun getEnv ()Lelide/tool/Environment;
	public abstract fun getExecutable ()Ljava/nio/file/Path;
	public abstract fun getOptions ()Lelide/tooling/runner/ProcessRunner$ProcessOptions;
	public abstract fun getStreams ()Lelide/tooling/runner/ProcessRunner$StdStreams;
}

public abstract interface class elide/tooling/runner/ProcessRunner$StdStreams {
}

public final class elide/tooling/runner/ProcessRunner$StdStreams$Defaults : elide/tooling/runner/ProcessRunner$StdStreams {
	public static final field INSTANCE Lelide/tooling/runner/ProcessRunner$StdStreams$Defaults;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/runner/SerialTestRunner : elide/tooling/runner/AbstractTestRunner {
}

public final class elide/tooling/runner/SerialTestRunner$Builder : elide/tooling/runner/TestRunner$Builder {
	public fun build (Lelide/tooling/config/TestConfigurator$TestEventController;)Lelide/tooling/runner/SerialTestRunner;
	public synthetic fun build (Lelide/tooling/config/TestConfigurator$TestEventController;)Lelide/tooling/runner/TestRunner;
	public fun getConfig ()Lelide/tooling/runner/TestRunner$MutableConfig;
	public fun getContextProvider ()Lkotlin/jvm/functions/Function0;
	public fun getExecutor ()Ljava/util/concurrent/Executor;
	public fun setExecutor (Ljava/util/concurrent/Executor;)V
}

public abstract interface class elide/tooling/runner/TestRunner : java/lang/AutoCloseable {
	public static final field Companion Lelide/tooling/runner/TestRunner$Companion;
	public abstract fun awaitSettled (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getConfig ()Lelide/tooling/runner/TestRunner$Config;
	public abstract fun getEvents ()Lelide/tooling/config/TestConfigurator$TestEventController;
	public abstract fun getExecutor ()Ljava/util/concurrent/Executor;
	public static fun serial (Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function1;)Lelide/tooling/runner/TestRunner;
	public static fun serialBuilder (Lkotlin/jvm/functions/Function0;)Lelide/tooling/runner/SerialTestRunner$Builder;
	public abstract fun tests (Lkotlinx/coroutines/CoroutineScope;Lkotlinx/coroutines/flow/Flow;ZLkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun tests$default (Lelide/tooling/runner/TestRunner;Lkotlinx/coroutines/CoroutineScope;Lkotlinx/coroutines/flow/Flow;ZLkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static fun threaded (Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function1;)Lelide/tooling/runner/TestRunner;
	public static fun threadedBuilder (Lkotlin/jvm/functions/Function0;)Lelide/tooling/runner/ThreadedTestRunner$Builder;
}

public abstract interface class elide/tooling/runner/TestRunner$Builder {
	public abstract fun build (Lelide/tooling/config/TestConfigurator$TestEventController;)Lelide/tooling/runner/TestRunner;
	public fun build (Lkotlin/jvm/functions/Function1;)Lelide/tooling/runner/TestRunner;
	public static synthetic fun build$default (Lelide/tooling/runner/TestRunner$Builder;Lelide/tooling/config/TestConfigurator$TestEventController;ILjava/lang/Object;)Lelide/tooling/runner/TestRunner;
	public abstract fun getConfig ()Lelide/tooling/runner/TestRunner$MutableConfig;
	public abstract fun getContextProvider ()Lkotlin/jvm/functions/Function0;
	public abstract fun getExecutor ()Ljava/util/concurrent/Executor;
	public abstract fun setExecutor (Ljava/util/concurrent/Executor;)V
}

public final class elide/tooling/runner/TestRunner$Companion {
	public final fun serial (Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function1;)Lelide/tooling/runner/TestRunner;
	public static synthetic fun serial$default (Lelide/tooling/runner/TestRunner$Companion;Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lelide/tooling/runner/TestRunner;
	public final fun serialBuilder (Lkotlin/jvm/functions/Function0;)Lelide/tooling/runner/SerialTestRunner$Builder;
	public final fun threaded (Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function1;)Lelide/tooling/runner/TestRunner;
	public static synthetic fun threaded$default (Lelide/tooling/runner/TestRunner$Companion;Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lelide/tooling/runner/TestRunner;
	public final fun threadedBuilder (Lkotlin/jvm/functions/Function0;)Lelide/tooling/runner/ThreadedTestRunner$Builder;
}

public abstract interface class elide/tooling/runner/TestRunner$Config {
	public abstract fun getActionScope ()Lelide/exec/ActionScope;
	public abstract fun getDebug ()Z
	public abstract fun getDry ()Z
	public abstract fun getFailFast ()Z
	public abstract fun getParallelism ()I
	public abstract fun getProject ()Lelide/tooling/project/ElideProject;
	public abstract fun getProjectRoot ()Ljava/nio/file/Path;
	public abstract fun getQuiet ()Z
	public abstract fun getResourcesPath ()Ljava/nio/file/Path;
	public abstract fun getTestPredicate ()Ljava/util/function/Predicate;
	public abstract fun getVerbose ()Z
}

public final class elide/tooling/runner/TestRunner$ConfigDefaults {
	public static final field DEBUG Z
	public static final field DRY Z
	public static final field FAIL_FAST Z
	public static final field INSTANCE Lelide/tooling/runner/TestRunner$ConfigDefaults;
	public static final field QUIET Z
	public static final field VERBOSE Z
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class elide/tooling/runner/TestRunner$ImmutableConfig : java/lang/Record, elide/tooling/runner/TestRunner$Config {
	public fun actionScope ()Lelide/exec/ActionScope;
	public final fun component1 ()Z
	public final fun component10 ()Ljava/nio/file/Path;
	public final fun component11 ()I
	public final fun component2 ()Z
	public final fun component3 ()Z
	public final fun component4 ()Z
	public final fun component5 ()Z
	public final fun component6 ()Lelide/exec/ActionScope;
	public final fun component7 ()Lelide/tooling/project/ElideProject;
	public final fun component8 ()Ljava/util/function/Predicate;
	public final fun component9 ()Ljava/nio/file/Path;
	public final fun copy (ZZZZZLelide/exec/ActionScope;Lelide/tooling/project/ElideProject;Ljava/util/function/Predicate;Ljava/nio/file/Path;Ljava/nio/file/Path;I)Lelide/tooling/runner/TestRunner$ImmutableConfig;
	public static synthetic fun copy$default (Lelide/tooling/runner/TestRunner$ImmutableConfig;ZZZZZLelide/exec/ActionScope;Lelide/tooling/project/ElideProject;Ljava/util/function/Predicate;Ljava/nio/file/Path;Ljava/nio/file/Path;IILjava/lang/Object;)Lelide/tooling/runner/TestRunner$ImmutableConfig;
	public fun debug ()Z
	public fun dry ()Z
	public fun equals (Ljava/lang/Object;)Z
	public fun failFast ()Z
	public synthetic fun getActionScope ()Lelide/exec/ActionScope;
	public synthetic fun getDebug ()Z
	public synthetic fun getDry ()Z
	public synthetic fun getFailFast ()Z
	public synthetic fun getParallelism ()I
	public synthetic fun getProject ()Lelide/tooling/project/ElideProject;
	public synthetic fun getProjectRoot ()Ljava/nio/file/Path;
	public synthetic fun getQuiet ()Z
	public synthetic fun getResourcesPath ()Ljava/nio/file/Path;
	public synthetic fun getTestPredicate ()Ljava/util/function/Predicate;
	public synthetic fun getVerbose ()Z
	public fun hashCode ()I
	public fun parallelism ()I
	public fun project ()Lelide/tooling/project/ElideProject;
	public fun projectRoot ()Ljava/nio/file/Path;
	public fun quiet ()Z
	public fun resourcesPath ()Ljava/nio/file/Path;
	public fun testPredicate ()Ljava/util/function/Predicate;
	public fun toString ()Ljava/lang/String;
	public fun verbose ()Z
}

public final class elide/tooling/runner/TestRunner$MutableConfig : elide/tooling/runner/TestRunner$Config {
	public final fun build ()Lelide/tooling/runner/TestRunner$ImmutableConfig;
	public fun getActionScope ()Lelide/exec/ActionScope;
	public fun getDebug ()Z
	public fun getDry ()Z
	public fun getFailFast ()Z
	public fun getParallelism ()I
	public fun getProject ()Lelide/tooling/project/ElideProject;
	public fun getProjectRoot ()Ljava/nio/file/Path;
	public fun getQuiet ()Z
	public fun getResourcesPath ()Ljava/nio/file/Path;
	public fun getTestPredicate ()Ljava/util/function/Predicate;
	public fun getVerbose ()Z
	public fun setActionScope (Lelide/exec/ActionScope;)V
	public fun setDebug (Z)V
	public fun setDry (Z)V
	public fun setFailFast (Z)V
	public fun setProject (Lelide/tooling/project/ElideProject;)V
	public fun setProjectRoot (Ljava/nio/file/Path;)V
	public fun setQuiet (Z)V
	public fun setResourcesPath (Ljava/nio/file/Path;)V
	public fun setTestPredicate (Ljava/util/function/Predicate;)V
	public fun setVerbose (Z)V
}

public final class elide/tooling/runner/ThreadedTestRunner : elide/tooling/runner/AbstractTestRunner {
}

public final class elide/tooling/runner/ThreadedTestRunner$Builder : elide/tooling/runner/TestRunner$Builder {
	public synthetic fun build (Lelide/tooling/config/TestConfigurator$TestEventController;)Lelide/tooling/runner/TestRunner;
	public fun build (Lelide/tooling/config/TestConfigurator$TestEventController;)Lelide/tooling/runner/ThreadedTestRunner;
	public fun getConfig ()Lelide/tooling/runner/TestRunner$MutableConfig;
	public fun getContextProvider ()Lkotlin/jvm/functions/Function0;
	public fun getExecutor ()Ljava/util/concurrent/Executor;
	public fun setExecutor (Ljava/util/concurrent/Executor;)V
}

