/// Describes Python configurations for an Elide project.
@ModuleInfo { minPklVersion = "0.28.1" }
module elide.python

import "Base.pkl" as common

/// Describes a Pip package dependency.
class PipPackageSpec {
  /// The name of the package.
  name: String
}

typealias PipPackageSpecOrString = PipPackageSpec | String

/// Configuration for Python dependency resolution using Pip.
class PipDependencies {
  /// A list of Pip packages to be resolved for this project.
  packages: Listing<PipPackageSpecOrString> = new {}

  /// A list of optional Pip packages to be resolved by consumers of this project
  optionalPackages: Mapping<String, Listing<PipPackageSpecOrString>> = new {}

  /// Foreign manifest(s) to import (for example, requirements files).
  from: String | Listing<common.FilePath> = new Listing<common.FilePath> {}
}

/// Configures Python language features and settings.
class PythonSettings {
  /// Enable additional Python debugging features.
  debug: Boolean = false

  /// Configure the project to as a WSGI application using Elide's HTTP stack.
  wsgi: WsgiSettings = new {}
}

/// Name of the variable or callable to resolve as the WSGI application.
typealias WsgiApplicationSpec = String

/// Configure Elide's WSGI server stack.
class WsgiSettings {
  /// Name of the variable to be used as the WSGI application.
  ///
  /// To specify a callable that produces the application instance, use the `factory` field.
  app: WsgiApplicationSpec? = null

  /// Name of the callable to be used to produce a WSGI application. The `args` will be supplied as positional
  /// arguments.
  factory: WsgiApplicationSpec? = null

  /// Optional arguments passed to the `application` entrypoint callable.
  args: Listing<String> = new {}

  /// Port used to bound the HTTP server.
  port: Int? = null

  /// Optional number of workers to be used by the server, if unset, a
  /// reasonable default will be used.
  workers: Int? = null
}
