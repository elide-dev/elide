// Generated by jextract

package dev.elide.transport.bridge;

import java.lang.invoke.*;
import java.lang.foreign.*;
import java.nio.ByteOrder;
import java.util.*;
import java.util.function.*;
import java.util.stream.*;

import static java.lang.foreign.ValueLayout.*;
import static java.lang.foreign.MemoryLayout.PathElement.*;

public class netty_epoll_vmsocket_h {

    netty_epoll_vmsocket_h() {
        // Should not be called directly
    }

    static final Arena LIBRARY_ARENA = Arena.ofAuto();
    static final boolean TRACE_DOWNCALLS = Boolean.getBoolean("jextract.trace.downcalls");

    static void traceDowncall(String name, Object... args) {
         String traceArgs = Arrays.stream(args)
                       .map(Object::toString)
                       .collect(Collectors.joining(", "));
         System.out.printf("%s(%s)\n", name, traceArgs);
    }

    static MemorySegment findOrThrow(String symbol) {
        return SYMBOL_LOOKUP.find(symbol)
            .orElseThrow(() -> new UnsatisfiedLinkError("unresolved symbol: " + symbol));
    }

    static MethodHandle upcallHandle(Class<?> fi, String name, FunctionDescriptor fdesc) {
        try {
            return MethodHandles.lookup().findVirtual(fi, name, fdesc.toMethodType());
        } catch (ReflectiveOperationException ex) {
            throw new AssertionError(ex);
        }
    }

    static MemoryLayout align(MemoryLayout layout, long align) {
        return switch (layout) {
            case PaddingLayout p -> p;
            case ValueLayout v -> v.withByteAlignment(align);
            case GroupLayout g -> {
                MemoryLayout[] alignedMembers = g.memberLayouts().stream()
                        .map(m -> align(m, align)).toArray(MemoryLayout[]::new);
                yield g instanceof StructLayout ?
                        MemoryLayout.structLayout(alignedMembers) : MemoryLayout.unionLayout(alignedMembers);
            }
            case SequenceLayout s -> MemoryLayout.sequenceLayout(s.elementCount(), align(s.elementLayout(), align));
        };
    }

    static final SymbolLookup SYMBOL_LOOKUP = SymbolLookup.loaderLookup()
            .or(Linker.nativeLinker().defaultLookup());

    public static final ValueLayout.OfBoolean C_BOOL = ValueLayout.JAVA_BOOLEAN;
    public static final ValueLayout.OfByte C_CHAR = ValueLayout.JAVA_BYTE;
    public static final ValueLayout.OfShort C_SHORT = ValueLayout.JAVA_SHORT;
    public static final ValueLayout.OfInt C_INT = ValueLayout.JAVA_INT;
    public static final ValueLayout.OfLong C_LONG_LONG = ValueLayout.JAVA_LONG;
    public static final ValueLayout.OfFloat C_FLOAT = ValueLayout.JAVA_FLOAT;
    public static final ValueLayout.OfDouble C_DOUBLE = ValueLayout.JAVA_DOUBLE;
    public static final AddressLayout C_POINTER = ValueLayout.ADDRESS
            .withTargetLayout(MemoryLayout.sequenceLayout(java.lang.Long.MAX_VALUE, JAVA_BYTE));
    public static final ValueLayout.OfLong C_LONG = ValueLayout.JAVA_LONG;
    private static final int __has_safe_buffers = (int)0L;
    /**
     * {@snippet lang=c :
     * #define __has_safe_buffers 0
     * }
     */
    public static int __has_safe_buffers() {
        return __has_safe_buffers;
    }
    private static final int __DARWIN_ONLY_64_BIT_INO_T = (int)1L;
    /**
     * {@snippet lang=c :
     * #define __DARWIN_ONLY_64_BIT_INO_T 1
     * }
     */
    public static int __DARWIN_ONLY_64_BIT_INO_T() {
        return __DARWIN_ONLY_64_BIT_INO_T;
    }
    private static final int __DARWIN_ONLY_UNIX_CONFORMANCE = (int)1L;
    /**
     * {@snippet lang=c :
     * #define __DARWIN_ONLY_UNIX_CONFORMANCE 1
     * }
     */
    public static int __DARWIN_ONLY_UNIX_CONFORMANCE() {
        return __DARWIN_ONLY_UNIX_CONFORMANCE;
    }
    private static final int __DARWIN_ONLY_VERS_1050 = (int)1L;
    /**
     * {@snippet lang=c :
     * #define __DARWIN_ONLY_VERS_1050 1
     * }
     */
    public static int __DARWIN_ONLY_VERS_1050() {
        return __DARWIN_ONLY_VERS_1050;
    }
    private static final int __DARWIN_UNIX03 = (int)1L;
    /**
     * {@snippet lang=c :
     * #define __DARWIN_UNIX03 1
     * }
     */
    public static int __DARWIN_UNIX03() {
        return __DARWIN_UNIX03;
    }
    private static final int __DARWIN_64_BIT_INO_T = (int)1L;
    /**
     * {@snippet lang=c :
     * #define __DARWIN_64_BIT_INO_T 1
     * }
     */
    public static int __DARWIN_64_BIT_INO_T() {
        return __DARWIN_64_BIT_INO_T;
    }
    private static final int __DARWIN_VERS_1050 = (int)1L;
    /**
     * {@snippet lang=c :
     * #define __DARWIN_VERS_1050 1
     * }
     */
    public static int __DARWIN_VERS_1050() {
        return __DARWIN_VERS_1050;
    }
    private static final int __DARWIN_NON_CANCELABLE = (int)0L;
    /**
     * {@snippet lang=c :
     * #define __DARWIN_NON_CANCELABLE 0
     * }
     */
    public static int __DARWIN_NON_CANCELABLE() {
        return __DARWIN_NON_CANCELABLE;
    }
    private static final int __STDC_WANT_LIB_EXT1__ = (int)1L;
    /**
     * {@snippet lang=c :
     * #define __STDC_WANT_LIB_EXT1__ 1
     * }
     */
    public static int __STDC_WANT_LIB_EXT1__() {
        return __STDC_WANT_LIB_EXT1__;
    }
    private static final int __DARWIN_NO_LONG_LONG = (int)0L;
    /**
     * {@snippet lang=c :
     * #define __DARWIN_NO_LONG_LONG 0
     * }
     */
    public static int __DARWIN_NO_LONG_LONG() {
        return __DARWIN_NO_LONG_LONG;
    }
    private static final int _DARWIN_FEATURE_64_BIT_INODE = (int)1L;
    /**
     * {@snippet lang=c :
     * #define _DARWIN_FEATURE_64_BIT_INODE 1
     * }
     */
    public static int _DARWIN_FEATURE_64_BIT_INODE() {
        return _DARWIN_FEATURE_64_BIT_INODE;
    }
    private static final int _DARWIN_FEATURE_ONLY_64_BIT_INODE = (int)1L;
    /**
     * {@snippet lang=c :
     * #define _DARWIN_FEATURE_ONLY_64_BIT_INODE 1
     * }
     */
    public static int _DARWIN_FEATURE_ONLY_64_BIT_INODE() {
        return _DARWIN_FEATURE_ONLY_64_BIT_INODE;
    }
    private static final int _DARWIN_FEATURE_ONLY_VERS_1050 = (int)1L;
    /**
     * {@snippet lang=c :
     * #define _DARWIN_FEATURE_ONLY_VERS_1050 1
     * }
     */
    public static int _DARWIN_FEATURE_ONLY_VERS_1050() {
        return _DARWIN_FEATURE_ONLY_VERS_1050;
    }
    private static final int _DARWIN_FEATURE_ONLY_UNIX_CONFORMANCE = (int)1L;
    /**
     * {@snippet lang=c :
     * #define _DARWIN_FEATURE_ONLY_UNIX_CONFORMANCE 1
     * }
     */
    public static int _DARWIN_FEATURE_ONLY_UNIX_CONFORMANCE() {
        return _DARWIN_FEATURE_ONLY_UNIX_CONFORMANCE;
    }
    private static final int _DARWIN_FEATURE_UNIX_CONFORMANCE = (int)3L;
    /**
     * {@snippet lang=c :
     * #define _DARWIN_FEATURE_UNIX_CONFORMANCE 3
     * }
     */
    public static int _DARWIN_FEATURE_UNIX_CONFORMANCE() {
        return _DARWIN_FEATURE_UNIX_CONFORMANCE;
    }
    private static final int __has_ptrcheck = (int)0L;
    /**
     * {@snippet lang=c :
     * #define __has_ptrcheck 0
     * }
     */
    public static int __has_ptrcheck() {
        return __has_ptrcheck;
    }
    private static final int __PTHREAD_SIZE__ = (int)8176L;
    /**
     * {@snippet lang=c :
     * #define __PTHREAD_SIZE__ 8176
     * }
     */
    public static int __PTHREAD_SIZE__() {
        return __PTHREAD_SIZE__;
    }
    private static final int __PTHREAD_ATTR_SIZE__ = (int)56L;
    /**
     * {@snippet lang=c :
     * #define __PTHREAD_ATTR_SIZE__ 56
     * }
     */
    public static int __PTHREAD_ATTR_SIZE__() {
        return __PTHREAD_ATTR_SIZE__;
    }
    private static final int __PTHREAD_MUTEXATTR_SIZE__ = (int)8L;
    /**
     * {@snippet lang=c :
     * #define __PTHREAD_MUTEXATTR_SIZE__ 8
     * }
     */
    public static int __PTHREAD_MUTEXATTR_SIZE__() {
        return __PTHREAD_MUTEXATTR_SIZE__;
    }
    private static final int __PTHREAD_MUTEX_SIZE__ = (int)56L;
    /**
     * {@snippet lang=c :
     * #define __PTHREAD_MUTEX_SIZE__ 56
     * }
     */
    public static int __PTHREAD_MUTEX_SIZE__() {
        return __PTHREAD_MUTEX_SIZE__;
    }
    private static final int __PTHREAD_CONDATTR_SIZE__ = (int)8L;
    /**
     * {@snippet lang=c :
     * #define __PTHREAD_CONDATTR_SIZE__ 8
     * }
     */
    public static int __PTHREAD_CONDATTR_SIZE__() {
        return __PTHREAD_CONDATTR_SIZE__;
    }
    private static final int __PTHREAD_COND_SIZE__ = (int)40L;
    /**
     * {@snippet lang=c :
     * #define __PTHREAD_COND_SIZE__ 40
     * }
     */
    public static int __PTHREAD_COND_SIZE__() {
        return __PTHREAD_COND_SIZE__;
    }
    private static final int __PTHREAD_ONCE_SIZE__ = (int)8L;
    /**
     * {@snippet lang=c :
     * #define __PTHREAD_ONCE_SIZE__ 8
     * }
     */
    public static int __PTHREAD_ONCE_SIZE__() {
        return __PTHREAD_ONCE_SIZE__;
    }
    private static final int __PTHREAD_RWLOCK_SIZE__ = (int)192L;
    /**
     * {@snippet lang=c :
     * #define __PTHREAD_RWLOCK_SIZE__ 192
     * }
     */
    public static int __PTHREAD_RWLOCK_SIZE__() {
        return __PTHREAD_RWLOCK_SIZE__;
    }
    private static final int __PTHREAD_RWLOCKATTR_SIZE__ = (int)16L;
    /**
     * {@snippet lang=c :
     * #define __PTHREAD_RWLOCKATTR_SIZE__ 16
     * }
     */
    public static int __PTHREAD_RWLOCKATTR_SIZE__() {
        return __PTHREAD_RWLOCKATTR_SIZE__;
    }
    private static final int _QUAD_HIGHWORD = (int)1L;
    /**
     * {@snippet lang=c :
     * #define _QUAD_HIGHWORD 1
     * }
     */
    public static int _QUAD_HIGHWORD() {
        return _QUAD_HIGHWORD;
    }
    private static final int _QUAD_LOWWORD = (int)0L;
    /**
     * {@snippet lang=c :
     * #define _QUAD_LOWWORD 0
     * }
     */
    public static int _QUAD_LOWWORD() {
        return _QUAD_LOWWORD;
    }
    private static final int __DARWIN_LITTLE_ENDIAN = (int)1234L;
    /**
     * {@snippet lang=c :
     * #define __DARWIN_LITTLE_ENDIAN 1234
     * }
     */
    public static int __DARWIN_LITTLE_ENDIAN() {
        return __DARWIN_LITTLE_ENDIAN;
    }
    private static final int __DARWIN_BIG_ENDIAN = (int)4321L;
    /**
     * {@snippet lang=c :
     * #define __DARWIN_BIG_ENDIAN 4321
     * }
     */
    public static int __DARWIN_BIG_ENDIAN() {
        return __DARWIN_BIG_ENDIAN;
    }
    private static final int __DARWIN_PDP_ENDIAN = (int)3412L;
    /**
     * {@snippet lang=c :
     * #define __DARWIN_PDP_ENDIAN 3412
     * }
     */
    public static int __DARWIN_PDP_ENDIAN() {
        return __DARWIN_PDP_ENDIAN;
    }
    private static final int __WORDSIZE = (int)64L;
    /**
     * {@snippet lang=c :
     * #define __WORDSIZE 64
     * }
     */
    public static int __WORDSIZE() {
        return __WORDSIZE;
    }
    private static final int INT8_MAX = (int)127L;
    /**
     * {@snippet lang=c :
     * #define INT8_MAX 127
     * }
     */
    public static int INT8_MAX() {
        return INT8_MAX;
    }
    private static final int INT16_MAX = (int)32767L;
    /**
     * {@snippet lang=c :
     * #define INT16_MAX 32767
     * }
     */
    public static int INT16_MAX() {
        return INT16_MAX;
    }
    private static final int INT32_MAX = (int)2147483647L;
    /**
     * {@snippet lang=c :
     * #define INT32_MAX 2147483647
     * }
     */
    public static int INT32_MAX() {
        return INT32_MAX;
    }
    private static final int UINT8_MAX = (int)255L;
    /**
     * {@snippet lang=c :
     * #define UINT8_MAX 255
     * }
     */
    public static int UINT8_MAX() {
        return UINT8_MAX;
    }
    private static final int UINT16_MAX = (int)65535L;
    /**
     * {@snippet lang=c :
     * #define UINT16_MAX 65535
     * }
     */
    public static int UINT16_MAX() {
        return UINT16_MAX;
    }
    private static final int __API_TO_BE_DEPRECATED = (int)100000L;
    /**
     * {@snippet lang=c :
     * #define __API_TO_BE_DEPRECATED 100000
     * }
     */
    public static int __API_TO_BE_DEPRECATED() {
        return __API_TO_BE_DEPRECATED;
    }
    private static final int __API_TO_BE_DEPRECATED_MACOS = (int)100000L;
    /**
     * {@snippet lang=c :
     * #define __API_TO_BE_DEPRECATED_MACOS 100000
     * }
     */
    public static int __API_TO_BE_DEPRECATED_MACOS() {
        return __API_TO_BE_DEPRECATED_MACOS;
    }
    private static final int __API_TO_BE_DEPRECATED_IOS = (int)100000L;
    /**
     * {@snippet lang=c :
     * #define __API_TO_BE_DEPRECATED_IOS 100000
     * }
     */
    public static int __API_TO_BE_DEPRECATED_IOS() {
        return __API_TO_BE_DEPRECATED_IOS;
    }
    private static final int __API_TO_BE_DEPRECATED_MACCATALYST = (int)100000L;
    /**
     * {@snippet lang=c :
     * #define __API_TO_BE_DEPRECATED_MACCATALYST 100000
     * }
     */
    public static int __API_TO_BE_DEPRECATED_MACCATALYST() {
        return __API_TO_BE_DEPRECATED_MACCATALYST;
    }
    private static final int __API_TO_BE_DEPRECATED_WATCHOS = (int)100000L;
    /**
     * {@snippet lang=c :
     * #define __API_TO_BE_DEPRECATED_WATCHOS 100000
     * }
     */
    public static int __API_TO_BE_DEPRECATED_WATCHOS() {
        return __API_TO_BE_DEPRECATED_WATCHOS;
    }
    private static final int __API_TO_BE_DEPRECATED_TVOS = (int)100000L;
    /**
     * {@snippet lang=c :
     * #define __API_TO_BE_DEPRECATED_TVOS 100000
     * }
     */
    public static int __API_TO_BE_DEPRECATED_TVOS() {
        return __API_TO_BE_DEPRECATED_TVOS;
    }
    private static final int __API_TO_BE_DEPRECATED_DRIVERKIT = (int)100000L;
    /**
     * {@snippet lang=c :
     * #define __API_TO_BE_DEPRECATED_DRIVERKIT 100000
     * }
     */
    public static int __API_TO_BE_DEPRECATED_DRIVERKIT() {
        return __API_TO_BE_DEPRECATED_DRIVERKIT;
    }
    private static final int __API_TO_BE_DEPRECATED_VISIONOS = (int)100000L;
    /**
     * {@snippet lang=c :
     * #define __API_TO_BE_DEPRECATED_VISIONOS 100000
     * }
     */
    public static int __API_TO_BE_DEPRECATED_VISIONOS() {
        return __API_TO_BE_DEPRECATED_VISIONOS;
    }
    private static final int __MAC_10_0 = (int)1000L;
    /**
     * {@snippet lang=c :
     * #define __MAC_10_0 1000
     * }
     */
    public static int __MAC_10_0() {
        return __MAC_10_0;
    }
    private static final int __MAC_10_1 = (int)1010L;
    /**
     * {@snippet lang=c :
     * #define __MAC_10_1 1010
     * }
     */
    public static int __MAC_10_1() {
        return __MAC_10_1;
    }
    private static final int __MAC_10_2 = (int)1020L;
    /**
     * {@snippet lang=c :
     * #define __MAC_10_2 1020
     * }
     */
    public static int __MAC_10_2() {
        return __MAC_10_2;
    }
    private static final int __MAC_10_3 = (int)1030L;
    /**
     * {@snippet lang=c :
     * #define __MAC_10_3 1030
     * }
     */
    public static int __MAC_10_3() {
        return __MAC_10_3;
    }
    private static final int __MAC_10_4 = (int)1040L;
    /**
     * {@snippet lang=c :
     * #define __MAC_10_4 1040
     * }
     */
    public static int __MAC_10_4() {
        return __MAC_10_4;
    }
    private static final int __MAC_10_5 = (int)1050L;
    /**
     * {@snippet lang=c :
     * #define __MAC_10_5 1050
     * }
     */
    public static int __MAC_10_5() {
        return __MAC_10_5;
    }
    private static final int __MAC_10_6 = (int)1060L;
    /**
     * {@snippet lang=c :
     * #define __MAC_10_6 1060
     * }
     */
    public static int __MAC_10_6() {
        return __MAC_10_6;
    }
    private static final int __MAC_10_7 = (int)1070L;
    /**
     * {@snippet lang=c :
     * #define __MAC_10_7 1070
     * }
     */
    public static int __MAC_10_7() {
        return __MAC_10_7;
    }
    private static final int __MAC_10_8 = (int)1080L;
    /**
     * {@snippet lang=c :
     * #define __MAC_10_8 1080
     * }
     */
    public static int __MAC_10_8() {
        return __MAC_10_8;
    }
    private static final int __MAC_10_9 = (int)1090L;
    /**
     * {@snippet lang=c :
     * #define __MAC_10_9 1090
     * }
     */
    public static int __MAC_10_9() {
        return __MAC_10_9;
    }
    private static final int __MAC_10_10 = (int)101000L;
    /**
     * {@snippet lang=c :
     * #define __MAC_10_10 101000
     * }
     */
    public static int __MAC_10_10() {
        return __MAC_10_10;
    }
    private static final int __MAC_10_10_2 = (int)101002L;
    /**
     * {@snippet lang=c :
     * #define __MAC_10_10_2 101002
     * }
     */
    public static int __MAC_10_10_2() {
        return __MAC_10_10_2;
    }
    private static final int __MAC_10_10_3 = (int)101003L;
    /**
     * {@snippet lang=c :
     * #define __MAC_10_10_3 101003
     * }
     */
    public static int __MAC_10_10_3() {
        return __MAC_10_10_3;
    }
    private static final int __MAC_10_11 = (int)101100L;
    /**
     * {@snippet lang=c :
     * #define __MAC_10_11 101100
     * }
     */
    public static int __MAC_10_11() {
        return __MAC_10_11;
    }
    private static final int __MAC_10_11_2 = (int)101102L;
    /**
     * {@snippet lang=c :
     * #define __MAC_10_11_2 101102
     * }
     */
    public static int __MAC_10_11_2() {
        return __MAC_10_11_2;
    }
    private static final int __MAC_10_11_3 = (int)101103L;
    /**
     * {@snippet lang=c :
     * #define __MAC_10_11_3 101103
     * }
     */
    public static int __MAC_10_11_3() {
        return __MAC_10_11_3;
    }
    private static final int __MAC_10_11_4 = (int)101104L;
    /**
     * {@snippet lang=c :
     * #define __MAC_10_11_4 101104
     * }
     */
    public static int __MAC_10_11_4() {
        return __MAC_10_11_4;
    }
    private static final int __MAC_10_12 = (int)101200L;
    /**
     * {@snippet lang=c :
     * #define __MAC_10_12 101200
     * }
     */
    public static int __MAC_10_12() {
        return __MAC_10_12;
    }
    private static final int __MAC_10_12_1 = (int)101201L;
    /**
     * {@snippet lang=c :
     * #define __MAC_10_12_1 101201
     * }
     */
    public static int __MAC_10_12_1() {
        return __MAC_10_12_1;
    }
    private static final int __MAC_10_12_2 = (int)101202L;
    /**
     * {@snippet lang=c :
     * #define __MAC_10_12_2 101202
     * }
     */
    public static int __MAC_10_12_2() {
        return __MAC_10_12_2;
    }
    private static final int __MAC_10_12_4 = (int)101204L;
    /**
     * {@snippet lang=c :
     * #define __MAC_10_12_4 101204
     * }
     */
    public static int __MAC_10_12_4() {
        return __MAC_10_12_4;
    }
    private static final int __MAC_10_13 = (int)101300L;
    /**
     * {@snippet lang=c :
     * #define __MAC_10_13 101300
     * }
     */
    public static int __MAC_10_13() {
        return __MAC_10_13;
    }
    private static final int __MAC_10_13_1 = (int)101301L;
    /**
     * {@snippet lang=c :
     * #define __MAC_10_13_1 101301
     * }
     */
    public static int __MAC_10_13_1() {
        return __MAC_10_13_1;
    }
    private static final int __MAC_10_13_2 = (int)101302L;
    /**
     * {@snippet lang=c :
     * #define __MAC_10_13_2 101302
     * }
     */
    public static int __MAC_10_13_2() {
        return __MAC_10_13_2;
    }
    private static final int __MAC_10_13_4 = (int)101304L;
    /**
     * {@snippet lang=c :
     * #define __MAC_10_13_4 101304
     * }
     */
    public static int __MAC_10_13_4() {
        return __MAC_10_13_4;
    }
    private static final int __MAC_10_14 = (int)101400L;
    /**
     * {@snippet lang=c :
     * #define __MAC_10_14 101400
     * }
     */
    public static int __MAC_10_14() {
        return __MAC_10_14;
    }
    private static final int __MAC_10_14_1 = (int)101401L;
    /**
     * {@snippet lang=c :
     * #define __MAC_10_14_1 101401
     * }
     */
    public static int __MAC_10_14_1() {
        return __MAC_10_14_1;
    }
    private static final int __MAC_10_14_4 = (int)101404L;
    /**
     * {@snippet lang=c :
     * #define __MAC_10_14_4 101404
     * }
     */
    public static int __MAC_10_14_4() {
        return __MAC_10_14_4;
    }
    private static final int __MAC_10_14_5 = (int)101405L;
    /**
     * {@snippet lang=c :
     * #define __MAC_10_14_5 101405
     * }
     */
    public static int __MAC_10_14_5() {
        return __MAC_10_14_5;
    }
    private static final int __MAC_10_14_6 = (int)101406L;
    /**
     * {@snippet lang=c :
     * #define __MAC_10_14_6 101406
     * }
     */
    public static int __MAC_10_14_6() {
        return __MAC_10_14_6;
    }
    private static final int __MAC_10_15 = (int)101500L;
    /**
     * {@snippet lang=c :
     * #define __MAC_10_15 101500
     * }
     */
    public static int __MAC_10_15() {
        return __MAC_10_15;
    }
    private static final int __MAC_10_15_1 = (int)101501L;
    /**
     * {@snippet lang=c :
     * #define __MAC_10_15_1 101501
     * }
     */
    public static int __MAC_10_15_1() {
        return __MAC_10_15_1;
    }
    private static final int __MAC_10_15_4 = (int)101504L;
    /**
     * {@snippet lang=c :
     * #define __MAC_10_15_4 101504
     * }
     */
    public static int __MAC_10_15_4() {
        return __MAC_10_15_4;
    }
    private static final int __MAC_10_16 = (int)101600L;
    /**
     * {@snippet lang=c :
     * #define __MAC_10_16 101600
     * }
     */
    public static int __MAC_10_16() {
        return __MAC_10_16;
    }
    private static final int __MAC_11_0 = (int)110000L;
    /**
     * {@snippet lang=c :
     * #define __MAC_11_0 110000
     * }
     */
    public static int __MAC_11_0() {
        return __MAC_11_0;
    }
    private static final int __MAC_11_1 = (int)110100L;
    /**
     * {@snippet lang=c :
     * #define __MAC_11_1 110100
     * }
     */
    public static int __MAC_11_1() {
        return __MAC_11_1;
    }
    private static final int __MAC_11_3 = (int)110300L;
    /**
     * {@snippet lang=c :
     * #define __MAC_11_3 110300
     * }
     */
    public static int __MAC_11_3() {
        return __MAC_11_3;
    }
    private static final int __MAC_11_4 = (int)110400L;
    /**
     * {@snippet lang=c :
     * #define __MAC_11_4 110400
     * }
     */
    public static int __MAC_11_4() {
        return __MAC_11_4;
    }
    private static final int __MAC_11_5 = (int)110500L;
    /**
     * {@snippet lang=c :
     * #define __MAC_11_5 110500
     * }
     */
    public static int __MAC_11_5() {
        return __MAC_11_5;
    }
    private static final int __MAC_11_6 = (int)110600L;
    /**
     * {@snippet lang=c :
     * #define __MAC_11_6 110600
     * }
     */
    public static int __MAC_11_6() {
        return __MAC_11_6;
    }
    private static final int __MAC_12_0 = (int)120000L;
    /**
     * {@snippet lang=c :
     * #define __MAC_12_0 120000
     * }
     */
    public static int __MAC_12_0() {
        return __MAC_12_0;
    }
    private static final int __MAC_12_1 = (int)120100L;
    /**
     * {@snippet lang=c :
     * #define __MAC_12_1 120100
     * }
     */
    public static int __MAC_12_1() {
        return __MAC_12_1;
    }
    private static final int __MAC_12_2 = (int)120200L;
    /**
     * {@snippet lang=c :
     * #define __MAC_12_2 120200
     * }
     */
    public static int __MAC_12_2() {
        return __MAC_12_2;
    }
    private static final int __MAC_12_3 = (int)120300L;
    /**
     * {@snippet lang=c :
     * #define __MAC_12_3 120300
     * }
     */
    public static int __MAC_12_3() {
        return __MAC_12_3;
    }
    private static final int __MAC_12_4 = (int)120400L;
    /**
     * {@snippet lang=c :
     * #define __MAC_12_4 120400
     * }
     */
    public static int __MAC_12_4() {
        return __MAC_12_4;
    }
    private static final int __MAC_12_5 = (int)120500L;
    /**
     * {@snippet lang=c :
     * #define __MAC_12_5 120500
     * }
     */
    public static int __MAC_12_5() {
        return __MAC_12_5;
    }
    private static final int __MAC_12_6 = (int)120600L;
    /**
     * {@snippet lang=c :
     * #define __MAC_12_6 120600
     * }
     */
    public static int __MAC_12_6() {
        return __MAC_12_6;
    }
    private static final int __MAC_12_7 = (int)120700L;
    /**
     * {@snippet lang=c :
     * #define __MAC_12_7 120700
     * }
     */
    public static int __MAC_12_7() {
        return __MAC_12_7;
    }
    private static final int __MAC_13_0 = (int)130000L;
    /**
     * {@snippet lang=c :
     * #define __MAC_13_0 130000
     * }
     */
    public static int __MAC_13_0() {
        return __MAC_13_0;
    }
    private static final int __MAC_13_1 = (int)130100L;
    /**
     * {@snippet lang=c :
     * #define __MAC_13_1 130100
     * }
     */
    public static int __MAC_13_1() {
        return __MAC_13_1;
    }
    private static final int __MAC_13_2 = (int)130200L;
    /**
     * {@snippet lang=c :
     * #define __MAC_13_2 130200
     * }
     */
    public static int __MAC_13_2() {
        return __MAC_13_2;
    }
    private static final int __MAC_13_3 = (int)130300L;
    /**
     * {@snippet lang=c :
     * #define __MAC_13_3 130300
     * }
     */
    public static int __MAC_13_3() {
        return __MAC_13_3;
    }
    private static final int __MAC_13_4 = (int)130400L;
    /**
     * {@snippet lang=c :
     * #define __MAC_13_4 130400
     * }
     */
    public static int __MAC_13_4() {
        return __MAC_13_4;
    }
    private static final int __MAC_13_5 = (int)130500L;
    /**
     * {@snippet lang=c :
     * #define __MAC_13_5 130500
     * }
     */
    public static int __MAC_13_5() {
        return __MAC_13_5;
    }
    private static final int __MAC_13_6 = (int)130600L;
    /**
     * {@snippet lang=c :
     * #define __MAC_13_6 130600
     * }
     */
    public static int __MAC_13_6() {
        return __MAC_13_6;
    }
    private static final int __MAC_14_0 = (int)140000L;
    /**
     * {@snippet lang=c :
     * #define __MAC_14_0 140000
     * }
     */
    public static int __MAC_14_0() {
        return __MAC_14_0;
    }
    private static final int __MAC_14_1 = (int)140100L;
    /**
     * {@snippet lang=c :
     * #define __MAC_14_1 140100
     * }
     */
    public static int __MAC_14_1() {
        return __MAC_14_1;
    }
    private static final int __MAC_14_2 = (int)140200L;
    /**
     * {@snippet lang=c :
     * #define __MAC_14_2 140200
     * }
     */
    public static int __MAC_14_2() {
        return __MAC_14_2;
    }
    private static final int __MAC_14_3 = (int)140300L;
    /**
     * {@snippet lang=c :
     * #define __MAC_14_3 140300
     * }
     */
    public static int __MAC_14_3() {
        return __MAC_14_3;
    }
    private static final int __MAC_14_4 = (int)140400L;
    /**
     * {@snippet lang=c :
     * #define __MAC_14_4 140400
     * }
     */
    public static int __MAC_14_4() {
        return __MAC_14_4;
    }
    private static final int __IPHONE_2_0 = (int)20000L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_2_0 20000
     * }
     */
    public static int __IPHONE_2_0() {
        return __IPHONE_2_0;
    }
    private static final int __IPHONE_2_1 = (int)20100L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_2_1 20100
     * }
     */
    public static int __IPHONE_2_1() {
        return __IPHONE_2_1;
    }
    private static final int __IPHONE_2_2 = (int)20200L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_2_2 20200
     * }
     */
    public static int __IPHONE_2_2() {
        return __IPHONE_2_2;
    }
    private static final int __IPHONE_3_0 = (int)30000L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_3_0 30000
     * }
     */
    public static int __IPHONE_3_0() {
        return __IPHONE_3_0;
    }
    private static final int __IPHONE_3_1 = (int)30100L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_3_1 30100
     * }
     */
    public static int __IPHONE_3_1() {
        return __IPHONE_3_1;
    }
    private static final int __IPHONE_3_2 = (int)30200L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_3_2 30200
     * }
     */
    public static int __IPHONE_3_2() {
        return __IPHONE_3_2;
    }
    private static final int __IPHONE_4_0 = (int)40000L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_4_0 40000
     * }
     */
    public static int __IPHONE_4_0() {
        return __IPHONE_4_0;
    }
    private static final int __IPHONE_4_1 = (int)40100L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_4_1 40100
     * }
     */
    public static int __IPHONE_4_1() {
        return __IPHONE_4_1;
    }
    private static final int __IPHONE_4_2 = (int)40200L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_4_2 40200
     * }
     */
    public static int __IPHONE_4_2() {
        return __IPHONE_4_2;
    }
    private static final int __IPHONE_4_3 = (int)40300L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_4_3 40300
     * }
     */
    public static int __IPHONE_4_3() {
        return __IPHONE_4_3;
    }
    private static final int __IPHONE_5_0 = (int)50000L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_5_0 50000
     * }
     */
    public static int __IPHONE_5_0() {
        return __IPHONE_5_0;
    }
    private static final int __IPHONE_5_1 = (int)50100L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_5_1 50100
     * }
     */
    public static int __IPHONE_5_1() {
        return __IPHONE_5_1;
    }
    private static final int __IPHONE_6_0 = (int)60000L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_6_0 60000
     * }
     */
    public static int __IPHONE_6_0() {
        return __IPHONE_6_0;
    }
    private static final int __IPHONE_6_1 = (int)60100L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_6_1 60100
     * }
     */
    public static int __IPHONE_6_1() {
        return __IPHONE_6_1;
    }
    private static final int __IPHONE_7_0 = (int)70000L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_7_0 70000
     * }
     */
    public static int __IPHONE_7_0() {
        return __IPHONE_7_0;
    }
    private static final int __IPHONE_7_1 = (int)70100L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_7_1 70100
     * }
     */
    public static int __IPHONE_7_1() {
        return __IPHONE_7_1;
    }
    private static final int __IPHONE_8_0 = (int)80000L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_8_0 80000
     * }
     */
    public static int __IPHONE_8_0() {
        return __IPHONE_8_0;
    }
    private static final int __IPHONE_8_1 = (int)80100L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_8_1 80100
     * }
     */
    public static int __IPHONE_8_1() {
        return __IPHONE_8_1;
    }
    private static final int __IPHONE_8_2 = (int)80200L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_8_2 80200
     * }
     */
    public static int __IPHONE_8_2() {
        return __IPHONE_8_2;
    }
    private static final int __IPHONE_8_3 = (int)80300L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_8_3 80300
     * }
     */
    public static int __IPHONE_8_3() {
        return __IPHONE_8_3;
    }
    private static final int __IPHONE_8_4 = (int)80400L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_8_4 80400
     * }
     */
    public static int __IPHONE_8_4() {
        return __IPHONE_8_4;
    }
    private static final int __IPHONE_9_0 = (int)90000L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_9_0 90000
     * }
     */
    public static int __IPHONE_9_0() {
        return __IPHONE_9_0;
    }
    private static final int __IPHONE_9_1 = (int)90100L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_9_1 90100
     * }
     */
    public static int __IPHONE_9_1() {
        return __IPHONE_9_1;
    }
    private static final int __IPHONE_9_2 = (int)90200L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_9_2 90200
     * }
     */
    public static int __IPHONE_9_2() {
        return __IPHONE_9_2;
    }
    private static final int __IPHONE_9_3 = (int)90300L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_9_3 90300
     * }
     */
    public static int __IPHONE_9_3() {
        return __IPHONE_9_3;
    }
    private static final int __IPHONE_10_0 = (int)100000L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_10_0 100000
     * }
     */
    public static int __IPHONE_10_0() {
        return __IPHONE_10_0;
    }
    private static final int __IPHONE_10_1 = (int)100100L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_10_1 100100
     * }
     */
    public static int __IPHONE_10_1() {
        return __IPHONE_10_1;
    }
    private static final int __IPHONE_10_2 = (int)100200L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_10_2 100200
     * }
     */
    public static int __IPHONE_10_2() {
        return __IPHONE_10_2;
    }
    private static final int __IPHONE_10_3 = (int)100300L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_10_3 100300
     * }
     */
    public static int __IPHONE_10_3() {
        return __IPHONE_10_3;
    }
    private static final int __IPHONE_11_0 = (int)110000L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_11_0 110000
     * }
     */
    public static int __IPHONE_11_0() {
        return __IPHONE_11_0;
    }
    private static final int __IPHONE_11_1 = (int)110100L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_11_1 110100
     * }
     */
    public static int __IPHONE_11_1() {
        return __IPHONE_11_1;
    }
    private static final int __IPHONE_11_2 = (int)110200L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_11_2 110200
     * }
     */
    public static int __IPHONE_11_2() {
        return __IPHONE_11_2;
    }
    private static final int __IPHONE_11_3 = (int)110300L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_11_3 110300
     * }
     */
    public static int __IPHONE_11_3() {
        return __IPHONE_11_3;
    }
    private static final int __IPHONE_11_4 = (int)110400L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_11_4 110400
     * }
     */
    public static int __IPHONE_11_4() {
        return __IPHONE_11_4;
    }
    private static final int __IPHONE_12_0 = (int)120000L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_12_0 120000
     * }
     */
    public static int __IPHONE_12_0() {
        return __IPHONE_12_0;
    }
    private static final int __IPHONE_12_1 = (int)120100L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_12_1 120100
     * }
     */
    public static int __IPHONE_12_1() {
        return __IPHONE_12_1;
    }
    private static final int __IPHONE_12_2 = (int)120200L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_12_2 120200
     * }
     */
    public static int __IPHONE_12_2() {
        return __IPHONE_12_2;
    }
    private static final int __IPHONE_12_3 = (int)120300L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_12_3 120300
     * }
     */
    public static int __IPHONE_12_3() {
        return __IPHONE_12_3;
    }
    private static final int __IPHONE_12_4 = (int)120400L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_12_4 120400
     * }
     */
    public static int __IPHONE_12_4() {
        return __IPHONE_12_4;
    }
    private static final int __IPHONE_13_0 = (int)130000L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_13_0 130000
     * }
     */
    public static int __IPHONE_13_0() {
        return __IPHONE_13_0;
    }
    private static final int __IPHONE_13_1 = (int)130100L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_13_1 130100
     * }
     */
    public static int __IPHONE_13_1() {
        return __IPHONE_13_1;
    }
    private static final int __IPHONE_13_2 = (int)130200L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_13_2 130200
     * }
     */
    public static int __IPHONE_13_2() {
        return __IPHONE_13_2;
    }
    private static final int __IPHONE_13_3 = (int)130300L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_13_3 130300
     * }
     */
    public static int __IPHONE_13_3() {
        return __IPHONE_13_3;
    }
    private static final int __IPHONE_13_4 = (int)130400L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_13_4 130400
     * }
     */
    public static int __IPHONE_13_4() {
        return __IPHONE_13_4;
    }
    private static final int __IPHONE_13_5 = (int)130500L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_13_5 130500
     * }
     */
    public static int __IPHONE_13_5() {
        return __IPHONE_13_5;
    }
    private static final int __IPHONE_13_6 = (int)130600L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_13_6 130600
     * }
     */
    public static int __IPHONE_13_6() {
        return __IPHONE_13_6;
    }
    private static final int __IPHONE_13_7 = (int)130700L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_13_7 130700
     * }
     */
    public static int __IPHONE_13_7() {
        return __IPHONE_13_7;
    }
    private static final int __IPHONE_14_0 = (int)140000L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_14_0 140000
     * }
     */
    public static int __IPHONE_14_0() {
        return __IPHONE_14_0;
    }
    private static final int __IPHONE_14_1 = (int)140100L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_14_1 140100
     * }
     */
    public static int __IPHONE_14_1() {
        return __IPHONE_14_1;
    }
    private static final int __IPHONE_14_2 = (int)140200L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_14_2 140200
     * }
     */
    public static int __IPHONE_14_2() {
        return __IPHONE_14_2;
    }
    private static final int __IPHONE_14_3 = (int)140300L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_14_3 140300
     * }
     */
    public static int __IPHONE_14_3() {
        return __IPHONE_14_3;
    }
    private static final int __IPHONE_14_5 = (int)140500L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_14_5 140500
     * }
     */
    public static int __IPHONE_14_5() {
        return __IPHONE_14_5;
    }
    private static final int __IPHONE_14_4 = (int)140400L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_14_4 140400
     * }
     */
    public static int __IPHONE_14_4() {
        return __IPHONE_14_4;
    }
    private static final int __IPHONE_14_6 = (int)140600L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_14_6 140600
     * }
     */
    public static int __IPHONE_14_6() {
        return __IPHONE_14_6;
    }
    private static final int __IPHONE_14_7 = (int)140700L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_14_7 140700
     * }
     */
    public static int __IPHONE_14_7() {
        return __IPHONE_14_7;
    }
    private static final int __IPHONE_14_8 = (int)140800L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_14_8 140800
     * }
     */
    public static int __IPHONE_14_8() {
        return __IPHONE_14_8;
    }
    private static final int __IPHONE_15_0 = (int)150000L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_15_0 150000
     * }
     */
    public static int __IPHONE_15_0() {
        return __IPHONE_15_0;
    }
    private static final int __IPHONE_15_1 = (int)150100L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_15_1 150100
     * }
     */
    public static int __IPHONE_15_1() {
        return __IPHONE_15_1;
    }
    private static final int __IPHONE_15_2 = (int)150200L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_15_2 150200
     * }
     */
    public static int __IPHONE_15_2() {
        return __IPHONE_15_2;
    }
    private static final int __IPHONE_15_3 = (int)150300L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_15_3 150300
     * }
     */
    public static int __IPHONE_15_3() {
        return __IPHONE_15_3;
    }
    private static final int __IPHONE_15_4 = (int)150400L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_15_4 150400
     * }
     */
    public static int __IPHONE_15_4() {
        return __IPHONE_15_4;
    }
    private static final int __IPHONE_15_5 = (int)150500L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_15_5 150500
     * }
     */
    public static int __IPHONE_15_5() {
        return __IPHONE_15_5;
    }
    private static final int __IPHONE_15_6 = (int)150600L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_15_6 150600
     * }
     */
    public static int __IPHONE_15_6() {
        return __IPHONE_15_6;
    }
    private static final int __IPHONE_15_7 = (int)150700L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_15_7 150700
     * }
     */
    public static int __IPHONE_15_7() {
        return __IPHONE_15_7;
    }
    private static final int __IPHONE_15_8 = (int)150800L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_15_8 150800
     * }
     */
    public static int __IPHONE_15_8() {
        return __IPHONE_15_8;
    }
    private static final int __IPHONE_16_0 = (int)160000L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_16_0 160000
     * }
     */
    public static int __IPHONE_16_0() {
        return __IPHONE_16_0;
    }
    private static final int __IPHONE_16_1 = (int)160100L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_16_1 160100
     * }
     */
    public static int __IPHONE_16_1() {
        return __IPHONE_16_1;
    }
    private static final int __IPHONE_16_2 = (int)160200L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_16_2 160200
     * }
     */
    public static int __IPHONE_16_2() {
        return __IPHONE_16_2;
    }
    private static final int __IPHONE_16_3 = (int)160300L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_16_3 160300
     * }
     */
    public static int __IPHONE_16_3() {
        return __IPHONE_16_3;
    }
    private static final int __IPHONE_16_4 = (int)160400L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_16_4 160400
     * }
     */
    public static int __IPHONE_16_4() {
        return __IPHONE_16_4;
    }
    private static final int __IPHONE_16_5 = (int)160500L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_16_5 160500
     * }
     */
    public static int __IPHONE_16_5() {
        return __IPHONE_16_5;
    }
    private static final int __IPHONE_16_6 = (int)160600L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_16_6 160600
     * }
     */
    public static int __IPHONE_16_6() {
        return __IPHONE_16_6;
    }
    private static final int __IPHONE_16_7 = (int)160700L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_16_7 160700
     * }
     */
    public static int __IPHONE_16_7() {
        return __IPHONE_16_7;
    }
    private static final int __IPHONE_17_0 = (int)170000L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_17_0 170000
     * }
     */
    public static int __IPHONE_17_0() {
        return __IPHONE_17_0;
    }
    private static final int __IPHONE_17_1 = (int)170100L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_17_1 170100
     * }
     */
    public static int __IPHONE_17_1() {
        return __IPHONE_17_1;
    }
    private static final int __IPHONE_17_2 = (int)170200L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_17_2 170200
     * }
     */
    public static int __IPHONE_17_2() {
        return __IPHONE_17_2;
    }
    private static final int __IPHONE_17_3 = (int)170300L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_17_3 170300
     * }
     */
    public static int __IPHONE_17_3() {
        return __IPHONE_17_3;
    }
    private static final int __IPHONE_17_4 = (int)170400L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_17_4 170400
     * }
     */
    public static int __IPHONE_17_4() {
        return __IPHONE_17_4;
    }
    private static final int __WATCHOS_1_0 = (int)10000L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_1_0 10000
     * }
     */
    public static int __WATCHOS_1_0() {
        return __WATCHOS_1_0;
    }
    private static final int __WATCHOS_2_0 = (int)20000L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_2_0 20000
     * }
     */
    public static int __WATCHOS_2_0() {
        return __WATCHOS_2_0;
    }
    private static final int __WATCHOS_2_1 = (int)20100L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_2_1 20100
     * }
     */
    public static int __WATCHOS_2_1() {
        return __WATCHOS_2_1;
    }
    private static final int __WATCHOS_2_2 = (int)20200L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_2_2 20200
     * }
     */
    public static int __WATCHOS_2_2() {
        return __WATCHOS_2_2;
    }
    private static final int __WATCHOS_3_0 = (int)30000L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_3_0 30000
     * }
     */
    public static int __WATCHOS_3_0() {
        return __WATCHOS_3_0;
    }
    private static final int __WATCHOS_3_1 = (int)30100L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_3_1 30100
     * }
     */
    public static int __WATCHOS_3_1() {
        return __WATCHOS_3_1;
    }
    private static final int __WATCHOS_3_1_1 = (int)30101L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_3_1_1 30101
     * }
     */
    public static int __WATCHOS_3_1_1() {
        return __WATCHOS_3_1_1;
    }
    private static final int __WATCHOS_3_2 = (int)30200L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_3_2 30200
     * }
     */
    public static int __WATCHOS_3_2() {
        return __WATCHOS_3_2;
    }
    private static final int __WATCHOS_4_0 = (int)40000L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_4_0 40000
     * }
     */
    public static int __WATCHOS_4_0() {
        return __WATCHOS_4_0;
    }
    private static final int __WATCHOS_4_1 = (int)40100L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_4_1 40100
     * }
     */
    public static int __WATCHOS_4_1() {
        return __WATCHOS_4_1;
    }
    private static final int __WATCHOS_4_2 = (int)40200L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_4_2 40200
     * }
     */
    public static int __WATCHOS_4_2() {
        return __WATCHOS_4_2;
    }
    private static final int __WATCHOS_4_3 = (int)40300L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_4_3 40300
     * }
     */
    public static int __WATCHOS_4_3() {
        return __WATCHOS_4_3;
    }
    private static final int __WATCHOS_5_0 = (int)50000L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_5_0 50000
     * }
     */
    public static int __WATCHOS_5_0() {
        return __WATCHOS_5_0;
    }
    private static final int __WATCHOS_5_1 = (int)50100L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_5_1 50100
     * }
     */
    public static int __WATCHOS_5_1() {
        return __WATCHOS_5_1;
    }
    private static final int __WATCHOS_5_2 = (int)50200L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_5_2 50200
     * }
     */
    public static int __WATCHOS_5_2() {
        return __WATCHOS_5_2;
    }
    private static final int __WATCHOS_5_3 = (int)50300L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_5_3 50300
     * }
     */
    public static int __WATCHOS_5_3() {
        return __WATCHOS_5_3;
    }
    private static final int __WATCHOS_6_0 = (int)60000L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_6_0 60000
     * }
     */
    public static int __WATCHOS_6_0() {
        return __WATCHOS_6_0;
    }
    private static final int __WATCHOS_6_1 = (int)60100L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_6_1 60100
     * }
     */
    public static int __WATCHOS_6_1() {
        return __WATCHOS_6_1;
    }
    private static final int __WATCHOS_6_2 = (int)60200L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_6_2 60200
     * }
     */
    public static int __WATCHOS_6_2() {
        return __WATCHOS_6_2;
    }
    private static final int __WATCHOS_7_0 = (int)70000L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_7_0 70000
     * }
     */
    public static int __WATCHOS_7_0() {
        return __WATCHOS_7_0;
    }
    private static final int __WATCHOS_7_1 = (int)70100L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_7_1 70100
     * }
     */
    public static int __WATCHOS_7_1() {
        return __WATCHOS_7_1;
    }
    private static final int __WATCHOS_7_2 = (int)70200L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_7_2 70200
     * }
     */
    public static int __WATCHOS_7_2() {
        return __WATCHOS_7_2;
    }
    private static final int __WATCHOS_7_3 = (int)70300L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_7_3 70300
     * }
     */
    public static int __WATCHOS_7_3() {
        return __WATCHOS_7_3;
    }
    private static final int __WATCHOS_7_4 = (int)70400L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_7_4 70400
     * }
     */
    public static int __WATCHOS_7_4() {
        return __WATCHOS_7_4;
    }
    private static final int __WATCHOS_7_5 = (int)70500L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_7_5 70500
     * }
     */
    public static int __WATCHOS_7_5() {
        return __WATCHOS_7_5;
    }
    private static final int __WATCHOS_7_6 = (int)70600L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_7_6 70600
     * }
     */
    public static int __WATCHOS_7_6() {
        return __WATCHOS_7_6;
    }
    private static final int __WATCHOS_8_0 = (int)80000L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_8_0 80000
     * }
     */
    public static int __WATCHOS_8_0() {
        return __WATCHOS_8_0;
    }
    private static final int __WATCHOS_8_1 = (int)80100L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_8_1 80100
     * }
     */
    public static int __WATCHOS_8_1() {
        return __WATCHOS_8_1;
    }
    private static final int __WATCHOS_8_3 = (int)80300L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_8_3 80300
     * }
     */
    public static int __WATCHOS_8_3() {
        return __WATCHOS_8_3;
    }
    private static final int __WATCHOS_8_4 = (int)80400L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_8_4 80400
     * }
     */
    public static int __WATCHOS_8_4() {
        return __WATCHOS_8_4;
    }
    private static final int __WATCHOS_8_5 = (int)80500L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_8_5 80500
     * }
     */
    public static int __WATCHOS_8_5() {
        return __WATCHOS_8_5;
    }
    private static final int __WATCHOS_8_6 = (int)80600L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_8_6 80600
     * }
     */
    public static int __WATCHOS_8_6() {
        return __WATCHOS_8_6;
    }
    private static final int __WATCHOS_8_7 = (int)80700L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_8_7 80700
     * }
     */
    public static int __WATCHOS_8_7() {
        return __WATCHOS_8_7;
    }
    private static final int __WATCHOS_8_8 = (int)80800L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_8_8 80800
     * }
     */
    public static int __WATCHOS_8_8() {
        return __WATCHOS_8_8;
    }
    private static final int __WATCHOS_9_0 = (int)90000L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_9_0 90000
     * }
     */
    public static int __WATCHOS_9_0() {
        return __WATCHOS_9_0;
    }
    private static final int __WATCHOS_9_1 = (int)90100L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_9_1 90100
     * }
     */
    public static int __WATCHOS_9_1() {
        return __WATCHOS_9_1;
    }
    private static final int __WATCHOS_9_2 = (int)90200L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_9_2 90200
     * }
     */
    public static int __WATCHOS_9_2() {
        return __WATCHOS_9_2;
    }
    private static final int __WATCHOS_9_3 = (int)90300L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_9_3 90300
     * }
     */
    public static int __WATCHOS_9_3() {
        return __WATCHOS_9_3;
    }
    private static final int __WATCHOS_9_4 = (int)90400L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_9_4 90400
     * }
     */
    public static int __WATCHOS_9_4() {
        return __WATCHOS_9_4;
    }
    private static final int __WATCHOS_9_5 = (int)90500L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_9_5 90500
     * }
     */
    public static int __WATCHOS_9_5() {
        return __WATCHOS_9_5;
    }
    private static final int __WATCHOS_9_6 = (int)90600L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_9_6 90600
     * }
     */
    public static int __WATCHOS_9_6() {
        return __WATCHOS_9_6;
    }
    private static final int __WATCHOS_10_0 = (int)100000L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_10_0 100000
     * }
     */
    public static int __WATCHOS_10_0() {
        return __WATCHOS_10_0;
    }
    private static final int __WATCHOS_10_1 = (int)100100L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_10_1 100100
     * }
     */
    public static int __WATCHOS_10_1() {
        return __WATCHOS_10_1;
    }
    private static final int __WATCHOS_10_2 = (int)100200L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_10_2 100200
     * }
     */
    public static int __WATCHOS_10_2() {
        return __WATCHOS_10_2;
    }
    private static final int __WATCHOS_10_3 = (int)100300L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_10_3 100300
     * }
     */
    public static int __WATCHOS_10_3() {
        return __WATCHOS_10_3;
    }
    private static final int __WATCHOS_10_4 = (int)100400L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_10_4 100400
     * }
     */
    public static int __WATCHOS_10_4() {
        return __WATCHOS_10_4;
    }
    private static final int __TVOS_9_0 = (int)90000L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_9_0 90000
     * }
     */
    public static int __TVOS_9_0() {
        return __TVOS_9_0;
    }
    private static final int __TVOS_9_1 = (int)90100L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_9_1 90100
     * }
     */
    public static int __TVOS_9_1() {
        return __TVOS_9_1;
    }
    private static final int __TVOS_9_2 = (int)90200L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_9_2 90200
     * }
     */
    public static int __TVOS_9_2() {
        return __TVOS_9_2;
    }
    private static final int __TVOS_10_0 = (int)100000L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_10_0 100000
     * }
     */
    public static int __TVOS_10_0() {
        return __TVOS_10_0;
    }
    private static final int __TVOS_10_0_1 = (int)100001L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_10_0_1 100001
     * }
     */
    public static int __TVOS_10_0_1() {
        return __TVOS_10_0_1;
    }
    private static final int __TVOS_10_1 = (int)100100L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_10_1 100100
     * }
     */
    public static int __TVOS_10_1() {
        return __TVOS_10_1;
    }
    private static final int __TVOS_10_2 = (int)100200L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_10_2 100200
     * }
     */
    public static int __TVOS_10_2() {
        return __TVOS_10_2;
    }
    private static final int __TVOS_11_0 = (int)110000L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_11_0 110000
     * }
     */
    public static int __TVOS_11_0() {
        return __TVOS_11_0;
    }
    private static final int __TVOS_11_1 = (int)110100L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_11_1 110100
     * }
     */
    public static int __TVOS_11_1() {
        return __TVOS_11_1;
    }
    private static final int __TVOS_11_2 = (int)110200L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_11_2 110200
     * }
     */
    public static int __TVOS_11_2() {
        return __TVOS_11_2;
    }
    private static final int __TVOS_11_3 = (int)110300L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_11_3 110300
     * }
     */
    public static int __TVOS_11_3() {
        return __TVOS_11_3;
    }
    private static final int __TVOS_11_4 = (int)110400L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_11_4 110400
     * }
     */
    public static int __TVOS_11_4() {
        return __TVOS_11_4;
    }
    private static final int __TVOS_12_0 = (int)120000L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_12_0 120000
     * }
     */
    public static int __TVOS_12_0() {
        return __TVOS_12_0;
    }
    private static final int __TVOS_12_1 = (int)120100L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_12_1 120100
     * }
     */
    public static int __TVOS_12_1() {
        return __TVOS_12_1;
    }
    private static final int __TVOS_12_2 = (int)120200L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_12_2 120200
     * }
     */
    public static int __TVOS_12_2() {
        return __TVOS_12_2;
    }
    private static final int __TVOS_12_3 = (int)120300L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_12_3 120300
     * }
     */
    public static int __TVOS_12_3() {
        return __TVOS_12_3;
    }
    private static final int __TVOS_12_4 = (int)120400L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_12_4 120400
     * }
     */
    public static int __TVOS_12_4() {
        return __TVOS_12_4;
    }
    private static final int __TVOS_13_0 = (int)130000L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_13_0 130000
     * }
     */
    public static int __TVOS_13_0() {
        return __TVOS_13_0;
    }
    private static final int __TVOS_13_2 = (int)130200L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_13_2 130200
     * }
     */
    public static int __TVOS_13_2() {
        return __TVOS_13_2;
    }
    private static final int __TVOS_13_3 = (int)130300L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_13_3 130300
     * }
     */
    public static int __TVOS_13_3() {
        return __TVOS_13_3;
    }
    private static final int __TVOS_13_4 = (int)130400L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_13_4 130400
     * }
     */
    public static int __TVOS_13_4() {
        return __TVOS_13_4;
    }
    private static final int __TVOS_14_0 = (int)140000L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_14_0 140000
     * }
     */
    public static int __TVOS_14_0() {
        return __TVOS_14_0;
    }
    private static final int __TVOS_14_1 = (int)140100L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_14_1 140100
     * }
     */
    public static int __TVOS_14_1() {
        return __TVOS_14_1;
    }
    private static final int __TVOS_14_2 = (int)140200L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_14_2 140200
     * }
     */
    public static int __TVOS_14_2() {
        return __TVOS_14_2;
    }
    private static final int __TVOS_14_3 = (int)140300L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_14_3 140300
     * }
     */
    public static int __TVOS_14_3() {
        return __TVOS_14_3;
    }
    private static final int __TVOS_14_5 = (int)140500L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_14_5 140500
     * }
     */
    public static int __TVOS_14_5() {
        return __TVOS_14_5;
    }
    private static final int __TVOS_14_6 = (int)140600L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_14_6 140600
     * }
     */
    public static int __TVOS_14_6() {
        return __TVOS_14_6;
    }
    private static final int __TVOS_14_7 = (int)140700L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_14_7 140700
     * }
     */
    public static int __TVOS_14_7() {
        return __TVOS_14_7;
    }
    private static final int __TVOS_15_0 = (int)150000L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_15_0 150000
     * }
     */
    public static int __TVOS_15_0() {
        return __TVOS_15_0;
    }
    private static final int __TVOS_15_1 = (int)150100L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_15_1 150100
     * }
     */
    public static int __TVOS_15_1() {
        return __TVOS_15_1;
    }
    private static final int __TVOS_15_2 = (int)150200L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_15_2 150200
     * }
     */
    public static int __TVOS_15_2() {
        return __TVOS_15_2;
    }
    private static final int __TVOS_15_3 = (int)150300L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_15_3 150300
     * }
     */
    public static int __TVOS_15_3() {
        return __TVOS_15_3;
    }
    private static final int __TVOS_15_4 = (int)150400L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_15_4 150400
     * }
     */
    public static int __TVOS_15_4() {
        return __TVOS_15_4;
    }
    private static final int __TVOS_15_5 = (int)150500L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_15_5 150500
     * }
     */
    public static int __TVOS_15_5() {
        return __TVOS_15_5;
    }
    private static final int __TVOS_15_6 = (int)150600L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_15_6 150600
     * }
     */
    public static int __TVOS_15_6() {
        return __TVOS_15_6;
    }
    private static final int __TVOS_16_0 = (int)160000L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_16_0 160000
     * }
     */
    public static int __TVOS_16_0() {
        return __TVOS_16_0;
    }
    private static final int __TVOS_16_1 = (int)160100L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_16_1 160100
     * }
     */
    public static int __TVOS_16_1() {
        return __TVOS_16_1;
    }
    private static final int __TVOS_16_2 = (int)160200L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_16_2 160200
     * }
     */
    public static int __TVOS_16_2() {
        return __TVOS_16_2;
    }
    private static final int __TVOS_16_3 = (int)160300L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_16_3 160300
     * }
     */
    public static int __TVOS_16_3() {
        return __TVOS_16_3;
    }
    private static final int __TVOS_16_4 = (int)160400L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_16_4 160400
     * }
     */
    public static int __TVOS_16_4() {
        return __TVOS_16_4;
    }
    private static final int __TVOS_16_5 = (int)160500L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_16_5 160500
     * }
     */
    public static int __TVOS_16_5() {
        return __TVOS_16_5;
    }
    private static final int __TVOS_16_6 = (int)160600L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_16_6 160600
     * }
     */
    public static int __TVOS_16_6() {
        return __TVOS_16_6;
    }
    private static final int __TVOS_17_0 = (int)170000L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_17_0 170000
     * }
     */
    public static int __TVOS_17_0() {
        return __TVOS_17_0;
    }
    private static final int __TVOS_17_1 = (int)170100L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_17_1 170100
     * }
     */
    public static int __TVOS_17_1() {
        return __TVOS_17_1;
    }
    private static final int __TVOS_17_2 = (int)170200L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_17_2 170200
     * }
     */
    public static int __TVOS_17_2() {
        return __TVOS_17_2;
    }
    private static final int __TVOS_17_3 = (int)170300L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_17_3 170300
     * }
     */
    public static int __TVOS_17_3() {
        return __TVOS_17_3;
    }
    private static final int __TVOS_17_4 = (int)170400L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_17_4 170400
     * }
     */
    public static int __TVOS_17_4() {
        return __TVOS_17_4;
    }
    private static final int __BRIDGEOS_2_0 = (int)20000L;
    /**
     * {@snippet lang=c :
     * #define __BRIDGEOS_2_0 20000
     * }
     */
    public static int __BRIDGEOS_2_0() {
        return __BRIDGEOS_2_0;
    }
    private static final int __BRIDGEOS_3_0 = (int)30000L;
    /**
     * {@snippet lang=c :
     * #define __BRIDGEOS_3_0 30000
     * }
     */
    public static int __BRIDGEOS_3_0() {
        return __BRIDGEOS_3_0;
    }
    private static final int __BRIDGEOS_3_1 = (int)30100L;
    /**
     * {@snippet lang=c :
     * #define __BRIDGEOS_3_1 30100
     * }
     */
    public static int __BRIDGEOS_3_1() {
        return __BRIDGEOS_3_1;
    }
    private static final int __BRIDGEOS_3_4 = (int)30400L;
    /**
     * {@snippet lang=c :
     * #define __BRIDGEOS_3_4 30400
     * }
     */
    public static int __BRIDGEOS_3_4() {
        return __BRIDGEOS_3_4;
    }
    private static final int __BRIDGEOS_4_0 = (int)40000L;
    /**
     * {@snippet lang=c :
     * #define __BRIDGEOS_4_0 40000
     * }
     */
    public static int __BRIDGEOS_4_0() {
        return __BRIDGEOS_4_0;
    }
    private static final int __BRIDGEOS_4_1 = (int)40100L;
    /**
     * {@snippet lang=c :
     * #define __BRIDGEOS_4_1 40100
     * }
     */
    public static int __BRIDGEOS_4_1() {
        return __BRIDGEOS_4_1;
    }
    private static final int __BRIDGEOS_5_0 = (int)50000L;
    /**
     * {@snippet lang=c :
     * #define __BRIDGEOS_5_0 50000
     * }
     */
    public static int __BRIDGEOS_5_0() {
        return __BRIDGEOS_5_0;
    }
    private static final int __BRIDGEOS_5_1 = (int)50100L;
    /**
     * {@snippet lang=c :
     * #define __BRIDGEOS_5_1 50100
     * }
     */
    public static int __BRIDGEOS_5_1() {
        return __BRIDGEOS_5_1;
    }
    private static final int __BRIDGEOS_5_3 = (int)50300L;
    /**
     * {@snippet lang=c :
     * #define __BRIDGEOS_5_3 50300
     * }
     */
    public static int __BRIDGEOS_5_3() {
        return __BRIDGEOS_5_3;
    }
    private static final int __BRIDGEOS_6_0 = (int)60000L;
    /**
     * {@snippet lang=c :
     * #define __BRIDGEOS_6_0 60000
     * }
     */
    public static int __BRIDGEOS_6_0() {
        return __BRIDGEOS_6_0;
    }
    private static final int __BRIDGEOS_6_2 = (int)60200L;
    /**
     * {@snippet lang=c :
     * #define __BRIDGEOS_6_2 60200
     * }
     */
    public static int __BRIDGEOS_6_2() {
        return __BRIDGEOS_6_2;
    }
    private static final int __BRIDGEOS_6_4 = (int)60400L;
    /**
     * {@snippet lang=c :
     * #define __BRIDGEOS_6_4 60400
     * }
     */
    public static int __BRIDGEOS_6_4() {
        return __BRIDGEOS_6_4;
    }
    private static final int __BRIDGEOS_6_5 = (int)60500L;
    /**
     * {@snippet lang=c :
     * #define __BRIDGEOS_6_5 60500
     * }
     */
    public static int __BRIDGEOS_6_5() {
        return __BRIDGEOS_6_5;
    }
    private static final int __BRIDGEOS_6_6 = (int)60600L;
    /**
     * {@snippet lang=c :
     * #define __BRIDGEOS_6_6 60600
     * }
     */
    public static int __BRIDGEOS_6_6() {
        return __BRIDGEOS_6_6;
    }
    private static final int __BRIDGEOS_7_0 = (int)70000L;
    /**
     * {@snippet lang=c :
     * #define __BRIDGEOS_7_0 70000
     * }
     */
    public static int __BRIDGEOS_7_0() {
        return __BRIDGEOS_7_0;
    }
    private static final int __BRIDGEOS_7_1 = (int)70100L;
    /**
     * {@snippet lang=c :
     * #define __BRIDGEOS_7_1 70100
     * }
     */
    public static int __BRIDGEOS_7_1() {
        return __BRIDGEOS_7_1;
    }
    private static final int __BRIDGEOS_7_2 = (int)70200L;
    /**
     * {@snippet lang=c :
     * #define __BRIDGEOS_7_2 70200
     * }
     */
    public static int __BRIDGEOS_7_2() {
        return __BRIDGEOS_7_2;
    }
    private static final int __BRIDGEOS_7_3 = (int)70300L;
    /**
     * {@snippet lang=c :
     * #define __BRIDGEOS_7_3 70300
     * }
     */
    public static int __BRIDGEOS_7_3() {
        return __BRIDGEOS_7_3;
    }
    private static final int __BRIDGEOS_7_4 = (int)70400L;
    /**
     * {@snippet lang=c :
     * #define __BRIDGEOS_7_4 70400
     * }
     */
    public static int __BRIDGEOS_7_4() {
        return __BRIDGEOS_7_4;
    }
    private static final int __BRIDGEOS_7_6 = (int)70600L;
    /**
     * {@snippet lang=c :
     * #define __BRIDGEOS_7_6 70600
     * }
     */
    public static int __BRIDGEOS_7_6() {
        return __BRIDGEOS_7_6;
    }
    private static final int __BRIDGEOS_8_0 = (int)80000L;
    /**
     * {@snippet lang=c :
     * #define __BRIDGEOS_8_0 80000
     * }
     */
    public static int __BRIDGEOS_8_0() {
        return __BRIDGEOS_8_0;
    }
    private static final int __BRIDGEOS_8_1 = (int)80100L;
    /**
     * {@snippet lang=c :
     * #define __BRIDGEOS_8_1 80100
     * }
     */
    public static int __BRIDGEOS_8_1() {
        return __BRIDGEOS_8_1;
    }
    private static final int __BRIDGEOS_8_2 = (int)80200L;
    /**
     * {@snippet lang=c :
     * #define __BRIDGEOS_8_2 80200
     * }
     */
    public static int __BRIDGEOS_8_2() {
        return __BRIDGEOS_8_2;
    }
    private static final int __BRIDGEOS_8_3 = (int)80300L;
    /**
     * {@snippet lang=c :
     * #define __BRIDGEOS_8_3 80300
     * }
     */
    public static int __BRIDGEOS_8_3() {
        return __BRIDGEOS_8_3;
    }
    private static final int __BRIDGEOS_8_4 = (int)80400L;
    /**
     * {@snippet lang=c :
     * #define __BRIDGEOS_8_4 80400
     * }
     */
    public static int __BRIDGEOS_8_4() {
        return __BRIDGEOS_8_4;
    }
    private static final int __DRIVERKIT_19_0 = (int)190000L;
    /**
     * {@snippet lang=c :
     * #define __DRIVERKIT_19_0 190000
     * }
     */
    public static int __DRIVERKIT_19_0() {
        return __DRIVERKIT_19_0;
    }
    private static final int __DRIVERKIT_20_0 = (int)200000L;
    /**
     * {@snippet lang=c :
     * #define __DRIVERKIT_20_0 200000
     * }
     */
    public static int __DRIVERKIT_20_0() {
        return __DRIVERKIT_20_0;
    }
    private static final int __DRIVERKIT_21_0 = (int)210000L;
    /**
     * {@snippet lang=c :
     * #define __DRIVERKIT_21_0 210000
     * }
     */
    public static int __DRIVERKIT_21_0() {
        return __DRIVERKIT_21_0;
    }
    private static final int __DRIVERKIT_22_0 = (int)220000L;
    /**
     * {@snippet lang=c :
     * #define __DRIVERKIT_22_0 220000
     * }
     */
    public static int __DRIVERKIT_22_0() {
        return __DRIVERKIT_22_0;
    }
    private static final int __DRIVERKIT_22_4 = (int)220400L;
    /**
     * {@snippet lang=c :
     * #define __DRIVERKIT_22_4 220400
     * }
     */
    public static int __DRIVERKIT_22_4() {
        return __DRIVERKIT_22_4;
    }
    private static final int __DRIVERKIT_22_5 = (int)220500L;
    /**
     * {@snippet lang=c :
     * #define __DRIVERKIT_22_5 220500
     * }
     */
    public static int __DRIVERKIT_22_5() {
        return __DRIVERKIT_22_5;
    }
    private static final int __DRIVERKIT_22_6 = (int)220600L;
    /**
     * {@snippet lang=c :
     * #define __DRIVERKIT_22_6 220600
     * }
     */
    public static int __DRIVERKIT_22_6() {
        return __DRIVERKIT_22_6;
    }
    private static final int __DRIVERKIT_23_0 = (int)230000L;
    /**
     * {@snippet lang=c :
     * #define __DRIVERKIT_23_0 230000
     * }
     */
    public static int __DRIVERKIT_23_0() {
        return __DRIVERKIT_23_0;
    }
    private static final int __DRIVERKIT_23_1 = (int)230100L;
    /**
     * {@snippet lang=c :
     * #define __DRIVERKIT_23_1 230100
     * }
     */
    public static int __DRIVERKIT_23_1() {
        return __DRIVERKIT_23_1;
    }
    private static final int __DRIVERKIT_23_2 = (int)230200L;
    /**
     * {@snippet lang=c :
     * #define __DRIVERKIT_23_2 230200
     * }
     */
    public static int __DRIVERKIT_23_2() {
        return __DRIVERKIT_23_2;
    }
    private static final int __DRIVERKIT_23_3 = (int)230300L;
    /**
     * {@snippet lang=c :
     * #define __DRIVERKIT_23_3 230300
     * }
     */
    public static int __DRIVERKIT_23_3() {
        return __DRIVERKIT_23_3;
    }
    private static final int __DRIVERKIT_23_4 = (int)230400L;
    /**
     * {@snippet lang=c :
     * #define __DRIVERKIT_23_4 230400
     * }
     */
    public static int __DRIVERKIT_23_4() {
        return __DRIVERKIT_23_4;
    }
    private static final int __VISIONOS_1_0 = (int)10000L;
    /**
     * {@snippet lang=c :
     * #define __VISIONOS_1_0 10000
     * }
     */
    public static int __VISIONOS_1_0() {
        return __VISIONOS_1_0;
    }
    private static final int __VISIONOS_1_1 = (int)10100L;
    /**
     * {@snippet lang=c :
     * #define __VISIONOS_1_1 10100
     * }
     */
    public static int __VISIONOS_1_1() {
        return __VISIONOS_1_1;
    }
    private static final int __ENABLE_LEGACY_MAC_AVAILABILITY = (int)1L;
    /**
     * {@snippet lang=c :
     * #define __ENABLE_LEGACY_MAC_AVAILABILITY 1
     * }
     */
    public static int __ENABLE_LEGACY_MAC_AVAILABILITY() {
        return __ENABLE_LEGACY_MAC_AVAILABILITY;
    }
    private static final int __DARWIN_FD_SETSIZE = (int)1024L;
    /**
     * {@snippet lang=c :
     * #define __DARWIN_FD_SETSIZE 1024
     * }
     */
    public static int __DARWIN_FD_SETSIZE() {
        return __DARWIN_FD_SETSIZE;
    }
    private static final int __DARWIN_NBBY = (int)8L;
    /**
     * {@snippet lang=c :
     * #define __DARWIN_NBBY 8
     * }
     */
    public static int __DARWIN_NBBY() {
        return __DARWIN_NBBY;
    }
    private static final int KEV_INET_SUBCLASS = (int)1L;
    /**
     * {@snippet lang=c :
     * #define KEV_INET_SUBCLASS 1
     * }
     */
    public static int KEV_INET_SUBCLASS() {
        return KEV_INET_SUBCLASS;
    }
    private static final int KEV_INET_NEW_ADDR = (int)1L;
    /**
     * {@snippet lang=c :
     * #define KEV_INET_NEW_ADDR 1
     * }
     */
    public static int KEV_INET_NEW_ADDR() {
        return KEV_INET_NEW_ADDR;
    }
    private static final int KEV_INET_CHANGED_ADDR = (int)2L;
    /**
     * {@snippet lang=c :
     * #define KEV_INET_CHANGED_ADDR 2
     * }
     */
    public static int KEV_INET_CHANGED_ADDR() {
        return KEV_INET_CHANGED_ADDR;
    }
    private static final int KEV_INET_ADDR_DELETED = (int)3L;
    /**
     * {@snippet lang=c :
     * #define KEV_INET_ADDR_DELETED 3
     * }
     */
    public static int KEV_INET_ADDR_DELETED() {
        return KEV_INET_ADDR_DELETED;
    }
    private static final int KEV_INET_SIFDSTADDR = (int)4L;
    /**
     * {@snippet lang=c :
     * #define KEV_INET_SIFDSTADDR 4
     * }
     */
    public static int KEV_INET_SIFDSTADDR() {
        return KEV_INET_SIFDSTADDR;
    }
    private static final int KEV_INET_SIFBRDADDR = (int)5L;
    /**
     * {@snippet lang=c :
     * #define KEV_INET_SIFBRDADDR 5
     * }
     */
    public static int KEV_INET_SIFBRDADDR() {
        return KEV_INET_SIFBRDADDR;
    }
    private static final int KEV_INET_SIFNETMASK = (int)6L;
    /**
     * {@snippet lang=c :
     * #define KEV_INET_SIFNETMASK 6
     * }
     */
    public static int KEV_INET_SIFNETMASK() {
        return KEV_INET_SIFNETMASK;
    }
    private static final int KEV_INET_ARPCOLLISION = (int)7L;
    /**
     * {@snippet lang=c :
     * #define KEV_INET_ARPCOLLISION 7
     * }
     */
    public static int KEV_INET_ARPCOLLISION() {
        return KEV_INET_ARPCOLLISION;
    }
    private static final int KEV_INET_PORTINUSE = (int)8L;
    /**
     * {@snippet lang=c :
     * #define KEV_INET_PORTINUSE 8
     * }
     */
    public static int KEV_INET_PORTINUSE() {
        return KEV_INET_PORTINUSE;
    }
    private static final int KEV_INET_ARPRTRFAILURE = (int)9L;
    /**
     * {@snippet lang=c :
     * #define KEV_INET_ARPRTRFAILURE 9
     * }
     */
    public static int KEV_INET_ARPRTRFAILURE() {
        return KEV_INET_ARPRTRFAILURE;
    }
    private static final int KEV_INET_ARPRTRALIVE = (int)10L;
    /**
     * {@snippet lang=c :
     * #define KEV_INET_ARPRTRALIVE 10
     * }
     */
    public static int KEV_INET_ARPRTRALIVE() {
        return KEV_INET_ARPRTRALIVE;
    }
    private static final int KEV_DL_SUBCLASS = (int)2L;
    /**
     * {@snippet lang=c :
     * #define KEV_DL_SUBCLASS 2
     * }
     */
    public static int KEV_DL_SUBCLASS() {
        return KEV_DL_SUBCLASS;
    }
    private static final int KEV_DL_SIFFLAGS = (int)1L;
    /**
     * {@snippet lang=c :
     * #define KEV_DL_SIFFLAGS 1
     * }
     */
    public static int KEV_DL_SIFFLAGS() {
        return KEV_DL_SIFFLAGS;
    }
    private static final int KEV_DL_SIFMETRICS = (int)2L;
    /**
     * {@snippet lang=c :
     * #define KEV_DL_SIFMETRICS 2
     * }
     */
    public static int KEV_DL_SIFMETRICS() {
        return KEV_DL_SIFMETRICS;
    }
    private static final int KEV_DL_SIFMTU = (int)3L;
    /**
     * {@snippet lang=c :
     * #define KEV_DL_SIFMTU 3
     * }
     */
    public static int KEV_DL_SIFMTU() {
        return KEV_DL_SIFMTU;
    }
    private static final int KEV_DL_SIFPHYS = (int)4L;
    /**
     * {@snippet lang=c :
     * #define KEV_DL_SIFPHYS 4
     * }
     */
    public static int KEV_DL_SIFPHYS() {
        return KEV_DL_SIFPHYS;
    }
    private static final int KEV_DL_SIFMEDIA = (int)5L;
    /**
     * {@snippet lang=c :
     * #define KEV_DL_SIFMEDIA 5
     * }
     */
    public static int KEV_DL_SIFMEDIA() {
        return KEV_DL_SIFMEDIA;
    }
    private static final int KEV_DL_SIFGENERIC = (int)6L;
    /**
     * {@snippet lang=c :
     * #define KEV_DL_SIFGENERIC 6
     * }
     */
    public static int KEV_DL_SIFGENERIC() {
        return KEV_DL_SIFGENERIC;
    }
    private static final int KEV_DL_ADDMULTI = (int)7L;
    /**
     * {@snippet lang=c :
     * #define KEV_DL_ADDMULTI 7
     * }
     */
    public static int KEV_DL_ADDMULTI() {
        return KEV_DL_ADDMULTI;
    }
    private static final int KEV_DL_DELMULTI = (int)8L;
    /**
     * {@snippet lang=c :
     * #define KEV_DL_DELMULTI 8
     * }
     */
    public static int KEV_DL_DELMULTI() {
        return KEV_DL_DELMULTI;
    }
    private static final int KEV_DL_IF_ATTACHED = (int)9L;
    /**
     * {@snippet lang=c :
     * #define KEV_DL_IF_ATTACHED 9
     * }
     */
    public static int KEV_DL_IF_ATTACHED() {
        return KEV_DL_IF_ATTACHED;
    }
    private static final int KEV_DL_IF_DETACHING = (int)10L;
    /**
     * {@snippet lang=c :
     * #define KEV_DL_IF_DETACHING 10
     * }
     */
    public static int KEV_DL_IF_DETACHING() {
        return KEV_DL_IF_DETACHING;
    }
    private static final int KEV_DL_IF_DETACHED = (int)11L;
    /**
     * {@snippet lang=c :
     * #define KEV_DL_IF_DETACHED 11
     * }
     */
    public static int KEV_DL_IF_DETACHED() {
        return KEV_DL_IF_DETACHED;
    }
    private static final int KEV_DL_LINK_OFF = (int)12L;
    /**
     * {@snippet lang=c :
     * #define KEV_DL_LINK_OFF 12
     * }
     */
    public static int KEV_DL_LINK_OFF() {
        return KEV_DL_LINK_OFF;
    }
    private static final int KEV_DL_LINK_ON = (int)13L;
    /**
     * {@snippet lang=c :
     * #define KEV_DL_LINK_ON 13
     * }
     */
    public static int KEV_DL_LINK_ON() {
        return KEV_DL_LINK_ON;
    }
    private static final int KEV_DL_PROTO_ATTACHED = (int)14L;
    /**
     * {@snippet lang=c :
     * #define KEV_DL_PROTO_ATTACHED 14
     * }
     */
    public static int KEV_DL_PROTO_ATTACHED() {
        return KEV_DL_PROTO_ATTACHED;
    }
    private static final int KEV_DL_PROTO_DETACHED = (int)15L;
    /**
     * {@snippet lang=c :
     * #define KEV_DL_PROTO_DETACHED 15
     * }
     */
    public static int KEV_DL_PROTO_DETACHED() {
        return KEV_DL_PROTO_DETACHED;
    }
    private static final int KEV_DL_LINK_ADDRESS_CHANGED = (int)16L;
    /**
     * {@snippet lang=c :
     * #define KEV_DL_LINK_ADDRESS_CHANGED 16
     * }
     */
    public static int KEV_DL_LINK_ADDRESS_CHANGED() {
        return KEV_DL_LINK_ADDRESS_CHANGED;
    }
    private static final int KEV_DL_WAKEFLAGS_CHANGED = (int)17L;
    /**
     * {@snippet lang=c :
     * #define KEV_DL_WAKEFLAGS_CHANGED 17
     * }
     */
    public static int KEV_DL_WAKEFLAGS_CHANGED() {
        return KEV_DL_WAKEFLAGS_CHANGED;
    }
    private static final int KEV_DL_IF_IDLE_ROUTE_REFCNT = (int)18L;
    /**
     * {@snippet lang=c :
     * #define KEV_DL_IF_IDLE_ROUTE_REFCNT 18
     * }
     */
    public static int KEV_DL_IF_IDLE_ROUTE_REFCNT() {
        return KEV_DL_IF_IDLE_ROUTE_REFCNT;
    }
    private static final int KEV_DL_IFCAP_CHANGED = (int)19L;
    /**
     * {@snippet lang=c :
     * #define KEV_DL_IFCAP_CHANGED 19
     * }
     */
    public static int KEV_DL_IFCAP_CHANGED() {
        return KEV_DL_IFCAP_CHANGED;
    }
    private static final int KEV_DL_LINK_QUALITY_METRIC_CHANGED = (int)20L;
    /**
     * {@snippet lang=c :
     * #define KEV_DL_LINK_QUALITY_METRIC_CHANGED 20
     * }
     */
    public static int KEV_DL_LINK_QUALITY_METRIC_CHANGED() {
        return KEV_DL_LINK_QUALITY_METRIC_CHANGED;
    }
    private static final int KEV_DL_NODE_PRESENCE = (int)21L;
    /**
     * {@snippet lang=c :
     * #define KEV_DL_NODE_PRESENCE 21
     * }
     */
    public static int KEV_DL_NODE_PRESENCE() {
        return KEV_DL_NODE_PRESENCE;
    }
    private static final int KEV_DL_NODE_ABSENCE = (int)22L;
    /**
     * {@snippet lang=c :
     * #define KEV_DL_NODE_ABSENCE 22
     * }
     */
    public static int KEV_DL_NODE_ABSENCE() {
        return KEV_DL_NODE_ABSENCE;
    }
    private static final int KEV_DL_PRIMARY_ELECTED = (int)23L;
    /**
     * {@snippet lang=c :
     * #define KEV_DL_PRIMARY_ELECTED 23
     * }
     */
    public static int KEV_DL_PRIMARY_ELECTED() {
        return KEV_DL_PRIMARY_ELECTED;
    }
    private static final int KEV_DL_ISSUES = (int)24L;
    /**
     * {@snippet lang=c :
     * #define KEV_DL_ISSUES 24
     * }
     */
    public static int KEV_DL_ISSUES() {
        return KEV_DL_ISSUES;
    }
    private static final int KEV_DL_IFDELEGATE_CHANGED = (int)25L;
    /**
     * {@snippet lang=c :
     * #define KEV_DL_IFDELEGATE_CHANGED 25
     * }
     */
    public static int KEV_DL_IFDELEGATE_CHANGED() {
        return KEV_DL_IFDELEGATE_CHANGED;
    }
    private static final int KEV_DL_AWDL_RESTRICTED = (int)26L;
    /**
     * {@snippet lang=c :
     * #define KEV_DL_AWDL_RESTRICTED 26
     * }
     */
    public static int KEV_DL_AWDL_RESTRICTED() {
        return KEV_DL_AWDL_RESTRICTED;
    }
    private static final int KEV_DL_AWDL_UNRESTRICTED = (int)27L;
    /**
     * {@snippet lang=c :
     * #define KEV_DL_AWDL_UNRESTRICTED 27
     * }
     */
    public static int KEV_DL_AWDL_UNRESTRICTED() {
        return KEV_DL_AWDL_UNRESTRICTED;
    }
    private static final int KEV_DL_RRC_STATE_CHANGED = (int)28L;
    /**
     * {@snippet lang=c :
     * #define KEV_DL_RRC_STATE_CHANGED 28
     * }
     */
    public static int KEV_DL_RRC_STATE_CHANGED() {
        return KEV_DL_RRC_STATE_CHANGED;
    }
    private static final int KEV_DL_QOS_MODE_CHANGED = (int)29L;
    /**
     * {@snippet lang=c :
     * #define KEV_DL_QOS_MODE_CHANGED 29
     * }
     */
    public static int KEV_DL_QOS_MODE_CHANGED() {
        return KEV_DL_QOS_MODE_CHANGED;
    }
    private static final int KEV_DL_LOW_POWER_MODE_CHANGED = (int)30L;
    /**
     * {@snippet lang=c :
     * #define KEV_DL_LOW_POWER_MODE_CHANGED 30
     * }
     */
    public static int KEV_DL_LOW_POWER_MODE_CHANGED() {
        return KEV_DL_LOW_POWER_MODE_CHANGED;
    }
    private static final int KEV_INET6_SUBCLASS = (int)6L;
    /**
     * {@snippet lang=c :
     * #define KEV_INET6_SUBCLASS 6
     * }
     */
    public static int KEV_INET6_SUBCLASS() {
        return KEV_INET6_SUBCLASS;
    }
    private static final int KEV_INET6_NEW_USER_ADDR = (int)1L;
    /**
     * {@snippet lang=c :
     * #define KEV_INET6_NEW_USER_ADDR 1
     * }
     */
    public static int KEV_INET6_NEW_USER_ADDR() {
        return KEV_INET6_NEW_USER_ADDR;
    }
    private static final int KEV_INET6_CHANGED_ADDR = (int)2L;
    /**
     * {@snippet lang=c :
     * #define KEV_INET6_CHANGED_ADDR 2
     * }
     */
    public static int KEV_INET6_CHANGED_ADDR() {
        return KEV_INET6_CHANGED_ADDR;
    }
    private static final int KEV_INET6_ADDR_DELETED = (int)3L;
    /**
     * {@snippet lang=c :
     * #define KEV_INET6_ADDR_DELETED 3
     * }
     */
    public static int KEV_INET6_ADDR_DELETED() {
        return KEV_INET6_ADDR_DELETED;
    }
    private static final int KEV_INET6_NEW_LL_ADDR = (int)4L;
    /**
     * {@snippet lang=c :
     * #define KEV_INET6_NEW_LL_ADDR 4
     * }
     */
    public static int KEV_INET6_NEW_LL_ADDR() {
        return KEV_INET6_NEW_LL_ADDR;
    }
    private static final int KEV_INET6_NEW_RTADV_ADDR = (int)5L;
    /**
     * {@snippet lang=c :
     * #define KEV_INET6_NEW_RTADV_ADDR 5
     * }
     */
    public static int KEV_INET6_NEW_RTADV_ADDR() {
        return KEV_INET6_NEW_RTADV_ADDR;
    }
    private static final int KEV_INET6_DEFROUTER = (int)6L;
    /**
     * {@snippet lang=c :
     * #define KEV_INET6_DEFROUTER 6
     * }
     */
    public static int KEV_INET6_DEFROUTER() {
        return KEV_INET6_DEFROUTER;
    }
    private static final int KEV_INET6_REQUEST_NAT64_PREFIX = (int)7L;
    /**
     * {@snippet lang=c :
     * #define KEV_INET6_REQUEST_NAT64_PREFIX 7
     * }
     */
    public static int KEV_INET6_REQUEST_NAT64_PREFIX() {
        return KEV_INET6_REQUEST_NAT64_PREFIX;
    }
    private static final int SOCK_STREAM = (int)1L;
    /**
     * {@snippet lang=c :
     * #define SOCK_STREAM 1
     * }
     */
    public static int SOCK_STREAM() {
        return SOCK_STREAM;
    }
    private static final int SOCK_DGRAM = (int)2L;
    /**
     * {@snippet lang=c :
     * #define SOCK_DGRAM 2
     * }
     */
    public static int SOCK_DGRAM() {
        return SOCK_DGRAM;
    }
    private static final int SOCK_RAW = (int)3L;
    /**
     * {@snippet lang=c :
     * #define SOCK_RAW 3
     * }
     */
    public static int SOCK_RAW() {
        return SOCK_RAW;
    }
    private static final int SOCK_RDM = (int)4L;
    /**
     * {@snippet lang=c :
     * #define SOCK_RDM 4
     * }
     */
    public static int SOCK_RDM() {
        return SOCK_RDM;
    }
    private static final int SOCK_SEQPACKET = (int)5L;
    /**
     * {@snippet lang=c :
     * #define SOCK_SEQPACKET 5
     * }
     */
    public static int SOCK_SEQPACKET() {
        return SOCK_SEQPACKET;
    }
    private static final int SO_DEBUG = (int)1L;
    /**
     * {@snippet lang=c :
     * #define SO_DEBUG 1
     * }
     */
    public static int SO_DEBUG() {
        return SO_DEBUG;
    }
    private static final int SO_ACCEPTCONN = (int)2L;
    /**
     * {@snippet lang=c :
     * #define SO_ACCEPTCONN 2
     * }
     */
    public static int SO_ACCEPTCONN() {
        return SO_ACCEPTCONN;
    }
    private static final int SO_REUSEADDR = (int)4L;
    /**
     * {@snippet lang=c :
     * #define SO_REUSEADDR 4
     * }
     */
    public static int SO_REUSEADDR() {
        return SO_REUSEADDR;
    }
    private static final int SO_KEEPALIVE = (int)8L;
    /**
     * {@snippet lang=c :
     * #define SO_KEEPALIVE 8
     * }
     */
    public static int SO_KEEPALIVE() {
        return SO_KEEPALIVE;
    }
    private static final int SO_DONTROUTE = (int)16L;
    /**
     * {@snippet lang=c :
     * #define SO_DONTROUTE 16
     * }
     */
    public static int SO_DONTROUTE() {
        return SO_DONTROUTE;
    }
    private static final int SO_BROADCAST = (int)32L;
    /**
     * {@snippet lang=c :
     * #define SO_BROADCAST 32
     * }
     */
    public static int SO_BROADCAST() {
        return SO_BROADCAST;
    }
    private static final int SO_USELOOPBACK = (int)64L;
    /**
     * {@snippet lang=c :
     * #define SO_USELOOPBACK 64
     * }
     */
    public static int SO_USELOOPBACK() {
        return SO_USELOOPBACK;
    }
    private static final int SO_LINGER = (int)128L;
    /**
     * {@snippet lang=c :
     * #define SO_LINGER 128
     * }
     */
    public static int SO_LINGER() {
        return SO_LINGER;
    }
    private static final int SO_LINGER_SEC = (int)4224L;
    /**
     * {@snippet lang=c :
     * #define SO_LINGER_SEC 4224
     * }
     */
    public static int SO_LINGER_SEC() {
        return SO_LINGER_SEC;
    }
    private static final int SO_OOBINLINE = (int)256L;
    /**
     * {@snippet lang=c :
     * #define SO_OOBINLINE 256
     * }
     */
    public static int SO_OOBINLINE() {
        return SO_OOBINLINE;
    }
    private static final int SO_REUSEPORT = (int)512L;
    /**
     * {@snippet lang=c :
     * #define SO_REUSEPORT 512
     * }
     */
    public static int SO_REUSEPORT() {
        return SO_REUSEPORT;
    }
    private static final int SO_TIMESTAMP = (int)1024L;
    /**
     * {@snippet lang=c :
     * #define SO_TIMESTAMP 1024
     * }
     */
    public static int SO_TIMESTAMP() {
        return SO_TIMESTAMP;
    }
    private static final int SO_TIMESTAMP_MONOTONIC = (int)2048L;
    /**
     * {@snippet lang=c :
     * #define SO_TIMESTAMP_MONOTONIC 2048
     * }
     */
    public static int SO_TIMESTAMP_MONOTONIC() {
        return SO_TIMESTAMP_MONOTONIC;
    }
    private static final int SO_DONTTRUNC = (int)8192L;
    /**
     * {@snippet lang=c :
     * #define SO_DONTTRUNC 8192
     * }
     */
    public static int SO_DONTTRUNC() {
        return SO_DONTTRUNC;
    }
    private static final int SO_WANTMORE = (int)16384L;
    /**
     * {@snippet lang=c :
     * #define SO_WANTMORE 16384
     * }
     */
    public static int SO_WANTMORE() {
        return SO_WANTMORE;
    }
    private static final int SO_WANTOOBFLAG = (int)32768L;
    /**
     * {@snippet lang=c :
     * #define SO_WANTOOBFLAG 32768
     * }
     */
    public static int SO_WANTOOBFLAG() {
        return SO_WANTOOBFLAG;
    }
    private static final int SO_SNDBUF = (int)4097L;
    /**
     * {@snippet lang=c :
     * #define SO_SNDBUF 4097
     * }
     */
    public static int SO_SNDBUF() {
        return SO_SNDBUF;
    }
    private static final int SO_RCVBUF = (int)4098L;
    /**
     * {@snippet lang=c :
     * #define SO_RCVBUF 4098
     * }
     */
    public static int SO_RCVBUF() {
        return SO_RCVBUF;
    }
    private static final int SO_SNDLOWAT = (int)4099L;
    /**
     * {@snippet lang=c :
     * #define SO_SNDLOWAT 4099
     * }
     */
    public static int SO_SNDLOWAT() {
        return SO_SNDLOWAT;
    }
    private static final int SO_RCVLOWAT = (int)4100L;
    /**
     * {@snippet lang=c :
     * #define SO_RCVLOWAT 4100
     * }
     */
    public static int SO_RCVLOWAT() {
        return SO_RCVLOWAT;
    }
    private static final int SO_SNDTIMEO = (int)4101L;
    /**
     * {@snippet lang=c :
     * #define SO_SNDTIMEO 4101
     * }
     */
    public static int SO_SNDTIMEO() {
        return SO_SNDTIMEO;
    }
    private static final int SO_RCVTIMEO = (int)4102L;
    /**
     * {@snippet lang=c :
     * #define SO_RCVTIMEO 4102
     * }
     */
    public static int SO_RCVTIMEO() {
        return SO_RCVTIMEO;
    }
    private static final int SO_ERROR = (int)4103L;
    /**
     * {@snippet lang=c :
     * #define SO_ERROR 4103
     * }
     */
    public static int SO_ERROR() {
        return SO_ERROR;
    }
    private static final int SO_TYPE = (int)4104L;
    /**
     * {@snippet lang=c :
     * #define SO_TYPE 4104
     * }
     */
    public static int SO_TYPE() {
        return SO_TYPE;
    }
    private static final int SO_LABEL = (int)4112L;
    /**
     * {@snippet lang=c :
     * #define SO_LABEL 4112
     * }
     */
    public static int SO_LABEL() {
        return SO_LABEL;
    }
    private static final int SO_PEERLABEL = (int)4113L;
    /**
     * {@snippet lang=c :
     * #define SO_PEERLABEL 4113
     * }
     */
    public static int SO_PEERLABEL() {
        return SO_PEERLABEL;
    }
    private static final int SO_NREAD = (int)4128L;
    /**
     * {@snippet lang=c :
     * #define SO_NREAD 4128
     * }
     */
    public static int SO_NREAD() {
        return SO_NREAD;
    }
    private static final int SO_NKE = (int)4129L;
    /**
     * {@snippet lang=c :
     * #define SO_NKE 4129
     * }
     */
    public static int SO_NKE() {
        return SO_NKE;
    }
    private static final int SO_NOSIGPIPE = (int)4130L;
    /**
     * {@snippet lang=c :
     * #define SO_NOSIGPIPE 4130
     * }
     */
    public static int SO_NOSIGPIPE() {
        return SO_NOSIGPIPE;
    }
    private static final int SO_NOADDRERR = (int)4131L;
    /**
     * {@snippet lang=c :
     * #define SO_NOADDRERR 4131
     * }
     */
    public static int SO_NOADDRERR() {
        return SO_NOADDRERR;
    }
    private static final int SO_NWRITE = (int)4132L;
    /**
     * {@snippet lang=c :
     * #define SO_NWRITE 4132
     * }
     */
    public static int SO_NWRITE() {
        return SO_NWRITE;
    }
    private static final int SO_REUSESHAREUID = (int)4133L;
    /**
     * {@snippet lang=c :
     * #define SO_REUSESHAREUID 4133
     * }
     */
    public static int SO_REUSESHAREUID() {
        return SO_REUSESHAREUID;
    }
    private static final int SO_NOTIFYCONFLICT = (int)4134L;
    /**
     * {@snippet lang=c :
     * #define SO_NOTIFYCONFLICT 4134
     * }
     */
    public static int SO_NOTIFYCONFLICT() {
        return SO_NOTIFYCONFLICT;
    }
    private static final int SO_UPCALLCLOSEWAIT = (int)4135L;
    /**
     * {@snippet lang=c :
     * #define SO_UPCALLCLOSEWAIT 4135
     * }
     */
    public static int SO_UPCALLCLOSEWAIT() {
        return SO_UPCALLCLOSEWAIT;
    }
    private static final int SO_RANDOMPORT = (int)4226L;
    /**
     * {@snippet lang=c :
     * #define SO_RANDOMPORT 4226
     * }
     */
    public static int SO_RANDOMPORT() {
        return SO_RANDOMPORT;
    }
    private static final int SO_NP_EXTENSIONS = (int)4227L;
    /**
     * {@snippet lang=c :
     * #define SO_NP_EXTENSIONS 4227
     * }
     */
    public static int SO_NP_EXTENSIONS() {
        return SO_NP_EXTENSIONS;
    }
    private static final int SO_NUMRCVPKT = (int)4370L;
    /**
     * {@snippet lang=c :
     * #define SO_NUMRCVPKT 4370
     * }
     */
    public static int SO_NUMRCVPKT() {
        return SO_NUMRCVPKT;
    }
    private static final int SO_NET_SERVICE_TYPE = (int)4374L;
    /**
     * {@snippet lang=c :
     * #define SO_NET_SERVICE_TYPE 4374
     * }
     */
    public static int SO_NET_SERVICE_TYPE() {
        return SO_NET_SERVICE_TYPE;
    }
    private static final int SO_NETSVC_MARKING_LEVEL = (int)4377L;
    /**
     * {@snippet lang=c :
     * #define SO_NETSVC_MARKING_LEVEL 4377
     * }
     */
    public static int SO_NETSVC_MARKING_LEVEL() {
        return SO_NETSVC_MARKING_LEVEL;
    }
    private static final int SO_RESOLVER_SIGNATURE = (int)4401L;
    /**
     * {@snippet lang=c :
     * #define SO_RESOLVER_SIGNATURE 4401
     * }
     */
    public static int SO_RESOLVER_SIGNATURE() {
        return SO_RESOLVER_SIGNATURE;
    }
    private static final int NET_SERVICE_TYPE_BE = (int)0L;
    /**
     * {@snippet lang=c :
     * #define NET_SERVICE_TYPE_BE 0
     * }
     */
    public static int NET_SERVICE_TYPE_BE() {
        return NET_SERVICE_TYPE_BE;
    }
    private static final int NET_SERVICE_TYPE_BK = (int)1L;
    /**
     * {@snippet lang=c :
     * #define NET_SERVICE_TYPE_BK 1
     * }
     */
    public static int NET_SERVICE_TYPE_BK() {
        return NET_SERVICE_TYPE_BK;
    }
    private static final int NET_SERVICE_TYPE_SIG = (int)2L;
    /**
     * {@snippet lang=c :
     * #define NET_SERVICE_TYPE_SIG 2
     * }
     */
    public static int NET_SERVICE_TYPE_SIG() {
        return NET_SERVICE_TYPE_SIG;
    }
    private static final int NET_SERVICE_TYPE_VI = (int)3L;
    /**
     * {@snippet lang=c :
     * #define NET_SERVICE_TYPE_VI 3
     * }
     */
    public static int NET_SERVICE_TYPE_VI() {
        return NET_SERVICE_TYPE_VI;
    }
    private static final int NET_SERVICE_TYPE_VO = (int)4L;
    /**
     * {@snippet lang=c :
     * #define NET_SERVICE_TYPE_VO 4
     * }
     */
    public static int NET_SERVICE_TYPE_VO() {
        return NET_SERVICE_TYPE_VO;
    }
    private static final int NET_SERVICE_TYPE_RV = (int)5L;
    /**
     * {@snippet lang=c :
     * #define NET_SERVICE_TYPE_RV 5
     * }
     */
    public static int NET_SERVICE_TYPE_RV() {
        return NET_SERVICE_TYPE_RV;
    }
    private static final int NET_SERVICE_TYPE_AV = (int)6L;
    /**
     * {@snippet lang=c :
     * #define NET_SERVICE_TYPE_AV 6
     * }
     */
    public static int NET_SERVICE_TYPE_AV() {
        return NET_SERVICE_TYPE_AV;
    }
    private static final int NET_SERVICE_TYPE_OAM = (int)7L;
    /**
     * {@snippet lang=c :
     * #define NET_SERVICE_TYPE_OAM 7
     * }
     */
    public static int NET_SERVICE_TYPE_OAM() {
        return NET_SERVICE_TYPE_OAM;
    }
    private static final int NET_SERVICE_TYPE_RD = (int)8L;
    /**
     * {@snippet lang=c :
     * #define NET_SERVICE_TYPE_RD 8
     * }
     */
    public static int NET_SERVICE_TYPE_RD() {
        return NET_SERVICE_TYPE_RD;
    }
    private static final int NETSVC_MRKNG_UNKNOWN = (int)0L;
    /**
     * {@snippet lang=c :
     * #define NETSVC_MRKNG_UNKNOWN 0
     * }
     */
    public static int NETSVC_MRKNG_UNKNOWN() {
        return NETSVC_MRKNG_UNKNOWN;
    }
    private static final int NETSVC_MRKNG_LVL_L2 = (int)1L;
    /**
     * {@snippet lang=c :
     * #define NETSVC_MRKNG_LVL_L2 1
     * }
     */
    public static int NETSVC_MRKNG_LVL_L2() {
        return NETSVC_MRKNG_LVL_L2;
    }
    private static final int NETSVC_MRKNG_LVL_L3L2_ALL = (int)2L;
    /**
     * {@snippet lang=c :
     * #define NETSVC_MRKNG_LVL_L3L2_ALL 2
     * }
     */
    public static int NETSVC_MRKNG_LVL_L3L2_ALL() {
        return NETSVC_MRKNG_LVL_L3L2_ALL;
    }
    private static final int NETSVC_MRKNG_LVL_L3L2_BK = (int)3L;
    /**
     * {@snippet lang=c :
     * #define NETSVC_MRKNG_LVL_L3L2_BK 3
     * }
     */
    public static int NETSVC_MRKNG_LVL_L3L2_BK() {
        return NETSVC_MRKNG_LVL_L3L2_BK;
    }
    private static final int SAE_ASSOCID_ANY = (int)0L;
    /**
     * {@snippet lang=c :
     * #define SAE_ASSOCID_ANY 0
     * }
     */
    public static int SAE_ASSOCID_ANY() {
        return SAE_ASSOCID_ANY;
    }
    private static final int SAE_CONNID_ANY = (int)0L;
    /**
     * {@snippet lang=c :
     * #define SAE_CONNID_ANY 0
     * }
     */
    public static int SAE_CONNID_ANY() {
        return SAE_CONNID_ANY;
    }
    private static final int CONNECT_RESUME_ON_READ_WRITE = (int)1L;
    /**
     * {@snippet lang=c :
     * #define CONNECT_RESUME_ON_READ_WRITE 1
     * }
     */
    public static int CONNECT_RESUME_ON_READ_WRITE() {
        return CONNECT_RESUME_ON_READ_WRITE;
    }
    private static final int CONNECT_DATA_IDEMPOTENT = (int)2L;
    /**
     * {@snippet lang=c :
     * #define CONNECT_DATA_IDEMPOTENT 2
     * }
     */
    public static int CONNECT_DATA_IDEMPOTENT() {
        return CONNECT_DATA_IDEMPOTENT;
    }
    private static final int CONNECT_DATA_AUTHENTICATED = (int)4L;
    /**
     * {@snippet lang=c :
     * #define CONNECT_DATA_AUTHENTICATED 4
     * }
     */
    public static int CONNECT_DATA_AUTHENTICATED() {
        return CONNECT_DATA_AUTHENTICATED;
    }
    private static final int SONPX_SETOPTSHUT = (int)1L;
    /**
     * {@snippet lang=c :
     * #define SONPX_SETOPTSHUT 1
     * }
     */
    public static int SONPX_SETOPTSHUT() {
        return SONPX_SETOPTSHUT;
    }
    private static final int SOL_SOCKET = (int)65535L;
    /**
     * {@snippet lang=c :
     * #define SOL_SOCKET 65535
     * }
     */
    public static int SOL_SOCKET() {
        return SOL_SOCKET;
    }
    private static final int AF_UNSPEC = (int)0L;
    /**
     * {@snippet lang=c :
     * #define AF_UNSPEC 0
     * }
     */
    public static int AF_UNSPEC() {
        return AF_UNSPEC;
    }
    private static final int AF_UNIX = (int)1L;
    /**
     * {@snippet lang=c :
     * #define AF_UNIX 1
     * }
     */
    public static int AF_UNIX() {
        return AF_UNIX;
    }
    private static final int AF_INET = (int)2L;
    /**
     * {@snippet lang=c :
     * #define AF_INET 2
     * }
     */
    public static int AF_INET() {
        return AF_INET;
    }
    private static final int AF_IMPLINK = (int)3L;
    /**
     * {@snippet lang=c :
     * #define AF_IMPLINK 3
     * }
     */
    public static int AF_IMPLINK() {
        return AF_IMPLINK;
    }
    private static final int AF_PUP = (int)4L;
    /**
     * {@snippet lang=c :
     * #define AF_PUP 4
     * }
     */
    public static int AF_PUP() {
        return AF_PUP;
    }
    private static final int AF_CHAOS = (int)5L;
    /**
     * {@snippet lang=c :
     * #define AF_CHAOS 5
     * }
     */
    public static int AF_CHAOS() {
        return AF_CHAOS;
    }
    private static final int AF_NS = (int)6L;
    /**
     * {@snippet lang=c :
     * #define AF_NS 6
     * }
     */
    public static int AF_NS() {
        return AF_NS;
    }
    private static final int AF_ISO = (int)7L;
    /**
     * {@snippet lang=c :
     * #define AF_ISO 7
     * }
     */
    public static int AF_ISO() {
        return AF_ISO;
    }
    private static final int AF_ECMA = (int)8L;
    /**
     * {@snippet lang=c :
     * #define AF_ECMA 8
     * }
     */
    public static int AF_ECMA() {
        return AF_ECMA;
    }
    private static final int AF_DATAKIT = (int)9L;
    /**
     * {@snippet lang=c :
     * #define AF_DATAKIT 9
     * }
     */
    public static int AF_DATAKIT() {
        return AF_DATAKIT;
    }
    private static final int AF_CCITT = (int)10L;
    /**
     * {@snippet lang=c :
     * #define AF_CCITT 10
     * }
     */
    public static int AF_CCITT() {
        return AF_CCITT;
    }
    private static final int AF_SNA = (int)11L;
    /**
     * {@snippet lang=c :
     * #define AF_SNA 11
     * }
     */
    public static int AF_SNA() {
        return AF_SNA;
    }
    private static final int AF_DECnet = (int)12L;
    /**
     * {@snippet lang=c :
     * #define AF_DECnet 12
     * }
     */
    public static int AF_DECnet() {
        return AF_DECnet;
    }
    private static final int AF_DLI = (int)13L;
    /**
     * {@snippet lang=c :
     * #define AF_DLI 13
     * }
     */
    public static int AF_DLI() {
        return AF_DLI;
    }
    private static final int AF_LAT = (int)14L;
    /**
     * {@snippet lang=c :
     * #define AF_LAT 14
     * }
     */
    public static int AF_LAT() {
        return AF_LAT;
    }
    private static final int AF_HYLINK = (int)15L;
    /**
     * {@snippet lang=c :
     * #define AF_HYLINK 15
     * }
     */
    public static int AF_HYLINK() {
        return AF_HYLINK;
    }
    private static final int AF_APPLETALK = (int)16L;
    /**
     * {@snippet lang=c :
     * #define AF_APPLETALK 16
     * }
     */
    public static int AF_APPLETALK() {
        return AF_APPLETALK;
    }
    private static final int AF_ROUTE = (int)17L;
    /**
     * {@snippet lang=c :
     * #define AF_ROUTE 17
     * }
     */
    public static int AF_ROUTE() {
        return AF_ROUTE;
    }
    private static final int AF_LINK = (int)18L;
    /**
     * {@snippet lang=c :
     * #define AF_LINK 18
     * }
     */
    public static int AF_LINK() {
        return AF_LINK;
    }
    private static final int pseudo_AF_XTP = (int)19L;
    /**
     * {@snippet lang=c :
     * #define pseudo_AF_XTP 19
     * }
     */
    public static int pseudo_AF_XTP() {
        return pseudo_AF_XTP;
    }
    private static final int AF_COIP = (int)20L;
    /**
     * {@snippet lang=c :
     * #define AF_COIP 20
     * }
     */
    public static int AF_COIP() {
        return AF_COIP;
    }
    private static final int AF_CNT = (int)21L;
    /**
     * {@snippet lang=c :
     * #define AF_CNT 21
     * }
     */
    public static int AF_CNT() {
        return AF_CNT;
    }
    private static final int pseudo_AF_RTIP = (int)22L;
    /**
     * {@snippet lang=c :
     * #define pseudo_AF_RTIP 22
     * }
     */
    public static int pseudo_AF_RTIP() {
        return pseudo_AF_RTIP;
    }
    private static final int AF_IPX = (int)23L;
    /**
     * {@snippet lang=c :
     * #define AF_IPX 23
     * }
     */
    public static int AF_IPX() {
        return AF_IPX;
    }
    private static final int AF_SIP = (int)24L;
    /**
     * {@snippet lang=c :
     * #define AF_SIP 24
     * }
     */
    public static int AF_SIP() {
        return AF_SIP;
    }
    private static final int pseudo_AF_PIP = (int)25L;
    /**
     * {@snippet lang=c :
     * #define pseudo_AF_PIP 25
     * }
     */
    public static int pseudo_AF_PIP() {
        return pseudo_AF_PIP;
    }
    private static final int AF_NDRV = (int)27L;
    /**
     * {@snippet lang=c :
     * #define AF_NDRV 27
     * }
     */
    public static int AF_NDRV() {
        return AF_NDRV;
    }
    private static final int AF_ISDN = (int)28L;
    /**
     * {@snippet lang=c :
     * #define AF_ISDN 28
     * }
     */
    public static int AF_ISDN() {
        return AF_ISDN;
    }
    private static final int pseudo_AF_KEY = (int)29L;
    /**
     * {@snippet lang=c :
     * #define pseudo_AF_KEY 29
     * }
     */
    public static int pseudo_AF_KEY() {
        return pseudo_AF_KEY;
    }
    private static final int AF_INET6 = (int)30L;
    /**
     * {@snippet lang=c :
     * #define AF_INET6 30
     * }
     */
    public static int AF_INET6() {
        return AF_INET6;
    }
    private static final int AF_NATM = (int)31L;
    /**
     * {@snippet lang=c :
     * #define AF_NATM 31
     * }
     */
    public static int AF_NATM() {
        return AF_NATM;
    }
    private static final int AF_SYSTEM = (int)32L;
    /**
     * {@snippet lang=c :
     * #define AF_SYSTEM 32
     * }
     */
    public static int AF_SYSTEM() {
        return AF_SYSTEM;
    }
    private static final int AF_NETBIOS = (int)33L;
    /**
     * {@snippet lang=c :
     * #define AF_NETBIOS 33
     * }
     */
    public static int AF_NETBIOS() {
        return AF_NETBIOS;
    }
    private static final int AF_PPP = (int)34L;
    /**
     * {@snippet lang=c :
     * #define AF_PPP 34
     * }
     */
    public static int AF_PPP() {
        return AF_PPP;
    }
    private static final int pseudo_AF_HDRCMPLT = (int)35L;
    /**
     * {@snippet lang=c :
     * #define pseudo_AF_HDRCMPLT 35
     * }
     */
    public static int pseudo_AF_HDRCMPLT() {
        return pseudo_AF_HDRCMPLT;
    }
    private static final int AF_RESERVED_36 = (int)36L;
    /**
     * {@snippet lang=c :
     * #define AF_RESERVED_36 36
     * }
     */
    public static int AF_RESERVED_36() {
        return AF_RESERVED_36;
    }
    private static final int AF_IEEE80211 = (int)37L;
    /**
     * {@snippet lang=c :
     * #define AF_IEEE80211 37
     * }
     */
    public static int AF_IEEE80211() {
        return AF_IEEE80211;
    }
    private static final int AF_UTUN = (int)38L;
    /**
     * {@snippet lang=c :
     * #define AF_UTUN 38
     * }
     */
    public static int AF_UTUN() {
        return AF_UTUN;
    }
    private static final int AF_VSOCK = (int)40L;
    /**
     * {@snippet lang=c :
     * #define AF_VSOCK 40
     * }
     */
    public static int AF_VSOCK() {
        return AF_VSOCK;
    }
    private static final int AF_MAX = (int)41L;
    /**
     * {@snippet lang=c :
     * #define AF_MAX 41
     * }
     */
    public static int AF_MAX() {
        return AF_MAX;
    }
    private static final int SOCK_MAXADDRLEN = (int)255L;
    /**
     * {@snippet lang=c :
     * #define SOCK_MAXADDRLEN 255
     * }
     */
    public static int SOCK_MAXADDRLEN() {
        return SOCK_MAXADDRLEN;
    }
    private static final int _SS_MAXSIZE = (int)128L;
    /**
     * {@snippet lang=c :
     * #define _SS_MAXSIZE 128
     * }
     */
    public static int _SS_MAXSIZE() {
        return _SS_MAXSIZE;
    }
    private static final int NET_RT_DUMP = (int)1L;
    /**
     * {@snippet lang=c :
     * #define NET_RT_DUMP 1
     * }
     */
    public static int NET_RT_DUMP() {
        return NET_RT_DUMP;
    }
    private static final int NET_RT_FLAGS = (int)2L;
    /**
     * {@snippet lang=c :
     * #define NET_RT_FLAGS 2
     * }
     */
    public static int NET_RT_FLAGS() {
        return NET_RT_FLAGS;
    }
    private static final int NET_RT_IFLIST = (int)3L;
    /**
     * {@snippet lang=c :
     * #define NET_RT_IFLIST 3
     * }
     */
    public static int NET_RT_IFLIST() {
        return NET_RT_IFLIST;
    }
    private static final int NET_RT_STAT = (int)4L;
    /**
     * {@snippet lang=c :
     * #define NET_RT_STAT 4
     * }
     */
    public static int NET_RT_STAT() {
        return NET_RT_STAT;
    }
    private static final int NET_RT_TRASH = (int)5L;
    /**
     * {@snippet lang=c :
     * #define NET_RT_TRASH 5
     * }
     */
    public static int NET_RT_TRASH() {
        return NET_RT_TRASH;
    }
    private static final int NET_RT_IFLIST2 = (int)6L;
    /**
     * {@snippet lang=c :
     * #define NET_RT_IFLIST2 6
     * }
     */
    public static int NET_RT_IFLIST2() {
        return NET_RT_IFLIST2;
    }
    private static final int NET_RT_DUMP2 = (int)7L;
    /**
     * {@snippet lang=c :
     * #define NET_RT_DUMP2 7
     * }
     */
    public static int NET_RT_DUMP2() {
        return NET_RT_DUMP2;
    }
    private static final int NET_RT_FLAGS_PRIV = (int)10L;
    /**
     * {@snippet lang=c :
     * #define NET_RT_FLAGS_PRIV 10
     * }
     */
    public static int NET_RT_FLAGS_PRIV() {
        return NET_RT_FLAGS_PRIV;
    }
    private static final int NET_RT_MAXID = (int)11L;
    /**
     * {@snippet lang=c :
     * #define NET_RT_MAXID 11
     * }
     */
    public static int NET_RT_MAXID() {
        return NET_RT_MAXID;
    }
    private static final int SOMAXCONN = (int)128L;
    /**
     * {@snippet lang=c :
     * #define SOMAXCONN 128
     * }
     */
    public static int SOMAXCONN() {
        return SOMAXCONN;
    }
    private static final int MSG_OOB = (int)1L;
    /**
     * {@snippet lang=c :
     * #define MSG_OOB 1
     * }
     */
    public static int MSG_OOB() {
        return MSG_OOB;
    }
    private static final int MSG_PEEK = (int)2L;
    /**
     * {@snippet lang=c :
     * #define MSG_PEEK 2
     * }
     */
    public static int MSG_PEEK() {
        return MSG_PEEK;
    }
    private static final int MSG_DONTROUTE = (int)4L;
    /**
     * {@snippet lang=c :
     * #define MSG_DONTROUTE 4
     * }
     */
    public static int MSG_DONTROUTE() {
        return MSG_DONTROUTE;
    }
    private static final int MSG_EOR = (int)8L;
    /**
     * {@snippet lang=c :
     * #define MSG_EOR 8
     * }
     */
    public static int MSG_EOR() {
        return MSG_EOR;
    }
    private static final int MSG_TRUNC = (int)16L;
    /**
     * {@snippet lang=c :
     * #define MSG_TRUNC 16
     * }
     */
    public static int MSG_TRUNC() {
        return MSG_TRUNC;
    }
    private static final int MSG_CTRUNC = (int)32L;
    /**
     * {@snippet lang=c :
     * #define MSG_CTRUNC 32
     * }
     */
    public static int MSG_CTRUNC() {
        return MSG_CTRUNC;
    }
    private static final int MSG_WAITALL = (int)64L;
    /**
     * {@snippet lang=c :
     * #define MSG_WAITALL 64
     * }
     */
    public static int MSG_WAITALL() {
        return MSG_WAITALL;
    }
    private static final int MSG_DONTWAIT = (int)128L;
    /**
     * {@snippet lang=c :
     * #define MSG_DONTWAIT 128
     * }
     */
    public static int MSG_DONTWAIT() {
        return MSG_DONTWAIT;
    }
    private static final int MSG_EOF = (int)256L;
    /**
     * {@snippet lang=c :
     * #define MSG_EOF 256
     * }
     */
    public static int MSG_EOF() {
        return MSG_EOF;
    }
    private static final int MSG_WAITSTREAM = (int)512L;
    /**
     * {@snippet lang=c :
     * #define MSG_WAITSTREAM 512
     * }
     */
    public static int MSG_WAITSTREAM() {
        return MSG_WAITSTREAM;
    }
    private static final int MSG_FLUSH = (int)1024L;
    /**
     * {@snippet lang=c :
     * #define MSG_FLUSH 1024
     * }
     */
    public static int MSG_FLUSH() {
        return MSG_FLUSH;
    }
    private static final int MSG_HOLD = (int)2048L;
    /**
     * {@snippet lang=c :
     * #define MSG_HOLD 2048
     * }
     */
    public static int MSG_HOLD() {
        return MSG_HOLD;
    }
    private static final int MSG_SEND = (int)4096L;
    /**
     * {@snippet lang=c :
     * #define MSG_SEND 4096
     * }
     */
    public static int MSG_SEND() {
        return MSG_SEND;
    }
    private static final int MSG_HAVEMORE = (int)8192L;
    /**
     * {@snippet lang=c :
     * #define MSG_HAVEMORE 8192
     * }
     */
    public static int MSG_HAVEMORE() {
        return MSG_HAVEMORE;
    }
    private static final int MSG_RCVMORE = (int)16384L;
    /**
     * {@snippet lang=c :
     * #define MSG_RCVMORE 16384
     * }
     */
    public static int MSG_RCVMORE() {
        return MSG_RCVMORE;
    }
    private static final int MSG_NEEDSA = (int)65536L;
    /**
     * {@snippet lang=c :
     * #define MSG_NEEDSA 65536
     * }
     */
    public static int MSG_NEEDSA() {
        return MSG_NEEDSA;
    }
    private static final int MSG_NOSIGNAL = (int)524288L;
    /**
     * {@snippet lang=c :
     * #define MSG_NOSIGNAL 524288
     * }
     */
    public static int MSG_NOSIGNAL() {
        return MSG_NOSIGNAL;
    }
    private static final int SCM_RIGHTS = (int)1L;
    /**
     * {@snippet lang=c :
     * #define SCM_RIGHTS 1
     * }
     */
    public static int SCM_RIGHTS() {
        return SCM_RIGHTS;
    }
    private static final int SCM_TIMESTAMP = (int)2L;
    /**
     * {@snippet lang=c :
     * #define SCM_TIMESTAMP 2
     * }
     */
    public static int SCM_TIMESTAMP() {
        return SCM_TIMESTAMP;
    }
    private static final int SCM_CREDS = (int)3L;
    /**
     * {@snippet lang=c :
     * #define SCM_CREDS 3
     * }
     */
    public static int SCM_CREDS() {
        return SCM_CREDS;
    }
    private static final int SCM_TIMESTAMP_MONOTONIC = (int)4L;
    /**
     * {@snippet lang=c :
     * #define SCM_TIMESTAMP_MONOTONIC 4
     * }
     */
    public static int SCM_TIMESTAMP_MONOTONIC() {
        return SCM_TIMESTAMP_MONOTONIC;
    }
    private static final int SHUT_RD = (int)0L;
    /**
     * {@snippet lang=c :
     * #define SHUT_RD 0
     * }
     */
    public static int SHUT_RD() {
        return SHUT_RD;
    }
    private static final int SHUT_WR = (int)1L;
    /**
     * {@snippet lang=c :
     * #define SHUT_WR 1
     * }
     */
    public static int SHUT_WR() {
        return SHUT_WR;
    }
    private static final int SHUT_RDWR = (int)2L;
    /**
     * {@snippet lang=c :
     * #define SHUT_RDWR 2
     * }
     */
    public static int SHUT_RDWR() {
        return SHUT_RDWR;
    }
    /**
     * {@snippet lang=c :
     * typedef signed char __int8_t
     * }
     */
    public static final OfByte __int8_t = netty_epoll_vmsocket_h.C_CHAR;
    /**
     * {@snippet lang=c :
     * typedef unsigned char __uint8_t
     * }
     */
    public static final OfByte __uint8_t = netty_epoll_vmsocket_h.C_CHAR;
    /**
     * {@snippet lang=c :
     * typedef short __int16_t
     * }
     */
    public static final OfShort __int16_t = netty_epoll_vmsocket_h.C_SHORT;
    /**
     * {@snippet lang=c :
     * typedef unsigned short __uint16_t
     * }
     */
    public static final OfShort __uint16_t = netty_epoll_vmsocket_h.C_SHORT;
    /**
     * {@snippet lang=c :
     * typedef int __int32_t
     * }
     */
    public static final OfInt __int32_t = netty_epoll_vmsocket_h.C_INT;
    /**
     * {@snippet lang=c :
     * typedef unsigned int __uint32_t
     * }
     */
    public static final OfInt __uint32_t = netty_epoll_vmsocket_h.C_INT;
    /**
     * {@snippet lang=c :
     * typedef long long __int64_t
     * }
     */
    public static final OfLong __int64_t = netty_epoll_vmsocket_h.C_LONG_LONG;
    /**
     * {@snippet lang=c :
     * typedef unsigned long long __uint64_t
     * }
     */
    public static final OfLong __uint64_t = netty_epoll_vmsocket_h.C_LONG_LONG;
    /**
     * {@snippet lang=c :
     * typedef long __darwin_intptr_t
     * }
     */
    public static final OfLong __darwin_intptr_t = netty_epoll_vmsocket_h.C_LONG;
    /**
     * {@snippet lang=c :
     * typedef unsigned int __darwin_natural_t
     * }
     */
    public static final OfInt __darwin_natural_t = netty_epoll_vmsocket_h.C_INT;
    /**
     * {@snippet lang=c :
     * typedef int __darwin_ct_rune_t
     * }
     */
    public static final OfInt __darwin_ct_rune_t = netty_epoll_vmsocket_h.C_INT;
    /**
     * {@snippet lang=c :
     * typedef long __darwin_ptrdiff_t
     * }
     */
    public static final OfLong __darwin_ptrdiff_t = netty_epoll_vmsocket_h.C_LONG;
    /**
     * {@snippet lang=c :
     * typedef unsigned long __darwin_size_t
     * }
     */
    public static final OfLong __darwin_size_t = netty_epoll_vmsocket_h.C_LONG;
    /**
     * {@snippet lang=c :
     * typedef __builtin_va_list __darwin_va_list
     * }
     */
    public static final AddressLayout __darwin_va_list = netty_epoll_vmsocket_h.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef int __darwin_wchar_t
     * }
     */
    public static final OfInt __darwin_wchar_t = netty_epoll_vmsocket_h.C_INT;
    /**
     * {@snippet lang=c :
     * typedef __darwin_wchar_t __darwin_rune_t
     * }
     */
    public static final OfInt __darwin_rune_t = netty_epoll_vmsocket_h.C_INT;
    /**
     * {@snippet lang=c :
     * typedef int __darwin_wint_t
     * }
     */
    public static final OfInt __darwin_wint_t = netty_epoll_vmsocket_h.C_INT;
    /**
     * {@snippet lang=c :
     * typedef unsigned long __darwin_clock_t
     * }
     */
    public static final OfLong __darwin_clock_t = netty_epoll_vmsocket_h.C_LONG;
    /**
     * {@snippet lang=c :
     * typedef __uint32_t __darwin_socklen_t
     * }
     */
    public static final OfInt __darwin_socklen_t = netty_epoll_vmsocket_h.C_INT;
    /**
     * {@snippet lang=c :
     * typedef long __darwin_ssize_t
     * }
     */
    public static final OfLong __darwin_ssize_t = netty_epoll_vmsocket_h.C_LONG;
    /**
     * {@snippet lang=c :
     * typedef long __darwin_time_t
     * }
     */
    public static final OfLong __darwin_time_t = netty_epoll_vmsocket_h.C_LONG;
    /**
     * {@snippet lang=c :
     * typedef signed char int8_t
     * }
     */
    public static final OfByte int8_t = netty_epoll_vmsocket_h.C_CHAR;
    /**
     * {@snippet lang=c :
     * typedef short int16_t
     * }
     */
    public static final OfShort int16_t = netty_epoll_vmsocket_h.C_SHORT;
    /**
     * {@snippet lang=c :
     * typedef int int32_t
     * }
     */
    public static final OfInt int32_t = netty_epoll_vmsocket_h.C_INT;
    /**
     * {@snippet lang=c :
     * typedef long long int64_t
     * }
     */
    public static final OfLong int64_t = netty_epoll_vmsocket_h.C_LONG_LONG;
    /**
     * {@snippet lang=c :
     * typedef unsigned char u_int8_t
     * }
     */
    public static final OfByte u_int8_t = netty_epoll_vmsocket_h.C_CHAR;
    /**
     * {@snippet lang=c :
     * typedef unsigned short u_int16_t
     * }
     */
    public static final OfShort u_int16_t = netty_epoll_vmsocket_h.C_SHORT;
    /**
     * {@snippet lang=c :
     * typedef unsigned int u_int32_t
     * }
     */
    public static final OfInt u_int32_t = netty_epoll_vmsocket_h.C_INT;
    /**
     * {@snippet lang=c :
     * typedef unsigned long long u_int64_t
     * }
     */
    public static final OfLong u_int64_t = netty_epoll_vmsocket_h.C_LONG_LONG;
    /**
     * {@snippet lang=c :
     * typedef int64_t register_t
     * }
     */
    public static final OfLong register_t = netty_epoll_vmsocket_h.C_LONG_LONG;
    /**
     * {@snippet lang=c :
     * typedef __darwin_intptr_t intptr_t
     * }
     */
    public static final OfLong intptr_t = netty_epoll_vmsocket_h.C_LONG;
    /**
     * {@snippet lang=c :
     * typedef unsigned long uintptr_t
     * }
     */
    public static final OfLong uintptr_t = netty_epoll_vmsocket_h.C_LONG;
    /**
     * {@snippet lang=c :
     * typedef u_int64_t user_addr_t
     * }
     */
    public static final OfLong user_addr_t = netty_epoll_vmsocket_h.C_LONG_LONG;
    /**
     * {@snippet lang=c :
     * typedef u_int64_t user_size_t
     * }
     */
    public static final OfLong user_size_t = netty_epoll_vmsocket_h.C_LONG_LONG;
    /**
     * {@snippet lang=c :
     * typedef int64_t user_ssize_t
     * }
     */
    public static final OfLong user_ssize_t = netty_epoll_vmsocket_h.C_LONG_LONG;
    /**
     * {@snippet lang=c :
     * typedef int64_t user_long_t
     * }
     */
    public static final OfLong user_long_t = netty_epoll_vmsocket_h.C_LONG_LONG;
    /**
     * {@snippet lang=c :
     * typedef u_int64_t user_ulong_t
     * }
     */
    public static final OfLong user_ulong_t = netty_epoll_vmsocket_h.C_LONG_LONG;
    /**
     * {@snippet lang=c :
     * typedef int64_t user_time_t
     * }
     */
    public static final OfLong user_time_t = netty_epoll_vmsocket_h.C_LONG_LONG;
    /**
     * {@snippet lang=c :
     * typedef int64_t user_off_t
     * }
     */
    public static final OfLong user_off_t = netty_epoll_vmsocket_h.C_LONG_LONG;
    /**
     * {@snippet lang=c :
     * typedef u_int64_t syscall_arg_t
     * }
     */
    public static final OfLong syscall_arg_t = netty_epoll_vmsocket_h.C_LONG_LONG;
    /**
     * {@snippet lang=c :
     * typedef __int64_t __darwin_blkcnt_t
     * }
     */
    public static final OfLong __darwin_blkcnt_t = netty_epoll_vmsocket_h.C_LONG_LONG;
    /**
     * {@snippet lang=c :
     * typedef __int32_t __darwin_blksize_t
     * }
     */
    public static final OfInt __darwin_blksize_t = netty_epoll_vmsocket_h.C_INT;
    /**
     * {@snippet lang=c :
     * typedef __int32_t __darwin_dev_t
     * }
     */
    public static final OfInt __darwin_dev_t = netty_epoll_vmsocket_h.C_INT;
    /**
     * {@snippet lang=c :
     * typedef unsigned int __darwin_fsblkcnt_t
     * }
     */
    public static final OfInt __darwin_fsblkcnt_t = netty_epoll_vmsocket_h.C_INT;
    /**
     * {@snippet lang=c :
     * typedef unsigned int __darwin_fsfilcnt_t
     * }
     */
    public static final OfInt __darwin_fsfilcnt_t = netty_epoll_vmsocket_h.C_INT;
    /**
     * {@snippet lang=c :
     * typedef __uint32_t __darwin_gid_t
     * }
     */
    public static final OfInt __darwin_gid_t = netty_epoll_vmsocket_h.C_INT;
    /**
     * {@snippet lang=c :
     * typedef __uint32_t __darwin_id_t
     * }
     */
    public static final OfInt __darwin_id_t = netty_epoll_vmsocket_h.C_INT;
    /**
     * {@snippet lang=c :
     * typedef __uint64_t __darwin_ino64_t
     * }
     */
    public static final OfLong __darwin_ino64_t = netty_epoll_vmsocket_h.C_LONG_LONG;
    /**
     * {@snippet lang=c :
     * typedef __darwin_ino64_t __darwin_ino_t
     * }
     */
    public static final OfLong __darwin_ino_t = netty_epoll_vmsocket_h.C_LONG_LONG;
    /**
     * {@snippet lang=c :
     * typedef __darwin_natural_t __darwin_mach_port_name_t
     * }
     */
    public static final OfInt __darwin_mach_port_name_t = netty_epoll_vmsocket_h.C_INT;
    /**
     * {@snippet lang=c :
     * typedef __darwin_mach_port_name_t __darwin_mach_port_t
     * }
     */
    public static final OfInt __darwin_mach_port_t = netty_epoll_vmsocket_h.C_INT;
    /**
     * {@snippet lang=c :
     * typedef __uint16_t __darwin_mode_t
     * }
     */
    public static final OfShort __darwin_mode_t = netty_epoll_vmsocket_h.C_SHORT;
    /**
     * {@snippet lang=c :
     * typedef __int64_t __darwin_off_t
     * }
     */
    public static final OfLong __darwin_off_t = netty_epoll_vmsocket_h.C_LONG_LONG;
    /**
     * {@snippet lang=c :
     * typedef __int32_t __darwin_pid_t
     * }
     */
    public static final OfInt __darwin_pid_t = netty_epoll_vmsocket_h.C_INT;
    /**
     * {@snippet lang=c :
     * typedef __uint32_t __darwin_sigset_t
     * }
     */
    public static final OfInt __darwin_sigset_t = netty_epoll_vmsocket_h.C_INT;
    /**
     * {@snippet lang=c :
     * typedef __int32_t __darwin_suseconds_t
     * }
     */
    public static final OfInt __darwin_suseconds_t = netty_epoll_vmsocket_h.C_INT;
    /**
     * {@snippet lang=c :
     * typedef __uint32_t __darwin_uid_t
     * }
     */
    public static final OfInt __darwin_uid_t = netty_epoll_vmsocket_h.C_INT;
    /**
     * {@snippet lang=c :
     * typedef __uint32_t __darwin_useconds_t
     * }
     */
    public static final OfInt __darwin_useconds_t = netty_epoll_vmsocket_h.C_INT;
    /**
     * {@snippet lang=c :
     * typedef unsigned long __darwin_pthread_key_t
     * }
     */
    public static final OfLong __darwin_pthread_key_t = netty_epoll_vmsocket_h.C_LONG;
    /**
     * {@snippet lang=c :
     * typedef struct _opaque_pthread_t {
     *     long __sig;
     *     struct __darwin_pthread_handler_rec *__cleanup_stack;
     *     char __opaque[8176];
     * } *__darwin_pthread_t
     * }
     */
    public static final AddressLayout __darwin_pthread_t = netty_epoll_vmsocket_h.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef unsigned char uint8_t
     * }
     */
    public static final OfByte uint8_t = netty_epoll_vmsocket_h.C_CHAR;
    /**
     * {@snippet lang=c :
     * typedef unsigned short uint16_t
     * }
     */
    public static final OfShort uint16_t = netty_epoll_vmsocket_h.C_SHORT;
    /**
     * {@snippet lang=c :
     * typedef unsigned int uint32_t
     * }
     */
    public static final OfInt uint32_t = netty_epoll_vmsocket_h.C_INT;
    /**
     * {@snippet lang=c :
     * typedef unsigned long long uint64_t
     * }
     */
    public static final OfLong uint64_t = netty_epoll_vmsocket_h.C_LONG_LONG;
    /**
     * {@snippet lang=c :
     * typedef int8_t int_least8_t
     * }
     */
    public static final OfByte int_least8_t = netty_epoll_vmsocket_h.C_CHAR;
    /**
     * {@snippet lang=c :
     * typedef int16_t int_least16_t
     * }
     */
    public static final OfShort int_least16_t = netty_epoll_vmsocket_h.C_SHORT;
    /**
     * {@snippet lang=c :
     * typedef int32_t int_least32_t
     * }
     */
    public static final OfInt int_least32_t = netty_epoll_vmsocket_h.C_INT;
    /**
     * {@snippet lang=c :
     * typedef int64_t int_least64_t
     * }
     */
    public static final OfLong int_least64_t = netty_epoll_vmsocket_h.C_LONG_LONG;
    /**
     * {@snippet lang=c :
     * typedef uint8_t uint_least8_t
     * }
     */
    public static final OfByte uint_least8_t = netty_epoll_vmsocket_h.C_CHAR;
    /**
     * {@snippet lang=c :
     * typedef uint16_t uint_least16_t
     * }
     */
    public static final OfShort uint_least16_t = netty_epoll_vmsocket_h.C_SHORT;
    /**
     * {@snippet lang=c :
     * typedef uint32_t uint_least32_t
     * }
     */
    public static final OfInt uint_least32_t = netty_epoll_vmsocket_h.C_INT;
    /**
     * {@snippet lang=c :
     * typedef uint64_t uint_least64_t
     * }
     */
    public static final OfLong uint_least64_t = netty_epoll_vmsocket_h.C_LONG_LONG;
    /**
     * {@snippet lang=c :
     * typedef int8_t int_fast8_t
     * }
     */
    public static final OfByte int_fast8_t = netty_epoll_vmsocket_h.C_CHAR;
    /**
     * {@snippet lang=c :
     * typedef int16_t int_fast16_t
     * }
     */
    public static final OfShort int_fast16_t = netty_epoll_vmsocket_h.C_SHORT;
    /**
     * {@snippet lang=c :
     * typedef int32_t int_fast32_t
     * }
     */
    public static final OfInt int_fast32_t = netty_epoll_vmsocket_h.C_INT;
    /**
     * {@snippet lang=c :
     * typedef int64_t int_fast64_t
     * }
     */
    public static final OfLong int_fast64_t = netty_epoll_vmsocket_h.C_LONG_LONG;
    /**
     * {@snippet lang=c :
     * typedef uint8_t uint_fast8_t
     * }
     */
    public static final OfByte uint_fast8_t = netty_epoll_vmsocket_h.C_CHAR;
    /**
     * {@snippet lang=c :
     * typedef uint16_t uint_fast16_t
     * }
     */
    public static final OfShort uint_fast16_t = netty_epoll_vmsocket_h.C_SHORT;
    /**
     * {@snippet lang=c :
     * typedef uint32_t uint_fast32_t
     * }
     */
    public static final OfInt uint_fast32_t = netty_epoll_vmsocket_h.C_INT;
    /**
     * {@snippet lang=c :
     * typedef uint64_t uint_fast64_t
     * }
     */
    public static final OfLong uint_fast64_t = netty_epoll_vmsocket_h.C_LONG_LONG;
    /**
     * {@snippet lang=c :
     * typedef long intmax_t
     * }
     */
    public static final OfLong intmax_t = netty_epoll_vmsocket_h.C_LONG;
    /**
     * {@snippet lang=c :
     * typedef unsigned long uintmax_t
     * }
     */
    public static final OfLong uintmax_t = netty_epoll_vmsocket_h.C_LONG;
    /**
     * {@snippet lang=c :
     * typedef unsigned char u_char
     * }
     */
    public static final OfByte u_char = netty_epoll_vmsocket_h.C_CHAR;
    /**
     * {@snippet lang=c :
     * typedef unsigned short u_short
     * }
     */
    public static final OfShort u_short = netty_epoll_vmsocket_h.C_SHORT;
    /**
     * {@snippet lang=c :
     * typedef unsigned int u_int
     * }
     */
    public static final OfInt u_int = netty_epoll_vmsocket_h.C_INT;
    /**
     * {@snippet lang=c :
     * typedef unsigned long u_long
     * }
     */
    public static final OfLong u_long = netty_epoll_vmsocket_h.C_LONG;
    /**
     * {@snippet lang=c :
     * typedef unsigned short ushort
     * }
     */
    public static final OfShort ushort = netty_epoll_vmsocket_h.C_SHORT;
    /**
     * {@snippet lang=c :
     * typedef unsigned int uint
     * }
     */
    public static final OfInt uint = netty_epoll_vmsocket_h.C_INT;
    /**
     * {@snippet lang=c :
     * typedef u_int64_t u_quad_t
     * }
     */
    public static final OfLong u_quad_t = netty_epoll_vmsocket_h.C_LONG_LONG;
    /**
     * {@snippet lang=c :
     * typedef int64_t quad_t
     * }
     */
    public static final OfLong quad_t = netty_epoll_vmsocket_h.C_LONG_LONG;
    /**
     * {@snippet lang=c :
     * typedef quad_t *qaddr_t
     * }
     */
    public static final AddressLayout qaddr_t = netty_epoll_vmsocket_h.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef char *caddr_t
     * }
     */
    public static final AddressLayout caddr_t = netty_epoll_vmsocket_h.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef int32_t daddr_t
     * }
     */
    public static final OfInt daddr_t = netty_epoll_vmsocket_h.C_INT;
    /**
     * {@snippet lang=c :
     * typedef __darwin_dev_t dev_t
     * }
     */
    public static final OfInt dev_t = netty_epoll_vmsocket_h.C_INT;
    /**
     * {@snippet lang=c :
     * typedef u_int32_t fixpt_t
     * }
     */
    public static final OfInt fixpt_t = netty_epoll_vmsocket_h.C_INT;
    /**
     * {@snippet lang=c :
     * typedef __darwin_blkcnt_t blkcnt_t
     * }
     */
    public static final OfLong blkcnt_t = netty_epoll_vmsocket_h.C_LONG_LONG;
    /**
     * {@snippet lang=c :
     * typedef __darwin_blksize_t blksize_t
     * }
     */
    public static final OfInt blksize_t = netty_epoll_vmsocket_h.C_INT;
    /**
     * {@snippet lang=c :
     * typedef __darwin_gid_t gid_t
     * }
     */
    public static final OfInt gid_t = netty_epoll_vmsocket_h.C_INT;
    /**
     * {@snippet lang=c :
     * typedef __uint32_t in_addr_t
     * }
     */
    public static final OfInt in_addr_t = netty_epoll_vmsocket_h.C_INT;
    /**
     * {@snippet lang=c :
     * typedef __uint16_t in_port_t
     * }
     */
    public static final OfShort in_port_t = netty_epoll_vmsocket_h.C_SHORT;
    /**
     * {@snippet lang=c :
     * typedef __darwin_ino_t ino_t
     * }
     */
    public static final OfLong ino_t = netty_epoll_vmsocket_h.C_LONG_LONG;
    /**
     * {@snippet lang=c :
     * typedef __darwin_ino64_t ino64_t
     * }
     */
    public static final OfLong ino64_t = netty_epoll_vmsocket_h.C_LONG_LONG;
    /**
     * {@snippet lang=c :
     * typedef __int32_t key_t
     * }
     */
    public static final OfInt key_t = netty_epoll_vmsocket_h.C_INT;
    /**
     * {@snippet lang=c :
     * typedef __darwin_mode_t mode_t
     * }
     */
    public static final OfShort mode_t = netty_epoll_vmsocket_h.C_SHORT;
    /**
     * {@snippet lang=c :
     * typedef __uint16_t nlink_t
     * }
     */
    public static final OfShort nlink_t = netty_epoll_vmsocket_h.C_SHORT;
    /**
     * {@snippet lang=c :
     * typedef __darwin_id_t id_t
     * }
     */
    public static final OfInt id_t = netty_epoll_vmsocket_h.C_INT;
    /**
     * {@snippet lang=c :
     * typedef __darwin_pid_t pid_t
     * }
     */
    public static final OfInt pid_t = netty_epoll_vmsocket_h.C_INT;
    /**
     * {@snippet lang=c :
     * typedef __darwin_off_t off_t
     * }
     */
    public static final OfLong off_t = netty_epoll_vmsocket_h.C_LONG_LONG;
    /**
     * {@snippet lang=c :
     * typedef int32_t segsz_t
     * }
     */
    public static final OfInt segsz_t = netty_epoll_vmsocket_h.C_INT;
    /**
     * {@snippet lang=c :
     * typedef int32_t swblk_t
     * }
     */
    public static final OfInt swblk_t = netty_epoll_vmsocket_h.C_INT;
    /**
     * {@snippet lang=c :
     * typedef __darwin_uid_t uid_t
     * }
     */
    public static final OfInt uid_t = netty_epoll_vmsocket_h.C_INT;
    /**
     * {@snippet lang=c :
     * typedef __darwin_clock_t clock_t
     * }
     */
    public static final OfLong clock_t = netty_epoll_vmsocket_h.C_LONG;
    /**
     * {@snippet lang=c :
     * typedef __darwin_size_t size_t
     * }
     */
    public static final OfLong size_t = netty_epoll_vmsocket_h.C_LONG;
    /**
     * {@snippet lang=c :
     * typedef __darwin_ssize_t ssize_t
     * }
     */
    public static final OfLong ssize_t = netty_epoll_vmsocket_h.C_LONG;
    /**
     * {@snippet lang=c :
     * typedef __darwin_time_t time_t
     * }
     */
    public static final OfLong time_t = netty_epoll_vmsocket_h.C_LONG;
    /**
     * {@snippet lang=c :
     * typedef __darwin_useconds_t useconds_t
     * }
     */
    public static final OfInt useconds_t = netty_epoll_vmsocket_h.C_INT;
    /**
     * {@snippet lang=c :
     * typedef __darwin_suseconds_t suseconds_t
     * }
     */
    public static final OfInt suseconds_t = netty_epoll_vmsocket_h.C_INT;
    /**
     * {@snippet lang=c :
     * typedef __darwin_size_t rsize_t
     * }
     */
    public static final OfLong rsize_t = netty_epoll_vmsocket_h.C_LONG;
    /**
     * {@snippet lang=c :
     * typedef int errno_t
     * }
     */
    public static final OfInt errno_t = netty_epoll_vmsocket_h.C_INT;

    private static class __darwin_check_fd_set_overflow {
        public static final FunctionDescriptor DESC = FunctionDescriptor.of(
            netty_epoll_vmsocket_h.C_INT,
            netty_epoll_vmsocket_h.C_INT,
            netty_epoll_vmsocket_h.C_POINTER,
            netty_epoll_vmsocket_h.C_INT
        );

        public static final MemorySegment ADDR = netty_epoll_vmsocket_h.findOrThrow("__darwin_check_fd_set_overflow");

        public static final MethodHandle HANDLE = Linker.nativeLinker().downcallHandle(ADDR, DESC);
    }

    /**
     * Function descriptor for:
     * {@snippet lang=c :
     * int __darwin_check_fd_set_overflow(int, const void *, int)
     * }
     */
    public static FunctionDescriptor __darwin_check_fd_set_overflow$descriptor() {
        return __darwin_check_fd_set_overflow.DESC;
    }

    /**
     * Downcall method handle for:
     * {@snippet lang=c :
     * int __darwin_check_fd_set_overflow(int, const void *, int)
     * }
     */
    public static MethodHandle __darwin_check_fd_set_overflow$handle() {
        return __darwin_check_fd_set_overflow.HANDLE;
    }

    /**
     * Address for:
     * {@snippet lang=c :
     * int __darwin_check_fd_set_overflow(int, const void *, int)
     * }
     */
    public static MemorySegment __darwin_check_fd_set_overflow$address() {
        return __darwin_check_fd_set_overflow.ADDR;
    }

    /**
     * {@snippet lang=c :
     * int __darwin_check_fd_set_overflow(int, const void *, int)
     * }
     */
    public static int __darwin_check_fd_set_overflow(int x0, MemorySegment x1, int x2) {
        var mh$ = __darwin_check_fd_set_overflow.HANDLE;
        try {
            if (TRACE_DOWNCALLS) {
                traceDowncall("__darwin_check_fd_set_overflow", x0, x1, x2);
            }
            return (int)mh$.invokeExact(x0, x1, x2);
        } catch (Throwable ex$) {
           throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet lang=c :
     * typedef __int32_t fd_mask
     * }
     */
    public static final OfInt fd_mask = netty_epoll_vmsocket_h.C_INT;
    /**
     * {@snippet lang=c :
     * typedef __darwin_pthread_t pthread_t
     * }
     */
    public static final AddressLayout pthread_t = netty_epoll_vmsocket_h.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef __darwin_pthread_key_t pthread_key_t
     * }
     */
    public static final OfLong pthread_key_t = netty_epoll_vmsocket_h.C_LONG;
    /**
     * {@snippet lang=c :
     * typedef __darwin_fsblkcnt_t fsblkcnt_t
     * }
     */
    public static final OfInt fsblkcnt_t = netty_epoll_vmsocket_h.C_INT;
    /**
     * {@snippet lang=c :
     * typedef __darwin_fsfilcnt_t fsfilcnt_t
     * }
     */
    public static final OfInt fsfilcnt_t = netty_epoll_vmsocket_h.C_INT;
    /**
     * {@snippet lang=c :
     * typedef __uint8_t sa_family_t
     * }
     */
    public static final OfByte sa_family_t = netty_epoll_vmsocket_h.C_CHAR;
    /**
     * {@snippet lang=c :
     * typedef __darwin_socklen_t socklen_t
     * }
     */
    public static final OfInt socklen_t = netty_epoll_vmsocket_h.C_INT;
    /**
     * {@snippet lang=c :
     * typedef __uint32_t sae_associd_t
     * }
     */
    public static final OfInt sae_associd_t = netty_epoll_vmsocket_h.C_INT;
    /**
     * {@snippet lang=c :
     * typedef __uint32_t sae_connid_t
     * }
     */
    public static final OfInt sae_connid_t = netty_epoll_vmsocket_h.C_INT;

    private static class accept {
        public static final FunctionDescriptor DESC = FunctionDescriptor.of(
            netty_epoll_vmsocket_h.C_INT,
            netty_epoll_vmsocket_h.C_INT,
            netty_epoll_vmsocket_h.C_POINTER,
            netty_epoll_vmsocket_h.C_POINTER
        );

        public static final MemorySegment ADDR = netty_epoll_vmsocket_h.findOrThrow("accept");

        public static final MethodHandle HANDLE = Linker.nativeLinker().downcallHandle(ADDR, DESC);
    }

    /**
     * Function descriptor for:
     * {@snippet lang=c :
     * int accept(int, struct sockaddr *restrict, socklen_t *restrict)
     * }
     */
    public static FunctionDescriptor accept$descriptor() {
        return accept.DESC;
    }

    /**
     * Downcall method handle for:
     * {@snippet lang=c :
     * int accept(int, struct sockaddr *restrict, socklen_t *restrict)
     * }
     */
    public static MethodHandle accept$handle() {
        return accept.HANDLE;
    }

    /**
     * Address for:
     * {@snippet lang=c :
     * int accept(int, struct sockaddr *restrict, socklen_t *restrict)
     * }
     */
    public static MemorySegment accept$address() {
        return accept.ADDR;
    }

    /**
     * {@snippet lang=c :
     * int accept(int, struct sockaddr *restrict, socklen_t *restrict)
     * }
     */
    public static int accept(int x0, MemorySegment x1, MemorySegment x2) {
        var mh$ = accept.HANDLE;
        try {
            if (TRACE_DOWNCALLS) {
                traceDowncall("accept", x0, x1, x2);
            }
            return (int)mh$.invokeExact(x0, x1, x2);
        } catch (Throwable ex$) {
           throw new AssertionError("should not reach here", ex$);
        }
    }

    private static class bind {
        public static final FunctionDescriptor DESC = FunctionDescriptor.of(
            netty_epoll_vmsocket_h.C_INT,
            netty_epoll_vmsocket_h.C_INT,
            netty_epoll_vmsocket_h.C_POINTER,
            netty_epoll_vmsocket_h.C_INT
        );

        public static final MemorySegment ADDR = netty_epoll_vmsocket_h.findOrThrow("bind");

        public static final MethodHandle HANDLE = Linker.nativeLinker().downcallHandle(ADDR, DESC);
    }

    /**
     * Function descriptor for:
     * {@snippet lang=c :
     * int bind(int, const struct sockaddr *, socklen_t)
     * }
     */
    public static FunctionDescriptor bind$descriptor() {
        return bind.DESC;
    }

    /**
     * Downcall method handle for:
     * {@snippet lang=c :
     * int bind(int, const struct sockaddr *, socklen_t)
     * }
     */
    public static MethodHandle bind$handle() {
        return bind.HANDLE;
    }

    /**
     * Address for:
     * {@snippet lang=c :
     * int bind(int, const struct sockaddr *, socklen_t)
     * }
     */
    public static MemorySegment bind$address() {
        return bind.ADDR;
    }

    /**
     * {@snippet lang=c :
     * int bind(int, const struct sockaddr *, socklen_t)
     * }
     */
    public static int bind(int x0, MemorySegment x1, int x2) {
        var mh$ = bind.HANDLE;
        try {
            if (TRACE_DOWNCALLS) {
                traceDowncall("bind", x0, x1, x2);
            }
            return (int)mh$.invokeExact(x0, x1, x2);
        } catch (Throwable ex$) {
           throw new AssertionError("should not reach here", ex$);
        }
    }

    private static class connect {
        public static final FunctionDescriptor DESC = FunctionDescriptor.of(
            netty_epoll_vmsocket_h.C_INT,
            netty_epoll_vmsocket_h.C_INT,
            netty_epoll_vmsocket_h.C_POINTER,
            netty_epoll_vmsocket_h.C_INT
        );

        public static final MemorySegment ADDR = netty_epoll_vmsocket_h.findOrThrow("connect");

        public static final MethodHandle HANDLE = Linker.nativeLinker().downcallHandle(ADDR, DESC);
    }

    /**
     * Function descriptor for:
     * {@snippet lang=c :
     * int connect(int, const struct sockaddr *, socklen_t)
     * }
     */
    public static FunctionDescriptor connect$descriptor() {
        return connect.DESC;
    }

    /**
     * Downcall method handle for:
     * {@snippet lang=c :
     * int connect(int, const struct sockaddr *, socklen_t)
     * }
     */
    public static MethodHandle connect$handle() {
        return connect.HANDLE;
    }

    /**
     * Address for:
     * {@snippet lang=c :
     * int connect(int, const struct sockaddr *, socklen_t)
     * }
     */
    public static MemorySegment connect$address() {
        return connect.ADDR;
    }

    /**
     * {@snippet lang=c :
     * int connect(int, const struct sockaddr *, socklen_t)
     * }
     */
    public static int connect(int x0, MemorySegment x1, int x2) {
        var mh$ = connect.HANDLE;
        try {
            if (TRACE_DOWNCALLS) {
                traceDowncall("connect", x0, x1, x2);
            }
            return (int)mh$.invokeExact(x0, x1, x2);
        } catch (Throwable ex$) {
           throw new AssertionError("should not reach here", ex$);
        }
    }

    private static class getpeername {
        public static final FunctionDescriptor DESC = FunctionDescriptor.of(
            netty_epoll_vmsocket_h.C_INT,
            netty_epoll_vmsocket_h.C_INT,
            netty_epoll_vmsocket_h.C_POINTER,
            netty_epoll_vmsocket_h.C_POINTER
        );

        public static final MemorySegment ADDR = netty_epoll_vmsocket_h.findOrThrow("getpeername");

        public static final MethodHandle HANDLE = Linker.nativeLinker().downcallHandle(ADDR, DESC);
    }

    /**
     * Function descriptor for:
     * {@snippet lang=c :
     * int getpeername(int, struct sockaddr *restrict, socklen_t *restrict)
     * }
     */
    public static FunctionDescriptor getpeername$descriptor() {
        return getpeername.DESC;
    }

    /**
     * Downcall method handle for:
     * {@snippet lang=c :
     * int getpeername(int, struct sockaddr *restrict, socklen_t *restrict)
     * }
     */
    public static MethodHandle getpeername$handle() {
        return getpeername.HANDLE;
    }

    /**
     * Address for:
     * {@snippet lang=c :
     * int getpeername(int, struct sockaddr *restrict, socklen_t *restrict)
     * }
     */
    public static MemorySegment getpeername$address() {
        return getpeername.ADDR;
    }

    /**
     * {@snippet lang=c :
     * int getpeername(int, struct sockaddr *restrict, socklen_t *restrict)
     * }
     */
    public static int getpeername(int x0, MemorySegment x1, MemorySegment x2) {
        var mh$ = getpeername.HANDLE;
        try {
            if (TRACE_DOWNCALLS) {
                traceDowncall("getpeername", x0, x1, x2);
            }
            return (int)mh$.invokeExact(x0, x1, x2);
        } catch (Throwable ex$) {
           throw new AssertionError("should not reach here", ex$);
        }
    }

    private static class getsockname {
        public static final FunctionDescriptor DESC = FunctionDescriptor.of(
            netty_epoll_vmsocket_h.C_INT,
            netty_epoll_vmsocket_h.C_INT,
            netty_epoll_vmsocket_h.C_POINTER,
            netty_epoll_vmsocket_h.C_POINTER
        );

        public static final MemorySegment ADDR = netty_epoll_vmsocket_h.findOrThrow("getsockname");

        public static final MethodHandle HANDLE = Linker.nativeLinker().downcallHandle(ADDR, DESC);
    }

    /**
     * Function descriptor for:
     * {@snippet lang=c :
     * int getsockname(int, struct sockaddr *restrict, socklen_t *restrict)
     * }
     */
    public static FunctionDescriptor getsockname$descriptor() {
        return getsockname.DESC;
    }

    /**
     * Downcall method handle for:
     * {@snippet lang=c :
     * int getsockname(int, struct sockaddr *restrict, socklen_t *restrict)
     * }
     */
    public static MethodHandle getsockname$handle() {
        return getsockname.HANDLE;
    }

    /**
     * Address for:
     * {@snippet lang=c :
     * int getsockname(int, struct sockaddr *restrict, socklen_t *restrict)
     * }
     */
    public static MemorySegment getsockname$address() {
        return getsockname.ADDR;
    }

    /**
     * {@snippet lang=c :
     * int getsockname(int, struct sockaddr *restrict, socklen_t *restrict)
     * }
     */
    public static int getsockname(int x0, MemorySegment x1, MemorySegment x2) {
        var mh$ = getsockname.HANDLE;
        try {
            if (TRACE_DOWNCALLS) {
                traceDowncall("getsockname", x0, x1, x2);
            }
            return (int)mh$.invokeExact(x0, x1, x2);
        } catch (Throwable ex$) {
           throw new AssertionError("should not reach here", ex$);
        }
    }

    private static class getsockopt {
        public static final FunctionDescriptor DESC = FunctionDescriptor.of(
            netty_epoll_vmsocket_h.C_INT,
            netty_epoll_vmsocket_h.C_INT,
            netty_epoll_vmsocket_h.C_INT,
            netty_epoll_vmsocket_h.C_INT,
            netty_epoll_vmsocket_h.C_POINTER,
            netty_epoll_vmsocket_h.C_POINTER
        );

        public static final MemorySegment ADDR = netty_epoll_vmsocket_h.findOrThrow("getsockopt");

        public static final MethodHandle HANDLE = Linker.nativeLinker().downcallHandle(ADDR, DESC);
    }

    /**
     * Function descriptor for:
     * {@snippet lang=c :
     * int getsockopt(int, int, int, void *restrict, socklen_t *restrict)
     * }
     */
    public static FunctionDescriptor getsockopt$descriptor() {
        return getsockopt.DESC;
    }

    /**
     * Downcall method handle for:
     * {@snippet lang=c :
     * int getsockopt(int, int, int, void *restrict, socklen_t *restrict)
     * }
     */
    public static MethodHandle getsockopt$handle() {
        return getsockopt.HANDLE;
    }

    /**
     * Address for:
     * {@snippet lang=c :
     * int getsockopt(int, int, int, void *restrict, socklen_t *restrict)
     * }
     */
    public static MemorySegment getsockopt$address() {
        return getsockopt.ADDR;
    }

    /**
     * {@snippet lang=c :
     * int getsockopt(int, int, int, void *restrict, socklen_t *restrict)
     * }
     */
    public static int getsockopt(int x0, int x1, int x2, MemorySegment x3, MemorySegment x4) {
        var mh$ = getsockopt.HANDLE;
        try {
            if (TRACE_DOWNCALLS) {
                traceDowncall("getsockopt", x0, x1, x2, x3, x4);
            }
            return (int)mh$.invokeExact(x0, x1, x2, x3, x4);
        } catch (Throwable ex$) {
           throw new AssertionError("should not reach here", ex$);
        }
    }

    private static class listen {
        public static final FunctionDescriptor DESC = FunctionDescriptor.of(
            netty_epoll_vmsocket_h.C_INT,
            netty_epoll_vmsocket_h.C_INT,
            netty_epoll_vmsocket_h.C_INT
        );

        public static final MemorySegment ADDR = netty_epoll_vmsocket_h.findOrThrow("listen");

        public static final MethodHandle HANDLE = Linker.nativeLinker().downcallHandle(ADDR, DESC);
    }

    /**
     * Function descriptor for:
     * {@snippet lang=c :
     * int listen(int, int)
     * }
     */
    public static FunctionDescriptor listen$descriptor() {
        return listen.DESC;
    }

    /**
     * Downcall method handle for:
     * {@snippet lang=c :
     * int listen(int, int)
     * }
     */
    public static MethodHandle listen$handle() {
        return listen.HANDLE;
    }

    /**
     * Address for:
     * {@snippet lang=c :
     * int listen(int, int)
     * }
     */
    public static MemorySegment listen$address() {
        return listen.ADDR;
    }

    /**
     * {@snippet lang=c :
     * int listen(int, int)
     * }
     */
    public static int listen(int x0, int x1) {
        var mh$ = listen.HANDLE;
        try {
            if (TRACE_DOWNCALLS) {
                traceDowncall("listen", x0, x1);
            }
            return (int)mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
           throw new AssertionError("should not reach here", ex$);
        }
    }

    private static class recv {
        public static final FunctionDescriptor DESC = FunctionDescriptor.of(
            netty_epoll_vmsocket_h.C_LONG,
            netty_epoll_vmsocket_h.C_INT,
            netty_epoll_vmsocket_h.C_POINTER,
            netty_epoll_vmsocket_h.C_LONG,
            netty_epoll_vmsocket_h.C_INT
        );

        public static final MemorySegment ADDR = netty_epoll_vmsocket_h.findOrThrow("recv");

        public static final MethodHandle HANDLE = Linker.nativeLinker().downcallHandle(ADDR, DESC);
    }

    /**
     * Function descriptor for:
     * {@snippet lang=c :
     * ssize_t recv(int, void *, size_t, int)
     * }
     */
    public static FunctionDescriptor recv$descriptor() {
        return recv.DESC;
    }

    /**
     * Downcall method handle for:
     * {@snippet lang=c :
     * ssize_t recv(int, void *, size_t, int)
     * }
     */
    public static MethodHandle recv$handle() {
        return recv.HANDLE;
    }

    /**
     * Address for:
     * {@snippet lang=c :
     * ssize_t recv(int, void *, size_t, int)
     * }
     */
    public static MemorySegment recv$address() {
        return recv.ADDR;
    }

    /**
     * {@snippet lang=c :
     * ssize_t recv(int, void *, size_t, int)
     * }
     */
    public static long recv(int x0, MemorySegment x1, long x2, int x3) {
        var mh$ = recv.HANDLE;
        try {
            if (TRACE_DOWNCALLS) {
                traceDowncall("recv", x0, x1, x2, x3);
            }
            return (long)mh$.invokeExact(x0, x1, x2, x3);
        } catch (Throwable ex$) {
           throw new AssertionError("should not reach here", ex$);
        }
    }

    private static class recvfrom {
        public static final FunctionDescriptor DESC = FunctionDescriptor.of(
            netty_epoll_vmsocket_h.C_LONG,
            netty_epoll_vmsocket_h.C_INT,
            netty_epoll_vmsocket_h.C_POINTER,
            netty_epoll_vmsocket_h.C_LONG,
            netty_epoll_vmsocket_h.C_INT,
            netty_epoll_vmsocket_h.C_POINTER,
            netty_epoll_vmsocket_h.C_POINTER
        );

        public static final MemorySegment ADDR = netty_epoll_vmsocket_h.findOrThrow("recvfrom");

        public static final MethodHandle HANDLE = Linker.nativeLinker().downcallHandle(ADDR, DESC);
    }

    /**
     * Function descriptor for:
     * {@snippet lang=c :
     * ssize_t recvfrom(int, void *, size_t, int, struct sockaddr *restrict, socklen_t *restrict)
     * }
     */
    public static FunctionDescriptor recvfrom$descriptor() {
        return recvfrom.DESC;
    }

    /**
     * Downcall method handle for:
     * {@snippet lang=c :
     * ssize_t recvfrom(int, void *, size_t, int, struct sockaddr *restrict, socklen_t *restrict)
     * }
     */
    public static MethodHandle recvfrom$handle() {
        return recvfrom.HANDLE;
    }

    /**
     * Address for:
     * {@snippet lang=c :
     * ssize_t recvfrom(int, void *, size_t, int, struct sockaddr *restrict, socklen_t *restrict)
     * }
     */
    public static MemorySegment recvfrom$address() {
        return recvfrom.ADDR;
    }

    /**
     * {@snippet lang=c :
     * ssize_t recvfrom(int, void *, size_t, int, struct sockaddr *restrict, socklen_t *restrict)
     * }
     */
    public static long recvfrom(int x0, MemorySegment x1, long x2, int x3, MemorySegment x4, MemorySegment x5) {
        var mh$ = recvfrom.HANDLE;
        try {
            if (TRACE_DOWNCALLS) {
                traceDowncall("recvfrom", x0, x1, x2, x3, x4, x5);
            }
            return (long)mh$.invokeExact(x0, x1, x2, x3, x4, x5);
        } catch (Throwable ex$) {
           throw new AssertionError("should not reach here", ex$);
        }
    }

    private static class recvmsg {
        public static final FunctionDescriptor DESC = FunctionDescriptor.of(
            netty_epoll_vmsocket_h.C_LONG,
            netty_epoll_vmsocket_h.C_INT,
            netty_epoll_vmsocket_h.C_POINTER,
            netty_epoll_vmsocket_h.C_INT
        );

        public static final MemorySegment ADDR = netty_epoll_vmsocket_h.findOrThrow("recvmsg");

        public static final MethodHandle HANDLE = Linker.nativeLinker().downcallHandle(ADDR, DESC);
    }

    /**
     * Function descriptor for:
     * {@snippet lang=c :
     * ssize_t recvmsg(int, struct msghdr *, int)
     * }
     */
    public static FunctionDescriptor recvmsg$descriptor() {
        return recvmsg.DESC;
    }

    /**
     * Downcall method handle for:
     * {@snippet lang=c :
     * ssize_t recvmsg(int, struct msghdr *, int)
     * }
     */
    public static MethodHandle recvmsg$handle() {
        return recvmsg.HANDLE;
    }

    /**
     * Address for:
     * {@snippet lang=c :
     * ssize_t recvmsg(int, struct msghdr *, int)
     * }
     */
    public static MemorySegment recvmsg$address() {
        return recvmsg.ADDR;
    }

    /**
     * {@snippet lang=c :
     * ssize_t recvmsg(int, struct msghdr *, int)
     * }
     */
    public static long recvmsg(int x0, MemorySegment x1, int x2) {
        var mh$ = recvmsg.HANDLE;
        try {
            if (TRACE_DOWNCALLS) {
                traceDowncall("recvmsg", x0, x1, x2);
            }
            return (long)mh$.invokeExact(x0, x1, x2);
        } catch (Throwable ex$) {
           throw new AssertionError("should not reach here", ex$);
        }
    }

    private static class send {
        public static final FunctionDescriptor DESC = FunctionDescriptor.of(
            netty_epoll_vmsocket_h.C_LONG,
            netty_epoll_vmsocket_h.C_INT,
            netty_epoll_vmsocket_h.C_POINTER,
            netty_epoll_vmsocket_h.C_LONG,
            netty_epoll_vmsocket_h.C_INT
        );

        public static final MemorySegment ADDR = netty_epoll_vmsocket_h.findOrThrow("send");

        public static final MethodHandle HANDLE = Linker.nativeLinker().downcallHandle(ADDR, DESC);
    }

    /**
     * Function descriptor for:
     * {@snippet lang=c :
     * ssize_t send(int, const void *, size_t, int)
     * }
     */
    public static FunctionDescriptor send$descriptor() {
        return send.DESC;
    }

    /**
     * Downcall method handle for:
     * {@snippet lang=c :
     * ssize_t send(int, const void *, size_t, int)
     * }
     */
    public static MethodHandle send$handle() {
        return send.HANDLE;
    }

    /**
     * Address for:
     * {@snippet lang=c :
     * ssize_t send(int, const void *, size_t, int)
     * }
     */
    public static MemorySegment send$address() {
        return send.ADDR;
    }

    /**
     * {@snippet lang=c :
     * ssize_t send(int, const void *, size_t, int)
     * }
     */
    public static long send(int x0, MemorySegment x1, long x2, int x3) {
        var mh$ = send.HANDLE;
        try {
            if (TRACE_DOWNCALLS) {
                traceDowncall("send", x0, x1, x2, x3);
            }
            return (long)mh$.invokeExact(x0, x1, x2, x3);
        } catch (Throwable ex$) {
           throw new AssertionError("should not reach here", ex$);
        }
    }

    private static class sendmsg {
        public static final FunctionDescriptor DESC = FunctionDescriptor.of(
            netty_epoll_vmsocket_h.C_LONG,
            netty_epoll_vmsocket_h.C_INT,
            netty_epoll_vmsocket_h.C_POINTER,
            netty_epoll_vmsocket_h.C_INT
        );

        public static final MemorySegment ADDR = netty_epoll_vmsocket_h.findOrThrow("sendmsg");

        public static final MethodHandle HANDLE = Linker.nativeLinker().downcallHandle(ADDR, DESC);
    }

    /**
     * Function descriptor for:
     * {@snippet lang=c :
     * ssize_t sendmsg(int, const struct msghdr *, int)
     * }
     */
    public static FunctionDescriptor sendmsg$descriptor() {
        return sendmsg.DESC;
    }

    /**
     * Downcall method handle for:
     * {@snippet lang=c :
     * ssize_t sendmsg(int, const struct msghdr *, int)
     * }
     */
    public static MethodHandle sendmsg$handle() {
        return sendmsg.HANDLE;
    }

    /**
     * Address for:
     * {@snippet lang=c :
     * ssize_t sendmsg(int, const struct msghdr *, int)
     * }
     */
    public static MemorySegment sendmsg$address() {
        return sendmsg.ADDR;
    }

    /**
     * {@snippet lang=c :
     * ssize_t sendmsg(int, const struct msghdr *, int)
     * }
     */
    public static long sendmsg(int x0, MemorySegment x1, int x2) {
        var mh$ = sendmsg.HANDLE;
        try {
            if (TRACE_DOWNCALLS) {
                traceDowncall("sendmsg", x0, x1, x2);
            }
            return (long)mh$.invokeExact(x0, x1, x2);
        } catch (Throwable ex$) {
           throw new AssertionError("should not reach here", ex$);
        }
    }

    private static class sendto {
        public static final FunctionDescriptor DESC = FunctionDescriptor.of(
            netty_epoll_vmsocket_h.C_LONG,
            netty_epoll_vmsocket_h.C_INT,
            netty_epoll_vmsocket_h.C_POINTER,
            netty_epoll_vmsocket_h.C_LONG,
            netty_epoll_vmsocket_h.C_INT,
            netty_epoll_vmsocket_h.C_POINTER,
            netty_epoll_vmsocket_h.C_INT
        );

        public static final MemorySegment ADDR = netty_epoll_vmsocket_h.findOrThrow("sendto");

        public static final MethodHandle HANDLE = Linker.nativeLinker().downcallHandle(ADDR, DESC);
    }

    /**
     * Function descriptor for:
     * {@snippet lang=c :
     * ssize_t sendto(int, const void *, size_t, int, const struct sockaddr *, socklen_t)
     * }
     */
    public static FunctionDescriptor sendto$descriptor() {
        return sendto.DESC;
    }

    /**
     * Downcall method handle for:
     * {@snippet lang=c :
     * ssize_t sendto(int, const void *, size_t, int, const struct sockaddr *, socklen_t)
     * }
     */
    public static MethodHandle sendto$handle() {
        return sendto.HANDLE;
    }

    /**
     * Address for:
     * {@snippet lang=c :
     * ssize_t sendto(int, const void *, size_t, int, const struct sockaddr *, socklen_t)
     * }
     */
    public static MemorySegment sendto$address() {
        return sendto.ADDR;
    }

    /**
     * {@snippet lang=c :
     * ssize_t sendto(int, const void *, size_t, int, const struct sockaddr *, socklen_t)
     * }
     */
    public static long sendto(int x0, MemorySegment x1, long x2, int x3, MemorySegment x4, int x5) {
        var mh$ = sendto.HANDLE;
        try {
            if (TRACE_DOWNCALLS) {
                traceDowncall("sendto", x0, x1, x2, x3, x4, x5);
            }
            return (long)mh$.invokeExact(x0, x1, x2, x3, x4, x5);
        } catch (Throwable ex$) {
           throw new AssertionError("should not reach here", ex$);
        }
    }

    private static class setsockopt {
        public static final FunctionDescriptor DESC = FunctionDescriptor.of(
            netty_epoll_vmsocket_h.C_INT,
            netty_epoll_vmsocket_h.C_INT,
            netty_epoll_vmsocket_h.C_INT,
            netty_epoll_vmsocket_h.C_INT,
            netty_epoll_vmsocket_h.C_POINTER,
            netty_epoll_vmsocket_h.C_INT
        );

        public static final MemorySegment ADDR = netty_epoll_vmsocket_h.findOrThrow("setsockopt");

        public static final MethodHandle HANDLE = Linker.nativeLinker().downcallHandle(ADDR, DESC);
    }

    /**
     * Function descriptor for:
     * {@snippet lang=c :
     * int setsockopt(int, int, int, const void *, socklen_t)
     * }
     */
    public static FunctionDescriptor setsockopt$descriptor() {
        return setsockopt.DESC;
    }

    /**
     * Downcall method handle for:
     * {@snippet lang=c :
     * int setsockopt(int, int, int, const void *, socklen_t)
     * }
     */
    public static MethodHandle setsockopt$handle() {
        return setsockopt.HANDLE;
    }

    /**
     * Address for:
     * {@snippet lang=c :
     * int setsockopt(int, int, int, const void *, socklen_t)
     * }
     */
    public static MemorySegment setsockopt$address() {
        return setsockopt.ADDR;
    }

    /**
     * {@snippet lang=c :
     * int setsockopt(int, int, int, const void *, socklen_t)
     * }
     */
    public static int setsockopt(int x0, int x1, int x2, MemorySegment x3, int x4) {
        var mh$ = setsockopt.HANDLE;
        try {
            if (TRACE_DOWNCALLS) {
                traceDowncall("setsockopt", x0, x1, x2, x3, x4);
            }
            return (int)mh$.invokeExact(x0, x1, x2, x3, x4);
        } catch (Throwable ex$) {
           throw new AssertionError("should not reach here", ex$);
        }
    }

    private static class shutdown {
        public static final FunctionDescriptor DESC = FunctionDescriptor.of(
            netty_epoll_vmsocket_h.C_INT,
            netty_epoll_vmsocket_h.C_INT,
            netty_epoll_vmsocket_h.C_INT
        );

        public static final MemorySegment ADDR = netty_epoll_vmsocket_h.findOrThrow("shutdown");

        public static final MethodHandle HANDLE = Linker.nativeLinker().downcallHandle(ADDR, DESC);
    }

    /**
     * Function descriptor for:
     * {@snippet lang=c :
     * int shutdown(int, int)
     * }
     */
    public static FunctionDescriptor shutdown$descriptor() {
        return shutdown.DESC;
    }

    /**
     * Downcall method handle for:
     * {@snippet lang=c :
     * int shutdown(int, int)
     * }
     */
    public static MethodHandle shutdown$handle() {
        return shutdown.HANDLE;
    }

    /**
     * Address for:
     * {@snippet lang=c :
     * int shutdown(int, int)
     * }
     */
    public static MemorySegment shutdown$address() {
        return shutdown.ADDR;
    }

    /**
     * {@snippet lang=c :
     * int shutdown(int, int)
     * }
     */
    public static int shutdown(int x0, int x1) {
        var mh$ = shutdown.HANDLE;
        try {
            if (TRACE_DOWNCALLS) {
                traceDowncall("shutdown", x0, x1);
            }
            return (int)mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
           throw new AssertionError("should not reach here", ex$);
        }
    }

    private static class sockatmark {
        public static final FunctionDescriptor DESC = FunctionDescriptor.of(
            netty_epoll_vmsocket_h.C_INT,
            netty_epoll_vmsocket_h.C_INT
        );

        public static final MemorySegment ADDR = netty_epoll_vmsocket_h.findOrThrow("sockatmark");

        public static final MethodHandle HANDLE = Linker.nativeLinker().downcallHandle(ADDR, DESC);
    }

    /**
     * Function descriptor for:
     * {@snippet lang=c :
     * int sockatmark(int)
     * }
     */
    public static FunctionDescriptor sockatmark$descriptor() {
        return sockatmark.DESC;
    }

    /**
     * Downcall method handle for:
     * {@snippet lang=c :
     * int sockatmark(int)
     * }
     */
    public static MethodHandle sockatmark$handle() {
        return sockatmark.HANDLE;
    }

    /**
     * Address for:
     * {@snippet lang=c :
     * int sockatmark(int)
     * }
     */
    public static MemorySegment sockatmark$address() {
        return sockatmark.ADDR;
    }

    /**
     * {@snippet lang=c :
     * int sockatmark(int)
     * }
     */
    public static int sockatmark(int x0) {
        var mh$ = sockatmark.HANDLE;
        try {
            if (TRACE_DOWNCALLS) {
                traceDowncall("sockatmark", x0);
            }
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
           throw new AssertionError("should not reach here", ex$);
        }
    }

    private static class socket {
        public static final FunctionDescriptor DESC = FunctionDescriptor.of(
            netty_epoll_vmsocket_h.C_INT,
            netty_epoll_vmsocket_h.C_INT,
            netty_epoll_vmsocket_h.C_INT,
            netty_epoll_vmsocket_h.C_INT
        );

        public static final MemorySegment ADDR = netty_epoll_vmsocket_h.findOrThrow("socket");

        public static final MethodHandle HANDLE = Linker.nativeLinker().downcallHandle(ADDR, DESC);
    }

    /**
     * Function descriptor for:
     * {@snippet lang=c :
     * int socket(int, int, int)
     * }
     */
    public static FunctionDescriptor socket$descriptor() {
        return socket.DESC;
    }

    /**
     * Downcall method handle for:
     * {@snippet lang=c :
     * int socket(int, int, int)
     * }
     */
    public static MethodHandle socket$handle() {
        return socket.HANDLE;
    }

    /**
     * Address for:
     * {@snippet lang=c :
     * int socket(int, int, int)
     * }
     */
    public static MemorySegment socket$address() {
        return socket.ADDR;
    }

    /**
     * {@snippet lang=c :
     * int socket(int, int, int)
     * }
     */
    public static int socket(int x0, int x1, int x2) {
        var mh$ = socket.HANDLE;
        try {
            if (TRACE_DOWNCALLS) {
                traceDowncall("socket", x0, x1, x2);
            }
            return (int)mh$.invokeExact(x0, x1, x2);
        } catch (Throwable ex$) {
           throw new AssertionError("should not reach here", ex$);
        }
    }

    private static class socketpair {
        public static final FunctionDescriptor DESC = FunctionDescriptor.of(
            netty_epoll_vmsocket_h.C_INT,
            netty_epoll_vmsocket_h.C_INT,
            netty_epoll_vmsocket_h.C_INT,
            netty_epoll_vmsocket_h.C_INT,
            netty_epoll_vmsocket_h.C_POINTER
        );

        public static final MemorySegment ADDR = netty_epoll_vmsocket_h.findOrThrow("socketpair");

        public static final MethodHandle HANDLE = Linker.nativeLinker().downcallHandle(ADDR, DESC);
    }

    /**
     * Function descriptor for:
     * {@snippet lang=c :
     * int socketpair(int, int, int, int *)
     * }
     */
    public static FunctionDescriptor socketpair$descriptor() {
        return socketpair.DESC;
    }

    /**
     * Downcall method handle for:
     * {@snippet lang=c :
     * int socketpair(int, int, int, int *)
     * }
     */
    public static MethodHandle socketpair$handle() {
        return socketpair.HANDLE;
    }

    /**
     * Address for:
     * {@snippet lang=c :
     * int socketpair(int, int, int, int *)
     * }
     */
    public static MemorySegment socketpair$address() {
        return socketpair.ADDR;
    }

    /**
     * {@snippet lang=c :
     * int socketpair(int, int, int, int *)
     * }
     */
    public static int socketpair(int x0, int x1, int x2, MemorySegment x3) {
        var mh$ = socketpair.HANDLE;
        try {
            if (TRACE_DOWNCALLS) {
                traceDowncall("socketpair", x0, x1, x2, x3);
            }
            return (int)mh$.invokeExact(x0, x1, x2, x3);
        } catch (Throwable ex$) {
           throw new AssertionError("should not reach here", ex$);
        }
    }

    private static class sendfile {
        public static final FunctionDescriptor DESC = FunctionDescriptor.of(
            netty_epoll_vmsocket_h.C_INT,
            netty_epoll_vmsocket_h.C_INT,
            netty_epoll_vmsocket_h.C_INT,
            netty_epoll_vmsocket_h.C_LONG_LONG,
            netty_epoll_vmsocket_h.C_POINTER,
            netty_epoll_vmsocket_h.C_POINTER,
            netty_epoll_vmsocket_h.C_INT
        );

        public static final MemorySegment ADDR = netty_epoll_vmsocket_h.findOrThrow("sendfile");

        public static final MethodHandle HANDLE = Linker.nativeLinker().downcallHandle(ADDR, DESC);
    }

    /**
     * Function descriptor for:
     * {@snippet lang=c :
     * int sendfile(int, int, off_t, off_t *, struct sf_hdtr *, int)
     * }
     */
    public static FunctionDescriptor sendfile$descriptor() {
        return sendfile.DESC;
    }

    /**
     * Downcall method handle for:
     * {@snippet lang=c :
     * int sendfile(int, int, off_t, off_t *, struct sf_hdtr *, int)
     * }
     */
    public static MethodHandle sendfile$handle() {
        return sendfile.HANDLE;
    }

    /**
     * Address for:
     * {@snippet lang=c :
     * int sendfile(int, int, off_t, off_t *, struct sf_hdtr *, int)
     * }
     */
    public static MemorySegment sendfile$address() {
        return sendfile.ADDR;
    }

    /**
     * {@snippet lang=c :
     * int sendfile(int, int, off_t, off_t *, struct sf_hdtr *, int)
     * }
     */
    public static int sendfile(int x0, int x1, long x2, MemorySegment x3, MemorySegment x4, int x5) {
        var mh$ = sendfile.HANDLE;
        try {
            if (TRACE_DOWNCALLS) {
                traceDowncall("sendfile", x0, x1, x2, x3, x4, x5);
            }
            return (int)mh$.invokeExact(x0, x1, x2, x3, x4, x5);
        } catch (Throwable ex$) {
           throw new AssertionError("should not reach here", ex$);
        }
    }

    private static class pfctlinput {
        public static final FunctionDescriptor DESC = FunctionDescriptor.ofVoid(
            netty_epoll_vmsocket_h.C_INT,
            netty_epoll_vmsocket_h.C_POINTER
        );

        public static final MemorySegment ADDR = netty_epoll_vmsocket_h.findOrThrow("pfctlinput");

        public static final MethodHandle HANDLE = Linker.nativeLinker().downcallHandle(ADDR, DESC);
    }

    /**
     * Function descriptor for:
     * {@snippet lang=c :
     * void pfctlinput(int, struct sockaddr *)
     * }
     */
    public static FunctionDescriptor pfctlinput$descriptor() {
        return pfctlinput.DESC;
    }

    /**
     * Downcall method handle for:
     * {@snippet lang=c :
     * void pfctlinput(int, struct sockaddr *)
     * }
     */
    public static MethodHandle pfctlinput$handle() {
        return pfctlinput.HANDLE;
    }

    /**
     * Address for:
     * {@snippet lang=c :
     * void pfctlinput(int, struct sockaddr *)
     * }
     */
    public static MemorySegment pfctlinput$address() {
        return pfctlinput.ADDR;
    }

    /**
     * {@snippet lang=c :
     * void pfctlinput(int, struct sockaddr *)
     * }
     */
    public static void pfctlinput(int x0, MemorySegment x1) {
        var mh$ = pfctlinput.HANDLE;
        try {
            if (TRACE_DOWNCALLS) {
                traceDowncall("pfctlinput", x0, x1);
            }
            mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
           throw new AssertionError("should not reach here", ex$);
        }
    }

    private static class connectx {
        public static final FunctionDescriptor DESC = FunctionDescriptor.of(
            netty_epoll_vmsocket_h.C_INT,
            netty_epoll_vmsocket_h.C_INT,
            netty_epoll_vmsocket_h.C_POINTER,
            netty_epoll_vmsocket_h.C_INT,
            netty_epoll_vmsocket_h.C_INT,
            netty_epoll_vmsocket_h.C_POINTER,
            netty_epoll_vmsocket_h.C_INT,
            netty_epoll_vmsocket_h.C_POINTER,
            netty_epoll_vmsocket_h.C_POINTER
        );

        public static final MemorySegment ADDR = netty_epoll_vmsocket_h.findOrThrow("connectx");

        public static final MethodHandle HANDLE = Linker.nativeLinker().downcallHandle(ADDR, DESC);
    }

    /**
     * Function descriptor for:
     * {@snippet lang=c :
     * int connectx(int, const sa_endpoints_t *, sae_associd_t, unsigned int, const struct iovec *, unsigned int, size_t *, sae_connid_t *)
     * }
     */
    public static FunctionDescriptor connectx$descriptor() {
        return connectx.DESC;
    }

    /**
     * Downcall method handle for:
     * {@snippet lang=c :
     * int connectx(int, const sa_endpoints_t *, sae_associd_t, unsigned int, const struct iovec *, unsigned int, size_t *, sae_connid_t *)
     * }
     */
    public static MethodHandle connectx$handle() {
        return connectx.HANDLE;
    }

    /**
     * Address for:
     * {@snippet lang=c :
     * int connectx(int, const sa_endpoints_t *, sae_associd_t, unsigned int, const struct iovec *, unsigned int, size_t *, sae_connid_t *)
     * }
     */
    public static MemorySegment connectx$address() {
        return connectx.ADDR;
    }

    /**
     * {@snippet lang=c :
     * int connectx(int, const sa_endpoints_t *, sae_associd_t, unsigned int, const struct iovec *, unsigned int, size_t *, sae_connid_t *)
     * }
     */
    public static int connectx(int x0, MemorySegment x1, int x2, int x3, MemorySegment x4, int x5, MemorySegment x6, MemorySegment x7) {
        var mh$ = connectx.HANDLE;
        try {
            if (TRACE_DOWNCALLS) {
                traceDowncall("connectx", x0, x1, x2, x3, x4, x5, x6, x7);
            }
            return (int)mh$.invokeExact(x0, x1, x2, x3, x4, x5, x6, x7);
        } catch (Throwable ex$) {
           throw new AssertionError("should not reach here", ex$);
        }
    }

    private static class disconnectx {
        public static final FunctionDescriptor DESC = FunctionDescriptor.of(
            netty_epoll_vmsocket_h.C_INT,
            netty_epoll_vmsocket_h.C_INT,
            netty_epoll_vmsocket_h.C_INT,
            netty_epoll_vmsocket_h.C_INT
        );

        public static final MemorySegment ADDR = netty_epoll_vmsocket_h.findOrThrow("disconnectx");

        public static final MethodHandle HANDLE = Linker.nativeLinker().downcallHandle(ADDR, DESC);
    }

    /**
     * Function descriptor for:
     * {@snippet lang=c :
     * int disconnectx(int, sae_associd_t, sae_connid_t)
     * }
     */
    public static FunctionDescriptor disconnectx$descriptor() {
        return disconnectx.DESC;
    }

    /**
     * Downcall method handle for:
     * {@snippet lang=c :
     * int disconnectx(int, sae_associd_t, sae_connid_t)
     * }
     */
    public static MethodHandle disconnectx$handle() {
        return disconnectx.HANDLE;
    }

    /**
     * Address for:
     * {@snippet lang=c :
     * int disconnectx(int, sae_associd_t, sae_connid_t)
     * }
     */
    public static MemorySegment disconnectx$address() {
        return disconnectx.ADDR;
    }

    /**
     * {@snippet lang=c :
     * int disconnectx(int, sae_associd_t, sae_connid_t)
     * }
     */
    public static int disconnectx(int x0, int x1, int x2) {
        var mh$ = disconnectx.HANDLE;
        try {
            if (TRACE_DOWNCALLS) {
                traceDowncall("disconnectx", x0, x1, x2);
            }
            return (int)mh$.invokeExact(x0, x1, x2);
        } catch (Throwable ex$) {
           throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet lang=c :
     * #define __DARWIN_SUF_EXTSN "$DARWIN_EXTSN"
     * }
     */
    public static MemorySegment __DARWIN_SUF_EXTSN() {
        class Holder {
            static final MemorySegment __DARWIN_SUF_EXTSN
                = netty_epoll_vmsocket_h.LIBRARY_ARENA.allocateFrom("$DARWIN_EXTSN");
        }
        return Holder.__DARWIN_SUF_EXTSN;
    }
    private static final long __DARWIN_C_ANSI = 4096L;
    /**
     * {@snippet lang=c :
     * #define __DARWIN_C_ANSI 4096
     * }
     */
    public static long __DARWIN_C_ANSI() {
        return __DARWIN_C_ANSI;
    }
    private static final long __DARWIN_C_FULL = 900000L;
    /**
     * {@snippet lang=c :
     * #define __DARWIN_C_FULL 900000
     * }
     */
    public static long __DARWIN_C_FULL() {
        return __DARWIN_C_FULL;
    }
    private static final long __DARWIN_C_LEVEL = 900000L;
    /**
     * {@snippet lang=c :
     * #define __DARWIN_C_LEVEL 900000
     * }
     */
    public static long __DARWIN_C_LEVEL() {
        return __DARWIN_C_LEVEL;
    }
    private static final long USER_ADDR_NULL = 0L;
    /**
     * {@snippet lang=c :
     * #define USER_ADDR_NULL 0
     * }
     */
    public static long USER_ADDR_NULL() {
        return USER_ADDR_NULL;
    }
    private static final MemorySegment __DARWIN_NULL = MemorySegment.ofAddress(0L);
    /**
     * {@snippet lang=c :
     * #define __DARWIN_NULL (void*) 0
     * }
     */
    public static MemorySegment __DARWIN_NULL() {
        return __DARWIN_NULL;
    }
    private static final int __DARWIN_BYTE_ORDER = (int)1234L;
    /**
     * {@snippet lang=c :
     * #define __DARWIN_BYTE_ORDER 1234
     * }
     */
    public static int __DARWIN_BYTE_ORDER() {
        return __DARWIN_BYTE_ORDER;
    }
    private static final int LITTLE_ENDIAN = (int)1234L;
    /**
     * {@snippet lang=c :
     * #define LITTLE_ENDIAN 1234
     * }
     */
    public static int LITTLE_ENDIAN() {
        return LITTLE_ENDIAN;
    }
    private static final int BIG_ENDIAN = (int)4321L;
    /**
     * {@snippet lang=c :
     * #define BIG_ENDIAN 4321
     * }
     */
    public static int BIG_ENDIAN() {
        return BIG_ENDIAN;
    }
    private static final int PDP_ENDIAN = (int)3412L;
    /**
     * {@snippet lang=c :
     * #define PDP_ENDIAN 3412
     * }
     */
    public static int PDP_ENDIAN() {
        return PDP_ENDIAN;
    }
    private static final int BYTE_ORDER = (int)1234L;
    /**
     * {@snippet lang=c :
     * #define BYTE_ORDER 1234
     * }
     */
    public static int BYTE_ORDER() {
        return BYTE_ORDER;
    }
    private static final long INT64_MAX = 9223372036854775807L;
    /**
     * {@snippet lang=c :
     * #define INT64_MAX 9223372036854775807
     * }
     */
    public static long INT64_MAX() {
        return INT64_MAX;
    }
    private static final int INT8_MIN = (int)-128L;
    /**
     * {@snippet lang=c :
     * #define INT8_MIN -128
     * }
     */
    public static int INT8_MIN() {
        return INT8_MIN;
    }
    private static final int INT16_MIN = (int)-32768L;
    /**
     * {@snippet lang=c :
     * #define INT16_MIN -32768
     * }
     */
    public static int INT16_MIN() {
        return INT16_MIN;
    }
    private static final int INT32_MIN = (int)-2147483648L;
    /**
     * {@snippet lang=c :
     * #define INT32_MIN -2147483648
     * }
     */
    public static int INT32_MIN() {
        return INT32_MIN;
    }
    private static final long INT64_MIN = -9223372036854775808L;
    /**
     * {@snippet lang=c :
     * #define INT64_MIN -9223372036854775808
     * }
     */
    public static long INT64_MIN() {
        return INT64_MIN;
    }
    private static final int UINT32_MAX = (int)4294967295L;
    /**
     * {@snippet lang=c :
     * #define UINT32_MAX 4294967295
     * }
     */
    public static int UINT32_MAX() {
        return UINT32_MAX;
    }
    private static final long UINT64_MAX = -1L;
    /**
     * {@snippet lang=c :
     * #define UINT64_MAX -1
     * }
     */
    public static long UINT64_MAX() {
        return UINT64_MAX;
    }
    private static final int INT_LEAST8_MIN = (int)-128L;
    /**
     * {@snippet lang=c :
     * #define INT_LEAST8_MIN -128
     * }
     */
    public static int INT_LEAST8_MIN() {
        return INT_LEAST8_MIN;
    }
    private static final int INT_LEAST16_MIN = (int)-32768L;
    /**
     * {@snippet lang=c :
     * #define INT_LEAST16_MIN -32768
     * }
     */
    public static int INT_LEAST16_MIN() {
        return INT_LEAST16_MIN;
    }
    private static final int INT_LEAST32_MIN = (int)-2147483648L;
    /**
     * {@snippet lang=c :
     * #define INT_LEAST32_MIN -2147483648
     * }
     */
    public static int INT_LEAST32_MIN() {
        return INT_LEAST32_MIN;
    }
    private static final long INT_LEAST64_MIN = -9223372036854775808L;
    /**
     * {@snippet lang=c :
     * #define INT_LEAST64_MIN -9223372036854775808
     * }
     */
    public static long INT_LEAST64_MIN() {
        return INT_LEAST64_MIN;
    }
    private static final int INT_LEAST8_MAX = (int)127L;
    /**
     * {@snippet lang=c :
     * #define INT_LEAST8_MAX 127
     * }
     */
    public static int INT_LEAST8_MAX() {
        return INT_LEAST8_MAX;
    }
    private static final int INT_LEAST16_MAX = (int)32767L;
    /**
     * {@snippet lang=c :
     * #define INT_LEAST16_MAX 32767
     * }
     */
    public static int INT_LEAST16_MAX() {
        return INT_LEAST16_MAX;
    }
    private static final int INT_LEAST32_MAX = (int)2147483647L;
    /**
     * {@snippet lang=c :
     * #define INT_LEAST32_MAX 2147483647
     * }
     */
    public static int INT_LEAST32_MAX() {
        return INT_LEAST32_MAX;
    }
    private static final long INT_LEAST64_MAX = 9223372036854775807L;
    /**
     * {@snippet lang=c :
     * #define INT_LEAST64_MAX 9223372036854775807
     * }
     */
    public static long INT_LEAST64_MAX() {
        return INT_LEAST64_MAX;
    }
    private static final int UINT_LEAST8_MAX = (int)255L;
    /**
     * {@snippet lang=c :
     * #define UINT_LEAST8_MAX 255
     * }
     */
    public static int UINT_LEAST8_MAX() {
        return UINT_LEAST8_MAX;
    }
    private static final int UINT_LEAST16_MAX = (int)65535L;
    /**
     * {@snippet lang=c :
     * #define UINT_LEAST16_MAX 65535
     * }
     */
    public static int UINT_LEAST16_MAX() {
        return UINT_LEAST16_MAX;
    }
    private static final int UINT_LEAST32_MAX = (int)4294967295L;
    /**
     * {@snippet lang=c :
     * #define UINT_LEAST32_MAX 4294967295
     * }
     */
    public static int UINT_LEAST32_MAX() {
        return UINT_LEAST32_MAX;
    }
    private static final long UINT_LEAST64_MAX = -1L;
    /**
     * {@snippet lang=c :
     * #define UINT_LEAST64_MAX -1
     * }
     */
    public static long UINT_LEAST64_MAX() {
        return UINT_LEAST64_MAX;
    }
    private static final int INT_FAST8_MIN = (int)-128L;
    /**
     * {@snippet lang=c :
     * #define INT_FAST8_MIN -128
     * }
     */
    public static int INT_FAST8_MIN() {
        return INT_FAST8_MIN;
    }
    private static final int INT_FAST16_MIN = (int)-32768L;
    /**
     * {@snippet lang=c :
     * #define INT_FAST16_MIN -32768
     * }
     */
    public static int INT_FAST16_MIN() {
        return INT_FAST16_MIN;
    }
    private static final int INT_FAST32_MIN = (int)-2147483648L;
    /**
     * {@snippet lang=c :
     * #define INT_FAST32_MIN -2147483648
     * }
     */
    public static int INT_FAST32_MIN() {
        return INT_FAST32_MIN;
    }
    private static final long INT_FAST64_MIN = -9223372036854775808L;
    /**
     * {@snippet lang=c :
     * #define INT_FAST64_MIN -9223372036854775808
     * }
     */
    public static long INT_FAST64_MIN() {
        return INT_FAST64_MIN;
    }
    private static final int INT_FAST8_MAX = (int)127L;
    /**
     * {@snippet lang=c :
     * #define INT_FAST8_MAX 127
     * }
     */
    public static int INT_FAST8_MAX() {
        return INT_FAST8_MAX;
    }
    private static final int INT_FAST16_MAX = (int)32767L;
    /**
     * {@snippet lang=c :
     * #define INT_FAST16_MAX 32767
     * }
     */
    public static int INT_FAST16_MAX() {
        return INT_FAST16_MAX;
    }
    private static final int INT_FAST32_MAX = (int)2147483647L;
    /**
     * {@snippet lang=c :
     * #define INT_FAST32_MAX 2147483647
     * }
     */
    public static int INT_FAST32_MAX() {
        return INT_FAST32_MAX;
    }
    private static final long INT_FAST64_MAX = 9223372036854775807L;
    /**
     * {@snippet lang=c :
     * #define INT_FAST64_MAX 9223372036854775807
     * }
     */
    public static long INT_FAST64_MAX() {
        return INT_FAST64_MAX;
    }
    private static final int UINT_FAST8_MAX = (int)255L;
    /**
     * {@snippet lang=c :
     * #define UINT_FAST8_MAX 255
     * }
     */
    public static int UINT_FAST8_MAX() {
        return UINT_FAST8_MAX;
    }
    private static final int UINT_FAST16_MAX = (int)65535L;
    /**
     * {@snippet lang=c :
     * #define UINT_FAST16_MAX 65535
     * }
     */
    public static int UINT_FAST16_MAX() {
        return UINT_FAST16_MAX;
    }
    private static final int UINT_FAST32_MAX = (int)4294967295L;
    /**
     * {@snippet lang=c :
     * #define UINT_FAST32_MAX 4294967295
     * }
     */
    public static int UINT_FAST32_MAX() {
        return UINT_FAST32_MAX;
    }
    private static final long UINT_FAST64_MAX = -1L;
    /**
     * {@snippet lang=c :
     * #define UINT_FAST64_MAX -1
     * }
     */
    public static long UINT_FAST64_MAX() {
        return UINT_FAST64_MAX;
    }
    private static final long INTPTR_MAX = 9223372036854775807L;
    /**
     * {@snippet lang=c :
     * #define INTPTR_MAX 9223372036854775807
     * }
     */
    public static long INTPTR_MAX() {
        return INTPTR_MAX;
    }
    private static final long INTPTR_MIN = -9223372036854775808L;
    /**
     * {@snippet lang=c :
     * #define INTPTR_MIN -9223372036854775808
     * }
     */
    public static long INTPTR_MIN() {
        return INTPTR_MIN;
    }
    private static final long UINTPTR_MAX = -1L;
    /**
     * {@snippet lang=c :
     * #define UINTPTR_MAX -1
     * }
     */
    public static long UINTPTR_MAX() {
        return UINTPTR_MAX;
    }
    private static final long INTMAX_MAX = 9223372036854775807L;
    /**
     * {@snippet lang=c :
     * #define INTMAX_MAX 9223372036854775807
     * }
     */
    public static long INTMAX_MAX() {
        return INTMAX_MAX;
    }
    private static final long UINTMAX_MAX = -1L;
    /**
     * {@snippet lang=c :
     * #define UINTMAX_MAX -1
     * }
     */
    public static long UINTMAX_MAX() {
        return UINTMAX_MAX;
    }
    private static final long INTMAX_MIN = -9223372036854775808L;
    /**
     * {@snippet lang=c :
     * #define INTMAX_MIN -9223372036854775808
     * }
     */
    public static long INTMAX_MIN() {
        return INTMAX_MIN;
    }
    private static final long PTRDIFF_MIN = -9223372036854775808L;
    /**
     * {@snippet lang=c :
     * #define PTRDIFF_MIN -9223372036854775808
     * }
     */
    public static long PTRDIFF_MIN() {
        return PTRDIFF_MIN;
    }
    private static final long PTRDIFF_MAX = 9223372036854775807L;
    /**
     * {@snippet lang=c :
     * #define PTRDIFF_MAX 9223372036854775807
     * }
     */
    public static long PTRDIFF_MAX() {
        return PTRDIFF_MAX;
    }
    private static final long SIZE_MAX = -1L;
    /**
     * {@snippet lang=c :
     * #define SIZE_MAX -1
     * }
     */
    public static long SIZE_MAX() {
        return SIZE_MAX;
    }
    private static final long RSIZE_MAX = 9223372036854775807L;
    /**
     * {@snippet lang=c :
     * #define RSIZE_MAX 9223372036854775807
     * }
     */
    public static long RSIZE_MAX() {
        return RSIZE_MAX;
    }
    private static final int WCHAR_MAX = (int)2147483647L;
    /**
     * {@snippet lang=c :
     * #define WCHAR_MAX 2147483647
     * }
     */
    public static int WCHAR_MAX() {
        return WCHAR_MAX;
    }
    private static final int WCHAR_MIN = (int)-2147483648L;
    /**
     * {@snippet lang=c :
     * #define WCHAR_MIN -2147483648
     * }
     */
    public static int WCHAR_MIN() {
        return WCHAR_MIN;
    }
    private static final int WINT_MIN = (int)-2147483648L;
    /**
     * {@snippet lang=c :
     * #define WINT_MIN -2147483648
     * }
     */
    public static int WINT_MIN() {
        return WINT_MIN;
    }
    private static final int WINT_MAX = (int)2147483647L;
    /**
     * {@snippet lang=c :
     * #define WINT_MAX 2147483647
     * }
     */
    public static int WINT_MAX() {
        return WINT_MAX;
    }
    private static final int SIG_ATOMIC_MIN = (int)-2147483648L;
    /**
     * {@snippet lang=c :
     * #define SIG_ATOMIC_MIN -2147483648
     * }
     */
    public static int SIG_ATOMIC_MIN() {
        return SIG_ATOMIC_MIN;
    }
    private static final int SIG_ATOMIC_MAX = (int)2147483647L;
    /**
     * {@snippet lang=c :
     * #define SIG_ATOMIC_MAX 2147483647
     * }
     */
    public static int SIG_ATOMIC_MAX() {
        return SIG_ATOMIC_MAX;
    }
    private static final int MAC_OS_X_VERSION_10_0 = (int)1000L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_X_VERSION_10_0 1000
     * }
     */
    public static int MAC_OS_X_VERSION_10_0() {
        return MAC_OS_X_VERSION_10_0;
    }
    private static final int MAC_OS_X_VERSION_10_1 = (int)1010L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_X_VERSION_10_1 1010
     * }
     */
    public static int MAC_OS_X_VERSION_10_1() {
        return MAC_OS_X_VERSION_10_1;
    }
    private static final int MAC_OS_X_VERSION_10_2 = (int)1020L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_X_VERSION_10_2 1020
     * }
     */
    public static int MAC_OS_X_VERSION_10_2() {
        return MAC_OS_X_VERSION_10_2;
    }
    private static final int MAC_OS_X_VERSION_10_3 = (int)1030L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_X_VERSION_10_3 1030
     * }
     */
    public static int MAC_OS_X_VERSION_10_3() {
        return MAC_OS_X_VERSION_10_3;
    }
    private static final int MAC_OS_X_VERSION_10_4 = (int)1040L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_X_VERSION_10_4 1040
     * }
     */
    public static int MAC_OS_X_VERSION_10_4() {
        return MAC_OS_X_VERSION_10_4;
    }
    private static final int MAC_OS_X_VERSION_10_5 = (int)1050L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_X_VERSION_10_5 1050
     * }
     */
    public static int MAC_OS_X_VERSION_10_5() {
        return MAC_OS_X_VERSION_10_5;
    }
    private static final int MAC_OS_X_VERSION_10_6 = (int)1060L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_X_VERSION_10_6 1060
     * }
     */
    public static int MAC_OS_X_VERSION_10_6() {
        return MAC_OS_X_VERSION_10_6;
    }
    private static final int MAC_OS_X_VERSION_10_7 = (int)1070L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_X_VERSION_10_7 1070
     * }
     */
    public static int MAC_OS_X_VERSION_10_7() {
        return MAC_OS_X_VERSION_10_7;
    }
    private static final int MAC_OS_X_VERSION_10_8 = (int)1080L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_X_VERSION_10_8 1080
     * }
     */
    public static int MAC_OS_X_VERSION_10_8() {
        return MAC_OS_X_VERSION_10_8;
    }
    private static final int MAC_OS_X_VERSION_10_9 = (int)1090L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_X_VERSION_10_9 1090
     * }
     */
    public static int MAC_OS_X_VERSION_10_9() {
        return MAC_OS_X_VERSION_10_9;
    }
    private static final int MAC_OS_X_VERSION_10_10 = (int)101000L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_X_VERSION_10_10 101000
     * }
     */
    public static int MAC_OS_X_VERSION_10_10() {
        return MAC_OS_X_VERSION_10_10;
    }
    private static final int MAC_OS_X_VERSION_10_10_2 = (int)101002L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_X_VERSION_10_10_2 101002
     * }
     */
    public static int MAC_OS_X_VERSION_10_10_2() {
        return MAC_OS_X_VERSION_10_10_2;
    }
    private static final int MAC_OS_X_VERSION_10_10_3 = (int)101003L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_X_VERSION_10_10_3 101003
     * }
     */
    public static int MAC_OS_X_VERSION_10_10_3() {
        return MAC_OS_X_VERSION_10_10_3;
    }
    private static final int MAC_OS_X_VERSION_10_11 = (int)101100L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_X_VERSION_10_11 101100
     * }
     */
    public static int MAC_OS_X_VERSION_10_11() {
        return MAC_OS_X_VERSION_10_11;
    }
    private static final int MAC_OS_X_VERSION_10_11_2 = (int)101102L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_X_VERSION_10_11_2 101102
     * }
     */
    public static int MAC_OS_X_VERSION_10_11_2() {
        return MAC_OS_X_VERSION_10_11_2;
    }
    private static final int MAC_OS_X_VERSION_10_11_3 = (int)101103L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_X_VERSION_10_11_3 101103
     * }
     */
    public static int MAC_OS_X_VERSION_10_11_3() {
        return MAC_OS_X_VERSION_10_11_3;
    }
    private static final int MAC_OS_X_VERSION_10_11_4 = (int)101104L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_X_VERSION_10_11_4 101104
     * }
     */
    public static int MAC_OS_X_VERSION_10_11_4() {
        return MAC_OS_X_VERSION_10_11_4;
    }
    private static final int MAC_OS_X_VERSION_10_12 = (int)101200L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_X_VERSION_10_12 101200
     * }
     */
    public static int MAC_OS_X_VERSION_10_12() {
        return MAC_OS_X_VERSION_10_12;
    }
    private static final int MAC_OS_X_VERSION_10_12_1 = (int)101201L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_X_VERSION_10_12_1 101201
     * }
     */
    public static int MAC_OS_X_VERSION_10_12_1() {
        return MAC_OS_X_VERSION_10_12_1;
    }
    private static final int MAC_OS_X_VERSION_10_12_2 = (int)101202L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_X_VERSION_10_12_2 101202
     * }
     */
    public static int MAC_OS_X_VERSION_10_12_2() {
        return MAC_OS_X_VERSION_10_12_2;
    }
    private static final int MAC_OS_X_VERSION_10_12_4 = (int)101204L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_X_VERSION_10_12_4 101204
     * }
     */
    public static int MAC_OS_X_VERSION_10_12_4() {
        return MAC_OS_X_VERSION_10_12_4;
    }
    private static final int MAC_OS_X_VERSION_10_13 = (int)101300L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_X_VERSION_10_13 101300
     * }
     */
    public static int MAC_OS_X_VERSION_10_13() {
        return MAC_OS_X_VERSION_10_13;
    }
    private static final int MAC_OS_X_VERSION_10_13_1 = (int)101301L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_X_VERSION_10_13_1 101301
     * }
     */
    public static int MAC_OS_X_VERSION_10_13_1() {
        return MAC_OS_X_VERSION_10_13_1;
    }
    private static final int MAC_OS_X_VERSION_10_13_2 = (int)101302L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_X_VERSION_10_13_2 101302
     * }
     */
    public static int MAC_OS_X_VERSION_10_13_2() {
        return MAC_OS_X_VERSION_10_13_2;
    }
    private static final int MAC_OS_X_VERSION_10_13_4 = (int)101304L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_X_VERSION_10_13_4 101304
     * }
     */
    public static int MAC_OS_X_VERSION_10_13_4() {
        return MAC_OS_X_VERSION_10_13_4;
    }
    private static final int MAC_OS_X_VERSION_10_14 = (int)101400L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_X_VERSION_10_14 101400
     * }
     */
    public static int MAC_OS_X_VERSION_10_14() {
        return MAC_OS_X_VERSION_10_14;
    }
    private static final int MAC_OS_X_VERSION_10_14_1 = (int)101401L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_X_VERSION_10_14_1 101401
     * }
     */
    public static int MAC_OS_X_VERSION_10_14_1() {
        return MAC_OS_X_VERSION_10_14_1;
    }
    private static final int MAC_OS_X_VERSION_10_14_4 = (int)101404L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_X_VERSION_10_14_4 101404
     * }
     */
    public static int MAC_OS_X_VERSION_10_14_4() {
        return MAC_OS_X_VERSION_10_14_4;
    }
    private static final int MAC_OS_X_VERSION_10_14_5 = (int)101405L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_X_VERSION_10_14_5 101405
     * }
     */
    public static int MAC_OS_X_VERSION_10_14_5() {
        return MAC_OS_X_VERSION_10_14_5;
    }
    private static final int MAC_OS_X_VERSION_10_14_6 = (int)101406L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_X_VERSION_10_14_6 101406
     * }
     */
    public static int MAC_OS_X_VERSION_10_14_6() {
        return MAC_OS_X_VERSION_10_14_6;
    }
    private static final int MAC_OS_X_VERSION_10_15 = (int)101500L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_X_VERSION_10_15 101500
     * }
     */
    public static int MAC_OS_X_VERSION_10_15() {
        return MAC_OS_X_VERSION_10_15;
    }
    private static final int MAC_OS_X_VERSION_10_15_1 = (int)101501L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_X_VERSION_10_15_1 101501
     * }
     */
    public static int MAC_OS_X_VERSION_10_15_1() {
        return MAC_OS_X_VERSION_10_15_1;
    }
    private static final int MAC_OS_X_VERSION_10_15_4 = (int)101504L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_X_VERSION_10_15_4 101504
     * }
     */
    public static int MAC_OS_X_VERSION_10_15_4() {
        return MAC_OS_X_VERSION_10_15_4;
    }
    private static final int MAC_OS_X_VERSION_10_16 = (int)101600L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_X_VERSION_10_16 101600
     * }
     */
    public static int MAC_OS_X_VERSION_10_16() {
        return MAC_OS_X_VERSION_10_16;
    }
    private static final int MAC_OS_VERSION_11_0 = (int)110000L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_VERSION_11_0 110000
     * }
     */
    public static int MAC_OS_VERSION_11_0() {
        return MAC_OS_VERSION_11_0;
    }
    private static final int MAC_OS_VERSION_11_1 = (int)110100L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_VERSION_11_1 110100
     * }
     */
    public static int MAC_OS_VERSION_11_1() {
        return MAC_OS_VERSION_11_1;
    }
    private static final int MAC_OS_VERSION_11_3 = (int)110300L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_VERSION_11_3 110300
     * }
     */
    public static int MAC_OS_VERSION_11_3() {
        return MAC_OS_VERSION_11_3;
    }
    private static final int MAC_OS_VERSION_11_4 = (int)110400L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_VERSION_11_4 110400
     * }
     */
    public static int MAC_OS_VERSION_11_4() {
        return MAC_OS_VERSION_11_4;
    }
    private static final int MAC_OS_VERSION_11_5 = (int)110500L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_VERSION_11_5 110500
     * }
     */
    public static int MAC_OS_VERSION_11_5() {
        return MAC_OS_VERSION_11_5;
    }
    private static final int MAC_OS_VERSION_11_6 = (int)110600L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_VERSION_11_6 110600
     * }
     */
    public static int MAC_OS_VERSION_11_6() {
        return MAC_OS_VERSION_11_6;
    }
    private static final int MAC_OS_VERSION_12_0 = (int)120000L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_VERSION_12_0 120000
     * }
     */
    public static int MAC_OS_VERSION_12_0() {
        return MAC_OS_VERSION_12_0;
    }
    private static final int MAC_OS_VERSION_12_1 = (int)120100L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_VERSION_12_1 120100
     * }
     */
    public static int MAC_OS_VERSION_12_1() {
        return MAC_OS_VERSION_12_1;
    }
    private static final int MAC_OS_VERSION_12_2 = (int)120200L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_VERSION_12_2 120200
     * }
     */
    public static int MAC_OS_VERSION_12_2() {
        return MAC_OS_VERSION_12_2;
    }
    private static final int MAC_OS_VERSION_12_3 = (int)120300L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_VERSION_12_3 120300
     * }
     */
    public static int MAC_OS_VERSION_12_3() {
        return MAC_OS_VERSION_12_3;
    }
    private static final int MAC_OS_VERSION_12_4 = (int)120400L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_VERSION_12_4 120400
     * }
     */
    public static int MAC_OS_VERSION_12_4() {
        return MAC_OS_VERSION_12_4;
    }
    private static final int MAC_OS_VERSION_12_5 = (int)120500L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_VERSION_12_5 120500
     * }
     */
    public static int MAC_OS_VERSION_12_5() {
        return MAC_OS_VERSION_12_5;
    }
    private static final int MAC_OS_VERSION_12_6 = (int)120600L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_VERSION_12_6 120600
     * }
     */
    public static int MAC_OS_VERSION_12_6() {
        return MAC_OS_VERSION_12_6;
    }
    private static final int MAC_OS_VERSION_12_7 = (int)120700L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_VERSION_12_7 120700
     * }
     */
    public static int MAC_OS_VERSION_12_7() {
        return MAC_OS_VERSION_12_7;
    }
    private static final int MAC_OS_VERSION_13_0 = (int)130000L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_VERSION_13_0 130000
     * }
     */
    public static int MAC_OS_VERSION_13_0() {
        return MAC_OS_VERSION_13_0;
    }
    private static final int MAC_OS_VERSION_13_1 = (int)130100L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_VERSION_13_1 130100
     * }
     */
    public static int MAC_OS_VERSION_13_1() {
        return MAC_OS_VERSION_13_1;
    }
    private static final int MAC_OS_VERSION_13_2 = (int)130200L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_VERSION_13_2 130200
     * }
     */
    public static int MAC_OS_VERSION_13_2() {
        return MAC_OS_VERSION_13_2;
    }
    private static final int MAC_OS_VERSION_13_3 = (int)130300L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_VERSION_13_3 130300
     * }
     */
    public static int MAC_OS_VERSION_13_3() {
        return MAC_OS_VERSION_13_3;
    }
    private static final int MAC_OS_VERSION_13_4 = (int)130400L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_VERSION_13_4 130400
     * }
     */
    public static int MAC_OS_VERSION_13_4() {
        return MAC_OS_VERSION_13_4;
    }
    private static final int MAC_OS_VERSION_13_5 = (int)130500L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_VERSION_13_5 130500
     * }
     */
    public static int MAC_OS_VERSION_13_5() {
        return MAC_OS_VERSION_13_5;
    }
    private static final int MAC_OS_VERSION_13_6 = (int)130600L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_VERSION_13_6 130600
     * }
     */
    public static int MAC_OS_VERSION_13_6() {
        return MAC_OS_VERSION_13_6;
    }
    private static final int MAC_OS_VERSION_14_0 = (int)140000L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_VERSION_14_0 140000
     * }
     */
    public static int MAC_OS_VERSION_14_0() {
        return MAC_OS_VERSION_14_0;
    }
    private static final int MAC_OS_VERSION_14_1 = (int)140100L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_VERSION_14_1 140100
     * }
     */
    public static int MAC_OS_VERSION_14_1() {
        return MAC_OS_VERSION_14_1;
    }
    private static final int MAC_OS_VERSION_14_2 = (int)140200L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_VERSION_14_2 140200
     * }
     */
    public static int MAC_OS_VERSION_14_2() {
        return MAC_OS_VERSION_14_2;
    }
    private static final int MAC_OS_VERSION_14_3 = (int)140300L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_VERSION_14_3 140300
     * }
     */
    public static int MAC_OS_VERSION_14_3() {
        return MAC_OS_VERSION_14_3;
    }
    private static final int MAC_OS_VERSION_14_4 = (int)140400L;
    /**
     * {@snippet lang=c :
     * #define MAC_OS_VERSION_14_4 140400
     * }
     */
    public static int MAC_OS_VERSION_14_4() {
        return MAC_OS_VERSION_14_4;
    }
    private static final int __MAC_OS_X_VERSION_MAX_ALLOWED = (int)140400L;
    /**
     * {@snippet lang=c :
     * #define __MAC_OS_X_VERSION_MAX_ALLOWED 140400
     * }
     */
    public static int __MAC_OS_X_VERSION_MAX_ALLOWED() {
        return __MAC_OS_X_VERSION_MAX_ALLOWED;
    }
    private static final long __DARWIN_NFDBITS = 32L;
    /**
     * {@snippet lang=c :
     * #define __DARWIN_NFDBITS 32
     * }
     */
    public static long __DARWIN_NFDBITS() {
        return __DARWIN_NFDBITS;
    }
    private static final int NBBY = (int)8L;
    /**
     * {@snippet lang=c :
     * #define NBBY 8
     * }
     */
    public static int NBBY() {
        return NBBY;
    }
    private static final long NFDBITS = 32L;
    /**
     * {@snippet lang=c :
     * #define NFDBITS 32
     * }
     */
    public static long NFDBITS() {
        return NFDBITS;
    }
    private static final int FD_SETSIZE = (int)1024L;
    /**
     * {@snippet lang=c :
     * #define FD_SETSIZE 1024
     * }
     */
    public static int FD_SETSIZE() {
        return FD_SETSIZE;
    }
    private static final long __DARWIN_ALIGNBYTES = 7L;
    /**
     * {@snippet lang=c :
     * #define __DARWIN_ALIGNBYTES 7
     * }
     */
    public static long __DARWIN_ALIGNBYTES() {
        return __DARWIN_ALIGNBYTES;
    }
    private static final long __DARWIN_ALIGNBYTES32 = 3L;
    /**
     * {@snippet lang=c :
     * #define __DARWIN_ALIGNBYTES32 3
     * }
     */
    public static long __DARWIN_ALIGNBYTES32() {
        return __DARWIN_ALIGNBYTES32;
    }
    private static final int KEV_DL_MASTER_ELECTED = (int)23L;
    /**
     * {@snippet lang=c :
     * #define KEV_DL_MASTER_ELECTED 23
     * }
     */
    public static int KEV_DL_MASTER_ELECTED() {
        return KEV_DL_MASTER_ELECTED;
    }
    private static final int SAE_ASSOCID_ALL = (int)4294967295L;
    /**
     * {@snippet lang=c :
     * #define SAE_ASSOCID_ALL 4294967295
     * }
     */
    public static int SAE_ASSOCID_ALL() {
        return SAE_ASSOCID_ALL;
    }
    private static final int SAE_CONNID_ALL = (int)4294967295L;
    /**
     * {@snippet lang=c :
     * #define SAE_CONNID_ALL 4294967295
     * }
     */
    public static int SAE_CONNID_ALL() {
        return SAE_CONNID_ALL;
    }
    private static final int AF_LOCAL = (int)1L;
    /**
     * {@snippet lang=c :
     * #define AF_LOCAL 1
     * }
     */
    public static int AF_LOCAL() {
        return AF_LOCAL;
    }
    private static final int AF_OSI = (int)7L;
    /**
     * {@snippet lang=c :
     * #define AF_OSI 7
     * }
     */
    public static int AF_OSI() {
        return AF_OSI;
    }
    private static final int AF_E164 = (int)28L;
    /**
     * {@snippet lang=c :
     * #define AF_E164 28
     * }
     */
    public static int AF_E164() {
        return AF_E164;
    }
    private static final long _SS_ALIGNSIZE = 8L;
    /**
     * {@snippet lang=c :
     * #define _SS_ALIGNSIZE 8
     * }
     */
    public static long _SS_ALIGNSIZE() {
        return _SS_ALIGNSIZE;
    }
    private static final long _SS_PAD1SIZE = 6L;
    /**
     * {@snippet lang=c :
     * #define _SS_PAD1SIZE 6
     * }
     */
    public static long _SS_PAD1SIZE() {
        return _SS_PAD1SIZE;
    }
    private static final long _SS_PAD2SIZE = 112L;
    /**
     * {@snippet lang=c :
     * #define _SS_PAD2SIZE 112
     * }
     */
    public static long _SS_PAD2SIZE() {
        return _SS_PAD2SIZE;
    }
    private static final int PF_UNSPEC = (int)0L;
    /**
     * {@snippet lang=c :
     * #define PF_UNSPEC 0
     * }
     */
    public static int PF_UNSPEC() {
        return PF_UNSPEC;
    }
    private static final int PF_LOCAL = (int)1L;
    /**
     * {@snippet lang=c :
     * #define PF_LOCAL 1
     * }
     */
    public static int PF_LOCAL() {
        return PF_LOCAL;
    }
    private static final int PF_UNIX = (int)1L;
    /**
     * {@snippet lang=c :
     * #define PF_UNIX 1
     * }
     */
    public static int PF_UNIX() {
        return PF_UNIX;
    }
    private static final int PF_INET = (int)2L;
    /**
     * {@snippet lang=c :
     * #define PF_INET 2
     * }
     */
    public static int PF_INET() {
        return PF_INET;
    }
    private static final int PF_IMPLINK = (int)3L;
    /**
     * {@snippet lang=c :
     * #define PF_IMPLINK 3
     * }
     */
    public static int PF_IMPLINK() {
        return PF_IMPLINK;
    }
    private static final int PF_PUP = (int)4L;
    /**
     * {@snippet lang=c :
     * #define PF_PUP 4
     * }
     */
    public static int PF_PUP() {
        return PF_PUP;
    }
    private static final int PF_CHAOS = (int)5L;
    /**
     * {@snippet lang=c :
     * #define PF_CHAOS 5
     * }
     */
    public static int PF_CHAOS() {
        return PF_CHAOS;
    }
    private static final int PF_NS = (int)6L;
    /**
     * {@snippet lang=c :
     * #define PF_NS 6
     * }
     */
    public static int PF_NS() {
        return PF_NS;
    }
    private static final int PF_ISO = (int)7L;
    /**
     * {@snippet lang=c :
     * #define PF_ISO 7
     * }
     */
    public static int PF_ISO() {
        return PF_ISO;
    }
    private static final int PF_OSI = (int)7L;
    /**
     * {@snippet lang=c :
     * #define PF_OSI 7
     * }
     */
    public static int PF_OSI() {
        return PF_OSI;
    }
    private static final int PF_ECMA = (int)8L;
    /**
     * {@snippet lang=c :
     * #define PF_ECMA 8
     * }
     */
    public static int PF_ECMA() {
        return PF_ECMA;
    }
    private static final int PF_DATAKIT = (int)9L;
    /**
     * {@snippet lang=c :
     * #define PF_DATAKIT 9
     * }
     */
    public static int PF_DATAKIT() {
        return PF_DATAKIT;
    }
    private static final int PF_CCITT = (int)10L;
    /**
     * {@snippet lang=c :
     * #define PF_CCITT 10
     * }
     */
    public static int PF_CCITT() {
        return PF_CCITT;
    }
    private static final int PF_SNA = (int)11L;
    /**
     * {@snippet lang=c :
     * #define PF_SNA 11
     * }
     */
    public static int PF_SNA() {
        return PF_SNA;
    }
    private static final int PF_DECnet = (int)12L;
    /**
     * {@snippet lang=c :
     * #define PF_DECnet 12
     * }
     */
    public static int PF_DECnet() {
        return PF_DECnet;
    }
    private static final int PF_DLI = (int)13L;
    /**
     * {@snippet lang=c :
     * #define PF_DLI 13
     * }
     */
    public static int PF_DLI() {
        return PF_DLI;
    }
    private static final int PF_LAT = (int)14L;
    /**
     * {@snippet lang=c :
     * #define PF_LAT 14
     * }
     */
    public static int PF_LAT() {
        return PF_LAT;
    }
    private static final int PF_HYLINK = (int)15L;
    /**
     * {@snippet lang=c :
     * #define PF_HYLINK 15
     * }
     */
    public static int PF_HYLINK() {
        return PF_HYLINK;
    }
    private static final int PF_APPLETALK = (int)16L;
    /**
     * {@snippet lang=c :
     * #define PF_APPLETALK 16
     * }
     */
    public static int PF_APPLETALK() {
        return PF_APPLETALK;
    }
    private static final int PF_ROUTE = (int)17L;
    /**
     * {@snippet lang=c :
     * #define PF_ROUTE 17
     * }
     */
    public static int PF_ROUTE() {
        return PF_ROUTE;
    }
    private static final int PF_LINK = (int)18L;
    /**
     * {@snippet lang=c :
     * #define PF_LINK 18
     * }
     */
    public static int PF_LINK() {
        return PF_LINK;
    }
    private static final int PF_XTP = (int)19L;
    /**
     * {@snippet lang=c :
     * #define PF_XTP 19
     * }
     */
    public static int PF_XTP() {
        return PF_XTP;
    }
    private static final int PF_COIP = (int)20L;
    /**
     * {@snippet lang=c :
     * #define PF_COIP 20
     * }
     */
    public static int PF_COIP() {
        return PF_COIP;
    }
    private static final int PF_CNT = (int)21L;
    /**
     * {@snippet lang=c :
     * #define PF_CNT 21
     * }
     */
    public static int PF_CNT() {
        return PF_CNT;
    }
    private static final int PF_SIP = (int)24L;
    /**
     * {@snippet lang=c :
     * #define PF_SIP 24
     * }
     */
    public static int PF_SIP() {
        return PF_SIP;
    }
    private static final int PF_IPX = (int)23L;
    /**
     * {@snippet lang=c :
     * #define PF_IPX 23
     * }
     */
    public static int PF_IPX() {
        return PF_IPX;
    }
    private static final int PF_RTIP = (int)22L;
    /**
     * {@snippet lang=c :
     * #define PF_RTIP 22
     * }
     */
    public static int PF_RTIP() {
        return PF_RTIP;
    }
    private static final int PF_PIP = (int)25L;
    /**
     * {@snippet lang=c :
     * #define PF_PIP 25
     * }
     */
    public static int PF_PIP() {
        return PF_PIP;
    }
    private static final int PF_NDRV = (int)27L;
    /**
     * {@snippet lang=c :
     * #define PF_NDRV 27
     * }
     */
    public static int PF_NDRV() {
        return PF_NDRV;
    }
    private static final int PF_ISDN = (int)28L;
    /**
     * {@snippet lang=c :
     * #define PF_ISDN 28
     * }
     */
    public static int PF_ISDN() {
        return PF_ISDN;
    }
    private static final int PF_KEY = (int)29L;
    /**
     * {@snippet lang=c :
     * #define PF_KEY 29
     * }
     */
    public static int PF_KEY() {
        return PF_KEY;
    }
    private static final int PF_INET6 = (int)30L;
    /**
     * {@snippet lang=c :
     * #define PF_INET6 30
     * }
     */
    public static int PF_INET6() {
        return PF_INET6;
    }
    private static final int PF_NATM = (int)31L;
    /**
     * {@snippet lang=c :
     * #define PF_NATM 31
     * }
     */
    public static int PF_NATM() {
        return PF_NATM;
    }
    private static final int PF_SYSTEM = (int)32L;
    /**
     * {@snippet lang=c :
     * #define PF_SYSTEM 32
     * }
     */
    public static int PF_SYSTEM() {
        return PF_SYSTEM;
    }
    private static final int PF_NETBIOS = (int)33L;
    /**
     * {@snippet lang=c :
     * #define PF_NETBIOS 33
     * }
     */
    public static int PF_NETBIOS() {
        return PF_NETBIOS;
    }
    private static final int PF_PPP = (int)34L;
    /**
     * {@snippet lang=c :
     * #define PF_PPP 34
     * }
     */
    public static int PF_PPP() {
        return PF_PPP;
    }
    private static final int PF_RESERVED_36 = (int)36L;
    /**
     * {@snippet lang=c :
     * #define PF_RESERVED_36 36
     * }
     */
    public static int PF_RESERVED_36() {
        return PF_RESERVED_36;
    }
    private static final int PF_UTUN = (int)38L;
    /**
     * {@snippet lang=c :
     * #define PF_UTUN 38
     * }
     */
    public static int PF_UTUN() {
        return PF_UTUN;
    }
    private static final int PF_VSOCK = (int)40L;
    /**
     * {@snippet lang=c :
     * #define PF_VSOCK 40
     * }
     */
    public static int PF_VSOCK() {
        return PF_VSOCK;
    }
    private static final int PF_MAX = (int)41L;
    /**
     * {@snippet lang=c :
     * #define PF_MAX 41
     * }
     */
    public static int PF_MAX() {
        return PF_MAX;
    }
    private static final int PF_VLAN = (int)1986814318L;
    /**
     * {@snippet lang=c :
     * #define PF_VLAN 1986814318
     * }
     */
    public static int PF_VLAN() {
        return PF_VLAN;
    }
    private static final int PF_BOND = (int)1651469924L;
    /**
     * {@snippet lang=c :
     * #define PF_BOND 1651469924
     * }
     */
    public static int PF_BOND() {
        return PF_BOND;
    }
    private static final int NET_MAXID = (int)41L;
    /**
     * {@snippet lang=c :
     * #define NET_MAXID 41
     * }
     */
    public static int NET_MAXID() {
        return NET_MAXID;
    }
}

