/*
 * Copyright Â© 2022, The Elide Framework Authors. All rights reserved.
 *
 * The Gust/Elide framework and tools, and all associated source or object computer code, except where otherwise noted,
 * are licensed under the Zero Prosperity license, which is enclosed in this repository, in the file LICENSE.txt. Use of
 * this code in object or source form requires and implies consent and agreement to that license in principle and
 * practice. Source or object code not listing this header, or unless specified otherwise, remain the property of
 * Elide LLC and its suppliers, if any. The intellectual and technical concepts contained herein are proprietary to
 * Elide LLC and its suppliers and may be covered by U.S. and Foreign Patents, or patents in process, and are protected
 * by trade secret and copyright law. Dissemination of this information, or reproduction of this material, in any form,
 * is strictly forbidden except in adherence with assigned license requirements.
 */

syntax = "proto3";
package elide.app;

option optimize_for = SPEED;
option cc_enable_arenas = true;
option java_multiple_files = true;
option java_string_check_utf8 = true;
option php_class_prefix = "ELD";
option swift_prefix = "Elide";
option objc_class_prefix = "ELD";
option java_package = "tools.elide.app";
option csharp_namespace = "Elide.App";
option go_package = "github.com/elide-tools/elide/app;app";

// Enumerates application environment types.
enum Environment {
  // Development environments which are considered ephemeral.
  DEV = 0;

  // Staging environments which test live deployments.
  STAGE = 1;

  // Spare live environments which are considered production but not live.
  SPARE = 2;

  // Live deployments which serve production traffic.
  LIVE = 3;
}

// Describes information about an app environment.
message EnvironmentInfo {
  // Generated or assigned name for the environment.
  string name = 1;

  // Environment assignment.
  Environment environment = 2;
}

// Describes information about an app namespace, which includes ownership and environment information.
message AppNamespace {
  // Environment context for a given namespace for an Elide application.
  EnvironmentInfo context = 1;
}
