/*
 * Copyright Â© 2022, The Elide Framework Authors. All rights reserved.
 *
 * The Gust/Elide framework and tools, and all associated source or object computer code, except where otherwise noted,
 * are licensed under the Zero Prosperity license, which is enclosed in this repository, in the file LICENSE.txt. Use of
 * this code in object or source form requires and implies consent and agreement to that license in principle and
 * practice. Source or object code not listing this header, or unless specified otherwise, remain the property of
 * Elide LLC and its suppliers, if any. The intellectual and technical concepts contained herein are proprietary to
 * Elide LLC and its suppliers and may be covered by U.S. and Foreign Patents, or patents in process, and are protected
 * by trade secret and copyright law. Dissemination of this information, or reproduction of this material, in any form,
 * is strictly forbidden except in adherence with assigned license requirements.
 */

/*
 * Specifies structures used to define the notion of an "embedded" script asset in some foreign language, which can be
 * executed at runtime by Elide to fulfill user requests.
 */
syntax = "proto3";
package elide.assets;

import "elide/model/model.proto";
import "elide/data/data.proto";
import "google/protobuf/timestamp.proto";

option optimize_for = SPEED;
option cc_enable_arenas = true;
option java_multiple_files = true;
option java_string_check_utf8 = true;
option php_class_prefix = "ELD";
option swift_prefix = "Elide";
option objc_class_prefix = "ELD";
option java_package = "tools.elide.assets";
option csharp_namespace = "Elide.Assets";

// Enumerates languages which are supported for embedded scripting in Elide.
enum EmbeddedScriptLanguage {
  option allow_alias = true;

  // The language is unknown or unspecified; regular code should not use this value.
  LANGUAGE_UNSPECIFIED = 0;

  // The language is a dialect of JavaScript.
  JS = 1;

  // The language is a dialect of JavaScript.
  JAVASCRIPT = 1;

  // The language is Python; language support for Python.
  PY = 2;

  // The language is Python; language support for Python.
  PYTHON = 2;

  // The language is Ruby; language support for Ruby.
  RB = 3;

  // The language is Ruby; language support for Ruby.
  RUBY = 3;

  // The language is supported by the JVM.
  JVM = 4;

  // The language is Java; language support for JVM.
  JAVA = 4;

  // The language is Kotlin; language support for JVM with Kotlin compiler.
  KT = 5;

  // The language is Kotlin; language support for JVM with Kotlin compiler.
  KOTLIN = 5;

  // The language is Groovy; language support for JVM with Groovy compiler.
  GROOVY = 6;

  // The language is Scala; language support for JVM with Scala compiler.
  SCALA = 7;
}


// Describes embedded script-level metadata which is enclosed with the asset spec for an embedded script.
message EmbeddedScriptMetadata {
  // Specifies JavaScript-specific script metadata.
  message JsScriptMetadata {
    // Enumerates supported JavaScript language levels.
    enum JsLanguageLevel {
      // The language level is unknown or unspecified; regular code should not use this value.
      JS_LANGUAGE_LEVEL_DEFAULT = 0;

      // The language level is ES5.
      ES5 = 1;

      // The language level is ES6.
      ES6 = 2;

      // The language level is ES2017.
      ES2017 = 3;

      // The language level is ES2018.
      ES2018 = 4;

      // The language level is ES2019.
      ES2019 = 5;

      // The language level is ES2020.
      ES2020 = 6;

      // The language level is ES2021.
      ES2021 = 7;

      // The language level is ES2022.
      ES2022 = 8;

      // Stable language features.
      STABLE = 98;

      // Latest language features, stability be damned.
      LATEST = 99;
    }

    // Describes the JavaScript language level for the embedded script.
    JsLanguageLevel level = 1;
  }

  // Specifies Python-specific script metadata.
  message PyScriptMetadata {
    // Nothing at this time.
  }

  // Specifies Ruby-specific script metadata.
  message RbScriptMetadata {
    // Nothing at this time.
  }

  // Specifies JVM-specific script metadata.
  message JvmScriptMetadata {
    // Configuration relating to the Kotlin compiler and Kotlin language support.
    message KotlinConfiguration {
      // Nothing at this time.
    }

    // Configuration relating to the Groovy compiler and Groovy language support.
    message GroovyConfiguration {
      // Nothing at this time.
    }

    // Enumerates available JVM language levels.
    enum JvmLanguageLevel {
      // Default language level; regular code should not use this value.
      JVM_LANGUAGE_LEVEL_DEFAULT = 0;

      // Java 11.
      JAVA_11 = 11;

      // Java 17.
      JAVA_17 = 17;

      // Java 20.
      JAVA_20 = 20;

      // Latest stable (LTS) release.
      STABLE = 98;

      // Latest release, stability be damned.
      LATEST = 99;
    }

    // Effective JVM target.
    uint32 target_effective = 1;

    // Selected JVM language level.
    JvmLanguageLevel level = 2;

    // Whether Kotlin support is enabled.
    KotlinConfiguration kotlin = 3;

    // Whether Groovy support is enabled.
    GroovyConfiguration groovy = 4;
  }

  // Language-specific script metadata.
  oneof metadata {
    // JavaScript-related metadata.
    JsScriptMetadata javascript = 1;

    // Python-related metadata.
    PyScriptMetadata python = 2;

    // Ruby-related metadata.
    RbScriptMetadata ruby = 3;

    // JVM-related metadata.
    JvmScriptMetadata jvm = 4;
  }
}


// Describes a single embedded script asset, which is embedded within an Elide application. The script is enclosed
// within the protocol buffer record, along with a digest and various metadata.
message EmbeddedScript {
  option (model.role) = WIRE;

  // Module name / ID for this embedded script. Set at build time.
  string module = 1;

  // Filename, or some synthesized filename, for this script.
  string filename = 2;

  // Language of the embedded script, and expected interpreted language.
  EmbeddedScriptLanguage language = 3;

  // Embedded script-level metadata, including language-specific metadata.
  EmbeddedScriptMetadata metadata = 4;

  // Last-modified timestamp for the assets underlying this script.
  google.protobuf.Timestamp last_modified = 5;

  // Unique set of direct dependencies for this embedded script asset; expected to be other, compatible embedded
  // scripts (same language, same runtime level). Expressed as a `module` ID.
  repeated string direct_dependency = 6;

  // Unique transitive closure of all dependencies this module relies upon; expected to be other, compatible embedded
  // scripts (same language, same runtime level). Expressed as a `module` ID.
  repeated string transitive_dependency = 7;

  // Describes the raw data for the script content itself, plus a digest of the data for verification purposes; the
  // digest payload additionally specifies the algorithm used.
  data.DataContainerRef script = 8;

  // Source-map file path for the embedded script, if generated as an external file.
  data.DataContainerRef sourcemap = 9;
}
