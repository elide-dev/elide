/*
 * Copyright Â© 2022, The Elide Framework Authors. All rights reserved.
 *
 * The Gust/Elide framework and tools, and all associated source or object computer code, except where otherwise noted,
 * are licensed under the Zero Prosperity license, which is enclosed in this repository, in the file LICENSE.txt. Use of
 * this code in object or source form requires and implies consent and agreement to that license in principle and
 * practice. Source or object code not listing this header, or unless specified otherwise, remain the property of
 * Elide LLC and its suppliers, if any. The intellectual and technical concepts contained herein are proprietary to
 * Elide LLC and its suppliers and may be covered by U.S. and Foreign Patents, or patents in process, and are protected
 * by trade secret and copyright law. Dissemination of this information, or reproduction of this material, in any form,
 * is strictly forbidden except in adherence with assigned license requirements.
 */

/*
 * Specifies common structures which are used to control Elide instances via the Elide Host Control API; these messages
 * live outside the borders of version control, so much retain backwards compatibility as they evolve.
 */
syntax = "proto3";
package elide.host;

import "elide/machine/machine.proto";
import "elide/net/ip.proto";
import "google/protobuf/timestamp.proto";

option optimize_for = SPEED;
option cc_enable_arenas = true;
option java_multiple_files = true;
option java_string_check_utf8 = true;
option php_class_prefix = "ELD";
option swift_prefix = "Elide";
option objc_class_prefix = "ELD";
option java_package = "tools.elide.call";
option csharp_namespace = "Elide.Call";
option go_package = "github.com/elide-tools/elide/control;control";

// Enumerates statuses/states a host system may inhabit.
enum HostStatus {
  // The host's status is unknown, or otherwise unrecognized by this version of the protocol.
  HOST_STATUS_UNKNOWN = 0;
}

// Enumerates standard/known host capabilities.
enum HostCapability {
  // Unknown or unrecognized host capability; should not be used by regular code.
  HOST_CAPABILITY_UNKNOWN = 0;
}

// Specifies a suite of capabilities for a given host system.
message HostCapabilities {
  // Specifies capabilities supported by this host system.
  repeated HostCapabilities capability = 1;
}

// Specifies known information about a host's networking configuration.
message HostNetworking {
  // Capacity for this host's network interfaces, expressed in gigabits.
  uint32 capacity = 1;

  // IP addresses assigned to the host.
  repeated elide.net.IpAddress address = 2;
}

// Top-level record which describes host system information.
message HostSystem {
  // Unique hostname or identifying name for this host system.
  string name = 1;

  // Display name for this host system, if available/applicable.
  string display_name = 2;

  // Describes information about the underlying machine.
  elide.machine.Machine machine = 3;

  // Discovered or declared capabilities for this host system.
  HostCapabilities capabilities = 4;

  // Specifies host networking information.
  HostNetworking networking = 5;
}

// Specifies a `HostSystem` record with active state.
message ActiveHostSystem {
  // Specifies the current host status.
  HostStatus status = 1;

  // Specifies the subject host system.
  HostSystem host = 2;

  // Last update timestamp.
  google.protobuf.Timestamp as_of = 3;
}
