/*
 * Copyright Â© 2022, The Elide Framework Authors. All rights reserved.
 *
 * The Gust/Elide framework and tools, and all associated source or object computer code, except where otherwise noted,
 * are licensed under the Zero Prosperity license, which is enclosed in this repository, in the file LICENSE.txt. Use of
 * this code in object or source form requires and implies consent and agreement to that license in principle and
 * practice. Source or object code not listing this header, or unless specified otherwise, remain the property of
 * Elide LLC and its suppliers, if any. The intellectual and technical concepts contained herein are proprietary to
 * Elide LLC and its suppliers and may be covered by U.S. and Foreign Patents, or patents in process, and are protected
 * by trade secret and copyright law. Dissemination of this information, or reproduction of this material, in any form,
 * is strictly forbidden except in adherence with assigned license requirements.
 */

/*
 * Specifies core structures related to cryptographic operations and primitives. These records and enumerates are used
 * throughout the codebase as a standard base set of definitions for hashing, encryption, and more.
 */
namespace elide.crypto;

// Enumerates TLS versions known to this protocol suite.
enum TlsVersion : int {
  // Indicates a protocol-incompatible enumeration value, or that TLS is not active.
  TLS_INACTIVE = 0,

  // Indicates that TLS 1.0 is active.
  TLSv1_0 = 1,

  // Indicates that TLS 1.1 is active.
  TLSv1_1 = 2,

  // Indicates that TLS 1.2 is active.
  TLSv1_2 = 3,

  // Indicates that TLS 1.3 is active.
  TLSv1_3 = 4,
}

// Specifies information about a TLS certificate.
table Certificate {
  // Specifies the TLS peer's certificate fingerprint, if any.
  fingerprint: [ubyte];

  // Specifies the certificate content, if available.
  certificate: [ubyte];
}

// Specifies information about the active TLS peer.
table TlsPeer {
  // Specifies the TLS peer's certificate, if any.
  certificate: Certificate;

  // Specifies the TLS peer's certificate chain, if any.
  chain: [Certificate];
}

// Specifies information about a TLS-enabled connection, as applicable.
table TlsConnectionInfo {
  // Specifies the TLS version in use.
  version: TlsVersion;

  // Specifies the TLS peer, if any.
  peer: TlsPeer;
}
