/*
 * Copyright Â© 2022, The Elide Framework Authors. All rights reserved.
 *
 * The Gust/Elide framework and tools, and all associated source or object computer code, except where otherwise noted,
 * are licensed under the Zero Prosperity license, which is enclosed in this repository, in the file LICENSE.txt. Use of
 * this code in object or source form requires and implies consent and agreement to that license in principle and
 * practice. Source or object code not listing this header, or unless specified otherwise, remain the property of
 * Elide LLC and its suppliers, if any. The intellectual and technical concepts contained herein are proprietary to
 * Elide LLC and its suppliers and may be covered by U.S. and Foreign Patents, or patents in process, and are protected
 * by trade secret and copyright law. Dissemination of this information, or reproduction of this material, in any form,
 * is strictly forbidden except in adherence with assigned license requirements.
 */

syntax = "proto3";
package elide.machine;

option optimize_for = SPEED;
option cc_enable_arenas = true;
option java_multiple_files = true;
option java_string_check_utf8 = true;
option php_class_prefix = "ELDM";
option swift_prefix = "ElideMachine";
option objc_class_prefix = "ELDM";
option java_package = "tools.elide.machine";
option csharp_namespace = "Elide.Machine";
option go_package = "github.com/elide-tools/elide/machine";

// Enumerates disk types known to this version of the protocol.
enum DiskType {
  // Unspecified disk type, or unrecognized type for this version of the protocol.
  DISK_TYPE_UNSPECIFIED = 0;

  // Hard-disk drive as disk type.
  HDD = 1;

  // Solid-state drive as disk type.
  SSD = 2;

  // In-memory RAM disk as disk type.
  RAM = 3;
}

// Disk attachment mode/access mode.
enum DiskMode {
  // Disk mode is unknown or unrecognized for this version of the protocol.
  DISK_MODE_UNKNOWN = 0;

  // Disk is attached in read-only mode.
  READ_ONLY = 1;

  // Disk is attached in read-write mode.
  READ_WRITE = 2;
}

// Specifies a disk attached to a machine, or associated in some context with a machine or application.
message Disk {
  // ID for this disk, if assigned/provisioned.
  string id = 1;

  // Type of disk described by this record.
  DiskType type = 2;

  // Operating mode for this disk.
  DiskMode mode = 3;

  // Disk capacity, expressed in gigabytes.
  uint32 capacity = 4;
}

// Describes disk arrangement and configuration for a single machine.
message DiskInfo {
  // Specifies the count of disks attached/associated with this configuration.
  uint32 count = 1;

  // Specifies the total capacity across all disks for this configuration.
  uint32 capacity = 2;

  // Specifies disks attached/associated with this configuration.
  repeated Disk disk = 3;
}
