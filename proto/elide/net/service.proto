/*
 * Copyright Â© 2022, The Elide Framework Authors. All rights reserved.
 *
 * The Gust/Elide framework and tools, and all associated source or object computer code, except where otherwise noted,
 * are licensed under the Zero Prosperity license, which is enclosed in this repository, in the file LICENSE.txt. Use of
 * this code in object or source form requires and implies consent and agreement to that license in principle and
 * practice. Source or object code not listing this header, or unless specified otherwise, remain the property of
 * Elide LLC and its suppliers, if any. The intellectual and technical concepts contained herein are proprietary to
 * Elide LLC and its suppliers and may be covered by U.S. and Foreign Patents, or patents in process, and are protected
 * by trade secret and copyright law. Dissemination of this information, or reproduction of this material, in any form,
 * is strictly forbidden except in adherence with assigned license requirements.
 */

syntax = "proto3";
package elide.net;

import "elide/net/domain.proto";
import "elide/net/ip.proto";
import "elide/net/port.proto";

option optimize_for = SPEED;
option cc_enable_arenas = true;
option java_multiple_files = true;
option java_string_check_utf8 = true;
option php_class_prefix = "ELDN";
option swift_prefix = "ElideNet";
option objc_class_prefix = "ELDN";
option java_package = "tools.elide.net";
option csharp_namespace = "Elide.Net";
option go_package = "github.com/elide-tools/elide/net";

// Enumerates visibility modes for application services.
enum ServiceVisibility {
  // Default visibility, which is internal.
  DEFAULT = 0;

  // Private, with fully controlled access.
  SERVICE_PRIVATE = 1;

  // Internal, with open access within private network borders.
  SERVICE_INTERNAL = 2;

  // Public and open access.
  SERVICE_PUBLIC = 3;
}

// Describes a generic network service.
message Service {
  // Port configuration for this service.
  elide.net.Port port = 1;

  // Describes the visibility of this service with regard to other services and the outside world.
  ServiceVisibility visibility = 2;

  // Aliases which should be mapped for this service.
  repeated string alias = 3;

  // Custom domains which should be mapped for this service.
  repeated string domain = 4;
}

// Specifies a mapped port for a configured application service.
message MappedServicePort {
  // Port configuration for this service.
  elide.net.Port port = 1;

  // External port.
  uint32 external = 2;

  // IP address for this mapped service port.
  elide.net.IpAddress address = 3;
}

// Mapped service information, after it has been rendered into a usable document.
message MappedService {
  // Service configuration for this mapping.
  Service service = 1;

  // Mapped port for this service.
  MappedServicePort mapped = 2;

  // Domain mappings for this service.
  repeated elide.net.Domain domain = 3;
}
