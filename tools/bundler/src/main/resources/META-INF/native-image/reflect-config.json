[
    {
        "name": "[B"
    },
    {
        "name": "[C"
    },
    {
        "name": "[D"
    },
    {
        "name": "[F"
    },
    {
        "name": "[I"
    },
    {
        "name": "[J"
    },
    {
        "name": "[Lcom.fasterxml.jackson.databind.deser.BeanDeserializerModifier;"
    },
    {
        "name": "[Lcom.fasterxml.jackson.databind.deser.Deserializers;"
    },
    {
        "name": "[Lcom.fasterxml.jackson.databind.deser.KeyDeserializers;"
    },
    {
        "name": "[Lcom.fasterxml.jackson.databind.deser.ValueInstantiators;"
    },
    {
        "name": "[Lcom.fasterxml.jackson.databind.ser.BeanSerializerModifier;"
    },
    {
        "name": "[Lcom.fasterxml.jackson.databind.ser.Serializers;"
    },
    {
        "name": "[Ljava.lang.String;"
    },
    {
        "name": "[Ljavax.management.openmbean.CompositeData;"
    },
    {
        "name": "[S"
    },
    {
        "name": "[Z"
    },
    {
        "name": "ch.qos.logback.classic.encoder.PatternLayoutEncoder",
        "queryAllPublicMethods": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "ch.qos.logback.classic.pattern.DateConverter",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "ch.qos.logback.classic.pattern.LevelConverter",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "ch.qos.logback.classic.pattern.LineSeparatorConverter",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "ch.qos.logback.classic.pattern.MessageConverter",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "ch.qos.logback.classic.pattern.color.HighlightingCompositeConverter",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "ch.qos.logback.core.ConsoleAppender",
        "queryAllPublicMethods": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "setWithJansi",
                "parameterTypes": [
                    "boolean"
                ]
            }
        ]
    },
    {
        "name": "ch.qos.logback.core.OutputStreamAppender",
        "methods": [
            {
                "name": "setEncoder",
                "parameterTypes": [
                    "ch.qos.logback.core.encoder.Encoder"
                ]
            }
        ]
    },
    {
        "name": "ch.qos.logback.core.encoder.LayoutWrappingEncoder",
        "methods": [
            {
                "name": "setParent",
                "parameterTypes": [
                    "ch.qos.logback.core.spi.ContextAware"
                ]
            }
        ]
    },
    {
        "name": "ch.qos.logback.core.pattern.PatternLayoutEncoderBase",
        "methods": [
            {
                "name": "setPattern",
                "parameterTypes": [
                    "java.lang.String"
                ]
            }
        ]
    },
    {
        "name": "ch.qos.logback.core.pattern.color.CyanCompositeConverter",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "ch.qos.logback.core.pattern.color.MagentaCompositeConverter",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "com.fasterxml.jackson.databind.ext.Java7SupportImpl",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "com.sun.management.GarbageCollectorMXBean",
        "queryAllPublicMethods": true
    },
    {
        "name": "com.sun.management.GcInfo",
        "queryAllPublicMethods": true
    },
    {
        "name": "com.sun.management.HotSpotDiagnosticMXBean",
        "queryAllPublicMethods": true
    },
    {
        "name": "com.sun.management.ThreadMXBean",
        "queryAllPublicMethods": true
    },
    {
        "name": "com.sun.management.UnixOperatingSystemMXBean",
        "queryAllPublicMethods": true
    },
    {
        "name": "com.sun.management.VMOption",
        "queryAllPublicMethods": true
    },
    {
        "name": "com.sun.management.internal.GarbageCollectorExtImpl",
        "queryAllPublicConstructors": true
    },
    {
        "name": "com.sun.management.internal.HotSpotDiagnostic",
        "queryAllPublicConstructors": true
    },
    {
        "name": "com.sun.management.internal.HotSpotThreadImpl",
        "queryAllPublicConstructors": true
    },
    {
        "name": "com.sun.management.internal.OperatingSystemImpl",
        "queryAllPublicConstructors": true
    },
    {
        "name": "com.sun.org.apache.xerces.internal.jaxp.SAXParserFactoryImpl",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "elide.tool.bundler.AbstractBundlerSubcommand",
        "queryAllDeclaredMethods": true,
        "allDeclaredFields": true
    },
    {
        "name": "elide.tool.bundler.Bundler",
        "queryAllDeclaredMethods": true,
        "allDeclaredFields": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "elide.tool.bundler.Bundler$Companion$ToolConfigurator",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "elide.tool.bundler.CommonBundleOptions",
        "queryAllDeclaredMethods": true,
        "allDeclaredFields": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "elide.tool.bundler.inspect.BundleInspectCommand",
        "queryAllDeclaredMethods": true,
        "allDeclaredFields": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "elide.tool.bundler.pack.BundlePackCommand",
        "queryAllDeclaredMethods": true,
        "allDeclaredFields": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "elide.tool.bundler.unpack.BundleUnpackCommand",
        "queryAllDeclaredMethods": true,
        "allDeclaredFields": true,
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.methvin.watchservice.MacOSXListeningWatchService"
    },
    {
        "name": "io.micronaut.aop.internal.InterceptorRegistryBean",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.context.event.ApplicationEventPublisherFactory",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.discovery.$DefaultCompositeDiscoveryClient$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.discovery.$DefaultServiceInstanceIdGenerator$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.discovery.cloud.digitalocean.$DigitalOceanInstanceMetadata$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.discovery.cloud.digitalocean.$DigitalOceanMetadataConfiguration$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.discovery.cloud.digitalocean.$DigitalOceanMetadataResolver$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.discovery.config.$DefaultCompositeConfigurationClient$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.health.$DefaultCurrentHealthStatus$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.health.$HealthStatus$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.health.$HeartbeatConfiguration$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.health.$HeartbeatDiscoveryClientCondition$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.health.$HeartbeatTask$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.MediaTypeConvertersRegistrar",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.bind.$DefaultRequestBinderRegistry$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.codec.$CodecConfiguration$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.converters.$HttpConverterRegistrar$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.cookie.$SameSiteConverter$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.hateoas.$AbstractResource$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.hateoas.$DefaultLink$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.hateoas.$GenericResource$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.hateoas.$JsonError$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.hateoas.$Resource$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.hateoas.$VndError$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.resource.$ResourceLoaderFactory$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.resource.$ResourceLoaderFactory$FileSystemResourceLoader1$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.resource.$ResourceLoaderFactory$GetClassPathResourceLoader0$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.resource.$ResourceLoaderFactory$ResourceResolver2$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.ssl.$ClientSslConfiguration$DefaultKeyConfiguration$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.ssl.$ClientSslConfiguration$DefaultKeyStoreConfiguration$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.ssl.$ClientSslConfiguration$DefaultTrustStoreConfiguration$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.ssl.$ClientSslConfiguration$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.ssl.$DefaultSslConfiguration$DefaultKeyConfiguration$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.ssl.$DefaultSslConfiguration$DefaultKeyStoreConfiguration$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.ssl.$DefaultSslConfiguration$DefaultTrustStoreConfiguration$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.ssl.$DefaultSslConfiguration$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.ssl.$ServerSslConfiguration$DefaultKeyConfiguration$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.ssl.$ServerSslConfiguration$DefaultKeyStoreConfiguration$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.ssl.$ServerSslConfiguration$DefaultTrustStoreConfiguration$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.ssl.$ServerSslConfiguration$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.http.util.$OutgoingHttpRequestProcessorImpl$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.inject.annotation.AnnotationConvertersRegistrar",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.inject.provider.BeanProviderDefinition",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.inject.provider.JakartaProviderBeanDefinition",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.inject.provider.JavaxProviderBeanDefinition"
    },
    {
        "name": "io.micronaut.jackson.$BeanConfiguration",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.jackson.$JacksonConfiguration$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.jackson.$ObjectMapperFactory$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.jackson.$ObjectMapperFactory$JsonFactory0$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.jackson.$ObjectMapperFactory$ObjectMapper1$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.jackson.codec.$JsonMediaTypeCodec$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.jackson.codec.$JsonStreamMediaTypeCodec$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.jackson.databind.$DatabindPropertyBinderExceptionHandler$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.jackson.databind.$JacksonDatabindMapper$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.jackson.databind.convert.$JacksonConverterRegistrar$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.jackson.kotlin.$KotlinModuleFactory$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.jackson.kotlin.$KotlinModuleFactory$KotlinModuleFactory0$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.jackson.modules.$BeanIntrospectionModule$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.jackson.serialize.$ConvertibleMultiValuesSerializer$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.jackson.serialize.$ConvertibleValuesSerializer$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.jackson.serialize.$JacksonObjectSerializer$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.jackson.serialize.$JsonNodeDeserializer$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.jackson.serialize.$JsonNodeSerializer$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.jackson.serialize.$OptionalValuesSerializer$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.jackson.serialize.$ResourceModule$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.jackson.serialize.$ResourceSerializerModifier$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.json.$JsonObjectSerializer$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.json.bind.$JsonBeanPropertyBinder$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.json.codec.$JsonMediaTypeCodec$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.json.codec.$JsonStreamMediaTypeCodec$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.json.convert.$JsonConverterRegistrar$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.logging.$LogLevel$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.logging.$PropertiesLoggingLevelsConfigurer$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.logging.impl.$Log4jLoggingSystem$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.logging.impl.$LogbackLoggingSystem$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.reactive.flow.converters.$FlowConverterRegistrar$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.reactive.reactor.instrument.$ReactorInstrumentation$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.reactive.reactor.instrument.$ReactorInstrumentation$ReactorInstrumenterFactory$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.retry.annotation.$DefaultRetryPredicate$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.retry.intercept.$DefaultRetryInterceptor$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.retry.intercept.$RecoveryInterceptor$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.runtime.$ApplicationConfiguration$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.runtime.$ApplicationConfiguration$InstanceConfiguration$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.runtime.context.$CompositeMessageSource$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.runtime.context.env.$ConfigurationIntroductionAdvice$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.runtime.context.scope.$ThreadLocalCustomScope$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.runtime.context.scope.refresh.$RefreshInterceptor$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.runtime.context.scope.refresh.$RefreshScope$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.runtime.converters.reactive.$ReactiveTypeConverterRegistrar$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.runtime.converters.time.TimeConverterRegistrar",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.runtime.http.codec.$MediaTypeCodecRegistryFactory$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.runtime.http.codec.$MediaTypeCodecRegistryFactory$MediaTypeCodecRegistry0$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.runtime.http.codec.$TextPlainCodec$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.runtime.http.scope.$RequestCustomScope$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.runtime.server.watch.event.$FileWatchRestartListener$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.scheduling.$DefaultTaskExceptionHandler$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.scheduling.$ScheduledExecutorTaskScheduler$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.scheduling.async.$AsyncInterceptor$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.scheduling.executor.$DefaultExecutorSelector$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.scheduling.executor.$DefaultThreadFactory$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.scheduling.executor.$DefaultThreadFactory$ThreadFactory0$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.scheduling.executor.$ExecutorFactory$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.scheduling.executor.$ExecutorFactory$EventLoopGroupThreadFactory0$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.scheduling.executor.$ExecutorFactory$ExecutorService1$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.scheduling.executor.$IOExecutorServiceConfig$Configuration0$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.scheduling.executor.$IOExecutorServiceConfig$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.scheduling.executor.$ScheduledExecutorServiceConfig$Configuration0$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.scheduling.executor.$ScheduledExecutorServiceConfig$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.scheduling.executor.$UserExecutorConfiguration$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.scheduling.executor.$UserExecutorConfiguration$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.scheduling.instrument.$ExecutorServiceInstrumenter$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.scheduling.io.watch.$DefaultWatchThread$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.scheduling.io.watch.$FileWatchCondition$IntrospectionRef",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.scheduling.io.watch.$FileWatchConfiguration$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.scheduling.io.watch.$WatchServiceFactory$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.scheduling.io.watch.$WatchServiceFactory$WatchService0$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.scheduling.io.watch.osx.$MacOsWatchServiceFactory$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.scheduling.io.watch.osx.$MacOsWatchServiceFactory$MacWatchService0$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.scheduling.io.watch.osx.$MacOsWatchThread$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "io.micronaut.scheduling.processor.$ScheduledMethodProcessor$Definition$Reference",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "java.io.FilePermission"
    },
    {
        "name": "java.lang.Boolean",
        "fields": [
            {
                "name": "TYPE"
            }
        ]
    },
    {
        "name": "java.lang.Byte",
        "fields": [
            {
                "name": "TYPE"
            }
        ]
    },
    {
        "name": "java.lang.Character",
        "fields": [
            {
                "name": "TYPE"
            }
        ]
    },
    {
        "name": "java.lang.ClassValue"
    },
    {
        "name": "java.lang.Deprecated",
        "queryAllPublicMethods": true
    },
    {
        "name": "java.lang.Double",
        "fields": [
            {
                "name": "TYPE"
            }
        ]
    },
    {
        "name": "java.lang.Float",
        "fields": [
            {
                "name": "TYPE"
            }
        ]
    },
    {
        "name": "java.lang.Integer",
        "fields": [
            {
                "name": "TYPE"
            }
        ]
    },
    {
        "name": "java.lang.Long",
        "fields": [
            {
                "name": "TYPE"
            }
        ]
    },
    {
        "name": "java.lang.Object",
        "queryAllDeclaredMethods": true,
        "allDeclaredFields": true
    },
    {
        "name": "java.lang.RuntimePermission"
    },
    {
        "name": "java.lang.Short",
        "fields": [
            {
                "name": "TYPE"
            }
        ]
    },
    {
        "name": "java.lang.StackTraceElement",
        "queryAllPublicMethods": true
    },
    {
        "name": "java.lang.String"
    },
    {
        "name": "java.lang.System",
        "methods": [
            {
                "name": "console",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "java.lang.Thread",
        "fields": [
            {
                "name": "threadLocalRandomProbe"
            }
        ],
        "methods": [
            {
                "name": "isVirtual",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "java.lang.Void",
        "fields": [
            {
                "name": "TYPE"
            }
        ]
    },
    {
        "name": "java.lang.management.BufferPoolMXBean",
        "queryAllPublicMethods": true
    },
    {
        "name": "java.lang.management.ClassLoadingMXBean",
        "queryAllPublicMethods": true
    },
    {
        "name": "java.lang.management.CompilationMXBean",
        "queryAllPublicMethods": true
    },
    {
        "name": "java.lang.management.LockInfo",
        "queryAllPublicMethods": true
    },
    {
        "name": "java.lang.management.ManagementPermission",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "java.lang.String"
                ]
            }
        ]
    },
    {
        "name": "java.lang.management.MemoryMXBean",
        "queryAllPublicMethods": true
    },
    {
        "name": "java.lang.management.MemoryManagerMXBean",
        "queryAllPublicMethods": true
    },
    {
        "name": "java.lang.management.MemoryPoolMXBean",
        "queryAllPublicMethods": true
    },
    {
        "name": "java.lang.management.MemoryUsage",
        "queryAllPublicMethods": true
    },
    {
        "name": "java.lang.management.MonitorInfo",
        "queryAllPublicMethods": true
    },
    {
        "name": "java.lang.management.PlatformLoggingMXBean",
        "queryAllPublicMethods": true,
        "methods": [
            {
                "name": "getLoggerLevel",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "getLoggerNames",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "getParentLoggerName",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "setLoggerLevel",
                "parameterTypes": [
                    "java.lang.String",
                    "java.lang.String"
                ]
            }
        ]
    },
    {
        "name": "java.lang.management.RuntimeMXBean",
        "queryAllPublicMethods": true
    },
    {
        "name": "java.lang.management.ThreadInfo",
        "fields": [
            {
                "name": "virtual"
            }
        ],
        "queryAllPublicMethods": true
    },
    {
        "name": "java.math.BigDecimal"
    },
    {
        "name": "java.math.BigInteger"
    },
    {
        "name": "java.net.NetPermission"
    },
    {
        "name": "java.net.SocketPermission"
    },
    {
        "name": "java.net.URLPermission",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "java.lang.String",
                    "java.lang.String"
                ]
            }
        ]
    },
    {
        "name": "java.nio.file.Path"
    },
    {
        "name": "java.nio.file.Paths",
        "methods": [
            {
                "name": "get",
                "parameterTypes": [
                    "java.lang.String",
                    "java.lang.String[]"
                ]
            }
        ]
    },
    {
        "name": "java.security.AllPermission"
    },
    {
        "name": "java.security.SecureRandomParameters"
    },
    {
        "name": "java.security.SecurityPermission"
    },
    {
        "name": "java.sql.Connection"
    },
    {
        "name": "java.sql.Driver"
    },
    {
        "name": "java.sql.DriverManager",
        "methods": [
            {
                "name": "getConnection",
                "parameterTypes": [
                    "java.lang.String"
                ]
            },
            {
                "name": "getDriver",
                "parameterTypes": [
                    "java.lang.String"
                ]
            }
        ]
    },
    {
        "name": "java.sql.Time",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "long"
                ]
            }
        ]
    },
    {
        "name": "java.sql.Timestamp",
        "methods": [
            {
                "name": "valueOf",
                "parameterTypes": [
                    "java.lang.String"
                ]
            }
        ]
    },
    {
        "name": "java.time.Duration",
        "methods": [
            {
                "name": "parse",
                "parameterTypes": [
                    "java.lang.CharSequence"
                ]
            }
        ]
    },
    {
        "name": "java.time.Instant",
        "methods": [
            {
                "name": "parse",
                "parameterTypes": [
                    "java.lang.CharSequence"
                ]
            }
        ]
    },
    {
        "name": "java.time.LocalDate",
        "methods": [
            {
                "name": "parse",
                "parameterTypes": [
                    "java.lang.CharSequence"
                ]
            }
        ]
    },
    {
        "name": "java.time.LocalDateTime",
        "methods": [
            {
                "name": "parse",
                "parameterTypes": [
                    "java.lang.CharSequence"
                ]
            }
        ]
    },
    {
        "name": "java.time.LocalTime",
        "methods": [
            {
                "name": "parse",
                "parameterTypes": [
                    "java.lang.CharSequence"
                ]
            }
        ]
    },
    {
        "name": "java.time.MonthDay",
        "methods": [
            {
                "name": "parse",
                "parameterTypes": [
                    "java.lang.CharSequence"
                ]
            }
        ]
    },
    {
        "name": "java.time.OffsetDateTime",
        "methods": [
            {
                "name": "parse",
                "parameterTypes": [
                    "java.lang.CharSequence"
                ]
            }
        ]
    },
    {
        "name": "java.time.OffsetTime",
        "methods": [
            {
                "name": "parse",
                "parameterTypes": [
                    "java.lang.CharSequence"
                ]
            }
        ]
    },
    {
        "name": "java.time.Period",
        "methods": [
            {
                "name": "parse",
                "parameterTypes": [
                    "java.lang.CharSequence"
                ]
            }
        ]
    },
    {
        "name": "java.time.Year",
        "methods": [
            {
                "name": "parse",
                "parameterTypes": [
                    "java.lang.CharSequence"
                ]
            }
        ]
    },
    {
        "name": "java.time.YearMonth",
        "methods": [
            {
                "name": "parse",
                "parameterTypes": [
                    "java.lang.CharSequence"
                ]
            }
        ]
    },
    {
        "name": "java.time.ZoneId",
        "methods": [
            {
                "name": "of",
                "parameterTypes": [
                    "java.lang.String"
                ]
            }
        ]
    },
    {
        "name": "java.time.ZoneOffset",
        "methods": [
            {
                "name": "of",
                "parameterTypes": [
                    "java.lang.String"
                ]
            }
        ]
    },
    {
        "name": "java.time.ZonedDateTime",
        "methods": [
            {
                "name": "parse",
                "parameterTypes": [
                    "java.lang.CharSequence"
                ]
            }
        ]
    },
    {
        "name": "java.util.Date"
    },
    {
        "name": "java.util.PropertyPermission",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "java.lang.String",
                    "java.lang.String"
                ]
            }
        ]
    },
    {
        "name": "java.util.ResourceBundle",
        "methods": [
            {
                "name": "getBaseBundleName",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "java.util.concurrent.atomic.AtomicBoolean",
        "fields": [
            {
                "name": "value"
            }
        ]
    },
    {
        "name": "java.util.concurrent.atomic.AtomicReference",
        "fields": [
            {
                "name": "value"
            }
        ]
    },
    {
        "name": "java.util.concurrent.atomic.Striped64",
        "fields": [
            {
                "name": "base"
            },
            {
                "name": "cellsBusy"
            }
        ]
    },
    {
        "name": "java.util.logging.LogManager",
        "methods": [
            {
                "name": "getLoggingMXBean",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "java.util.logging.LoggingMXBean",
        "queryAllPublicMethods": true
    },
    {
        "name": "javax.management.MBeanOperationInfo",
        "queryAllPublicMethods": true,
        "methods": [
            {
                "name": "getSignature",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "javax.management.MBeanServerBuilder",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "javax.management.ObjectName"
    },
    {
        "name": "javax.management.openmbean.CompositeData"
    },
    {
        "name": "javax.management.openmbean.OpenMBeanOperationInfoSupport"
    },
    {
        "name": "javax.management.openmbean.TabularData"
    },
    {
        "name": "javax.management.remote.rmi.RMIServer",
        "queryAllPublicMethods": true,
        "methods": [
            {
                "name": "getVersion",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "newClient",
                "parameterTypes": [
                    "java.lang.Object"
                ]
            }
        ]
    },
    {
        "name": "javax.management.remote.rmi.RMIServerImpl_Stub",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "java.rmi.server.RemoteRef"
                ]
            }
        ]
    },
    {
        "name": "jdk.management.jfr.ConfigurationInfo",
        "queryAllPublicMethods": true
    },
    {
        "name": "jdk.management.jfr.EventTypeInfo",
        "queryAllPublicMethods": true
    },
    {
        "name": "jdk.management.jfr.FlightRecorderMXBean",
        "queryAllPublicMethods": true
    },
    {
        "name": "jdk.management.jfr.FlightRecorderMXBeanImpl",
        "queryAllPublicConstructors": true
    },
    {
        "name": "jdk.management.jfr.RecordingInfo",
        "queryAllPublicMethods": true
    },
    {
        "name": "jdk.management.jfr.SettingDescriptorInfo",
        "queryAllPublicMethods": true
    },
    {
        "name": "kotlin.Metadata",
        "queryAllDeclaredMethods": true,
        "methods": [
            {
                "name": "bv",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "d1",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "d2",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "k",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "mv",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "pn",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "xi",
                "parameterTypes": [
                    
                ]
            },
            {
                "name": "xs",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "kotlin.SafePublicationLazyImpl",
        "fields": [
            {
                "name": "_value"
            }
        ]
    },
    {
        "name": "kotlin.Unit"
    },
    {
        "name": "kotlin.jvm.internal.DefaultConstructorMarker"
    },
    {
        "name": "kotlin.reflect.jvm.internal.ReflectionFactoryImpl",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "picocli.CommandLine$AutoHelpMixin",
        "queryAllDeclaredMethods": true,
        "allDeclaredFields": true
    },
    {
        "name": "sun.management.ClassLoadingImpl",
        "queryAllPublicConstructors": true
    },
    {
        "name": "sun.management.CompilationImpl",
        "queryAllPublicConstructors": true
    },
    {
        "name": "sun.management.ManagementFactoryHelper$1",
        "queryAllPublicConstructors": true
    },
    {
        "name": "sun.management.ManagementFactoryHelper$PlatformLoggingImpl",
        "queryAllPublicConstructors": true
    },
    {
        "name": "sun.management.MemoryImpl",
        "queryAllPublicConstructors": true
    },
    {
        "name": "sun.management.MemoryManagerImpl",
        "queryAllPublicConstructors": true
    },
    {
        "name": "sun.management.MemoryPoolImpl",
        "queryAllPublicConstructors": true
    },
    {
        "name": "sun.management.RuntimeImpl",
        "queryAllPublicConstructors": true
    },
    {
        "name": "sun.rmi.transport.DGCImpl_Skel",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "sun.rmi.transport.DGCImpl_Stub",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "java.rmi.server.RemoteRef"
                ]
            }
        ]
    },
    {
        "name": "sun.security.provider.NativePRNG",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    },
    {
        "name": "sun.security.provider.SHA",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    
                ]
            }
        ]
    }
]