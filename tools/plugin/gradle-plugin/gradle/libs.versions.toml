[versions]
elide = "1.0-v3-alpha3-b8"
ksp = "1.8.21-1.0.11"
detekt = "1.22.0"
kotlin = "1.8.21"
kotlin_dsl = "4.0.7"
ktlint = "0.48.2"
ktlintGradle = "11.3.1"
kotlinx_coroutines = "1.7.0"
kotlinx_collections = "0.3.5"
kotlinx_datetime = "0.4.0"
kotlinx_serialization = "1.5.0"
kotlinx_abiValidator = "0.12.1"
google_api_common = "2.5.0"
google_html_types = "1.0.8"
atomicfu = "0.20.0"
pluginPublish = "0.21.0"
pluginProtobuf = "0.9.2"
versionCheck = "0.46.0"
nodePlugin = "3.5.1"
sonar = "4.0.0.2929"
protobuf = "3.21.11"
truth = "1.1.3"
picocli = "4.7.1"
slf4j = "1.7.36"
brotli4j = "1.9.0"
gson = "2.10.1"
guava = "31.1-jre"
checker_compat_qual = "2.5.5"
npm_esbuild = "0.16.1"
npm_prepack = "0.2.54"
commons_compress = "1.22"
shadow_plugin = "7.1.2"
soy = "2022-10-26"
closure = "v20230103"
closure_stylesheets = "1.5.0"
buildconfig_plugin = "3.1.0"
auto_service = "1.0.1"
kover = "0.7.0-Beta"
testLoggerPlugin = "3.2.0"

micronaut = "3.9.1"
micronaut_plugin = "3.7.9"

[plugins]
detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detekt" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
kotlin_kapt = { id = "org.jetbrains.kotlin.kapt", version.ref = "kotlin" }
kotlin_js = { id = "org.jetbrains.kotlin.js", version.ref = "kotlin" }
kotlin_jvm = { id = "org.jetbrains.kotlin.js", version.ref = "kotlin" }
kotlin_plugin_noarg = { id = "org.jetbrains.kotlin.plugin.noarg", version.ref = "kotlin" }
kotlin_plugin_allopen = { id = "org.jetbrains.kotlin.plugin.allopen", version.ref = "kotlin" }
kotlin_plugin_atomicfu = { id = "org.jetbrains.kotlin.plugin.atomicfu", version.ref = "kotlin" }
kotlinx_plugin_abiValidator = { id = "org.jetbrains.kotlinx.binary-compatibility-validator", version.ref = "kotlinx_abiValidator" }
kover = { id = "org.jetbrains.kotlinx.kover", version.ref = "kover" }
testLogger = { id = "com.adarshr.test-logger", version.ref = "testLoggerPlugin" }

micronaut_application = { id = "io.micronaut.application", version.ref = "micronaut_plugin" }
micronaut_aot = { id = "io.micronaut.aot", version.ref = "micronaut_plugin" }
micronaut_crac = { id = "io.micronaut.crac", version.ref = "micronaut_plugin" }
micronaut_component = { id = "io.micronaut.component", version.ref = "micronaut_plugin" }
micronaut_library = { id = "io.micronaut.library", version.ref = "micronaut_plugin" }
micronaut_graalvm = { id = "io.micronaut.graalvm", version.ref = "micronaut_plugin" }
micronaut_docker = { id = "io.micronaut.docker", version.ref = "micronaut_plugin" }
micronaut_minimal_application = { id = "io.micronaut.minimal.application", version.ref = "micronaut_plugin" }
micronaut_minimal_library = { id = "io.micronaut.minimal.library", version.ref = "micronaut_plugin" }
micronaut_test_resources = { id = "io.micronaut.test-resources", version.ref = "micronaut_plugin" }
micronaut_test_resourcesConsumer = { id = "io.micronaut.test-resources-consumer", version.ref = "micronaut_plugin" }

buildConfig = { id = "com.github.gmazzo.buildconfig", version.ref = "buildconfig_plugin" }
ktlint = { id = "org.jlleitschuh.gradle.ktlint", version.ref = "ktlintGradle" }
sonar = { id = "org.sonarqube", version.ref = "sonar" }
node = { id = "com.github.node-gradle.node", version.ref = "nodePlugin" }
protobuf = { id = "com.google.protobuf", version.ref = "pluginProtobuf" }
pluginPublish = { id = "com.gradle.plugin-publish", version.ref = "pluginPublish" }
versionCheck = { id = "com.github.ben-manes.versions", version.ref = "versionCheck" }
shadow = { id = "com.github.johnrengelman.shadow", version.ref = "shadow_plugin" }

[libraries]
junit = "junit:junit:4.13.2"
guava = { group = "com.google.guava", name = "guava", version.ref = "guava" }
protobuf_java = { group = "com.google.protobuf", name = "protobuf-java", version.ref = "protobuf" }
protobuf_util = { group = "com.google.protobuf", name = "protobuf-java-util", version.ref = "protobuf" }
protobuf_kotlin = { group = "com.google.protobuf", name = "protobuf-kotlin", version.ref = "protobuf" }
gradle_kotlin_dsl = { group = "org.gradle.kotlin", name = "gradle-kotlin-dsl-plugins", version.ref = "kotlin_dsl" }
kotlin_samWithReceiver = { group = "org.jetbrains.kotlin", name = "kotlin-sam-with-receiver", version.ref = "kotlin" }
kotlinx_coroutines_core = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-core", version.ref = "kotlinx_coroutines" }
kotlinx_coroutines_core_jvm = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-core-jvm", version.ref = "kotlinx_coroutines" }
kotlinx_coroutines_jdk9 = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-jdk9", version.ref = "kotlinx_coroutines" }
kotlinx_coroutines_guava = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-guava", version.ref = "kotlinx_coroutines" }
kotlinx_collections_immutable = { group = "org.jetbrains.kotlinx", name = "kotlinx-collections-immutable", version.ref = "kotlinx_collections" }
kotlinx_datetime = { group = "org.jetbrains.kotlinx", name = "kotlinx-datetime", version.ref = "kotlinx_datetime" }
kotlinx_serialization_core = { group = "org.jetbrains.kotlinx", name = "kotlinx-serialization-core", version.ref = "kotlinx_serialization" }
kotlinx_serialization_core_jvm = { group = "org.jetbrains.kotlinx", name = "kotlinx-serialization-core-jvm", version.ref = "kotlinx_serialization" }
kotlinx_serialization_json = { group = "org.jetbrains.kotlinx", name = "kotlinx-serialization-json", version.ref = "kotlinx_serialization" }
kotlinx_serialization_json_jvm = { group = "org.jetbrains.kotlinx", name = "kotlinx-serialization-json-jvm", version.ref = "kotlinx_serialization" }
kotlinx_serialization_protobuf = { group = "org.jetbrains.kotlinx", name = "kotlinx-serialization-protobuf", version.ref = "kotlinx_serialization" }
kotlinx_serialization_protobuf_jvm = { group = "org.jetbrains.kotlinx", name = "kotlinx-serialization-protobuf-jvm", version.ref = "kotlinx_serialization" }
google_api_common = { group = "com.google.api", name = "api-common", version.ref = "google_api_common" }
google_common_html_types_proto = { group = "com.google.common.html.types", name = "proto", version.ref = "google_html_types" }
google_common_html_types_types = { group = "com.google.common.html.types", name = "types", version.ref = "google_html_types" }
ksp = { group = "com.google.devtools.ksp", name = "symbol-processing-api", version.ref = "ksp" }
truth = { group = "com.google.truth", name = "truth", version.ref = "truth" }
truth_proto = { group = "com.google.truth.extensions", name = "truth-proto-extension", version.ref = "truth" }
picocli = { group = "info.picocli", name = "picocli", version.ref = "picocli" }
picocli_codegen = { group = "info.picocli", name = "picocli-codegen", version.ref = "picocli" }
slf4j = { group = "org.slf4j", name = "slf4j-api", version.ref = "slf4j" }
brotli = { group = "com.aayushatharva.brotli4j", name = "brotli4j", version.ref = "brotli4j" }
brotli_native_osx = { group = "com.aayushatharva.brotli4j", name = "native-osx-x86_64", version.ref = "brotli4j" }
brotli_native_linux = { group = "com.aayushatharva.brotli4j", name = "native-linux-x86_64", version.ref = "brotli4j" }
brotli_native_windows = { group = "com.aayushatharva.brotli4j", name = "native-windows-x86_64", version.ref = "brotli4j" }
gson = { group = "com.google.code.gson", name = "gson", version.ref = "gson" }
gson_parent = { group = "com.google.code.gson", name = "gson-parent", version.ref = "gson" }
checker = { group = "org.checkerframework", name = "checker-compat-qual", version.ref = "checker_compat_qual" }
commons_compress = { group = "org.apache.commons", name = "commons-compress", version.ref = "commons_compress" }
closure_templates = { group = "com.google.template", name = "soy", version.ref = "soy" }
closure_compiler = { group = "com.google.javascript", name = "closure-compiler", version.ref = "closure" }
closure_stylesheets = { group = "com.google.closure-stylesheets", name = "closure-stylesheets", version.ref = "closure_stylesheets" }
autoService_ksp = { module = "dev.zacsweers.autoservice:auto-service-ksp", version = "1.0.0" }
google_auto_service = { group = "com.google.auto.service", name = "auto-service", version.ref = "auto_service" }
google_auto_service_annotations = { group = "com.google.auto.service", name = "auto-service-annotations", version.ref = "auto_service" }

elide_core = { group = "dev.elide", name = "elide-core", version.ref = "elide" }
elide_base = { group = "dev.elide", name = "elide-base", version.ref = "elide" }
elide_ssg = { group = "dev.elide", name = "elide-ssg", version.ref = "elide" }
elide_server = { group = "dev.elide", name = "elide-server", version.ref = "elide" }
elide_proto_legacy = { group = "dev.elide", name = "proto", version = "1.0-v3-alpha1-rc38" }
#elide_proto_core = { group = "dev.elide", name = "elide-proto-core", version.ref = "elide" }
#elide_proto_protobuf = { group = "dev.elide", name = "elide-proto-protobuf", version.ref = "elide" }
#elide_proto_flatbuffers = { group = "dev.elide", name = "elide-proto-flatbuffers", version.ref = "elide" }
#elide_proto_kotlinx = { group = "dev.elide", name = "elide-proto-kotlinx", version.ref = "elide" }
elide_tools_processor = { group = "dev.elide", name = "elide-ksp-processor", version.ref = "elide" }
elide_tools_conventions = { group = "dev.elide", name = "elide-convention-plugins", version.ref = "elide" }
elide_tools_substrate = { group = "dev.elide", name = "elide-substrate", version.ref = "elide" }
elide_bom_catalog = { group = "dev.elide", name = "elide-bom", version.ref = "elide" }
elide_bom_platform = { group = "dev.elide", name = "elide-platform", version.ref = "elide" }
elide_kotlin_plugin_injekt = { group = "dev.elide", name = "kotlin-injekt-plugin", version.ref = "elide" }
elide_kotlin_plugin_interakt = { group = "dev.elide", name = "kotlin-interakt-plugin", version.ref = "elide" }
elide_kotlin_plugin_redakt = { group = "dev.elide", name = "kotlin-redakt-plugin", version.ref = "elide" }
elide_kotlin_plugin_sekret = { group = "dev.elide", name = "kotlin-sekret-plugin", version.ref = "elide" }

plugin_kover = { group = "org.jetbrains.kotlinx", name = "kover-gradle-plugin", version.ref = "kover" }
plugin_detekt = { group = "io.gitlab.arturbosch.detekt", name = "detekt-gradle-plugin", version.ref = "detekt" }
plugin_node = { group = "com.github.node-gradle", name = "gradle-node-plugin", version.ref = "nodePlugin" }
plugin_sonar = { group = "org.sonarsource.scanner.gradle", name = "sonarqube-gradle-plugin", version.ref = "sonar" }
plugin_versionCheck = { group = "com.github.ben-manes", name = "gradle-versions-plugin", version.ref = "versionCheck" }
plugin_testLogger = { group = "com.adarshr", name = "gradle-test-logger-plugin", version.ref = "testLoggerPlugin" }
plugin_buildConfig = { group = "com.github.gmazzo", name = "gradle-buildconfig-plugin", version.ref = "buildconfig_plugin" }
plugin_kotlin_allopen = { group = "org.jetbrains.kotlin", name = "kotlin-allopen", version.ref = "kotlin" }
plugin_kotlin_noarg = { group = "org.jetbrains.kotlin", name = "kotlin-noarg", version.ref = "kotlin" }
plugin_kotlinx_atomicfu = { group = "org.jetbrains.kotlinx", name = "atomicfu-gradle-plugin", version.ref = "atomicfu" }
plugin_kotlinx_serialization = { group = "org.jetbrains.kotlin", name = "kotlin-serialization", version.ref = "kotlin" }
